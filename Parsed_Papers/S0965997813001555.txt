@&#MAIN-TITLE@&#MO-PSE: Adaptive multi-objective particle swarm optimization based design space exploration in architectural synthesis for application specific processor design

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Novel DSE methodology employing PSO for multi-objective trade-off was proposed.


                        
                        
                           
                           A novel fitness function for solution assessment based on power parameter was introduced.


                        
                        
                           
                           A novel mutation algorithm for improving DSE convergence and exploration time was presented.


                        
                        
                           
                           Novel perturbation algorithm to handle boundary outreach problem during DSE was presented.


                        
                        
                           
                           Average improvement in QoR ∼ 9% and reduction in time > 90% was obtained compared to recent GA DSE.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Particle swarm optimization

Design space exploration

Power

Execution time

Mutation

High level synthesis

Application specific processor

Adaptive perturbation

@&#ABSTRACT@&#


               
               
                  Architectural synthesis has gained rapid dominance in the design flows of application specific computing. Exploring an optimal design point during architectural synthesis is a tedious task owing to the orthogonal issues of reducing exploration time and enhancing design quality as well as resolving the conflicting parameters of power and performance. This paper presents a novel design space exploration (DSE) methodology multi-objective particle swarm exploration MO-PSE, based on the particle swarm optimization (PSO) for designing application specific processor (ASP). To the best of the authors’ knowledge, this is the first work that directly maps a complete PSO process for multi-objective DSE for power-performance trade-off of application specific processors. Therefore, the major contributions of the paper are: (i) Novel DSE methodology employing a particle swarm optimization process for multi-objective tradeoff, (ii) Introduction of a novel model for power parameter used during evaluation of design points in MO-PSE, (iii) A novel fitness function used for design quality assessment, (iv) A novel mutation algorithm for improving DSE convergence and exploration time, (v) Novel perturbation algorithm to handle boundary outreach problem during exploration and (vi) Results of comparison performed during multiple experiments that indicates average improvement in the quality of results (QoR) achieved is around 9% and average reduction in exploration time of greater than 90% compared to recent genetic algorithm (GA) based DSE approaches. The paper also reports results based on the variation and impact of different PSO parameters such as swarm size, inertia weight, acceleration coefficient, and termination condition on multi-objective DSE.
               
            

multi-objective particle swarm exploration

design space exploration

high level synthesis

particle swarm optimization

system on chip

lower boundary of design space

upper boundary of design space

resource configuration

resource configuration (position) of ith particle dth dimension

resource configuration (position) of ith particle

new resource configuration (position) of ith particle dth dimension

local best resource configuration of ith particle

global best resource configuration

local best resource configuration

velocity

velocity of ith particle dth dimension

new velocity of ith particle dth dimension

fitness function

local best fitness of ith particle

global best fitness among all particle

number of Iteration

current iteration

number of particle (in Figs. 1 and 2 
                        n
                        =Ns)

number of dimension

current dimension

minimum power consumed by resource configuration

power consumption constrained specified by user

maximum power consumed by resource c configuration

total power consumed by resource configuration

minimum execution time taken by a resource configuration

execution time constrained specified by user

maximum execution time taken by a resource configuration

execution time taken by a resource configuration

stopping criterion

@&#INTRODUCTION@&#

High level synthesis (HLS)/architectural synthesis is a process of accepting a set of specifications for the required behavior of a system, together with a set of constraints to be met for finding a register transfer level (RTL) structure that implements the behavior while simultaneously meeting the user constraints [1]. A major advantage of HLS compared to RTL synthesis is its design space exploration capabilities. HLS allows evaluation of a number of architectures at the very beginning of the design process (at a very high abstraction level) to choose the best solution with respect to the given design specifications. The design space exploration is the most crucial segment in the development process. Exploring the design space generally involves optimization of multiple conflicting issues. This DSE process requires accurate tradeoffs between conflicting objectives. DSE in HLS has now become an industry defacto standard for designing of ASP (or application specific integrated circuits). Therefore, the general aim of a DSE process in HLS during custom processor design (such as application specific integrated circuits (ASIC)) is to find an optimal architecture among its competitor variances that fulfils the multiple conflicting objectives as well as some other orthogonal issues as discussed in the upcoming paragraph [2,30].

It is well known that for very large scale integration (VLSI) designs of custom application, the design process is characterized by combined use of heterogeneous techniques, methodologies in which an architectural model is gradually produced step by step on the basis of the application specification. The designing of such custom ASP has been relatively dissimilar from the general purpose processor counterparts. Further, the developments of ASP in recent years have only been possible due to drastic advancements in the field of DSE. DSE is a process of exploring optimal system architecture for a design based on user provided multiple constraints of power, circuit area, performance, etc. The focus of the research community currently still has mostly been towards optimizing data intensive applications (i.e. applications requiring heavy computation) used in the areas of signal processing, multimedia, etc.). This is because despite of some descent advancements in this area, the techniques falls short in comprehensively proposing a universal and concurrent solution to two fold orthogonal problem encountered during DSE viz. (a) striking an efficient balance between conflicting parameters (say power and performance); as well as (b) maintaining a fast exploration process that maximizes the QoR to a large extent. In order to dwell deep into the problem, the researchers have not sufficiently investigated the effect of hybridizing modern techniques such as swarm intelligence with HLS design problems to search for a superior outcome. Motivating from this fact, this paper investigates and proposes a first of its kind direct full mapping driven PSO based DSE methodology for ASP’s that efficiently concurrently solves the two fold orthogonal issues discussed formerly [2,5,16,19,20].

For the sake of clarity, the abbreviation and symbols used in the rest of the paper given below.

The rest of the paper is organized as follows: Section 2 discusses the related works in the area of DSE in HLS. Section 3 presents basic background of PSO. The proposed MO-PSE based DSE has been introduced in Section 4. Section 5 presents and analyzes the experimental results for various benchmarks. Section 6 concludes the paper.

@&#RELATED WORKS@&#

The field of DSE in HLS has been able to generate sufficient interest among researchers for quiet sometime now. In some works, such as in [6], the authors have proposed a discrete particle swarm optimization based DSE in HLS. The work partially relates the PSO with DSE problem. However, the technique has some major drawbacks. The authors have not considered the concept of local best (cognitive factor) while exploration. While updating the particles’ velocity, the authors updated only direction (step length was kept constant). Therefore, if a particle is far away from an optimal solution, it will take more iteration. Moreover, the authors divided the swarm into sub-swarms and each objective was accomplished by one sub-swarm only. Hence, the technique required a large swarm size which may lead to heavy computation time per iteration. Besides, no concept of mutation and boundary overreach perturbation is presented to introduce sudden diversity and control unwarranted drift. But, our proposed approach included both social factor as well as cognitive factor while determining new velocity during exploration. In our proposed approach every swarm explores the design space with consideration of all conflicting objective simultaneously. Besides, we have been able successfully able to map the complete PSO process on multi-objective problems including novel steps for initialization, velocity calculation, mutation, perturbation and fitness evaluation. In [7], authors have proposed a fuzzy-based DSE scheme using hierarchical criterion method. The approach is partially based on fuzzy logics and fuzzy sets which mimics the ordered design space for the performance parameters. The approach is very promising for area-delay tradeoffs as compared to other current approaches. However, it lacks the capability to mostly produce optimal solutions. Further, no promising results for power performance tradeoff are presented. Research in [8] intimated that recognition of a few superior design points from the Pareto set is sufficient for an excellent design process. In [9] evolutionary algorithm such as the genetic algorithm (GA) has been proposed to yield better results for the DSE process. The problem of DSE was also covered in [10] by suggesting order of efficiency, which helps in determining preferences amongst the different Pareto optimal points. Work shown in [11] for DSE suggests that an evolutionary algorithm can be used for successful evaluation of the design for an application specific SoC. The use of GA has also been proposed in [4] as a promising framework for DSE of data paths in high level synthesis. Their work employs robust search capacities of the GA to resolve datapath synthesis of scheduling and allocation of resources. The fitness function in above approaches [8–11,4] does not use total execution time (as a function of latency, initiation interval and pipelined data sets) as objective parameter. In [3], the authors used multi structure chromosome representation for the datapath nodes for scheduling. The authors did not consider dynamic power while calculating total power. Another method was introduced by researchers in [12] which were based on Pareto optimal analysis. According to their work, the design space was ordered in the form of an architecture vector design space for architecture variant analysis and optimization of performance parameters. But the approach was not completely capable to generate optimal points. Furthermore, in [13,14], authors showed another approach for DSE in HLS based on binary encoding of the chromosomes. The work shown in [15] introduced the optimization of area, delay and power in behavioral synthesis. However the work shown in [15] does not concentrate on the high level design space exploration using swarm intelligence. In addition to above, authors in [17] have applied GA to the binding and allocation phase. The authors have presented an unconventional crossover technique depending on force directed datapath binding completion algorithm. The drawback is that it does not perform power-performance tradeoff and is slow in speed. Besides, authors in [18], suggested a time constrained scheduling based on GA technique. The function of list decoder has been made to decode a chromosome encode by permutation of operations into a valid schedule. Although the method is promising, it is however, slow compared to the other genetic based approaches. Authors in the [31] describe an approach to solve DSE problem which is based on GA and weighted sum particle swarm optimization (WSPSO). While they solve the problem with WSPSO they performed crossover between current position with global best position and local best position similar to GA. They did not consider velocity to update the position. In WSPSO author did not consider user constraints for power and execution time in cost function.

Particle Swarm Optimization (PSO) is a heuristic search methodology that tries to imitate the travels of a flock of birds aiming at finding food [21]. PSO is based on a population of particles flying through a multi-dimensional search space. Each particle possesses a position and a velocity; both variables are changed to emulate the social psychological tendency to impersonate the success of other individuals in the population. More formally, the position of ith particle is changed by adding the velocity to the current position as follows:
                        
                           (1)
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              (
                              t
                              +
                              1
                              )
                              =
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              (
                              t
                              )
                              +
                              
                                 
                                    ν
                                 
                                 
                                    i
                                 
                              
                              (
                              t
                              +
                              1
                              )
                           
                        
                     while the velocity is updated with the following rule:
                        
                           (2)
                           
                              
                                 
                                    ν
                                 
                                 
                                    i
                                 
                              
                              (
                              t
                              +
                              1
                              )
                              =
                              ω
                              
                                 
                                    ν
                                 
                                 
                                    i
                                 
                              
                              (
                              t
                              )
                              +
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                          
                                             lb
                                          
                                       
                                       -
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                 
                              
                              +
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             gb
                                          
                                       
                                       -
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                 
                              
                           
                        
                     where 
                        
                           ɷ
                        
                      is called the inertia weight, b
                     1 is the cognitive learning factor, b
                     2 is the social learning factor, r
                     1, r
                     2 are random numbers in the range [0,1], 
                        
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 lb
                              
                           
                        
                      is the best position of ith particle with respect to the minimization problem, xgb
                      is the global best position found so far. As can be noted, the formulation of the problem leads to solutions which try to ’follow’ the leader’s xgb
                      position as well as attracting solutions versus the personal best solution of the particle 
                        
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 lb
                              
                           
                        
                      
                     [22].

The flow chart shown in Fig. 1
                         represents the proposed multi-objective particle swarm exploration (MO-PSE) algorithm and the pseudo code of proposed algorithm is given in Fig. 2
                        . Based on the flow chart provided in Fig. 1 the description of the algorithm is provided as follows.

The inputs to the proposed framework are behavioral description of data flow graph (DFG) that describes data-path, user specified design constraints for power and execution time (with user specified weight factor), and module library. The module library contains four different information viz. Energy consumed by each resource in Pico joule (pJ), hardware area of each resource (#of transistor), latency of each resource in nanoseconds (ns) and user specified maximum available resources. The proposed framework checks the user constraints, if user constraints are not valid then show an error message and requests for valid values.

As mentioned before, for the proposed work, PSO algorithm has been directly mapped onto the DSE process of architectures. The proposed mapping of PSO on DSE is as follows:
                           
                              Position of particle→Resource configuration.

Velocity of particle→Exploration deviation/drift.

Dimension→# of Resource type.

Further, the swarm population is mapped as set of initial design points in design space (considered as initial design solutions which will be subjected to improvement in each iteration) while the social and cognitive component of PSO are used as factors that supplement in exploration drift process during architecture optimization.

In the proposed approach, the initial swarm population has multiple particles. The first particle P1: (first initial design point) is constructed by mapping the resource configuration with minimum value, the second particle: P2 (second initial design point) is constructed by mapping the resource configuration with maximum value, the third particle: P3 is constructed by mapping the average value of minimum and maximum resource configuration. The rest of the particles (P4,…,Pn) are constructed as follows:
                           
                              (3)
                              
                                 
                                    
                                       R
                                    
                                    
                                       id
                                    
                                 
                                 =
                                 (
                                 a
                                 +
                                 b
                                 )
                                 /
                                 2
                                 ±
                                 α
                              
                           
                        where ‘a’ is minimum resource value, ‘b’ is maximum resource value and ‘α’ is a random value between ‘a’ and ‘b’. The details of the initial swarm population are described in the upcoming sections. Additionally in the proposed algorithm, all the particles’ initial velocity is assigned to zero. In fact, for any physical objects in the initial position, their initial velocities must be zero (as they are stationary). If particles are initialized with nonzero velocities, then physical analogy is violated [23]. Once the particles are initialized, determination of particles fitness is performed and the fittest particle (which has minimum fitness) is chosen. The fittest particle becomes the global best resource configuration and fitness of this particle act as best fitness for the next iteration. After this step, iteration process initiates. According to the algorithm, in each iteration, the new resource configuration (design points) of all particles based on the given function are upgraded and evaluated by:
                           
                              (4)
                              
                                 
                                    
                                       R
                                    
                                    
                                       id
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 f
                                 
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                id
                                             
                                             
                                                +
                                             
                                          
                                          ,
                                          
                                             
                                                R
                                             
                                             
                                                id
                                             
                                          
                                       
                                    
                                 
                              
                           
                        Eq. (4) denotes the procedure for determining the next resource configuration during PSO using the information of the current position or resource configuration (Rid
                        ) and new velocity or exploration drift (
                           
                              
                                 
                                    V
                                 
                                 
                                    id
                                 
                                 
                                    +
                                 
                              
                           
                        ). The detailed description of Eq. (4) will be given in Section 4.8. The process of determining the new resource configuration 
                           
                              (
                              
                                 
                                    R
                                 
                                 
                                    id
                                 
                                 
                                    +
                                 
                              
                              )
                           
                         needs critical introspection. There may arise two cases where boundary constraints may not be met. The proposed approach handles it as follows:


                        
                           
                              (a)
                              As discussed during the resource up gradation process, there may be a possibility of boundary outreach (i.e. the new resource value jumps beyond the design space). In order to combat this problem, we proposed an ‘adaptive end terminal perturbation’ algorithm, which redeems any violations encountered during the DSE process.

The proposed approach also uses a concept of ‘velocity clamping’ in the MO-PSE in order to control the excessive exploration drift thereby preserving unwarranted diversity control.

For example, during evaluation of exploration drift/velocity metric, large value of v
                        + may result in the particle outreaching the boundaries of the given design space [23]. Therefore, velocity clamping is achieved to mitigate this issue based on:
                           
                              (5)
                              
                                 
                                    
                                       V
                                    
                                    
                                       id
                                    
                                    
                                       max
                                    
                                 
                                 =
                                 ±
                                 (
                                 a
                                 -
                                 b
                                 )
                                 /
                                 2
                              
                           
                        
                     

After recalculation of the fitness of all particles with new resource configuration; updating the local best positions (resource configuration) and global best position (resource configuration) is performed when the new fitness is lower than previous fitness. Once the global resource configuration is found, the proposed adaptive rotation mutation scheme on all local best resource configurations is executed with the hope of exploring a better global best resource configuration than the existing one. For this process, fitness of mutated local best configurations are evaluated and the global best solution is updated, if found fitter.

Similarly, the steps above are repeated for next iterations until the stopping criterion is reached (the stopping criterions are described in the Section 4.13). Therefore, after completing the process the algorithm yields the optimal architecture which is the global best resource solution for the given application and resource constrained.

The proposed algorithm however has some scope of improvement in terms of deciding an ideal stopping criterion. This is because; an ideal value will help in obtaining faster convergence time for a solution. As shown in results section later in the paper, several experiments were carried out to achieve the best possible stopping criterion. We however still believe that this topic requires further investigation. Further, regarding the usability of the approach, it is limited to handle multi-criterion optimization problems during design of application specific data intensive (and control) processors. Its applicability for handling optimization problems during designing general purpose counterparts needs further investigation. Nevertheless, the greatest advantage of the approach is its adaptation to changing technology. With rapid change in technology, there is a change in the values of static power per transistor (owing to voltage scaling and device geometry shrinkage) as well as in frequency. These parameters directly affect the dynamic energy and static power dissipation of the circuit. In our approach, these variables (V: voltage supply and pc: static power per transistor as shown in Eqs. (9) and (14) respectively) are user controlled (through module library), therefore it provides flexibility to our DSE algorithm to handle the changing technology demands.

Let the total power consumed by the functional resources be given as ‘PT
                           ’. PT
                            is a composition of dynamic power (PD
                           ) and static power (PS
                           ) given by the following equation:
                              
                                 (6)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          T
                                       
                                    
                                    =
                                    
                                       
                                          P
                                       
                                       
                                          D
                                       
                                    
                                    +
                                    
                                       
                                          P
                                       
                                       
                                          S
                                       
                                    
                                 
                              
                           
                        

The average dynamic power consumed by the functional resources is a function of dynamic activity of the resources and can be described as:
                              
                                 (7)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          D
                                       
                                    
                                    =
                                    
                                       
                                          N
                                          ·
                                          
                                             
                                                E
                                             
                                             
                                                FU
                                             
                                          
                                       
                                       
                                          L
                                          +
                                          (
                                          N
                                          -
                                          1
                                          )
                                          ·
                                          
                                             
                                                T
                                             
                                             
                                                c
                                             
                                          
                                       
                                    
                                 
                              
                           where EFU
                            represents the total energy consumption of the resources obtained from [29], N represents the data elements to be processed (during data pipelining), L represents the latency of a scheduling solution and Tc
                            represents the initiation interval or cycle time of a scheduling solution. Eq. (7) can be further written as in Eq. (8):
                              
                                 (8)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          D
                                       
                                    
                                    =
                                    
                                       
                                          N
                                          ·
                                          (
                                          
                                             
                                                E
                                             
                                             
                                                Res
                                             
                                          
                                          +
                                          
                                             
                                                E
                                             
                                             
                                                mux
                                             
                                          
                                          +
                                          
                                             
                                                E
                                             
                                             
                                                demux
                                             
                                          
                                          )
                                       
                                       
                                          L
                                          +
                                          (
                                          N
                                          -
                                          1
                                          )
                                          ·
                                          
                                             
                                                T
                                             
                                             
                                                c
                                             
                                          
                                       
                                    
                                 
                              
                           where ERes
                            is the energy consumed by the major functional units such as adders, subtractors and multipliers.

On the other hand, static power is majorly a function of area of resources and is independent of dynamic activity of a module. Therefore static power can be written as in the following equations:
                              
                                 (9)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          S
                                       
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             ν
                                          
                                       
                                    
                                    (
                                    
                                       
                                          N
                                       
                                       
                                          Ri
                                       
                                    
                                    ·
                                    
                                       
                                          K
                                       
                                       
                                          Ri
                                       
                                    
                                    )
                                    ·
                                    
                                       
                                          p
                                       
                                       
                                          c
                                       
                                    
                                 
                              
                           
                           
                              
                                 (10)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          S
                                       
                                    
                                    =
                                    (
                                    
                                       
                                          N
                                       
                                       
                                          R
                                          1
                                       
                                    
                                    ·
                                    
                                       
                                          K
                                       
                                       
                                          R
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          N
                                       
                                       
                                          R
                                          2
                                       
                                    
                                    ·
                                    
                                       
                                          K
                                       
                                       
                                          R
                                          2
                                       
                                    
                                    +
                                    ·
                                    +
                                    
                                       
                                          N
                                       
                                       
                                          R
                                          ν
                                       
                                    
                                    ·
                                    
                                       
                                          K
                                       
                                       
                                          R
                                          ν
                                       
                                    
                                    )
                                    .
                                    
                                       
                                          p
                                       
                                       
                                          c
                                       
                                    
                                 
                              
                           where ‘NRi
                           ’ represents the number of resource Ri
                           . ‘KRi
                           ’ represents the area occupied by resource Ri
                           , ‘v’ is the number of resources (FU’s) and ‘pc
                           ’ denotes the power dissipated per area unit (e.g. transistors).

Substituting Eqs. (8) and (9) in Eq. (6):
                              
                                 (11)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          T
                                       
                                    
                                    =
                                    
                                       
                                          N
                                          ·
                                          (
                                          
                                             
                                                E
                                             
                                             
                                                Res
                                             
                                          
                                          +
                                          
                                             
                                                E
                                             
                                             
                                                mux
                                             
                                          
                                          +
                                          
                                             
                                                E
                                             
                                             
                                                demux
                                             
                                          
                                          )
                                       
                                       
                                          L
                                          +
                                          (
                                          N
                                          -
                                          1
                                          )
                                          ·
                                          
                                             
                                                T
                                             
                                             
                                                c
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             ν
                                          
                                       
                                    
                                    (
                                    
                                       
                                          N
                                       
                                       
                                          Ri
                                       
                                    
                                    ·
                                    
                                       
                                          K
                                       
                                       
                                          Ri
                                       
                                    
                                    )
                                    ·
                                    
                                       
                                          p
                                       
                                       
                                          c
                                       
                                    
                                 
                              
                           
                        

For a system with ‘v’ functional resources the time of execution (TE
                           ) can be represented as [2,30]:
                              
                                 (12)
                                 
                                    
                                       
                                          T
                                       
                                       
                                          E
                                       
                                    
                                    =
                                    [
                                    L
                                    +
                                    (
                                    N
                                    -
                                    1
                                    )
                                    ·
                                    
                                       
                                          T
                                       
                                       
                                          c
                                       
                                    
                                    ]
                                 
                              
                           where the variables L, N and Tc
                            have been defined earlier.

The fitness function (Cf
                           ) developed which considers total execution time and total power consumptions shown in the following equation:
                              
                                 (13)
                                 
                                    
                                       
                                          C
                                       
                                       
                                          f
                                       
                                    
                                    =
                                    
                                       
                                          φ
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                T
                                             
                                          
                                          -
                                          
                                             
                                                P
                                             
                                             
                                                cons
                                             
                                          
                                       
                                       
                                          
                                             
                                                P
                                             
                                             
                                                max
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          φ
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          
                                             
                                                T
                                             
                                             
                                                E
                                             
                                          
                                          -
                                          
                                             
                                                T
                                             
                                             
                                                cons
                                             
                                          
                                       
                                       
                                          
                                             
                                                T
                                             
                                             
                                                max
                                             
                                          
                                       
                                    
                                 
                              
                           where Cf
                              
                           =fitness of particle and the variables PT
                           , Pcons
                           , Pmax
                           , TE
                           , Tcons
                           , Tmax
                            have been defined earlier. φ
                           1,
                           φ
                           2
                           =user specified weight factor for power and execution time.

The function to calculate PT
                            and TE
                            are stated in Eqs. (11) and (12) respectively.

The values of EFU
                         assumed in the library of the proposed approach have been adopted from [29] (portion of library information are shown in Tables 1 and 2
                        
                        . The estimation of EFU
                         has been done in [29] through the standard function for dynamic energy as shown in the following equation:
                           
                              (14)
                              
                                 
                                    
                                       E
                                    
                                    
                                       FU
                                    
                                 
                                 =
                                 1
                                 /
                                 2
                                 ·
                                 C
                                 ·
                                 
                                    
                                       V
                                    
                                    
                                       2
                                    
                                 
                                 ·
                                 α
                              
                           
                        where ‘V’ is the supply voltage of functional unit FU; ‘C’ is the physical capacitance of the functional unit FU and ‘α’ is the average switching activity at the inputs of FU.

The DFG of 2nd order digital IIR filter shown in Fig. 3
                         will be used as a simple example in the following sections to demonstrate the proposed approach. Additionally, for the sake of demonstration of the proposed algorithm using this example, we will assume some real constraint values for Power (Pcons
                        ) and execution time (Tcons
                        ) as well as user defined specifications as follows:
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       cons
                                    
                                 
                                 =
                                 8
                                 
                                 W;
                                 
                                 
                                    
                                       T
                                    
                                    
                                       cons
                                    
                                 
                                 =
                                 310
                                 
                                 μ
                                 s
                              
                           
                        Maximum available multiplier FU’s: 6, and adder FU’s: 4, and subtractor FU’s: 4; N
                        =1000 (number of sets of data) while ‘pc
                        ’ is assumed to be 1mW; additionally, the number/type of mux and demux is directly extracted from the scheduling solution. (Note: The values chosen for constraints and filter DFG as application are purely arbitrary. The efficiency of the method by any means is not restricted to the values/example assumed. This has been verified by our implementation results achieved for various benchmarks.) Therefore, the goal of exploration problem is to simultaneously meet the provided constraints for power and execution time.

This module checks whether the specified user constraint falls in the valid range of boundary limits. The following condition is checked for each parametric constraint specified:
                           
                              1.
                              Check: Pmin
                                 
                                 >
                                 Pcons
                                 
                                 >
                                 Pmax
                                 ||Tmin
                                 
                                 >
                                 Tcons
                                 
                                 >
                                 Tmax
                                 .

If the above condition is true then stop and correct the constraints.

Else the above condition fails and goes to step 3.
                           
                              3.
                              Execute the initialization process of module.


                        
                           
                              (a)
                              
                                 Position: Initialization plays very important role in the algorithm. Usually, the positions (resource configuration) of particles are initialized to uniformly cover the design space. It is important to note that the efficiency of the MO-PSE is biased by the initial diversity of the population, i.e. how much of the design space is covered and how well particles are distributed over the design space. Therefore, the algorithm initializes position as follows (keeping in mind that an optimal design solution to a multi-objective exploration problem will always lies between the maximum parallel and serial implementation of the application):
                                    
                                       •
                                       The first particle’s position is initialized by minimum resources: P1=(R1min, R2min, R3min,…,Rnmin). 
                                             
                                                
                                                   P
                                                   1
                                                   =
                                                   (
                                                   1
                                                   ,
                                                   
                                                   1
                                                   ,
                                                   
                                                   1
                                                   )
                                                
                                             
                                          
                                       

The second particle’s position is initialized by maximum resources: P2=(R1max, R2max, R3max,…,Rnmax). Therefore based on the user defined resources assumed in Section 4.3, P2 can be customized as follows: 
                                             
                                                
                                                   P
                                                   2
                                                   =
                                                   (
                                                   6
                                                   ,
                                                   
                                                   4
                                                   ,
                                                   
                                                   4
                                                   )
                                                
                                             
                                          
                                       

The third particle’s position is initialized by average of maximum and minimum values. P3=((R1min
                                          +R1max)/2, (R2min
                                          +R2max)/2, (R3min
                                          +R3max)/2,…,(Rnmin
                                          +Rnmax)/2)). Therefore, P3 can be customized as: 
                                             
                                                
                                                   P
                                                   3
                                                   =
                                                   (
                                                   3
                                                   ,
                                                   
                                                   2
                                                   ,
                                                   
                                                   2
                                                   )
                                                
                                             
                                          
                                       

The rest of the particles (P4,…,Pn) are initialized by Eq. (3). This function has been proposed to introduce an element of stochasticity (as well as diversity) into the initialization process.


                                 Velocity: Furthermore, velocities of all particles are initialized to zero (see Table 3
                                 ); the motivation for such an initialization process has been discussed in Section 4.1.


                                 Acceleration coefficients: In order for the algorithm to achieve convergence, it has been theoretically established before in [28] that the cognitive learning factor (b
                                 1) and the social learning factor (b
                                 2) can be initialized to any value between [1,4] (Note: The details of this proof has been given by authors in [28]). The impact of convergence and exploration time of MO-PSE for various benchmarks based on the variation of ‘b’ between [1,4] has been provided later in the paper. However we have been able to empirically prove, that for tested benchmarks tuning the value of ‘b’ between [2,3] yields the best results during DSE).

Based on the initialization of particles performed in Section 4.5, the initial fitness of the particles is calculated using Eq. (13). But before Eq. (13) can be applied, the individual values of power and execution time for all particles needs to be calculated. For example, the calculation of total power (PT
                        ) of P1=(1,1,1) using Eqs. (6), (8), and (10) is shown as follows. (Note: values obtained for ‘L’ and ‘Tc’ used for power and execution time determination are calculated using functional pipelining shown in 
                        Fig. 4
                         
                        to incorporate the transformation technique of algorithmic concurrency).
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       N
                                       ·
                                       (
                                       
                                          
                                             E
                                          
                                          
                                             Res
                                          
                                       
                                       +
                                       
                                          
                                             E
                                          
                                          
                                             mux
                                          
                                       
                                       +
                                       
                                          
                                             E
                                          
                                          
                                             dmux
                                          
                                       
                                       )
                                    
                                    
                                       L
                                       +
                                       (
                                       N
                                       -
                                       1
                                       )
                                       ·
                                       
                                          
                                             T
                                          
                                          
                                             c
                                          
                                       
                                    
                                 
                                 +
                                 (
                                 
                                    
                                       N
                                    
                                    
                                       R
                                       1
                                    
                                 
                                 ·
                                 
                                    
                                       K
                                    
                                    
                                       R
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       N
                                    
                                    
                                       R
                                       2
                                    
                                 
                                 ·
                                 
                                    
                                       K
                                    
                                    
                                       R
                                       2
                                    
                                 
                                 +
                                 ·
                                 +
                                 
                                    
                                       N
                                    
                                    
                                       Rn
                                    
                                 
                                 ·
                                 
                                    
                                       K
                                    
                                    
                                       Rn
                                    
                                 
                                 )
                                 ·
                                 
                                    
                                       p
                                    
                                    
                                       c
                                    
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       P
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       1000
                                       
                                          
                                             
                                                5
                                                *
                                                2310.6
                                                +
                                                3
                                                *
                                                106.76
                                                +
                                                1
                                                *
                                                106.76
                                                +
                                                2
                                                *
                                                192.49
                                                +
                                                1
                                                *
                                                192.49
                                                +
                                                2
                                                *
                                                68.032
                                                +
                                                1
                                                *
                                                68.032
                                             
                                          
                                       
                                    
                                    
                                       520
                                       +
                                       (
                                       1000
                                       -
                                       1
                                       )
                                       500
                                    
                                 
                                 +
                                 (
                                 1
                                 *
                                 2464
                                 +
                                 1
                                 *
                                 2032
                                 +
                                 1
                                 *
                                 2032
                                 )
                                 *
                                 1
                                 
                                 mW
                                 =
                                 6.553
                                 
                                 W
                              
                           
                        
                     

Subsequently, the execution time is calculating using Eq. (12):
                           
                              
                                 
                                    
                                       T
                                    
                                    
                                       E
                                    
                                 
                                 =
                                 [
                                 L
                                 +
                                 (
                                 N
                                 -
                                 1
                                 )
                                 ·
                                 
                                    
                                       T
                                    
                                    
                                       c
                                    
                                 
                                 ]
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       T
                                    
                                    
                                       E
                                    
                                 
                                 =
                                 520
                                 +
                                 (
                                 1000
                                 -
                                 1
                                 )
                                 500
                                 
                                 =
                                 500.020
                                 
                                 μ
                                 s
                              
                           
                        where the variables L, N and Tc
                         have been defined earlier in Section 4.2.1. Therefore,

While, Pmax
                        
                        =31. 15W and Tmax
                        
                        =500.02μs are calculated by considering the maximum resources during scheduling based on user provided specification and minimum resources (one instance of each resource type) respectively.

Finally, substituting Eqs. (15) and (16) in Eq. (13), the fitness of the particle p
                        1 is calculated as:
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       f
                                    
                                 
                                 =
                                 0.5
                                 
                                    
                                       
                                          
                                             
                                                6.553
                                                -
                                                8
                                             
                                             
                                                31.159
                                             
                                          
                                       
                                    
                                 
                                 +
                                 0.5
                                 
                                    
                                       
                                          
                                             
                                                500.020
                                                -
                                                310
                                             
                                             
                                                500.020
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       C
                                    
                                    
                                       f
                                    
                                 
                                 =
                                 0.1667
                              
                           
                        (Note: φ
                        1
                        =
                        φ
                        1
                        =0.5 is chosen for providing equal weightage to power and execution time factor during calculating fitness of particle). Similarly, the fitness of all other particles are calculated using Eq. (13).
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       f
                                    
                                    
                                       p
                                       1
                                    
                                 
                                 =
                                 0.1667
                                 
                                 fitness of
                                 
                                 
                                    
                                       R
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 1
                                 ,
                                 
                                 1
                                 ,
                                 
                                 1
                                 )
                              
                           
                        
                        
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       f
                                    
                                    
                                       p
                                       2
                                    
                                 
                                 =
                                 0.1691
                                 
                                 fitness of
                                 
                                 
                                    
                                       R
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 6
                                 ,
                                 
                                 4
                                 ,
                                 
                                 4
                                 )
                              
                           
                        
                        
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       f
                                    
                                    
                                       p
                                       3
                                    
                                 
                                 =
                                 0.0116
                                 
                                 fitness of
                                 
                                 
                                    
                                       R
                                    
                                    
                                       3
                                    
                                 
                                 (
                                 3
                                 ,
                                 
                                 2
                                 ,
                                 
                                 2
                                 )
                              
                           
                        
                     

After calculating the fitness of each particle, the next step of the algorithm (see Fig. 1) is to determine the Rlbi
                         of each particle and finally determine the global best particle (Rgb
                        ). For example, let us assume that the new fitness of a particle ‘Rid
                        ’ is given as ‘
                           
                              
                                 
                                    C
                                 
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                           
                        ’ and the fitness of the previous local best particle ‘Rlbi
                        ’ is give as ‘
                           
                              
                                 
                                    C
                                 
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              bi
                           
                        ’. Now if the new fitness of particle is less than the current local best fitness then 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                                 
                                    +
                                 
                              
                           
                         become new Rlbi
                         of the particle. Therefore the process of determining upgraded Rlbi
                         shown in Fig. 5
                        . Since in iteration 1, there was no previous local best position (‘Rlbi
                        ’) therefore the current position (Rid
                        ) assumes the value of Rlbi
                        . Next, the Rgb
                         of the population is determined using the following equation:
                           
                              (18)
                              
                                 
                                    
                                       R
                                    
                                    
                                       gb
                                    
                                 
                                 =
                                 
                                    
                                       R
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       
                                          Min
                                          
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         f
                                                      
                                                      
                                                         lb
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         f
                                                      
                                                      
                                                         lb
                                                         2
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         f
                                                      
                                                      
                                                         lb
                                                         3
                                                      
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         f
                                                      
                                                      
                                                         lbn
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Therefore, substituting the values of fitness cost for each particle in Eq. (18) yields:
                           
                              
                                 
                                    
                                       R
                                    
                                    
                                       gb
                                    
                                 
                                 =
                                 
                                    
                                       R
                                    
                                    
                                       i
                                    
                                 
                                 [
                                 Min
                                 (
                                 0.1667
                                 ,
                                 0.1691
                                 ,
                                 0.0116
                                 )
                                 ]
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       R
                                    
                                    
                                       gb
                                    
                                 
                                 =
                                 
                                    
                                       P
                                    
                                    
                                       3
                                    
                                 
                                 (
                                 3
                                 ,
                                 2
                                 ,
                                 2
                                 )
                              
                           
                        
                     

Thus, the third particle’s ‘Ri
                        ’ is the ‘Rgb
                        ’ for next iteration.

After completing the initialization phase in iteration1, the iteration process is resumed; the first task of the iteration is calculation of 
                           
                              
                                 
                                    R
                                 
                                 
                                    id
                                 
                                 
                                    +
                                 
                              
                           
                         (new resource configuration). The 
                           
                              
                                 
                                    R
                                 
                                 
                                    id
                                 
                                 
                                    +
                                 
                              
                           
                         is calculated using Eq. (4): 
                           
                              
                                 
                                    
                                       R
                                    
                                    
                                       id
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 f
                                 (
                                 
                                    
                                       V
                                    
                                    
                                       id
                                    
                                    
                                       +
                                    
                                 
                                 ,
                                 
                                    
                                       R
                                    
                                    
                                       id
                                    
                                 
                                 )
                              
                           
                        
                     

The function of 
                           
                              
                                 
                                    R
                                 
                                 
                                    id
                                 
                                 
                                    +
                                 
                              
                           
                         consist of two parts: first part is new velocity 
                           
                              (
                              
                                 
                                    V
                                 
                                 
                                    id
                                 
                                 
                                    +
                                 
                              
                              )
                           
                         and second part is previous resource configuration (Rid
                        ). Further, 
                           
                              
                                 
                                    V
                                 
                                 
                                    id
                                 
                                 
                                    +
                                 
                              
                           
                         is calculated using the following equation:
                           
                              (20)
                              
                                 
                                    
                                       V
                                    
                                    
                                       id
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 ω
                                 
                                    
                                       V
                                    
                                    
                                       id
                                    
                                 
                                 +
                                 
                                    
                                       b
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       r
                                    
                                    
                                       1
                                    
                                 
                                 [
                                 
                                    
                                       R
                                    
                                    
                                       lbi
                                    
                                 
                                 -
                                 
                                    
                                       R
                                    
                                    
                                       id
                                    
                                 
                                 ]
                                 +
                                 
                                    
                                       b
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                                 [
                                 
                                    
                                       R
                                    
                                    
                                       gb
                                    
                                 
                                 -
                                 
                                    
                                       R
                                    
                                    
                                       id
                                    
                                 
                                 ]
                              
                           
                        In Eq. (20) three components contribute to determination of new velocity (exploration drift).


                        
                           
                              •
                              First ωVid
                                  is called inertia component. This component represents the momentum which prevents drastic change in the direction of a particle.


                                 b
                                 1
                                 r
                                 1[Rlbi
                                 
                                 −
                                 Rid
                                 ] is called the cognitive component. The effect of the cognitive component represents the tendency of a particle to return to its individual best resource configuration from the past.


                                 b
                                 2
                                 r
                                 2[Rgb
                                 
                                 −
                                 Rid
                                 ] is called the social component. The social component’s effect is that, each particle moves towards the best resource configuration found by all its neighbors (including itself).


                        
                           
                              (i)
                              Particle P1:

In ‘x’ dimension:

Using Eq. (20) new velocity is calculated as:
                           
                              (22)
                              
                                 
                                    
                                       V
                                    
                                    
                                       1
                                       x
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 1
                                 *
                                 0
                                 +
                                 2
                                 *
                                 0.5
                                 (
                                 1
                                 -
                                 1
                                 )
                                 +
                                 2
                                 *
                                 0.5
                                 (
                                 3
                                 -
                                 1
                                 )
                                 =
                                 2
                              
                           
                        Using Eqs. (21) and (22) the upgraded resource configuration for x dimension is:
                           
                              (23)
                              
                                 
                                    
                                       R
                                    
                                    
                                       1
                                       x
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 1
                                 +
                                 2
                                 =
                                 3
                              
                           
                        In ‘y’ dimension:

Using Eq. (20) new velocity is calculated:
                           
                              (24)
                              
                                 
                                    
                                       V
                                    
                                    
                                       1
                                       y
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 1
                                 *
                                 0
                                 +
                                 2
                                 *
                                 0.5
                                 (
                                 1
                                 -
                                 1
                                 )
                                 +
                                 2
                                 *
                                 0.5
                                 (
                                 2
                                 -
                                 1
                                 )
                                 =
                                 1
                              
                           
                        
                     

Using Eqs. (21) and (24) the upgraded resource configuration for y dimension is:
                           
                              (25)
                              
                                 
                                    
                                       R
                                    
                                    
                                       1
                                       y
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 1
                                 +
                                 1
                                 =
                                 2
                              
                           
                        In ‘z’ dimension:

Using Eq. (20) new velocity is calculated:
                           
                              (26)
                              
                                 
                                    
                                       V
                                    
                                    
                                       1
                                       z
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 1
                                 *
                                 0
                                 +
                                 2
                                 *
                                 0.5
                                 (
                                 1
                                 -
                                 1
                                 )
                                 +
                                 2
                                 *
                                 0.5
                                 (
                                 2
                                 -
                                 1
                                 )
                                 =
                                 1
                              
                           
                        
                     

Using Eqs. (21) and (26) the upgraded resource configuration for x dimension is:
                           
                              (27)
                              
                                 
                                    
                                       R
                                    
                                    
                                       1
                                       z
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 1
                                 +
                                 1
                                 =
                                 2
                              
                           
                        
                        
                           
                              
                                 
                                    R
                                 
                                 
                                    1
                                 
                                 
                                    +
                                 
                              
                              =
                              (
                              3
                              ,
                              
                              2
                              ,
                              
                              2
                              )
                           
                         is new resource configuration of particle P1.


                        
                           
                              (ii)
                              Particle P2:

Similarly, the value of 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                                 
                                    +
                                 
                              
                           
                         for P2 is found as:
                           
                              
                                 
                                    
                                       R
                                    
                                    
                                       2
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 (
                                 3
                                 ,
                                 
                                 2
                                 ,
                                 
                                 2
                                 )
                              
                           
                        
                     


                        
                           
                              (iii)
                              Particle P3:

Similarly, the value of 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                                 
                                    +
                                 
                              
                           
                         for P3 is found as:
                           
                              
                                 
                                    
                                       R
                                    
                                    
                                       3
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 (
                                 3
                                 ,
                                 2
                                 ,
                                 2
                                 )
                                 .
                              
                           
                        
                     

DSE being a complicated optimization process, MO-PSE methodology requires embedded algorithms to handle critical issues such as boundary outreach violation. This happens during the resource up gradation phase, where there is a possibility of particle outreaching the boundary of the design space intervals. The proposed MO-PSE always handles such a case by applying an algorithm called ‘end terminal perturbation’ after the resource up-gradation process (determination of new particle position) to assure that every particle must be within the design space boundary interval (max and min). The proposed end terminal perturbation’ algorithm to handle the violation of boundary constraint limit during resource up gradation in shown in Fig. 6
                        .

As mentioned in Section 4.1, ‘velocity clamping’ in the MO-PSE is used in order to control the excessive exploration drift thereby preserving unwarranted diversity control. The velocity clamping is performed, when any particle’s exploration drift (velocity) crosses the 
                           
                              ±
                              
                                 
                                    V
                                 
                                 
                                    id
                                 
                                 
                                    max
                                 
                              
                           
                        . It helps particles to stay within the design space and to take sensibly step size in order to explore through the design space. Without this velocity clamping in the searching space the process will be prone to explode and particles’ resource configuration shall change hastily. The exploration drift is proposed by the following equation:
                           
                              (28)
                              
                                 
                                    
                                       V
                                    
                                    
                                       id
                                    
                                    
                                       +
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   +
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         id
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                   
                                                   if
                                                   
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         id
                                                      
                                                      
                                                         +
                                                      
                                                   
                                                   >
                                                   +
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         id
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   -
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         id
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                   
                                                   if
                                                   
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         id
                                                      
                                                      
                                                         +
                                                      
                                                   
                                                   <
                                                   -
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         id
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where the value of 
                           
                              ±
                              
                                 
                                    V
                                 
                                 
                                    id
                                 
                                 
                                    max
                                 
                              
                           
                         is determining using 
                           
                              
                                 
                                    V
                                 
                                 
                                    id
                                 
                                 
                                    max
                                 
                              
                              =
                              ±
                              (
                              a
                              -
                              b
                              )
                              /
                              2
                           
                         (as described in Eq. (5) before); and ‘a’ and ‘b’ have been defined in Section 4.1.

After determining 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                                 
                                    +
                                 
                              
                           
                        , The MO-PSE calculates fitness of the particle using Eq. (13). Now, algorithm checks that, if new fitness of particle is less than the current local best fitness then update 
                           
                              
                                 
                                    R
                                 
                                 
                                    lbi
                                 
                              
                           
                         with 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                                 
                                    +
                                 
                              
                           
                         and 
                           
                              
                                 
                                    C
                                 
                                 
                                    f
                                 
                                 
                                    lb
                                    1
                                 
                              
                           
                         with 
                           
                              
                                 
                                    C
                                 
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                           
                        . The function for determining new 
                           
                              
                                 
                                    R
                                 
                                 
                                    lbi
                                 
                              
                           
                         is shown in Fig. 5:
                           
                              
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             f
                                          
                                          
                                             lb
                                             1
                                          
                                       
                                       =
                                       0.1667
                                    
                                  (Previous local best fitness of particle p1).


                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             f
                                          
                                          
                                             p
                                             1
                                          
                                       
                                       =
                                       0.0116
                                    
                                  (New fitness of particle p1).


                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             f
                                          
                                          
                                             lb
                                             1
                                          
                                       
                                       =
                                       0.0116
                                    
                                  (New local best fitness of particle p1).


                                 Rlb
                                 
                                 1
                                 =(1,1,1) (Previous local best resource configuration of particle p1).


                                 Rlb
                                 
                                 1
                                 =(3,2,2) (New local best resource configuration of particle p1).

Similarly, MO-PSE updates for all particle’s 
                           
                              
                                 
                                    C
                                 
                                 
                                    f
                                 
                                 
                                    lbi
                                 
                              
                           
                         and Rlbi
                         using updating procedure shown in Fig. 5.

The next task is to determine global best resource configuration from the population. Using Eq. (18):
                           
                              (29)
                              
                                 
                                    
                                       R
                                    
                                    
                                       gb
                                    
                                 
                                 =
                                 
                                    
                                       R
                                    
                                    
                                       i
                                    
                                 
                                 [
                                 Min
                                 
                                 (
                                 0.0116
                                 ,
                                 0.0116
                                 ,
                                 0.0116
                                 )
                                 ]
                              
                           
                        In Eq. (29) clearly seen that all particle have same fitness and this value is same as previous value. If any fitter particle is found then, the value of Rgb
                         will be changed. So, there will be no alteration occurs in global best resource configuration.

Mutation operation is performed on all local best resource configuration with probability Pm
                        
                        =1.0. The proposed adaptive rotation mutation algorithm is shown in Fig. 7
                        . Adaptive rotation mutation algorithm is a novel algorithm for mutation operation where algorithm uses two basic operations for mutation. First is rotation operation, and second is increment or decrement operation. To perform these operations, the total population is divided into two groups: one is the even group in which algorithm performs left rotation operation and second group is the odd group in which algorithm performs increment or decrement with a random number. After mutation algorithm calculates new fitness value of local best resource configuration and if found better fitness then new value will become local best fitness otherwise does not change older value as shown in Eq. (30). For the sake of clarity, an example of mutation operation is given below:

Assume before mutation the local best resource configurations are:
                           
                              
                                 Rlb
                                 
                                 1
                                 =(3,2,2) – P1 particle.


                                 Rlb
                                 
                                 2
                                 =(2,1,1) – P2 particle.


                                 Rlb
                                 
                                 3
                                 =(4,3,3) – P3 particle.

After mutation the mutated local best resource configurations are:
                           
                              
                                 Rlb
                                 
                                 1
                                 =(4,2,3) after increment/decrement with value one.


                                 Rlb
                                 
                                 2
                                 =(1,1,2) after rotation (left) operation.


                                 Rlb
                                 
                                 3
                                 =(3,4,2) after addition/subtraction with value one.

Once mutation operation is completed then MO-PSE calculates new fitness of mutated local best resource configurations using Eq. (13). If any fitter particle is found then, the value of Rgb
                         will be updated with new resource configuration.

Termination criterion is a very important aspect of an iterative algorithm. Therefore, while deciding the termination criterion, two important aspects have been considered in our approach:
                           
                              •
                              The proposed algorithm should not prematurely converge because of the terminating criterion.

The algorithm must not go inside an infinite loop.

With the consideration of above aspects, the proposed algorithm proposed the following terminating criteria. If one of them is true then algorithm will terminate. Two conditions are as follows:
                           
                              (a)
                              Terminates when the maximum number of iteration have been exceeded (M
                                 =100) or,

Terminates under the following two stopping criteria:
                                    
                                       I.
                                       
                                          S1
                                          : When no improvement is seen in 
                                             
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      gb
                                                   
                                                
                                             
                                           over ‘£’ number of iteration. (£=10)


                                          S
                                          2: If the population reaches to equilibrium state i.e. all particles velocity become zero (V+ =0).

@&#RESULTS AND ANALYSIS@&#

The proposed MO-PSE approach has been implemented in java language on Intel core i5-2450M processor with 3MB L3 cache memory and 4GB DDR3 primary memory. The processor frequency is 2.5GHz. Various high level synthesis DSP benchmarks were chosen for testing such as IIR digital Butterworth filter, ARF [24–26], BPF [24], FIR [25], MESA-Horner Bezier [25], EWF [24,27], MPEG Motion Vector [24], ARF [24], and JPEG Downsample [24]. It is important to note that the proposed method has potential to handle problems of any size (number of nodes). Many large size applications such as MPEG MMV, JPEG and the two testcases (∼120 nodes) have been verified through our approach. However, for application larger than this, the proposed algorithm is also capable to generate equally efficient results.

The proposed MO-PSE approach is experimented with two aspects given below:
                        
                           •
                           Analysis of variation in multiple PSO parameters and their impact on the MO-PSE performance (or efficiency).

Comparison of MO-PSE with previous DSE approaches [3,4] in terms of exploration time (or speed) and Quality of Results (QoR) achieved.

This section will investigate the impact of variation in multiple internal PSO parameters on proposed design space exploration approach for selected benchmarks. However, it should be noted that this subsection will not discuss the quality of results achieved through the proposed DSE approach. The quality of solution found and its comparison with other DSE approaches will be discussed in the next subsection. Further in this subsection, post-experimental analysis will also assist in pre-tuning PSO parameters to an appropriate value (for MO-PSE) while performing DSE comparison.

In the proposed approach (MO-PSE), inertia weight controls to the exploration drift process of the particle by weighing the involvement of the previous exploration drift. During the experiment, the following three variations of ‘
                              
                                 ɷ
                              
                           ’ have been analyzed and its impact on the performance of MO-PSE has been reported:
                              
                                 (a)
                                 Linearly decreasing ‘
                                       
                                          ɷ
                                       
                                    ’ in every iteration between [0.9–0.1] throughout the exploration process.

A constant value of 
                                       
                                          ɷ
                                          =
                                          1
                                       
                                     throughout the exploration process.

A constant value of 
                                       
                                          ɷ
                                          =
                                          0.5
                                       
                                     throughout the exploration process.

As evident from Tables 4 and 5
                           
                           , for all benchmarks the MO-PSE’s convergence time and exploration time is generally better with linearly decreasing value of ‘
                              
                                 ɷ
                              
                           ’. For example in Table 4, in case of MPGE Motion Vectors, the convergence time is 100.5ms for linearly decreasing ‘
                              
                                 ɷ
                              
                           ’, while it is 111.33ms and 102.6ms at ‘
                              
                                 ɷ
                              
                           ’=0.5 and ‘
                              
                                 ɷ
                              
                           ’=1 respectively. Therefore, it is clear from the empirical evidence that MO-PSE during exploration of variances converges to optimal solution faster when the ‘
                              
                                 ɷ
                              
                           ’ is decreased linearly in each iteration until the magnitude becomes 0.1. Further, in case of MESA, the exploration time for finding the optimal solution is 78.5ms when ‘
                              
                                 ɷ
                              
                           ’ is linearly decreased between [0.9 – 0.1] compared to 86ms and 109.33ms when ‘
                              
                                 ɷ
                              
                           ’=0.5 and ‘
                              
                                 ɷ
                              
                           ’=1 respectively.

The Acceleration Coefficients b
                           1 and b
                           2 control the influence of cognitive and social component in exploration drift. Where b
                           1 expresses how much confidence a particle has in itself, while b
                           2 expresses how much confidence a particle has on other particles [23]. During experimentation ‘b
                           1’ and ‘b
                           2’ were kept equal to ‘b’. Four different values of b were taken for experimental analysis viz. b
                           =1,2,3,4. (Note: The reason for setting ‘b’ in the range [1–4] for PSO has been shown in [28]). As indicated in Tables 6 and 7
                           
                           , in terms of convergence and exploration time both, pre-opting an exact choice of ‘b’ before performing design space exploration for ASP’s is a non-trivial issue. This is because there is no general trend that can be observed for the selected benchmarks for making a pre-defined choice as shown in Figs. 8 and 9
                           
                           . As seen in Tables 6 and 7 in order to achieve minimal convergence and exploration time, for IIR and MESA value of b
                           =1 is suitable, for FIR value of b
                           =2 is suitable, for ARF, BPF, MPEG value of b
                           =3 is suitable and for EWF and JPEG Downsample value of b
                           =4 is suitable. However, it can assumed that the best quality solutions for attaining faster convergence and exploration speed are mostly clustered at b
                           =2 or b
                           =3 in most tested cases.

A large ‘Ns’ value covers larger number of design points in the design space per iteration, but a larger number of particles increase the computational complexity per iteration. However, it should also be noted that using a few number of particles will require a large number of iterations during exploration of variances and hence will deteriorate the success rate [28]. During the experimental analysis of selected benchmarks, it was found that the best size of swarm for proposed MO-PSE is three (i.e. analogues to selecting three diverse initial parents (or design variances) in evolutionary algorithms) for most of the benchmarks. The results are shown in Tables 8 and 9
                           
                           . As evident from the results, the best balance between achieving fast exploration and searching optimal solution can be obtained by setting Ns=3 for the tested benchmarks.

Moreover, to investigate the performance of MO-PSE for very large size applications (such as DFG greater than minimum 80 nodes), we have developed 2 test cases (test case 1: 84 nodes and test case 2:112 nodes).

According to the expected behavior of PSO for very large size application (such as the test cases) faster convergence of optimal result is possible with larger swarm sizes. However, exploration time increase slightly, because number of particle increases (thereby resulting in increase in computation complexity per iteration). As seen in Table 8, the convergence time of test case 1 for Ns=3 is 4269ms. On the other hand the convergence time for test case 1 for Ns=5 and 7 is 2728ms, 3432ms respectively, thereby consuming lesser time as compared to Ns=3. Therefore, after investigation our results reveal that MO-PSE works as expected for large size test cases as well.

During experiment two stopping criterion have been tested, described in Section 4.13. The first stopping criterion, maximum number of iteration controls the endless process while second controls the convergence time and exploration time. In worst case MO-PSE reaches maximum number of iteration. Both option of second condition have been tested and result shown in Table 10
                           . As apparent from result, the MO-PSE produces the better result in terms of faster convergence with first stopping criterion (S
                           1). For example in Table 10, in case of JPEG Downsample, the convergence time for finding optimal solution is 80.5ms with S
                           1, while 219ms with S
                           2. Moreover, in case of MPEG Motion Vector, the convergence time for finding optimal solution is 100.5ms with S
                           1, while 390ms with S
                           2.

This section will describe comparison of proposed MO-PSE with various previous approaches [3,4]. The MO-PSE is compared with [3,4] approaches in terms of following parameters: (a) implementation runtime, (b) resource configuration, (c) execution time and (d) Power and (e) Quality of Results (QoR).

As describe in Eq. (13), φ
                        1 and φ
                        2 are the user specified weightage for power consumption and execution time. During our experiments, for the proposed MO-PSE, the following settings were maintained based on the inferences drawn from the obtained results in Section 5.1: φ
                        1 and φ
                        2 equal to 0.5, the value of 
                           
                              ɷ
                           
                         will be linearly decreased between [0.9–0.1], value of b
                        =2, swarm size=3 (indicating three initial solutions), stopping criterion=
                        S
                        1 and M
                        =100.


                           Table 11
                            shows the detailed comparison with [3]. As obvious from Table 11, without compromising the QoR, the exploration speed of proposed MO-PSE is multiple times higher than [3]. Moreover, [3] fails (underlined values) to meet the specified constraint for power with respect to benchmarks such as IIR Butterworth, MESA, FIR, EWF and MPEG. Besides, the MO-PSE achieved better QoR (normalized cost function of power and execution time) as compared to [3] for most of the benchmarks. The average improvement in QoR is more than 10% and average reduction in exploration runtime is 90% as shown in Figs. 10 and 11
                           
                            respectively.

The proposed approach when compared to [4] achieved increased acceleration in exploration process as shown in Table 12
                           . Besides above, the proposed MO-PSE approach considers cycle time resulting from initiation interval and latency to create a genuinely pipelined functional data-path during performance calculation. Therefore, the execution time (in μs) for the proposed MO-PSE is determined from Eq. (12). On the other hand, [4] is not able to optimize the execution time considerably due to its inability to create a genuinely pipelined functional data-path. Therefore the total execution time (function of latency, cycle time, and pipelined data as shown in Eq. (12)) does not get sufficiently optimized for [4]. Thus, for determining of execution time in [4], “N” set of processing data is multiplied directly with the latency as per: 
                              
                                 
                                    
                                       T
                                    
                                    
                                       E
                                    
                                    
                                       [
                                       4
                                       ]
                                    
                                 
                                 =
                                 N
                                 *
                                 L
                              
                           . Further, the proposed MO-PSE directly considers the total power consumption during exploration as shown in Eq. (6). In contrast to MO-PSE, [4] only considers area minimization while optimizing circuit latency (and reports no power values in the paper). Therefore, for the sake of comparison, we have evaluated the estimated power using [4] for all selected benchmarks.

With respect to achieved QoR, the MO-PSE produces better solutions in terms of execution time compared to [4] for all the benchmarks as clearly shown in Table 12. For example in case of IIR Butterworth filter benchmark the optimal resource configuration found 2(*) and 1(+), the execution time of solution is 220.01μs and power consumed by optimal solution is 7.01W. On the other hand [4], based on same constraints, yields an optimal resource configuration which is 4(*), 1(+) with 260μs execution time and 9.42W power consumption. Moreover, for MPEG MMV the optimal resource configuration found is 4(*), 1(+) with 340μs execution time and the power consumption is 11.9W in 0.12s exploration time; while [4] yields 4(*), 2(+) as an optimal architecture with 480 execution time and 13.91W power consumption in 0.312s exploration time. Additionally, during experiments it was found out that [4] suffers from power constraint violation (after estimation) for some selected benchmarks such as IIR, ARF and MPEG MMV.

Therefore it can be summarized from Table 12 that with better achieved QoR; the average reduction in exploration time is more than 40%. From Table 12, the average improvement in QoR was determined to be greater than 34% when compared to [4] for the tested benchmarks as shown in Figs. 10 and 11.

@&#CONCLUSION@&#

This paper presented a novel methodology for efficient design space exploration for ASP using PSO. The proposed mechanism for DSE was capable of resolving the multiple conflicting objectives in DSE by concurrently solved the orthogonal issues such as improving QoR and reducing the exploration time. To the best of authors’ knowledge, this is the first work that directly maps PSO on a multi-objective DSE problem for ASP design. A novel algorithm for mutation operation also paper presented, which preserves and introduce diversity and helps to explore better solution. This paper also reported novel analysis of various parameters of PSO on DSE problems. The results of the MO-PSE when compared with [3,4] proved that MO-PSE achieves better QoR (an average greater than 10%) as well as average reduction of 40% in terms of exploration time.

@&#REFERENCES@&#

