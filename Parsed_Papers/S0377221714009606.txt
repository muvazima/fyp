@&#MAIN-TITLE@&#The three-machine proportionate open shop and mixed shop minimum makespan problems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We consider the three-machine proportionate open shop and mixed shop makespan problems.


                        
                        
                           
                           We derive sufficient conditions to solve the problems in polynomial time.


                        
                        
                           
                           We derive algorithms with worst-case bounds for the problems.


                        
                        
                           
                           We extend our open shop results to the unequal speed case.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Scheduling

Open shop

Mixed shop

@&#ABSTRACT@&#


               
               
                  We first consider the ordinary NP-hard three-machine proportionate open shop minimum makespan O3|prpt|C
                     max  problem and show that it is solvable in O(nlog n) time when certain conditions on the total machine load are met. When these conditions are not met, we derive an approximate solution by implementing the optimal solution for the O3|prpt|C
                     max  problem when the two longest jobs are of equal length. In that case, both absolute and ratio worst-case bounds are derived. We also consider the more general mixed shop problem M3|prpt|C
                     max  in which a given job subset must be processed as in a flow shop while the remaining jobs can be processed as in the O3|prpt|C
                     max  problem. We show that our open shop solution techniques can be implemented to derive exact and approximate solutions for the M3|prpt|C
                     max  problem. Finally, we discuss the applicability of our open shop results to the proportionate open shop problem with unequal machine speeds.
               
            

@&#INTRODUCTION@&#

Open shop scheduling problems have received attention in the literature because of their applicability to the scheduling of medical tests in an outpatient health care facility and/or the scheduling of classes/exams in an academic institution. In both applications, the patients (students) must complete a number of medical tests (academic activities) in any order with the only restriction that these activities should not overlap.

Let pij
                      denote the processing time of job Jj
                      on machine Mi
                     . The proportionate shop (in which pij
                      = pj
                      for all jobs Jj
                      and all machines Mi
                     ) is the most specialized shop with respect to job processing times. Two generalizations of the proportionate shop are possible. If the condition ptj
                      > ptk
                      for two jobs Jj, Jk
                     , on a machine Mt
                      implies that pij
                      ≥ pik
                      on all machines Mi
                     , then the shop has ordered jobs. If the condition pir
                      > ptr
                      for some job Jr
                      on two machines Mi, Mt
                      implies that pij
                      ≥ ptj
                      for all jobs Jj
                     , then the shop has ordered machines. An ordered shop is a shop with both ordered jobs and ordered machines.

We first consider the three-machine proportionate open shop minimum makespan problem (denoted as O3|prpt|C
                     max ) which was shown to be at least ordinary NP-hard by Liu and Bulfin (1987). The authors stated their NP-hardness theorem for the three-machine ordered open shop problem but they actually used an O3|prpt|C
                     max  problem instance in their proof. The contrast with the complexity of the corresponding flow shop problem should be noted at this time. Chin and Tsai (1981) showed that all job permutations are optimal for the Fm|prpt|C
                     max  problem (with any fixed number of machines m).

In some shops, the technological order of the operations of a subset of jobs dictates the flow shop model for these jobs while the operations of the remaining jobs can be processed in any order according to the open shop model. In that case, the shop is called a mixed shop. A more general version of the mixed shop allows for a subset of jobs to be processed as in a job shop while the remaining jobs are processed as in an open shop.

In this paper, we analyze the three-machine proportionate mixed shopM3|prpt|C
                     max  problem in which each job has equal processing times on all three machines and a given job subset must be processed as in the F3|prpt|C
                     max  problem while the remaining jobs can be processed as in the O3|prpt|C
                     max  problem. The M3|prpt|C
                     max  problem is at least ordinary NP-hard because of the complexity of the O3|prpt|C
                     max  problem. Masuda, Ishii, and Nishida (1985) showed that the two-machine mixed shop M2||C
                     max  problem (with arbitrary job processing times) is solvable in O(nlog n) time. Strusevich (1991) generalized the results in Masuda et al. (1985) by incorporating an additional subset of jobs following the M
                     2 → M
                     1 processing route. Shakhlevich and Sotskov (1994) considered a mixed shop with two jobs and any regular performance measure. A summary of the known results for a mixed shop with either two machines or two jobs is given by Brucker (1995). Shakhlevich, Sotskov, and Werner (1999) analyzed mixed shops with more than two machines and more than two jobs. They considered both the preemptive and the non-preemptive case. The complexity of mixed shops with three or more machines motivated Shakhlevich, Sotskov, and Werner (2000) to survey the results for these shops with a fixed number of jobs.

The NP-hardness of the O3||C
                     max  problem justified the identification of special cases solvable in polynomial time and also the development of heuristics with performance guarantees. Adiri and Aizikowitz (1989) showed that O3||C
                     max  problem can be solved in linear time when there is a dominated machine. In that case, the maximum processing time on the dominated machine is no greater than the minimum processing time on another machine.


                     Liu and Bulfin (1987) developed a linear time algorithm for the O3||C
                     max  problem with ordered machines if the jobs can be arranged so that p
                     11 = max 
                        j = 1, …, n
                     {p
                     1j
                     } and p
                     22 = max 
                        j = 1, …, n
                     {p
                     2j
                     }, where pij
                      denotes the processing time of job Jj
                      on machine Mi
                     . As stated earlier, when the machines are ordered, all jobs have their longest processing times on M
                     1 (which is then called the maximal machine), their second longest processing time on M
                     2 and so on. In addition, the conditions p
                     11 = max 
                        j = 1, …, n
                     {p
                     1j
                     } and p
                     22 = max 
                        j = 1, …, n
                     {p
                     2j
                     } imply that the job with the longest processing time on M
                     1 is not the job with the longest processing time on M
                     2 (unless p
                     21 = p
                     22).


                     Kyparisis and Koulamas (1997) generalized the results of Liu and Bulfin (1987) for the O3||C
                     max  problem with ordered machines by showing that the problem is solvable in linear time if the jobs can be arranged so that p
                     11 = max 
                        j = 1, …, n
                     {p
                     1j
                     } and p
                     12 ≥ max 
                        j = 1, …, n
                     {p
                     2j
                     }. We should point out that neither the condition p
                     22 = max 
                        j = 1, …, n
                     {p
                     2j
                     } nor the condition p
                     12 ≥ max 
                        j = 1, …, n
                     {p
                     2j
                     } is, in general, true for the O3|prpt|C
                     max  problem (unless p
                     1 = p
                     2, where J
                     1 and J
                     2 are the two longest jobs).

Let P, p
                     max  denote the maximum machine load and the maximum job processing time respectively in an open shop problem; observe that in the case of the O3|prpt|C
                     max  problem, all three machine loads are equal to 
                        
                           P
                           =
                           
                              ∑
                              
                                 j
                                 =
                                 1
                              
                              n
                           
                           
                              p
                              j
                           
                        
                     .


                     Sevastjanov (1995) identified special cases of the Om||C
                     max  problem (with a fixed number of m ≥ 3 machines) solvable in polynomial time. He showed that the Om||C
                     max  problem is solvable in polynomial time when P = p
                     max . He also showed that the condition P ≥ (mR + 2m − 2)p
                     max  is sufficient to obtain a solution with 
                        
                           
                              C
                              max
                              *
                           
                           =
                           P
                        
                      in polynomial time (where 
                        
                           C
                           max
                           *
                        
                      denotes the optimal makespan value and R is the value of the radius for a compact vector summation problem related to the Om||C
                     max  problem and detailed in Sevastjanov, 1995). This implies that the Om||C
                     max  problem with a maximal machine is polynomially solvable with 
                        
                           
                              C
                              max
                              *
                           
                           =
                           P
                        
                      under the condition P ≥ (2m − 2)p
                     max .


                     Sevastianov (1998) proved that if P ≥ 7p
                     max , then the optimal schedule of length P can be constructed in O(nlog n) time for the O3||C
                     max  problem; Kononov, Sevastianov, and Tchernykh (1999) proved that if P
                     1 ≥ P
                     3 + 2p
                     max  (where Pi
                      is the total work load of machine Mi
                      and the machines are indexed according to P
                     1 ≥ P
                     2 ≥ P
                     3), then the optimal schedule of length P = P
                     1 can be constructed in O(n) time for the O3||C
                     max  problem.

In the rest of the paper, we assume that the jobs in the open shop have been indexed in the non-increasing (LPT) order of their processing times so that p
                     max  = p
                     1 ≥ p
                     2 ≥ ⋅⋅⋅ ≥ pn
                     .

We show in the next section that the O3|prpt|C
                     max  problem is solvable in polynomial time when either p
                     1 = p
                     2 or P ≤ 2p
                     1 + p
                     2 or P ≥ 3p
                     1 + p
                     3. These findings indicate that more instances of the O3|prpt|C
                     max  problem are solvable in polynomial time compared to the O3||C
                     max  problem.

In the case of the O3||C
                     max  problem with arbitrary job processing times, Chen and Strusevich (1993) proposed a linear time heuristic algorithm H and proved the tight worst-case ratio bound of 
                        
                           
                              
                                 C
                                 max
                                 H
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           
                              3
                              2
                           
                           ,
                        
                      where 
                        
                           C
                           max
                           H
                        
                      denotes the makespan value supplied by the algorithm H. This bound is attained by the best of two constructed schedules. Chen and Strusevich (1993) also showed the tightness of the absolute bound 
                        
                           
                              C
                              max
                              S
                           
                           −
                           
                              C
                              max
                              *
                           
                           ≤
                           
                              (
                              m
                              −
                              1
                              )
                           
                           
                              p
                              max
                           
                        
                      for the Om||C
                     max  problem where 
                        
                           C
                           max
                           S
                        
                      denotes the makespan of a dense schedule in which a machine is idle only when there is no job that can be processed on that machine.


                     Sevastianov and Tchernykh (1998) proved the bound 
                        
                           
                              
                                 C
                                 max
                                 *
                              
                              LB
                           
                           ≤
                           
                              4
                              3
                           
                        
                      for the general O3||C
                     max  problem (where LB denotes the standard lower bound on the optimal makespan, computed as the maximum of two amounts: the maximum machine load and the maximum job length) and showed that this bound is tight. As a by-product of their proof, they constructed a linear time heuristic H with a guaranteed value 
                        
                           
                              C
                              max
                              H
                           
                           ≤
                           
                              4
                              3
                           
                           LB
                           ,
                        
                      which implies the worst-case ratio bound 
                        
                           
                              
                                 C
                                 max
                                 H
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           
                              4
                              3
                           
                        
                     .

Finally, several authors investigated the existence of the polynomial-time and fully polynomial-time approximation schemes (PTAS and FPTAS respectively) for the Om||C
                     max  problem, that is algorithms H which, for any problem instance and any ε > 0, produce a solution in polynomial time such that 
                        
                           
                              
                                 
                                    C
                                    max
                                    H
                                 
                                 −
                                 
                                    C
                                    max
                                    *
                                 
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           ϵ
                        
                     . While the existence of FPTAS for the O3||C
                     max  problem is an open problem in scheduling theory, a PTAS for the Om||C
                     max  problem was first proved by Sevastianov and Woeginger (1998). The currently best variant of a PTAS for the open shop problem was presented in Sevastianov and Woeginger (2001). It applies to the r-stage open shop problem with identical parallel machines at each stage, and the PTAS has a running time of the type O(nrm + C(m, ε)) where n is the number of jobs, m is the total number of machines and C(m, ε) is a function independent of n.

In this paper, we propose a heuristic algorithm A with performance guarantees for the non-solvable cases of the O3|prpt|C
                     max  problem. In those cases, we derive the tight worst-case bounds of 
                        
                           
                              
                                 C
                                 max
                                 A
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           
                              7
                              6
                           
                        
                      and 
                        
                           
                              C
                              max
                              A
                           
                           −
                           
                              C
                              max
                              *
                           
                           ≤
                           
                              1
                              2
                           
                           
                              p
                              1
                           
                        
                      respectively where 
                        
                           C
                           max
                           A
                        
                      denotes the makespan value supplied by our algorithm. The algorithm A is based on an exact algorithm for an O3|prpt|C
                     max  problem with 
                        
                           p
                           j
                           
                              
                              ′
                           
                        
                      job processing times such that 
                        
                           
                              p
                              j
                              
                                 
                                 ′
                              
                           
                           =
                           
                              p
                              j
                           
                           ,
                        
                      
                     j ≠ 2 and 
                        
                           
                              p
                              2
                              
                                 
                                 ′
                              
                           
                           =
                           
                              p
                              1
                           
                        
                     .

We then turn our attention to the M3|prpt|C
                     max  problem; let qj
                      denote the processing time of job Jj
                      in the flow shop job subset, q
                     max  = max {qj
                     } and 
                        
                           Q
                           =
                           
                              ∑
                              
                                 j
                                 =
                                 1
                              
                              n
                           
                           
                              q
                              j
                           
                        
                     . Clearly, 
                        
                           
                              C
                              max
                              *
                           
                           ≥
                           P
                           +
                           Q
                        
                      for the M3|prpt|C
                     max  problem. We show that the M3|prpt|C
                     max  problem is solvable in polynomial time when either p
                     1 = p
                     2 ≥ q
                     max  or when the conditions p
                     1 > p
                     2, P ≥ 3p
                     1 + p
                     3 and p
                     1 = p
                     max  ≥ q
                     max  are in effect. We also show that for the non-solvable cases of the M3|prpt|C
                     max  problem, the absolute performance bound of 
                        
                           
                              C
                              max
                              H
                           
                           −
                           
                              C
                              max
                              *
                           
                           ≤
                           2
                           max
                           
                              {
                              
                                 p
                                 max
                              
                              ,
                              
                                 q
                                 max
                              
                              }
                           
                        
                      and the ratio bound of 
                        
                           
                              
                                 C
                                 max
                                 H
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           
                              5
                              3
                           
                        
                      can be obtained.

We conclude our introduction by summarizing our findings and some relevant literature. Table 1
                      presents a summary of the best available worst-case ratio bounds for the non-polynomially solvable cases of the O3||C
                     max  and the M3||C
                     max  problems.


                     Table 2
                      presents a list of sufficient conditions related to P and p
                     max  so that the O3||C
                     max  and/or the M3||C
                     max  problems become polynomially solvable.

The rest of the paper is organized as follows: In the next section, we propose exact algorithms for the O3|prpt|C
                     max  problem when either p
                     1 = p
                     2 or P ≤ 2p
                     1 + p
                     2 or P ≥ 3p
                     1 + p
                     3. An approximation algorithm A for the non-solvable cases of the O3|prpt|C
                     max  problem is presented in Section 3. The exact and approximation algorithms for the M3|prpt|C
                     max  problem are presented in Section 4. The conclusions of this research are summarized in Section 5 along with a discussion about the applicability of our results to the proportionate open shop problem with unequal machine speeds.

We first observe that the O3|prpt|C
                     max  problem is solvable in polynomial time when p
                     1 = p
                     2 without any additional conditions imposed on the job processing times. This is because the condition p
                     1 = p
                     2 for the O3|prpt|C
                     max  problem satisfies the sufficient condition p
                     12 ≥ max 
                        j = 1, …, n
                     {p
                     2j
                     } of Kyparisis and Koulamas (1997) for solving the more general O3|Mj
                      ≥ Ml
                     |C
                     max  problem with ordered machines in polynomial time. Therefore, the following corollary can be stated without a proof.

                        Corollary 1
                        If p
                           1 = p
                           2, then O3|prpt|C
                           max  is solvable in polynomial time and 
                              
                                 
                                    C
                                    max
                                    *
                                 
                                 =
                                 max
                                 
                                    {
                                    P
                                    ,
                                    3
                                    
                                       p
                                       max
                                    
                                    }
                                 
                              
                           .

Next, we present exact linear time algorithms for the O3|prpt|C
                     max  problem when p
                     1 > p
                     2 and either P ≤ 2p
                     1 + p
                     2 or P ≥ 3p
                     1 + p
                     3. The proposed algorithms construct schedules with makespan equal to a lower bound on the optimal makespan 
                        
                           C
                           max
                           *
                        
                      in either case.

                        Theorem 1
                        
                           
                              
                                 (1)
                                 If p
                                    1 > p
                                    2 and P ≤ 2p
                                    1 + p
                                    2, then the O3|prpt|C
                                    max  problem is solvable in polynomial time and 
                                       
                                          
                                             C
                                             max
                                             *
                                          
                                          =
                                          3
                                          
                                             p
                                             max
                                          
                                       
                                    .

If p
                                    1 > p
                                    2 and P ≥ 3p
                                    1 + p
                                    3, then the O3|prpt|C
                                    max  problem is solvable in polynomial time and 
                                       
                                          
                                             C
                                             max
                                             *
                                          
                                          =
                                          P
                                       
                                    .


                           
                              
                                 (1)
                                 Assume that p
                                    1 > p
                                    2 and P ≤ 2p
                                    1 + p
                                    2. The last inequality can be written as 
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                3
                                             
                                             n
                                          
                                          
                                             p
                                             j
                                          
                                          ≤
                                          
                                             p
                                             1
                                          
                                       
                                     which together with the inequality p
                                    2 < p
                                    1 leads to a feasible O3|prpt|C
                                    max  schedule depicted in Fig. 1
                                     with 
                                       
                                          
                                             C
                                             max
                                             *
                                          
                                          =
                                          3
                                          
                                             p
                                             1
                                          
                                       
                                    ; the constructed schedule is optimal because the total processing requirements of job J
                                    1 is a lower bound on the optimal makespan.

Let Ti
                                     = pi
                                     + ⋅⋅⋅ + pn
                                     and find i* = max {i|Ti
                                     ≥ p
                                    1}. Then

                                       
                                          (1)
                                          
                                             
                                                
                                                   T
                                                   
                                                      i
                                                      *
                                                   
                                                
                                                ≥
                                                
                                                   p
                                                   1
                                                
                                                .
                                             
                                          
                                       
                                    Since P ≥ 3p
                                    1 + p
                                    3 > 2p
                                    1 + p
                                    2 + p
                                    3, we have p
                                    4 + ⋅⋅⋅ + pn
                                     > p
                                    1, and so

                                       
                                          (2)
                                          
                                             
                                                
                                                   i
                                                   *
                                                
                                                ≥
                                                4
                                                .
                                             
                                          
                                       
                                    At that, 
                                       
                                          
                                             T
                                             
                                                
                                                   i
                                                   *
                                                
                                                +
                                                1
                                             
                                          
                                          <
                                          
                                             p
                                             1
                                          
                                          ,
                                       
                                     which, in view of (2), implies that

                                       
                                          (3)
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                            2
                                                         
                                                         +
                                                         ⋯
                                                         +
                                                         
                                                            p
                                                            
                                                               
                                                                  i
                                                                  *
                                                               
                                                               −
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      =
                                                   
                                                   
                                                      
                                                         P
                                                         −
                                                         
                                                            p
                                                            1
                                                         
                                                         −
                                                         
                                                            T
                                                            
                                                               i
                                                               *
                                                            
                                                         
                                                         >
                                                         
                                                            (
                                                            3
                                                            
                                                               p
                                                               1
                                                            
                                                            +
                                                            
                                                               p
                                                               3
                                                            
                                                            )
                                                         
                                                         −
                                                         
                                                            p
                                                            1
                                                         
                                                         −
                                                         
                                                            (
                                                            
                                                               p
                                                               1
                                                            
                                                            +
                                                            
                                                               p
                                                               
                                                                  i
                                                                  *
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                   
                                                      =
                                                   
                                                   
                                                      
                                                         
                                                            p
                                                            1
                                                         
                                                         +
                                                         
                                                            p
                                                            3
                                                         
                                                         −
                                                         
                                                            p
                                                            
                                                               i
                                                               *
                                                            
                                                         
                                                         ≥
                                                         
                                                            p
                                                            1
                                                         
                                                         .
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    Let us now define a (no-idle) schedule S of length P, where machine M
                                    1 processes the jobs in the order i*, …, n, 1, …, i* − 1, machine M
                                    2 processes the jobs in the order 2, …, n, 1 and machine M
                                    3 processes the jobs in the order 1, …, n, (see Fig. 2
                                     which depicts the case where 
                                       
                                          
                                             J
                                             
                                                i
                                                *
                                             
                                          
                                          =
                                          
                                             J
                                             4
                                          
                                       
                                    ).

Then, the operations of job J
                           1 do not overlap, due to (1) and (3). The feasibility of S with respect to all other jobs is evident from Fig. 2. Thus, the schedule S is feasible and, therefore, optimal.□

In this section, we propose an approximation algorithm A for the non-solvable cases of the O3|prpt|C
                     max  problem when p
                     1 > p
                     2 and 2p
                     1 + p
                     2 < P < 3p
                     1 + p
                     3.

                        Theorem 2
                        If p
                           1 > p
                           2 and 2p
                           1 + p
                           2 < P < 3p
                           1 + p
                           2, then there is a polynomial algorithm A for O3|prpt|C
                           max  with the tight worst-case ratio bound 
                              
                                 
                                    
                                       C
                                       max
                                       A
                                    
                                    
                                       C
                                       max
                                       *
                                    
                                 
                                 ≤
                                 
                                    7
                                    6
                                 
                              
                           .

We should point out that the bound 
                        
                           
                              
                                 C
                                 max
                                 A
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           
                              7
                              6
                           
                        
                      in Theorem 2 can be compared to the upper bound 
                        
                           
                              
                                 
                                    C
                                    max
                                 
                                 
                                    (
                                    
                                       S
                                       H
                                    
                                    )
                                 
                                 −
                                 
                                    C
                                    max
                                    *
                                 
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           
                              1
                              3
                           
                        
                      on the relative error of the linear time heuristic H designed in Sevastianov and Tchernykh (1998) for the general O3||C
                     max  problem with arbitrary job processing times.

                        Proof of Theorem 2.
                        Observe that these inequalities imply that 
                              
                                 
                                    p
                                    2
                                 
                                 <
                                 
                                    p
                                    1
                                 
                                 <
                                 
                                    ∑
                                    
                                       j
                                       =
                                       3
                                    
                                    n
                                 
                                 
                                    p
                                    j
                                 
                                 <
                                 2
                                 
                                    p
                                    1
                                 
                              
                           . The schedule depicted in Fig. 3
                            is feasible due to the above inequalities.

In the schedule depicted in Fig. 3, there are idle time intervals of length p
                           1 − p
                           2 on all three machines to the immediate right of job J
                           2. The makespan of this schedule is P + p
                           1 − p
                           2 and it is actually the optimal makespan for an auxiliary O3|prpt|C
                           max  problem with p
                           1 = p
                           2 (the way to construct the optimal makespan for this auxiliary problem was detailed in the previous section). Effectively, we use the optimal solution of the auxiliary problem (with processing times 
                              
                                 p
                                 j
                                 
                                    
                                    ′
                                 
                              
                            such that 
                              
                                 
                                    p
                                    j
                                    
                                       
                                       ′
                                    
                                 
                                 =
                                 
                                    p
                                    j
                                 
                                 ,
                              
                            
                           j ≠ 2 and 
                              
                                 
                                    p
                                    2
                                    
                                       
                                       ′
                                    
                                 
                                 =
                                 
                                    p
                                    1
                                 
                              
                           ) as an approximate solution for the problem on hand with the actual job processing times pj
                           .

We will consider three separate cases. Let 
                              
                                 
                                    C
                                    max
                                    
                                       A
                                       1
                                    
                                 
                                 ,
                              
                           
                           
                              
                                 C
                                 max
                                 
                                    A
                                    2
                                 
                              
                            and 
                              
                                 C
                                 max
                                 
                                    A
                                    3
                                 
                              
                            denote the makespans of the schedules constructed by algorithm A for these three cases. Recall that the optimal makespan satisfies the condition 
                              
                                 
                                    C
                                    max
                                    *
                                 
                                 ≥
                                 max
                                 
                                    {
                                    P
                                    ,
                                    3
                                    
                                       p
                                       1
                                    
                                    }
                                 
                              
                           .

                              Case 1
                              
                                 
                                    
                                       
                                          p
                                          2
                                       
                                       ≥
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                    
                                 . In this case, we utilize the schedule depicted in Fig. 3 and thus 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             1
                                          
                                       
                                       =
                                       P
                                       +
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          2
                                       
                                    
                                 . Since 
                                    
                                       
                                          C
                                          max
                                          *
                                       
                                       ≥
                                       max
                                       
                                          {
                                          P
                                          ,
                                          3
                                          
                                             p
                                             1
                                          
                                          }
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             1
                                          
                                       
                                       −
                                       
                                          C
                                          max
                                          *
                                       
                                       ≤
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          2
                                       
                                       ≤
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                       =
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                       ≤
                                       
                                          1
                                          6
                                       
                                       
                                          C
                                          max
                                          *
                                       
                                    
                                 .


                                 
                                    
                                       
                                          p
                                          2
                                       
                                       ≤
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                    
                                 . The inequalities 2p
                                 1 + p
                                 2 < P < 3p
                                 1 + p
                                 3 imply that 
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             2
                                          
                                          n
                                       
                                       
                                          p
                                          j
                                       
                                       <
                                       2
                                       
                                          p
                                          1
                                       
                                       +
                                       
                                          p
                                          3
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                          1
                                       
                                       <
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          n
                                       
                                       
                                          p
                                          j
                                       
                                    
                                 . Since 
                                    
                                       
                                          p
                                          2
                                       
                                       +
                                       
                                          p
                                          3
                                       
                                       +
                                       
                                          p
                                          4
                                       
                                       ≤
                                       3
                                       
                                          p
                                          2
                                       
                                       ≤
                                       
                                          3
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          p
                                          1
                                       
                                       <
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          n
                                       
                                       
                                          p
                                          j
                                       
                                    
                                  implies that 
                                    
                                       
                                          p
                                          1
                                       
                                       ≤
                                       
                                          p
                                          2
                                       
                                       +
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          k
                                       
                                       
                                          p
                                          j
                                       
                                       <
                                       
                                          p
                                          1
                                       
                                       +
                                       
                                          p
                                          3
                                       
                                    
                                  for some k ∈ {5, …, n}. This in turn implies that 
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             k
                                             +
                                             1
                                          
                                          n
                                       
                                       
                                          p
                                          j
                                       
                                       =
                                       P
                                       −
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          (
                                          
                                             p
                                             2
                                          
                                          +
                                          
                                             ∑
                                             
                                                j
                                                =
                                                3
                                             
                                             k
                                          
                                          
                                             p
                                             j
                                          
                                          )
                                       
                                       <
                                       
                                          (
                                          3
                                          
                                             p
                                             1
                                          
                                          +
                                          
                                             p
                                             3
                                          
                                          )
                                       
                                       −
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          1
                                       
                                       =
                                       
                                          p
                                          1
                                       
                                       +
                                       
                                          p
                                          3
                                       
                                    
                                 . Based on the preceding inequalities, we can construct a feasible schedule depicted in Fig. 4
                                 .

In this schedule, the start times of jobs J
                                 
                                    k + 1, J
                                 2 on machines M
                                 2, M
                                 3 respectively precede the start time of job J
                                 1 on M
                                 1 by at most p
                                 3 and the completion times of jobs Jn, Jk
                                  on machines M
                                 1, M
                                 2 respectively exceed the completion time of job J
                                 1 on M
                                 3 by at most p
                                 3. Thus, 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             2
                                          
                                       
                                       ≤
                                       3
                                       
                                          p
                                          1
                                       
                                       +
                                       2
                                       
                                          p
                                          3
                                       
                                    
                                 ; since 
                                    
                                       
                                          C
                                          max
                                          *
                                       
                                       ≥
                                       max
                                       
                                          {
                                          P
                                          ,
                                          3
                                          
                                             p
                                             1
                                          
                                          }
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             2
                                          
                                       
                                       −
                                       
                                          C
                                          max
                                          *
                                       
                                       ≤
                                       2
                                       
                                          p
                                          3
                                       
                                       ≤
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                       ≤
                                       
                                          1
                                          6
                                       
                                       
                                          C
                                          max
                                          *
                                       
                                    
                                 .


                                 
                                    
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       <
                                       
                                          p
                                          2
                                       
                                       <
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                    
                                 .


                                 P > 3p
                                 1. The corresponding intermediate feasible schedule is depicted in Fig. 5
                                  and it is obtained from Fig. 3 by shifting to the right job J
                                 2 on M
                                 2 and jobs J
                                 1 and J
                                 2 on M
                                 3 by p
                                 1 − p
                                 2 (this is possible because P > 3p
                                 1).

The makespan of this schedule is equal to P + p
                                 1 − p
                                 2 and the completion times of jobs J
                                 1, Jn
                                  on machines M
                                 2, M
                                 3 respectively exceed the completion time of job J
                                 2 on M
                                 1 by 
                                    
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          2
                                       
                                       >
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                       =
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                    
                                 .

The final feasible schedule is constructed from the schedule depicted in Fig. 5 by moving either job J
                                 3 alone or jobs J
                                 3, …, Jk
                                  (for some k ∈ {3, …, n}) into a position immediately following job J
                                 2 on machine M
                                 1 as detailed next.

When 
                                    
                                       
                                          p
                                          3
                                       
                                       ≥
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       ,
                                    
                                  we insert job J
                                 3 alone immediately after job J
                                 2 on M
                                 1 so that 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             3
                                          
                                       
                                       =
                                       P
                                       +
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          2
                                       
                                       −
                                       
                                          p
                                          3
                                       
                                    
                                 . Observe that job J
                                 3 will complete its processing on M
                                 1 prior to the completion time of job J
                                 1 on M
                                 2. Thus, since 
                                    
                                       
                                          C
                                          max
                                          *
                                       
                                       ≥
                                       max
                                       
                                          {
                                          P
                                          ,
                                          3
                                          
                                             p
                                             1
                                          
                                          }
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             3
                                          
                                       
                                       −
                                       
                                          C
                                          max
                                          *
                                       
                                       ≤
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          2
                                       
                                       −
                                       
                                          p
                                          3
                                       
                                       <
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       =
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                       ≤
                                       
                                          1
                                          6
                                       
                                       
                                          C
                                          max
                                          *
                                       
                                    
                                 .

When 
                                    
                                       
                                          p
                                          3
                                       
                                       <
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       ≤
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          k
                                       
                                       
                                          p
                                          j
                                       
                                       ≤
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                    
                                  for some k ∈ {3, …, n} since 
                                    
                                       
                                          p
                                          1
                                       
                                       <
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          n
                                       
                                       
                                          p
                                          j
                                       
                                    
                                 . Thus, in this case, we move jobs J
                                 3, …, Jk
                                  immediately following job J
                                 2 on M
                                 1 so that 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             3
                                          
                                       
                                       =
                                       P
                                       +
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          2
                                       
                                       −
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          k
                                       
                                       
                                          p
                                          j
                                       
                                    
                                 . Thus, since 
                                    
                                       
                                          C
                                          max
                                          *
                                       
                                       ≥
                                       max
                                       
                                          {
                                          P
                                          ,
                                          3
                                          
                                             p
                                             1
                                          
                                          }
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          C
                                          max
                                          
                                             A
                                             3
                                          
                                       
                                       −
                                       
                                          C
                                          max
                                          *
                                       
                                       ≤
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          p
                                          2
                                       
                                       −
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          k
                                       
                                       
                                          p
                                          j
                                       
                                       <
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          1
                                          4
                                       
                                       
                                          p
                                          1
                                       
                                       =
                                       
                                          1
                                          2
                                       
                                       
                                          p
                                          1
                                       
                                       ≤
                                       
                                          1
                                          6
                                       
                                       
                                          C
                                          max
                                          *
                                       
                                    
                                 .


                                 P ≤ 3p
                                 1. The corresponding intermediate feasible schedule is depicted in Fig. 6
                                  and it is obtained from Fig. 3 by shifting to the right job J
                                 2 on M
                                 2 and job J
                                 1 on M
                                 3 by 
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          n
                                       
                                       
                                          p
                                          j
                                       
                                       −
                                       
                                          p
                                          1
                                       
                                    
                                  so that the completion time of job J
                                 1 on M
                                 3 coincides with its start time on M
                                 1 (this is possible because P ≤ 3p
                                 1). As a result of these shifts, there is an idle time interval equal to p
                                 1 − p
                                 2 at the end of the schedule on M
                                 1 and two idle time intervals on both M
                                 2 and M
                                 3 equal to 
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             3
                                          
                                          n
                                       
                                       
                                          p
                                          j
                                       
                                       −
                                       
                                          p
                                          1
                                       
                                    
                                  and 
                                    
                                       2
                                       
                                          p
                                          1
                                       
                                       −
                                       
                                          (
                                          
                                             p
                                             2
                                          
                                          +
                                          
                                             ∑
                                             
                                                j
                                                =
                                                3
                                             
                                             n
                                          
                                          
                                             p
                                             j
                                          
                                          )
                                       
                                    
                                  respectively (going from left to right).

The final feasible schedule is constructed from the schedule depicted in Fig. 6 by moving either job J
                           3 alone or jobs J
                           3, …, Jk
                            (for some k ∈ {3, …, n}) immediately after job J
                           2 on machine M
                           1 as in Subcase 3.1. Using the same argument proof as in Subcase 3.1 we can show that 
                              
                                 
                                    C
                                    max
                                    
                                       A
                                       3
                                    
                                 
                                 −
                                 
                                    C
                                    max
                                    *
                                 
                                 ≤
                                 
                                    1
                                    2
                                 
                                 
                                    p
                                    1
                                 
                                 ≤
                                 
                                    1
                                    6
                                 
                                 
                                    C
                                    max
                                    *
                                 
                              
                           .

By combining all cases, algorithm A supplies the worst-case ratio bound 
                              
                                 
                                    
                                       C
                                       max
                                       A
                                    
                                    
                                       C
                                       max
                                       *
                                    
                                 
                                 ≤
                                 
                                    7
                                    6
                                 
                              
                           .

The tightness of the above bounds can be shown using a 6-job problem instance with [p
                           1, p
                           2, p
                           3, p
                           4, p
                           5, p
                           6] = [10, 5, 5, 4, 3, 3]. The heuristic schedule is as in Fig. 3 with 
                              
                                 
                                    C
                                    max
                                    A
                                 
                                 =
                                 35
                              
                           . The optimal sequence is {J
                           4, J
                           5, J
                           6, J
                           1, J
                           2, J
                           3} on M
                           1, {J
                           2, J
                           3, J
                           4, J
                           5, J
                           6, J
                           1} on M
                           2, and {J
                           1, J
                           2, J
                           3, J
                           4, J
                           5, J
                           6} on M
                           3 with 
                              
                                 
                                    C
                                    max
                                    *
                                 
                                 =
                                 P
                                 =
                                 3
                                 
                                    p
                                    1
                                 
                                 =
                                 30
                              
                           . Therefore, 
                              
                                 
                                    C
                                    max
                                    A
                                 
                                 −
                                 
                                    C
                                    max
                                    *
                                 
                                 =
                                 
                                    1
                                    2
                                 
                                 
                                    p
                                    1
                                 
                                 =
                                 5
                              
                            and 
                              
                                 
                                    
                                       C
                                       max
                                       A
                                    
                                    
                                       C
                                       max
                                       *
                                    
                                 
                                 =
                                 
                                    7
                                    6
                                 
                              
                           .□

All proposed algorithms run in linear time and the initial sorting of the jobs requires O(nlog n) time; therefore, the overall running time of each algorithm is also O(nlog n).

In this section, we show how some of our exact and approximation algorithms for the O3|prpt|C
                     max  problem can be modified/extended so that they can be implemented to the more general M3|prpt|C
                     max  problem. Chin and Tsai (1981) showed that any permutation is optimal for the F3|prpt|C
                     max  problem with 
                        
                           
                              C
                              max
                              *
                           
                           =
                           Q
                           +
                           2
                           
                              q
                              max
                           
                        
                     .

The main idea in constructing optimal M3|prpt|C
                     max  schedules is to apply the techniques of Section 2 for the O3|prpt|C
                     max  problem and develop schedules of the form “O1–F–O2” with 
                        
                           
                              C
                              max
                              *
                           
                           =
                           P
                           +
                           Q
                        
                      under the assumptions p
                     1 = p
                     2 ≥ q
                     max  and P ≥ 3p
                     1 or under the assumptions p
                     1 > p
                     2, P ≥ 3p
                     1 + p
                     3 and p
                     1 = p
                     max  ≥ q
                     max . In these schedules, one segment of the open shop job subset “O1” is sequenced first followed by the flow shop job subset “F” and then by the complementary segment of the open shop job subset “O2”.

We first show that the M3|prpt|C
                     max  problem can be solved optimally in polynomial time when p
                     1 = p
                     2 ≥ q
                     max  and P > 3p
                     1.

                        Theorem 3
                        If p
                           1 = p
                           2 ≥ q
                           max  and P ≥ 3p
                           1, then M3|prpt|C
                           max  is solvable in polynomial time and 
                              
                                 
                                    C
                                    max
                                    *
                                 
                                 =
                                 P
                                 +
                                 Q
                              
                           .

Consider the schedule S depicted in Fig. 7
                           . The flow shop job subset is depicted as the block “F” in Fig. 7 and it is sequenced in an arbitrary order. In view of the assumption that p
                           1 ≥ q
                           max , the flow shop jobs in the block “F” do not overlap. Therefore, schedule S is feasible with C
                           max (S) = P + Q and thus optimal.□

We next show that the M3|prpt|C
                     max  problem is solvable in polynomial time when p
                     1 > p
                     2, P ≥ 3p
                     1 + p
                     3 and p
                     max  ≥ q
                     max .

                        Theorem 4
                        If p
                           1 > p
                           2, P ≥ 3p
                           1 + p
                           3 and p
                           1 = p
                           max  ≥ q
                           max , then M3|prpt|C
                           max  is solvable in polynomial time and 
                              
                                 
                                    C
                                    max
                                    *
                                 
                                 =
                                 P
                                 +
                                 Q
                              
                           .

Consider the schedule S depicted in Fig. 8
                            using the same “split” point for the open shop job subset as in Theorem 1, part (2), while constructing the open shop schedule depicted in Fig. 2 (the case where 
                              
                                 
                                    J
                                    
                                       i
                                       *
                                    
                                 
                                 =
                                 
                                    J
                                    4
                                 
                              
                            is depicted in Fig. 8).

The block “F” in Fig. 8 depicts the whole flow shop job subset sequenced in the SPT order. Fig. 8 is obtained from Fig. 2 by inserting the block “F” after job Jn
                            on each machine. The feasibility of schedule S is implied by the feasibility of the schedule in Fig. 2 and by the assumption p
                           max  ≥ q
                           max  which guarantees that the jobs in “F” (sequenced in an arbitrary order) do not overlap. Therefore, schedule S is feasible with C
                           max (S) = P + Q and thus optimal.□

We close this section by considering approximate solutions for the non-solvable cases of M3|prpt|C
                     max  problem. As pointed out by a referee, if the open shop jobs are treated as flow shop ones, then according to Chin and Tsai (1981), any permutation job sequence S will yield 
                        
                           
                              C
                              max
                           
                           
                              (
                              S
                              )
                           
                           ≤
                           P
                           +
                           Q
                           +
                           2
                           
                              q
                              max
                              
                                 
                                 ′
                              
                           
                           ,
                        
                      where 
                        
                           
                              q
                              max
                              
                                 
                                 ′
                              
                           
                           =
                           max
                           
                              {
                              
                                 p
                                 max
                              
                              ,
                              
                                 q
                                 max
                              
                              }
                           
                        
                      and this bound is tight when P = 0. Since 
                        
                           
                              q
                              max
                              
                                 
                                 ′
                              
                           
                           ≤
                           
                              1
                              3
                           
                           
                              C
                              max
                              *
                           
                        
                      and 
                        
                           P
                           +
                           Q
                           ≤
                           
                              C
                              max
                              *
                           
                           ,
                        
                     
                     
                        
                           
                              
                                 
                                    C
                                    max
                                 
                                 
                                    (
                                    S
                                    )
                                 
                              
                              
                                 C
                                 max
                                 *
                              
                           
                           ≤
                           
                              5
                              3
                           
                        
                     .

@&#DISCUSSION AND CONCLUSIONS@&#

We conclude our presentation by discussing the applicability of our open shop results to the proportionate open shop problem with unequal machine speeds denoted as the O3|prpt, unsp|C
                     max  problem. In the O3|prpt, unsp|C
                     max  problem, the actual processing time of job Jj
                      on machine Mi
                      is given as 
                        
                           
                              p
                              
                                 i
                                 j
                              
                           
                           =
                           
                              
                                 p
                                 j
                              
                              
                                 s
                                 i
                              
                           
                           ,
                        
                      where si
                      ≥ 1 is the speed of machine Mi
                     . By normalizing the speeds, we can assume that s
                     1 = 1 < s
                     2 ≤ s
                     3.

The O3|prpt, unsp|C
                     max  problem can be solved optimally in polynomial time when 
                        
                           
                              p
                              2
                           
                           ≥
                           
                              
                                 p
                                 1
                              
                              
                                 s
                                 2
                              
                           
                        
                      because the condition 
                        
                           
                              p
                              2
                           
                           ≥
                           
                              
                                 p
                                 1
                              
                              
                                 s
                                 2
                              
                           
                        
                      satisfies the sufficient condition p
                     12 ≥ max 
                        j = 1, …, n
                     {p
                     2j
                     } of Kyparisis and Koulamas (1997) for solving the more general O3||C
                     max  problem with ordered machines in polynomial time.

Also, we can construct an optimal schedule for the O3|prpt, unsp|C
                     max  problem similar to the one depicted in Fig. 2 with 
                        
                           
                              C
                              max
                              *
                           
                           =
                           P
                        
                      when P ≥ 3p
                     1 + p
                     3 by following the same steps as in Section 2 for the O3|prpt|C
                     max  problem. Finally, we can construct an optimal schedule for the O3|prpt, unsp|C
                     max  problem similar to the one depicted in Fig. 1 with 
                        
                           
                              C
                              max
                              *
                           
                           =
                           
                              p
                              1
                           
                           
                              (
                              1
                              +
                              
                                 1
                                 
                                    s
                                    2
                                 
                              
                              +
                              
                                 1
                                 
                                    s
                                    3
                                 
                              
                              )
                           
                        
                      when 
                        
                           
                              p
                              1
                           
                           ≥
                           
                              s
                              3
                           
                           max
                           
                              {
                              
                                 p
                                 2
                              
                              ,
                              
                                 ∑
                                 
                                    j
                                    =
                                    3
                                 
                                 n
                              
                              
                                 p
                                 j
                              
                              }
                           
                        
                     . The feasibility of the constructed schedule follows from the observation that the condition 
                        
                           
                              p
                              1
                           
                           ≥
                           
                              s
                              3
                           
                           max
                           
                              {
                              
                                 p
                                 2
                              
                              ,
                              
                                 ∑
                                 
                                    j
                                    =
                                    3
                                 
                                 n
                              
                              
                                 p
                                 j
                              
                              }
                           
                        
                      ensures that 
                        
                           
                              
                                 p
                                 1
                              
                              
                                 s
                                 3
                              
                           
                           ≥
                           
                              p
                              2
                           
                        
                      and that 
                        
                           
                              
                                 p
                                 1
                              
                              
                                 s
                                 3
                              
                           
                           ≥
                           
                              ∑
                              
                                 j
                                 =
                                 3
                              
                              n
                           
                           
                              p
                              j
                           
                        
                      as well. These last two results do not extend to the ordered open shop problem because the speed values s
                     2, s
                     3 are not common to all jobs in the ordered open shop.

Future research should focus on approximate solutions for the non-solvable cases of the M3|prpt|C
                     max  problem with stronger performance guarantees.

@&#ACKNOWLEDGEMENT@&#

We would like to thank the referees for their insightful comments which helped us improve earlier versions of this paper.

@&#REFERENCES@&#

