@&#MAIN-TITLE@&#Acceleration of MAP-EM algorithm via over-relaxation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A modified MAP-EM method for faster reconstruction using an over-relaxation factor was proposed.


                        
                        
                           
                           The method, called MAP-AEM, converges numerically much faster than MAP-EM.


                        
                        
                           
                           MAP-AEM's speed can be made faster than an OS-type method if properly optimized.


                        
                        
                           
                           MAP-AEM outperforms MAP-EM in terms of speed, relative error and STD stability.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Faster tomographic reconstruction

MAP-EM algorithm

PET reconstruction

SPECT reconstruction

@&#ABSTRACT@&#


               
               
                  To improve the convergence rate of the effective maximum a posteriori expectation-maximization (MAP-EM) algorithm in tomographic reconstructions, this study proposes a modified MAP-EM which uses an over-relaxation factor to accelerate image reconstruction. The proposed method, called MAP-AEM, is evaluated and compared with the results for MAP-EM and for an ordered-subset algorithm, in terms of the convergence rate and noise properties. The results show that the proposed method converges numerically much faster than MAP-EM and with a speed that is comparable to that for an ordered-subset type method. The proposed method is effective in accelerating MAP-EM tomographic reconstruction.
               
            

@&#INTRODUCTION@&#

In emission tomography, such as positron emission tomography (PET) and single-photon emission computed tomography (SPECT), statistical reconstructions outperform FBP (filtered back-projection) [1], because of their ability to model noise, system geometry and imaging physics, in addition to incorporating prior information that is related to the object. One of the most widely used statistical reconstruction methods is the ML-EM (maximum likelihood expectation-maximization) algorithm [2]. The ML-EM algorithm is hampered by its slow convergence rate and has difficulty with the ill-condition problem [3].

To improve its speed, the OS-EM (ordered-subset expectation-maximization) algorithm was proposed [4]. By using only one subset of the projection data per sub-iteration, the algorithm is an order of magnitude faster than the ML-EM. While OS-EM is fast, parallelizable and it preserves positivity, it does not converge to the ML solution [4]. In particular, increasing the number of subsets leads to increased noise and subset-related artifacts, which degrade lesion-detection performance [5]. Alternative methods to ensure convergence have been proposed, including RAMLA (row-action maximum likelihood algorithm) [6] and OS-separable paraboloidal surrogate [7]. RAMLA uses a manually selected relaxation parameter to preserve the property of convergence, while at the same time accelerating the iterative processing. Another way to solve the convergence problem in OSEM is the so-called complete-data ordered-subset EM (COSEM) algorithm [8], which uses all of the projection data for each pixel update, as opposed to only a subset of the projection data, which is the case for the OSEM update scheme. No extra parameter is necessary for COSEM, but the convergence rate is not as fast as that of a conventional OSEM or an optimized RAMLA. A similar reconstruction strategy, called an incremental optimization transfer algorithm, has also been applied to transmission tomography [9]. Instead of using ordered subsets, accelerated EM methods use a larger step size than the correction factor for a ML-EM [10–14]. One approach for increasing the step is to use a certain power to enlarge the correction term, while retaining the algorithm positivity [10]. By rewriting the ML-EM in an additive form, the other strategy is to multiply the correction term by a certain factor [11–14]. Recently, the COSEM reconstruction [15] used the same acceleration scheme to compensate for the slightly slow acceleration that is a result of having to process all of the data in the normalization term of the algorithm.

For the ill-condition problem, one effective solution is to add a prior or a penalty term to the ML objective function and that becomes the MAP (maximum a posteriori) reconstruction [16]. However, incorporating a prior term into a reconstruction algorithm may introduce coupling between pixels [17]. Although the OSL (one-step-late) algorithm [18] is one way to reduce the coupling in MAP-EM reconstructions, it is suboptimal and does not converge to the MAP solution [19]. As in the ML case, the convergence rate for MAP-EM is also an issue. The BSREM algorithm proposed by De Pierro and Yamagishi [19] solves the coupling problem by using a surrogate function and accelerates the reconstruction by introducing a relaxation parameter, as in the RAMLA algorithm, for convergence. Alternatively, the MAP-COSEM method, a MAP version of the COSEM algorithm [8], can be used with a similar ordered-subset updating scheme to accelerate the MAP reconstruction. In addition to the improvement in convergence rate, edge-preserving priors were developed to preserve fine detail [20–22]. However, edge enhancement that uses edge-preserving priors is limited by several factors, such as an object's size and its intensity. To further sharpen the boundaries between tissues, while maintaining smoothness within the tissue, the incorporation of anatomical prior information in MAP reconstruction has been widely studied [23–26]. A more complete overview of MAP-EM and its related works can be found in [1].

Although the acceleration scheme [10–14] described above has been applied to conventional ML-EM, OSEM [11] and COSEM [15], it has not been applied to MAP-EM reconstruction. In this study, in order to retain good noise properties that result from the use of an entire set of projection data [11], a new algorithm that increases the convergence rate of a conventional MAP-EM is derived. The algorithm, termed MAP-AEM, incorporates the surrogate function of the quadratic prior [19] into reconstructions, without applying the OSL approach. Although these ideas were introduced at a previous conference [27], a detailed description and more simulation results, including digital and Monte Carlo simulations, are provided here.

The proposed algorithms are derived in Section 2. The methods of evaluating the performance of the proposed algorithms are described in Section 3. The results, including the empirical visual performance, a comparison of the convergence rate, the reconstruction accuracy and the noise properties of the proposed methods are shown and compared with those for a conventional MAP-EM in Section 4. A comparison of the convergence rate for these methods and an OS-type reconstruction (MAP-COSEM) is also provided, to show the effectiveness of the proposed algorithms. The findings of this study are discussed in Section 5 and the conclusion follows.

The collected data is indicated by g and measured counts at the ith detector bin, g
                     
                        i
                      (i
                     =1,…, M), have a Poisson distribution. The Poisson mean is Hf, where H is the system matrix with element H
                     
                        ij
                      indicating the probability that a photon is emitted from the jth pixel and is detected by the ith bin. Also, f is the intensity object vector with pixel intensity at the jth pixel, which is expressed by f
                     
                        j
                      (j
                     =1,…, N). The MAP reconstruction, 
                        
                           f
                           ˆ
                        
                     , is obtained by optimizing the Poisson log-likelihood objective function, Φ
                     
                        L
                     (g|f), and a prior Φ
                     
                        P
                     (f), as:
                        
                           (1)
                           
                              
                                 
                                    f
                                    ˆ
                                 
                                 =
                                 arg
                                 
                                    
                                       max
                                    
                                    
                                       f
                                       ≥
                                       0
                                    
                                 
                                 [
                                 
                                    Φ
                                    L
                                 
                                 (
                                 g
                                 |
                                 f
                                 )
                                 +
                                 
                                    Φ
                                    P
                                 
                                 (
                                 f
                                 )
                                 ]
                                 ,
                              
                           
                        
                     where
                        
                           (2)
                           
                              
                                 
                                    Φ
                                    L
                                 
                                 (
                                 g
                                 |
                                 f
                                 )
                                 =
                                 −
                                 
                                    ∑
                                    i
                                 
                                 
                                    
                                       ∑
                                       j
                                    
                                    
                                       
                                          H
                                          
                                             i
                                             j
                                          
                                       
                                       
                                          f
                                          j
                                       
                                    
                                 
                                 +
                                 
                                    ∑
                                    i
                                 
                                 
                                    
                                       g
                                       i
                                    
                                     
                                    log
                                    
                                       ∑
                                       j
                                    
                                    
                                       
                                          H
                                          
                                             i
                                             j
                                          
                                       
                                       
                                          f
                                          j
                                       
                                    
                                 
                              
                           
                        
                     
                  

A smoothing prior, Φ
                     
                        P
                     (f), of a quadratic form is used as:
                        
                           (3)
                           
                              
                                 
                                    Φ
                                    P
                                 
                                 (
                                 f
                                 )
                                 =
                                 −
                                 β
                                 
                                    ∑
                                    j
                                 
                                 
                                    
                                       ∑
                                       
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          N
                                          (
                                          j
                                          )
                                       
                                    
                                    
                                       
                                          ω
                                          
                                             j
                                             
                                                j
                                                ′
                                             
                                          
                                       
                                       
                                          
                                             (
                                             
                                                f
                                                j
                                             
                                             −
                                             
                                                f
                                                
                                                   j
                                                   ′
                                                
                                             
                                             )
                                          
                                          2
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     where β
                     >0 represents the smoothing parameter. Herein, N(j) is the set of neighborhood systems of pixel j and 
                        
                           
                              ω
                              
                                 j
                                 
                                    j
                                    ′
                                 
                              
                           
                        
                      indicates the weight between pixel j and its neighboring pixel, j′. Usually, the weight, 
                        
                           
                              ω
                              
                                 j
                                 
                                    j
                                    ′
                                 
                              
                           
                        
                     , is 1 for horizontal and vertical neighbors and 
                        
                           1
                           /
                           
                              2
                           
                        
                      for diagonal neighbors. Only 4 nearest-neighbors are used in this study. The log-posterior values at the kth iteration that are used to evaluate the convergence rate are the summation of the Poisson log-likelihood objective function, Φ
                     
                        L
                     (g|f), and a quadratic prior, Φ
                     
                        P
                     (f), where f
                     
                        j
                      is replaced by the current estimate, 
                        
                           
                              
                                 f
                                 ˆ
                              
                              j
                              
                                 (
                                 k
                                 )
                              
                           
                        
                     .

A closed-form formula is difficult to obtain because there is coupling of f in the logarithmic term of the likelihood function (2). To solve this problem, the EM algorithm was proposed [2]. It has two steps: expectation (E) and maximization (M). By substituting a surrogate function for the quadratic prior [19] and using the EM algorithm, the MAP-EM reconstruction update equations at the kth iteration can be summarized as the following two steps, where 
                        
                           
                              υ
                              
                                 j
                                 
                                    j
                                    ′
                                 
                              
                           
                           ≡
                           
                              ω
                              
                                 j
                                 
                                    j
                                    ′
                                 
                              
                           
                           +
                           
                              ω
                              
                                 
                                    j
                                    ′
                                 
                                 j
                              
                           
                        
                      and D
                     
                        j
                     
                     ≡∑
                        i
                     
                     H
                     
                        ij
                      
                     [28]:
                        
                           (4)
                           
                              
                                 
                                    C
                                    
                                       i
                                       j
                                    
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 
                                    
                                       
                                          H
                                          
                                             i
                                             j
                                          
                                       
                                       
                                          g
                                          i
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             ′
                                          
                                       
                                       
                                          
                                             H
                                             
                                                i
                                                
                                                   j
                                                   ′
                                                
                                             
                                          
                                          
                                             
                                                f
                                                ˆ
                                             
                                             
                                                j
                                                ′
                                             
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                    
                                 
                                  
                                 ∀
                                 i
                                 ,
                                 j
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       −
                                       b
                                       +
                                       
                                          
                                             
                                                b
                                                2
                                             
                                             −
                                             4
                                             a
                                             c
                                          
                                       
                                    
                                    
                                       2
                                       a
                                    
                                 
                                 =
                                 d
                                  
                                 ∀
                                 j
                              
                           
                        
                     where 
                        
                           a
                           =
                           4
                           β
                           
                              ∑
                              
                                 j
                                 ′
                              
                           
                           
                              
                                 υ
                                 
                                    j
                                    
                                       j
                                       ′
                                    
                                 
                              
                           
                        
                     , 
                        
                           b
                           =
                           −
                           2
                           β
                           
                              ∑
                              
                                 j
                                 ′
                              
                           
                           
                              
                                 υ
                                 
                                    j
                                    
                                       j
                                       ′
                                    
                                 
                              
                              (
                              
                                 
                                    f
                                    ˆ
                                 
                                 j
                                 
                                    (
                                    k
                                    )
                                 
                              
                              +
                              
                                 
                                    f
                                    ˆ
                                 
                                 
                                    j
                                    ′
                                 
                                 
                                    (
                                    k
                                    )
                                 
                              
                              )
                              +
                              
                                 D
                                 j
                              
                           
                        
                     , 
                        
                           c
                           =
                           −
                           
                              ∑
                              i
                           
                           
                              
                                 C
                                 
                                    i
                                    j
                                 
                                 
                                    (
                                    k
                                    +
                                    1
                                    )
                                 
                              
                           
                        
                      and 
                        
                           d
                           =
                           (
                           −
                           b
                           +
                           
                              
                                 
                                    b
                                    2
                                 
                                 −
                                 4
                                 a
                                 c
                              
                           
                           )
                           /
                           (
                           2
                           a
                           )
                        
                     .

To derive the accelerated MAP reconstruction, a power factor, h, which is similar to that in [10–14] is introduced to these MAP-EM updating equations. The accelerated MAP-EM reconstruction method is then derived by multiplying the previous update by a correction factor, which is the h power of the ratio of the new MAP-EM update to the previous update, as:
                        
                           (6)
                           
                              
                                 
                                    
                                       f
                                       ˜
                                    
                                    j
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                d
                                                
                                                   
                                                      
                                                         f
                                                         ˆ
                                                      
                                                      j
                                                      
                                                         (
                                                         k
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    h
                                 
                              
                           
                        
                     
                  

By rewriting Eq. (6) in an additive form and using a Taylor series expansion, the updating equation is expressed as:
                        
                           (7)
                           
                              
                                 
                                    
                                       f
                                       ˜
                                    
                                    j
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 
                                    
                                       (
                                       1
                                       +
                                       
                                          X
                                          j
                                       
                                       )
                                    
                                    h
                                 
                                 =
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 
                                    
                                       1
                                       +
                                       h
                                       
                                          X
                                          j
                                       
                                       +
                                       
                                          
                                             h
                                             (
                                             h
                                             −
                                             1
                                             )
                                          
                                          2
                                       
                                       
                                          X
                                          j
                                          2
                                       
                                       +
                                       ⋯
                                    
                                 
                              
                           
                        
                     where
                        
                           (8)
                           
                              
                                 
                                    X
                                    j
                                 
                                 =
                                 
                                    
                                       d
                                       −
                                       
                                          
                                             f
                                             ˆ
                                          
                                          j
                                          
                                             (
                                             k
                                             )
                                          
                                       
                                    
                                    
                                       
                                          
                                             f
                                             ˆ
                                          
                                          j
                                          
                                             (
                                             k
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Since the zero and first orders of a Taylor series expansion have larger values than other terms, the new updating equation is derived in terms of a first order approximation of Eq. (7) as:
                        
                           (9)
                           
                              
                                 
                                    
                                       f
                                       ˜
                                    
                                    j
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 +
                                 h
                                 (
                                 d
                                 −
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 )
                                 =
                                 (
                                 1
                                 −
                                 h
                                 )
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 +
                                 h
                                 d
                              
                           
                        
                     
                  

In fact, the new algorithm, MAP-AEM, can be seen as an accelerated scheme that uses an additive over-relaxation factor. However, an additional count normalization term is necessary, to preserve the total counts in the data [11], as:
                        
                           (10)
                           
                              
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       f
                                       ˜
                                    
                                    j
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          
                                             g
                                             i
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          
                                             ∑
                                             
                                                j
                                                ′
                                             
                                          
                                          
                                             
                                                H
                                                
                                                   i
                                                   
                                                      j
                                                      ′
                                                   
                                                
                                             
                                             
                                                
                                                   f
                                                   ˜
                                                
                                                j
                                                
                                                   (
                                                   k
                                                   +
                                                   1
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     
                  

Since Eq. (10) can be combined with the projection operation of the next iteration, the additional computation time is negligible, except for the last iteration.

A 128×128 digital cylindrical phantom, with three regions of interest (ROIs), cold (i.e. black), background and hot (i.e. white) (with activity ratios of 1:4:8), as shown in Fig. 1
                        (left), was used for data simulation. The system matrix, H, was generated using a ray-tracing method [29]. Poisson noise and the uniform attenuation of water at 140keV were modeled for SPECT imaging, but not the detector response. The projection data was simulated for a total of 500K counts, with dimensions of 128 detector bins and 128 scanning angles over 360°. For the noise analysis, 100 realizations of noisy data were simulated.

To further evaluate the performance of the proposed method, a digital Zubal brain phantom [30], as shown in Fig. 1(center), was also used for simulation. To simulate the conditions for neuroimaging studies [31], the ratio of the activity concentration in the striatum region to the background was 4:1. All other conditions for data simulation and acquisition were the same as those for the cylindrical phantom study.

To investigate the performance for a more realistic condition, a brain phantom, with gray matter, white matter and cerebrospinal fluid (CSF), was simulated, as shown in Fig. 1(right). To increase complexity, three separate tumor regions were added to the phantom. The resultant intensity for tumor:gray matter:white matter:CSF is 5:3:1:0. The simulation conditions were the same as those used before.

A GATE Monte Carlo simulation [32] (Version 4.0.0) was performed, to determine the feasibility of the proposed method in more realistic conditions. The platform simulates most of the physical effects during practical scanning, based on the settings for user-specified geometry, material, physics and protocol. In this study, a dual-head SPECT system, which is equipped with a typical low-energy high-resolution (LEHR) parallel-hole collimator (hole size: 1.4mm, septal thickness: 0.16mm, and hole length: 32.8mm), was simulated. A NaI(Tl) crystal with an active area of 128mm×128mm and thickness of 10mm was used for photon detection. A 7.536mL cylindrical phantom with two 0.471mL inserts, representing cold and hot regions, was placed 47.2mm away from the detector. The phantom contained a total of 21.5625MBq (megabecquerels) and the relative activity concentrations for the cold, hot and background regions were the same as those seen in the simulation study 1. The cameras moved around the object over 360° and projection data was collected by 64 angles, taking 10s per angle. The physical effects, including the photoelectric absorption and Compton scattering, were modeled in the simulation. An attenuation map with air (cold region) and water (hot region and background) was used. The data was then sorted into a series of sinograms, with dimension of 128 bins×64 angles. Only the central slice, with a total of 196K collecting counts, was used for the analysis.

Following each projection data simulation, the acquired sinogram was reconstructed, using conventional MAP-EM and the proposed accelerated algorithm. For all of the reconstructions, the same system matrix, H, was the same as that used to generate the projections and an initial condition of a uniform image with a value of 1.0 was used. For the digital phantoms, a uniform attenuation map that was the same as that used in the simulation was used in the system matrix, to correct attenuation. Since the main purpose of this study is to investigate the capability of the acceleration schemes that are applied to the MAP reconstruction, the smoothing parameter, β, that leads to acceptable image quality, was maintained at a fixed value (=1) for all methods, for simplicity. A larger value of β leads to a smoother image and more edge information is lost, but if β is too small, the reconstructed image is very noisy. Task-based selection of the parameter is possible, but complex [33]. An empirical and easy way is to select the smoothing parameter, based on a visual investigation or the signal-to-noise ratio within some target region. However, further research is necessary to optimize the value of β in an effective and efficient way. In addition, MAP-AEM with various over-relaxation factors (i.e. h) was performed to investigate the increase in the speed of convergence.

The performance of the proposed methods was evaluated in terms of empirical visual comparison, convergence rate, regional relative error (RE{ROI}) and noise properties, using digital phantoms. For the GATE simulation, only the visual and convergent rates are compared for the proposed and the conventional MAP-EM methods.

The convergence performance is determined using the plots of log-posterior values vs. iteration numbers. Convergence is achieved when there are stable log-posterior values. All reconstructions were performed with 2, 4, 8, 16, 32 and 64 iterations. Although theoretical proof of convergence was not available, the convergence property of the proposed method was studied numerically. To investigate whether MAP-AEM converges to the same value as a convergent algorithm, such as MAP-EM, the log-posterior value of MAP-AEM at the 5000th iteration was calculated and compared with that of MAP-EM.

RE{ROI} for each region was used to quantify the reconstruction accuracy of the proposed methods and the conventional MAP-EM, as:
                           
                              (11)
                              
                                 
                                    RE
                                    {
                                    ROI
                                    }
                                    ≡
                                    
                                       1
                                       
                                          
                                             N
                                             
                                                ROI
                                             
                                          
                                       
                                    
                                    
                                       ∑
                                       
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          ROI
                                       
                                    
                                    
                                       
                                          b
                                          
                                             j
                                             ′
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 b
                                 j
                              
                              =
                              
                                 1
                                 M
                              
                              
                                 ∑
                                 
                                    m
                                    =
                                    1
                                 
                                 M
                              
                              
                                 |
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    m
                                 
                                 −
                                 
                                    f
                                    j
                                 
                                 |
                                 /
                                 
                                    f
                                    j
                                 
                              
                           
                        . N
                        ROI is the number of pixels within the ROI and m is the noise trial index, for {m
                        =1,…, M}. RE{ROI} was plotted against the number of iterations and it was averaged across the 100 noise trials. A standard deviation (STD) analysis over 100 noise trials for the digital simulations was conducted to evaluate the noise properties. Similarly to the RE{ROI} evaluation, all of the results were compared with those for MAP-EM reconstruction. The STD within each ROI for each reconstruction method was computed using the following equation:
                           
                              (12)
                              
                                 
                                    STD
                                    ≡
                                    
                                       
                                          
                                             1
                                             
                                                
                                                   N
                                                   
                                                      ROI
                                                   
                                                
                                             
                                          
                                          
                                             ∑
                                             
                                                
                                                   j
                                                   ′
                                                
                                                ∈
                                                ROI
                                             
                                          
                                          
                                             
                                                σ
                                                
                                                   j
                                                   ′
                                                
                                                2
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              
                                 σ
                                 j
                                 2
                              
                              =
                              
                                 1
                                 M
                              
                              
                                 ∑
                                 
                                    m
                                    =
                                    1
                                 
                                 M
                              
                              
                                 
                                    
                                       (
                                       
                                          
                                             f
                                             ˆ
                                          
                                          j
                                          m
                                       
                                       −
                                       
                                          
                                             
                                                f
                                                ˆ
                                             
                                             ¯
                                          
                                          j
                                       
                                       )
                                    
                                    2
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       f
                                       ˆ
                                    
                                    ¯
                                 
                                 j
                              
                              =
                              
                                 1
                                 M
                              
                              
                                 ∑
                                 
                                    m
                                    =
                                    1
                                 
                                 M
                              
                              
                                 
                                    
                                       f
                                       ˆ
                                    
                                    j
                                    m
                                 
                              
                           
                        .

The convergence rate for the proposed methods is also compared with that for the convergent OS-type MAP reconstruction and that for the MAP-COSEM with different subsets. Since using more than 32 ordered subsets did not result in significant acceleration in the preliminary experiments [15], only the ordered subsets of 8 and 32 were used.

@&#RESULTS@&#

Representative reconstructions of the cylindrical phantom for MAP-EM and MAP-AEM, with h
                     =2, are shown in Fig. 2
                     , for β
                     =1. Compared with MAP-EM, the proposed method requires a smaller number of iterations to achieve similar visual quality. Fig. 3
                      shows the plot of log-posterior values versus iteration numbers for MAP-EM, MAP-AEM (h
                     =2) and MAP-COSEM (subset=8 and 32). The MAP-AEM is faster than the MAP-EM and achieves convergence rates that are similar to those for MAP-COSEM. At the 5000th iteration, the log-posterior values for MAP-EM, MAP-AEM with h
                     =2, MAP-COSEM with subset=8 and MAP-COSEM with subset=32 are 1.454489×106, 1.454487×106, 1.454489×106 and 1.454488×106, respectively. All of the reconstruction methods reach almost the same value eventually.

For the 2D simulations of the cylindrical phantom, the computation time per iteration for MAP-EM, MAP-AEM with h
                     =2, MAP-COSEM with subset=8 and MAP-COSEM with subset=32, for β
                     =1.0, are 75, 78, 125 and 138ms, respectively. The computation time was evaluated and reported on a personal computer with a dual Intel Pentium 4 3.00GHz CPU.

The average REs for MAP-EM, MAP-AEM (h
                     =2) and MAP-COSEM (subset=8 and 32) are shown in Fig. 4
                      as a function of the number of iterations. Compared to MAP-EM, all of the accelerated methods achieve a lower RE after few iterations. In addition, the MAP-AEM and MAP-COSEM have similar REs, but there is some discrepancy in the early iterations. Fig. 5
                      shows the STD analysis for 100 noise trials with 500K counts for the three ROIs in the cylindrical phantom. All of the accelerated methods have a higher STD than the MAP-EM in the early iterations and converge to the same point (stable STD) as the number of iterations increases. The MAP-AEM with h
                     =2 and the MAP-COSEM with subset=8 show a similar acceleration, in terms of STD, but they are slower than the MAP-COSEM with subset=32 during the early iterations.

To investigate the effect of different activity distributions, the same experiments were conducted using the Zubal phantom. Fig. 6
                      shows anecdotal reconstructions for the MAP-EM and the MAP-AEM with h
                     =2. Similarly to Fig. 2, all of the images are visually similar, but the MAP-AEM requires fewer iterations. Although not shown here, the acceleration, in terms of convergence rate, REs and STD studies, in reconstructing the Zubal phantom using proposed method is the same as that for the cylindrical phantom. Fig. 7
                      shows the reconstructed results, using both MAP-EM and MAP-AEM with h
                     =2 for a more realistic brain phantom. The MAP-EM requires more iterations than the MAP-AEM to achieve a similar visual quality.


                     Fig. 8
                      shows the reconstructed results for a GATE simulation for the MAP-EM and the MAP-AEM with h
                     =2. The visual similarity of the images proves the feasibility of the proposed methods under more realistic conditions. The corresponding log-posterior value for each method, plotted against the iteration number, is shown in Fig. 9
                     . The result is similar to those for the digital phantom studies.

@&#DISCUSSION@&#

The capability of the acceleration scheme used in the EM methods was studied and verified for the MAP reconstruction. The digital simulations show that the proposed method outperforms the conventional MAP-EM in terms of convergence, relative error and STD stability. A comparison of the convergence speed for the proposed and the convergent OS-type MAP methods (Fig. 3) shows that the speed of convergence for the proposed method is comparable or faster if a specific over-relaxation factor, h, is used. Convergence to an optimal solution ensures reliability and stability for optimization problems. Therefore, both a rapid initial convergence rate and the ability to achieve convergence are important for clinical applications [9]. Although the most common reconstruction algorithm, OSEM, is faster than MLEM, it is non-convergent. In addition, OSEM has greater variance as the subset increases. Quantitation and lesion detection are also affected by the number of reconstruction iterations [34–36]. A fast convergent algorithm is able to provide fast, accurate and stable results. Thus, our proposed method is potentially useful to generate both fast and convergent reconstruction in clinical applications.

When all of the methods use 5000 iterations to reconstruct the cylindrical phantom with a smoothing parameter of 1, they all reach similar log-posterior values. The MAP-AEM gives a slightly smaller value, possibly because there is a first-order approximation. The results for log-posterior values show that the MAP-AEM performs similarly to the MAP-EM, but it has a faster reconstruction speed, although the theoretical proof of convergence for MAP-AEM is unavailable. In addition to the digital simulation, the visual comparison and the comparison of the speed of convergence for the Monte Carlo simulation show that the proposed methods accelerate MAP reconstructions under more realistic conditions.

In a previous study, the value of h was approximately equal to the accelerating factor of the ML-EM algorithm [11]. The MAP-AEM reconstructs faster than the MAP-EM, but this is not directly related to the value of h. Another preliminary study (not shown here) showed that the optimal h value for the MAP-AEM is less sensitive to smoothing parameters and activity distribution. However, the optimization of h is important and a thorough investigation of the optimization of h for the MAP-AEM is worthy of future study. A complete performance comparison between the proposed methods and the OS-type MAP reconstruction is the subject of ongoing study.

The 2D reconstructions of the cylindrical phantom show that the computation time per iteration of MAP-AEM is about 4% more than that for the MAP-EM, but the MAP-AEM is approximately twice as fast as the MAP-EM. The MAP-AEM provides similar accelerating speed performance as the MAP-COSEM does, but it requires less computation time (i.e. 62% and 57% of the computation time required for the MAP-COSEM with subset=8 and 32, respectively). Overall, the MAP-AEM is faster than the MAP-EM and the MAP-COSEM. Note that all reconstructions were implemented in a personal computer with a dual Intel Pentium 4 3.00GHz CPU. If implemented efficiently in a parallel system with multiprocessors, the MAP-COSEM reconstruction can be even faster.

Although the MAP-AEM exhibits a higher convergence rate, in terms of log-posterior values, in the early iterations (Fig. 3), it is not faster in terms of RE (Fig. 4) or STD (Fig. 5). In other words, an algorithm that converges faster to reach the highest log-posterior value does not necessarily ensure optimal performance, in terms of RE or STD. This inconsistency in performance may occur because both the RE and the STD are calculated using mean regional properties and the spatial distributions of the reconstructed images in the early iterations can vary for different reconstruction methods. Nevertheless, all convergent methods eventually generate the same value.

Because high-dimensional data obtained from advanced systems result in increased computational load, faster reconstruction is important for practical reasons. Since using ordered subset is one effective way to accelerate the reconstruction, future study could also include the use of an over-relaxation scheme in an OS-type MAP algorithm for further speed-up.

@&#CONCLUSION@&#

This study proposes a method to accelerate MAP-EM reconstruction that uses an over-relaxation factor. The results show that the MAP-AEM accelerates a conventional MAP-EM reconstruction, while retaining the convergent property numerically. Using an appropriate over-relaxation factor, the proposed method even delivers a convergence rate that is comparable to that for an OS-type algorithm. The proposed algorithm does not require a specific number of subsets, it eliminates the effect of a varying number of subsets and it is reliable and stable in clinical applications.

@&#ACKNOWLEDGMENTS@&#

This work was supported by Grants MOST 103-2314-B-182-010-MY3 from NSC, Taiwan, and CMRPD1C0641, CMRPD1C0642, CMRPD1C0671, CMRPD1C0672 and CMRPD1C0382 from the Research Fund of Chang Gung Memorial Hospital, Taiwan.
                  Conflict of interest statement
               

The authors declare that they have no conflict of interest.

@&#REFERENCES@&#

