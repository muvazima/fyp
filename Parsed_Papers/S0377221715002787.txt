@&#MAIN-TITLE@&#A note on scheduling problems with competing agents and earliness minimization objectives

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We revisit single-machine two-agent problems with earliness measures.


                        
                        
                           
                           We show their equivalency with tardiness problems.


                        
                        
                           
                           The earliness results can be derived from known tardiness results.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Scheduling

@&#ABSTRACT@&#


               
               
                  We show that a number of scheduling problems with competing agents and earliness minimization objectives are equivalent to the corresponding problems with tardiness minimization objectives.
               
            


                     Mor and Mosheiov (2010) (to be called M–M in the sequel) analyzed scheduling problems with two competing agents and earliness minimization objectives. The purpose of this note is to point out that by invoking the well-known equivalence between earliness and tardiness problems on a single machine (see Du & Leung, 1990), we can derive the results in M–M from known results for the corresponding problems with tardiness minimization objectives. We also list additional competing agent problems with earliness minimization objectives (not considered by M–M) that can be analyzed by invoking the earliness–tardiness equivalence.

Using the notation in M–M knowledge of which is assumed, for each two-agent earliness problem PRE
                     , we can define an equivalent two-agent tardiness problem PR'
                        T
                      in the [0, D] interval with 
                        
                           p
                           
                              
                                 
                                    
                                    ′
                                 
                              
                              j
                              A
                           
                           =
                           
                              p
                              j
                              A
                           
                        
                     , 
                        
                           d
                           
                              
                                 
                                    
                                    ′
                                 
                              
                              j
                              A
                           
                           =
                           D
                           −
                           
                              d
                              j
                              A
                           
                           +
                           
                              p
                              j
                              A
                           
                        
                      for all j = 1, …, nA
                      and 
                        
                           p
                           
                              
                                 
                                    
                                    ′
                                 
                              
                              j
                              B
                           
                           =
                           
                              p
                              j
                              B
                           
                        
                     , 
                        
                           d
                           
                              
                                 
                                    
                                    ′
                                 
                              
                              j
                              B
                           
                           =
                           D
                           −
                           
                              d
                              j
                              B
                           
                           +
                           
                              p
                              j
                              B
                           
                        
                      for all j = 1, …, nB
                     . Let SE
                      be an optimal sequence of JA
                     ∪JB
                      for PRE
                     ; then, we can construct an optimal sequence S'
                        T
                      for PR'
                        T
                      so that the job in position j in SE
                      is sequenced in position nA
                      + nB
                      − j + 1 in S'
                        T
                     . As shown in Du and Leung (1990), 
                        
                           
                              E
                              
                                 [
                                 j
                                 ]
                              
                           
                           =
                           
                              T
                              
                                 [
                                 
                                    n
                                    A
                                 
                                 +
                                 
                                    n
                                    B
                                 
                                 −
                                 j
                                 +
                                 1
                                 ]
                              
                              ′
                           
                        
                      where [j] denotes the job in position j in a given sequence; this equivalence is also true when E
                     [j] is replaced by fj
                     (E
                     [j]) where fj
                     (x) is a non-decreasing function of x with fj
                     (x) = 0 for x ≤ 0.

All jobs are available at time zero, with no precedence relationships among them; the machine is continuously available without any inserted idle time in the [0, D] interval. In a single-agent setting, a number of known results for tardiness-related objectives can be extended to the corresponding earliness-related objectives. The focus of this note is to utilize the earliness–tardiness equivalence for single-machine competing agent problems; our findings are summarized next in Table 1 where A⇔B denotes that problems A, B are equivalent.

Problems 1–5 were considered by M–M. Problem 1 is equivalent to the 
                        
                           1
                           /
                           /
                           
                              f
                              
                                 max
                              
                              A
                           
                           :
                           
                              f
                              
                                 max
                              
                              B
                           
                        
                      problem solved in O[(nA
                     )2 + nB
                     log nB
                     ] time by Agnetis, Mirchandani, Pacciarelli, and Pacifici (2004). Problem 2 was solved by Agnetis et al. (2004) in O(nA
                     log nA
                      + nB
                     log nB
                     ) time. Problem 3 is equivalent to the 
                        
                           1
                           /
                           /
                           ∑
                           
                              
                                 w
                                 j
                                 A
                              
                              
                                 C
                                 j
                                 A
                              
                           
                           :
                           
                              C
                              
                                 max
                              
                              B
                           
                        
                      problem because of the common job due date; the 
                        
                           1
                           /
                           /
                           ∑
                           
                              
                                 w
                                 j
                                 A
                              
                              
                                 C
                                 j
                                 A
                              
                           
                           :
                           
                              C
                              
                                 max
                              
                              B
                           
                        
                      problem is ordinary NP-hard (Agnetis et al., 2004). Problem 4 is equivalent to the 
                        
                           1
                           /
                           /
                           ∑
                           
                              
                                 w
                                 j
                                 A
                              
                              
                                 C
                                 j
                                 A
                              
                           
                           :
                           
                              f
                              
                                 max
                              
                              B
                           
                        
                      problem which is strongly NP-hard (Leung, Pinedo, & Wan, 2010). Problem 5 is a special case of the 
                        
                           1
                           /
                           /
                           ∑
                           
                              C
                              j
                              A
                           
                           :
                           
                              f
                              
                                 max
                              
                              B
                           
                        
                      problem which was solved in O(nA
                     log nA
                      + nB
                     log nB
                     ) time by Agnetis et al. (2004).

Problems 6–7 were not considered by M–M. Problem 6 was shown to be ordinary NP-hard and solvable in 
                        
                           O
                           [
                           
                              
                                 (
                                 
                                    n
                                    A
                                 
                                 )
                              
                              4
                           
                           
                              (
                              
                                 ∑
                                 
                                    j
                                    ∈
                                    
                                       J
                                       A
                                    
                                 
                              
                              
                                 p
                                 j
                                 A
                              
                              +
                              
                                 ∑
                                 
                                    j
                                    ∈
                                    
                                       J
                                       B
                                    
                                 
                              
                              
                                 p
                                 j
                                 B
                              
                              )
                           
                           +
                           
                              n
                              B
                           
                           log
                           
                              n
                              B
                           
                           ]
                        
                      time by Leung et al. (2010). Problem 7 is a generalization of problem 1 to k > 2 agents and was solved by Agnetis, Pacciarelli, and Pacifici (2007) in O(nlog n) time where n is the total number of jobs for all k agents.

@&#ACKNOWLEDGMENT@&#

We would like to thank the referees for their insightful comments which helped us improve an earlier version of this note.

@&#REFERENCES@&#

