@&#MAIN-TITLE@&#Cost optimum design of post-tensioned concrete bridges using a modified colliding bodies optimization algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A modified version of CBO, denoted by MCBO, is utilized to optimize the cost of bridge superstructures.


                        
                        
                           
                           The problem consists of 17 variables and 101 implicit constraints based on AASHTO standard.


                        
                        
                           
                           Optimization is performed for bridges with different span lengths, deck widths, and with various unit costs of concrete.


                        
                        
                           
                           A comparison among the PSO, CBO, and MCBO algorithms is conducted.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Modified colliding bodies optimization

Cost optimization

Post-tensioned concrete bridges

Box girder

@&#ABSTRACT@&#


               
               
                  The Colliding Bodies Optimization (CBO) algorithm is a metaheuristic algorithm inspired by the physics laws of collision in which each candidate solution is modeled as an agent with mass body in proportion to the fitness of the solution. In this paper a modified version of CBO, denoted by MCBO, is utilized to optimize the cost of bridge superstructures. The problem consists of 17 variables and 101 implicit constraints based on AASHTO standard specifications and construction limitations. The optimization is performed for bridges with different span lengths and deck widths, and with various unit costs of concrete. A comparison among the PSO, CBO, and MCBO algorithms is conducted which shows the efficiency and robustness of the MCBO algorithm.
               
            

@&#INTRODUCTION@&#

Over the last few decades, a large number of metaheuristic algorithms have been utilized to solve various optimization problems. These algorithms, with no need for gradient information and a good starting point, provide acceptable solutions in affordable time for complex optimization problems. By imitating natural phenomena, different metahiuristic algorithms are proposed, such as: Genetic Algorithm (GA) [1], Particle Swarm Optimization (PSO) [2], Harmony Search (HS) [3], Big Bang-Big Crunch (BB-BC) [4], Charged System Search (CSS) [5], Teaching-learning-based optimization (TLBO) [6], Multi-class TLBO [7] Ray Optimization (RO) [8], Dolphin Echolocation Optimization (DEO) [9], Colliding Bodies Optimization (CBO) [10], Enhanced Colliding Bodies Optimization (ECBO) [11], Ant Lion Optimizer (ALO) [12], Search group algorithm (SGA) [13].

While considerable research has been conducted on the structural optimization, the great majority deal with academic or small problems. In the past decade or so, there have been notable efforts to bring the structural optimization technology to the structural engineering practice. This technology can be of great value especially for design of large and complex structures. Because of the presence of many design variables and constraints which lead to some complexities in formulating the problem, optimization of bridge structures has not been attempted extensively. Optimum design of multi-span composite box girder bridges using Cuckoo Search algorithm is due to Kaveh et al. [14].

Prestressed concrete bridges, particularly post-tensioned concrete box girders, are very common because of their durability and economy of construction [15]. As several variables are involved in designing of these types of bridges, a wide variety of designs are possible for a certain span length and deck width such that using conventional design methods are not appropriate for finding the best solution. Therefore, optimization techniques are required for these problems. As one of the first attempt to optimize bridges, Torres et al. [16] optimized the cost of prestressed concrete highway bridges by using a linear programming method, and using general geometric programming; Yu et al. [17] presented the cost optimum design of a prestressed concrete box girder bridge; this procedure was also used by Barr et al. [18] to optimize the cost of a continuous three-span bridge RC slab; Lounis and Cohn [19] studied the cost minimization of highway bridges consisting of RC slabs on precast, post-tensioned concrete I-girders using a three-level optimization approach; Fereig [20] presented the minimum cost preliminary design of single span bridges consisting of cast-in-place RC deck and girders, the author linearized the nonlinear problem and solved it by the Simplex method; Aydin and Ayvaz [21] minimized the cost of a pretensioned PC I-girder bridge using a genetic algorithm considering 9 different variables and a total of 28 constraints. In another work [22], they also considered the number of piers as a variable and used a modified hybrid GA to minimize the overall cost. Ahsan et al. [23] presented the cost optimum design of post-tensioned I-girder bridges by considering 14 different variables, 28 explicit constraints, and 46 implicit constraints using an evolutionary operation (EVOP), they also developed their previous work for two span continuous bridges with 51 implicit constraints [24].

In this paper, for the first time, the Colliding Bodies Optimization (CBO) algorithm and its modified version (MCBO) have been applied to a bridge optimization problem. The assumed bridge is a post-tensioned concrete box girder which is constructed cast-in-place (CIP) with span-by-span method. The bridge is also single-span simply-supported. The optimization is carried out for different span lengths, deck widths, and unit costs of concrete utilizing CBO and MCBO algorithms. A comparison among the PSO, CBO, and MCBO algorithms is conducted to investigate the performance of the proposed algorithm.

The remainder of this paper is structured as follows: In Section 2, the cost optimization problem with its variables, objective function, and constrains are stated. In Section 3 the optimization algorithm is introduced, and the result of optimization is presented in Section 4. Finally, in Section 5 some conclusions are provided.

The considered variables in this study are concrete strength, cross-sectional dimensions of a box girder, number of strands per tendon, number of tendons in each web, arrangement of tendons, prestressing force, and reinforcements of slabs. Since concrete strength is a design variable, modulus of elasticity of concrete is considered a function of concrete strength. Design variables are tabulated in Table 1
                        , and a typical cross-section of the assumed bridge with some of the variables is shown in Fig. 1.
                        
                     

The constant design parameters considered in this study are span length, deck width, post-tensioning anchorage system, AASHTO live loads [25], superimposed dead loads, and properties of the materials except concrete strength. 15mm diameter seven-wire low relaxation strands are used for tendons, and the Freyssinet C-range anchorage system is used for post-tensioning the tendons [26]. The constant design parameters are shown in Table 2.
                        
                     

In this study, AASHTO HS20-44 live load [25] (both truck load and lane load) is considered, as shown in Fig. 2
                        . These loads are placed in 12-foot (3.65-m) design traffic lanes. Number of traffic lanes are calculated by the following formula for the roadway width greater than 24ft (7.32m) or less than 20ft (6.10m). Roadway widths from 20ft to 24ft will have two design lanes each being equal to one-half the roadway width.

                           
                              (1)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Number
                                             
                                             of
                                             
                                             design
                                             
                                             traffic
                                             
                                             lanes
                                             =
                                             
                                                [
                                                
                                                   Roadway
                                                   
                                                      3
                                                      
                                                         .
                                                         65
                                                      
                                                   
                                                
                                                ]
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             =
                                             
                                                [
                                                
                                                   
                                                      W
                                                      −
                                                      2
                                                      BarrierWidth
                                                   
                                                   
                                                      3.65
                                                   
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where W is deck width in meter.

The impact factor is applied to the live load to allow for dynamic and impact effects. This factor is determined by the following formula:

                           
                              (2)
                              
                                 
                                    Impact
                                    
                                    Factor
                                    =
                                    1
                                    +
                                    
                                       50
                                       
                                          3.28
                                          L
                                          +
                                          125
                                       
                                    
                                    ≤
                                    1.3
                                 
                              
                           
                        where L is the length of the span in meter.

As per AASHTO [25], when a number of lanes are loaded simultaneously to produce the maximum stresses, the percentages of the live loads in Table 3
                         should be used.

                           
                              •
                              Longitudinal profiles of tendons along the span vary as parabolic curve in the webs of the girder. Since configuration of tendons significantly affects flexural stresses and prestress losses at different sections, number of strands per tendon, number of tendons, number of anchorages in each row, and lowest anchorage position are defined as variables. As shown in Fig. 3
                                 , in addition to cross-sectional dimensions, configuration of tendons at the end and middle sections depends on different parameters including duct size, anchorage spacing, and anchorage edge distances. According to Freyssinet post-tensioning system, these parameters are function of the number of strands per tendon which is assumed as a design variable in this study. Anchorage spacing and anchorage edge distance are also function of concrete strength, and minimum vertical anchorage distance to bottom fiber is related to jack dimension. These parameters for a concrete strength of 40MPa are shown in Table 4.
                                 
                              

The goal of the optimization problem is to minimize the cost of the bridge superstructure. Material and construction costs of concrete, prestressing steel, reinforcement, and formwork are considered in the penalized objective function as follows:

                           
                              (3)
                              
                                 
                                    
                                       C
                                       T
                                    
                                    =
                                    
                                       
                                          
                                             V
                                             c
                                          
                                          .
                                          
                                             C
                                             c
                                          
                                          +
                                          
                                             W
                                             
                                                p
                                                s
                                             
                                          
                                          .
                                          
                                             C
                                             
                                                p
                                                s
                                             
                                          
                                          +
                                          
                                             W
                                             r
                                          
                                          .
                                          
                                             C
                                             r
                                          
                                          +
                                          
                                             A
                                             f
                                          
                                          .
                                          
                                             C
                                             f
                                          
                                       
                                       
                                          W
                                          .
                                          L
                                       
                                    
                                    +
                                    Penalty
                                 
                              
                           
                        where CT
                         is the total cost of the box girder per square meter of the deck. Vc, Wps, Wr
                        , and Af
                         are volume of concrete, weight of prestressing steel, weight of reinforcements, and surface area of formwork, respectively. Cc, Cps, Cr, and Cf
                         are unit material and construction costs of concrete, prestressing steel, reinforcement, and formwork, respectively. A penalty approach is used to guide optimization algorithms toward the feasible solutions.

The unit costs of different materials are shown in Table 5
                        . Analyzing the prices of concrete with different strengths, a linear function is estimated for unit cost of concrete. In calculation of weight of reinforcement steel, all reinforcements including shrinkage and temperature, computational tensile, distribution, and shear reinforcements are taken into account.

Explicit constraints are lower and upper bounds of the design variables based on geometrical restraints, construction limitations, and code requirements. In Table 1, all of the explicit constraints considered in this paper are summarized. Lower limit of concrete strength ( fc') is assumed 35MPa since, according to Freyssinet, minimum concrete strength at transfer ( fci') is 24MPa (fci'
                        
                        =
                        
                        0.7fc'). Because of practical restrictions, concrete strength is assumed no greater than 50MPa. Minimum depth of the girder is 1.5m to resist flexural and shear stresses, and its maximum is 4m from the aesthetic point of view. The top slab thickness has a lower limit of 17.5cm to accommodate reinforcements and to transfer truck wheel load, and has an upper limit of 35cm. The minimum web thickness is 25cm to facilitate concreting and consolidating, and the maximum value is assumed 50cm to avoid a too heavy bridge. The maximum length of cantilever is one-fourth of the bridge width, and the minimum is set to 1m. It is assumed that the number of strands per tendon varies from 5 to 25, and number of tendons in each web varies from 1 to 10 which is also controlled by the maximum number of anchorages. The prestressing force is applied as a percentage of yield strength of prestressing steel ( fy
                           *
                        ). For this study, the prestressing force is considered no less than 0.75fy
                           *
                         for efficient use of prestressing steel, and the upper bound is 0.9fy
                           *
                         according to AASHTO [25].

These constraints are formulated according to AASHTO [25] standard specifications in order to control the performance requirements of the bridge. The superstructure is designed in both longitudinal and transverse directions; in longitudinal direction, we deal with a prestressed concrete design, and in transverse direction, with a reinforced concrete design. The total 101 implicit constraints in this study are categorized into 8 groups, and are explained in the following section:

Stresses in the top and bottom fibers of concrete should not exceed the allowable tensile and compressive stresses. The related implicit constraints are defined as follows:

                              
                                 (4)
                                 
                                    
                                       
                                          σ
                                          c
                                       
                                       ≤
                                       σ
                                       ≤
                                       
                                          σ
                                          t
                                       
                                    
                                 
                              
                           
                           
                              
                                 (5)
                                 
                                    
                                       σ
                                       =
                                       
                                          F
                                          A
                                       
                                       +
                                       
                                          
                                             F
                                             .
                                             e
                                          
                                          S
                                       
                                       +
                                       
                                          M
                                          S
                                       
                                    
                                 
                              
                           where σ, σc
                           , and σt
                            are working stress, allowable compressive stress, and allowable tensile stress respectively; F is prestressing force; A is cross-sectional area of the girder; e is tendons eccentricity; M is working moment; and S is section modulus.

Allowable stresses are controlled for 4 load conditions (Table 6
                           ) and in 5 critical sections along the girder span (Fig. 4
                           ). Section at midspan (Section 1); Section after the anchor set (Section 2); Section at the end of transition zone assumed 1.5h (Section 3); Section immediately after the diaphragm assumed 0.8m (Section 4); End section (Section 5).

Since prestress losses are functions of design variables, all prestress losses, for greater precision, are calculated according to AASHTO [25] formulas rather than using estimates of total losses. Prestress losses are categorized into two groups: instantaneous losses and long-term losses. Instantaneous losses which occur during prestressing the tendons and transferring the prestress force to the concrete member are including friction loss, elastic shortening loss, and anchorage seating loss. Long-term losses which occur during the service life of the member are losses due to concrete shrinkage, creep of concrete, and relaxation of prestressing steel.

These constraints control tensile stresses in the prestressing steel. According to AASHTO [25], allowable stress in prestressing steel immediately after seating at anchorage is 0.7fpu
                           , at the end of the seating loss zone is 0.83fy
                              *
                           , and at service load after all losses is 0.80fy
                              *
                           . The related implicit constraints are as follows:

                              
                                 (6)
                                 
                                    
                                       
                                          
                                             F
                                             
                                                5
                                                i
                                             
                                          
                                          
                                             A
                                             s
                                          
                                       
                                       ≤
                                       0.7
                                       
                                          f
                                          
                                             p
                                             u
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (7)
                                 
                                    
                                       
                                          
                                             F
                                             
                                                2
                                                i
                                             
                                          
                                          
                                             A
                                             s
                                          
                                       
                                       ≤
                                       0.83
                                       
                                          f
                                          y
                                          *
                                       
                                    
                                 
                              
                           
                           
                              
                                 (8)
                                 
                                    
                                       
                                          
                                             F
                                             
                                                2
                                                e
                                             
                                          
                                          
                                             A
                                             s
                                          
                                       
                                       ≤
                                       0.80
                                       
                                          f
                                          y
                                          *
                                       
                                    
                                 
                              
                           where F5i
                            and F2i
                            are prestressing forces in Sections 5 and 2 after instantaneous losses, respectively. F2e
                            is prestressing force at Section 2 after long-term losses, and As
                            is the total area of prestressing steel.

The flexural strength of the girder is controlled at four different sections (Sections 1–4). These constraints are based on the Ultimate Strength Design (USD) method and are as follows:

                              
                                 (9)
                                 
                                    
                                       
                                          M
                                          u
                                       
                                       ≤
                                       ϕ
                                       
                                          M
                                          n
                                       
                                    
                                 
                              
                           where Mu
                            is factored bending moments at different sections, and φMn
                            is flexural strength of the section which φ is strength reduction factor for flexure.

The total amount of prestressing steel should be adequate to develop an ultimate moment at the critical section at least 1.2 times the cracking moment Mcr
                              *
                           . The minimum prestressing steel constraints are considered in Sections 1–4 and are as follows:

                              
                                 (10)
                                 
                                    
                                       1.2
                                       
                                          M
                                          
                                             c
                                             r
                                          
                                       
                                       *
                                       ≤
                                       ϕ
                                       
                                          M
                                          n
                                       
                                    
                                 
                              
                           where Mcr
                              *
                            and φMn
                            are cracking moment and ultimate moment, respectively.

AASHTO [25] states that prestressed concrete members shall be designed so that the steel is yielding as the ultimate capacity is approached. To meet this requirement, the reinforcement index shall not exceed 0.36β1
                           . The maximum prestressing steel constraints are considered in Sections 1–4 and are as follows:

                              
                                 (11)
                                 
                                    
                                       ω
                                       ≤
                                       0.36
                                       
                                          β
                                          1
                                       
                                    
                                 
                              
                           where ω is reinforcement index, and β1
                            is a concrete strength factor.

The shear strength of the girder is controlled at four different sections (Sections 1–4). The section at 0.25h is also checked to compute shear reinforcement. These constraints are as follows:

                              
                                 (12)
                                 
                                    
                                       
                                          V
                                          u
                                       
                                       ≤
                                       ϕ
                                       
                                          (
                                          
                                             V
                                             c
                                          
                                          +
                                          
                                             V
                                             s
                                          
                                          )
                                       
                                    
                                 
                              
                           where Vu, Vc,
                            and Vs
                            are factored shear force at different sections, nominal shear strengths provided by concrete, and shear reinforcement, respectively. φ is the strength reduction factor for shear.

The long-term deflection of the box girder is calculated in mid-span, and is limited as follows:

                              
                                 (13)
                                 
                                    
                                       Δ
                                       ≤
                                       
                                          L
                                          800
                                       
                                    
                                 
                              
                           where Δ is deflection in mid-span, and L is the span length.

The ultimate flexural strength constraints for the three slabs (top, bottom, and cantilever slabs) are considered based on Eq. (9). Moreover, the cantilever slab is controlled for ultimate shear the same as Eq. (12). According to AASHTO [25], the minimum thickness of top and bottom slabs shall be 1/30th of the clear distance between fillets or webs.

Deflection of cantilever slab is limited as follows:

                              
                                 (14)
                                 
                                    
                                       Δ
                                       ≤
                                       
                                          
                                             L
                                             c
                                          
                                          300
                                       
                                    
                                 
                              
                           where Δ is deflection at the end of the cantilever, and Lc
                            is the length of cantilever. The virtual work method is utilized for calculating the cantilever slab deflection.

In order to apply the constraints to the optimization problem, a penalty function is used. The constraints are normalized by dividing the calculated parameters by its maximum or minimum values. Due to the abundance of constraints in the optimization problem, we consider the number of unsatisfied constraints as a parameter in the penalty function to help the algorithm find feasible solutions. Eq. (15) shows the penalty function used to apply the constraints to the problem [27].

                           
                              (15)
                              
                                 
                                    Penalty
                                    =
                                    α
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             N
                                             c
                                          
                                       
                                       
                                          
                                             
                                                [
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  |
                                                               
                                                               
                                                                  σ
                                                                  i
                                                               
                                                               
                                                                  |
                                                               
                                                            
                                                            
                                                               
                                                                  |
                                                               
                                                               
                                                                  σ
                                                                  i
                                                                  a
                                                               
                                                               
                                                                  |
                                                               
                                                            
                                                         
                                                         −
                                                         1
                                                         )
                                                      
                                                   
                                                   +
                                                
                                                ]
                                             
                                          
                                          2
                                       
                                    
                                    +
                                    β
                                    
                                       (
                                       U
                                       C
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       
                                          (
                                          
                                             
                                                
                                                   |
                                                
                                                
                                                   σ
                                                   i
                                                
                                                
                                                   |
                                                
                                             
                                             
                                                
                                                   |
                                                
                                                
                                                   σ
                                                   i
                                                   a
                                                
                                                
                                                   |
                                                
                                             
                                          
                                          −
                                          1
                                          )
                                       
                                       +
                                    
                                    =
                                    max
                                    
                                       (
                                       
                                          
                                             
                                                |
                                             
                                             
                                                σ
                                                i
                                             
                                             
                                                |
                                             
                                          
                                          
                                             
                                                |
                                             
                                             
                                                σ
                                                i
                                                a
                                             
                                             
                                                |
                                             
                                          
                                       
                                       −
                                       1
                                       ,
                                       0
                                       )
                                    
                                 
                              
                           
                        where Nc is the number of constraints; σi
                         is the ith constraint and σi
                           a
                         is its limit; UC in the number of unsatisfied constraints; and α and β are weights for each term which are chosen as 50 and 30 for this problem, respectively.

In prestressed concrete design optimization, the problem is nonlinear requiring the use of nonlinear optimization procedures [28]. Many mathematical linear and nonlinear programming methods have been developed for solving optimization problems [29,30]. Some of these methods search for a local optimum by moving in a direction related to the local gradient. Other methods apply the first and second-order necessary conditions to seek a local minimum by solving a set of nonlinear equations. For the optimum design of large structures, these methods become inefficient due to a large amount of gradient calculations. Therefore, there is a need for a powerful algorithm in order to find the global optimum in an affordable time without being entrapped in local optima. Colliding Bodies Optimization (CBO) and its modified version (MCBO) are used to solve the optimization problem. In order to compare the result of proposed algorithm the optimization problem is also solved using the Particle Swarm Optimization algorithm (PSO) [31]. All of the parameters in the PSO are selected based on those of Ref. [31]; however, by performing a trial and error method the values of 2.4 and 2.7 are chosen for Cmin and Cmax, respectively. It is worth mentioning that in all the algorithms the number of particles are chosen as 200, and the number of 400 iterations is set as a termination criterion. Thus, the number of analyses for all three algorithms are identical.

The CBO algorithm proposed by Kaveh and Mahdavi [10] is a population-based algorithm for optimization problems. This algorithm takes its inspiration from the physic laws. In physics, collisions between bodies are governed by two laws, the law of momentum and energy. When a collision occurs in an isolated system (Fig. 5
                        ), the total momentum and energy of the system of objects is conserved. The conservation of the total momentum and total kinetic energy requires the total momentum and kinetic energy before and after the collision to be equal [10]:

                           
                              (17)
                              
                                 
                                    
                                       m
                                       1
                                    
                                    
                                       v
                                       1
                                    
                                    +
                                    
                                       m
                                       2
                                    
                                    
                                       v
                                       2
                                    
                                    =
                                    
                                       m
                                       1
                                    
                                    
                                       v
                                       1
                                       ′
                                    
                                    +
                                    
                                       m
                                       2
                                    
                                    
                                       v
                                       2
                                       ′
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       1
                                       2
                                    
                                    
                                       m
                                       1
                                    
                                    
                                       v
                                       1
                                       2
                                    
                                    +
                                    
                                       1
                                       2
                                    
                                    
                                       m
                                       2
                                    
                                    
                                       v
                                       2
                                       2
                                    
                                    =
                                    
                                       1
                                       2
                                    
                                    
                                       m
                                       1
                                    
                                    
                                       v
                                       1
                                       
                                          ′
                                          2
                                       
                                    
                                    +
                                    
                                       1
                                       2
                                    
                                    
                                       m
                                       2
                                    
                                    
                                       v
                                       2
                                       
                                          ′
                                          2
                                       
                                    
                                    +
                                    Q
                                 
                              
                           
                        where v
                        1 and v
                        2 are the initial velocity of the first and second objects before impact, also 
                           
                              v
                              1
                              ′
                           
                        and 
                           
                              v
                              2
                              ′
                           
                         are the final velocity of the first and second objects after impact. m
                        1 and m
                        2 are the mass of the first and second objects. Q is the loss of kinetic energy due to impact. The velocities after a one-dimensional collision can be obtained as:

                           
                              (19)
                              
                                 
                                    
                                       v
                                       1
                                       ′
                                    
                                    =
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   m
                                                   1
                                                
                                                −
                                                
                                                   ɛ
                                                
                                                
                                                   m
                                                   2
                                                
                                             
                                             )
                                          
                                          
                                             v
                                             1
                                          
                                          +
                                          
                                             (
                                             
                                                
                                                   m
                                                   2
                                                
                                                +
                                                
                                                   ɛ
                                                
                                                
                                                   m
                                                   2
                                                
                                             
                                             )
                                          
                                          
                                             v
                                             2
                                          
                                       
                                       
                                          
                                             m
                                             1
                                          
                                          +
                                          
                                             m
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       v
                                       2
                                       ′
                                    
                                    =
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   m
                                                   2
                                                
                                                −
                                                
                                                   ɛ
                                                
                                                
                                                   m
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                             v
                                             2
                                          
                                          +
                                          
                                             (
                                             
                                                
                                                   m
                                                   1
                                                
                                                +
                                                
                                                   ɛ
                                                
                                                
                                                   m
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                             v
                                             1
                                          
                                       
                                       
                                          
                                             m
                                             1
                                          
                                          +
                                          
                                             m
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        where ɛ is the coefficient of restitution (COR) of two colliding bodies, defined as the ratio relative velocity of separation to relative velocity of approach:

                           
                              (21)
                              
                                 
                                    
                                       ɛ
                                    
                                    =
                                    
                                       
                                          |
                                          
                                             
                                                
                                                   
                                                      v
                                                      ′
                                                   
                                                
                                                2
                                             
                                             −
                                             
                                                
                                                   
                                                      v
                                                      ′
                                                   
                                                
                                                1
                                             
                                          
                                          |
                                       
                                       
                                          |
                                          
                                             
                                                v
                                                2
                                             
                                             −
                                             
                                                v
                                                1
                                             
                                          
                                          |
                                       
                                    
                                    =
                                    
                                       
                                          v
                                          ′
                                       
                                       v
                                    
                                 
                              
                           
                        
                     

According to the coefficient of restitution, two special cases of collision can be considered as:

                           
                              (1)
                              A perfectly elastic collision is defined as the one in which there is no loss of kinetic energy in the collision
                                    
                                       (
                                       
                                          Q
                                          =
                                          0
                                          
                                          and
                                          
                                          
                                             ɛ
                                          
                                          =
                                          1
                                       
                                       )
                                    
                                 . In reality, any macroscopic collision between objects will convert some kinetic energy to internal energy and other forms of energy. In this case, after collision the velocity of separation is high.

An inelastic collision is the one in which part of the kinetic energy is changed to some other form of energy in the collision. Momentum is conserved in inelastic collisions (as it is for elastic collisions), but one cannot track the kinetic energy through the collision since some of it is converted to other forms of energy. In this case, coefficient of restitution does not equal to unit(Q ≠ 0 and ɛ ≤ 1). Here, after collision the velocity of separation is low.

For most of the real objects, ɛ is between 0 and 1.

In this algorithm each solution candidate is considered as a colliding body (CB). All of the CBs are divided equally into stationary and moving objects. An inelastic collision occurs between pairs of objects in which the moving objects move to follow stationary objects. The two purposes of this collision are to improve the position of moving objects and to push stationary objects toward better positions. After the collision, the new positions of the colliding bodies are updated based on the new velocity using the collision law discussed in the previous section.

The CBO procedure can briefly be outlined as follow:

                           
                              
                                 Step 1. The initial positions of the CBs are randomly determined using a uniform distribution.


                                 Step 2. The magnitude of the body mass for each CB (in minimization problems) is defined as:
                                    
                                       (22)
                                       
                                          
                                             
                                                m
                                                i
                                             
                                             =
                                             
                                                
                                                   
                                                      1
                                                      /
                                                      f
                                                      i
                                                      t
                                                      (
                                                      i
                                                      )
                                                   
                                                   ∑
                                                
                                                
                                                   k
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                1
                                                /
                                                f
                                                i
                                                t
                                                (
                                                k
                                                )
                                             
                                             ,
                                             
                                                
                                                   
                                                      
                                                   
                                                   
                                                      
                                                         i
                                                         =
                                                         1
                                                         ,
                                                      
                                                   
                                                
                                             
                                             2
                                             ,
                                             …
                                             ,
                                             N
                                          
                                       
                                    
                                 
                              

where fit(i) represents the objective function value of the ith CB and N is the population size (the number of CBs) which for the first example is 100 and for the others is equal to 200.


                                 Step 3. The CBs are sorted based on their body mass, and equally divided into two groups (Fig. 6
                                 ):

The upper half of the CBs are good agents which are stationary and their velocities before collision are zero.
                                    
                                       (23)
                                       
                                          
                                             
                                                v
                                                i
                                             
                                             =
                                             0
                                             ,
                                             
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             
                                                N
                                                2
                                             
                                          
                                       
                                    
                                 
                              

The lower half of CBs (the moving group) move toward the upper half. As it is shown in Fig. 7
                                  the best CBs of the both groups will collide together and similarly the worst CBs of the both groups will collide together. The difference of the position of CBs represents these bodies’ velocity before collision.
                                    
                                       (24)
                                       
                                          
                                             
                                                v
                                                i
                                             
                                             =
                                             
                                                x
                                                i
                                             
                                             −
                                             
                                                x
                                                
                                                   i
                                                   −
                                                   
                                                      N
                                                      2
                                                   
                                                
                                             
                                             ,
                                             
                                             i
                                             =
                                             
                                                N
                                                2
                                             
                                             +
                                             1
                                             ,
                                             …
                                             ,
                                             N
                                          
                                       
                                    
                                 where vi
                                  and xi
                                  are the velocity and position vector of the ith CB before collision, respectively.


                                 Step 4. After the collisions, the velocities of bodies in each group are evaluated considering Eqs. (19) and (20).

The velocity of each stationary and moving CBs after the collision is:
                                    
                                       (25)
                                       
                                          
                                             
                                                v
                                                i
                                                ′
                                             
                                             =
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            m
                                                            
                                                               i
                                                               +
                                                               
                                                                  N
                                                                  2
                                                               
                                                            
                                                         
                                                         +
                                                         
                                                            ɛ
                                                         
                                                         
                                                            m
                                                            
                                                               i
                                                               +
                                                               
                                                                  N
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      v
                                                      
                                                         i
                                                         +
                                                         
                                                            N
                                                            2
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      m
                                                      i
                                                   
                                                   +
                                                   
                                                      m
                                                      
                                                         i
                                                         +
                                                         
                                                            N
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                             
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             
                                                N
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       (26)
                                       
                                          
                                             
                                                v
                                                i
                                                ′
                                             
                                             =
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            m
                                                            i
                                                         
                                                         −
                                                         
                                                            ɛ
                                                         
                                                         
                                                            m
                                                            
                                                               i
                                                               −
                                                               
                                                                  N
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      v
                                                      i
                                                   
                                                
                                                
                                                   
                                                      m
                                                      i
                                                   
                                                   +
                                                   
                                                      m
                                                      
                                                         i
                                                         −
                                                         
                                                            N
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                             
                                             i
                                             =
                                             
                                                N
                                                2
                                             
                                             +
                                             1
                                             ,
                                             …
                                             ,
                                             N
                                          
                                       
                                    
                                 
                              

where 
                                    
                                       v
                                       i
                                       ′
                                    
                                  are the velocity of the ith CB after collision. ɛ is coefficient of restitution which is used to control the exploration and exploitation of the optimization algorithm. In this paper ɛ is expressed as:
                                    
                                       (27)
                                       
                                          
                                             
                                                ɛ
                                             
                                             =
                                             1
                                             −
                                             
                                                
                                                   i
                                                   t
                                                   e
                                                   r
                                                
                                                
                                                   i
                                                   t
                                                   e
                                                   
                                                      r
                                                      max
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where iter is the current iteration number, and iter
                                 max  is the maximum number of iterations.


                                 Step 5. The new position of each CBs is:

                                    
                                       (28)
                                       
                                          
                                             
                                                x
                                                i
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             =
                                             
                                                x
                                                i
                                             
                                             +
                                             rand
                                             ∘
                                             
                                                v
                                                i
                                                ′
                                             
                                             ,
                                             
                                             i
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             
                                                N
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       (29)
                                       
                                          
                                             
                                                x
                                                i
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             =
                                             
                                                x
                                                
                                                   i
                                                   −
                                                   
                                                      N
                                                      2
                                                   
                                                
                                             
                                             +
                                             rand
                                             ∘
                                             
                                                v
                                                i
                                                ′
                                             
                                             ,
                                             
                                             i
                                             =
                                             
                                                N
                                                2
                                             
                                             +
                                             1
                                             ,
                                             …
                                             ,
                                             N
                                          
                                       
                                    
                                 
                              

where 
                                    
                                       x
                                       i
                                       
                                          n
                                          e
                                          w
                                       
                                    
                                  is the new position of ith CB after the collision. rand is a random vector uniformly distributed in the range 
                                    
                                       (
                                       
                                          −
                                          1
                                          ,
                                          1
                                       
                                       )
                                    
                                  and the sign ‘‘○’’ denotes an element-by-element multiplication.


                                 Step 6. The optimization is repeated from Step 2 until a termination criterion is satisfied.

In the standard version of the CBO algorithm the positions of all CBs are changed after collision in each iteration. Therefore, in the next iterations, the algorithm would lose the effect of the best solutions that the algorithm has found so far. Although changing the position of the best solutions can improve the diversification of search process, it reduces the intensification. Therefore, the algorithm is not able to efficiently follow the best solutions. In order to avoid this shortcoming, we do not change the position of a specific number of the best CBs. These CBs are saved in a memory to be used in the next iterations. In addition, in order to control the exploitation and exploration of the algorithm we define a constant parameter (α) and use a nonlinear function for defining the coefficient of restitution:

                           
                              (30)
                              
                                 
                                    
                                       ɛ
                                    
                                    =
                                    
                                       e
                                       
                                          −
                                          α
                                          
                                             
                                                i
                                                t
                                                e
                                                r
                                             
                                             
                                                i
                                                t
                                                e
                                                
                                                   r
                                                   max
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The value of α parameter is selected based on the type of a problem and could be varied from 2 to 10. In
Fig. 8
                         the curves of the function are shown for different value of α.By increasing the value of α the nonlinearity of the function increases. In this paper, we consider the value of α equal to 4.

The flowchart of the MCBO algorithm is shown in Fig. 9.
                        
                     

@&#RESULTS AND DISCUSSION@&#

A typical prestressed box girder bridge with the span length equal to 50m and the deck width equal to 12m is optimized using aforementioned algorithms. The results have been compared with the result of a renowned metaheuristic algorithm (PSO). The algorithms are run 50 times, and the solution with the lowest cost is selected as the final result. In Table 7
                        , the optimum solutions of the three algorithms are shown.

As it can be seen in
Table 7, the optimum cost of the MCBO algorithm is less than the others. To demonstrate the arrangement of anchorages and tendons, reinforcements of different parts, and geometry of the optimum bridge, the cross-section and shear reinforcements along the girder span obtained by the MCBO algorithm are shown in Figs. 10
                         and 11
                        . The whole analysis, design, and optimization processes are conducted automatically, and only selection of the size and spacing of corresponding rebars is carried out manually.

Since the constant design parameters influence the optimum design, the optimization is carried out for different values of span length and bridge width, for each of which the algorithm has been run 50 times, and the best result has been selected as the final optimum result . The results for three different span lengths of 30, 40, and 60m with the deck width of 12m are shown in Table 8
                        , and the results for two different bridge widths of 10 and 14m with the span length of 50m are shown in Table 9.
                        
                     

In Figs. 12
                         and 13
                         the optimum cost for different span lengths and deck widths are depicted, respectively. According to the figures, for the considered range, the curve related to each of the algorithms is approximately a linear curve. Moreover, with increasing span length or deck width, as it can be seen in Figs. 14
                         and 15
                        , the amount of prestressing steel increases.

To investigate the effect of the unit cost of concrete on the optimum design, the optimization is performed with different concrete prices. In Table 10
                        , the best results of optimization with the MCBO algorithm for 50 independent runs are shown. It can be seen that by increasing the unit cost of concrete, depth of superstructure, web thickness, and top slab thickness generally decrease in order to reduce the volume of concrete and consequently reduce the corresponding cost. On the other hand, as it is shown in Fig. 16
                        , the reinforcement ratio of the top slab increases to compensate the reduction in the top slab thickness. Since the unit cost of concrete is assumed a function of concrete strength, the algorithm choose the lowest concrete strength for higher unit costs.

The performances of the aforementioned algorithms are compared in order to investigate the efficiency of the proposed algorithm. The statistical information of 50 independent runs for the three algorithms is summarized in
Table 11
                        . It can be seen in the table that in all cases the MCBO algorithm finds a better solution in comparison with the two other algorithms, and its coefficient of variations, which are less than 1%, show the robustness of the algorithm. It is worth mentioning that the maximum values of the MCBO algorithm are very close to the mean and median values of the PSO and CBO algorithms and in most of the cases they are better, which shows the efficiency of the MCBO algorithm.

As an example, according to Table 11, for the bridge with the span length of 50m and deck width of 12m the minimum value of the runs for the MCBO algorithm is 2.2% and 0.4% less than those of the CBO and PSO algorithms. Although in this case the difference between the minimum of the PSO and MCBO is not significant, the mean and median values for the MCBO algorithm are considerably better than those of the PSO algorithm. The standard deviation is a good measure of the robustness of metaheuristic algorithms. In this example, the standard deviation for the CBO and MCBO algorithms are close and meaningfully better than the PSO algorithm. Both algorithms (CBO and MCBO) have a small standard deviation which shows the robustness of the algorithms. However, the minimum and mean value of the CBO algorithm is significantly more than the MCBO algorithm which shows that the intensification of the search process in the CBO algorithm is not satisfactory. The optimum costs of the 50 runs for the bridge are shown in
Fig. 17.
                        
                     

As it can be seen in
Fig. 17 the solutions of the PSO algorithm often oscillate in a wide range. Therefore a large number of runs is required in order to obtain a proper optimum. However, the MCBO and CBO algorithms show little fluctuation in comparison with the PSO algorithm. The convergence of the best solution for the algorithms are shown in
Fig. 18.
                        
                     

According to Fig. 18 although the PSO algorithm has a fast convergence, the optimum result obtained by the MCBO algorithm is better, and in the 244th iteration the cost value of the MCBO algorithm become less than the PSO algorithm. This is because of the premature convergence phenomenon which is believed to be one of flaws of the PSO algorithm [32,33], it means that the PSO algorithm is entrapped in a local optimum and is not able to find better solution. It can be interpreted from the convergence history that the MCBO algorithm strikes a balance between diversification and intensification in the search process.

@&#CONCLUSIONS@&#

In this study, cost optimization of post-tensioned concrete box girder bridges is presented. A total of 135 constraints are considered based on AASHTO [25] standard specifications and construction limitations, and the problem is formed by 17 design variables. The objective function consists of material and construction costs involved in the bridge construction including concrete, prestressing steel, reinforcement, and formwork. Instead of using a lumped-sum value, all prestress losses are calculated by the code formulas for greater precision. A parametric study is conducted to examine the effect of constant parameters on optimum design. This problem is complex and challenging since it is highly nonlinear, non-convex, and implicit with respect to the design variables requiring an advanced optimization algorithm.

In this paper the CBO algorithm has been improved to solve the bridge optimization problem. Considering a nonlinear function for coefficient of restitution and a memory which saves the best solutions of each iteration enhances the performance of the algorithm. In order to investigate the efficiency of the proposed algorithm the results are compared with those of the well-known PSO algorithm. As it has been shown in the tables and figures, the coefficients of variations of the MCBO algorithm for 50 independent runs are less than one percent which shows the robustness of the proposed algorithm. In addition, improving the intensification of the search process helps the algorithm to find a better solution in comparison to the standard versions of the CBO and PSO algorithms.

@&#REFERENCES@&#

