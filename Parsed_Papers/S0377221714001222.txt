@&#MAIN-TITLE@&#The warehouse-inventory-transportation problem for supply chains

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We integrate warehousing decisions with inventory and transportation.


                        
                        
                           
                           A mathematical model is developed and solved using a metaheuristic.


                        
                        
                           
                           Worker congestion at the warehouse is considered.


                        
                        
                           
                           Substantial cost savings and reduction in daily workload variance can be achieved.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Warehousing

Picker blocking

Logistics

Workload variance

@&#ABSTRACT@&#


               
               
                  Warehouses play a vital role in mitigating variations in supply and demand, and in providing value-added services in a supply chain. However, our observation of supply chain practice reveals that warehousing decisions are not included when developing a distribution plan for the supply chain. This lack of integration has resulted in a substantial variation in workload (42–220%) at our industry partner’s warehouse costing them millions of dollars. To address this real-world challenge, we introduce the warehouse-inventory-transportation problem (WITP) of determining an optimal distribution plan from vendors to customers via one or more warehouses in order to minimize the total distribution cost. We present a nonlinear integer programming model for the WITP considering supply chains with multiple vendors, stores, products, and time-periods, and one warehouse. The model also considers worker congestion at the warehouse that could affect worker productivity. A heuristic based on iterative local search is developed to solve industry-sized problems with up to 500 stores and 1000 products. Our experiments indicate that the distribution plans obtained via the WITP, as compared to a sequential approach, result in a substantial reduction in workload variance at the warehouse, while considerably reducing the total distribution cost. These plans, however, are sensitive to aisle configuration and technology at the warehouse, and the level and productivity of temporary workers.
               
            

@&#INTRODUCTION@&#

Modern supply chains rely heavily on warehouses for rapidly fulfilling customer demand through retail, web-based, and catalogue channels. Warehousing costs in 2010 were nearly $112 billion across 600,000 small and large warehouses in the U.S., which is over 9% of the $1.2 trillion of the U.S. logistics cost (CSCMP, 2011). Warehouses, now often referred to as distribution centers (DCs), have emerged from their traditional passive role of serving as buffers to mitigate supply-demand variations to a more active role of providing value-added services such as consolidation/deconsolidation, assembling, and kitting. The operations of Amazon.com illustrate the importance of careful warehouse management in modern supply chains (Curtis, 2013).

From a warehousing perspective, the key functions are (i) receiving, quality control, and putaway/storage and (ii) picking, sorting, packing and shipping (Tompkins, White, Bozer, & Tanchoco, 2010). To accomplish these functions, effectively making decisions around warehouse design and operations is vital. Some of these decisions include aisle layout, material handling selection, workforce planning and scheduling, and information technology infrastructure. These decisions have a significant bearing on the warehouse’s throughput and cost, and impact other supply chain decisions such as inventory and transportation. For example, a new picking technology such as pick-to-light or robotic picking (e.g., Kiva robots) that alters (actually, improves) worker productivity may mean that inbound and outbound shipment schedules, along with inventory requirements at the warehouse, would be modified due to this change in the warehouse’s throughput.

This research was motivated by the current practice of distribution planning, specifically at our industry partner, a US-based apparel supply chain. This supply chain sells to consumers through retail and e-commerce channels. Their warehouse, the only one in the supply chain, manages the flow of 6500–8000 products supplied by over 100 domestic and overseas vendors, and replenishes over 300 retail stores situated in nearly 40 states across the nation. Although this warehouse serves as a hub in the supply chain, it operates in a reactive mode; that is, inventory and transportation plans are determined first and the warehousing plans are determined later. This sequential approach results in the warehouse experiencing substantial variation in daily workload, which causes the warehouse manager to scramble for resources during peak times and experience resource under-utilization during drought times. Fig. 1
                      shows the number of units picked per week at the company’s warehouse in the year 2011, where the weekly variation in the workload ranges from nearly 42% to 220% of annual average (i.e. the weekly workload varied between 58% below and 120% above the average). Data from another of our industry partners, a Fortune 100 grocery distributor, during August 29–September 4 of 2011, indicated that the weekly workload varied between 76% and 153% of the annual average (i.e. the weekly workload varied between 24% below and 53% above the average) at one of their US warehouses (see Fig. 2
                     ).

The key point here is that such workload imbalances create substantial operational inefficiencies at the warehouse and can cost a company millions of dollars annually. From a warehouse operations perspective, a relatively balanced workload across all time-periods is preferred because it leads to (i) easier worker management and scheduling, (ii) reduced need for overtime hours and/or temporary workers, and (iii) effective utilization of technological resources leading to increased worker productivity.

The observed inefficiencies at the warehouse of our industry partners beg the following question: how would a supply chain benefit if it proactively accounted for warehousing decisions at the tactical planning phase, instead of reacting passively every day? This question motivated us to introduce the warehousing-inventory-transportation problem (WITP) to the supply chain literature. The WITP integrates decisions regarding warehouse, inventory, and transportation, and identifies an optimal distribution strategy for a multi-product and multi-period supply chain such that the total distribution chain cost is minimized.

The remainder of the paper is organized as follows. We first summarize relevant literature in Section 2 and then introduce a nonlinear integer programming model for the WITP in Section 3. In Section 4 optimal solutions generated by the linearized version of the WITP model are compared to solutions generated by a sequential approach observed in the industry. In Section 5 we provide details of a heuristic designed to solve industry-sized problem instances (e.g., 500 stores and 1000 products). Finally, in Section 6 we present managerial insights based on our experiments and sensitivity analyses and discuss future work.

In recent years, researchers in the field of distribution planning have given significant attention to the integration of transportation and inventory decisions. The objective is to balance inventory and transportation costs. A well-studied problem is the inventory-routing problem (IRP), which refers to developing a repeatable distribution strategy that minimizes transportation costs and the number of stock-outs. Both deterministic and stochastic versions of IRP have been studied (Campbell, Clark, Kleywegt, & Savelsberg, 1998; Kleywegt, Nori, & Savelsbergh, 2004; Lin & Chen, 2008; Zhao, Chen, & Zang, 2008). Other approaches to integrating inventory and transportation decisions have also been explored; e.g., Parthanadee and Logendran (2006) and Çetinkaya, Tekin, and Lee (2008).


                     Abdelmaguid and Dessouky (2006) introduce the integrated inventory-distribution problem (IDP) for multi-period systems considering both inventory and transportation costs, and allowing for backlogging. Lei, Liu, Ruszczynski, and Park (2006) consider the production-inventory-distribution-routing problem (PIDRP), where the focus is on coordinating production and transportation schedules between vendors and customers. Bard and Nananukul (2008) solve a one-plant, multi-customer PIDRP with the assumption of single-mode transportation. Research on the integration of inventory and warehouse location decisions involves identifying an optimal location for the warehouse while minimizing system-wide transportation and inventory costs (Daskin, Coullard, & Shen, 2002; Ozsen, Daskin, & Coullard, 2009; Shen, Coullard, & Daskin, 2003; Üster, Keskin, & Çetinkaya, 2008).

Literature on warehousing is massive, focusing especially on location, design, and operation. Numerous models have been developed to assist in various aspects of warehouse design; e.g., sizing (Goh, Ou, & Teo, 2001; Heragu, Du, Mantel, & Schuur, 2005; Ng, Cheng, Kotov, & Kovalyov, 2009), aisle-layout (Gue & Meller, 2009), and operational aspects (Parikh & Meller, 2010a; Ratliff & Rosenthal, 1983). An area of special focus in warehousing is order picking, which accounts for around 50% (Tompkins et al., 2010). Worker congestion during order picking has been identified as a key factor that causes decreased warehouse productivity and increased costs (Gue, Meller, & Skufca, 2006; Parikh & Meller, 2009, 2010b).

Note that the literature on supply chain planning has focused on integrating inventory and transportation decisions. Warehouses, in the context of supply chain planning, have almost exclusively been treated as nodes with known capacity. To the authors’ knowledge, no research exists that evaluates the impact of executing distribution plans on warehouse operations, notably through the variation in warehouse workload. Additionally, warehouse design decisions (e.g., layout, workforce, and technology) and operational impacts (e.g., worker congestion) have a significant bearing on throughput and cost. A fundamental understanding of the implications of warehouse design and operations on inventory and transportation decisions is lacking.

This paper addresses these gaps in the academic literature and concerns expressed by the authors’ industry partners by introducing the warehouse-inventory-transportation problem (WITP). The decisions addressed by WITP are compared and summarized in Table 1
                     .

The WITP is intended to determine the optimal distribution of products from vendors to stores via a warehouse with the objective of minimizing the total distribution cost. A distribution planning problem is typically defined as determining the quantity and schedule of both inbound shipments (vendor to warehouse) and outbound shipments (warehouse to stores), along with the inventory levels at the warehouse and stores (Chopra & Meindl, 2012). The WITP extends this definition by incorporating several warehousing decisions that help address the following questions:
                        
                           •
                           What level of permanent workforce should be used at the warehouse during the planning horizon?

How many temporary workers are required during each time period in the planning horizon to respond to variations in product flow through the warehouse? To what extent does the allowable level of such workers, and their reduced productivity, affect the warehouse workload?

How do different warehousing technologies, which determine theoretical worker productivity, impact the workforce plans, and eventually transportation and inventory decisions?

How does the aisle configuration, which has direct implications on worker congestion and eventually determines the actual worker productivity, affect the workforce plans?

The WITP model that we present focuses on integrating the three sets of decisions, warehousing, inventory, and transportation, at both the tactical and operational levels. That is, we seek to derive an optimal, repetitive, distribution plan for a prespecified time-horizon (say, 3–6months). From this perspective, decisions such as warehouse location, aisle configuration, and technology employed – all of which are strategic and/or tactical – are assumed to be given. However, we do capture certain aspects of these decisions indirectly via sensitivity analysis. For instance, the impact of aisle configuration (wide and narrow) on workforce dynamics is captured via congestion (see Section 4). The impact of warehouse technology, which includes picking strategies, storage configuration, material handling equipment, and pick-assist methods, is captured by varying a worker’s productivity (see Section 5). Additionally, the impact of changes in the number of allowable temporary workers, and their reduced productivity, is also analyzed.

To model the warehouse workforce mix, we consider workforce requirements for two major activities, putaway and picking. Putaway refers to the activity of moving products from the point of unloading to the storage/picking area of a warehouse. Picking refers to the activity of fulfilling a customer order by picking and packing products from the picking area.

A critical aspect we capture in our model is worker congestion modeled as blocking. We define blocking as the dynamic interaction between workers during the picking operation in the picking area. It is assumed that replenishment to the picking area, either directly from the inbound docks (as part of the putaway activity) or from the reserve area (as a separate replenishment activity), is conducted at a different time from the picking activity. We next discuss how blocking impacts warehouse productivity.

Blocking can be substantial in picking systems, especially in narrow-aisle systems, and depends on the pick density, storage policy, routing method, and the number of workers picking simultaneously in the system. It leads to reduced worker productivity, which in turn increases the number of pickers required to carry out the picking operations effectively and meet the desired throughput (Gue et al., 2006; Parikh & Meller, 2009). In wide aisle systems, pickers experience blocking due to their inability to pick at the same pick-column simultaneously. This form of blocking is referred to as pick-column blocking (see Fig. 3
                        (a)). In contrast, blocking in narrow aisle systems is experienced due to a picker’s inability to pass other pickers in the same aisle. This form of blocking is referred to as in-the-aisle-blocking (see Fig. 3(b)). Both types of blocking result in increased picker idle time, thus affecting worker productivity and subsequently increasing labor costs.


                        Parikh and Meller (2010a,b) developed analytical and simulation models to estimate in-the-aisle blocking for a narrow-multi-aisle order picking systems which include number of pick-faces, pick-density, number of pickers, and pick to walk ratio. Blocking can occur during putaway as well as picking, but putaway blocking is of relatively little practical significance (per our industry partner’s experience), and is therefore omitted from the models developed here.

We next present a nonlinear integer programming model for the WITP with picker-blocking in a two-echelon, multi-product, and multi-period supply chain, consisting of multiple vendors and stores that are connected by one warehouse.

We make the following assumptions in our mathematical model: (i) vendors have sufficient supplies to meet the demand at the warehouse and (ii) backorders are not allowed. We first present the model parameters and decision variables in Tables 2 and 3
                        
                        , respectively, followed by a nonlinear integer programming model for the WITP.
                           
                              (1)
                              
                                 Minimize
                                 
                                 
                                 
                                    
                                       C
                                    
                                    
                                       α
                                    
                                 
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       α
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       β
                                    
                                 
                                 (
                                 
                                    
                                       β
                                    
                                    
                                       1
                                       t
                                    
                                 
                                 +
                                 
                                    
                                       β
                                    
                                    
                                       2
                                       t
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          pt
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       h
                                    
                                 
                                 
                                    
                                       y
                                    
                                    
                                       pt
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          spt
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       sp
                                    
                                    
                                       h
                                    
                                 
                                 
                                    
                                       y
                                    
                                    
                                       spt
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          vt
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       v
                                    
                                    
                                       f
                                    
                                 
                                 
                                    
                                       n
                                    
                                    
                                       vt
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          st
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       s
                                    
                                    
                                       f
                                    
                                 
                                 
                                    
                                       n
                                    
                                    
                                       st
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          vpt
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       v
                                    
                                    
                                       v
                                    
                                 
                                 (
                                 
                                    
                                       W
                                    
                                    
                                       p
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       vpt
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          spt
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       s
                                    
                                    
                                       v
                                    
                                 
                                 (
                                 
                                    
                                       W
                                    
                                    
                                       p
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       spt
                                    
                                    
                                       o
                                    
                                 
                                 )
                              
                           
                        Subject to
                           
                              (2)
                              
                                 Warehouse
                                 :
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       ϕ
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       β
                                    
                                    
                                       1
                                       t
                                    
                                 
                                 )
                                 ⩾
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          vp
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       vpt
                                    
                                    
                                       i
                                    
                                 
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       Λ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 1
                                 -
                                 b
                                 (
                                 
                                    
                                       k
                                    
                                    
                                       t
                                    
                                 
                                 )
                                 )
                                 ⩾
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          sp
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       spt
                                    
                                    
                                       o
                                    
                                 
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       α
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       ϕ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       β
                                    
                                    
                                       2
                                       t
                                    
                                 
                                 ⩽
                                 
                                    
                                       k
                                    
                                    
                                       t
                                    
                                 
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       β
                                    
                                    
                                       1
                                       t
                                    
                                 
                                 ⩽
                                 γ
                                 
                                    
                                       α
                                    
                                    
                                       1
                                    
                                 
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       β
                                    
                                    
                                       2
                                       t
                                    
                                 
                                 ⩽
                                 γ
                                 
                                    
                                       α
                                    
                                    
                                       2
                                    
                                 
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       y
                                    
                                    
                                       pt
                                    
                                 
                                 =
                                 
                                    
                                       y
                                    
                                    
                                       p
                                       (
                                       t
                                       -
                                       1
                                       )
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          v
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       vpt
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       spt
                                    
                                    
                                       o
                                    
                                 
                                 
                                 ∀
                                 p
                                 ,
                                 t
                                 >
                                 1
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       y
                                    
                                    
                                       p
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       y
                                    
                                    
                                       pT
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          v
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       vp
                                       1
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       sp
                                       1
                                    
                                    
                                       o
                                    
                                 
                                 
                                 ∀
                                 p
                              
                           
                        
                        
                           
                              (9)
                              
                                 Store
                                 :
                                 
                                 
                                    
                                       y
                                    
                                    
                                       spt
                                    
                                 
                                 =
                                 
                                    
                                       y
                                    
                                    
                                       sp
                                       (
                                       t
                                       -
                                       1
                                       )
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       spt
                                    
                                    
                                       o
                                    
                                 
                                 -
                                 
                                    
                                       D
                                    
                                    
                                       spt
                                    
                                 
                                 
                                 ∀
                                 s
                                 ,
                                 p
                                 ,
                                 t
                                 >
                                 1
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                 
                                    
                                       y
                                    
                                    
                                       sp
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       y
                                    
                                    
                                       spT
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       sp
                                       1
                                    
                                    
                                       o
                                    
                                 
                                 -
                                 
                                    
                                       D
                                    
                                    
                                       sp
                                       1
                                    
                                 
                                 
                                 ∀
                                 s
                                 ,
                                 p
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          p
                                       
                                    
                                 
                                 
                                    
                                       V
                                    
                                    
                                       p
                                    
                                 
                                 
                                    
                                       y
                                    
                                    
                                       spt
                                    
                                 
                                 ⩽
                                 
                                    
                                       K
                                    
                                    
                                       s
                                    
                                 
                                 
                                 ∀
                                 s
                                 ,
                                 t
                              
                           
                        
                        
                           
                              (12)
                              
                                 Transportation
                                 :
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          p
                                          ∈
                                          
                                             
                                                Ω
                                             
                                             
                                                v
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       W
                                    
                                    
                                       p
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       vpt
                                    
                                    
                                       i
                                    
                                 
                                 ⩽
                                 
                                    
                                       Qn
                                    
                                    
                                       vt
                                    
                                 
                                 
                                 ∀
                                 v
                                 ,
                                 t
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          p
                                       
                                    
                                 
                                 
                                    
                                       W
                                    
                                    
                                       p
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       spt
                                    
                                    
                                       o
                                    
                                 
                                 ⩽
                                 
                                    
                                       Qn
                                    
                                    
                                       st
                                    
                                 
                                 
                                 ∀
                                 s
                                 ,
                                 t
                              
                           
                        
                        
                           
                              (14)
                              
                                 Bounds
                                 :
                                 
                                 
                                    
                                       x
                                    
                                    
                                       vpt
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       spt
                                    
                                    
                                       o
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       pt
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       spt
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       vt
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       st
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       β
                                    
                                    
                                       1
                                       t
                                    
                                 
                                 ,
                                 
                                    
                                       β
                                    
                                    
                                       2
                                       t
                                    
                                 
                                 ,
                                 
                                    
                                       k
                                    
                                    
                                       t
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 
                                    
                                       Z
                                    
                                    
                                       +
                                    
                                 
                                 }
                                 
                                 ∀
                                 v
                                 ,
                                 s
                                 ,
                                 p
                                 ,
                                 t
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                 0
                                 ⩽
                                 b
                                 (
                                 
                                    
                                       k
                                    
                                    
                                       t
                                    
                                 
                                 )
                                 ⩽
                                 1
                                 
                                 ∀
                                 t
                              
                           
                        The objective function (1) in the model is to minimize the total distribution cost, which includes costs related to warehouse workforce (permanent and temporary), inventory holding at the warehouse and stores, and transportation (fixed and variable). Constraints (2)–(4) ensure that sufficient numbers of permanent and temporary workers (considering their productivity factors) are available for putting away inbound products and picking outbound products at the warehouse. Constraints (3) consider picker blocking, where b(kt
                        ) denotes the average blocking experienced by kt
                         pickers in period t. Constraints (5) and (6) restrict the number of temporary workers to be below an allowable fraction of permanent workers (largely due to limited availability and reduced productivity). Constraints (7)–(10) specify the inventory levels at the warehouse and stores. Considering a cyclic distribution strategy, Constraints (8) and (10) ensure that inventory at the end of the current time horizon is identical to the inventory at the beginning of the next time horizon. Constraints (11) impose space restriction at each store. The weight-based transportation capacities for shipments from vendor to warehouse and from warehouse to store are modeled through Constraints (12) and (13). The bounds on the decision variables are specified by Constraints (14) and (15).

Constraints (3) are nonlinear because b(kt
                        ) is a discretely valued function of kt
                        . These constraints can be linearized as follows. First, for each possible number of pickers kt
                        , b(kt
                        ) is replaced by discrete values Bl
                        , the average blocking corresponding to l pickers in the system. Note that Bl
                         can be calculated offline using our simulation model for a warehouse with narrow aisles (Parikh & Meller, 2010b). Second, a binary decision variable, ktl
                        , is introduced representing the number of pickers to be selected; i.e., ktl
                         equals 1 if the number of pickers in time t is l, and 0 otherwise. We replace nonlinear constraints in (3) with the following set of linear constraints: 
                           
                              (16)
                              
                                 
                                    
                                       Λ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                       
                                    
                                 
                                 (
                                 1
                                 -
                                 
                                    
                                       B
                                    
                                    
                                       l
                                    
                                 
                                 )
                                 (
                                 
                                    
                                       lk
                                    
                                    
                                       tl
                                    
                                 
                                 )
                                 ⩾
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          sp
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       spt
                                    
                                    
                                       o
                                    
                                 
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                       
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       tl
                                    
                                 
                                 =
                                 1
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       α
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       ϕ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       β
                                    
                                    
                                       2
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                       
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       tl
                                    
                                 
                                 
                                 ∀
                                 t
                              
                           
                        
                        
                           
                              (19)
                              
                                 Bounds
                                 :
                                 
                                 
                                    
                                       k
                                    
                                    
                                       tl
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 
                                 ∀
                                 t
                                 ,
                                 l
                              
                           
                        We next compare distribution plans, in terms of the total distribution cost and the variance in warehouse workload, generated by solving the WITP directly with those generated by a sequential approach.

We refer to the sequential approach for designing distribution plans as first solving the joint inventory-transportation problem (ITP) and then solving the corresponding warehousing problem (WP); we denote this approach as ITP+WP. Such a sequential approach was observed during our industry work experience and discussions with our industry collaborator (and many other companies that we know).

The ITP+WP approach implies that warehousing decisions have to react to inventory and transportation decisions made a priori. That is, in this sequential approach we first solve optimally the joint inventory-transportation problem (ITP) and then, using this solution as an input to the warehousing problem (WP), we find the optimal workforce level at the warehouse. The model for the ITP includes the inventory and transportation constraints (7)–(13), and associated cost terms in the objective function. The model for WP includes the warehousing constraints (2), (4)–(6), (16)–(19), and associated workforce cost terms in the objective function. For a given dataset, the optimal solution to the ITP provides information on inbound and outbound quantities (i.e., 
                        
                           
                              
                                 x
                              
                              
                                 vpt
                              
                              
                                 i
                              
                           
                           
                           and
                           
                           
                              
                                 x
                              
                              
                                 spt
                              
                              
                                 o
                              
                           
                        
                     ), warehouse and store inventory levels (i.e., ypt
                      and yspt
                     ), and inbound and outbound shipments (i.e., nvt
                      and nst
                     ). These inbound and outbound quantities are used as inputs to the WP model to determine the workforce level for putaway and picking activities (i.e., α and β, respectively). The total distribution cost is then calculated as the sum of inventory, transportation, and warehousing costs obtained from both the ITP and the WP models.

It is worth noting that the ITP is similar to the One Warehouse Multiple Retailer (OWMR) problem studied by Federgruen and Tzur (1999), Levi, Roundy, and Shmoys (2008), Shen, Shu, Simchi-Levi, Teo, and Zhang (2009), and Solyali and Sural (2012). The OWMR problem is to find a distribution plan such that the total cost of ordering and inventory, both at the warehouse and individual retailers, is minimized. It captures the fixed and variable ordering/transportation costs between vendor-warehouse and warehouse-retailer. The ITP that we derive from WITP is set up in a similar way, except that we consider cyclical inventory constraints due to the practical need for generating a repeatable distribution plan as indicated by our industry collaborators. These inventory constraints ensure that the final inventory level during a time horizon becomes the initial inventory for the next time horizon (and is usually non-zero). OWMR problems have typically been studied assuming initial inventory to be zero.

OWMR has been shown to be NP-complete by the above references, and hence it is reasonable to deem ITP, and so the more complex WITP, as NP-complete. The heuristics that have been proposed to solve OWMR have largely focused on a single-item multi-retailer setting, except for Federgruen and Tzur (NRL, 1999) where they attempt to solve up to 10 items and 10 retailers. Because the scalability of such heuristics has not been established, and our focus is on solving industry-sized problems and developing managerial insights, we resort to numerically quantifying the benefits of WITP over the sequential approach of ITP+WP.

Before discussing the heuristic to solve industry-sized problems, we first show a comparison of the optimal distribution plans generated by solving the models for WITP and ITP+WP on a series of relatively small problem instances. Doing so helped us evaluate the tradeoff between the three sets of decisions and generate insights that were eventually used in developing the heuristic. The impact of aisle configuration at the warehouse (narrow vs. wide), which affects blocking and worker productivity, was also analyzed using this comparison.

As indicated earlier, picker blocking can be considerable in warehouses with narrow aisles. However, many warehouses employ wide aisles that allow workers to pass each other in the aisle in order to reduce congestion. Note that wide aisles require a larger area, compared to narrow aisles, for the same amount of storage and, hence, may or may not be a viable option financially for warehouses located near urban areas or in regions where space comes at a premium. To analyze the benefits of the WITP approach for supply chains that have a warehouse with wide aisles, in which blocking has minimal effect on worker productivity in most cases (Parikh & Meller, 2009), we remove the blocking function, b(k), and replace Constraints (3) in the WITP model presented earlier with the following:
                        
                           
                              k
                              
                                 
                                    Λ
                                 
                                 
                                    2
                                 
                              
                              ⩾
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       sp
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    spt
                                 
                                 
                                    o
                                 
                              
                              
                              ∀
                              t
                           
                        
                     
                  

We considered a supply chain with one vendor, one warehouse, one product, and five time-periods. Several problem instances were randomly generated by varying the number of stores (S), and putaway/picking rates (Λ
                        1/Λ
                        2). We generated four levels for S (2, 5, 10, 20), and three levels for Λ
                        1 and Λ
                        2 (200items/hour, 300items/hour, 500items/hour). Product demand for each store was uniformly generated between 0 and 3000 items per time-period, and the unit holding cost at the warehouse and stores were $0.01/item and $0.1/item, respectively. The labor cost for permanent and temporary workers were $15/hour and $10/hour, respectively. The models for ITP+WP and WITP were solved using a commercial solver, FICO Xpress – MP 7.0, on a personal computer with a Pentium 4 3.2gigahertz processor and 1gigabyte RAM.

The impacts of aisle configuration (narrow vs. wide) on optimal distribution plans are shown in Tables 4 and 5
                        
                        , which also show a comparison of ITP+WP and WITP plans. In these tables, each problem instance is indexed by a pair of elements corresponding to stores (S) and putaway/picking rates (Λ
                        1/Λ
                        2), respectively. The rates, Λ
                        1 and Λ
                        2 are set to be equal in our experimentation. The columns “V-W” and “W-S” refer to the numbers of shipments from a vendor to the warehouse and from the warehouse to a store, respectively. The columns “P” and “T” represent the number of required permanent workers and temporary workers for the entire time horizon. The total distribution cost is represented by “ΣC.” The column “Gap” represents percentage difference between the best solution found after 6hours and best bound.

From a cost perspective, in 10 out of 12 instances presented in Table 4, the total cost of WITP plans was lower compared to ITP+WP plans even though the WITP could not be solved to optimality in 2 of those instances (#3 and #7). Cost savings via WITP in these 10 instances ranged between 4.6% and 28.6%. For the 2 other instances (#8 and #12), WITP yielded a larger%-gap in the best solution compared to the ITP+WP solutions. Interestingly though, the cost differences were relatively small even with larger%-gap in the WITP solutions.

Observe that in most problem instances, the number of shipments was larger in the WITP case than ITP+WP; for problem instances when they were identical the time-periods of shipments were not identical. Similarly, the number of workers (putaway and picking) was much larger in ITP+WP case than WITP. That is, given the inclusion of warehouse workforce cost in the objective function, the WITP model was better able to tradeoff this cost component against the transportation and inventory costs yielding a lower total cost solution compared to the sequential ITP+WP approach. The inventory cost increase depended on how much the schedule of inbound and outbound shipments changed between ITP+WP and WITP solutions. The rescheduling of the shipments in WITP, more spread out than ITP+WP, also helped reduce the workload variation at the warehouse; see Fig. 4
                        .

For example, consider dataset (DS) #3 that had 10 stores, putaway and picking rates of 200items/hour, and a planning horizon of 5days (one work-week). The optimal ITP+WP solution had 4 inbound shipments during Days 1–3 from the vendor to the warehouse and 11 outbound shipments from the warehouse to the 10 stores during Days 1–3. The schedules for inbound and outbound quantities (57,354 units each) during the 5-day planning horizon were such that they occurred during the first three days of the planning horizon (see Fig. 4). The numbers of permanent workers required in the putaway and picking areas were 12 and 22, respectively. In contrast, the optimal WITP solution ensured that both inbound (5) and outbound (11) shipments were distributed reasonably evenly across the 5-day horizon. That is, the variance in the daily warehouse workload had been reduced substantially, from 0–209% to 94–110% of the mean workload value of 115hour/day. Only 7 and 8 permanent workers were required in the putaway and picking areas, respectively, in the optimal solution (see Table 4). This reduction in the labor cost at the warehouse (from $21,040 to $9480) offset an increase in the transportation (from $19,365 to $20,169) and inventory (from $8610 to $8949) costs, leading to an overall cost savings of 21.25% over ITP+WP (see Table 4).

Even when the warehouse had wide aisles, it is evident from Table 5 that the cost savings were substantial with WITP compared to the sequential ITP+WP. However, these savings reduced compared to the narrow aisle case. This is because although the ITP solution remained unchanged in both wide and narrow aisle cases (e.g., column “Shipments” in Tables 4 and 5 are identical), blocking in wide aisles was substantially lower. So when the WP was optimized, the number of workers required in wide aisles was lower compared to narrow aisles for the same ITP solution; e.g., for DS #3 in Tables 4 and 5, the total pickers was 27 (22 permanent and 5 temporary) for narrow aisles and 15 (12 permanent and 3 temporary) for wide aisles. Consequently, the total cost of plans with ITP+WP for the wide aisle case was lower than for the narrow aisle case ($42,855 vs. $49,015). The corresponding WITP plans for both narrow and wide also exhibited a reduction in the number of pickers; i.e., 13 (narrow) and 9 (wide). Given that warehouse workforce cost now has a relatively lower contribution in the objective function of WITP for wide aisles (compared to narrow aisles), the corresponding optimal distribution plans were predominantly dominated by transportation and inventory cost reductions. The resulting effect was that the optimal plans for the warehouse with wide aisles may sometimes have a higher workload variation compared to narrow aisles, but still much lower than the ITP+WP plans (see Fig. 5
                        ).

From a solution perspective, we discussed earlier that WITP is NP-complete. It is also analogous to a two-stage capacitated lot-sizing problem, which typically has weak linear programming (LP) bounds and lacks strong cutting planes (Bitran & Yanasse, 1982). Our preliminary experiments show that though the LP relaxation of WITP can be solved easily, it is difficult to obtain an optimal or a near optimal solution within 6hours, even for small problem instances. For example, the best solution obtained for a problem instance with 1 vendor, 1 warehouse, 20 stores, 1 product, and 5 time-periods using the Xpress MIP solver had an optimality gap of over 10%. A two-echelon supply chain can have over 100 vendors, more than 1 warehouse, over 100 stores, and over 1000 products. The total number of integer variables for WITP instances of this size is over a billion. To generate near-optimal distribution plans in a reasonable amount of time, we designed a heuristic algorithm that uses insights gained from the above experiments.

Our proposed heuristic algorithm considers the impact of advancing and/or delaying inbound and outbound shipments, and swapping of product quantities in these shipments on both total distribution costs and workload variation at the warehouse. The heuristic incorporates key features from the well-established iterative local search, which consists of two alternating phases, a local search phase and a perturbation phase (Lourenço, Martin, & Stützle, 2002). The heuristic implements three sets of moves, intended to reduce transportation, warehousing and inventory costs. The high level structure of the heuristic is as follows, after which we explain each step in detail:
                        
                           
                              
                              
                                 
                                    Initial solution (s), current solution (s
                                       *), incumbent solution (s
                                       **)
                                 
                                 
                                    
                                       
                                       s
                                       **
                                       =
                                       s
                                       *
                                       =
                                       s
                                    
                                 
                                 
                                    Repeat
                                 
                                 
                                    
                                       Inbound phase
                                 
                                 
                                    
                                       
                                       s′=local search on s
                                       * (making Moves 1 and 2)
                                 
                                 
                                    
                                       
                                       s′′=perturbation of s′ (applying inbound swap)
                                 
                                 
                                    
                                       Acceptance criteria
                                 
                                 
                                    
                                       
                                       
                                       
                                       s
                                       *
                                       =
                                       s′′, if s′′<
                                       s′
                                 
                                 
                                    
                                       
                                       
                                       
                                       s
                                       *
                                       =
                                       s′, if s′′>
                                       s′
                                 
                                 
                                    
                                       Outbound phase
                                 
                                 
                                    
                                       
                                       s′=local search on s
                                       * (making Moves 3 and 4)
                                 
                                 
                                    
                                       
                                       s′′=perturbation of s′ (applying outbound swap)
                                 
                                 
                                    
                                       Acceptance criteria
                                 
                                 
                                    
                                       
                                       
                                       
                                       s
                                       *
                                       =
                                       s′′, if s′′<
                                       s′
                                 
                                 
                                    
                                       
                                       
                                       
                                       s
                                       *
                                       =
                                       s′, if s′′>
                                       s′
                                 
                                 
                                    
                                       If s
                                       *
                                       <
                                       s
                                       **, then s
                                       **
                                       =
                                       s
                                       *
                                    
                                 
                                 
                                    Until the stopping rule is met
                                 
                                 
                                    End
                                 
                              
                           
                        
                     
                     
                        
                           1.
                           Initial solution: Let s refer to a feasible solution to the WITP. A feasible solution will provide values to the inbound and outbound shipment schedules and product quantities in each shipment, the required warehouse workforce (permanent and temporary), and inventory levels at the warehouse and stores. We derive a feasible solution s by ensuring that the total demand is met at both the warehouse and the stores across all time-periods.

Inbound Phase: For the given initial solution (s) we iteratively improve the inbound solution (which consists of inbound product quantities, inbound shipment schedules, inventory at the warehouse, and warehouse workforce for putaway) using Moves 1 and 2 (described later). After each iteration, a new solution (s′) is accepted based on an acceptance criterion; superior solutions are always accepted and inferior solutions are accepted with a probability p. From our initial experiments we set the value of p as 0.05. The search stops if the stopping rule is met and the best solution s′ found so far is recorded. We perturb this solution by implementing Move 5 (described later) for a pre-specified number of iterations. The new solution (s′′) is accepted only if it is better than the previous best solution (i.e., s′′<
                              s′). Otherwise, s′ remains the best solution and the heuristic progresses to the outbound phase.

Outbound Phase: For the current best solution found thus far, we improve the outbound solution (which consists of outbound product quantities, outbound shipment schedules, store inventory, and warehouse workforce for picking) iteratively using Moves 3 and 4 (described later). The new solution is accepted based on the acceptance criteria mentioned above. If the stopping rule is met, then the best solution found so far is perturbed using Move 5. Again, as in the inbound phase, only the best solution is considered for the next step in the search process. Repeat Steps 2 and 3 until the stopping rule is met.

Stopping Rule: The algorithm stops if the maximum number of iterations is reached or if, for a prespecified number of iterations, the newly found solution falls within δ% of the incumbent solution. Based on initial experimentation, we set the value of δ as ±0.25%.

This section describes the five moves that help the search process transition from a current solution, s, to a neighboring solution, s′. The first two moves operate on inbound product quantities, 
                           
                              
                                 
                                    x
                                 
                                 
                                    vpt
                                 
                                 
                                    i
                                 
                              
                           
                        , and the next two moves on outbound product quantities, 
                           
                              
                                 
                                    x
                                 
                                 
                                    spt
                                 
                                 
                                    o
                                 
                              
                           
                        . The fifth move operates on either of these sets of variables. The moves are considered as complete or partial based on the quantity of product (inbound or outbound) moved from one period to another. The decision on the amount of quantity to be moved depends on the size of the shipment (
                           
                              
                                 
                                    ψ
                                 
                                 
                                    t
                                 
                              
                           
                        ) scheduled in a period t. For example, the size of shipments scheduled from vendor v is given by 
                           
                              
                                 
                                    ψ
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          p
                                       
                                    
                                    
                                       
                                          W
                                       
                                       
                                          p
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          vpt
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    Q
                                 
                              
                           
                        , where, Q is the capacity of the truck.


                        Move 1 – Advance complete shipment: This move advances all shipments scheduled from vendor v to the warehouse in period t to period t
                        −1 (i.e., advancing the entire quantity of each product scheduled in period t). We make this move only if there is a positive shipment in period t and the total quantity being shipped from the vendor does not equal a truckload (i.e., 0<
                        
                           
                              
                                 
                                    ψ
                                 
                                 
                                    t
                                 
                              
                           
                        
                        <1). The values of 
                           
                              
                                 
                                    x
                                 
                                 
                                    vpt
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              
                                 
                                    n
                                 
                                 
                                    vt
                                 
                              
                              ,
                              
                              and
                              
                              
                                 
                                    y
                                 
                                 
                                    pt
                                 
                              
                           
                         are updated after this move. The motivation behind this move is two-fold: first, if a shipment is already scheduled from the vendor in t
                        −1 then moving a shipment from t would help in shipment consolidation and save on the fixed cost of shipment; and second, whether or not a shipment is scheduled in t
                        −1, moving an entire shipment from period t could help reduce the total number of inbound shipments at the warehouse in period t, which could reduce the number of required putaway workers and thus reduce the labor cost. Because of advancing shipment, the inventory cost might increase, which is traded off against likely decreases in transportation and warehousing costs.


                        Move 2 – Advance partial shipment: Instead of advancing an entire shipment, this move advances a fraction of a shipment from period t to t
                        −1, if 
                           
                              
                                 
                                    ψ
                                 
                                 
                                    t
                                 
                              
                              >
                              1
                           
                        . The fraction to be advanced depends on whether or not a shipment is scheduled in period t
                        −1.


                        Condition 1: If no shipment is scheduled in period t
                        −1 (i.e., nv
                        
                        (
                        
                           t
                        
                        −1)
                        =0), then advance half of the shipment from t to t
                        −1. For example, if 1.4 shipments (i.e., two shipments with the second shipment only 40% of a truckload) are scheduled from vendor in period t and if nv
                        
                        (
                        
                           t
                        
                        −1)
                        =0, then advance 0.7 shipment to period t
                        −1. This will not change the total transportation cost as there is no change in the total number of shipments from the vendor (given the transportation cost structure we use); it is still 1.4. But splitting bigger shipments would now spread the inbound quantities across two time-periods, which reduces the required number of putaway workers at the warehouse in period t and likely results in a balanced workload between period t and t
                        −1.


                        Condition 2: If a shipment is scheduled in period t
                        −1 (i.e., nv
                        
                        (
                        
                           t
                        
                        −1)
                        >0), then advance a fraction of the shipment from t to t
                        −1 so that the >1 shipment may be rounded down to its nearest integer. For example, if 0.5 and 1.4 shipments are scheduled in period t
                        −1 and t, respectively, then advance 40% of shipment from t to t
                        −1. After the move, the resulting inbound shipments in t
                        −1 and t are 0.9 and 1, respectively. Thus, this move helps in reducing the number of shipments from 3 to 2; i.e., saving one fixed shipment cost. The number of shipments is now being split equally, the workload at the warehouse is more balanced, which results in reduced labor costs. The values of 
                           
                              
                                 
                                    x
                                 
                                 
                                    vpt
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              
                                 
                                    n
                                 
                                 
                                    vt
                                 
                              
                              ,
                              
                              and
                              
                              
                                 
                                    y
                                 
                                 
                                    pt
                                 
                              
                           
                         are updated after this move.


                        Move 3 – Delay complete shipment: This move is similar to Move 1 except that instead of advancing inbound shipments this move would delay the entire outbound shipment scheduled from the warehouse to store s from period t to t
                        +1. This move is implemented only if the condition 0<
                        ψt
                        
                        <1 holds true. The motivation behind this move is that if a shipment is already scheduled to the store s in t
                        +1, then moving a shipment from t to t
                        +1 would help in shipment consolidation and save on the fixed cost of shipment. Additionally, even if no shipments are scheduled in t
                        +1, moving an entire shipment from period t to t
                        +1 could help reduce the total number of outbound shipments in period t, which in turn could reduce the number of required pickers and thus reduce the labor cost. The cyclical inventory constraint will ensure the feasibility of meeting the demand both at the warehouse and store in each period. The values of 
                           
                              
                                 
                                    x
                                 
                                 
                                    spt
                                 
                                 
                                    o
                                 
                              
                              ,
                              
                              
                                 
                                    n
                                 
                                 
                                    st
                                 
                              
                              ,
                              
                              
                                 
                                    y
                                 
                                 
                                    pt
                                 
                              
                              
                              and
                              
                              
                                 
                                    y
                                 
                                 
                                    spt
                                 
                              
                           
                         are updated after this move.


                        Move 4 – Delay partial shipment: This move is similar to Move 2 except that instead of advancing partial inbound shipments, we delay partial outbound shipments scheduled from warehouse to the store s in period t to t
                        +1, if ψt
                        
                        >1. We again use Conditions 1 and 2 described in Move 2, although in this move we delay the shipments. The values of 
                           
                              
                                 
                                    x
                                 
                                 
                                    spt
                                 
                                 
                                    o
                                 
                              
                              ,
                              
                              
                                 
                                    n
                                 
                                 
                                    st
                                 
                              
                              ,
                              
                              
                                 
                                    y
                                 
                                 
                                    pt
                                 
                              
                              
                              and
                              
                              
                                 
                                    y
                                 
                                 
                                    spt
                                 
                              
                           
                         are updated after this move.


                        Move 5 – Swap shipments in two periods: There are two types of swaps, inbound and outbound. For the inbound swap we randomly select m vendors and two periods that have positive shipments. Then we swap the shipment schedules of the m selected vendors between the two periods. Based on our initial experiments m is specified to be less than 50% of the total number of vendors scheduled in the selected two periods. The outbound swap is similarly constructed. The values of 
                           
                              
                                 
                                    x
                                 
                                 
                                    vpt
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              
                                 
                                    n
                                 
                                 
                                    vt
                                 
                              
                              ,
                              
                              and
                              
                              
                                 
                                    y
                                 
                                 
                                    pt
                                 
                              
                           
                         are updated after an inbound swap and the values of 
                           
                              
                                 
                                    x
                                 
                                 
                                    spt
                                 
                                 
                                    o
                                 
                              
                              ,
                              
                              
                                 
                                    n
                                 
                                 
                                    st
                                 
                              
                              ,
                              
                              
                                 
                                    y
                                 
                                 
                                    pt
                                 
                              
                              ,
                              
                              and
                              
                              
                                 
                                    y
                                 
                                 
                                    spt
                                 
                              
                           
                         are updated after an outbound swap.

We now compare the performance of our proposed heuristic with the optimal solutions for small problem instances in terms of solution quality and CPU time.


                        Table 6
                         compares the optimal and heuristic solutions over the same 12 problem instances. Each problem instance corresponds to stores and putaway/picking rates. The rates for putaway (Λ
                        1) and picking (Λ
                        2) were set to be equal in our experimentation. The column ‘Difference’ corresponds to the percentage heuristic solution differs from the optimal solution. The CPU times are based on a personal computer with a Pentium 4 3.2gigahertz processor and 1gigabyte RAM; the heuristic was coded in C#.

Notice that the heuristic solutions either match or lie within 1% of the optimal solutions for most of the problem instances. The heuristic outperforms the exact solution obtained through an off-the-shelf solver that could not always reach optimality (see DS #4, #8 and #12). Moreover, notice the huge difference in the runtime between the heuristic and exact solution particularly for DS #3, #4, #7, #8, #11 and #12. The variance in the daily warehouse workload obtained by the proposed heuristic is comparable to that obtained through the optimal solution suggesting that the heuristic is able to balance warehouse workload.

To analyze the impact of technology (via putaway/picking rates, Λ
                        1/Λ
                        2), the allowable level of temporary workers (γ), and the productivity of a temporary workers (φ), 24 problem instances were considered with the following settings: three levels for Λ
                        1 and Λ
                        2 (200items/hour, 300items/hour, 500items/hour), four levels for γ (0, 0.5, 1, 2), and two levels for φ (0.75, 1.0). All instances considered for this analysis had 10 vendors, one warehouse, 500 stores, 1000 products, and 5 time-periods.


                        Table 7
                         reports the total distribution cost (∑C), the total warehouse workforce requirement (P=permanent and ∑T=total temporary across all periods), and the CPU runtime of the heuristic solutions, for the test instances. We discuss our observations from these experiments in the form of managerial insights below. Fig. 6
                         indicates the workload variation for various instances of technology and allowable levels of temporary workers.

The following insights are based on our experimentation, both on small- and industry-sized problems:
                           
                              •
                              
                                 The optimal WITP plan results in lower total distribution cost and lower workload variance compared to the optimal plan generated by the ITP+WP approach. As indicated earlier, the effect of considering warehouse workforce is that shipments tend to be consolidated less often and the inventory may be readjusted to reduce the total distribution cost. As a result, an optimal WITP plan has a more balanced workload at the warehouse compared to the corresponding ITP+WP plan, which has positive practical implications when a warehouse manager plans for his workforce mix and level.


                                 The impact of aisle configuration is that the benefits of WITP are higher when the warehouse has narrow aisles vs. wide aisles. Blocking is typically higher in narrow aisles, which increases the required number of permanent and/or temporary workers, thus increasing the warehouse cost contribution in the objective function. Consequently, fewer shipments get consolidated and the workload is spread out more evenly in narrow aisle warehouses (see Tables 4 and 5).


                                 The use of a better warehousing technology may increase the workload variance. A better technology means higher productivity rates, which means fewer workers are required at the warehouse. Besides the fact that lower warehousing cost leads to lower total cost, the transportation and inventory costs tend to dominate the objective function, similar to ITP+WP, which may cause higher variance in warehouse workload (see Table 7 and Fig. 6).


                                 An increase in the allowable level of temporary workers increases workload variation. More low-cost temporary workers allowed likely means less high-cost permanent workers required, thus reducing the warehousing cost contribution to the objective function. Similar to the previous reasoning, a low cost distribution plan with a relatively high workload variation is possible.

On one hand, workload variation at the warehouse has negative implications both from the workforce planning and the total distribution cost standpoints. On the other hand, under certain situations such as better warehousing technology and/or more low-productive temporary workers, a distribution plan with a relatively large workload variation may still yield a lower cost solution (see Table 7). This may have interesting practical implications. For instance, one of our industry partners indicated that they would consider hiring only temporary workers if it saved them on the total distribution cost, even if these workers may lack the training, exposure, experience, and understanding of the work and culture of the company. This manager saw this as an opportunity to negotiate aggressively with agencies that supply such workers on a daily basis, even though he may be faced with increased workload variation.

Our discussions with warehouse managers at several supply chains and the identification of a gap in the academic literature motivated us to introduce the warehouse-inventory-transportation problem (WITP) for supply chains. The proposed WITP balances warehousing, inventory, and transportation decisions such that the total distribution cost is minimized. We modeled the WITP as a nonlinear integer programming model, and considered several warehousing decisions. We also incorporated worker congestion in the WITP model as it is noticeably large in warehouses with narrow aisles.

Our experiments indicated that the WITP approach resulted in a substantial reduction in daily warehouse workload variation, compared to solutions generated by a sequential approach (ITP+WP). In addition, substantial savings in the total distribution cost were observed with the WITP approach. An efficient heuristic method that uses concepts from the iterative local search approach was also outlined for efficiently solving industry-sized problem instances. Further analysis on such problems indicated that the WITP plans were sensitive to other warehousing decisions such as aisle configuration (which affects worker congestion), technology (which determines the worker productivity), and allowable level and productivity rate of temporary workers.

Future work in this area could include extending the model to account for multiple warehouses in a supply chain. For such a network with multi-sourcing the decision of warehouse(s)-to-store allocation in each time-period would be relevant, but may substantially complicate the problem. Additional aspects such as the level of workforce cross-training and the decision of which warehouse technology to employ are worth investigating. The authors are now investigating some of these extensions.

@&#ACKNOWLEDGEMENTS@&#

We appreciate comments from two anonymous reviewers of our original submission, which has helped improve the exposition in the manuscript. This research was partially supported by National Science Foundation Grants CMMI#1235061 and CMMI#1235283.

@&#REFERENCES@&#

