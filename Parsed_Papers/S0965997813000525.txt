@&#MAIN-TITLE@&#Configurable model for real-time crane erection visualization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We developed a configurable crane model for real-time construction visualization.


                        
                        
                           
                           The proposed model divided a crane into three configurable modules.


                        
                        
                           
                           The proposed model was defined using multibody structure that can be easily adapted to existing physics engine.


                        
                        
                           
                           We implemented a real cooperative crane erection scenario to test the proposed modeling method.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Crane

Cooperative

Erection

Multibody

Physics Engine

Simulation

Visualization

@&#ABSTRACT@&#


               
               
                  Detailed simulation and visualization of crane activities have been recently introduced to help engineers identify potential problems with critical erection tasks; however, the development of real-time erection visualizations for different types of cranes and lifting objects is time-consuming, and usually requires a certain amount of effort in modeling and setting up the environment. This research proposes a configurable model which is reusable, fast-prototyping, and extendable to support real-time visualization of the erection process. The developed model of the crane is divided into three modules which can be reconfigured for different erection tasks. Each module is defined using multiple rigid bodies and the joint constraints of multibody dynamics. The proposed modeling method can also be easily adapted to existing physics engines. To evaluate the feasibility of the proposed method, we observed the processes involved in a common erection activity and compared this with the visualization results obtained using proposed method. We also simulated a cooperative cranes scenario taken from an actual construction project to demonstrate its usability. We found that the proposed modeling method was easily able to visualize various erection activities with different cranes and configurations.
               
            

The increasingly versatile use of cranes in modern construction projects has introduced new challenges along with it: rigging objects have become larger, heavier, and more diverse, and yet shorter erection times are expected. Most objects that cranes work on are in the critical path for that project and thus a delay in these tasks often results in a delay for the whole project. Furthermore, some erection tasks involve high levels of risk, requiring high accuracy during the planning stage [9].

In order to increase the efficiency and precision of crane erections, engineers try to use cranes that are more mobile and versatile, and perform cooperative erections at construction sites where possible. Mobile cranes are equipped with wheels or tracks, are easier to transport between sites, and are more flexible as they can be deployed at different places on the construction site according to the schedule demands. However, they are generally more difficult to control than tower cranes. Operators need to control the rigging mechanism as well as the motion of the crane, ensure that the crane is stable during the erection process, and also avoid any collisions.

The increased use of cooperative erections is another trend seen in modern construction projects. Large cranes are not always available and site rental fees can be very high. Moreover, assembly and dismantling of large cranes requires more time. Thus, a cheaper alternative is the cooperative use of standard cranes that are available on-site [1]. The two cranes can also be used individually on site, which reduces the overall time cost and allows project managers more flexibility when scheduling the erection project, resulting in a more efficient plan; however, performing cooperative erections is challenging, even for experienced operators. The erection plan needs to be completed and checked before the actual erection to ensure that the load does not exceed the lifting capacity of each crane at any time. The erection paths and crane operations will affect the share of the load handled by each crane. Operators need to work cooperatively to be able to solve these problems and complete the task successfully.

Rigging methods are also becoming increasingly versatile, especially in fast-tracked projects. Engineers now use a variety of lifting devices to stabilize the erection of decks, windows, pipes, equipment, and even irregularly-shaped objects. “Christmas tree” rigging (rigging of several objects in one erection cycle) and dress-up rigging (rigging of large equipment that has many accessories) are now common. Christmas tree rigging can reduce the number of erection cycles required, and dress-up rigging transfers workload from the post-erection phase to the pre-erection phase, which can reduce the risks involved in working at heights. While utilizing these erection methods can significantly reduce the time required for a task, they increase the complexity of the task itself. Many recent studies have applied visualization technologies for the identification of potential problems in complicated erection activities involving versatile lifting configurations and devices [37,10,18]. However, there is a need for an efficient and systematic method of fast prototyping crane erection visualization to reduce the time cost involved. In this way, the benefits of crane erection visualization and simulation can be realized and adapted for different types of erection tasks.

In this study, we propose a configurable crane modeling method that allows engineers to efficiently prototype a crane erection activity through real-time visualization and simulation. By modularizing a crane model, this method allows engineers to easily visualize cranes with different lifting devices. We implement an real erection project to be performed with dual mobile cranes to verify the feasibility of the proposed method.

@&#RELATED WORKS@&#

Crane modeling and simulation has been an active area of research for several years. Researchers have used mathematical methods to model cranes and estimate duration and cost of erection task scheduling. Tam et al. [36] were able to predict the hoisting time for tower cranes using a nonlinear model. Zhang et al. [38] simulated construction operations by applying the fuzzy logic method. Kim and Park [22] applied the multiple traveling salesman problem method (mTSP) to schedule tasks for quay cranes in ship operation planning. Attempting to move towards automated construction, Ali et al. [1], Cheng and Admin [8], Kang and Miranda [20] utilized computational methods to generate collision-free paths automatically for cooperative crane operations.

Many investigators have employed graphical technologies for visualizing and simulating crane activities. This is a low-cost and effective method for identifying potential problems before real construction. O’Connor et al. [32], Liu [25], Amatucci et al. [2], Bernold et al. [3], Stone et al. [35] developed various simulation and visualization tools for crane operations. Lipman and Reek [24] used Virtual Reality Modeling Language (VRML97) to develop 3D web-based technologies for managing, accessing, and viewing construction project information. Kamat and Matinez [17] generated automatic dynamic 3D animations of construction processes using discrete-event simulation (DES) tools. Huang and Gau [16] designed an interactive visual simulation that used a cluster of desktop computers for mobile crane training. Kang and Miranda [21] developed a numerical method to automatically simulate and visualize crane activities in detail.

Recently, some researchers and corporations have utilized physics engines to improve the accuracy of crane simulations. Chi et al. [9] proposed a physics-based simulation for crane manipulation and cooperation using constraint-based dynamics and closed-form forward kinematics methods. They modeled a crane using two sub-models, a manipulation model and a suspension model, and to simulate the main types of cranes. They assumed that the bodies of the cranes were static (i.e. no vibrations were present and the position and orientation were directly controlled by users), which meant that the dynamic motion of a mobile crane could not be simulated. Many corporations have also developed simulators and training systems that compute real-time physical behavior and show a realistic rendering of a scene [11,14,33]. These works have demonstrated that integrating graphical technologies and physics engines is effective in enabling accurate and realistic real-time interaction in crane simulations. However, as these systems and software are commercial products, the details of their implementation are not known. Therefore an extensible and modularized method must be proposed and developed to improve the crane erection simulation and visualization method.

In this work, we aim to develop a configurable model for real-time crane erection visualization. The proposed method should meet the following goals.
                        
                           1.
                           It should support the simulation of various types of mobile cranes. Moving platforms, such as the truck and the track, should be simulated. The interaction between the rigging system (the crane) and the moving platform needs to be modeled and visualized.

It should be able to simulate the mechanisms of different lifting devices and rigging objects. The attachment and release of lifting devices and objects needs to be simulated, along with complicated rigging mechanisms such as Christmas tree rigging.

It should be able to visualize cooperative erections. The model must be extendable and configurable and be easily adapted to erection scenarios involving single or multiple cranes.

It should support real-time visualizations efficiently. This will allow future engineers to simulate physics-based virtual cranes in a virtual environment for construction planning and scheduling.

A crane is composed of multiple rigid bodies and connections, irrespective of its type and scale. A mobile crane includes additional degrees-of-freedom for the moving platform. In order to model a crane, generally we need to model the connections and rigid bodies numerically. The connecting relationships between rigid bodies have to be represented using equations that account for the laws of physics. In this study, we model a crane by firstly defining a crane as a multibody structure, and then using a multibody dynamics solver to calculate results based on that definition. Multibody dynamics is primarily used to compute physical feedback between multiple bodies either in mutual contact or connected with each other through joints [13]. It combines rigid body dynamics and constraint conditions (connections between the bodies). By solving the equations of motion (which describe dynamic behavior in multibody dynamics), the motion of each body can be computed at each time interval. This is a widely used method for simulating the dynamic motions of articulated mechanisms or equipment.

As a crane, apart from the rigging system, is essentially an articulated mechanism, we can define it using multibody dynamics, and then simulate the rigging system using certain assumptions. The boom, cabin, wheel, cable, and lifting object can be represented by rigid bodies, called actor actors in this work. The motion between two actors, such as the rotation between the boom and base of a mobile crane, are represented by a joint (the constraint condition for two rigid bodies). An actor has geometrical properties, such as position, centre of mass, and tensor, and its motion can be calculated from rigid body dynamics. A joint provides six degrees of freedom, including translation and orientation, between two actors. Four basic types of joints are described in this research: spherical, revolute, prismatic, and distance joints. Table 1
                      lists the details of these joints and their symbols, which are used in later sections.

The spherical joint attaches two actors at one point on each actor. This joint ensures that the two points are always connected (i.e. the global position of one point is the same as the global position of the other). Therefore there are three constraints between these two points. An example of a spherical joint is the simulation of a simple pendulum.

The revolute joint attaches two actors with a hinge structure. It retains one rotational degree of freedom but removes all other degrees of freedom. The two actors can only rotate along one axis.

The prismatic joint limits two actors to only one translational degree of freedom such that the actors can only move along a specified axis with no relative rotation. It can be used to simulate a slider mechanism. By applying an external force or limitation, the movement of the slider can be controlled by users to simulate a controllable mechanism.

The distance joint tries to keep two points from different actors within a specific range of distance. The constraints for distance joints are similar to those for spherical joints. The difference is that the distance joint specifies the minimum and maximum distance between the two points. The distance joint can be made to act as a spring to simulate the behavior of a rubber band. It can be simulated by the combination of four actors, two spherical joints, and one prismatic joint. This allows more control and complex behaviors but reduces stability.

The joint limit is the motion limitation of each degree of freedom. For example, the joint limit in a prismatic joint is the range of distance between the connected actors. To simulate more realistic physical behaviors, a joint spring and joint damper can be applied optionally in the motion equations when an actor reaches the joint limits. Joints may be dynamically attached and detached to simulate the attachment and release of a lifting object, allowing a series of procedural erection activities to be simulated.

After a crane is defined using multibody dynamics, we can use a multibody dynamics solver to simulate its motion behavior. In this study, we use the PhysX physics engine to simulate the motion behavior of a crane. The engine uses position-based dynamics to solve equations that represent the connection between rigid bodies. Position-based dynamics is a constraint-based method for solving multibody dynamics problems. Constraints are processed using the Gauss–Seidel approach, which can handle non-linear constraints as well as constraint-based methods for inequalities [29]. The method uses the Verlet integrator, which helps to avoid the overshooting and energy gain problems associated with explicit integration [4]. Therefore the proposed approach is stable and can control the properties of an actor or a joint dynamically during simulation.

To model a configuration of a crane, a systematic method must be developed and applied. A typical crane and its lifting devices can be divided into multiple movable parts: main body (or base) of a crane, cabin (rotatable part which usually connects with booms), one or more extendable booms, trolley, pulley, cable, hook, an optional mobile platform (for a mobile crane), lifting object, and lifting devices. These parts should be grouped and modularized to make the crane configurable so that it can easily be adapted, modified, and reused for different erection tasks and purposes. The next section describes the modeling methods.

We modeled a crane using a multibody definition and modularized it into three parts, as shown in Fig. 1
                        : the manipulation module, the suspension module, and the lifted-object module. The suspension module and the lifted-object module are the most important parts of the crane model. They can directly influence the motion behavior when an object is lifted. The manipulation module is comprised of the crane body, wheels (for a mobile crane), cabin, etc., which depend on the type of crane used. The suspension module represents the rigging system of a crane, including the trolley, cable, block, and hook. The lifted-object module includes hooks, a lifting object, and optional lifting devices. We can classify the lifted-object modules into two types: lifting with a lifting device and lifting without a lifting device, as shown in Fig. 2
                        a and b, respectively.

The manipulation module represents the main body of a crane and differs for different types of cranes. In this paper we modeled a wheel-type mobile crane to demonstrate the modeling method. Fig. 3
                         illustrates a general wheel-type mobile crane. Its corresponding model is shown in Fig. 4
                        . A general mobile crane has four major components: crane body, cabin, boom, and sub-booms. The numbers of sub-booms depends on the mobile crane that is selected (in some mobile cranes, there is only one non-extendable boom and no sub-booms).

The joint connecting the crane body and cabin is a revolute joint, which allows the cabin to rotate horizontally. The boom and cabin are connected by a revolute joint that can simulate the operation of raising and lowering the boom. The sub-booms are connected to the boom and to each other via prismatic joints. In theory, the boom and sub-booms can be modeled using only one boom actor. However, when the boom is extended or retracted, the dynamic changes in the geometrical properties will require more complex programming and computation for collision detection. The bounding shape for collision detection will change dynamically when the boom extends. Therefore, utilizing a model that segments a boom into multiple sub-boom actors, where each actor has a fixed bounding shape, can simplify the collision detection process.

The final sub-boom will be connected to the suspension module. The model also includes the mobile part of a wheel-type mobile crane. The back wheels are directly connected to the crane body via revolute joints and the front wheels are connected through the steers to the crane body. By adding motor effect to these revolute joints, the model can simulate the operation of driving a wheel-type mobile crane. For other types of cranes, such as a tower crane, the crane body should be set at a fixed position in space. For a track crane, the wheel actors can be modified to simulate the track behavior.

The suspension module consists of four actors as shown in Fig. 5
                        : the trolley actor, the cable actor, the block actor, and the hook actor. The trolley actor is at the top of this module and is the adapter to the manipulation module (connecting the final sub-boom actor). Although the rigging system of the mobile crane does not have a trolley element, we retain this actor in the suspension module to allow for generalization. We connect the trolley to the boom using a fixed joint for a mobile crane; for a tower crane, a prismatic joint can be used to simulate the movement of the trolley along the boom.

A spherical joint is used to connect the trolley actor with the cable actor, allowing the swing effect of a rigging system to be simulated and visualized. However, usually more than one cable is used to support the block system in cranes for lifting heavy objects. When the block is twisted during the erection process, multiple cables will force the block to retain its original rotation angle along the system axis shown in Fig. 5b. To simulate this behavior, we add a joint spring oriented along the system axis; however, according to Newton’s second law, a spring system will form a linear simple harmonic oscillator [12]. The twisting motions of the block will lessen with time due to the energy spent in twisting the cables. To simulate this energy loss, we apply a joint damper along the system axis in the spherical joint.

The connection between the cable and the block is a prismatic joint. The prismatic joint can simulate the extension and the retraction movements of hoisting operations by changing the length of the linear limit of the joint during erection. The hook is attached to a block using a mechanism allowing only one degree of freedom in a general crane block. We simulated this mechanism by connecting the block actor and the hook actor through a revolute joint. During the erection process, the lifting object will pull the hook down and increase the static friction between the hook and the block. Due to this friction, the revolute joint should not be completely free to rotate. Therefore, we apply a joint damper to the revolute joint here to damp the rotating motion and simulate the physical behavior of the hooks.

Finally, the hook actor is attached to the lifting objects to complete the suspension system. In a previous paper, we modeled cables using a chain of spherical and prismatic joints and actors [19]. However, having several open joints (joints with more than three degrees of freedom) connected together will result in a shaking effect and error propagation. Furthermore, due to gravity, the cables remain approximately straight during crane operations, even during motion [21]. Therefore, in this study a cable is assumed to be a rigid body instead of several rigid bodies with several joints attached, or a soft body to increase its stability and decrease the computational loading during simulation.

The lifted-object module includes the object to be erected and also optional lifting devices. The lifting device (normally referred to as the spreader) is commonly used for transferring an evenly distributed load to the crane [6].In this study, we also considered that lifting devices themselves have mass and as such, can influence the dynamic motion of the erection process. In light of this, we merged the lifting devices into the lifted-object module. Several erection examples, with and without a lifting device, are shown in Figs. 6 and 7
                        
                        , respectively. The slings are the linkages between the hook, the lifting devices, and the lifting objects. We simulate a sling using a distance joint. Multiple slings are usually needed to spread the load and increase stability when lifting an object.

A lifted-object module without a lifting device can be modeled using only two actors (hook actor and object actor) and several distance joints. Fig. 6a shows an example of a cylinder-like object with three slings attached, such as a vessel or an oil tank. The modeling method for other common types of erected objects such as a beam-like object and a flat object are shown in Fig. 6c and e. Lifting with lifting devices is modeled as an extension of lifting without lifting devices by adding a lifting device actor between the hook and object as shown in Fig. 7. The two actors, the hook and object, are connected indirectly via a lifting device actor with multiple distance joints (slings). Fig. 7a and c shows examples of the use of a spreader bar or a spreader beam for lifting. Another example of modeling a common lifting device, a container spreader, is also shown in Fig. 7e. By combining distance joints and different attachment positions, the swing effect of lifting can be simulated.

@&#IMPLEMENTATION@&#

To implement the proposed crane model, we used XNA [7] as the real-time rendering engine and PhysX [31] as the physics engine. A user interface was developed on a standard personal computer, which allowed users to control one or two virtual cranes using keypads and obtain immediate visual feedback.

A rendering engine is used to generate a series of images of a virtual scene. It performs the process of transferring the geometry of a large number of virtual objects, setting the viewpoint, assigning textures to objects, handling lighting and shading information, and producing visual output. We tested several rendering engines and determined that Microsoft XNA, which is a framework based on DirectX commonly used to develop PC and Xbox360 games, was the ideal choice. This rendering engine provides a good variety of programming functions which let programmers generate smooth animations of crane operations and simultaneously process real-time inputs from multiple users. Another advantage is its seamless integration with PhysX, a well-known and popular physics engine that supports hardware acceleration. Microsoft XNA also provides several technical advantages: it was originally designed for gaming purposes and provides excellent functionality for handling user inputs and internet connection; the development environment of Microsoft XNA supports various file formats for 3D models, 2D textures, and audio, minimizing the effort involved in converting files and reduces development time; and virtual objects in XNA are all rendered using a graphics processing unit (GPU) shader, a small program that executes inside the GPU [26]. Microsoft XNA also supports a shader programming language through the Microsoft High Level Shading Language (HSLS) as standard. Since a GPU shader takes advantage of the GPU for hardware acceleration, Microsoft XNA can process a complicated 3D scene of a virtual construction site efficiently and can render a realistic virtual world in real time.

The PhysX physics engine integrated in the proposed system was originally developed by a small company called AGEIA, which was acquired by Nvidia in 2008 [31]. PhysX enables hardware acceleration using the GPU of Nvidia graphics cards and applies position-based dynamics (PBD) to simulate physical behavior in real-time. It cannot only handle rigid body simulation, but also soft body, fluid, and cloth simulation. PhysX is widely used in computer games and for other simulations such as robotics [28] and virtual surgery [27]. A rigid body, an actor, is the basic object in PhysX, and these actors have to be defined to initialize the physics models. Each actor has a body description property, which defines the properties of its rigid body, such as mass and density. Shape description, the description of the geometric shapes for collision detection and response, also needs to be initialized. After the initialization of actors, joints can be created through a joint description, which defines the properties of the joint. Besides the basic joint types such as spherical or prismatic, PhysX also provides a generic joint called the D6joint. This encompasses all existing joints and provides more functionality allowing one to disable or enable degrees of freedom or limit the range of motion of each joint axis [27]. The PhysX engine has potential for use in real-time simulation due to its efficient solver and high stability derived from PBD methods. The controllability of PBD allows the simulation of dynamic joint attachment and detachment without error propagation. This allows erection activities to be simulated continuously. We used the .NET version of the PhysX to integrate with XNA framework.


                        Fig. 8
                         shows the architecture and the work-flow of the implemented system. At the start of the simulation, Scene initialization initializes the system, which involves the loading of resources, initialization of the physics model, and setup of the required rendering properties. After initialization, the system will start the actual simulation process. The time integration updating method is also used. At each simulated time step, PhysX will calculate the simulation result of each virtual object and check for collisions between each object by solving the multibody dynamics equations. The system then updates the information in the manipulation module, suspension module, and lifted-object module. The visualizer (XNA) will render the current simulated result to the display and proceed to the next updating loop. During each updating loop, operators can change the joint limit and apply a joint motor to the constructed joints to operate the cranes by executing scripts or by using input devices such as a keyboard or a mouse.

We use PhysX to define and simulate the three proposed modules with actors and joints. Fig. 14 shows the relationships between actors in the proposed model. There are 12 actors and 11 joints in the manipulation module of a mobile crane, four actors and three joints in the suspension module, and one or more actors and joints in the lifted-object module depending on the kind of lifting object and device used. We must define the mass, initial pose (position and orientation), and boundary shape (for collision detection) of each actor. To connect two actors, we must define the joint frame of each actor in a joint. The joint frames affect the behavior of the actors attached to this joint. They are required to be fixed relative to the perspective actor during simulation. A joint frame is represented by two axes: the localAxis and localNormol. For example, if the crane model is initially located as shown in the left part of Fig. 15, the crane body and the cabin are in the manipulation model. To define the horizontally rotatable behavior of the crane cabin, we can set the joint frame of the crane body and cabin as shown in the figure. Then we set the rotation along the localAxis as limited, and disable all five other degrees of freedom; therefore, we are able to control the rotation angle of the cabin for visualization. After the joint properties are defined, the actors of the cabin and the crane body will be connected as shown in the right part of Fig. 15.

After each module is defined, we can use joints to connect them. For a mobile crane, we use a fixed joint to connect the manipulation and suspension modules. For a tower crane, we change the joint to a prismatic joint, allowing the trolley to move along the boom. The suspension and lifted-object module are connected together by attaching the hook actor and the lifting device actor with several distance joints. If the erection task does not need a lifting device, we can directly join the hook actor and the lifting device actor. The suspension module can also connect to multiple suspension modules to visualize dual crane or multiple crane erection scenarios.

@&#EVALUATION@&#

To evaluate the feasibility of the proposed crane modeling method, we simulated a single crane erection task of a real erection task. Fig. 9
                      presents some screenshots of a lifting task using a single crane. The task was to lift up a beam weighing 2tons from a temporary storage place onto a truck for transportation, a common erection task in construction. We chose a widely used mobile crane, LTM-1040-2.1, as the basis of the crane model constructed using the proposed method. The detailed characteristics of the crane such as its weight, dimensions, and operation speeds, can be found in the document provided by Liebherr [23].


                     Fig. 9 shows screenshots of the real-life crane operation. At time=0s, the initial pose of the lifting beam is perpendicular to the crane; however, during the erection process, the slewing operation can affect the orientation of the lifting beam as seen at time=14s. That is why the truck is waiting parallel to the crane. Fig. 10
                      shows screenshots of the simulated crane operation in which the crane was controlled by the author using a game controller in real time. It can be seen that the defined crane model simulated the actual behavior successfully. By comparing the simulation results, we found that the proposed method is capable to visualize the detailed behaviors of a crane erection.

To verify the feasibility of the proposed modeling method and system, we selected an important erection activity from a real project, the Dalin Oil Refinery Project in Taiwan.

One of the major milestones in the Dalin Oil Refinery Project was the cooperative erection required to install a large component weighing 45 tons, one of the major components of the refinery. The goal of the erection was to lift the vessel-shape component and slowly transport it towards the designated location. The layout of this project is shown in Fig. 11
                        .

There were two challenges in this. The first one was the weight of the component. The vessel-shape object was too heavy to lift using a single crane and so a dual-crane cooperative operation was required. This meant that crane operators needed to work cooperatively to transport the object without any collisions with any obstacles in the surrounding environment. The second challenge was to maintain the stability (both in orientation and position) of the lifting object. Since the orientation of an object changes its centre of gravity, the shared load between the two cranes would be different. Operators needed to maintain the attitude of the lifting object to ensure that the load acting on each crane was within their respective capacity. In addition, maintaining the attitude was also critical during the installation process. All of these conditions required detailed and careful planning. A precise simulator and visualizer should prove extremely useful in such a process.

The simulated erection activity could be divided into two phases: Phase 1 involved lifting the vessel and Phase 2 involved moving the vessel to the designated location. In Phase 1, operators needed to lift the vessel up from the lying pose to the standing pose using two cranes. Phase 1 is illustrated in Fig. 12
                        . During Phase 1, the main lifting crane kept retracting its cable to pull up the top part of the vessel. The tail lifting crane lifted the bottom of the vessel and kept extending its cable, moving forward slowly in order to maintain the vertical orientation of the cable for as long as possible. The tail-lifting crane then released its connection to the vessel when the weight of the vessel was totally supported by the main lifting crane. In Phase 2, after the vessel had been lifted to the standing position, the main lifting crane lifted the vessel to the designated location by rotating its boom.

To simulate this kind of dual-crane arrangement, we built two mobile crane models (each having a manipulation module and a suspension module) and one lifted-object module. We used the LTM-1040-2.1 mobile crane as the basis of the crane model, a widely used mobile crane [23]. Fig. 13
                        
                        
                         shows the rigging stage of this cooperative erection project. The lifted-object module was connected to the suspension module of each crane. This rigging model is comprised of four actors in total: two hook actors (one from each crane), a spreader bar actor, and a vessel actor. In the main lifting section, the hook actor of the main lifting crane was joined to the spreader bar actor using two distance joints (slings), and the spreader bar actor was joined to the top of the vessel actor, where two distance joints were used to model the slings. In the tail lifting section, the hook actor of the tail-lifting crane was joined without any lifting device to the bottom of the vessel actor using two distance joints. When the vessel was lifted after Phase 1 was complete, the operator detached the two distance joints of the tail lifting section to simulate the release behavior and let the main lifting crane carry out Phase 2 of the procedure.

A real-time visualization of the erection activity was rendered using the computer system we developed, and some screenshots are shown in Fig. 16
                        . From time=0s to 360s, the frames show the cooperative crane erection process. From time=360s to 540s, the main lifting crane lifts the object to the designated location by rotating its booms. This real-time visualization was shown to five professional field engineers and crane operators associated with the Dalin Oil Refinery Project. They verified the visualization results to be satisfactory. The efficiency of the proposed method is also worth emphasizing. The possible rendering speed is approximately 40 frames per second while running on a mid-ranged personal laptop computer equipped with an Intel Core 2 Duo 2.13GHz processor with 3GB of RAM and a Geforce 7950 display card. Thus, the computational efficiency is sufficient to support real-time visualization. Crane operators and planners may use the visualization tool to virtually examine their erection plans to avoid problems at the actual site.

The main aim of this study was to develop a configurable modeling method for crane erection activities. We implemented and validated the method by simulating a critical erection for an actual project. We summarize the major contributions of this research as follows in terms of configurability, versatility, portability, and quality.
                        
                           1.
                           
                              Configurability: The proposed method divides a crane model into three configurable modules: manipulation module, suspension module, and lifted-object module. These modules are flexible and can be reassembled to simulate different kinds of cranes.


                              Versatility: The proposed method cannot only be applied for cooperative erections but also for single crane operations. It can also be used to simulate tower cranes and track cranes by changing the manipulation module. Furthermore, it can support the simulation of various lifting devices and configuration styles.


                              Portability: The proposed model can be integrated with existing physics engines that support the relevant joint constraints, such as ODE, Bullet, and Havok [34,5,15]. Some physics engines, such as PhysX, can even provide hardware acceleration to improve the computation speed. This will let future developers adopt the method for other platforms.


                              Quality: The proposed method provides realistic and real-time visualization of erection activities. The physics feedback can be computed in real-time based on user input. Crane operators can operate the crane in the virtual environment, which serves as a virtual crane training system. The physics model (consisting of actors and joints) can be modified and changed dynamically. This allows for the simulation of the entire erection cycle by dynamically attaching and detaching the lifting object and devices.

@&#CONCLUSIONS@&#

This paper presented a configurable crane model for visualizing erection activities using both single and multiple cranes. The model was defined as a multibody object with multiple actors and joints. We used PhysX to simulate and compute the defined model using position-based dynamics. A typical crane was modularized into three components: manipulation module, suspension module, and lifted-object module. In contrast to previous studies, the presented method allows developers to quickly prototype an erection activity and see a smooth, real-time visualization. Due to the modularization, this model can easily be modified to support other types of cranes and can simulate various erection scenarios with different lifting devices and objects. We also verified the feasibility of the proposed model by simulating an actual erection task using dual mobile cranes. The visualization result showed that the proposed model can generate a high quality and efficient simulation using a mid-range personal laptop computer.

@&#REFERENCES@&#

