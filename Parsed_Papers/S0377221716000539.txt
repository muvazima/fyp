@&#MAIN-TITLE@&#Optimization of preventive condition-based tamping for railway tracks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The paper considers the scheduling of railway preventive condition-based tamping maintenance.


                        
                        
                           
                           A mixed integer linear programming model was presented.


                        
                        
                           
                           The model was tested on the railway corridor between Odense and Frederica in Denmark.


                        
                        
                           
                           The model can provide realistic and economic tamping schedules.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Maintenance

Mixed Integer Linear Programming

Railway

Preventive condition-based tamping

Scheduling

@&#ABSTRACT@&#


               
               
                  This work considers the scheduling of railway preventive condition-based tamping, which is the maintenance operation performed to restore the track irregularities to ensure both safety and comfort for passengers and freight. The problem is to determine when to perform the tamping on which section for given railway tracks over a planning horizon. The objective is to minimize the Net Present Costs (NPC) considering the following technical and economic factors: 1) track quality (the standard deviation of the longitudinal level) degradation over time; 2) track quality thresholds based on train speed limits; 3) the impact of previous tamping operations on the track quality recovery; 4) track geometrical alignment; 5) tamping machine operation factors and finally 6) the discount rate.
                  In this work, a Mixed Integer Linear Programming (MILP) model is formulated and tested on data from the railway corridor between Odense and Fredericia, part of the busiest main line in Denmark. Computational experiments are carried out to compare our model to the existing models in the literature. The results show that taking into consideration these previously overlooked technical and economic factors 3, 5 and 6 can prevent under-estimation of required tamping operations, produce a more economic solution, prevent unnecessary early tamping, and improve the track quality by 2 percent.
               
            

@&#INTRODUCTION@&#

For modern railways, maintenance is critical to ensure safety, punctuality and a good overall utilization of capacity. The maintenance cost in Europe ranges from 30,000 to 100,000 Euro per kilometer railway track per year (Jimenez-Redondo et al., 2012). Appropriate planning of the railway maintenance is highly desired in order to maintain the necessary condition of the infrastructure that economic and social activities heavily rely on. However, such a task is very complex and particularly difficult to make and execute (Chu & Chen, 2012) due to the fact that a large number of factors, such as geographical factors, topographical factors, track alignment, climatic conditions, rolling stocks, maintenance budgets, track availability etc., need to be considered (Zoeteman, 2001).

One of the most important, while expensive, track maintenance operations is tamping, i.e. repair of track irregularities by correcting the standard deviation of the longitudinal level, the geometrical parameter that affects the rolling stocks and track dynamics the most, to such a level that the error in the longitudinal level does not exceed a certain threshold for safety and comfort for passengers and freight (Vale, Ribeiro, & Calcada, 2012). According to Rail Net Denmark, the infrastructure manager in Denmark, over 110 million Danish kroner (DKK) are spent on tamping-related maintenance every year (Rail Net Denmark, 2013a). Previous studies have shown that optimizing tamping activities can lead to substantial savings in maintenance costs (Grimes & Barkan, 2006; Kong & Frangopol, 2003; Macke & Higuchi, 2007; Uzarski & Mcneil, 1994; Vale & Lurdes, 2013).

It is therefore important to split the tamping procedure into corrective tamping for isolated defects and preventive tamping for Stations, Swithes and Crossings (S&C’s), and open lines, respectively, as these two types of tamping operations are planned in different ways. This paper will only focus on maintenance tamping for open lines with a view to finding the optimal tamping schedule for given railway tracks over a given planning horizon consisting of a number of periods. The railway tracks are divided into a number of sections of the same length. The track quality of each section is measured by its standard deviation of the longitudinal level and is furthermore expected to degrade over time and hence to be improved/maintained by a tamping operation. The quality improvement resulting from a tamping operation is determined by both the current quality when the tamping operation is performed and by previously performed tamping operations. The goal is to decide when to perform tamping operations on which railway sections so that the Net Present Costs (NPC), the sum of the present value of all costs, is minimized over the planning horizon. The costs include the tamping cost, the preparation cost before and after tamping, and the cost of driving the tamping machine through the track. The main goal of this paper is to propose a mathematical model to solve this problem and to apply the model on Danish railways.

In the literature, mathematical programming has been applied to obtain the optimal solution to the Preventive Maintenance Scheduling Problem (PMSP). One of the earliest studies was provided by Wagner, Giglio, and Glaser (1964). They considered a general problem of scheduling a number of given projects, each of which had a fixed duration and should be started in one of the possible starting periods, and proposed five MILP models for different optimization criteria. Higgins, Kozan, and Ferreira (1996) studied the problem of track maintenance activity scheduling and presented a model to minimize a weighted combination of expected interference delays and prioritized finishing time of activities. The computational result on an 89 kilometer track corridor in Australia showed that the model can provide a better solution, more than 7 percent in terms of objective value, than manual planning. Budai and Dekker (2004) considered the optimization of railway maintenance schedules for both routine maintenance works and one-time maintenance projects. They developed models to minimize the possession time, possession cost and maintenance cost. Oyama and Miwa (2006) presented models to maximize the total expected improvement obtained by a given number of tamping operations within a 1-year planning horizon. Another major type of maintenance problems is to find the maintenance thresholds that optimize the infrastructure conditions under budget constraints. Chu and Chen (2012) proposed a hybrid dynamic model which combines both continuous and discrete states to find the optimal thresholds for multiple maintenance actions with different effects. Khurshid et al. (2011) addressed the problem by using concepts of cost-effectiveness analysis.

The work most relevant to ours is provided by Vale et al. (2012) and Vale and Ribeiro (2014), both of which attempted to find the optimal schedule for preventive tamping maintenance. Compared to our problem, their problem has a different objective, i.e., minimizing the total number of tamped sections over a given planning horizon. In Vale et al. (2012), the deterioration rate for a given railway section, i.e., the increase of the standard deviation of the longitudinal level over one period, is assumed to be constant, whereas, in Vale and Ribeiro (2014), it varies in different periods and is simulated by Monte Carlo techniques. The rest of the problem settings are exactly the same in both works. They formulated the problem as MILP model, solved it by CPLEX and presented the results on a Portuguese Northern Railway Line.

The main contribution of this work is in extending the problem in Vale et al. (2012) by including a number of additional important practical factors. More specifically: 1) we consider a more realistic cost and minimize the overall cost, whereas (Vale et al., 2012) only minimizes the number of tamping operations; 2) we minimize the NPC, and as a result avoid unnecessary early tamping and improve the track quality at the end of the planning horizon; 3) compared with Vale et al. (2012) which only considers the linear dependency between the quality recovery and the current track quality, we estimate the tamping recovery based on both the current track quality and the impact of previous tamping operations, which has been proven relevant (Caetano & Teixeira, 2014; Chang, Liu, & Li, 2010; Esveld, 2001; Ferreira & Murray, 1997; Quiroga & Schnieder, 2012; UIC, 2008; Veit, 2006; Zoeteman, 2001, 2006) and leads to a more realistic estimation. We have formulated the problem as a Mixed Integer Linear Programming (MILP) model and carried out intensive computational experiments on the data from one of the busiest railway corridors in Denmark, the corridor linking Odense and Fredericia (Od–Fa).

The remainder of this paper consists of a detailed description of the problem (Section 2), the MILP model (Section 3), the computational results (Section 4) and a conclusion (Section 5).

The problem of consideration is an optimization of preventive condition-based tamping maintenance for a given railway track over a planning horizon consisting of a number of periods. The railway tracks are discretized into a number of consecutive sections of the same length. In tamping practice, the tamping machine travels on top of the railway track from one end (the first section) to the other (the last section) and applies tamping operation on the sections if necessary, when it passes through the sections. The track quality (TQ) of each section is measured by its standard deviation of the longitudinal level and is furthermore expected to degrade over time and hence improved/maintained by a tamping operation. The degradation is assumed to be a linear function of time, which is the same as in Vale et al. (2012), and not allowed to exceed a certain threshold limit. The initial quality, degradation rate and threshold value of each section are assumed to be known. Finally, there is the tamping recovery, i.e. the improvement in quality depending on a set of different factors. Firstly, there is a linear relationship between the quality recovery and the quality before tamping. The International Union of Railways (UIC
                        1
                     
                     
                        1
                        UIC: Union Internationale des Chemins de fer in French.
                     ) denotes that if the current standard deviation of the longitudinal level before tamping is σ, the tamping recovery can be no more than

                        
                           (1)
                           
                              
                                 θ
                                 (
                                 σ
                                 )
                                 =
                                 a
                                 ·
                                 σ
                                 +
                                 b
                              
                           
                        
                     where a and b are given parameters and θ(σ) is the quality-dependent recovery upper bound. Secondly, the recovery is also dependent on the previous tamping operations because tamping itself may crash the ballast, which is the main factor of track stability as shown in many previous studies (Caetano & Teixeira, 2014; Chang et al., 2010; Esveld, 2001; Ferreira & Murray, 1997; Quiroga & Schnieder, 2012; UIC, 2008; Veit, 2006; Zoeteman, 2001, 2006). Therefore, the resultant quality of the present tamping can never be better than the resultant quality of the previous tamping. We name the maximum recovery bounded by the previous tamping as previous-tamping-dependent recovery upper bound. The tamping recovery is set to the smaller value of the two above-mentioned upper bounds.

To illustrate how the quality recovery is calculated, an example is given in Table 1
                     . In this example, we assume that the initial TQ (σ
                     0) is 0.4, the degradation rate is 0.2 for each period, the linear dependency parameters a and b in Eq. (1) are 0.6 and 
                        −
                     0.2, respectively, and a tamping operation is performed in the periods 3 and 4. At the end of period 3, the TQ can be recovered by a standard deviation (
                        
                           
                              θ
                              3
                              Q
                           
                           =
                           0.4
                        
                     ) according to quality-dependent-recovery in Eq. (1). The resultant standard deviation after tamping (σ
                     3) equals 0.6, which then becomes a lower bound for the future tamping operations, i.e., 
                        σi
                        
                      = 0.6 for i ≥ 4. In period 4, although the quality dependent recovery (
                        
                           θ
                           4
                           Q
                        
                     ) may reduce the standard deviation by 0.28 according to Eq. (1), the actual recovery can only yield an improvement of standard deviation by 0.2 due to the bound given by the previous tamping in period 3.


                     Fig. 1
                      illustrates how the track quality changes from periods 0 to 6. The x-axis and y-axis correspond to the time period and the standard deviation of the longitudinal level (σi
                     ), respectively. The curves depict the track quality with and without the previous-tamping-dependent recovery upper bound (
                        
                           θ
                           i
                           T
                        
                     ). It can be seen that taking into consideration the upper bound 
                        
                           θ
                           i
                           T
                        
                      can prevent over-estimation of the tamping recovery and can consequently prevent under-estimation of the total tamping cost.

Furthermore, trace alignment, known as track horizontal layout, can influence the tamping schedule. It is caused by a transition curve which is a mathematically calculated curve with gradually raised radii on railway tracks. Due to the way a tamping machine is operating, it is forbidden to start/stop in a transition curve according to operation rules mentioned in Rail Net Denmark (2013b); UIC (2008) and Vale et al. (2012). If a track section to be tamped ends inside a transition curve, the tamping operations should be extended to the next section(s), which end(s) outside a transition curve. An example is illustrated in Fig. 2
                     , in which Section 1 starts with a straight line and ends inside a transition curve and Section 2 starts from a transition curve and ends inside a curve with constant radius. If Section 1 requires a tamping operation, the tamping operation should be extended to Section 2, and vice versa. As a result, these two sections should always be tamped together. We refer to such sections as transition alignment.

During the planning of tamping operations we make decisions on when to tamp which section with the objective of minimizing the NPC over the planning horizon. The total cost consists of three components: a fixed cost of driving the tamping machine through the entire railway track if any section is tamped in that period; a unit tamping cost for each section; a unit cost of machine preparation for each tamping operated on a single section or consecutive sections to account for the warming up and ramping down of tamping machines. The fixed cost, the unit tamping cost and the unit preparation cost as well as the period discount rate are given.

Let 
                        
                           N
                           =
                           {
                           1
                           ,
                           …
                           ,
                           n
                           }
                        
                      denote the set of railway track sections and 
                        
                           T
                           =
                           {
                           1
                           ,
                           …
                           ,
                           m
                           }
                        
                      the set of time periods. For each section i ∈ N, let I(i) ⊆ N denote the transition alignment that i belongs to. If neither of the two ending points of section i lies in a transition curve, 
                        
                           I
                           (
                           i
                           )
                           =
                           {
                           i
                           }
                        
                     . Let parameter li, di
                      and ei
                      denote the initial longitudinal deviation, the degradation rate, and the threshold value for section i. The fixed cost, unit tamping cost and unit preparation cost are denoted by parameter f, c and k. The discount rate is denoted as parameter rT. Let parameter oi
                      be the initial value for minimal longitudinal deviation that can be achieved by tamping i at period 0. Let M be a sufficiently large number used in the big-M constraints. Without loss of generality, we assume tamping takes place at the end of each period.

Let binary variable 
                        
                           x
                           i
                           t
                        
                      equal 1 if section i ∈ N is tamped in time period t ∈ T and 0 otherwise, binary variable zt
                      equal 1 if any tamping takes place in period t ∈ T and 0 otherwise, and binary variable 
                        
                           y
                           i
                           t
                        
                      equal 1 if the tamping machine needs to be prepared when tamping section i ∈ N in period t ∈ T and 0 otherwise.

Let variable 
                        
                           σ
                           i
                           t
                        
                      be the standard deviation of the longitudinal level of section i ∈ N at the end of period t ∈ T. It should be noted that, if section i is tamped in period t, 
                        
                           σ
                           i
                           t
                        
                      refers to the longitudinal deviation after tamping. Let variable 
                        
                           σ
                           i
                           0
                        
                      be the standard deviation of the longitudinal level at period 0 and is initialized by parameter li
                     . Let variable 
                        
                           w
                           i
                           t
                        
                      be the tamping quality recovery of section i ∈ N in period t ∈ T, which should take the smaller value of the quality-dependent recovery upper bound (denoted by variable 
                        
                           r
                           i
                           t
                        
                      ) and the preceding-tamping-dependent recovery upper bound (denoted by variable 
                        
                           s
                           i
                           t
                        
                     ). To formulate this relation by linear constraints, we introduce an auxiliary binary variable 
                        
                           v
                           i
                           t
                        
                      (i ∈ N, t ∈ T), which equals 1 if 
                        
                           
                              s
                              i
                              t
                           
                           >
                           
                              r
                              i
                              t
                           
                        
                      and 0 if 
                        
                           
                              s
                              i
                              t
                           
                           <
                           
                              r
                              i
                              t
                           
                        
                     .

The value of 
                        
                           r
                           i
                           t
                        
                      (i ∈ N, t ∈ T) depends on the linear dependency function (1) and equals 
                        
                           max
                           {
                           0
                           ,
                           a
                           
                              (
                              
                                 σ
                                 i
                                 
                                    t
                                    −
                                    1
                                 
                              
                              +
                              
                                 d
                                 i
                              
                              )
                           
                           +
                           b
                           }
                        
                      since it makes no sense to have a negative value for the recovery. To formulate it as linear constraints, we introduce an auxiliary binary variable 
                        
                           
                              q
                              i
                              t
                           
                           ,
                        
                      which equals 1 if 
                        
                           a
                           (
                           
                              σ
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           +
                           
                              d
                              i
                           
                           )
                           +
                           b
                           >
                           0
                        
                      and 0 if 
                        
                           a
                           (
                           
                              σ
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           +
                           
                              d
                              i
                           
                           )
                           +
                           b
                           <
                           0
                        
                     .

Let variable 
                        
                           u
                           i
                           t
                        
                      be the minimal longitudinal deviation that can be achieved by tamping i ∈ N in period t ∈ T, which equals to the resultant deviation of the previous tamping. Let variable 
                        
                           u
                           i
                           0
                        
                      be initial value for minimal longitudinal deviation for period 0, which is initialized by parameter oi
                     .

The mixed integer linear programming formulation of the preventive condition-based tamping scheduling problem is presented as follows.


                     Minimal Cost Model (MCM):

                        
                           (2)
                           
                              
                                 
                                    
                                       
                                          min
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                T
                                             
                                          
                                          
                                             [
                                             
                                                (
                                                
                                                   ∑
                                                   
                                                      i
                                                      ∈
                                                      N
                                                   
                                                
                                                
                                                   c
                                                   ·
                                                   
                                                      x
                                                      i
                                                      t
                                                   
                                                
                                                +
                                                
                                                   ∑
                                                   
                                                      i
                                                      ∈
                                                      N
                                                   
                                                
                                                
                                                   k
                                                   ·
                                                   
                                                      y
                                                      i
                                                      t
                                                   
                                                
                                                +
                                                f
                                                ·
                                                
                                                   z
                                                   t
                                                
                                                )
                                             
                                             ·
                                             
                                                
                                                   (
                                                   
                                                      1
                                                      
                                                         1
                                                         +
                                                         r
                                                         T
                                                      
                                                   
                                                   )
                                                
                                                t
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     subject to

                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          
                                             y
                                             1
                                             t
                                          
                                          ≥
                                          
                                             x
                                             1
                                             t
                                          
                                          
                                          ∀
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             y
                                             i
                                             t
                                          
                                          ≥
                                          
                                             x
                                             i
                                             t
                                          
                                          −
                                          
                                             x
                                             
                                                i
                                                −
                                                1
                                             
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                          ,
                                          
                                             i
                                             ≥
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             i
                                             t
                                          
                                          ≤
                                          
                                          
                                             z
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                x
                                                l
                                                t
                                             
                                             ≥
                                             
                                                x
                                                i
                                                t
                                             
                                          
                                          
                                          
                                             ∀
                                             i
                                             ∈
                                             N
                                             ,
                                             
                                             
                                             l
                                             ∈
                                             I
                                             (
                                             i
                                             )
                                             ,
                                             t
                                             ∈
                                             T
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             σ
                                             i
                                             0
                                          
                                          =
                                          
                                             l
                                             i
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             σ
                                             i
                                             
                                                t
                                                −
                                                1
                                             
                                          
                                          +
                                          
                                             d
                                             i
                                          
                                          ≤
                                          
                                             e
                                             i
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             σ
                                             i
                                             t
                                          
                                          =
                                          
                                             σ
                                             i
                                             
                                                t
                                                −
                                                1
                                             
                                          
                                          +
                                          
                                             d
                                             i
                                          
                                          −
                                          
                                             w
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             w
                                             i
                                             t
                                          
                                          ≤
                                          M
                                          ·
                                          
                                             x
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             s
                                             i
                                             t
                                          
                                          −
                                          M
                                          ·
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                i
                                                t
                                             
                                             )
                                          
                                          −
                                          M
                                          ·
                                          
                                             v
                                             i
                                             t
                                          
                                          ≤
                                          
                                             w
                                             i
                                             t
                                          
                                          ≤
                                          
                                             s
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             r
                                             i
                                             t
                                          
                                          −
                                          M
                                          ·
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                i
                                                t
                                             
                                             )
                                          
                                          −
                                          M
                                          ·
                                          
                                             
                                                (
                                                1
                                                −
                                                v
                                             
                                             i
                                             t
                                          
                                          
                                             )
                                             ≤
                                          
                                          
                                             w
                                             i
                                             t
                                          
                                          ≤
                                          
                                             r
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    
                                    
                                       
                                          M
                                          ·
                                          
                                             
                                                (
                                                v
                                             
                                             i
                                             t
                                          
                                          
                                             −
                                             1
                                             )
                                             ≤
                                          
                                          
                                             s
                                             i
                                             t
                                          
                                          −
                                          
                                             r
                                             i
                                             t
                                          
                                          
                                          ≤
                                          
                                             
                                                M
                                                ·
                                                v
                                             
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    
                                    
                                       
                                          M
                                          ·
                                          
                                             (
                                             
                                                q
                                                i
                                                t
                                             
                                             −
                                             1
                                             )
                                          
                                          ≤
                                          a
                                          
                                             (
                                             
                                                σ
                                                i
                                                
                                                   t
                                                   −
                                                   1
                                                
                                             
                                             +
                                             
                                                d
                                                i
                                             
                                             )
                                          
                                          +
                                          b
                                          ≤
                                          M
                                          ·
                                          
                                             q
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (15)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             r
                                             i
                                             t
                                          
                                          ≤
                                          M
                                          ·
                                          
                                             q
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (16)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             r
                                             i
                                             t
                                          
                                          ≥
                                          a
                                          
                                             (
                                             
                                                σ
                                                i
                                                
                                                   t
                                                   −
                                                   1
                                                
                                             
                                             +
                                             
                                                d
                                                i
                                             
                                             )
                                          
                                          +
                                          b
                                          −
                                          M
                                          ·
                                          
                                             (
                                             1
                                             −
                                             
                                                q
                                                i
                                                t
                                             
                                             )
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (17)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             r
                                             i
                                             t
                                          
                                          ≤
                                          a
                                          
                                             (
                                             
                                                σ
                                                i
                                                
                                                   t
                                                   −
                                                   1
                                                
                                             
                                             +
                                             
                                                d
                                                i
                                             
                                             )
                                          
                                          +
                                          b
                                          +
                                          M
                                          ·
                                          
                                             (
                                             1
                                             −
                                             
                                                q
                                                i
                                                t
                                             
                                             )
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (18)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             s
                                             i
                                             t
                                          
                                          =
                                          
                                             σ
                                             i
                                             
                                                t
                                                −
                                                1
                                             
                                          
                                          +
                                          
                                             d
                                             i
                                          
                                          −
                                          
                                             u
                                             i
                                             t
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (19)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             u
                                             i
                                             0
                                          
                                          =
                                          
                                             o
                                             i
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (20)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                
                                                   u
                                                   i
                                                   
                                                      t
                                                      −
                                                      1
                                                   
                                                
                                                −
                                                M
                                                ·
                                                
                                                   x
                                                   i
                                                   
                                                      t
                                                      −
                                                      1
                                                   
                                                
                                                ≤
                                                u
                                             
                                             i
                                             t
                                          
                                          ≤
                                          
                                             u
                                             i
                                             
                                                t
                                                −
                                                1
                                             
                                          
                                          +
                                          M
                                          ·
                                          
                                             x
                                             i
                                             
                                                t
                                                −
                                                1
                                             
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (21)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             u
                                             i
                                             t
                                          
                                          ≥
                                          
                                             σ
                                             i
                                             
                                                t
                                                −
                                                1
                                             
                                          
                                          −
                                          M
                                          ·
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                i
                                                
                                                   t
                                                   −
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (22)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             u
                                             i
                                             t
                                          
                                          ≤
                                          
                                             σ
                                             i
                                             
                                                t
                                                −
                                                1
                                             
                                          
                                          +
                                          M
                                          ·
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                i
                                                
                                                   t
                                                   −
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (23)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             i
                                             t
                                          
                                          ,
                                          
                                             y
                                             i
                                             t
                                          
                                          ,
                                          
                                             z
                                             t
                                          
                                          ,
                                          
                                             q
                                             i
                                             t
                                          
                                          ,
                                          
                                             v
                                             i
                                             t
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (24)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             σ
                                             i
                                             t
                                          
                                          ,
                                          
                                             w
                                             i
                                             t
                                          
                                          ,
                                          
                                             r
                                             i
                                             t
                                          
                                          ,
                                          
                                             u
                                             i
                                             t
                                          
                                          ,
                                          
                                             s
                                             i
                                             t
                                          
                                          ≥
                                          0
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                          ,
                                          
                                          
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (25)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                z
                                                t
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                          
                                          
                                          
                                             ∀
                                             i
                                             ∈
                                             N
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

The objective function (2) minimizes the NPC over the entire planning horizon. Constraints (3) and (4) define the relationship between the y-variables and the x-variables. There are two cases where the tamping machine should be prepared, 1) if the first section requires tamping, the machine should be warmed up at Section 1 by constraint (3), and 2) if section 
                        
                           i
                           −
                           1
                        
                      does not require tamping but section i does, the machine should be warmed up at section i by constraint (4). Constraints (5) set zt
                      to 1 if tamping takes place at any section in period zt
                     . Constraints (6) make sure that tamping begins and ends outside transition curves. If 
                        
                           
                              x
                              i
                              t
                           
                           =
                           1
                           ,
                        
                      then 
                        
                           
                              ∑
                              
                                 l
                                 ∈
                                 I
                                 (
                                 i
                                 )
                              
                           
                           
                              x
                              l
                              t
                           
                           ≥
                           
                              |
                              I
                              
                                 (
                                 i
                                 )
                              
                              |
                           
                        
                      will force all the sections in I(i) to be tamped.

Constraints (7–9) keep track of the track quality at each section in each period. Constraints (7) initialize the longitudinal deviations and Constraints (8) enforce the bound values. Constraints (9) set the quality of section i at the end of period t ≥ 1 (
                        
                           σ
                           i
                           t
                        
                     ) based on the quality at the end of the previous period (
                        
                           σ
                           i
                           
                              t
                              −
                              1
                           
                        
                     ), the degradation within one period (di
                     ), and the tamping quality recovery (
                        
                           w
                           i
                           t
                        
                     ).

Constraints (10–13) determine the value of the quality recovery (
                        
                           w
                           i
                           t
                        
                     ). If section i is not tamped in period t, i.e. 
                        
                           
                              x
                              i
                              t
                           
                           =
                           0
                        
                      , 
                        
                           w
                           i
                           t
                        
                      is set to 0 by Constraints (10). Otherwise, 
                        
                           w
                           i
                           t
                        
                      is set to the smaller value of 
                        
                           r
                           i
                           t
                        
                      and 
                        
                           s
                           i
                           t
                        
                      by Constraints (11) and (12). If 
                        
                           
                              s
                              i
                              t
                           
                           <
                           
                              r
                              i
                              t
                           
                           ,
                        
                      then 
                        
                           v
                           i
                           t
                        
                      is set to 0 by Constraints (13) and 
                        
                           w
                           i
                           t
                        
                      to 
                        
                           s
                           i
                           t
                        
                      by Constraints (11). If 
                        
                           
                              s
                              i
                              t
                           
                           >
                           
                              r
                              i
                              t
                           
                           ,
                        
                      then 
                        
                           v
                           i
                           t
                        
                      is set to 1 by Constraints (13) and 
                        
                           w
                           i
                           t
                        
                      to 
                        
                           r
                           i
                           t
                        
                      by Constraints (12).

Constraints (14–17) determine the value of the quality-dependent recovery upper bound (
                        
                           r
                           i
                           t
                        
                     ). If 
                        
                           a
                           (
                           
                              σ
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           +
                           
                              d
                              i
                           
                           )
                           +
                           b
                           >
                           0
                           ,
                        
                      then 
                        
                           q
                           i
                           t
                        
                      is set to 1 by Constraints (14) and 
                        
                           r
                           i
                           t
                        
                      to 
                        
                           a
                           (
                           
                              σ
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           +
                           
                              d
                              i
                           
                           )
                           +
                           b
                        
                      by Constraints (16) and (17). If 
                        
                           a
                           (
                           
                              s
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           +
                           
                              d
                              i
                           
                           )
                           +
                           b
                           <
                           0
                           ,
                        
                      then 
                        
                           q
                           i
                           t
                        
                      is set to 0 by Constraints (14) and 
                        
                           r
                           i
                           t
                        
                      to 0 by Constraints (15).

Constraints (18) set the value of the preceding-tamping-dependent recovery upper bound (
                        
                           s
                           i
                           t
                        
                     ) to the difference between the quality before tamping (
                        
                           
                              σ
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           +
                           
                              d
                              i
                           
                        
                     ) and the minimal longitudinal deviation (
                        
                           u
                           i
                           t
                        
                     ) that can be achieved . Constraints (19) initialize the value of 
                        
                           u
                           i
                           t
                        
                      for section i in period t. Constraints (20–22) determine the value of 
                        
                           u
                           i
                           t
                        
                      based on 
                        
                           u
                           i
                           
                              t
                              −
                              1
                           
                        
                      and 
                        
                           x
                           i
                           
                              t
                              −
                              1
                           
                        
                     . If 
                        
                           
                              x
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           =
                           0
                           ,
                        
                     
                     
                        
                           u
                           i
                           t
                        
                      is set to 
                        
                           u
                           i
                           
                              t
                              −
                              1
                           
                        
                      by Constraints (20). Otherwise, it is set to 
                        
                           
                              σ
                              i
                              
                                 t
                                 −
                                 1
                              
                           
                           ,
                        
                      the resultant longitudinal deviation of the tamping in period 
                        
                           t
                           −
                           1
                        
                     .

Finally, all variables are defined by Constraints (23–25).

The model in Vale et al. (2012) only minimizes the total number of tamping operations and does not consider the impact of previous tamping on the quality recovery. It is equivalent to:


                        Minimal Tamping Model (MTM):

                           
                              (26)
                              
                                 
                                    
                                       
                                       
                                          
                                             min
                                             
                                                ∑
                                                
                                                   t
                                                   ∈
                                                   T
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                x
                                                i
                                                t
                                             
                                          
                                       
                                       
                                    
                                    
                                       
                                       
                                          
                                             subject
                                             
                                             to
                                          
                                       
                                       
                                          
                                       
                                    
                                 
                              
                           
                        
                     

constraints (6–10,12,14–17,23–24).

Our MCM model extends MTM in a few ways. Firstly, our model considers the impact of the previous tamping on the quality recovery as reflected by constraints (11,13,18–22). We call these constraints New Recovery Constraints (NRC). The absence of NRC may lead to over-estimation of the quality recovery. In an extreme case, the quality could be improved by tamping continuously until the longitudinal level deviation is reduced to zero. This can never be true in reality. Therefore, these constraints should therefore be included in the model.

The second extension is to minimize the total cost instead of the total number of tamping operations as formulated by constraints (3–5). These constraints more closely represent the real-life overall cost because the number of tamping operations only relates to tamping cost, which corresponds to one of the cost components. The cost of tamping one section in every period over a ten-period planning horizon is different from the cost of tamping ten consecutive sections in one period.

The last extension is the inclusion of NPC in the objective function (2), indicating, for example, that a tamping at later time period becomes cheaper than the current. This is a practical consideration and helps to avoid unnecessary early tamping and improve the quality at the end of the planning horizon.

The importance of these extensions and their impact on the maintenance schedule will be shown through computational experiments in Section 4.

The proposed model is tested on the real-life data provided by Rail Net Denmark (Banedanmark in Danish), the national railway infrastructure manager in Denmark. MILP models are solved by CPLEX version 12.6.0.0. Section 4.1 describes the case study and the included data, and Section 4.2 presents the computational results on different models and the sensitivity analysis.

The case study revolves around a Danish railway corridor linking Odense and Fredericia (Od–Fa) with a length of 57.2 kilometer (including 14.6 kilometer of stations and 42.6 kilometer of open tracks) as shown in Fig. 3
                        . It is one part of the busiest main line linking the four biggest cities, Copenhagen, Odense, Aarhus and Aalborg in Denmark. It is comprised of both national (Copenhagen–Aalborg) travelers and international (Nordic countries–Central Europe) passengers and freight. The track system consists of one type of rails (UIC60
                           2
                        
                        
                           2
                           UIC60: It is a standard rail profile defined in European Standard EN-13674.
                        , five types of sleepers and two sub-layer structures. It is a simple double-track structure and is well documented both on infrastructure layout, traffic, geometric quality surveys, and maintenance records. Only the right track is included in the experiment. The corridor is divided into 220 consecutive track sections in total, each with a length of 200 meters. The planning horizon consists of fourteen 90-day periods.

In Denmark, the longitudinal geometry of the railway track is measured by a monitoring vehicle four times every year on the main lines for safety reasons. The measurement data collected from 2007/03/19 to 2012/11/26 are used to generate the test instances for this study. The linear degradation of each section is obtained using the linear regression. Ten instances were generated in total, all of which have the same quality threshold parameters, transition alignments parameters and track degradation parameters. The only difference lies in the initial quality parameters. The initial quality of each instance is taken from a random historical measurement.

The track quality of each section on November 26, 2012 as well as the threshold values defined in Rail Standard BN1-38-4 (2011) are depicted in Fig. 4
                        . The variations in the track quality threshold values of different sections are from the result of different speed classes of rolling stock. In practice, a track quality slightly higher than the preventive threshold does not endanger the passenger safety, but indicates that a tamping has to be scheduled for the next period (Rail Net Denmark, 2013b). Thus, MCM treats these threshold values as hard constraints which ultimately are therefore not allowed to be exceeded. It can be seen from the figure that the track quality is good due to the prioritized maintenance/renewals in the past.

The track alignments example are denoted in Fig. 5
                        , which only includes the track sections between Odense station and Holmstrup station, approximately a 6 kilometer stretch. The horizontal alignment is shown by the solid line indicating the straight stretches, the transition curves and the curves. The separate dots denote the section edges. The dashed frames highlight the sections linked by transition curves, indicating that ‘bundling’ tamping should be implemented. The track degradation of each section is derived from the data collected in the period from August 2008 to November 2012. The parameters a and b from (1) are set to 0.63 and 
                           −
                        0.23, according to the Office for Research and Experiments (ORE) 1988 of UIC (Esveld, 2001) and the Danish tamping improvement project (de Saint-Aubain, Kulahci, Ersbll, & Spliid, 2012).

Tamping costs are also provided by Rail Net Denmark. They are measured by time (in minutes): It takes 12 minutes to tamp a section, 20 minutes to warm up and ramp down the machine, and approximately half a minute (25 kilometer/hour) to drive through a section without tamping.

@&#RESULTS@&#

To investigate the impact of the different extensions introduced in MCM, different models were tested and the produced results compared. The tested model runs include: 1) MTM, 2) MTM with NRC constraints (MTM+NRC), 3) MCM without interest rate (MCM-INT), i.e., 
                           
                              r
                              T
                              =
                              0
                           
                         in MCM, 4) MCM without NRC (MCM-NRC), and 5) the MCM.

For each model run, the number of tamping operations (#Tamp), the number of machine preparations (#prep), the total tamping cost (Ct
                        ), the total fixed cost (Cd
                        ), the total machine preparation cost (Cp
                        ), and the total cost (Ctot
                        ) are presented in Table 2
                        . For MCM and MCM-NRC, the NPC is also presented. As different models have different objective functions, the objective values are indicated by ‘OBJ’ in the table. The average value of each column is given in the bottom row.

The effect of NRC on the MTM model is analyzed by comparing the results of two model runs, namely the base case MTM and MTM+NRC. Fig. 6
                            depicts the total number of tamping operations given by the two models for all data instances. As can be seen, without the realistic correction in the quality recovery in the NRC, the total number of tamping operations may be under-estimated by up to 3. To illustrate this further, Fig. 7
                            presents a fixed example depicted through section 196 in data Instance 10. The longitudinal level deviation of the section at the end of each period (
                              
                                 σ
                                 
                                    196
                                 
                                 t
                              
                           ) given by both models are shown. Without the NRC, the quality recovery is over estimated, which leads to an under-estimated number of required tamping operations. Similar effects on the MCM model can be observed by comparing the results of MCM-NRC and MCM. Without NRC, the objective value, i.e. the total maintenance cost NPC, is under-estimated by up to 10 percent and on average 4 percent (Fig. 8
                           ).

The comparison between the objective of minimizing the total maintenance cost and the objective of minimizing the total number of tamping operations is given by the results of MTM+NRC and MCM-INT. In both models, the new recovery constraints are considered and the interest rate is ignored. Figs. 9
                            and 10
                            depict the tamping schedules provided by both models for data Instance 1. Most of the tamping operations are applied on discrete individual sections by MTM+NRC and on grouped consecutive sections by MCM-INT. Consequently, MCM-INT minimizes not only the tamping cost but also the machine preparation cost and driving cost, which account for half of the total cost (Table 2). Clustering the tamping operations leads to a reduced preparation cost and potentially a lower total cost. As shown in Table 2, the average number of performed tamping operations over ten data instances is 105 for MTM+NRC and 123 for MCM-INT. However, the actual maintenance cost of the schedule provided by the MTM+NRC is 59 percent more than that of the MCM-INT. This shows the importance of using minimization of the total costs as the objective function.

The effect of minimizing the NPC can be seen by comparing the results of MCM-INT and MCM. As the periodical discount rate (
                              
                                 r
                                 T
                                 =
                                 
                                    
                                       (
                                       1
                                       +
                                       r
                                       )
                                    
                                    4
                                 
                                 −
                                 1
                                 ≈
                                 1.22
                                 
                                 percent
                              
                           ), calculated based on the yearly interest rate (r = 5 percent), is a small number, the number of tamping operations and the number of preparations will not be affected by it. However, since the Present Cost (PC) of the same tamping cost is lower in a later period, the MCM will try to avoid unnecessary early tamping operations. The tamping schedules provided by MCM for data Instance 1 is illustrated in Fig. 11
                           . Compared to the schedule provided by MCM-INT in Fig. 10, the schedule given by MCM pushes tamping operations to the latest possible time period before the standard deviation of the longitudinal level reaches the thresholds. For instance, the bundling tamping for Sections 3 and4 has been scheduled to Day 360 in the MCM solution instead of Day 90 in the MCM-INT solution. Due to Eq. (1), avoiding unnecessarily early tamping can possibly lead to a better track quality at the end of the planning horizon of 14 quarters. Fig. 12
                            shows the average ending quality over all sections by both models on each data instance. The ending quality has been improved by 2 percent on average by minimizing the NPC.

To show the sensitivity of the solution to the machine preparation cost, the MCM model is tested on data Instance 1 with different input values of the machine preparation cost, ranging from 0 minute to 40 minutes. The results are given in Figs. 13
                            and14
                           . As can be seen from Fig. 13, when the unit preparation cost increases, the number of tamping preparations reduces in order to reduce the total preparation cost. Intuitively, there are two ways to reduce the number of preparations. The first way is to group the existing tamping operations, e.g., tamping two consecutive sections in one period instead of tamping the two sections separately in two periods. This is what happens when the preparation cost is increased from 0 minute to 1 minute. The second way is to tamp all the sections lying between the two sections that should be tamped at the cost of increased number of tamping operations. This is what happens when the preparation cost changes from 11 to 12 minutes, 23 to 24 minutes and 35 to 36 minutes. Fig. 15
                            illustrates the costs of two plans when the preparation cost is 12 minutes. Plan TTT (Tamping-Tamping-Tamping) is cheaper than TDT (Tamping-Driving-Tamping) even though it requires one more tamping operation. Fig. 14 depicts how the different cost components and the total cost change as the preparation cost increases. The total cost increases almost linearly as the preparation cost increases.

@&#CONCLUSION@&#

This paper addresses the scheduling of preventive conditional-based tamping maintenance, which is applied on the railway tracks to correct the standard deviation of the longitudinal level for safety and comfort of passengers and freight. The objective of this work is to find the least-cost tamping plan for given railway tracks over a planning horizon (i.e. three to four years). Compared to the existing models in the literature, a number of practical issues are considered, including extra practical cost components (preparation cost and driving cost), the time value for costs (through NPC) and a more realistic estimation of the tamping recovery.

As a result hereof a mixed integer programming formulation for this problem has been presented and tested on real-life data collected from the Danish railway corridor between Odense and Frederica. Specifically five various model runs have been depicted and investigated bench marked to currently existing models from literature. Therein computational results show that it is important to consider extra cost components as they account for half of the total cost. The schedule obtained by minimizing the number of tamping operations is in fact 59 percent more expensive than the schedule given by minimizing the total cost. It is also shown that without the extra constraints on the tamping recovery, the total cost is under estimated by up to 10 percent. By minimizing the NPC, unnecessary early tamping operations are avoided and the final track quality at the end of the planning horizon is improved by 2 percent on average without extra cost.

This work can be extended in several directions in the future. Firstly, a heuristic or meta-heuristic algorithm that can provide fast quality solution to a large-scale track network could be included if the network should be extended further. Secondly, a more comprehensive forecast on the track degradation instead of the linear function used in this work can be investigated and integrated in the planning. Thirdly, extra decisions on track renewals can be introduced to provide a more economic overall solution. This is not a trivial task due to the high complexity of the combined renewal and tamping scheduling.

@&#ACKNOWLEDGMENTS@&#

The present work has been funded by the Danish Rail Sector Association (Banebranchen in Danish). The authors are grateful to Rail Net Denmark (Banedanmark in Danish) for providing supports and real data. The authors also thank the anonymous referees for the valuable comments that contributed to improve the quality of the paper.

@&#REFERENCES@&#

