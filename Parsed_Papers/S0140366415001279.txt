@&#MAIN-TITLE@&#Facilitating medication adherence in elderly care using ubiquitous sensors and mobile social networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A socialized prompting system improves medication adherence of elders.


                        
                        
                           
                           Ubiquitous sensors benefit the seamless monitoring of medication intake behaviors.


                        
                        
                           
                           The mobile social networks contribute to social prompting in a community.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Medication adherence

Ubiquitous sensors

Mobile social network

Elderly care

@&#ABSTRACT@&#


               
               
                  Poor medication adherence is a prevalent medical problem resulting in significant morbidity and mortality, especially for elder adults. In this paper, we propose a Socialized Prompting System (SPS), which combines ubiquitous sensors in the smart home and mobile social networks to improve medication adherence. Ubiquitous sensors benefit the seamless monitoring of medication intake behaviors, while the mobile social networks contribute to social prompting in a community. The mechanisms of medication monitoring with ubiquitous sensors and the collaborative prompting based on mobile social network are presented. The experimental results showed that the medication adherence of the testing subjects has been improved by using the proposed system.
               
            

@&#INTRODUCTION@&#

Older adults are often accompanied with an increasing number of health problems and suffer from two or more co-occurring diseases. Therefore, multiple medication intake is common for older adults and may ameliorate symptoms, improve and extend quality of life, and occasionally cure disease [1]. Unfortunately, it is reported that more than 50% of older adults have difficulties adhering to medication regimens due to many factors, such as complex medication regimens, disease severity, and cognitive impairment [2,3]. Poor adherence is also a major risk factor for adverse drug events and other adverse health outcomes. For instance, medication-related harm in the United Kingdom is 6.5% of patients admitted to hospital and 9% of inpatients reportedly experience drug-related harm [4]. It is believed that 3–6% of all hospital admissions result from adverse drug reactions [5]. Therefore, the medication adherence is a great challenge for the health of older adults.

Medication adherence refers to the extent to which a patient follows medication prescriptions [6]. In the past decade, a number of studies have been conducted to improve the medication adherence for the elderly ranging from the electronic pillboxes [7,8] to medication monitoring systems with multi-media prompting services [9–11]. MedTracker, a portable electronic pillbox, provides real-time monitoring of medication adherence [7]. However, for MedTracker, the detection of medication intake depends on the opening of lids, which cannot determine whether the medication is taken according to the prescription (e.g. overdose, time delay). The container does not know which pills are in it, when they should be taken, or when they have been taken. Fishkin and Wang [9] propose a flexible, low-overhead medication monitoring system based on Radio Frequency Identification tags (RFIDs). It detects medicine status and provides a user interface to present medication information. Prompting services are introduced as well to remind the elders to take the medicine timely with text, video, audio and image-based information [10,11]. MHS [10] is built to improve medication adherence for the elderly people through automatic medication monitoring and context-aware prompting. However it is mainly designed for individual elders in a smart home without social interaction. MoviPill [11] is a mobile phone-based game that persuades patients to be adherent to their medication prescription by means of social competition. Although the status of medication intake was shared within the group, social prompting is not implemented to remind the patients.

Social factors are important in the design of healthcare services, which can make the services more user-friendly and acceptable. It is verified that frequent human communication as reminder systems are more likely to improve adherence than nonhuman reminders [3]. Research in aging and cognition has shown that social communication contributes to maintaining the cognitive performance and healthy mood in the elderly [12]. Furthermore, social participation benefits the enhancement of elders’ health. For instance, lack of social participation increases the risk of Alzheimer’s (AD) disease-like dementia [13]. The social activities (or social interaction) are demonstrated to be useful to enhance core mental capacities [14].

In this paper, we aim to facilitate the medication adherence by combining ubiquitous sensors and mobile social networking. The work rooted in our previous work about MHS [10], a multimedia system to monitor the medication activities for the individuals. However, different from MHS, in this paper, mobile social networking is introduced as well to benefit socialized prompting services and improve social participation among individuals. Distinguished from the other works, all registered users in our SPS are connected via Internet and are automatically grouped based on the homophily principle [15,16]. The users in the same group are the individuals with same diseases or similar symptoms. Among group members, the social competition is introduced to enhance the social participation by reminding other group members to take medication timely.

The rest of the paper is structured as follows. Section 2 presents related work. In Section 3, the system architecture of our proposed system is presented. More details about this system are elaborated in the following two sections: Section 4 describes the medication monitoring with ubiquitous sensors and Section 5 elaborates the collaborative prompting based on mobile social network. The prototype implementation and experimental results are presented in Section 6. We finally conclude the paper in Section 7.

@&#RELATED WORK@&#

In this section, we summarize the existing works in the field of healthcare from three aspects: healthcare service for the elderly, improving medication adherence, and healthcare services based on mobile social network.

Numerous works have been conducted to support healthcare services for the elderly ranging from home monitoring, home diagnostics, smart medicine cabinets, tele-medical assistants to medication reminders. Various sensors are utilized to monitor the elderly activities and provide assistive services. Aware Home [17] provides a robot to enhance the dependence of the elderly. COACH [18] provides “hands washing” activity assistance for the elderly with Alzheimer disease. AlarmNet [19] uses physiological sensing devices and wireless sensor network technology to achieve the long-term home healthcare. In [20], a prototype was implemented to monitor the daily activities of solitary elderly people for the health monitoring. Wan et al. [21] designed a cloud-enabled wireless body area network for pervasive healthcare. Su et al. [22] developed a pervasive community care platform with ambient intelligence leveraging sensor networks and mobile agents to enable caregivers and communities to offer pervasive, accurate and context-aware care services. On the other hand, good health is tightly related to good nutrition and a balanced diet. Therefore, the FoodManager is proposed to plan weekly menus according to the nutritional needs, health conditions and personal preferences [23].

Although those services are very useful for the elderly, they overemphasize the technological factors to assist the elderly instead of the social factors. Social factors are very important for the design of healthcare services, which makes the healthcare services more user-friendly and acceptable, and enhances the social interaction with the stress relief. E.g. lack of social participation increases the risk of Alzheimer’s (AD) disease-like dementia [13]. Research in ageing and cognition has demonstrated that the close relationship of sensory functioning and social communication contributes to maintaining the cognitive performance and mood in the elderly [24].

In regard to the medication adherence, many methods have been applied to monitor the medication adherence such as self-report and pill-counting. However, those methodologies are cumbersome and intrusive. The automatic monitoring of medication adherence is necessitated for the elderly. With the diversity of sensors, electronic devices are proposed to monitor the medication intake behavior. The prototype system in [25] monitors medication intake using a single webcam, and records the used bottle and the time of detection for future review. Similarly, the medicine box [26] utilizes the multimodal sensors and actuators to monitor user activities including opening the box and the presence of the patient around the box. The persuasive pillbox integrates a pillbox onto the body of the PDA, where a reminder program is deployed to remind the targets [27]. However, it is a barrier for the objects as they have to take it anywhere and the prompting service is based on the time-schedule. UbiMeds provides a mobile application on mobile phones to support the medication adherence [28].

Although those works contribute to the improvement of the medication adherence by prompting, it is difficult to determine whether medication is taken only based on the states of medicine bottle. E.g., users may take the medicine bottle out of pillbox, and put it back without taking medication. To recognize medication intake activities accurately, we need to take further context-related information (e.g., cup states, user location) into consideration.

With the development of wireless communication and smart phones, social network is going mobile which promotes the emergence of mobile social network. And social factors are also taken into the consideration in the design of healthcare services. Playful bottle, a mobile social persuasion system, was designed to motivate the healthy water intake among social community. It is demonstrated that the social reminders are more effective than automated computer reminders [29]. Similarly, a mobile persuasive social game, named Movipill, is proposed to improve the medication adherence based on the social competition. Movipill encourages medication adherence behavior by giving more points to users that take their medication very close to or at the prescribed time [30]. Triantafyllidis et al. [31] presented a pervasive health system enabling self-management of chronic patients during their everyday activities. The proposed system integrates patient health monitoring, status logging for capturing various problems or symptoms met, and social sharing of the recorded information within the patient’s community, aiming to facilitate disease management.

In general, people are willing to have social interaction among their friends, relatives or persons with the same interest. The social reminders from friends, relatives or persons with the same interest are more effective than that from the strangers. Therefore, to leverage the efficacy of social reminders, we propose a dynamic community detection algorithm to create a new community, which contains friends, relatives and people with the same interest based on property similarity and topology similarity. The dynamic community detection minimizes the concerns about the privacy issue. In addition, the social competition is introduced into our system as well. The social competition not only improves the medication adherence, but also intensifies the social interaction among community members.

The proposed system, named Socialized Prompting System (SPS), extends the concept of smart home with the introduction of mobile social networking, which connects the isolated smart homes with social activities. As shown in Fig. 1
                     , the architecture of the SPS consists of three parts: medicine monitoring in smart homes, central server, and mobile clients.

The medicine monitoring is responsible for detecting individual medication taking behavior based on the RFID-based pillbox, an enhanced pillbox designed based on the RFID tags to detect medication statuses such as ‘pick up’ and ‘put back’. Furthermore, more contexts such as time, activities and knowledge about prescription are utilized to infer whether the medications are taken according to the prescription. As shown in Fig. 1, the context aggregation is introduced to integrate the sensory data from heterogeneous sensors and to encapsulate the contexts with a unified format to benefit the storage in knowledge base. The medication scheduler provides graphical user interfaces to access to the medication prescriptions, and also formalizes the representation of medication prescriptions by semantic tags such as time and dosage patterns. The medicine monitoring infers whether the medication is taken correctly and the outputs will be fully recorded by the medication logger.

Mobile phones, as a mobile platform for social interaction, are enhanced with social prompting application. Meanwhile, for the setup of the SPS, social prompting application is utilized for registration and privacy setting. Initially, users should register in the system, and provide personal information including hobbies, occupation, and diseases via mobile applications. As the privacy issue is a concern, the user profiles are invisible to users except the owner. On the other hand, the terminal users could set the privacy level of the medication regimens. They could give permission to a group of persons, from whom they are willing to receive prompting information. The setting will be enveloped in the user profiles. In addition, the terminal users also could manage the prescription by themselves. Due to the privacy issue, the medication regimens are stored in the local domain instead of sharing on the central server.

The central server is the core of the SPS and connects various smart homes and mobile clients. It receives medication schedule and medication logger from a number of smart homes. Based on user attributes and interaction records, the dynamic community detection is adopted to discover user communities e.g., friends and individuals with similar hobbies/diseases for user interaction. Once unfinished medication events are detected from medication monitoring, the dynamic community will be found for the prompting services. The mobile social network promotes the communication among friends and benefits for the isolated or depressed elders. On the other hand, the user interaction through mobile phones is updated in the central server. In our prototype system, the central server is deployed in our pervasive eldercare lab [10]. For each participant, the medicine monitoring system is deployed in his/her house to automatically collect medicine intake activities. Meanwhile, a mobile phone has been assigned to each subject for social interaction. An android application was developed and pre-installed to benefit the social interaction.

Elders are likely to forget to take medicine according to the medication schedule, e.g., what to take, when to take, and how the medicine should be taken. To improve the medication adherence for the elderly, an automatic medication monitor would be helpful for the seamless detection of medicine intake activities based on ubiquitous sensors.

The medication monitoring system consists of two parts: the pill bottle labeled with RFID tags and the pillbox enhanced by RFID reader. Each medicine bottle in the pillbox is tagged with a RFID tag. Based on the RFID tags, we build a one-to-one mapping from RFID tags to medicine profiles. Meanwhile, a RFID reader is deployed at the bottom of the pillbox. The RFID reader scans the RFID tags periodically. If a new RFID tag is detected, it means a new pill bottle is added into the pillbox. When a bottle is taken out of the pillbox, the RFID reader can detect the status change of the medicine bottle (e.g., taken out of the pillbox or put back into the pillbox).

Although medicine status could be detected by the RFID system, it is difficult to discriminate whether the user has taken the medicine accordingly. Therefore, to detect whether the medication is taken according to the prescription, the generic rule engine for medicine intake behaviors is introduced to infer user activities.

First, we design user ontology and medicine ontology to represent the contexts of users and medicine respectively. Besides the personal information such as user name, age, and gender, the user ontology encapsulates what kinds of medicine the user should take, current location of user, and symptoms. As the elderly patients often need to take many types of pills in a day, to benefit the multi-medication management, we employ the medication ontology to encapsulate the information of medication. In the medicine ontology, the basic information related with the medicine is described including medicine name and RFID tag ID mapping with the medicine. In addition, the medication states including current state and previous state are provided to detect whether the medicine is taken out of the pillbox or not. Meanwhile, time schedule to take the medicine is also presented in the medicine ontology. An example of medicine ontology entity is illustrated in Table 1
                     . “Calcium” is labeled with unique tag ID ‘e004000072b58a01’, and this medicine should be two times per day at morning and evening. Besides the descriptive information of the medicine, the states whether the pill bottle is in the pillbox or not are encapsulated as well. Based on the information, we could explicitly organize the information related to the given medicine.

For generic rule engine, rules define the relationships among concepts and provide the basis for new knowledge inference. Rules are represented with Semantic Web Rule Language (SWRL) [32] and Description Logic (DL) [33]. The process of taking medication is divided into three steps: Ready, TakeOut, and PutBack. The three rules in Table 2
                      are defined to recognize the three steps respectively. Specifically, we depend on the medicine name and the time schedule to check whether it is time for the user to take medicine. When the medicine name and the time schedule match with those properties in the user ontology, the user state is assigned “Ready” (see Rule 2). Next, the “TakeOut” will be detected when the medicine bottle is taken out of pillbox based on Rule 2. And Rule 3 recognizes the state of “PutBack”. For the rule reasoning, the Jena2 generic rule engine is utilized. Readers can refer to our previous work [10,34] for the details about rule reasoning.

Based on the rule reasoning, we can automatically monitor whether the medicine is taken according to the prescription. Different from the existing work, this method guarantees the high accuracy rate in most scenarios. Compared with the work based on video surveillance for medication intake in [25], our method is not subjected to the daylight and even works in the multi-user environment. The user ontology in this paper makes it reasonable to mark each user respectively, and monitor multi-user activities at the same time. Meanwhile, the proposed method can recognize the fine-grained activities such as ‘Ready’, ‘Takeout’ and ‘PutBack’, which makes it possible for the design of fine-grained prompting services.

Social factors are very important for the design of healthcare services, which makes the healthcare services more user-friendly and acceptable, and enhances the social interaction with the stress relief. Research in ageing and cognition has demonstrated that the close relationship of sensory functioning and social communication contributes to maintaining the cognitive performance and mood in the elderly. For social activities, people are willing to have social interaction among their friends, relatives or persons with the same interest. With regard to the design of socialized prompting services, the reminders from friends, relatives or persons with the same interest are more effective than that from the strangers. In this paper, we consider the interaction among the people with similar disease and same interest will benefit the medicine adherence. Therefore, the dynamic community detection is introduced to find the users with similar user profiles and similar topology. For the social interaction, the social competition is introduced in the prompting services to enhance the social interaction.

To construct a mobile social network, we need firstly to detect communities. The community detection process ensures that members in the same community are friends or persons with similar hobbies or diseases.

User similarity measure is the key of community detection. We measure user similarity based on user profiles and social topology, as shown below.
                           
                              (1)
                              
                                 UserSim
                                 =
                                 
                                    
                                       w
                                    
                                    
                                       1
                                    
                                 
                                 ×
                                 
                                    
                                       P
                                    
                                    
                                       sim
                                    
                                 
                                 +
                                 
                                    
                                       w
                                    
                                    
                                       2
                                    
                                 
                                 ×
                                 
                                    
                                       T
                                    
                                    
                                       sim
                                    
                                 
                              
                           
                        
                     

where Psim
                         denotes the property similarity based on user profiles that recognizes community members with similar interests or preferences; Tsim
                         indicates the topology similarity that measures social relationship; w
                        1 and w
                        2 (w
                        1
                        +
                        w
                        2
                        =1, 
                           
                              0
                              ⩽
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ⩽
                              1
                           
                        , 
                           
                              0
                              ⩽
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ⩽
                              1
                           
                        ) are weighting factors reflecting the relative importance of property similarity and topology similarity.

We adopt the Jaccard coefficients and signal algorithm for calculating the property similarity and topology similarity, respectively. To calculate the property similarity, we represent each user’s profile (e.g., interests) as a multi-dimensional vector. The Jaccard coefficients are used to measure the similarity of multi-dimensional vectors. For instance, two user profiles are represented as vectors (a, c, d, f) and (b, c, d, e) respectively, where ‘a’, ‘b’, ‘c’, ‘d’, ‘e’, and ‘f’ are properties of the two users. Through the Jaccard coefficients (shown in Eq. (2)), the property similarity between the two users is calculated as 2/6.
                           
                              (2)
                              
                                 Jaccard
                                 (
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       |
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                       
                                       ∩
                                       
                                          
                                             r
                                          
                                          
                                             j
                                          
                                       
                                       |
                                    
                                    
                                       |
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                       
                                       ∪
                                       
                                          
                                             r
                                          
                                          
                                             j
                                          
                                       
                                       |
                                    
                                 
                              
                           
                        
                     

To obtain as much topology information as possible, we adopt the signal algorithm [35] for topology similarity calculation. The signal algorithm is a method for constructing similarity between nodes based on the signal passing process. The algorithm converts the network topology information to space vector by neighbor spread, and then computes the topology similarity between two nodes based on the space vector.


                        Fig. 2
                         illustrates the process of the signal algorithm for calculating topology similarity with a social network composed of 5 nodes, where Node 2 and Node 3 are connected via Node 1, while Node 4 and Node 5 are connected directly. Initially we assign a signal on the source node and the other nodes have no signal. As shown in Fig. 2a, Node 1 is chosen as the source node and assigned with a signal. At T
                        +1, the signal of each node is the sum of all the signals of its neighbors and itself at T. Therefore, when T
                        =2, Node 1, 2 and 3 all have a signal respectively (see Fig. 2b); when T
                        =3, Node 1 has 3 signals, both Node 2 and 3 have 2 signals (see Fig. 2c). After T time steps, we get an n-dimensional vector that records each node’s signal quantity representing the effect of the source node to the whole social network. As shown in Fig. 2d, when T
                        =4, the force vector for Node 1 is f
                        1
                        =(7,5,5,0,0). After normalization the value is (7/17,5/17,5/17,0,0). Similarly, if Node 2 is chosen as the source node, the force vector for Node 2 is f
                        2
                        =(5,4,3,0,0) when T
                        =4 (see Fig. 3
                        ). The value is (5/12, 4/12, 3/12, 0, 0) after standardization. Based on the force vectors, the topology similarity between two given nodes is measured through vector dot product. Therefore, the topology similarity between Node 1 and Node 2 is 5/17 when T
                        =4.

With the property similarity and the topology similarity measured, we calculate the global user similarity according to Eq. (1). The user similarity on one hand ensures the members in the same community have similar preferences, on the other hand considers the users with similar position in the social network. Based on the user similarity, we determine the community by using the hierarchical agglomerative clustering algorithm [36].

The prompting service enables community members to prompt each other in medication intake based on the monitored medication status and shared medication schedule. Through a local visible sharing mechanism, the community members can access to the data of other members in the same community through a mobile client.

The workflow of the SPS is shown in Fig. 4
                        . First, data synchronization is performed to access to the medication events from the central server. When the elderly did not take medicine according to the pre-defined schedule, the community members will launch a social prompting to remind him of taking the medicine. On receiving promptings from the others, the receiver will evaluate the promptings with various scores. The collaborative prompting not only provides their friends with warm promptings, which are more persuasive than device reminders, but also facilitates the social interactions among the community members.

We implemented the SPS in our pervasive eldercare lab, where various sensors are deployed including RFID sensors, pressure sensors, light sensors, and noise sensors. Meanwhile, a RFID-based E-Cabinet is implemented to detect the medicine intake activities. E-Cabinet can identify new drug (which bottle is new), plan a new medication-taking schedule, as well as monitor medication activities (when bottles are lifted off and put back; which bottle is moved) unobtrusively and automatically. We also designed a graphic user interface to facilitate the medication management. Through the graphic user interface, a user can manage the medication system, such as setting a new medication intake pattern.

We implemented the collaborative prompting on the Android mobile platform (Samsung I909). Fig. 5
                        a shows the prompting messages for reminding the target user to take medication timely. To motivate the participation of the SPS, the target user assigns each prompting with credit as the feedback (see Fig. 5b). We also rank the users according to the medication adherence index, which aims to improve the medication adherence by social competition (see Fig. 5c).

To quantify the medication adherence, we introduce the medication adherence index to measure whether the elderly take medicine timely. The medication adherence index indicates to what extent the elderly take medicine according to the medicine schedule. We define three task states based on the time difference between current time and the given time in the medicine schedule, symbolized by currentTime and givenTime respectively. The definitions of task status are presented as follows.


                        Finished_on_Time (FT): When |currentTime
                        −
                        givenTime|⩽0.5h, the task status is FT. FT means the medicine is taken timely according to the medicine schedule within no more than 30min offset.


                        Finished_Delay (FD): When 0.5h<|currentTime
                        −
                        givenTime|⩽1h, the task status is FD, which indicates that although the task has been completed, the time offset is too long.


                        Unfinished_Task (UT): When |currentTime
                        −
                        givenTime|>1h, the task status is UT.

With the three states, we symbolize each record ri
                         in the medication logger by vector si
                        
                        =[si
                        
                        1,
                        si
                        
                        2,
                        si
                        
                        3], where 
                           
                              
                                 
                                    s
                                 
                                 
                                    ij
                                 
                              
                              ∈
                              {
                              0
                              ,
                              
                              1
                              }
                           
                        , 1⩽
                        i
                        ⩽
                        N, 1⩽
                        j
                        ⩽3, and N is the number of records in the log file. The variable sij
                         is set as follows.
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                i
                                                1
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            
                                                            
                                                            |
                                                            currentTime
                                                            -
                                                            givenTime
                                                            |
                                                            ⩽
                                                            0.5
                                                            
                                                            h
                                                         
                                                      
                                                      
                                                         
                                                            0
                                                            
                                                            
                                                            otherwise
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                i
                                                2
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            
                                                            
                                                            0.5
                                                            
                                                            h
                                                            <
                                                            |
                                                            currentTime
                                                            -
                                                            givenTime
                                                            |
                                                            ⩽
                                                            1
                                                            
                                                            h
                                                         
                                                      
                                                      
                                                         
                                                            0
                                                            
                                                            
                                                            otherwise
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                i
                                                3
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            
                                                            
                                                            |
                                                            currentTime
                                                            -
                                                            givenTime
                                                            |
                                                            >
                                                            1
                                                            
                                                            h
                                                         
                                                      
                                                      
                                                         
                                                            0
                                                            
                                                            
                                                            otherwise
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Thus, the medication logging could be represented by matrix L
                        =[S
                        1, S
                        2,…,
                        SN
                        ]
                           T
                        . For the three task states, we define a weight for each status, symbolized by wi
                         respectively, and finally we get the weight matrix W
                        =[w
                        1, w
                        2, w
                        3]. According to the logging matrix L and the weight matrix W, the Medication Adherence Index (MAI) is introduced to measure the extent to which the medication schedule is followed. The MAI is measured according to Eq. (4).
                           
                              (4)
                              
                                 MAI
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       N
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                 
                                 
                                    
                                       c
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 
                                 
                                    
                                       c
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       WL
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                 1
                                 ⩽
                                 i
                                 ⩽
                                 N
                              
                           
                        
                     

The MAI provides a solution to quantify the medication adherence based on historical loggers. Meanwhile, the MAI benefits to enhance self-care consciousness and the ranking of medication adherence index in community renders the individual competitive to promote their ranks by trying to adhere to the medication regimens.

We recruited five elders over 60years old (4 males and 1 female) to evaluate the proposed system. All the subjects are retired teachers with basic knowledge about how to operate smartphones and mobile devices. To reduce the risk of the experiment, all the participants are spontaneous disease free. To simulate medicine intake, all participants were required to take a low-dose calcium tablet twice a day (one is taken with meals, the other is taken before bedtime) for eight weeks. First our proposed E-Cabinet system was deployed in each participant’s house. The instructions about how to use the E-Cabinet were well illustrated. They were trained how to manage the medication loggers. Meanwhile, all participants have been equipped with smartphones where the developed collaborative prompting service has been installed. Before the experiment, each participant created an account in the SPS, by which they can log in the application and manage personal information.

To evaluate the efficiency of the SPS, a comparative experiment was conducted. For the first 4weeks, the medicine intake activities were recorded using the E-Cabinet automatically without any prompting services. While in the next 4weeks, the social prompting is introduced to assist the participants. We compared the medication adherence in the two stages. The medication adherence index is calculated based on the medication loggers. There are three types of tasks including FT, FD, and UT (defined above). We assigned each type of task with a score, which indicates whether the given task will pose positive or negative effects on the medication adherence. Specifically, the FT, FD, and UT are given 2, 1, and −2 respectively.

The experimental results of our comparative experiments are illustrated in Fig. 6
                        . For the first 4weeks, the medication adherence index changes dramatically. The dramatic changes of medication adherence index show that the elderly does not take medicine according to the medication schedule. It means the elderly may forget or delay to take medication. By contrast, the index increases gradually when the SPS is applied in the next 4weeks. The tendency of medication adherence index demonstrates that the system benefits the improvement of medication adherence, e.g., the elderly can take the medication in time according to the medication schedule.

To evaluate the mobile interaction platform from the user perspective, a user study was conducted. We mainly analyzed the user acceptance toward the knowledge sharing, content provisioned, and user interfaces. We send questionnaires to 19 participants. When the questionnaire was completed, we collected their questionnaires and analyzed those feedbacks. The questionnaire used for our user study is shown as follows:
                           
                              Q1.
                              Are you willing to share your medication logger with others in the community?

Are you willing to share user profile with other members in the same community?

Are you willing to cooperate with others in the same community?

Are you satisfied with the content provisioned by the system?

Is it convenient to operate the applications on mobile phones?

Are you willing to utilize those applications in your daily life?

All questions were answered using the following scale: 5=strongly agree, 4=agree, 3=neutral, 2=disagree, 1=strongly disagree. The results are illustrated in Fig. 7
                        . Due to the privacy issue, most participants are not willing to share their medication loggers with others in the community (Q1). On the contrary, participants agree to share their user profiles with others in the same community, especially for their friends and others with the same interest (Q2). Maybe it is the less privacy involved in the user profile that leads to those different attitudes for data sharing. On the other hand, the sharing among members with the same interest benefits the mutual communication and promotes the social interaction among the community. Based on the review results of Q1 and Q2, it is demonstrated that the sensitive medication loggers should not be shared, while the sharing of user profiles among friends or members with the same interest is feasible. Fortunately, we design the context-aware prompting system following this principal. In our proposed system, the medication loggers are stored in the house-hold medication monitoring subsystem locally and provide no access points to the cross-domain users. However, user profiles and tasks are shared in the data sharing system. The majority of subjects are willing to cooperate with others in the same community, especially with their friends (Q3). The result shows most subjects are willing to join in our system, which makes it possible to obtain responses from others in time. The positive responses from subjects contribute to the reduction of response time and enhance the user experience for the task launchers. Although there were some errors in content provisioning due to the update of sampled data occasionally, our user test shows that most of the subjects regard the content provisioned helpful (Q4). Those applications bring more convenience to daily life and enhance social interaction. An important observation on the user interface is that the participants had positive feelings on the mobile interaction platform (Q5). The multimodal inputs on the smart phones are more convenient to interact with the mobile devices. Especially, the handwriting recognition on the mobile phone makes it more efficient for inputs. Furthermore, most of the participants were interested in those applications and would use those to enhance social interaction in daily life (Q6). This demonstrates that the proposed prototype system is welcome and is considered to be useful to enhance the social interaction among members in the community.

With the rapid growth of aging population, medication adherence is a great challenge for the elderly healthcare. A socialized prompting system is proposed in this paper to enhance the medicine adherence with the seamless monitoring of medication intake activities and collaborative social prompting services. An eight-week experiment and case studies were conducted to evaluate the proposed system. The evaluation results illustrate the effectiveness of the proposed approach.

The sample size (5 participants) and the overall timeframe of the evaluation study may constitute limitations for our work. The size and the diversity of participants will be crucial to demonstrate the potential of our work. Therefore, we plan to deploy the proposed system in large senior communities to conduct an in-depth study.

@&#REFERENCES@&#

