@&#MAIN-TITLE@&#Non-parametric efficiency estimation using Richardson–Lucy blind deconvolution

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a non-parametric three-stage strategy for efficiency estimation.


                        
                        
                           
                           The proposed algorithm (RLb) identifies firm-specific inefficiencies.


                        
                        
                           
                           RLb needs no distribution assumption, tolerates data noise and heteroscedasticity.


                        
                        
                           
                           RLb efficiently distinguishes nuance among Finnish energy suppliers.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Stochastic frontier estimation

Richardson–Lucy blind deconvolution

Efficiency estimation

Nonparametric

@&#ABSTRACT@&#


               
               
                  We propose a non-parametric, three-stage strategy for efficiency estimation in which the Richardson–Lucy blind deconvolution algorithm is used to identify firm-specific inefficiencies from the residuals corrected for the expected inefficiency μ. The performance of the proposed algorithm is evaluated against the method of moments under 16 scenarios assuming 
                        
                           μ
                           =
                           0
                        
                     . The results show that the Richardson–Lucy blind deconvolution method does not generate null or zero values due to wrong skewness or low kurtosis of inefficiency distribution, that it is insensitive to the distributional assumptions, and that it is robust to data noise levels and heteroscedasticity. We apply the Richardson–Lucy blind deconvolution method to Finnish electricity distribution network data sets, and we provide estimates for efficiencies that are otherwise inestimable when using the method of moments and correct ranks of firms with similar efficiency scores.
               
            

@&#INTRODUCTION@&#

Productive efficiency analysis, which is a quantitative approach for evaluating the performance of a firm, can, e.g., offer insights into its performance and help managers make correct decisions. Generally, a productive efficiency analysis can be viewed as a two-step process: first, the production or cost frontiers are estimated by using parametric or non-parametric methods, and then the inefficiencies from the residuals estimated in the first step are predicted. In neoclassical theory based approaches such as Data Envelopment Analysis (DEA), the residuals are considered to be the inefficiencies (Charnes, Cooper, & Rhodes 1978; Farrell, 1957). In frontier production models such as Stochastic Frontier Analysis (SFA) (Aigner, Lovell, & Schmidt 1977; Meeusen and Van den Broeck (1977)) and the stochastic semi-parametric model Stochastic Non-smooth Envelopment of Data (StoNED) (Kuosmanen & Kortelainen, 2012), the residuals are assumed to be a composite of both the inefficiencies and the random noise. In the single output multiple input setting, StoNED contains the traditional DEA and SFA as its special cases. In stochastic frontier models, two-stage strategies are conventionally used for efficiency estimation, wherein the conditional mean E(y|x) or the frontier is estimated in the first stage and the disturbance term (difference between the estimated and observed y) is decomposed into the inefficiency and the random noise in the second stage. In the first stage, the frontier can be estimated by using parametric or nonparametric regression techniques. Parametric models postulate a specific functional form for f and the parameters are estimated using techniques such as Modified Ordinary Least Squares (MOLS) (Aigner et al. 1977) and the maximum likelihood (ML) approach, with the latter being more frequently used. Non-parametric models do not assume a particular functional form but they do need to satisfy certain regularity axioms, with the frontier being determined using, e.g., Convex Nonparametric Least Squares (CNLS) (Kuosmanen & Kortelainen 2012). Keshvari and Kuosmanen (2013) relaxed the concavity assumption of CNLS (Keshvari & Kuosmanen, 2013). Given that semiparametric approaches such as StoNED bridge the gap between DEA and SFA, there is a growing interest in this method. StoNED is a well-established method that is superior to other existing methods given its stochastic and semi-parametric nature (Kuosmanen & Kortelainen, 2012). By adopting the StoNED framework and relaxing its parametric assumptions, a fully nonparametric approach for efficiency identification that integrates the standard DEA and SFA models can be developed. In StoNED, techniques such as method of moments (MM) are conventionally used for identifying efficiencies from the residuals coming from the first step. Wang et al. (2014) developed a quantile-version of CNLS and StoNED (Wang, Wang, Dang, & Ge, 2004). However, these methods heavily depend on the accuracy of the distributional assumption of the error components and thus suffer from many problems such as wrong skewness (Kuosmanen & Fosgerau, 2009). In addition to the two-stage strategies, other approaches have been applied in stochastic frontier models to account for the impact of environmental factors. The frontier inefficiency residuals were modeled as a function of various causal factors and a random component to study the systematic effect of the conditions that contribute to inefficiencies (Reifschneider & Stevenson, 1991). A generalized production frontier approach was reported by (Kumbhakar, Ghosh, & McGuckin, 1991) to estimate the determinants of inefficiencies. Huang and Liu proposed a hybrid of a stochastic frontier regression: the model combines a stochastic frontier regression and a truncated regression to estimate the production frontier with non-neutral shifting of the average production function (Huang & Liu, 1994). Conditional efficiency measures, such as conditional FDH, conditional DEA, conditional order-m and conditional order-α, have rapidly developed into a useful tool to explore the impact of exogenous factors on the performance of DMUs in a nonparametric framework (Daraio & Simar, 2005, 2007a, 2007b). A more recent paper examined the impact of environmental factors on the production process in a new two-stage type approach by using conditional measures to avoid the drawbacks of the traditional two-stage analysis, which provides a measure of inefficiency whitened from the main effect of the environmental factors (Badin, Daraio, & Simar, 2012).

Deconvolution has previously been shown to be a useful statistical technique for unknown density recovery (Meister 2006) which, in most cases, requires specifying the measurement error distribution (Stefanski & Carroll, 1990). For example, Kneip et al. (2012) applied deconvolution to estimate the boundary of a production set foe which the measurement error has an unknown variance; however, a lognormal distribution of the noise term is crucial to ensure the identifiability in context (Kneip, Simar, & Van Keilegom, 2012). Additionally, Schwarz et al. (2010) defined an estimator of the frontier function where partial information on the error distribution was assumed, i.e., zero-mean Gaussian random variable with an unknown variance (Schwarz, Van Bellegem, & Florens, 2010). Meister (2006) relaxed this assumption and consistently estimated both the target density and the unknown variance of the normal error, assuming that the target density was from the ordinary smooth family of distributions (Meister, 2006). Although fewer assumptions were needed for the error term in Meister’s estimator, the target distribution was restricted to distributions such as Laplace, exponential, and gamma. Other attempts at relaxing constraints were made under a scenario wherein the contaminated errors ε (
                        
                           
                              ɛ
                           
                           =
                           u
                           +
                           v
                           ,
                        
                      
                     u and v of each stand for the inefficiency and random noise, respectively, were not directly observable but represented an additive term of a regression model such as 
                        
                           y
                           =
                           α
                           +
                           β
                           x
                           +
                           
                              ɛ
                           
                        
                      (α and β are the coefficients; x and y are the inputs and output). Horowitz and Markatou (1996) developed an estimator to handle cases that do not require specifying the component distributions of ε (Horowitz & Markatou, 1996). However, this method relies on the information along the time-axis of the panel data to identify densities in the composite error term, which cannot be applied to cross-sectional data, whose the error density is rarely entirely known. More importantly, Horrace and Parmeter (2011) proposed a cross-section complement of Horowitz and Markatou’s method, which proved to be semi-uniformly consistent in identifying target density if u is ordinary smooth (Horrace & Parmeter, 2011). As a regression generalization of (Meister, 2006), the constraints posed in Meister’s estimator are inherited in this method. For example, it is semi-parametric because it relies on a distributional law for v and because the density of u belongs to the ordinary smooth family. Further, as the methods of (Horowitz & Markatou, 1996) and (Horrace & Parmeter, 2011) work for data of the regression form, replacing ε with the regression residuals may introduce frontier estimation errors and can thus lead to a biased estimation of the inefficiencies.

Unlike the aforementioned efforts for applying deconvolution in frontier estimation, we are interested in inefficiency estimation using deconvolution in a non-parametric stochastic setting. To overcome the difficulty of estimating the expected inefficiency using kernel deconvolution, we return to the field where deconvolution is originated and explore the existing techniques. Deconvolution was originally applied in signal and image processing, where the point spread function (PSF) is used to describe the response of an imaging system to a point source (Haykin, 1993). Projected onto efficiency estimation problems, it is equivalent to the function of converting the inefficiencies to the observed residuals. Blind deconvolution is a technique for recovering the blurred object without any prior knowledge of the PSF (which is often costly or impossible to obtain). There are five categories of blind deconvolution methods: a priori blur identification methods (Cannon, 1976), zero sheet separation methods (Ghiglia, Romero, & Mastin, 1993), autoregressive moving average (ARMA) parameter estimation methods (Biemond, Tekalp, & Lagendijk, 1990), nonparametric methods based on high-order statistics (HOS) (Jacovitti & Neri, 1990; Wu, 1990), and nonparametric iterative methods (Ayers & Dainty, 1988; Kundur & Hatzinakos, 1998; McCallum, 1990). These methods differ in their assumptions about the PSF and the true object. After considering the advantages and limitations of each method, we are left with the nonparametric iterative methods. We restrict our options in this fashion because (1) the a priori methods are parametric; (2) zero sheet separation methods are highly sensitive to noise and prone to inaccuracy for large objects; (3) the ARMA parameter estimation methods may converge poorly and be computationally expensive if the number of parameters is very large; (4) nonparametric methods based on HOS require accurate modeling of the true object by a known non-Gaussian probability distribution and may be trapped in local minima in the estimation process; and (5) the results from algorithms in the first three categories are usually not unique unless additional assumptions are made about the PSF. Nonparametric iterative methods iteratively estimate PSF and the true object without any prior parametric assumptions. However, several constraints are required that, in the context of efficiency analysis, are as follows: (1) the inefficiencies are non-negative, (2) the range of inefficiency is known (e.g., within 0 and 1), and (3) the background noise is random. Typical algorithms that belong to this class are non-negativity and support constraints recursive inverse filtering (NAS–RIF) (Kundur & Hatzinakos, 1998), simulated annealing (SA) (McCallum, 1990), and iterative blind deconvolution (IBD) (Ayers & Dainty, 1988), which differ in their objectives of minimizing the cost functions and how these functions are constructed. Because NAS–RIF has certain requirements for the PSF, such as bounded-input bounded-output (BIBO), and because the choice of iteration parameters (e.g., perturbation scale) in SA is difficult, which affects its performance and convergence rate, we return our focus interest to IBD. IBD minimizes the cost function with respect to both the PSF and the true object simultaneously, and it is the most widely applied algorithm in blind deconvolution. The typical algorithms adopted for IBD in its iterative operations include a Wiener-type filter or the Richardson–Lucy (RL) algorithm. Because the Wiener-type filter assumes stationary noise, we are left with the RL algorithm. Further appealing is the probabilistic nature of the RL algorithm. We thus chose to apply the blind RL deconvolution (Fish, Brinicombe, & Pike, 1995) algorithm (abbreviated as RLb here) for inefficiency estimation.

The performance of the RLb was tested against that of MM (which is conventionally used in StoNED) under sixteen simulated scenarios, including those from (Aigner et al., 1977). In the RL deconvolution algorithm, the true object (e.g., inefficiency) was assumed to follow a Poisson distribution. By approximating a Poisson distribution using a Gaussian distribution which was assumed for the inefficiency term, we added a sufficiently large term to the inputs and subtracted it from the deconvoluted results. The results show that the RLb method outweighs MM in at least 4 aspects. It is (1) non-parametric and exempted from any distributional assumption, which leads to (2) the circumvention of many common issues such as the wrong skewness problem; (3) it is insensitive to data noise; and (4) it is robust to data heteroscedasticity. Additionally, we applied the RLb method to an empirical problem, which used the residuals taken from the cost frontier estimation of 89 Finnish electricity distributors. We are among the pioneers in deploying deconvolution in efficiency estimation, and we are the first to identify inefficiencies using a fully non-parametric method.

The rest of the text is organized as below. The non-parametric three-stage efficiency estimation procedure wherein RLb is used for firm-specific inefficiency decomposition is described in detail in the ‘Methods’. In the ‘Monte Carlo Simulation’, the data generating processes, performance measures and results are described and summarized. The data and results of the real case application are presented and discussed in the ‘Empirical study’ section. Finally, we summarize the key findings, contributions, limitations and possible future directions in ‘Conclusion’.

@&#METHODS@&#

Considering the stochastic frontier model, let yi
                         represent the output of firm i, F denote the production function characterising the technology, 
                           
                              x
                              ∈
                              
                                 ℜ
                                 +
                                 m
                              
                           
                         being the vector of inputs and ε
                           i
                         showing the composite errors, the standard econometric production model could be written as (1),

                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             y
                                             i
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             F
                                             
                                                (
                                                
                                                   x
                                                   i
                                                
                                                )
                                             
                                             +
                                             
                                                
                                                   ɛ
                                                
                                                i
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where the disturbance term ε
                           i
                         of firm i could be decomposed into inefficiency u
                           i
                         and random noise vi
                        , i.e., 
                           
                              
                                 
                                    ɛ
                                 
                                 i
                              
                              =
                              
                                 v
                                 i
                              
                              −
                              
                                 
                                    u
                                 
                                 i
                              
                           
                        . The inefficiency term is composed of two parts, i.e., the expected inefficiency which is the same across firms μ and the firm-specific inefficiencies ui
                        . Thus, 
                           
                              
                                 
                                    u
                                 
                                 i
                              
                              =
                              μ
                              +
                              
                                 u
                                 i
                              
                              ,
                           
                         and 
                           
                              
                                 
                                    ɛ
                                 
                                 i
                              
                              =
                              
                                 v
                                 i
                              
                              −
                              μ
                              −
                              
                                 u
                                 i
                              
                           
                         (
                           
                              μ
                              +
                              
                                 u
                                 i
                              
                              ≥
                              0
                           
                        ).

We propose a three-stage strategy to estimate inefficiencies using the blind Richardson–Lucy deconvolution (Fish et al., 1995) algorithm (abbreviated as RLb). The core of this strategy is Stage 3 where the RLb algorithm is used to decompose firm-specific inefficiencies from the corrected composite errors, which is independent of the form of the frontier and how the frontier is estimated. We employ CNLS regression for frontier estimation given its non-parametric nature. According to the duality theory, the production technology can be equivalently modeled by, e.g., the cost function (Kuosmanen, 2008), allowing the application of this algorithm to a wide range of problems. However, our model may not be feasible for problems with multiput-output and no cost minimization assumption, such as public sector organizations. Here, we use the production frontier model to illustrate this strategy.

                           
                              •
                              Stage 1: Estimate the shape of function F by CNLS regression and obtain the residuals ε
                                    i
                                 , where the model is defined as (1) and F has no particular functional form but satisfies monotonicity and concavity.

Stage 2: Estimate μ for all firms, and correct CNLS residuals by μ, i.e., 
                                    
                                       
                                          ϵ
                                          i
                                       
                                       =
                                       
                                          
                                             ɛ
                                          
                                          i
                                       
                                       +
                                       μ
                                       ,
                                    
                                  where ϵ
                                    i
                                  is the corrected CNLS residual of firm i.

Stage 3: Estimate the firm-specific inefficiencies using RLb, provided with the corrected CNLS residuals ϵ
                                    i
                                 .

In this model, the inefficiency term is assumed to be comprised of the expected inefficiency shared among all firms (μ) and firm-specific inefficiencies ui
                         (i refers to firm i). The term μ was not captured using conventional methods which comprises of, e.g., technological bottleneck, economic environment, government regulation, etc. On the other hand, μ could be considered as part of the frontier, which is identified in Stage 2 and used for frontier correction. The term ui
                         contains the inefficiencies we are interested to identify which reflects the differences among firms.

Both parametric and non-parametric models could be used for frontier estimation in the first stage. It can be analytically represented by (2) to (5),

                              
                                 (2)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   min
                                                   
                                                      ɛ
                                                      ,
                                                      
                                                         α
                                                      
                                                      ,
                                                      
                                                         β
                                                      
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   N
                                                
                                                
                                                   
                                                      ɛ
                                                   
                                                   i
                                                   2
                                                
                                             
                                          
                                          
                                          
                                             
                                                such
                                                
                                                that
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (3)
                                 
                                    
                                       
                                          
                                             
                                                y
                                                i
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   α
                                                   i
                                                
                                                +
                                                
                                                   
                                                      β
                                                   
                                                   i
                                                   
                                                      
                                                      ′
                                                   
                                                
                                                
                                                   x
                                                   i
                                                
                                                +
                                                
                                                   
                                                      ɛ
                                                   
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (4)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   α
                                                   i
                                                
                                                +
                                                
                                                   
                                                      β
                                                   
                                                   i
                                                   
                                                      
                                                      ′
                                                   
                                                
                                                
                                                   x
                                                   i
                                                
                                             
                                          
                                          
                                             ≤
                                          
                                          
                                             
                                                
                                                   α
                                                   h
                                                
                                                +
                                                
                                                   
                                                      β
                                                   
                                                   h
                                                   
                                                      
                                                      ′
                                                   
                                                
                                                
                                                   x
                                                   i
                                                
                                                
                                                ∀
                                                h
                                                ,
                                                i
                                                =
                                                1
                                                …
                                                N
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (5)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   β
                                                
                                                i
                                             
                                          
                                          
                                             ≥
                                          
                                          
                                             
                                                0
                                                
                                                ∀
                                                i
                                                =
                                                1
                                                …
                                                N
                                             
                                          
                                       
                                    
                                 
                              
                           where αi
                            and 
                              β
                           
                           
                              i
                            are coefficients specific to observation i, vi
                            (
                              
                                 
                                    v
                                    i
                                 
                                 =
                                 
                                    
                                       ɛ
                                    
                                    i
                                 
                                 +
                                 μ
                                 −
                                 
                                    u
                                    i
                                 
                              
                           ) captures its random noise, and x
                           
                              i
                            is the vector of inputs for firm i.

For the CNLS estimator, the coefficients 
                              
                                 
                                    
                                       α
                                       ^
                                    
                                    i
                                 
                                 ,
                                 
                                    
                                       β
                                    
                                    i
                                 
                              
                            obtained as the optimal solution to (2) to (5) are not necessarily unique. Denote the family of alternate optima as F
                           ⋆, the non-uniqueness issue is addressed by the following lower bound

                              
                                 (6)
                                 
                                    
                                       
                                          
                                             g
                                             ^
                                          
                                          min
                                       
                                       
                                          (
                                          x
                                          )
                                       
                                       =
                                       
                                          min
                                          
                                             α
                                             ∈
                                             ℜ
                                             ,
                                             
                                                β
                                             
                                             ∈
                                             
                                                ℜ
                                                +
                                                m
                                             
                                          
                                       
                                       
                                          {
                                          α
                                          +
                                          
                                             
                                                β
                                             
                                             
                                                
                                                ′
                                             
                                          
                                          x
                                          |
                                          α
                                          +
                                          
                                             
                                                β
                                             
                                             
                                                
                                                ′
                                             
                                          
                                          
                                             x
                                             i
                                          
                                          ≥
                                          
                                             
                                                y
                                                ^
                                             
                                             i
                                          
                                          ,
                                          ∀
                                          i
                                          =
                                          1
                                          ,
                                          .
                                          .
                                          .
                                          ,
                                          N
                                          }
                                       
                                    
                                 
                              
                           Specifically, 
                              
                                 
                                    g
                                    ^
                                 
                                 min
                              
                            is the tightest lower bound for the family of functions F
                           ⋆. Note that for the observed data points x
                           
                              i
                           , the fitted values are always unique, i.e., 
                              
                                 g
                                 
                                    (
                                    
                                       x
                                       i
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       g
                                       ^
                                    
                                    min
                                 
                                 
                                    (
                                    
                                       x
                                       i
                                    
                                    )
                                 
                                 ,
                                 ∀
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 N
                              
                           .

Many algorithms could be used in the second stage for μ estimation. For example, Hall and Simar have proposed a nonparametric method for estimating μ (abbreviated as HS) based on the unknown density of the composite error term (Hall & Simar, 2002), which could be coupled with RLb for efficiency estimation nonparametrically. In HS, the kernel density estimator is used for estimating the density function f, i.e.,

                              
                                 (7)
                                 
                                    
                                       
                                          
                                             f
                                             ^
                                          
                                          
                                             ɛ
                                          
                                       
                                       
                                          (
                                          e
                                          )
                                       
                                       =
                                       
                                          
                                             (
                                             N
                                             h
                                             )
                                          
                                          
                                             −
                                             1
                                          
                                       
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          N
                                       
                                       K
                                       
                                          (
                                          
                                             
                                                e
                                                −
                                                
                                                   
                                                      ɛ
                                                   
                                                   i
                                                
                                             
                                             h
                                          
                                          )
                                       
                                    
                                 
                              
                           where K(·) is a compactly supported kernel, h is a bandwidth, ε is the composite error and e is the projection of ε on a line (i.e., the projected data of ε). Hall and Simar (2002) show that in the neighborhood of μ, the first derivative of the density function of the composite error term (
                              
                                 f
                                 
                                    
                                       ɛ
                                    
                                 
                                 
                                    
                                    ′
                                 
                              
                           ) is proportional to that of the density function of the inefficiency term (
                              
                                 f
                                 
                                    u
                                 
                                 
                                    
                                    ′
                                 
                              
                           ) (Hall & Simar, 2002). Due to the assumption that fu
                            has a jump discontinuity at 0, the CNLS residual ε has a jump discontinuity at 
                              
                                 −
                                 μ
                              
                            (Hall & Simar, 2002). Therefore, 
                              
                                 
                                    μ
                                    ^
                                 
                                 =
                                 arg
                                 
                                    min
                                    
                                       
                                          ɛ
                                       
                                       ∈
                                       ζ
                                    
                                 
                                 
                                    (
                                    
                                       
                                          f
                                          ^
                                       
                                       
                                          ɛ
                                       
                                       
                                          
                                          ′
                                       
                                    
                                    
                                       (
                                       
                                          ɛ
                                       
                                       )
                                    
                                    )
                                 
                              
                            provides a nonparametric estimator of μ, where ζ is a closed interval in the right tail of f
                           ε(·). To implement HS, a bandwidth must be chosen and ζ need to be defined. According to (Delaigle & Gijbels, 2004), the following iterative procedure could be adopted to obtain 
                              
                                 μ
                                 ^
                              
                           .

                              
                                 •
                                 
                                    Step 1 (Initialize h and ζ): Initialize the bandwidth by 
                                       
                                          
                                             h
                                             0
                                          
                                          ∈
                                          C
                                          
                                             N
                                             
                                                −
                                                
                                                   1
                                                   9
                                                
                                             
                                          
                                          ,
                                       
                                     where C is a large number, e.g., 10, and 
                                       
                                          
                                             ζ
                                             0
                                          
                                          =
                                          
                                             [
                                             max
                                             
                                                
                                                   ɛ
                                                
                                                i
                                                0
                                             
                                             −
                                             h
                                             ,
                                             max
                                             
                                                
                                                   ɛ
                                                
                                                i
                                                0
                                             
                                             ]
                                          
                                       
                                    .


                                    Step 2 (Estimate μ): Estimate 
                                       
                                          
                                             μ
                                             ^
                                          
                                          0
                                       
                                     using h
                                    0 and ζ
                                    0.


                                    Step 3 (Update h and ζ): Set 
                                       
                                          
                                             h
                                             1
                                          
                                          =
                                          0.85
                                          
                                             h
                                             0
                                          
                                       
                                     and 
                                       
                                          
                                             ζ
                                             1
                                          
                                          =
                                          
                                             [
                                             
                                                
                                                   μ
                                                   ^
                                                
                                                0
                                             
                                             −
                                             
                                                h
                                                1
                                             
                                             ,
                                             
                                                
                                                   μ
                                                   ^
                                                
                                                0
                                             
                                             +
                                             
                                                h
                                                1
                                             
                                             ]
                                          
                                          ,
                                       
                                     which are used to obtain 
                                       
                                          
                                             μ
                                             ^
                                          
                                          1
                                       
                                    .


                                    Step 4 (Iteration and stop): Repeat steps 2 and 3 by 
                                       
                                          
                                             h
                                             l
                                          
                                          =
                                          0.85
                                          
                                             h
                                             
                                                l
                                                −
                                                1
                                             
                                          
                                       
                                     and 
                                       
                                          
                                             ζ
                                             l
                                          
                                          =
                                          
                                             [
                                             
                                                
                                                   μ
                                                   ^
                                                
                                                
                                                   l
                                                   −
                                                   1
                                                
                                             
                                             −
                                             
                                                h
                                                l
                                             
                                             ,
                                             
                                                
                                                   μ
                                                   ^
                                                
                                                
                                                   l
                                                   −
                                                   1
                                                
                                             
                                             +
                                             
                                                h
                                                l
                                             
                                             ]
                                          
                                       
                                     where l is the index of this iteration. Stop the process when 
                                       
                                          
                                             |
                                          
                                          
                                             
                                                μ
                                                ^
                                             
                                             l
                                          
                                          −
                                          
                                             
                                                μ
                                                ^
                                             
                                             
                                                l
                                                −
                                                1
                                             
                                          
                                          
                                             |
                                             ≤
                                          
                                          
                                             N
                                             
                                                −
                                                
                                                   2
                                                   5
                                                
                                             
                                          
                                          
                                             |
                                             
                                                
                                                   μ
                                                   ^
                                                
                                                1
                                             
                                             −
                                             
                                                
                                                   μ
                                                   ^
                                                
                                                0
                                             
                                             |
                                          
                                       
                                    .

The RLb algorithm (the blind form of the RL algorithm), a nonparametric approach, is proposed here in the third stage to estimate firm-specific inefficiencies if μ is adjusted in the residuals, i.e., 
                              
                                 
                                    ϵ
                                    i
                                 
                                 =
                                 
                                    
                                       ɛ
                                    
                                    i
                                 
                                 +
                                 μ
                              
                           . The RL algorithm is originally developed for image recovery. According to (Richardson, 1972), given the blurred image B and the clear image I, the intensity Ip
                            at the pixel location p is computed from the pixel intensities Bq
                            by 
                              
                                 P
                                 
                                    (
                                    
                                       I
                                       p
                                    
                                    )
                                 
                                 =
                                 
                                    ∑
                                    q
                                 
                                 P
                                 
                                    (
                                    
                                       I
                                       p
                                    
                                    |
                                    
                                       B
                                       q
                                    
                                    )
                                 
                                 P
                                 
                                    (
                                    
                                       B
                                       q
                                    
                                    )
                                 
                              
                            where P(Ip
                           ) can be identified as the distribution of Ip
                            and so forth. Expanding P(Ip
                           |Bq
                           ) by Bayes’s rule, 
                              
                                 P
                                 
                                    (
                                    
                                       I
                                       p
                                    
                                    )
                                 
                                 =
                                 
                                    ∑
                                    q
                                 
                                 
                                    
                                       P
                                       
                                          (
                                          
                                             B
                                             q
                                          
                                          |
                                          
                                             I
                                             p
                                          
                                          )
                                       
                                       P
                                       
                                          (
                                          
                                             I
                                             p
                                          
                                          )
                                       
                                    
                                    
                                       
                                          ∑
                                          z
                                       
                                       P
                                       
                                          (
                                          
                                             B
                                             q
                                          
                                          |
                                          
                                             I
                                             z
                                          
                                          )
                                       
                                       P
                                       
                                          (
                                          
                                             I
                                             z
                                          
                                          )
                                       
                                    
                                 
                                 P
                                 
                                    (
                                    
                                       B
                                       q
                                    
                                    )
                                 
                              
                           . The best of a bad situation is used to break the dependency of P(Ip
                           ) on both sides, where the current estimation of P(Ip
                           ) is used to approximate P(Ip
                           |Bq
                           ). Thus,

                              
                                 (8)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                   
                                                      j
                                                      +
                                                      1
                                                   
                                                
                                                
                                                   (
                                                   
                                                      I
                                                      p
                                                   
                                                   )
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   ∑
                                                   q
                                                
                                                
                                                   
                                                      P
                                                      
                                                         (
                                                         
                                                            B
                                                            q
                                                         
                                                         |
                                                         
                                                            I
                                                            p
                                                         
                                                         )
                                                      
                                                      
                                                         P
                                                         j
                                                      
                                                      
                                                         (
                                                         
                                                            I
                                                            p
                                                         
                                                         )
                                                      
                                                   
                                                   
                                                      
                                                         ∑
                                                         z
                                                      
                                                      P
                                                      
                                                         (
                                                         
                                                            B
                                                            q
                                                         
                                                         |
                                                         
                                                            I
                                                            z
                                                         
                                                         )
                                                      
                                                      
                                                         P
                                                         j
                                                      
                                                      
                                                         (
                                                         
                                                            I
                                                            z
                                                         
                                                         )
                                                      
                                                   
                                                
                                                P
                                                
                                                   (
                                                   
                                                      B
                                                      q
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   P
                                                   j
                                                
                                                
                                                   (
                                                   
                                                      I
                                                      p
                                                   
                                                   )
                                                
                                                
                                                   ∑
                                                   q
                                                
                                                P
                                                
                                                   (
                                                   
                                                      B
                                                      q
                                                   
                                                   |
                                                   
                                                      I
                                                      p
                                                   
                                                   )
                                                
                                                
                                                   
                                                      P
                                                      (
                                                      
                                                         B
                                                         q
                                                      
                                                      )
                                                   
                                                   
                                                      
                                                         ∑
                                                         z
                                                      
                                                      P
                                                      
                                                         (
                                                         
                                                            B
                                                            q
                                                         
                                                         |
                                                         
                                                            I
                                                            z
                                                         
                                                         )
                                                      
                                                      
                                                         P
                                                         j
                                                      
                                                      
                                                         (
                                                         
                                                            I
                                                            z
                                                         
                                                         )
                                                      
                                                   
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           where j is the index of the RL iteration.

Considering 
                              
                                 
                                    B
                                    
                                       
                                       ′
                                    
                                 
                                 =
                                 
                                    ∑
                                    z
                                 
                                 P
                                 
                                    (
                                    
                                       B
                                       q
                                    
                                    |
                                    
                                       I
                                       z
                                    
                                    )
                                 
                                 
                                    P
                                    j
                                 
                                 
                                    (
                                    
                                       I
                                       z
                                    
                                    )
                                 
                              
                            to be the predicted blurry image according to the current estimation of clear image Ij
                            (a more workable notation for Pj
                           (Iz
                           )), define 
                              
                                 P
                                 
                                    (
                                    
                                       B
                                       q
                                    
                                    |
                                    
                                       I
                                       z
                                    
                                    )
                                 
                                 =
                                 P
                                 S
                                 F
                                 
                                    (
                                    q
                                    ,
                                    z
                                    )
                                 
                              
                           ), and use 
                              
                                 
                                    E
                                    q
                                 
                                 =
                                 
                                    
                                       B
                                       q
                                    
                                    
                                       B
                                       q
                                       
                                          
                                          ′
                                       
                                    
                                 
                              
                            to denote the residual errors between the real and predicted blurry image, we get 
                              
                                 
                                    ∑
                                    q
                                 
                                 P
                                 
                                    (
                                    
                                       B
                                       q
                                    
                                    |
                                    
                                       I
                                       p
                                    
                                    )
                                 
                                 
                                    
                                       P
                                       (
                                       
                                          B
                                          q
                                       
                                       )
                                    
                                    
                                       
                                          ∑
                                          z
                                       
                                       P
                                       
                                          (
                                          
                                             B
                                             q
                                          
                                          |
                                          
                                             I
                                             z
                                          
                                          )
                                       
                                       
                                          P
                                          j
                                       
                                       
                                          (
                                          
                                             I
                                             z
                                          
                                          )
                                       
                                    
                                 
                                 =
                                 
                                    ∑
                                    q
                                 
                                 P
                                 
                                    (
                                    
                                       B
                                       q
                                    
                                    |
                                    
                                       I
                                       p
                                    
                                    )
                                 
                                 
                                    E
                                    q
                                    j
                                 
                              
                           . If the isoplanatic condition holds, i.e., PSF is spatially invariant or PSF(q, z) is the same for all q, 
                              
                                 
                                    B
                                    
                                       
                                       ′
                                    
                                 
                                 =
                                 
                                    ∑
                                    z
                                 
                                 P
                                 
                                    (
                                    
                                       B
                                       q
                                    
                                    |
                                    
                                       I
                                       z
                                    
                                    )
                                 
                                 
                                    P
                                    j
                                 
                                 
                                    (
                                    
                                       I
                                       z
                                    
                                    )
                                 
                                 =
                                 
                                    I
                                    j
                                 
                                 ⊗
                                 P
                                 S
                                 F
                                 ,
                              
                            and ∑
                              q
                           
                           P(Bq
                           |Ip
                           )Eq
                            becomes PSF⋆Eq
                           , where ⋆ and ⊗ are the correlation and convolution operators, respectively (note that the summation index in the generation of predicted blurry image, 
                              
                                 
                                    B
                                    
                                       
                                       ′
                                    
                                 
                                 ,
                              
                            is z, and that for the integration of errors, E, is q). Hence, (8) becomes 
                              
                                 
                                    I
                                    
                                       j
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    I
                                    j
                                 
                                 ×
                                 P
                                 S
                                 F
                                 ☆
                                 
                                    B
                                    
                                       
                                          I
                                          j
                                       
                                       ⊗
                                       P
                                       S
                                       F
                                    
                                 
                                 =
                                 
                                    I
                                    j
                                 
                                 ×
                                 P
                                 S
                                 F
                                 ☆
                                 
                                    E
                                    j
                                 
                                 ,
                              
                            where 
                              
                                 
                                    E
                                    j
                                 
                                 =
                                 
                                    B
                                    
                                       
                                          I
                                          j
                                       
                                       ⊗
                                       P
                                       S
                                       F
                                    
                                 
                              
                           . In a two-dimensional space, this isoplanatic condition implies a symmetry condition in the positive region. Although such an assumption may introduce bias when the inefficiency distribution is asymmetric, it circumvents issues raised by the asymmetric assumption such as the wrong skewness problem and improves the estimation accuracy regarding the rankings.

In the context of inefficiency estimation, the inefficiency u and the residual ϵ could be identified as the clear image I and the blurry image B, respectively, and the noise v could be modelled as PSF. Thus, the iterative RL algorithm could be reformed as

                              
                                 (9)
                                 
                                    
                                       
                                          u
                                          i
                                          
                                             j
                                             +
                                             1
                                          
                                       
                                       =
                                       
                                          u
                                          i
                                          j
                                       
                                       ×
                                       v
                                       ☆
                                       
                                          
                                             ϵ
                                             i
                                          
                                          
                                             
                                                u
                                                i
                                                j
                                             
                                             ⊗
                                             
                                                v
                                                i
                                             
                                          
                                       
                                       ,
                                    
                                 
                              
                           
                        

The inefficiency estimation problem can be viewed as a projection of the image processing problem from the three dimension to a two-dimensional space. In image processing, the disturbance of pixel i on pixel j is dependent on the distance measuring their physical locations, while such disturbance is dependent on the distance measuring the similarities between the operational and managerial structures of the firms in inefficiency estimation. The iid (independent and identically distributed) condition is traditionally assumed using conventional efficiency estimation methods, while no particular assumption is needed when RL is used, assuring its accuracy and applicability.

In the blind form of the RL algorithm, PSF (i.e., v here) is unknown and is iteratively estimated together with u. Let m be the index of the blind iteration, j be the index of the Richardson–Lucy iteration, and i be the index of firms, the iterative estimation procedure of the RLb algorithm is summarized step by step below and illustrated in Fig. 1
                           . The iterative process endows RLb the ‘blindness’ which assures its non-parametric property.

                              
                                 •
                                 Step 1: Initialize 
                                       
                                          
                                             v
                                             0
                                          
                                          =
                                          1
                                       
                                     and 
                                       
                                          
                                             u
                                             0
                                          
                                          =
                                          
                                             ϵ
                                          
                                       
                                    
                                 

Step 2: For the mth blind iteration, do the following RL iteration steps until convergence:

                                       
                                          -
                                          Step 2.1: Estimate v for a specified number (
                                                
                                                   j
                                                   +
                                                   1
                                                
                                             ) of RL iterations: do the jth RL iteration to find v for 
                                                
                                                   j
                                                   +
                                                   1
                                                
                                              iterations, i.e., 
                                                
                                                   
                                                      v
                                                      m
                                                      
                                                         j
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                
                                              assuming u is known from the 
                                                
                                                   m
                                                   −
                                                   1
                                                
                                              iteration.

                                                
                                                   (10)
                                                   
                                                      
                                                         
                                                            v
                                                            
                                                               m
                                                            
                                                            
                                                               j
                                                               +
                                                               1
                                                            
                                                         
                                                         =
                                                         
                                                            v
                                                            
                                                               m
                                                            
                                                            j
                                                         
                                                         ×
                                                         
                                                            u
                                                            
                                                               m
                                                               −
                                                               1
                                                            
                                                         
                                                         ☆
                                                         
                                                            
                                                               ϵ
                                                               i
                                                            
                                                            
                                                               
                                                                  u
                                                                  
                                                                     i
                                                                     ,
                                                                     m
                                                                     −
                                                                     1
                                                                  
                                                               
                                                               ⊗
                                                               
                                                                  v
                                                                  
                                                                     m
                                                                  
                                                                  j
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          

Step 2.2: Estimate u for the same number (
                                                
                                                   j
                                                   +
                                                   1
                                                
                                             ) of RL iterations: do the jth RL iteration to find u for 
                                                
                                                   j
                                                   +
                                                   1
                                                
                                              iterations, i.e., 
                                                
                                                   
                                                      u
                                                      m
                                                      
                                                         j
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                
                                              given that vm
                                              is evaluated from the full iteration of (10).

                                                
                                                   (11)
                                                   
                                                      
                                                         
                                                            u
                                                            
                                                               i
                                                               ,
                                                               m
                                                            
                                                            
                                                               j
                                                               +
                                                               1
                                                            
                                                         
                                                         =
                                                         
                                                            u
                                                            
                                                               i
                                                               ,
                                                               m
                                                            
                                                            j
                                                         
                                                         ×
                                                         
                                                            v
                                                            m
                                                         
                                                         ☆
                                                         
                                                            
                                                               ϵ
                                                               i
                                                            
                                                            
                                                               
                                                                  u
                                                                  
                                                                     i
                                                                     ,
                                                                     m
                                                                  
                                                                  j
                                                               
                                                               ⊗
                                                               
                                                                  v
                                                                  m
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          

Step 3: Iterate the blind iterations until convergence.

The RLb algorithm (or RL) minimizes the difference between the original and predicted degraded signals, i.e., 
                              
                                 arg
                                 
                                    min
                                    j
                                 
                                 
                                    (
                                    
                                       ϵ
                                       i
                                    
                                    −
                                    
                                       
                                          ϵ
                                          ^
                                       
                                       i
                                    
                                    )
                                 
                                 ,
                              
                            per pixel with convergence proven in (Irani & Peleg, 1991; Lucy, 1974), allowing it to identify the optimal inefficiency at each single point (e.g., for each firm at each time point in a panel setting). However, this does not guarantee it to find the global minimum if the frontier function is not convex. In inefficiency estimation, the frontier is most often either parametrically determined or non-parametrically constrained to be convex, resulting in a convex function ϵ
                              i
                           . Under this context, RLb is guaranteed to find the global optimal at each data point. In cases where the frontier is non-parametrically determined and non-convex, additional techniques are needed to form an improved version of RLb which will be the next step. An initial guess of v
                           0 is required to start the algorithm, which is specified as 1’s with the same dimension as the residuals here.

The RLb algorithm requires non-negative inputs. For which, we add a large enough positive constant M to the inputs and subtract the deconvoluted M afterwards. Note that M is an arbitrary constant which does not have any particular meaning, so as to the deconvoluted M. The results are independent of the choice of M as tested by simulations. Mathematically, the property of translation invariance is shown below:

                              
                                 (12)
                                 
                                    
                                       
                                          
                                             
                                                ∵
                                                ϵ
                                                (
                                                
                                                   x
                                                   i
                                                
                                                +
                                                M
                                                )
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                u
                                                (
                                                
                                                   x
                                                   i
                                                
                                                +
                                                M
                                                )
                                                ⊗
                                                v
                                                ,
                                                M
                                                >
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (13)
                                 
                                    
                                       
                                          
                                             
                                                =
                                                u
                                                
                                                   (
                                                   
                                                      x
                                                      i
                                                   
                                                   )
                                                
                                                ⊗
                                                v
                                                +
                                                u
                                                
                                                   (
                                                   M
                                                   )
                                                
                                                ⊗
                                                v
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (14)
                                 
                                    
                                       
                                          
                                             
                                                =
                                                ϵ
                                                
                                                   (
                                                   
                                                      x
                                                      i
                                                   
                                                   )
                                                
                                                +
                                                ϵ
                                                
                                                   (
                                                   M
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (15)
                                 
                                    
                                       
                                          
                                             
                                                ∴
                                                ϵ
                                                (
                                                
                                                   x
                                                   i
                                                
                                                )
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                ϵ
                                                
                                                   (
                                                   
                                                      x
                                                      i
                                                   
                                                   +
                                                   M
                                                   )
                                                
                                                −
                                                ϵ
                                                
                                                   (
                                                   M
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (16)
                                 
                                    
                                       
                                          
                                             
                                                u
                                                (
                                                
                                                   x
                                                   i
                                                
                                                )
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                u
                                                
                                                   (
                                                   
                                                      x
                                                      i
                                                   
                                                   +
                                                   M
                                                   )
                                                
                                                −
                                                u
                                                
                                                   (
                                                   M
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where x
                           
                              i
                            is the input of firm i, v is the noise, ϵ(x
                           
                              i
                           ) and u(x
                           
                              i
                           ) are the corrected composite error and firm-specific inefficiency of firm i.

The performance of RLb is compared with the efficiency decomposition method used in StoNED, i.e., method of moments (MM). The second and third stages are estimated together in MM. In particular, the variance parameters 
                           
                              
                                 σ
                                 u
                                 2
                              
                              ,
                           
                        
                        
                           
                              σ
                              v
                              2
                           
                         are estimated based on the skewness of the CNLS residuals obtained from Stage 1 with additional distributional assumptions, and the conditional expected values of inefficiencies are computed given the parameter estimates of 
                           
                              σ
                              u
                              2
                           
                         and 
                           
                              σ
                              v
                              2
                           
                         (details provided in Kuosmanen & Kortelainen, 2012). Thereby, the inefficiencies estimated from ε using RLb and MM are 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                    ,
                                    R
                                    L
                                    b
                                 
                              
                              =
                              
                                 u
                                 
                                    i
                                    ,
                                    R
                                    L
                                    b
                                 
                              
                              +
                              μ
                           
                         and u
                        
                           i, MM
                        , respectively. To make RLb and MM comparable and exclude the influence of other algorithms such as HS on performance evaluation, we assume 
                           
                              μ
                              =
                              0
                           
                         in the simulations and remove μ in the empirical study by (17), where 
                           
                              μ
                              =
                              
                                 
                                    
                                       u
                                    
                                    ¯
                                 
                                 
                                    R
                                    L
                                    b
                                 
                              
                              −
                              
                                 
                                    u
                                    ¯
                                 
                                 
                                    R
                                    L
                                    b
                                 
                              
                           
                         and 
                           
                              
                                 
                                    u
                                    ¯
                                 
                                 
                                    R
                                    L
                                    b
                                 
                              
                              =
                              
                                 
                                    u
                                    ¯
                                 
                                 
                                    M
                                    M
                                 
                              
                           
                         (note that 
                           
                              
                                 v
                                 ¯
                              
                              =
                              E
                              
                                 (
                                 v
                                 )
                              
                              =
                              0
                           
                         leads to 
                           
                              
                                 u
                                 ¯
                              
                              =
                              
                                 v
                                 ¯
                              
                              −
                              
                                 
                                    ɛ
                                 
                                 ¯
                              
                              −
                              μ
                              =
                              −
                              
                                 
                                    ɛ
                                 
                                 ¯
                              
                              −
                              μ
                           
                        ; thus 
                           
                              u
                              ¯
                           
                         is independent of the estimation method, i.e., 
                           
                              
                                 
                                    u
                                    ¯
                                 
                                 
                                    R
                                    L
                                    b
                                 
                              
                              =
                              
                                 
                                    u
                                    ¯
                                 
                                 
                                    M
                                    M
                                 
                              
                           
                        ).

                           
                              (17)
                              
                                 
                                    
                                       
                                          
                                             u
                                             
                                                i
                                                ,
                                                R
                                                L
                                                b
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   i
                                                   ,
                                                   R
                                                   L
                                                   b
                                                
                                             
                                             −
                                             μ
                                          
                                       
                                    
                                    
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   i
                                                   ,
                                                   R
                                                   L
                                                   b
                                                
                                             
                                             −
                                             
                                                (
                                                
                                                   
                                                      
                                                         u
                                                      
                                                      ¯
                                                   
                                                   
                                                      R
                                                      L
                                                      b
                                                   
                                                
                                                −
                                                
                                                   
                                                      u
                                                      ¯
                                                   
                                                   
                                                      R
                                                      L
                                                      b
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   i
                                                   ,
                                                   R
                                                   L
                                                   b
                                                
                                             
                                             −
                                             
                                                (
                                                
                                                   
                                                      
                                                         u
                                                      
                                                      ¯
                                                   
                                                   
                                                      R
                                                      L
                                                      b
                                                   
                                                
                                                −
                                                
                                                   
                                                      u
                                                      ¯
                                                   
                                                   
                                                      M
                                                      M
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

We designed two sets of simulations to assess the performance of the RLb method with a sample size of 100 for each simulation. The first set of simulations are analogous to (Aigner et al., 1977), with the scenarios designed for different signal to noise ratios (
                           
                              λ
                              =
                              
                                 
                                    σ
                                    u
                                 
                                 
                                    σ
                                    v
                                 
                              
                           
                        ). The second simulation set is an extension of the first one, with the aim of testing the influence of different distributional assumptions on the inefficiency term and data heteroscedasticity on the estimation accuracy. Four distributions in addition to the half normal distribution, including three continuous densities conventionally assumed for the inefficiency term (‘truncated normal’, ‘gamma’, ‘exponential’ Kuosmanen & Kortelainen, 2012) and one discrete distribution (‘Poisson’). The noise term was assumed to follow normal distribution, with zero mean and a variance of 0.3. The signal to noise ratio in the second simulation set was set to the middle value (
                           
                              λ
                              =
                              1.24
                           
                        ) of the first simulation set under all scenarios. Groupwise heteroscedasticity was generated for each heterscedastic data. Particularly, four equally divided sub-populations were generated, with consecutive data points being grouped together in their generic order (i.e., the first 25 data points belong to subgroup 1, points 26 to 50 belong to subgroup 2, and so on). The RLb method and MM (assuming half normal distribution for the inefficiency term) were applied to each scenario, with 100 iterations (Table 1
                        ).

Each scenario is given a four-digit name. The first letter is the initial of the inefficiency distribution, i.e., ‘H’, ‘T’, ‘G’, ‘E’, ‘P’ are short for the half normal, truncated normal, gamma, exponential and Poisson distribution, respectively. The second digit shows the signal to noise ratio, which is represented by λ and defined as 
                           
                              λ
                              =
                              
                                 
                                    σ
                                    u
                                 
                                 
                                    σ
                                    v
                                 
                              
                              ,
                           
                         with 2, 1, 0 representing the high, moderate and low levels, respectively. Here, this statistic is taken from (Aigner et al., 1977), i.e., 2 is equivalent to 
                           
                              λ
                              =
                              1.66
                              ,
                           
                         1 means 
                           
                              λ
                              =
                              1.24
                              ,
                           
                         and 0 is short for 
                           
                              λ
                              =
                              0.83
                           
                        . The third character indicates whether the data is heteroscedastic, where ‘−’ and ‘+’ each means without and with heteroscedasticity. The last number shows the constant 
                           
                              u
                              ˜
                           
                         which is 0 here.

Mean squared error (MSE) was used to measure the performance of the algorithm, which is defined as

                           
                              (18)
                              
                                 
                                    
                                       
                                          
                                             MSE
                                             
                                                μ
                                                u
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                1
                                                N
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         μ
                                                         ^
                                                      
                                                      
                                                         u
                                                         i
                                                      
                                                   
                                                   −
                                                   
                                                      μ
                                                      
                                                         u
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                2
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             MSE
                                             
                                                σ
                                                u
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                1
                                                N
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         σ
                                                         ^
                                                      
                                                      
                                                         u
                                                         i
                                                      
                                                   
                                                   −
                                                   
                                                      σ
                                                      
                                                         u
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                2
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       
                                          
                                             MSE
                                             λ
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                1
                                                N
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ^
                                                      
                                                      i
                                                   
                                                   −
                                                   
                                                      λ
                                                      i
                                                   
                                                   )
                                                
                                                2
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where μu
                         (mean of u), σu
                         (standard deviation of u) and 
                           
                              λ
                              =
                              
                                 
                                    σ
                                    u
                                 
                                 
                                    σ
                                    v
                                 
                              
                           
                         (signal to noise ratio) are estimated over 100 iterations for each simulated scenario, and i is the index of the data points which is 100 in this study, i.e., N = 100. In addition, we counted the number of non-valid and zero estimates from both methods to assess their performance.

@&#RESULTS AND DISCUSSIONS@&#

The statistics of the two sets of simulation results are summarized in Tables 2
                         and 3
                        . The estimated and true inefficiencies are plotted against each other in Figs. 2
                         and 3, where NA or zeros estimated using MM are excluded when drawing plots or computing the statistics.

As observed from Tables 2 and 3, no NA or zero value was produced using the RLb method, whereas in the case of MM such non-valid estimates were unavoidable and present throughout the simulations. The number of NAs increases with the level of inefficiencies (as represented by λ as σv
                            is invariant here) using MM, which indicates the severity of the wrong skewness problem when estimating large inefficiencies using conventional methods such as MM. Such problems become worse when the distribution of the inefficiency is incorrectly assumed, e.g., almost 90% of the MM estimates are non-valid for gamma and Poisson distributional assumptions even with modest inefficiency levels (Table 3). In contrast, the number of zeros increases as the inefficiency decreases, which suggests of the poor performance of MM in identifying inefficiencies with low kurtosis. This problem is particularly severe under truncated normal assumption, with around half zero estimates being generated with modest λ (Table 3). These problems could be well circumvented by the RLb method, because of its ‘blindness’ to the inefficiency distribution as described below.

The RLb is insensitive to distribution assumptions, and it always produces better estimates than MM, even with the NA and zero values removed. The RLb method works particularly well when the distribution of inefficiencies is assumed to be truncated normal (Fig 3 (b and c)). Note that the RLb algorithm assumes isoplanatic conditions for both u and v which is analogous to the symmetric distributional assumption of u in a two-dimensional space. This leads to the less biased results in the case of a truncated normal distribution, where the density contains symmetric parts in the non-negative region. The MSE of the RLb estimates (μu
                           ) are larger than those from MM, which, however, has a much lower MSE of the standard deviation of inefficiencies (σu
                           ) and λ than does MM (Table 3). Given the isoplanatic constraints on u using RLb, this bias may vanish when the shape parameter k > 1 (
                              
                                 k
                                 =
                                 1
                              
                            here). In the rest of our study cases, both RLb and MM overestimate the inefficiencies, though the estimates from RLb deviate less from the true values than do those from MM.

The RLb method is more robust to data noise than MM. The distances between the RLb estimates and the true inefficiencies remain almost invariant, whereas those for MM changes linearly with λ. With σv
                            staying invariant, λ increases with the level of inefficiencies. The divergence of the MM estimates from the true inefficiencies increases with the inefficiency level, which is greater than that of the RLb method even at the scenario with the lowest λ (Fig. 2(c)). When an explicit intercept term is extracted from the model (
                              
                                 y
                                 =
                                 1
                                 +
                                 
                                    ɛ
                                 
                              
                           ), the estimates from the RLb method are shifted by the intercept term, i.e., upwards by one here (Table 2), with no obvious change in σu
                            or λ. These results indicate that the RLb method does not remove constant errors such as the difference between the estimated and true frontier (
                              
                                 f
                                 
                                    (
                                    x
                                    )
                                 
                                 −
                                 
                                    f
                                    ^
                                 
                                 
                                    (
                                    x
                                    )
                                 
                              
                           ) and that the accuracy of inefficiency recovery depends on the frontier estimation accuracy. Additionally, these findings demonstrate the robustness of the RLb method to sources of data noise. Enlarging or shrinking the inefficiency term (assume 
                              
                                 
                                    u
                                    ☆
                                 
                                 =
                                 u
                                 +
                                 1
                              
                           ) by a constant does not considerably change the standard deviation of the estimates or the signal to noise ratio (λ). Note that when the distribution of inefficiencies is discrete (i.e., Poisson here), MM performs poorly, with outrageously large estimated standard deviations and a considerable overestimation of the inefficiencies observed here. Thereby, RLb outperforms MM in its consistent estimation under various distributional assumptions of the inefficiency term. RLb can produce unbiased results when the inefficiency distribution has a symmetric part in the positive region, and it may overestimate the inefficiencies when such symmetry does not exist.

The RLb method is insensitive to data heteroscedasticity. As observed from Table 3, the MSEs of μu, σu
                            and λ are almost invariant for RLb estimates between data with and without heteroscedasticity, and these statistics are considerably larger for heterscedastic data than homoscedastic data for MM estimates.

To assess whether and to what extent the use of RLb instead of MM affects the results in a real world application, RLb is applied to Finnish electricity distribution networks, where the residuals from the cost frontier model is used for inefficiency estimation. The cost frontier model is defined in (21),

                        
                           (21)
                           
                              
                                 ln
                                 
                                    x
                                    i
                                 
                                 =
                                 ln
                                 C
                                 
                                    (
                                    
                                       y
                                       i
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       ɛ
                                    
                                    i
                                 
                                 ,
                              
                           
                        
                     where C represents the cost function and is modelled as a function of the output y, and ln  means log e.

The data consists of the six-year average over the period 2005–2010, which is available in the Energy Market Authority (EMA) website (www.emvi.fi). In the cost frontier model, the total cost (x) is used as the single input, three variables, i.e., ‘Energy transmission’ (GWh of 0.4 kV equivalents, y
                        1), ‘Network length’ (km, y
                        2), and ‘Customer number’ (y
                        3), are specified as the outputs (y), and the proportion of the underground cables in the total network length is used as a contextual variable (z) to control the DMUs’ heterogeneity and their operating environment. Specifically, x includes the operational expenditure and half of the interruption cost, and the electricity transmission at different voltage levels is weighted according to the average transmission cost such that lower weight is assigned to high-voltage transmission than low-voltage transmission in y
                        1. The descriptive statistics of the data are listed in Table 4
                        
                        , with more detailed description of the variables and the regulatory application available in (Kuosmanen, 2012).

@&#RESULTS AND DISCUSSIONS@&#

The cost efficiency score is estimated using 
                           
                              C
                              E
                              =
                              exp
                              (
                              
                                 u
                                 i
                              
                              )
                           
                         for each unit i and summarized in Table 5. Except for the top 8 DMUs (according to RLb estimation), all firms are ranked in the same order using RLb and MM. The top 4 firms, i.e., 32, 70, 22 and 56, as ranked by RLb, have no CE score using MM estimation, because the inefficiencies are estimated to be infinite due to numerical problems. Using MM, the CE scores are rather close among the 4 DMUs, i.e., they range from 0.9990 to 0.9986, where the differences are more obvious using RLb, i.e., the DMUs range from 1.1267 to 1.0971. In this model, firm-specific inefficiencies are separated from the expectation of the inefficiency which is caused by environmental influences. A firm can balance such an adverse global impact by adopting superb technological or managerial renovations, thus exhibiting over-efficiencies in terms of firm-specific efficiency. The CE scores are plotted in Fig. 4
                        , where CEs from RLb have larger amplitudes than MM estimates (excluding the infinite estimates), i.e., the standard deviation of the RLb estimates (0.1266) is nearly twice that of MM (0.0678), thus rendering the differences more distinguishable among DMUs. The average CE score is similar between RLb and MM (0.9263 for RLb, 0.9201 for MM), which indicates that the RLb estimates are firm-specific, with μ being adjusted and comparable to those from MM. Moreover, RLb is able to estimate efficiencies without numerical problems and to correctly distinguish firms that have similar CE scores. The sample correlation coefficient is close to 1 for CNLS and RLb inefficiency estimates, and it is 0.9903 when the inefficiencies are estimated using MM. Thus, the perfect correlation between the CNLS residuals and inefficiencies obtained using MM also applies to the RLb estimator. The key merits of RLb are that (1) it is non-parametric; (2) it faces no numerical problems with the outputs, such as values of NA; and (3) it can differentiate similar inefficiencies. Possessing these merits does not affect the principle properties of the outputs, e.g., the ranking order; therefore, a good correlation between inefficiencies obtained using RLb and MM (if not NA) is expected, which supports the precision of RLb given the wide applicability of MM.

@&#CONCLUSIONS@&#

In this study, we deploy a fully non-parametric algorithm, the RL blind deconvolution method, to decompose firm-specific inefficiencies from their composite errors corrected by the expected inefficiency 
                        
                           μ
                           =
                           0
                        
                      in productive efficiency analysis. By comparing the performance of RLb and MM under 13 scenarios assuming 
                        
                           μ
                           =
                           0
                           ,
                        
                      we show that the RLb method outweighs conventional methods such as MM in four tested aspects. First, it never outputs null or zero values due to incorrect skewness or low kurtosis of the inefficiency density. Second, it is insensitive to the distributional assumption of the inefficiency term u, and it does not require any additional assumptions such as iid (independently and identically distributed) samples. Third, it is robust to data noise levels. Fourth, it gives consistent estimates, regardless of data heteroscedasticity. In addition, we applied RLb to the Finland electricity distribution network data set, wherein the efficiencies inestimable using MM are provided and firms with similar efficiency scores are correctly ranked. We are one of the pioneers in applying deconvolution in inefficiency estimation, and we are the first to report a fully non-parametric method for composite error decomposition, compared with other groups, which use kernel deconvolution techniques.

It is worth noting that the RLb algorithm was initially developed to solve image degradation problems in a three-dimensional space. Thus, its utility in panel data warrants further exploration. Additionally, we could extend RLb to solve cases wherein the frontier is non-convex and non-parametrically determined. Despite the advantages of RLb, we should be aware of its sensitivity to frontier estimation error, i.e., the inefficiency estimates are shifted by the difference between the estimated and true frontier. Additionally, the RLb method is not unbiased because of its isoplanatic assumption on u and v. Exploring how to overcome these problems and further improve the estimation accuracy are interesting topics next steps. In addition, applying this more robust tool to solve some empirical problems may offer high practical values and is suggested here for future research.

@&#REFERENCES@&#

