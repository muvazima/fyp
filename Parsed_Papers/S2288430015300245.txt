@&#MAIN-TITLE@&#Cutter-workpiece engagement determination for general milling using triangle mesh modeling

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new method to determine cutter-workpiece engagement geometry in milling.


                        
                        
                           
                           Applicable to general milling processes: all cutter types, in-process workpiece shapes and tool paths containing even self-intersections.


                        
                        
                           
                           Results validated by a series of case studies of increasing machining complexity.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Cutter-workpiece engagement

Machining simulation

General milling

Cutting force

Triangle mesh

@&#ABSTRACT@&#


               
               
                  Cutter-workpiece engagement (CWE) is the instantaneous contact geometry between the cutter and the in-process workpiece during machining. It plays an important role in machining process simulation and directly affects the calculation of the predicted cutting forces and torques. The difficulty and challenge of CWE determination come from the complexity due to the changing geometry of in-process workpiece and the curved tool path of cutter movement, especially for multi-axis milling. This paper presents a new method to determine the CWE for general milling processes. To fulfill the requirement of generality, which means for any cutter type, any in-process workpiece shape, and any tool path even with self-intersections, all the associated geometries are to be modeled as triangle meshes. The involved triangle-to-triangle intersection calculations are carried out by an effective method in order to realize the multiple subtraction Boolean operations between the tool and the workpiece mesh models and to determine the CWE. The presented method has been validated by a series of case studies of increasing machining complexity to demonstrate its applicability to general milling processes.
               
            

@&#INTRODUCTION@&#

Milling is a dynamic machining process in which the in-process workpiece geometry and the instantaneous cutting situation for the cutter change continuously. To date, the ability to design and simulate the planned machining process is emerging as a much needed functionality to effectively control the cutting operation. To simulate the machining process, it essentially involves two steps: geometric modeling and physical modeling. Geometric modeling is the start and its outputs are used as inputs for physical modeling and simulation. One of the most important outputs is the cutter-workpiece engagement (CWE). It bridges the two successive modeling procedures. CWE is the instantaneous contact geometry between the cutter and the in-process workpiece during machining. It defines how each cutting edge entries and exits the workpiece as it rotates during a milling process. In physical modeling and simulation, CWE is the fundamental input parameter for predicting the cutting forces and analyzing the onset of chatter. Researchers have been working on CWE for many years under various modeling framework [1]. However, the application of these existing studies is consistently limited to simple cutter geometry and/or tool path. In this paper, CWE is to be determined for general milling processes that cover all types of cutter, in-process workpiece shape and tool paths containing even self-intersections.

Existing CWE determination methods basically fall under three different strategies. The first strategy analytically calculates the CWE at every tool location along the entire tool path [2–4]. The cutting edges are modeled as spatial curves and at each angular position of cutter, the intersection between the cutting edge curves and the workpiece is calculated to identify the in-cut segments. In the second strategy, the cutter swept volume (CSV) is first generated and used to update the in-process workpiece [5–7]. Then, from the intersection of the cutter or the workpiece with the CSV, the CWE is calculated. The last strategy is to calculate the CWE for intermediate cutter positions along a tool path. In 2005, Larue and Altintas [8] reported a method to place the cutter evenly along the tool path. The result is a set of intersection curves which are then used for CWE determination. Later in 2008, Aras and Yip-Hoi [9] used the removal volume (RV) from the workpiece to extract the CWE. The RV is the material on the workpiece that is machined or removed by the CSV for a specific tool path segment. They mapped the RV to the surface of cutter as the CWE. At approximately the same time, Ferry and Yip-Hoi [10] reported an analytical method using the RV based on a solid modeler. The significance of this work is that the concept of “RV update” is introduced to deal with self-intersecting tool paths, which are quite normal in five-axis milling.

The three strategies mentioned above cover most of the existing methods. The first strategy requires numerous calculations as intersections are calculated at every angular position of the cutter, which is not necessary. The second strategy introduces the concept of CWE geometry which is directly used for physical modeling and simulation. However, it generates too many CSVs and requires lots of calculations between the CSV and the workpiece. The last strategy uses the RV, which is much smaller than the workpiece. Also, RV is consistent with the in-process workpiece update procedure. From the three strategies above, the third strategy is the most suitable one for CWE determination for general milling processes. CSV is to be generated and used to update the workpiece. Meanwhile, RV is obtained. For each interested cutter location along the tool path, the RV is updated first and the CWE can then be extracted.

After the CWE determination strategy is decided, a specific geometric modeling method needs to be selected for implementation. Modeling simplicity, adaptability and accuracy are the main concerns when selecting a suitable geometric modeling method.

Geometric modeling of the CSV is one of the essential tasks and it has been an active research topic for years. Envelope theory is the first CSV generation approach in which the cutter is modeled by explicit or implicit expressions. As the CSV envelope surface is always tangent to the cutter surface during cutter movement, this property forms the basis for CSV generation in the earlier work of Wang and Wang [11], which was later improved by Chiou and Lee [12,13] and Du et al. [14]. Envelope theory provides a solid fundamental concept for CSV generation but is quite computationally expensive. To reduce the computational load, another method named as the imprint method was proposed [15,16]. At each tool location, there exists a curve on the tool surface that describes the contribution of the cutter to the resulting CSV. This curve is the generating curve and represents the imprint of the cutter on the machined surface. To cover a larger variety of cutters, new parametric approaches were created on the basis of canal surfaces [17,18]. Notably, a recent Gauss map based approach was able to solve the tool path self-intersection issue but the application was restricted to specific types of milling cutters [19,20]. The above research studies are based on analytical methods and limited by their underlying assumptions and constraints. It is often not possible to obtain the CSV as a completely closed-form mathematical model. Most methods cannot deal with the tool path self-intersection issue. Because of this, approximate modeling methods provide a viable option for general applications.

Approximate CSV modeling methods typically model the CSV envelope as a triangle mesh [21]. The triangle mesh is considered the most promising representation as it has the following advantages: (1) it models a surface with a set of connected triangles, which transform the 3D surface model into a piecewise linear 2D representation, resulting in simplified intersection calculations; (2) it is able to model the cutter in a closed form and more importantly, it has no limitation on the surface configuration; and (3) it is compatible with most commercial CAD software tools. Hence, in this work, triangle mesh representations are to be used for both cutter and CSV modeling.

Another essential geometric modeling task is the modeling of the in-process workpiece. The instantaneous cutting situation at each cutter location is governed by the interaction between the cutter and in-process workpiece. In the reported research studies, the workpiece has been modeled using solid modeling as well as approximate modeling methods. The solid modeling approach is known for its modeling accuracy. However, for a complex milling process, the overall tool path can consist of thousands of segments and the resulting extensive tool path segment data would make it impractical for implementation. Because of this, various approximate modeling methods for the in-process workpiece have been introduced, including Z-map, normal vector, voxel, dexel and polyhedral representations [22]. The Z-map method is simple to implement and robust [23,24]. It represents the workpiece as a set of Z-axis vectors. Hence, it is impossible to model overhang geometry and inaccurate to represent vertical walls or sharp edge features. To overcome this deficiency, Jerard et al. [25] and Park et al. [26] employed normal vectors to model the workpiece. The latest discrete vector modeling approach was the triple dexel model [27], extended from the single dexel model (which is functionally the same as the Z-map model). The triple dexel method models the workpiece using discrete vectors in three orthogonal directions. The dexels are trimmed with each milling tool path segment and the in-process workpiece is then reconstructed as a triangle mesh surface model.

From the existing research studies, it is noted that in-process workpiece modeling is not a simple task and challenges still remain. One promising modeling method is to model the in-process workpiece as a triangle mesh model. Unlike other approximate modeling methods, triangle mesh is the only method that directly represents the workpiece as a closed manifold model. It is geometrically isotropic and thus able to represent surface details in any direction. It has no limitation on feature preservation even with overhang geometry, vertical walls or sharp edges. Also, when the CSV and the workpiece are both modeled as triangle meshes, the intersection Boolean operation will only involve triangle-to-triangle calculations. Many of these intersections contribute to sharp features in the workpiece and an accurate representation can be generated.

As discussed above, triangle mesh is to be used for both CSV and in-process workpiece modeling in this work. The detailed procedure to determine the CWE is depicted in 
                     Fig. 1. First, the cutter model and the workpiece model are both triangulated. Then, a CSV #1 is generated for a tool path segment. A Boolean operation between the workpiece and CSV #1 is taken to update the workpiece and obtain the RV of CSV #1. If the CWE is needed at any tool location of the tool path segment, a CSV #2, which corresponds to the CSV from the beginning of the tool path segment to the current cutter location, is generated. CSV #2 is used to update the RV to avoid overestimating the CWE when the tool path segment contains self-intersections. The final step is to identify the overlap between the cutter at the current location and the updated RV as the CWE. In the following sections of this paper, the CSV generation and in-process workpiece update as well as CWE determination will be presented in detail.

Cutter swept volume (CSV) is the spatial volume the cutter occupies during machining movement between two cutter location (CL) points. It can be difficult to generate due to complex cutter geometry and/or multi-axis tool path. As shown in Fig. 1, in-process workpiece update is essentially a subtraction Boolean operation between the workpiece model and CSV model. The authors have previously presented a geometric modeling method based on the triangle mesh to model the CSV and updated workpiece [28]. The method is applicable to general milling processes and summarized below.

The first step to generate the CSV is to establish a cutter model. There are several practical milling cutters including the flat-end mill, ball-end mill, fillet-end mill and tapered ball-end mill. Each of these cutters has its own unique geometric features. Many researchers have dealt with the different features individually and their developed methods are thus restricted to the specific types of cutters. To be applicable to all types of cutters, the cutter needs to be modeled without considering the geometric features. A triangle mesh based cutter model models the cutter surface as a set of connected triangles as shown in 
                        Fig. 2(a). The triangle size, which is the average triangle edge, is user-selected. Ideally, the triangle size should be selected as small as possible to minimize the deviation from the exact cutter geometry. However, small triangle size leads to numerous triangles, which slows down the involved calculations. So in practice, the triangle size is selected to balance the modeling accuracy and calculation time.

The second step is to generate a point cloud representation of the CSV between two CL points. The cutter is placed at both CL points and linear interpolation is applied to sample the cutter movement between the two CL points. The number of sampled cutter locations should be chosen such that the distance between them is about the selected triangle size. This results in a very large point cloud with most of its points lying inside the CSV. A developed point cloud filter, based on the tangent condition of the CSV envelope and derived from the normal vector at each point and the cutter feed direction, is then employed to remove the redundant points [28]. After the filtering operation, the desired surface point cloud of the CSV is obtained as shown in Fig. 2(b).

The last step is to construct the CSV mesh model from the filtered point cloud. The involved triangle mesh surface reconstruction is an active research topic. Numerous methods have been developed and reported in the literature. As part of the filtered point cloud may still lie inside the envelope surface of the CSV for self-intersecting tool paths, the ball-pivoting algorithm [29] is employed to construct the CSV triangle mesh model. After the envelope surface of the CVS has been constructed, the inside isolated points are deleted. The constructed CSV can be either CSV #1 or CSV #2 in Fig. 1 and is ready to update the workpiece or RV.

Like the cutter model, the in-process workpiece model is a triangle mesh model. Update of the in-process workpiece model is essentially a subtraction Boolean operation between the workpiece mesh model and the CSV mesh model. One important advantage of triangle mesh modeling is that it is isotropic and thus able to preserve geometric details in all directions. When performing the subtraction Boolean operation, the intersection points between the workpiece and CSV mesh models must be accurately calculated in order to retain sharp machined features on the updated workpiece. As both mesh models contain many more triangles than those that are actually intersecting with the other mesh model, an exhaustive search would make the computational time unacceptably long. So, the first step is to select a small portion of the triangles that may involve in the intersection of the mesh models. The octree space partitioning algorithm was applied to narrow down the number of intersecting triangle candidates.

The second step is to perform the intersection calculations between the two sets of triangle candidates from the workpiece and CSV mesh models, respectively. An existing algorithm is employed to quickly identify the two intersection points [30]. After the intersection calculation is done, all the intersecting triangles are deleted. Both the workpiece and CSV mesh models are then become disconnected patches. Some triangle mesh patches from the workpiece model and some from the CSV model remain for the updated workpiece model and the redundant patches are removed. The last step stitches the gap between the remained triangle mesh patches using all the intersection points to build the closed manifold triangle mesh model of the updated in-process workpiece [28].


                        
                        Fig. 3 shows an example of the Boolean operation of a 2D mesh A subtracting a 2D mesh B. Different colors are used for better illustration. Initially, all edge vertices of A and B are white. Fig. 3b shows the result of edge classification using the octree space partition algorithm. Black edges indicate the edges are outside the other mesh model, red edges are inside, and green edges are the intersecting edge candidates. The inside part of A and outside part of B are removed. By processing the intersection of the green edges, intersection points are added as the small dark purple triangles in Fig. 3c and d shows the resulting mesh C after stitching the remained mesh patches through the intersection points. Let A represent the workpiece and B the CSV. C is then the updated workpiece. This Boolean operation is also the same for updating the RV for CWE determination.

In this work, the CWE at a given cutter location is to be determined for general milling processes regardless of the cutter type, in-process workpiece geometry, and tool path. The CWE determination process and its features are to be presented in detail in the following subsections.

In Section 3, the in-process workpiece is updated by performing a subtraction Boolean operation between the in-process workpiece and the CSV models. As shown in the CWE determination procedure (Fig. 1), an intersection Boolean operation is also performed at the same time to generate the removal volume (RV). RV is the workpiece material that has been removed by the cutter and will be used for determining the CWE. Compared to the workpiece, the RV is of relatively small size. For geometrically simple three-axis milling processes, the RV and the cutter can be used for CWE determination directly. If it comes to the complex five-axis milling processes, the RV needs to be updated before the CWE can be determined. This is because if the tool path has self-intersections, the cutter will move through the same region on the RV more than once. In other words, parts of the current intersection area between the RV and the cutter may have already been removed by the previous cutter movement and does not contribute to the current CWE. To avoid this type of errors, the RV needs to be updated before determining the current intersection area for the CWE.

The RV update and CWE determination procedure is depicted in 
                        Fig. 4. The RV (in yellow) is first generated by a cutter movement of a linear tool path segment. To determine the CWE at a cutter location within the tool path segment, another CSV (denoted as CSV #2 in Fig. 1) is generated from the start of the tool path segment to the current cutter location. By performing a subtraction Boolean operation between the RV and CSV #2, the RV is updated to the current cutter location. The update RV eliminates the possible interference with previous cutter movements and makes sure that the intersection or common area between the cutter and updated RV is exactly the part on the cutter that is engaging to cut the workpiece material, known as the CWE area. It should be noted that in updating the RV, the RV and CSV #2 share the same tool path. As a result, parts of their surfaces overlap. This makes the subtraction Boolean operation between them impossible to be performed. To overcome this problem, CSV #2 needs to be expanded a little in its surface normal directions in advance.

As shown in the last step of Fig. 4, the cutter and the updated RV share some surface contact area. The shared contact area is the defined CWE area. Contact area is difficult to compute. As a result, a procedure to transform the contact area into an intersection area is adopted in this work. One consequence of the CSV #2 expansion in Section 4.1 is that there is now a gap between the cutter at its current location and the updated RV. To determine the CWE area successfully, another small expansion of the cutter model in its surface normal directions is required. This expansion should be a bit larger than the previous expansion on CSV #2 so that the gap can be filled and intersection between the cutter and the updated RV can be formed. After the cutter model expansion, the same intersection calculation as that for the workpiece update is applied. By calculating the triangle-to-triangle intersections, the result is a set of points representing the boundary of the intersection area. It should be pointed out that the intersection points are actually on the surface of the expanded cutter instead of the original cutter. As a result, some errors are introduced to the resulting CWE diagram. The influence and properties of these errors are to be analyzed and discussed after the case studies in Section 5.2.

The set of boundary points for the 3D CWE geometry obtained in the previous section is not usable for cutting mechanics and dynamics simulation. They have to be transformed and mapped into a certain data format in order to be directly used to simulate the cutting physics. The typical data format required of the CWE is in the form of the height of a cutting edge element with respect to the cutter tip versus its cutting rotational angle. Hence, every CWE boundary point obtained from Section 4.2 corresponds to either the entry or exit angle of cutting for a cutting edge element at a specific height to the cutter tip. All the point data together form the required CWE diagram to enable the physical machining simulation.

The CWE mapping process starts by setting up a Cartesian cutter coordinate system with the origin at the cutter tip. The z axis is the cutter axis. By defining the plane containing the cutter axis and the feed direction at the cutter tip as the xz plane with the x axis pointing towards the feed direction, the cutter coordinate system is set up. For each CWE boundary point obtained in Section 4.2, its coordinates are first transformed from the original workpiece coordinate system to the cutter coordinate system. As shown in 
                        Fig. 5, the transformed z coordinate then becomes the axial height to the cutter tip, commonly called the axial depth of cut (h) in the CWE diagram. Next, the point is connected to its projected point on the z axis, the angle from the y axis to the connected line becomes the immersion angle (
                           ϕ
                        ) in the CWE diagram. This procedure is repeated for all the CWE boundary points and the CWE diagram is then obtained and ready to be used for machining physics simulation.

It should be noted here that the immersion angles for all the CWE boundary points are calculated in the same cutter coordinate system at the cutter tip. This implies that consistent feed directions along the cutter axis are assumed. This assumption is valid for three-axis cutter movements. However, in five-axis milling along a curved tool path, rotational cutter movements would make the feed directions vary along the cutter axis. In other words, the actual immersion angle of the each CWE boundary point should be calculated individually according to its specific feed direction. For simplicity, a consistent feed direction is assumed along the cutter axis as the variation is found to be relatively small and only has minor effects on the resulting CWE diagram.

To demonstrate the usage and performance of the presented method for CWE determination in general milling processes, six case studies with increasing machining complexity have been carried out. In each case study, two or three CWE diagrams were generated. The high performance results were derived from mesh models with relatively small triangle size while the normal performance results were from relatively large triangle size. The analytical results could be obtained for simple machining cases only and served as references. The importance and necessity of updating the RV and the error analysis of the resulting CWE diagram were also included in this section.

The first three case studies are of relatively simple cutting geometry in which only horizontal cutter movements are involved. Figs. 6–8 show the face milling, profile milling, and horizontal ball-end milling processes. The cutter diameter and average mesh triangle size for normal/high performance calculations were respectively 100/1.53/0.77mm, 20/0.78/0.30mm, 15/0.31/0.12mm. 
                        
                        
                        Figs. 6a, 7a and 8a depict the milling geometry and how the CWE is determined. The cutter model is in dark blue. The light blue part is the to-be-updated workpiece geometry with the green surface representing the newly machined surface. The yellow part is the updated RV. As shown in Figs. 6b, 7b and 8b, the determined CWE diagrams are quite close to the exact analytical results. The small deviations are expected and come from the expansion of the cutter model when the cutter is to intersect the updated RV to generate the CWE boundary points as discussed in Section 4.2. The expansion caused the CWE boundary points to deviate a bit from the cutter surface, leading to the small deviations in the CWE diagrams. As noted in the figures, the deviations mainly occur around 0° and 180°. This is because around these angles, the cutter surface is almost tangential to the updated RV surface. Due to the tangential situation, the small expansion of the cutter model would generate relatively large deviations in the corresponding immersion angle 
                           ϕ
                        .

As discussed in Sections 4.1 and 4.2, both the CSV #2 and the cutter models need to be expanded in order for the associated Boolean operations to be performed successfully. Theoretically, the expansion can be infinitesimally small. However, as the envelope surface of CSV #2 is generated from a point cloud as a triangle mesh surface, it is only an approximate of the ideal CSV #2. The unsmooth surface of CSV #2 prevents the RV update from being successful when the imposed expansion is too small. Since the triangle size of the cutter model affects the smoothness of the envelope surface of both CSV #2 and RV, it also governs the needed level of expansion. The expansion amount is thus defined as a percentage of the average triangle size. It has been found from extensive tests that 1–10% of the average triangle size is deemed suitable.

The first three case studies have demonstrated that the presented method is able to generate accurate CWE diagrams under relatively simple cutting geometry, especially when the cutter immersion angle is not near the cutter surface being tangential to the updated RV surface. In addition, better accuracy can be achieved by utilizing mesh models with smaller triangle sizes at the cost of higher computational time. The next two case studies involve free-form surface machining. The cutter diameter and average mesh triangle size for normal/high performance calculations were respectively 15/1.25/0.31mm and 15/0.78/0.15mm. The associated milling geometry is more complex with case study #4 utilizing a fillet-end mill and curved tool paths and case study #5 involving a five-axis tool path and rotated cutter orientations, as depicted in 
                        
                        Figs. 9a and 10a. For such complex cutting geometry, analytical CWE diagrams are very challenging, if not impossible, to generate. Hence, only normal performance and high performance calculation results are plotted and shown in Figs. 9b and 10b.

The last case study to be discussed in this section is the most general milling case. The employed cutter was a tapered ball-end mill and the five-axis milling tool path to be followed had self-intersections. The cutter diameter was 9.3mm and the average triangle size for normal/high performance calculations were 1.30/0.31mm. In this case study, the tapered ball-end mill was used to machine the wall surface of a deep cone-shaped cavity. 
                        Fig. 11a illustrates the workpiece and the CSV resulting from the tapered ball-end mill following the self-intersecting five-axis tool path segment. Fig. 11b depicts the current cutter location and the updated RV with the corresponding CWE diagram shown in Fig. 11c. 
                        Fig. 12 clearly illustrates the need of RV update in order to successfully determine the correct CWE area on the cutter when the tool path has self-intersections. In this case, if the RV is not updated, when the intersection between the current cutter location (in dark blue) and the RV is to be made, the cutter would be considered to cut materials that have already been removed by the previous cutter location (in light blue). In addition to the correct CWE area (in dark red), some part of the false CWE area (in green) will be added to the overall CWE area. The plausible way to deal with this ambiguous situation is to update the RV first, then the false CWE area is eliminated before determining the CWE and only the correct CWE area would remain. This ensures that the CWE determination result is correct under any machining complexity.

All the case studies were implemented and performed on the open source platform MeshLab coded with C++ on a Windows PC with Intel Core i5-2500K CPU. For normal performance calculations, the computational time is in the order of minutes. However, for high performance calculations, the computational time becomes in the order of hours due to the large number of mesh triangles and the intersection calculations involved. It is evident that the computational efficiency of the proposed method needs to be much improved to gain practical application potentials. Relevant work is currently underway in our research group to significantly enhance the practical applicability of the presented CWE determination method.

As noted previously, the errors in the determined CWE diagram are mostly caused by the expansion of the cutter model in order to identify the CWE area on the cutter via mesh model intersection. These errors occur around the cutter immersion angles where the cutter surface is close to be tangential to the updated RV surface. When the cutter immersion is away from these cutting engagement angles, the deviations from the theoretical results are negligible. To quantify the effects of the cutter expansion on the determined CWE diagram in terms of the differences in the entry and exit cutting engagement angles, an error analysis has been made for the simple cutting geometry where the cutter is moving along a linear tool path segment, as shown in 
                        Fig. 13. In this figure, the blue circle represents the original cutter size and the green circle is the expanded cutter size. The two cutters intersect the RV boundary at two distinct intersection points, leading to varied cutting engagement angles. 
                        Fig. 14 plots the error in the obtained cutting engagement angle versus the cutter immersion angle from 0° to 180° and cutter expansion from 0.1% to 2% of the cutter radius. As expected, for the same amount of cutter expansion, the error is the largest near 0° and 180° while at the other cutter immersion angles, there is only very minor error. At the same cutter immersion angle, the error increases with the cutter expansion, as expected again.

@&#CONCLUSIONS@&#

This paper presents a new method for determining cutter-workpiece engagement (CWE) in general milling processes. The method is based on triangle mesh modeling and intersection calculations of the cutter swept volume, in-process workpiece update, and removal volume update, leading to the resulting CWE diagrams for physics-based machining simulation. It is able to correctly identify the geometric information in general milling for accurate CWE determination.

As machining technologies keep advancing, complex-shaped cutters and multi-axis controlled milling geometry are becoming more common each day in practice. The applicability of the presented method to correctly identify the CWE in general milling processes has clearly been demonstrated. The main contribution of this work is that it uses a discrete triangle mesh modeling approach to relax the limitation of existing methods on CWE determination due to specific cutter geometry, workpiece geometry, and milling tool path. It should be noted, however, that the gained generality is at the cost of computational efficiency. Currently, the computational time is considered high for practical implementations. Much computing time is spent on cutter swept volume generation by the ball-pivoting algorithm and triangle-to-triangle intersection calculations for the involved Boolean operations. It is expected that with the algorithm to efficiently generate a triangle mesh surface from a point cloud being an active research field and the continuing effort to develop an effective method to quickly identify the relevant triangles between two intersecting mesh models, the practical applicability of the presented method on CWE determination will become much more attractive in the coming years.

@&#ACKNOWLEDGMENT@&#

This work was funded by the Natural Sciences and Engineering Research Council (NSERC) of Canada.

@&#REFERENCES@&#

