@&#MAIN-TITLE@&#Relationship matrix based automatic assembly sequence generation from a CAD model

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           Automatic collection of constraint data from CAD models for assembly planning.


                        
                        
                           
                           Algorithm for generating assembly sequences based on the CAD constraints.


                        
                        
                           
                           Generated assembly sequences are validated via interference and stability analysis.


                        
                        
                           
                           System able to be used with any modern CAD system, with demonstration in CREO.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Assembly sequence generation

CAD models

Assembly constraints

@&#ABSTRACT@&#


               
               
                  Currently in industry, design and communication of a product assembly is through the use of computer-aided design (CAD) systems. However, there are no commercial systems that can automatically generate feasible assembly sequence plans. There is past and current academic research in methods to provide automatic assembly sequence planning. Assembly sequence planning using a commercial system often relies on an expert assembly sequence planner, and it is predominantly done manually. This requires a great amount of time and expert knowledge; assembly sequence plans generated may not even be the most efficient. The ability to automatically generate assembly sequence plans will lead to the reduction of planning time, less reliance on the amount of knowledge required, and better plans at earlier stages of the design process. CAD models are based on feature constraints to create and define an assembly. The challenges to automatically generate assembly sequences using CAD models lie in intelligent reasoning and analysis of the modelled assembly data. Based on past research findings, there is a reason to believe that assembly constraints used in CAD assembly models can provide essential information related to the assembly process. This paper presents a system that can analyse and utilize assembly data available from a CAD model to generate assembly sequences. The system also considers a user input as a type of assembly constraint. The system is capable of producing a set of ranked feasible assembly sequence plans for an operator to evaluate. A matrix approach has been adopted to process the information retained from a CAD model. Interference and stability studies are carried out during the creation of assembly sequence plans. The outputs are ranked based on the ease of assembly and the stability of the generated assembly sequence plans. Case studies are used to evaluate the system and the feasibility of the output. A case study using a two stroke engine is presented, which demonstrates how the system generates assembly sequence plans.
               
            

@&#INTRODUCTION@&#

The current global economic situation is becoming increasingly challenging. For a company to run at a profit, there is a need to find new ways of cutting down costs. To be competitive in the market, companies are also offering a wider range of products in order to meet consumer demands. Assembly can contribute to approximately 50% of labour work in the production of a product  [1]. Therefore, one area that could help in reducing manufacturing cost is to plan and use efficient and effective assembly processes. An essential part of assembly processes is the planning of the assembly sequence plans. An assembly sequence plan is the complete set of step by step procedures required to assemble a finished product. Assembly sequences are the individual procedures in the assembly sequence plan.

Mechanical products are often complex and composed of multiple components. Because of this, a product often has multiple assembly sequence plans. Some of the assembly sequence plans are more efficient and better than others. Together with the nature of the current design practice and globalization, there is a need to be able to automatically generate efficient assembly sequence plans. Manual assembly sequence planning in practice is reliant on experienced assembly planners. Assembly planners will be required to understand all the functions and all the specific details of a product. Furthermore, products are usually designed simultaneously by multiple design teams focusing on different aspects of the design. This type of design practice is made possible through the use of Computer-Aided Design (CAD) systems. A CAD system allows multiple teams to collaborate on a design and enable global collaboration. However, the final assembly CAD model developed usually does not reflect the assembly sequence plan due to modelling practices. Usually when constructing an assembly model the modeller will take the fastest and easiest route without considerations for physical constraints. Due to the nature of the design process, final designs of a product will go through many iterations and the assembly model will be modified. The final designs can have components replaced or added which will affect the assembly sequence. In some situations the modeller will make use of a partial assembly model to create/modify components. For example, a component is required to have the same surface contours as a cavity surface that is created by an assembly of multiple components. To achieve this, a designer can create an assembly of the components which make up the cavity, then assemble the component that fits inside the cavity without the correct surface contour and carry out an intersect operation to create the necessary surface. Other reason why an assembly model does not reflect assembly sequences is the lack of knowledge of the assembly resources in the assembly line. Assembly resources can include jigs, handling equipment, etc.

There has been a good amount of work done on the generation of assembly sequence plans. However, the information required to produce assembly sequences is not always readily available. Instead, it is largely dependent on human expertise. Approximately 70% of the manufacturing costs are determined at the design and planning stages  [1]. Therefore, it is beneficial to plan for effective assembly sequence plans at the planning stage. An assembly plan affects (a) costs that are related to the time frame in which the product can be manufactured, (b) the set-up of the assembly line and (c) the assembly resources required.

Current commercially available CAD systems provide some form of assembly sequence planning functions. However, these functions are more of a tool for expert assembly planners to document the assembly sequences. No automatic assembly sequence planning functions are found in commercial systems.

The objective of the approach to assembly sequence generation is detailed in this paper. The system developed can extract relevant data using information that is already embedded within a CAD system and to use this data to guide assembly sequence plan generation. The organization of this paper is as follows. Section  2 discusses the current state of the art in assembly sequence planning. Section  3 discusses assembly modelling in practice. Section  4 discusses assembly sequence generation and model development. Section  5 contains a demonstration of the developed system in action. Section  6 discusses the developed system. Finally, Sections  7 and 8 give possible future work and conclusions.

Mechanical products usually consist of multiple components. Therefore, there is always more than one way to assemble a product. Currently, the planning of assembly sequences is mostly done manually by an experienced operator, which is often a time-consuming process. With an increase in product complexity these manual processes are becoming inefficient and causing a bottleneck in the manufacturing planning process. Therefore, research has been carried out for generating assembly sequence plans automatically. Past research efforts are organized into two different approaches. These are (a) approaches based on theoretical methodology and (b) approaches that make use of commercial packages.

In the early stages of assembly sequence generation development, the focus was on knowledge-based approaches through the use of questions, graphs and tables to generate different sequences. Bourjault developed a ‘Liaison model’ which is made up of a series of questions about the assembly and the components  [2]. Based on the answers to the questions, a knowledge base was created to aid sequence generation. De Fazio and Whitney later improved the model by streamlining the questions and reducing the number of questions  [3]. The ‘Liaison model’ however was never able to completely represent the sequence generation. Homan de Mello and Sanderson developed the AND/OR graphs that allow a more complete representation of an assembly sequence  [4]. There is a disadvantage in the ability to represent the sequences completely as the graph would become large and hard to handle with an increase in the number of components. Tiam-Hock Eng et al. developed a ‘Kinematic pair liaison diagram’ that studies the degree of freedom of components using matrices based on the features of the components  [5]. This model uses geometric reasoning to distinguish relations between parts.

Ko and Lee developed a ‘Part-ordering method’ which explores the mating conditions and interactions between different components  [6]. The method ensured that there are no collisions between parts during the assembly process. Ben-Arieh and Kramer developed a model that generates assembly sequences by considering precedence relationships and different combinations of subassemblies  [7]. Huang and Lee, and Dini and Santochi developed some mathematical models to represent the information required for sequence generation  [8,9]. Biswal et al. used four sequence generating methods, constraint method, CG method, liaison method and matrix method, in determining a solution for generating assembly sequences suitable for robotic assembly  [10].

Mazouz et al. incorporated artificial intelligence and the knowledge-based approach to assembly sequence generation. De Lit et al. used Genetic Algorithm to generate an assembly tree for generating assembly sequences  [11]. This requires a starting assembly tree which is generated randomly. Chang et al. further developed the use of Genetic Algorithm to generate the assembly sequence plans through the use of the artificial immune system  [12]. This approach reduces computation time and results quality. However, it requires information about the assembly to be ready available. Zhou et al. has proposed an assembly sequence planning system using bacterial chemotaxis together with the genetic algorithm  [13]. The advantage of the system is the ability to maintain diversity of the populations during the evolution process of the genetic algorithm. This results in the possibility of obtaining better quality assembly sequence plans. Chen et al. developed a theoretical approach using back-propagation neural network and knowledge database to improve efficiency and optimization [14,15]. However, these approaches assume that knowledge of the assembly is already available in the form of human experts.

In an effort to make use of CAD models developed using commercial systems, work was carried out to create systems that can generate assembly sequences based on the use of commercial systems. Kaufman et al. created a system that optimized assembly sequence plans from a CAD model for use on a robot  [16]. However, this was limited to a single specific class of assembly. Gu and Yan developed a featured-based system that uses CAD systems and graphs of the contact between components to generate a collision-free path  [17]. The system though does not generate all the sequences; instead it is used for optimizing the assembly sequence. Zha and Du used STEP to construct feature-based models, but it requires prior knowledge of assembly relations  [18]. Gottipolu and Ghosh developed a system that uses a CAD solid modeller to directly create an assembly sequence  [19]. The system is contact-based and utilizes two matrices to illustrate the presence or absence of a contact when generating feasible sequences. Similarly, Maziero et al. developed a feature-based assembly sequence generator by examining the surfaces of the components for the presence or absence of a contact  [20]. The system is restricted only to the cylindrical type of components. Jayaram et al. developed a system which utilizes a CAD system and a supplementary system to generate an assembly plan  [21].

Research carried out by Chaudron et al. generates an assembly sequence using the combination of AND/OR graphs and CAD software  [22]. The research suggested generating an assembly sequence by grouping the components to allow the worker to decide a specific sequence for that group of components. Su developed a ‘Geometric constraints analysis’ approach that is integrated with a CAD system  [23]. The system requires human–computer interactions for certain constraint information. Li et al. developed a system that utilizes CAD information to produce assembly sequences based on polychromatic sets  [24]. Mathew and Rao proposed a system to extract mating features from CAD models developed in a commercial CAD system, i.e. Solidworks  [25]. Vigano and Gomez developed a system to generate assembly sequences based assembly constraints in CAD models, without any precedence information provided externally  [26]. Alfadhlani et al. used CAD models for automatic collision detection and assembly sequence generation  [27]. However, these approaches do not allow for any user inputs that are occasionally essential for generating feasible assembly sequences.

The approach presented in this paper is to derive a complete set of assembly information regarding relationships between components through the use of CAD constraints and component features. The approach is also capable of accepting user input regarding component relationships as some assembly operations require specialized tools/equipment or assembly experience.

There have been substantial developments in the methodologies and technologies used to represent assembly models. In the early days, assembly models were documented using text and graph based methods. These methods were then evolved into graph-based methods, providing two-dimensional and/or three-dimensional visual representations of assembly models. The current state of the art and practice in industry for assembly model representation is the use of commercially available CAD systems. Such CAD systems can visually display the assembly as well as allow easy manipulation of the virtual assembly for design, planning and presentation purposes. It is believed that these digital assemblies, created using modern CAD systems, contain useful information for assembly sequence generation.

Assembly models developed using modern CAD systems are made up of a combination of different components imported into the assembly model. All the components imported have different constraints specified to define the location of the target positions relative to the assembly coordinate system. The constraints used for assembly are usually relationships between adjacent components and kinematic properties of assembled components. The components imported into an assembly can be elemental/singular components or sub-assemblies. The way in which an assembly model is manufactured is based on the final assembled state of the product and the kinematic properties of the components. The digital assembly models contain information related to the relationships between each model and the type of mechanical joints the components are connected.

The CAD systems available in the market all have different modelling and functional capabilities. However, there are many common abilities between these systems when it comes to assembly modelling, i.e. different CAD system’s assembly modelling constraints are all but very similar. Six parametric solid modelling CAD packages have been compared. These systems are Creo Parametric (previously Pro/Engineer Wildfire)  [28], CATIA  [29], SolidWorks  [30], NX  [31], Solid Edge  [32] and Inventor  [33] (Table 1
                     ). It is evident that all six systems have the same basic principles for modelling assemblies. All the systems have the same basic constraints, i.e. Mate/Align, Tangent, Angle Offset and Distance Offset. These systems also have capabilities to utilize basic constraints to create functional mechanism constraints by altering the constraint properties. Table 2
                      shows a comparison between the main mechanism constraints available in Creo Parametric, Solidworks and NX. The difference between a basic constraint and a mechanism constraint is that the latter allows for describing kinematic properties. Mechanism constraints also restrict the motion between the two components to reflect that of the mechanism type set for a particular constraint.

Despite a vast amount of information related to the assembly in a commercial CAD package, none of the packages currently utilize the information to automatically generate assembly sequences. The methodologies presented in this paper utilize assembly data from assembly models, created using a CAD system, for automatic generation of assembly sequences. The assembly sequence generator developed collects the necessary assembly information in a CAD model and creates an assembly relation model. Finally, a list of assembly sequence plans is generated. This is explained in more depth in section four. The system is tested with Creo using its API package, Creo Toolkit.

Embedded within a CAD assembly model is crucial information detailing the assembly relationships between components. Assembly relationship information can include constraint information, references and mechanism types defined during the design stage. To generate assembly sequences, assembly relationship information is extracted automatically using software API. The following sections present a detailed explanation of the assembly sequence generation process.

Two assemblies are used to explain the methodology throughout the following sections.


                     
                        
                           (i)
                           The first assembly is a 13 component double actuator (Fig. 1
                              ).

The second assembly is an 18 component two-stroke petrol engine from a petrol powered drill (Fig. 2
                              ). This assembly is also used to demonstrate the system in Section  5.

The assembly sequence generator collects data from an assembly model created in a CAD system. The data collected includes (i) the types of constraints used, (ii) references used from a child and parent component, (iii) initial position of a component relative to its assembly coordinate system, (iv) component identity details and (v) types of joints used. The data is in the CAD system’s proprietary file format. Different commercial systems do not have directly compatible data structures due to different terminologies. However, the data structures are similar and systems store data in feature building blocks. The feature building blocks contain information necessary to create the assembly model.

The type of constraints used contains two properties. The properties are as follows:


                           
                              
                                 (i)
                                 The kinematic properties. This property is used to determine the degree of freedom (DoF) the component has once assembled as well as the direction of possible movements. There can be two types of kinematic properties; these are (a) rigid constraints and (b) functional constraints. Rigid constraints allow zero DoF, i.e. fixed, weld and rigid constraints. These constraints tell the assembly sequence generation system that the component has no mechanical functions. Functional constraints can have up to 6 DoF.

The type of basic constraint elements used. This property contains information on how the child component interacts with its parent component(s) and the assembly directions.

The component references from the child and parent components give information on which features from the components are used to create the assembly model. References together with the type of constraint are used to determine the assembly direction. It is also used to determine the features that coincide and provide useful assembly information. For example, if an assembly consists of two cylindrical parts A and B, where A is assembled within B, the references used are the outer diameter of A and the inner diameter of B. The diameter of the feature could be checked to identify the precision required or the type of fit required. This information also includes data on offsets that are defined with the references. The offset data is also used to determine whether the components have direct contact with one another depending on the magnitude and direction of the offset constraint. The initial position of the component relative to the coordinate system is used to determine spatial constraints.

The initial position of a component relative to its assembly coordinate system is used to determine spatial constraints. The initial position is the placement of the component within the assembly model that is specified by the designer. This is used to determine if the constraints used to define the placement are used arbitrarily or if the child and parent components have direct contact.

The component identity details include component ID and component name. The difference between component ID and component name is that the ID is a unique identification for the component, whereas the component name does not need to be unique in an assembly model. The name of the components is used for data presentation and can also be used to identify the type of components as components could be fixtures, casings, mechanism or structural components. The use of the component name rather than the component ID to automatically identify the component type is due to the high possibility that there are multiple similar type components in an assembly (e.g. screws and pins). The use of a phrase in the name to automatically search for similar component types is possible using the component names but is impossible with component ID. Based on the name of some components, the component type can be identified and some assembly sequences are automatically assigned. For example, if an assembly contains screws, the screw components can be automatically sequenced to follow the component that is secured by the screw. However, the analysis of the component names is based on user-inputs of the component details to ensure the naming of the components reflects the type of the component.

The type of joint used can be defined by the mechanism constraints that have been defined for connections between the components. Modern CAD systems offer the ability to assign mechanism constraints, e.g. pin, ball, slider and multiple other joints. However, not all types of mechanisms are available in all CAD packages. The joints that are considered by the developed system include pin, slider, cylinder, planar, ball, bearing, Gimbal and slot. In a mechanism constraint, displacement limits may be defined. Displacement limits are used to define the degree of motion and the degree of freedom and the reference features that the limits are based on. DoF is used for determining possible interferences during assembly.

An assembly relationship between two components refers to a pair of geometric entities, one from each concerning component, that either completely or partially define an assembly constraint between the two components. To fully define a mechanism constraint, it is likely that more than one assembly relationship is required. Assembly relationships extracted are stored in the form of two matrices as follows: 
                           
                              (i)
                              Assembly relations matrix. This is a square matrix of size equal to the total number of components (Fig. 1b). Relationships between components in the assembly are stored as an integer value. The values in the matrix represent three different scenarios; these are as follows: 
                                    
                                       •
                                       A value of “0” indicates that there are no relationships between the two components.

A value of “
                                             −
                                             1
                                          ” indicates that the relationship is a hard constraint due to a user input. This type of relationship must be maintained when generating an assembly sequence.

A value of “1” indicates that the relationship is also a hard constraint due to there being only one relationship present between two components. This type of relationship must also be maintained when generating an assembly sequence.

A value of “
                                             >
                                             1
                                          ” indicates that there are multiple relationships between the components. The magnitude of the value represents the total number of times this relationship was used to create the final assembly model.

The second matrix contains information on the component constraint specifications (Fig. 1c). This matrix structure corresponds to the assembly relations matrix. The specification data includes seven properties, i.e. (a) initial positions, (b) mechanism type, (c) number of constraints, (d) constraint type, (e) offsets distances between components, (f) features used as references, (g) displacement limits and (h) user input data.

The assembly sequence generator takes into account all the possible information available in an assembly model to create the two matrices. The process for generating the assembly relationship matrices is detailed in the following steps:


                        
                           
                              Step 1
                              Load the assembly model into the CAD environment.

Generate a list of component names from the assembly model and create a database of available components that is used for analysis.

Collect the model features for each of the individual components and store the data in the component database.

Initiate two square matrices of the size of the total number of components for a relationship matrix and an assembly information matrix.

Group the components in the component database based on component names and component IDs. This is to identify if there are multiple identical components and to identify the number of different components in the assembly.

Calculate the volume of each component and store the data within the component data base.

Collect all the assembly features within each component. Using the assembly features determines the type and relationships of assembly constraints defined. Store the data within the assembly information and relationship matrices.

Identify if there are any user inputs in the component relationships. If user definitions are present the relationship matrix will be updated accordingly.

To systematically generate an assembly sequence plan, a relationship reasoning mechanism (Fig. 3
                        ) has been developed and used to determine the relations between assembly components. The reasoning mechanism determines the degree of “assemblability” between components. Where “assemblability” is the ease at which components can be physically assembled. Before any assembly sequence plans are generated, each component of the assembly model is firstly examined to check the relationships between components. In a mechanical assembly, there is a high possibility that there are multiple identical components. Therefore, component-matching is required to identify the identical components. The benefit of this reasoning is the reduction of the number of assembly sequence plans generated and reduction of computing cost and time. Components in an assembly can be classified into two types, fixture component and standard component. This is identified once all matching components have been identified. Classification of a component aids the analysis for base components and the decision-making mechanism for the assembly sequences. User-inputs can provide information absent from a CAD model that must be obliged due to real world constraints of the design, which is identified after component type has been determined. This is explained further in Section  4.6. Constraint types are identified and used to determine the type of mechanism that the components form and they can also help determine the motion axes. The relationship between components is used to determine precedence and feasibility of a generated assembly sequence. This set of information is identified last.

Based on the reasoning mechanism, an algorithm was developed to create assembly sequence options and to rank the options generated. The main idea behind the algorithm for the “Iterative Constraint Relations Assembly Sequence Generator” is to utilize constraint relationships for assembly sequence generation. There are multiple modules in this algorithm (Fig. 4
                        ).

The first module identifies components, i.e. identifying the component type, the possibility for the component to be a base component and components with explicit constraints. A base component is considered as one that has the most number of relationships with other components and has the capability of supporting or housing most components. A component is first identified as a fastener or standard component. Fastener type components are any component that mechanically affixes two or more components together. These may include bolts, nuts, screws, retaining rings, rivets, threaded components and others. It is required to identify these types of parts as they cannot be used as a base component. By identifying these it will alleviate the task of identifying a base component. The base component will always be assembled first as it will act as a platform on which the rest of the assembly is built. Possible base components are identified by analysing the number of assembly relationships that have been defined and also the volume of the part. The analysis is achieved by examining the relationship, the information matrix and component database.


                        
                           
                              •
                              Rule 1: The component type must not be a fixture.

Rule 2: The component must have at least assembly relationships with three other components.

Rule 3: The component must have a volume that is greater than the mean volume minus one standard deviation.

The components that satisfy all three rules are ranked based on the total number of assembly relationships a component has and the volume of the part. The more assembly relationships, the larger the volume of a component and the higher the rank. The highest ranked component is the first component considered as a base component. Making sure that the larger components are assembled earlier will assist creation of a more efficient assembly sequence, as larger components will be harder to manipulate and handle. Explicit relationships between components can be user-defined relations or components that only have a single relationship with another component. A user-defined relationship will overwrite flexible relationships. Flexible relationships are the automatically detected relationships defined in a CAD model. Components with a single relationship will result in only one possible assembly sequence option. Since both of the conditions result in a single assembly option the components can be grouped and considered as a single part in the process of assembly sequence generation.

The second module executes an interference analysis by creating interference matrices. These interference matrices can be used for evaluating the validity of a generated assembly sequence. More about the interference study process is discussed in Section  4.8.

The third module is responsible for generating assembly sequences. The generation process starts by first selecting a component that is adjacent to the base component. Then, the presence of relationship between the selected component and the rest of the assembled components is checked. Interference and stability analysis is carried out to check the validity of the assembly sequence. Section  4.9 discusses the stability study process in more detail. The process is repeated until all components are assigned to the sequence.

The fourth module ranks the generated assembly sequence plans. Ranking is calculated based on stability scores. The assembly sequence plans are ranked from most efficient to least efficient in the output.

The results of the assembly sequence generation are a set of assembly sequence plans with no interference in the assembly path. The system can also generate step by step visual assembly sequence plans. The visual output can be in one of three file formats; (a) JPEG, (b) PNG and (c) TIFF. This is shown in Fig. 5
                        .

The data related to the type of component can be used to reduce the number of assembly sequence plans. The reduction of assembly sequence plans is carried out by the type of components. Based on their functionality, components in an assembly can be classified into one of three types of primary components, i.e. (a) fixture, (b) chassis/frame and (c) casing components. Primary components are the components which are often common to all types of assemblies. A fixture type component is used to hold or fix components together, i.e. screws, bolts and nuts. A chassis/frame type component is one which acts as the base/ground component, i.e. a washing machine frame, where components or sub-assemblies are built onto. A casing type component is one which acts as the exterior shell or partitioning component which encases a sub-assembly. The reduction of the number of assembly sequence plans is achieved by grouping and ordering components based on the type of primary components. If a component is of a fixture type, it can be grouped with the component that requires fixing as there can only be one possible assembly sequence between the fixture type component and the component that requires fixing.

A typical design process, however, is not always given a functional name corresponding to the type of primary components. Therefore, users are given the opportunity to enter keywords that correspond to each of the three types of primary components. For example, if a bolt component is used in an assembly with a name other than “bolt”, (e.g. “bt”), this other name (“bt”) can be input into the user-defined fixture vocabulary list. This set of user input will be saved in the system database. So users of the system can build up a library of keywords related to the three types of primary components.

The purpose of the system is to automatically generate assembly sequence plans and to reduce human intervention in assembly sequence generation. This however does not mean that no user input may be considered. User input will be the information on certain constraints related to a specific use of equipment when assembling some components, or a specific method of carrying out an assembly operation. Also considered is the information about fasteners or adhesives used. Adhesives or fasteners used during the assembly process could affect the stability during the assembly process. Therefore, this type of information becomes critical in assessing the effectiveness of an assembly sequence. For example, when assembling a piston, a ring compressor is required to insert the piston into the cylinder (Fig. 6
                        ). This information is stored as additional constraints that the assembly sequence generator takes into account.

User inputs can be separated into two categories, namely user defined constraints and fastener definition data. The user defined constraint contains information regarding (a) component relationships, (b) equipment/tools required and (c) additional information on the particular assembly procedure. A user defined component relationship is required when specific information cannot be automatically generated from a CAD model. Input on equipment required is optional; it is only required when specialized equipment is required to complete the assembly. Additional information input is for situations that require special care or instruction to complete an assembly procedure. The fastener definition data is to allow users to define the fastener components. This can be completed by two different methods (a) entering a search phrase and/or (b) locate the specific components in the graphical user interface. By entering a search phrase, the system uses it to analyse the component names to determine fastener type components. By defining individual components via the GUI, all duplicate components are also updated so users are only required to define one of multiple identical fastener type components.

There are a definitive number of component relationships between each component. The number of possible relations (
                           R
                           e
                           l
                        ) for an assembly can be expressed as


                        
                           
                              (1)
                              
                                 n
                                 −
                                 1
                                 ≤
                                 R
                                 e
                                 l
                                 ≤
                                 
                                    
                                       n
                                       
                                          (
                                          n
                                          −
                                          1
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                         where 
                           n
                         is the number of components.

The minimum number of relations equates to having only a single assembly sequence plan. The maximum number of relations is when all components are related to one another, which is a highly complex but unlikely situation.

The number of assembly sequence plans available is related to the number of relations between components. The maximum number of assembly sequences available is a permutation of the number of components without any repetition. To decrease the number of possible sequence options, the relationship matrix is scanned to identify any hard constraints. The presence of relationships with hard constraints helps reduce the number of possible assembly sequence plans. If a hard relationship exists between two components, the number of possible assembly sequences (
                           Q
                        ) is reduced and can be calculated as 
                           
                              (2)
                              
                                 Q
                                 =
                                 
                                    
                                       n
                                       !
                                    
                                    
                                       n
                                       ×
                                       
                                          (
                                          n
                                          −
                                          1
                                          )
                                       
                                       ×
                                       
                                          (
                                          n
                                          −
                                          2
                                          )
                                       
                                       …
                                       …
                                       …
                                       ×
                                       
                                          (
                                          n
                                          −
                                          
                                             (
                                             r
                                             −
                                             1
                                             )
                                          
                                          )
                                       
                                    
                                 
                                 ×
                                 2
                              
                           
                         where 
                           r
                        is the total number of hard relationships.

The calculated value is multiplied by two because there is always a forward and a backward direction to assembly, corresponding to disassembly and assembly.

Interference analysis is used to calculate the directions in which a component may be assembled without causing any interference. An initial interference study ensures that assembly sequences generated are valid. The data generated from the interference study is stored in six different matrices. Three of the matrices correspond to the translational directions that are in the orthogonal direction of the component, 
                           +
                           /
                           −
                           
                              
                                 
                                    Xc
                                 
                              
                              
                                 ′
                              
                           
                        , 
                           +
                           /
                           −
                           
                              
                                 
                                    Y c
                                 
                              
                              
                                 ′
                              
                           
                         and 
                           +
                           /
                           −
                           
                              
                                 
                                    Zc
                                 
                              
                              
                                 ′
                              
                           
                        . This is not in the assembly co-ordinate system as some components may be assembled at an arbitrary angle due to the geometry of the component. More information on coordinate systems is explained in Section  4.8. The second set of interference matrices corresponds to the rotational directions, 
                           +
                           /
                           −
                           φ
                        , 
                           +
                           /
                           −
                           θ
                         and 
                           +
                           /
                           −
                           ψ
                        .

In order to carry out the interference study, the motion axis of the component is used for displacing the component. Motion axis is defined as the axis in which the component can be assembled. The components are offset along each of the six component co-ordinate directions, when motion axis cannot be determined. The first step of the interference study is to determine if there are any minor interferences present in the beginning due to modelling error or the component fit designed. Then, the component is moved in a specified direction. The component is offset from its final assembled position and interference is assessed at the immediate region of the final position to determine if the component can be assembled without any interference. Fig. 7
                         illustrate two situations. In instance (a), the piston will have interference if it is assembled before the cylinder head; hence, a value of 1 is used in the interference matrix 
                           
                              
                                 |
                              
                              
                                 1
                              
                           
                         at position 
                           
                              
                                 |
                              
                              
                                 1
                                 ,
                                 1
                                 ,
                                 2
                              
                           
                        . In instance (b), the piston will have no interference if it is assembled after the cylinder head; hence, a value of 0 is used in the interference matrix 
                           
                              
                                 |
                              
                              
                                 1
                              
                           
                         at position 
                           
                              
                                 |
                              
                              
                                 1
                                 ,
                                 2
                                 ,
                                 1
                              
                           
                        .

Once the immediate position is clear of any collision, the component is offset further until there is a clearance between the component and the assembly to ensure that there will not be any interference with components from different parts of the assembly. If interference is detected, the position where interference first occurred is calculated. Once this position is determined a secondary interference study is carried out (Fig. 8
                        ). This will ensure that whether the component can be assembled in a unidirectional or multidirectional manner. There will also be an interference study carried out for the rotation of the component. As some component may need to require some degree of twisting before the component can be assembled.

Stability analysis is also crucial in ensuring that a feasible sequence is created. The analysis is also used to determine if any fixture is required to acquire and/or maintain stability. This said, study and design of fixture is not part of the system developed.

Assemblies can be separated into stable and unstable sub-assemblies and components. A stable sub-assembly is one that all components remain in the assembled position with no certain type of forces. Stability can be classified into three categories depending on the forces acting on the components  [34]. The three types of stability are as follows: 
                           
                              (i)
                              Gravitational stability — stability of the assembly based on gravitational forces acting on the component.

Assembly stability — stability of the assembly based on gravitational forces and fixture/joining forces acting on the component.

Motion stability — stability of the assembly based on gravitational forces and forces due to motion of the assembly acting on the component.

The system uses stability to validate and rank the assembly sequence plans generated. For an assembly sequence generated to be valid, all sequences must be classified as stable during assembly stages. The first type of stability is the main concern as it has an underlying factor in all three stability categories. Two variables are used to calculate the gravitational stability (Fig. 9
                        ), the first of which is the translational stability. Second is the rotational stability.

To calculate the translational stability the motion axis of the components is analysed. The motion axis of each component is related to the “grounded” parent component. Since the first component in an assembly sequence is considered the grounded component, stability analysis is carried out with reference to this component. The angle between the motion axis of the grounded component and the component to be assembled is used in stability calculation. Stability is considered as present if one of the following conditions is identified. Stability is directional, which means if the partially assembled assembly is rotated to a new orientation it may become unstable. 
                           
                              (i)
                              If the component being analysed is (a) assembled on to a grounded component and (b) is in the same direction as gravitational forces, the component may also be assembled on to stable partially assembled assembly.

If the components are held together by external forces such as temporary fixtures and adhesives/fasteners.

The ranking of the assembly sequence plans is dependent on the stability analysis of the assembly during each step of the sequence. Ranking is carried out based on the following features: 
                           
                              (i)
                              The type of stability — this is the mechanism in which stability is achieved. This could be one of the three types: (a) stability which is only reliant on gravitational forces and the design of the component; (b) stability reliant on physical fixtures that are designed into the make-up of the product; and (c) stability reliant on physical temporary fixtures to hold the partially assembled assembly together during the assembly stage.

The need for direction change — this analyses whether the partially assembled assembly requires orientation changes to achieve stability. It is preferable that stability is achieved through gravitational mechanisms. The need to change orientation could introduce motion instability to the assembly and may introduce the need of temporary fixtures to achieve stability in the new orientation.

The ranking system assigns a value to the individual steps of the assembly sequence. A directional stability matrix is generated for each assembly sequence plan (Fig. 10
                        ). A sequence step which is stable under gravitational forces alone is assigned a value of 
                           −
                           1
                        . However, if a directional change is detected, all the assembly steps with 
                           −
                           1
                         value will be reassigned with 
                           −
                           2
                        . A sequence step that is stable due to fasteners is assigned a value of 0. A sequence step which is stable due to external fixtures is assigned a value of 
                           −
                           3
                        . Once all the assembly sequence steps have been assigned, the stability ranking of each stage is tallied and assembly sequences with totals closest to 0 become the most efficient. The matrix also contains data on the number and position of directional changes. If a directional change is required to carry out an assembly step, a value of 1 will be added to the particular step in the matrix.

CAD systems use different coordinate systems to define different positions and orientations of a model. Creo Parametric uses eight different coordinate systems to define part and assembly locations. These coordinate systems are solid, screen, window, drawing, drawing view, assembly, datum and section coordinate system.

Different coordinate systems describe a component with different origins and orientations. The ICRASG uses two of the coordinate systems, i.e. solid and assembly coordinate systems. The solid coordinate system is a three-dimensional Cartesian coordinate system used to describe the geometry of a solid model. In a part, the geometry of the surfaces and edges is described in the solid coordinate system. In an assembly, the solid coordinate system also describes the locations and orientations of the assembly members. An assembly has its own coordinate system that describes the positions and orientations of the member parts and subassemblies in the assembly. When an assembly is loaded in Creo, each member is also loaded, and continues to use its own solid coordinate system to describe its geometry. Therefore, to carry out the interference analysis of the components, the solid coordinate is used to carry out the movements (Fig. 11
                        ). This is the case because components may be assembled in arbitrary orientation and to offset the component in the assembly coordinate system’s 
                           x
                        , 
                           y
                         and 
                           z
                         directions may not reflect the correct motions of the component.

The system has been developed to work with any CAD packages. As an example, the system has been developed using the Creo system. It needs to be pointed out that modifications are needed if a different CAD package is used, as functions to access assembly models in another CAD system will differ. The system utilizes the Creo API (i.e. Creo Toolkit) to provide functions for collecting and analysing components automatically.

To validate the developed assembly sequence generation algorithm, a simplified two stroke engine is analysed (Fig. 2). The engine analysed is part of a handheld petrol powered drill. The assembly consist of 18 components, namely the spark plug, engine cylinder, piston pin, piston, piston ring, fly wheel, engine block front, engine block back, crank, connecting rod, connecting rod cap, two bearings, two 18 mm bolts and three 28 mm bolts (Fig. 2). The CAD model of the engine is downloaded from the PTC educational database. The assembly was modelled in Creo. To preserve original modelling features, assembly constraints and design intent, the model is saved in the Creo native file format (.asm and .prt).

Using the user interface, two user-inputs were provided to the system. The first is to provide component relationship constraints for the piston and the engine cylinder (Fig. 12
                     ). This user-input is required as the assembly requires the use of additional equipment, a ring compressor, to easily insert the piston into the engine cylinder. The second user-input is a search phrase for fastener type components (Fig. 12). Fastener type components in this assembly are the five bolts. The names of the two different types of bolts in the model are “Bolt M5×18 mm” and “Bolt M5×28 mm”. From the names, “Bolt” was used as the input to identify the fasteners. Using the keyword “Bolt”, assembly components are separated into two types, fastener and standard components. A relationship matrix is automatically created from the assembly constraints and user-inputs (Fig. 13
                     ). A corresponding information matrix is also created (Fig. 2). A group of possible base components are created as shown in Table 3
                     .

Generated assembly sequence plans are shown in Fig. 14
                     . The first option is most efficient as it requires the least number of reorientations. The system can also produce step-by-step illustrations of a selected assembly sequence plan (Fig. 15
                     ).

@&#DISCUSSION@&#

The methodologies in this paper have been used to develop a functioning assembly sequence generator. The assembly sequence generator is developed as an add-on package to a commercial CAD system written in C language. The purpose of using a commercial CAD system is to provide an environment to load and manipulate assembly models. The generated output from the case study of the 2-stroke engine is a ranked list of feasible assembly sequence plans. Only feasible assembly sequence plans are included in the output as the system has three uses, three checks, to ensure feasible solutions. 
                        
                           (i)
                           The system does not look for any sequences where the components have no relationships.

Any sequences that have component interferences that prevent assembly procedures from completed are excluded.

User input constraints that specify specific assembly constraints are compiled to ensure assembly sequence feasibility.

A functioning assembly sequence generator has been demonstrated in the case study. The advantages of the developed system include the abilities to:


                     
                        
                           (i)
                           automatically collect necessary information to generate assembly sequences from a CAD model. Previous systems require users to provide a complete set of knowledge on the assembly for the purpose of generating assembly sequences.

generate feasible assembly sequence plans that can be used in a shop floor. The operator of the developed system does not need extensive knowledge of the assembly or the system itself.

automatically generate outputs in the form of step by step graphical formats that can be used directly by factory floor workers. Previous systems only generate text outputs. This capability will reduce the level of knowledge required to produce instructions for assembly workers and reduce time required when updating a particular assembly line.

Currently, there are some limitations to the developed system and the aim is to overcome these limitations with future developments. One limitation of the system is that currently the outputs of the system are not optimal solutions. The current outputs are ranked based on assembly stability at each stage of the assembly process. However, the top rank assembly sequence plan may not be the optimal solution due to resource capability and availability. With future development, the system will be able to produce optimum solutions as the goal is to incorporate assembly resource planning to the system. Another limitation of the system is the requirement of a commercial CAD system to provide the environment to analyse the assembly model. This limitation is due to the different data structure used between different CAD systems.

@&#FUTURE WORK@&#

The system is developed with an aim to automate information gathering in an effort to reduce human interaction, human error and costs/time. Future work on this system is to incorporate resource planning functions, to automatically allocate assembly resources available at the factory floor level and allocate resources that are best suited for the assembly operations. The combination of a resource planner together with the assembly sequence generator will allow the development of a smart assembly system. This in turn allows for dynamic update of an assembly line if problems or product modifications are required. Smart assembly systems will be able to utilize the automatically generated assembly sequences to assign resources to execute the assembly processes and to make modifications to the processes when required.

@&#CONCLUSIONS@&#

In this paper, current technologies in assembly sequence planning have been reviewed. A CAD-constraint based system named “Iterative Constraint Relations Assembly Sequence Generator” has been developed. The system can automatically analyse and extract information about assembly relationships from a CAD model. Information on (a) assembly constraints, (b) references, (c) component position and (d) component features from CAD assemblies is used to generate assembly sequences. The system was developed to operate universally with different CAD systems, though Creo parametric has been chosen as the starting block of the system. An effective method used to store assembly information is the use of two square matrices. The first matrix is the relationship matrix that contains information about the presence of relationships between components. The second matrix is the information matrix that contains all the data corresponding to the relationship between components. The system is able to accept user inputs for assembly operations which require specific (a) component constraints, (b) methods and (c) equipment. To ensure the validity of the generated assembly sequence plans, interference between components is analysed. The output of the system is a set of assembly sequence plans which are ranked based on the results of stability analysis.

@&#REFERENCES@&#

