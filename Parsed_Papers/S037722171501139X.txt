@&#MAIN-TITLE@&#Regulating vehicle sharing systems through parking reservation policies: Analysis and performance bounds

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The exertion of parking reservation policies in vehicle sharing systems is studied.


                        
                        
                           
                           Partial parking reservations are introduced and analyzed.


                        
                        
                           
                           Mathematical programming based lower bounds on the quality of service are devised.


                        
                        
                           
                           The complete parking reservation policy is shown to be both simple and effective.


                        
                        
                           
                           Parking overbooking policies are demonstrated not to be worthwhile.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Transportation

Vehicle sharing

Bike sharing

One-way car sharing

Reservations

@&#ABSTRACT@&#


               
               
                  We study the regulation of one-way station-based vehicle sharing systems through parking reservation policies. We measure the performance of these systems in terms of the total excess travel time of all users caused as a result of vehicle or parking space shortages. We devise mathematical programming based bounds on the total excess travel time of vehicle sharing systems under any passive regulation (i.e., policies that do not involve active vehicle relocation) and, in particular, under any parking space reservation policy. These bounds are compared to the performance of several partial parking reservation policies, a parking space overbooking policy and to the complete parking reservation (CPR) and no-reservation (NR) policies introduced in a previous paper. A detailed user behavior model for each policy is presented, and a discrete event simulation is used to evaluate the performance of the system under various settings. The analysis of two case studies of real-world systems shows the following: (1) a significant improvement of what can theoretically be achieved is obtained via the CPR policy; (2) the performances of the proposed partial reservation policies monotonically improve as more reservations are required; and (3) parking space overbooking is not likely to be beneficial. In conclusion, our results reinforce the effectiveness of the CPR policy and suggest that parking space reservations should be used in practice, even if only a small share of users are required to place reservations.
               
            

@&#INTRODUCTION@&#

In recent years, vehicle sharing systems (VSS) have become an integral part of transportation services offered by numerous cities around the world. Such systems consist of a fleet of vehicles dispersed across a city that users can rent for a short period of time. This type of service may be considered an extension of traditional public transport, which offers more flexibility and which enables more multi-modal journeys. With this added flexibility, more citizens can shift from private vehicles to public transportation services, potentially decreasing traffic congestion levels, encouraging more efficient land resource utilization (especially in city centers, as fewer parking spaces are needed) and reducing air pollution and greenhouse gasses emissions.

In this study, we focus on one-way station-based VSSs, such as bike sharing and some car sharing systems. Such systems allow users to rent a vehicle from any station throughout a city (given that there is an available vehicle in that station), use it for a short period of time and return it back to any station with an available parking space. In the case of bike sharing systems, "parking spaces" are in fact docking poles. However, for the remainder of the paper, we use the term parking space to refer to one unit of vehicle storage of any kind. Some car-sharing systems are "free floating" (rather than station-based). In such systems, vehicles can be rented and returned at any point in the city. These systems do not fall within the scope of this study. For a detailed description of the structure of VSSs, the renting process, the types of users and the different operating models, see surveys by DeMaio (2009), Jorge and Correia (2013), Shaheen and Cohen (2007, 2012), Shaheen and Guzman (2011), Shaheen, Guzman, and Zhang (2010) and Demaio and Meddin (2014).

VSS operators face the difficult goal of meeting demands for vehicles and available parking spaces. Indeed, online reports on the number of vehicles in many VSSs show that stations frequently become empty or full (see, for example, http://bikes.oobrien.com/). This difficulty mainly arises from the characteristics of the demands for journeys throughout the day. These demand processes are typically stochastic, asymmetric and heterogeneous in time. The system cannot satisfy demand when a user who wishes to rent a vehicle arrives at an empty station or when a user who wishes to return a vehicle arrives at a full station, i.e., a station with no vacant parking spaces. The latter scenario is typically perceived as more severe, as a user who is unable to return a vehicle is “trapped” in the system because she cannot complete the renting transaction until she finds an available parking space. Contrary to this situation, a user who cannot rent a vehicle may decide to use an alternative mode of transportation.

One-way VSS managers should aim to improve the quality of service provided to its users, subject to the availability of resources. In this study, we measure the quality of service by the total excess time users spend in the system as a result of vehicle or parking space shortages. The excess time of a user is the difference between the actual time she spends in the system (her exiting minus entering time) and her ideal travel time, i.e., the riding/driving time between her origin and destination stations. Indeed, we believe that time is a major consideration of commuters in an urban public transit system and that time is associated with the main costs incurred by commuters. This is especially true in cities where regular commuters can buy a monthly or annual subscription to a VSS and to public transit access.

The fact that a user may not be able to use a VSS for her journey or may only be able to use this system for part of a journey may cause her additional damages apart from the time she loses. The cost of this damage, in units equivalent to the cost of time, can be added to the measured excess time. For example, if a user needs to take a taxi rather than renting a shared car, the excess cost of the taxi fare (as compared to the cost of renting a shared vehicle) can be weighted and added to the excess time. While we use the term excess time throughout the paper, it can be replaced with the term excess cost to refer to more general conditions. This observation broadens the scope of our discussion and allows it to capture systems with diverse characteristics, e.g., both bike sharing and one-way station-based car-sharing systems.

Alternative performance measures for the quality of service include the proportion of empty or full stations, the percentage of users who receive an ideal service and the percentage of users who do not use the system at all, i.e., those who abandon the system. All of these measures are correlated with excess time (see Kaspi, Raviv, & Tzur, 2014), but they do not directly represent inconveniences experienced by the user. Excess time is also applicable to situations wherein an ideal service cannot be provided at the desired origin and/or destination stations but where a substitute service can be provided at nearby stations. For example, if no vehicle is available at the desired origin station, a user may rent a vehicle from a nearby station. In such a case, the excess time is the net additional time incurred as a result of using alternative modes of transportation from the desired origin station to the actual renting station.

To reduce the occurrence of vehicle and parking space shortages, system operators may take strategic or operational action. Strategic actions involve deploying more stations or expanding existing stations (see, for example, George and Xia (2011), Lin and Yang (2011), Correia and Antunes (2012), Lin, Yang and Chang (2013), Shu, Chou, Liu, Teo, and Wang (2013), Correia, Jorge, and Antunes (2014) and Boyaci, Zografos, and Geroliminis (2015). Operational actions may involve dynamically changing fleet sizes and actively or passively regulating systems.

By active regulation, we refer to the redistribution of vehicles throughout a system's stations using repositioning trucks (in the case of bike sharing systems) or by designated drivers (in the case of car sharing). Raviv and Kolka (2013), Schuijbroek, Hampshire, and van Hoeve (2013) and Vogel, Saavedra, and Mattfeld (2014) devise methods for determining the desired daily initial inventories in the stations, that repositioning should aim to achieve. Kek, Cheu, Meng, and Fung (2009), Nair and Miller-Hooks (2011), Benchimol et al. (2011), Angeloudis, Hu, and Bell (2012), Chemla, Meunier, and Wolfer-Calvo (2013a), Raviv, Tzur, and Forma (2013), Erdoğan, Laporte, and Calvo (2014), Erdoğan, Battarra, & Calvo, 2015, Forma et al. (2015), and others study static repositioning operations. Contardo, Morency, and Rousseau (2012), Jorge, Correia, and Barnhart (2014), Kloimüllner et al. (2014) and Pessach, Raviv, and Tzur (2014) study dynamic repositioning operations. However, repositioning of vehicles may be a costly procedure, especially in car sharing systems where each car is repositioned by a designated driver.

By passive regulation, we refer to mechanisms used to redirect demand to improve VSS performance. Such mechanisms do not affect the true demand for journeys but may instead cause users to rent (return) vehicles at stations different from their true origin (destination) station. Fricker and Gast (2014) study a system regulation under which each user declares two optional destination stations and the system directs her to the less congested one. Several studies focus on pricing regulations as means of self-balancing VSSs (see, for example, Chemla, Meunier, Pradeau, Wolfler Calvo, and Yahiaoui (2013b), Pfrommer, Warrington, Schildbach, and Morari (2014) and Waserhole, Jost, and Brauner (2013)). We note that the study of Waserhole et al. (2013) does not fall within our definition of passive regulations since they assume that the demand is elastic to the price.

In a previous paper, Kaspi et al. (2014) proposed implementing parking space reservations in one-way VSSs in order to improve the quality of service provided by such systems. In particular, they studied a complete parking reservation (CPR) policy in which all users are required, upon renting a vehicle, to reserve a parking space in their destination station. If a reservable parking space is available (i.e., not occupied and not reserved), it is reserved for the user, and will not be available to other users from the moment the renting period starts to the moment the user returns the vehicle to the reserved parking space. If upon renting a vehicle there are no reservable parking spaces at the destination, the renting transaction is denied. The user may then try to make a reservation at another station close to her destination or may decide to use an alternative mode of transportation.

Under the CPR policy, a reserved parking space remains empty until the user returns her vehicle. In the meantime, other users cannot use this resource, i.e., it is blocked. The tradeoff in implementing such a policy is that while some users are guaranteed an ideal service (as they will certainly be able to return their vehicle at their desired destination) other users may receive poorer service due to the blocking of parking spaces. In Kaspi et al. (2014), the CPR policy was compared to the base policy entitled no-reservations (NR), using a Markovian model with simplifying assumptions and an enhanced discrete event simulation model. Both policies are complete in the sense that all system users are required to follow the same regulations. The results of the analysis show that the CPR policy outperforms the NR policy with respect to several service-oriented performance measures.

In this study, we examine whether and to what extent further reductions of the total excess time may be achieved through the use of any other passive regulation and through the use of any other parking reservation policy in particular. We use mathematical programming models to devise lower bounds on the total excess time that users spend in the system under any passive regulation and under any parking reservation policy. We consider the benefits of limiting requirements to make reservations to only some journeys. We refer to these policies as partial reservation policies, which combine the two extreme (complete) policies in different ways. We evaluate the performance of all policies and compare them to the lower bounds.

We note that while mathematical programming may not be perceived as a natural approach for analyzing such a system, it is advantageous in its ability to process an extremely large number of possible occurrences. Conversely, in order to model the VSS using stochastic tools (for example, closed queuing systems), some simplifying assumptions are required to make the model tractable. Fricker and Gast (2014) and Kaspi et al. (2014) make simplifying assumptions regarding user behaviors when users face vehicle/parking space shortages. George and Xia (2011) assume that station capacities are unlimited. Indeed, using these assumptions, tractable models are generated. However, they do not reflect the true dynamics of VSSs, as interactions between neighboring stations due to shortages are neglected.

This study focuses on improving VSSs from a user's perspective. Indeed, operators have their own perspectives based on revenues and costs, which play a crucial role when making strategic decisions on system design, active regulation, pricing, etc. In the short run, when a reservation is denied, the operator may indeed lose revenue, thus potentially generating a conflict between the user's and operator's goals. However, under an effective reservation policy, this would provide better service to users and thus increase revenues in the long run. Therefore, when optimizing parking reservation policies, it is reasonable to consider only the quality of service as an objective function.

The contributions of this paper are as follows. First, using mathematical programming models, we provide for the first time lower bounds on the performance of a VSS, measured by the total excess time, under any passive regulation and under any parking reservation policy. Second, we introduce the concept of partial reservation policies. We examine three different partial policies that are each based on a simple sound principle that is easy to control by the system's managers and communicate to the users. We define the user behavior under these policies and examine their performance using discrete event simulation of real world systems. Third, we examine the potential benefit of parking space overbooking.

The remainder of the paper is organized as follows. In Section 2, a generic description of the VSS is presented, and mathematical models are formulated to bound VSS's performance under passive regulations and under parking reservation policies in particular. In Section 3, a behavior model of VSS users is presented, and the proposed partial parking reservation policies are described. A utopian overbooking policy is presented at the end of this section. A description of two real world VSSs and numerical results on their performance are presented and discussed in Section 4. Concluding remarks are provided in Section 5.

As noted in the introduction, the operational actions that a VSS operator can take in order to deliver high quality service can take two forms: active regulations and passive regulations. In this study, we focus on passive regulations, i.e., mechanisms used to redirect demand.

VSSs are decentralized systems, that is, each user makes decisions regarding her planned itinerary so as to minimize her own expected excess time. Such decisions depend on the availability of vehicles or parking spaces at the system's stations at the renting time and on the user's expectations regarding future availability. In addition, user's decisions are subject to the passive regulation prescribed by the system. Under passive regulations, a system may influence a user's decisions by limiting her choices or by incentivizing her to prefer certain itineraries. However, the system does not assign itineraries to the users. For example, under the CPR policy, if a user cannot make a parking reservation at a certain station, while she is not allowed to travel with a shared vehicle to that station, she is free to determine her actual alternative itinerary. From the operator's point of view, the question is: how should a passive regulation be designed so that the outcome of all users’ decisions minimizes the expected total excess time?

A passive regulation can be formally defined as a mapping of the state of the system and the demand for journeys to a set of itineraries permitted for each journey. The set of possible passive regulations is extensive. However, a major share of these regulations may be difficult to implement or to communicate to the users. In this study, we introduce and analyze regulations that take the form of parking reservation policies, which are based on simple principles and which are easy to communicate to the users. In order to assess potential improvements that may be achieved through passive regulations in terms of the expected total excess time, we formulate mathematical programs that provide lower bounds. First, we devise a lower bound on the expected total excess time under any passive regulation. Second, as this study focuses on parking reservation policies, we devise a tighter bound designed specifically for any parking reservation policy.

The rest of this section is organized as follows. Section 2.1 includes a description of a VSS and presents assumptions concerning the demand. Section 2.2 presents a mixed integer program (MILP) whose optimal value is a lower bound on the excess time that may be achieved under any passive regulation. Section 2.3 modifies the MILP formulation to account for passive regulations that involve only parking reservations, thus generating a tighter bound. A formal proof for the validity of this lower bound is then presented.

In this section, we discuss information needed in order to model a VSS. Such information is used in mathematical models that are presented in this section and in the user behavior model presented in Section 3. Information needed to describe the system is as follows:

                           
                              •
                              The number of stations in the system

The number of parking spaces in each station (referred to as the station capacity)

The initial inventory level (number of vehicles) at each station

The expected travel time between any two stations using shared vehicles.

The expected travel time between any two stations using an alternative mode of transportation.

Note that information on the locations of the stations is not needed. In order to describe the relations between the stations, it is enough to specify the traveling time between each pair of stations. The distance between the stations, the topography of the city, congested roads and other considerations are taken into account in the traveling times. In some cases, due to vehicle or parking space shortages, users may roam to nearby stations (using an alternative mode of transportation) or may decide to abandon the system altogether and make their entire journey using an alternative mode of transportation. Therefore, traveling times between any two stations using an alternative mode of transportation must be determined as well. Travelling times can represent any additional cost or inconvenience incurred by the user over the course of her journey in addition to the actual value of time spent in the system. In bike sharing systems, walking constitutes the alternative mode of transportation for most potential journeys. This is also the case in car-sharing systems for roaming between neighboring stations.

Demand for each journey is defined by the desired origin and destination stations and by the desired starting time. An underlying assumption of the models introduced in this paper is that all journeys in a system start and end at VSS stations. In reality, users’ journeys start and end at general locations (GPS points) in a city. However, such fine spatial granularity is not required when making strategic decisions on reservation policies. Moreover, information on exact origins/destinations is currently unavailable to VSS operators. Finally, we assume that an alternative mode of transportation is always available to users while a shared vehicle (resp., parking space) may or may not be available at the origin (resp., destination).

Our goal in this section is to establish a lower bound on the total excess time that results from users’ decisions under any passive regulation. Given the system's characteristics and journey demand realization over a predetermined planning horizon (typically a day), we formulate an optimization problem that centrally selects the itineraries of the VSS's users so as to minimize the total excess time.

The solution value of this optimization problem is a lower bound on the total excess time that may be achieved under any passive regulation due to the following two assumptions on which the optimization problem is based:

                           
                              1.
                              All demands for journeys are known in advance.

A central planner determines the itinerary of each user in a way that benefits the entire system. The justification of this assumption is that any solution selected by the central planner may be selected by the users under some passive regulation.

In practice, each user determines her own itinerary based on her individual objectives and based on information that she has access to. Thus, the excess time of an optimal assignment obtained by a central planner with full information is a lower bound on the excess time resulting from any passive regulation policy, i.e., a policy that somehow limits user itinerary selection options. We note that due to the system's limited resources, this bound is typically strictly positive and is thus better than the trivial bound of zero excess time (no shortages of any type).

In practice, the demand for journeys is a stochastic process. Therefore, the average solution value of the optimization problem for numerous demand realizations, drawn from a given stochastic process, serves as an estimator of a lower bound on the expected total excess time under any passive regulation.

A demand realization is described by a set of journeys where each journey is characterized by an “origin-destination-time” tuple. Each journey can be materialized by one of several possible itineraries. We assume that a possible itinerary can take one of the following forms:

                           
                              a)
                              Use a shared vehicle from the origin to the desired destination.

Use a shared vehicle from the origin station to another station with an available parking space and then use an alternative mode of transportation to reach the desired destination.

Use an alternative mode of transportation to reach a station with an available vehicle and then use a shared vehicle from this station to reach the desired destination.

Use an alternative mode of transportation to reach a station with an available vehicle and then use a shared vehicle from this station to another station with an available parking space. Then, from this station, use an alternative mode of transportation to reach the desired destination.

Use an alternative mode of transportation from the origin to the desired destination.

We refer to stations where vehicles are actually rented (resp., returned) as renting (resp., returning) stations. Upon attempting to return a shared vehicle, a user may be required to wait at the returning station until a parking space becomes available and to then proceed with her itinerary (leave the system or continue with an alternative mode of transport). We assume that users will not wait for a vehicle to become available in a renting station, as information on the number of vehicles in each station is available to them in real time. Instead, users would roam to a nearby station or use an alternative mode of transportation for the entire journey.

In Fig. 1, we present an example with several possible itineraries that materialize the journey of a user who wishes to travel from station A to station B. The travel time of each journey segment is depicted on the corresponding arc, and itinerary excess times (denoted by X) are presented below each graph. For example, in Fig. 1(b), the excess time is 5 because the travel time is 12 (in comparison to a travel time of 7 in the case of the ideal journey shown in Fig. 1(a)). In Fig. 1(a)–(e), we, respectively present examples of each of the five itineraries presented above. Note that because the excess time associated with using an alternative mode of transportation for an entire journey (as in 1(e)) is 14, itineraries with longer excess time periods such as 1(f) will never be selected by a user and can thus be disregarded by the central planner.

Each possible itinerary can be defined by its renting station, returning station and renting time. The returning time is determined by the renting time and by the traveling time between the two stations. Waiting times at the returning stations are not considered when calculating itinerary times, as they are calculated separately. In addition, a journey can be materialized by an itinerary that includes only an alternative mode of transportation. Clearly, such an itinerary is not associated with renting and returning stations.

We define a set of possible events where each event is a time-station tuple that refers to a renting or returning time and to the location of a possible itinerary. We assume without loss of generality that at most one event can occur at each station at a given time. At the time of each event, the state of the corresponding station is defined by the number of vehicles parking at the station and by the number of users that are (possibly) waiting to return vehicles at the station.

The assignment of itineraries to users, carried out by the central planner, is constrained by several considerations that are related to the availability of vehicles and parking spaces at the stations. In Fig. 2, we use a network flow graph to present vehicle movements within a system over time. We use the possible itineraries of a journey depicted in Fig. 1 as an example, assuming that the journey starts at time 20. Each possible itinerary that involves vehicle movement [itineraries (a)–(d) of our example] is depicted by a black solid arc from a node that represents the renting time and location to a node that represents the returning time and location. The costs of these arcs are the excess times associated with their itinerary and their capacities are 1. The use of an alternative mode of transportation is not directly reflected by arcs in the network. However, node times and arc costs are affected by the use of alternative modes of transportation. For example, for itinerary (c) depicted in Figs. 1 and 2, the use of a shared vehicle begins at station D at time 26 even though the itinerary starts at station A at time 20. The cost of this arc is 5, representing the excess time of the itinerary.

To depict a full demand realization we construct a network such as the one shown in Fig. 2, with a set of nodes and arcs created for all possible itineraries of all demanded journeys. The nodes in this network correspond to events. Each pair of consecutive nodes on the time axis, which are associated with the same station, is connected by two “horizontal” parallel arcs. The solid gray arc represents the number of vehicles parked in the station between the two events, and the dashed arc represents the number of vehicles (and drivers) waiting in the station for a vacant parking space during this time interval. As the two nodes are consecutive, the number of vehicles parking and waiting in the station does not change over this time interval. The cost of the parking arcs is zero, and their capacity is equal to the capacity of the station. The per unit cost of the waiting arcs equal to the time difference between their end nodes and their capacity is not limited. For example, if the flow on the waiting arc that connects nodes (B,27) and (B,32) has a value of 3; the excess time incurred as a result of waiting in station B between time periods 27 and 32 is 15.

The network also includes one source node for each station, with a supply that represents the initial inventory of the station and one sink node. The net demand of the rest of the nodes is zero. A feasible assignment of itineraries to journeys is obtained as a feasible integer flow on this network with additional side constraints. These constraints limit the total flow on all the itinerary arcs associated with each journey to a maximum value of 1. A solution where the total flow on the arcs associated with a certain journey takes a value of zero represents the selection of an itinerary that involves an alternative mode only, e.g., Fig. 1(e). The excess time incurred in such a solution is the sum of the flow costs plus costs incurred as a result journeys that use alternative modes only. Thus, our lower bound is obtained by minimizing this excess time. We solve this optimization problem using the MILP formulated below. Next, the notation used to formulate this model is presented.

                           
                              
                                 
                                 
                                 
                                    
                                       Indices:
                                       
                                    
                                    
                                       
                                          
                                             s
                                          
                                       
                                       Station
                                    
                                    
                                       
                                          
                                             t
                                          
                                       
                                       Time
                                    
                                    
                                       
                                          
                                             j
                                          
                                       
                                       Journey
                                    
                                    
                                       
                                          
                                             
                                                i
                                                ,
                                                k
                                             
                                          
                                       
                                       Itinerary
                                    
                                    
                                       Parameters:
                                       
                                    
                                    
                                       
                                          
                                             S
                                          
                                       
                                       Set of stations
                                    
                                    
                                       
                                          
                                             J
                                          
                                       
                                       Set of journeys
                                    
                                    
                                       
                                          
                                             
                                                C
                                                s
                                             
                                          
                                       
                                       Capacity of station 
                                             s
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                L
                                                s
                                                0
                                             
                                          
                                       
                                       Initial vehicle inventory of station 
                                             s
                                          
                                       
                                    
                                    
                                       
                                          
                                             E
                                          
                                       
                                       Set of possible events [
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                           tuples]
                                    
                                    
                                       
                                          
                                             
                                                I
                                                j
                                             
                                          
                                       
                                       Set of possible itineraries of journey 
                                             j
                                          , we also use 
                                             
                                                I
                                                ≡
                                                
                                                   ∪
                                                   
                                                      j
                                                      ∈
                                                      J
                                                      
                                                   
                                                
                                                
                                                   I
                                                   j
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                X
                                                i
                                             
                                          
                                       
                                       The excess time of itinerary 
                                             i
                                           (not including waiting time)
                                    
                                    
                                       
                                          
                                             
                                                D
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                             
                                          
                                       
                                       The time difference between event 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                           and the next event at station 
                                             s
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                B
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                       The set of itineraries in which a vehicle is rented at station 
                                             s
                                           at time 
                                             t
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                F
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                       The set of itineraries in which a vehicle is returned at station 
                                             s
                                           at time 
                                             t
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   (
                                                   
                                                      s
                                                      ,
                                                      t
                                                   
                                                   )
                                                
                                                ′
                                             
                                          
                                       
                                       The event that precedes event 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                           at station 
                                             s
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In addition, we define two artificial events (s, 0) and (s, H) for each station s that denote the beginning and end of the planning horizon, respectively. Note that X
                           i
                         represents the excess time associated with selecting itinerary i. This excess time includes the additional time incurred by using alternative modes of transportation to materialize an entire journey or part of a journey. It does not include additional excess time that the user may experience as a result of waiting for a vacant parking space at the returning station. This waiting time is reflected by the D
                        
                           s, t
                         parameter. Without loss of generality, the set Ij
                         includes only journeys with excess times that are not greater than the excess time of using alternative mode for the entire journey.

                           
                              
                                 
                                 
                                 
                                    
                                       Decision variables:
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                r
                                                i
                                             
                                          
                                       
                                       1 if itinerary 
                                             i
                                           is selected, 0 otherwise
                                    
                                    
                                       
                                          
                                             
                                                p
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                             
                                          
                                       
                                       Number of vehicles parking at station 
                                             s
                                           immediately after event 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                w
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                             
                                          
                                       
                                       Number of users waiting to return a vehicle at station 
                                             s
                                           immediately after event 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

With respect to the network flow model, the ri
                         variables represent flows on the itinerary arcs. The p
                        
                           s, t
                         variables represent flows on the parking arcs, and the w
                        
                           s, t
                         variables represent flows on the waiting arcs. The problem can now be formulated as an MILP model. We refer to this model as the Passive Regulation Lower Bound (PR-LB).

                           
                              (1)
                              
                                 
                                    m
                                    i
                                    n
                                    i
                                    m
                                    i
                                    z
                                    e
                                    
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       X
                                       i
                                    
                                    ·
                                    
                                       r
                                       i
                                    
                                    +
                                    
                                       ∑
                                       
                                          
                                             (
                                             
                                                s
                                                ,
                                                t
                                             
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                    
                                       D
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    ·
                                    
                                       w
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             S
                                             u
                                             b
                                             j
                                             e
                                             c
                                             t
                                             
                                             t
                                             o
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      I
                                                      j
                                                   
                                                
                                             
                                             
                                                r
                                                i
                                             
                                             =
                                             1
                                             
                                             
                                             ∀
                                             j
                                             ∈
                                             J
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       p
                                       
                                          
                                             (
                                             
                                                s
                                                ,
                                                t
                                             
                                             )
                                          
                                          
                                             
                                             ′
                                          
                                       
                                    
                                    +
                                    
                                       w
                                       
                                          
                                             (
                                             
                                                s
                                                ,
                                                t
                                             
                                             )
                                          
                                          
                                             
                                             ′
                                          
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          F
                                          
                                             (
                                             
                                                s
                                                ,
                                                t
                                             
                                             )
                                          
                                       
                                    
                                    
                                       r
                                       i
                                    
                                    =
                                    
                                       p
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    +
                                    
                                       w
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          B
                                          
                                             (
                                             
                                                s
                                                ,
                                                t
                                             
                                             )
                                          
                                       
                                    
                                    
                                       r
                                       i
                                    
                                    
                                    
                                    ∀
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ∈
                                    E
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       p
                                       
                                          s
                                          ,
                                          0
                                       
                                    
                                    =
                                    
                                       L
                                       
                                          s
                                       
                                       0
                                    
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    S
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       p
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    ≤
                                    
                                       C
                                       s
                                    
                                    
                                    
                                    ∀
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ∈
                                    E
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       w
                                       
                                          s
                                          ,
                                          0
                                       
                                    
                                    =
                                    0
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    S
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       w
                                       
                                          s
                                          ,
                                          H
                                       
                                    
                                    =
                                    0
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    S
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       r
                                       i
                                    
                                    ∈
                                    
                                       {
                                       
                                          0
                                          ,
                                          1
                                       
                                       }
                                    
                                    
                                    
                                    ∀
                                    i
                                    ∈
                                    I
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       p
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    ≥
                                    0
                                    
                                    
                                    ∀
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ∈
                                    E
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       w
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    ≥
                                    0
                                    
                                    
                                    ∀
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ∈
                                    E
                                 
                              
                           
                        
                     

The objective function (1) sums the excess time of the selected itineraries and the waiting times of all users who wait to return their vehicle at their returning station. These are the two components of the total excess time of all system users. Constraints (2) assure that for each journey exactly one itinerary is selected. Constraints (3) are vehicle inventory balance equations: for each event (s, t) the constraint asserts that the total flow of vehicles that enter (left hand side) and leave (right hand side) are equal. Recall that (s, t)′ is the event that precedes event (s, t) at the stations, and thus 
                           
                              
                                 p
                                 
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ′
                                 
                              
                              +
                              
                                 w
                                 
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ′
                                 
                              
                           
                         is the total number of vehicles parking and waiting at the station immediately before event (s, t). Constraints (4) set the initial vehicle inventory of each station. Constraints (5) limit the number of parked vehicles in a station to the station capacity. Constraints (6) and (7) state that no user is waiting to return a vehicle at the beginning or at the end of the planning horizon. Constraints (8) stipulate that the itinerary decision variables are binary. Constraints (9) and (10) are non-negativity constraints on the number of parked vehicles and waiting users after each event.

In this model, the central planner may assign a user to any of its given potential itineraries. In some cases, users may be referred to relatively distant rent or return stations, merely in order to balance vehicle inventories to the system's benefit and not necessarily because the system cannot satisfy their demand via better itineraries. In the next section, we extend the model to limit such occurrences.

Theoretically, a user may begin her ride and return the vehicle at any station. Therefore, the number of potential itineraries of a journey is the square of the number of stations. However, most of these potential itineraries would take longer to complete than simply using an alternative mode of transportation for the entire journey (i.e., abandoning the system). Under many regulations, it is safe to assume that users will not accept such itineraries. In the numerical experiment reported in Section 4, we let the central planner consider only those potential itineraries that are not longer than using the alternative mode of transportation for the entire journey. Moreover, to reduce computational efforts required to solve the PR-LB model (1)–(10), we relaxed the integrality constraints (8) and replaced them with non-negativity constraints. This clearly preserves the result as a lower bound. In our numerical experiment, we observed that the effect of this relaxation on the obtained lower bound is negligible, see the discussion in Section 4.

When restricting ourselves to itineraries that are not longer than using the alternative mode of transportation, an alternative lower bound on the total excess time could be obtained by including the possible waiting times at the destination within the itineraries and by removing the waiting variables (w
                        
                           s, t
                        ) from the model. Using such a formulation, we allow only travel and waiting time sequences that are together shorter than those that involve using the alternative mode of transportation for the entire journey. This further limits the decision space of the central planner and thus may result in a tighter lower bound. However, this approach produces significantly more potential itineraries (and thus decision variables). For the instances that we solved, we found the total waiting time to be negligible relative to the total excess time. Therefore, we believe that potential improvements to the lower bound are insignificant.

Although this study focuses on parking reservation policies, the above model serves as a lower bound on the excess time under any passive regulation. In particular, as the input for this model include all the demand for journeys the model it can also serve as a lower bound for vehicle reservation policies, trip reservation policies, the best of two regulation proposed by Fricker and Gast (2014), and the pricing regulations proposed by Chemla et al. (2013b) and Pfrommer et al. (2014).

In this section, we focus on a subset of all possible passive regulations: parking reservation policies. A parking reservation involves a process in which, when attempting to rent a vehicle, a user declares her destination, and a trip is either allowed or denied by the system. If a trip is allowed, a parking space is reserved to the user at the desired destination. If a trip is denied, the user may try to place reservations to other destinations until one is allowed. A parking reservation policy is a set of rules that determine the following: in which subset of trips a user is required to place reservation, whether a reservation request is allowed or denied and when a reservation in approved, whether a parking space is reserved for the user temporarily or permanently (until her arrival at the destination). The operator is allowed to overbook parking spaces that are currently not available. However, for a parking reservation policy to be enforceable and sustainable over time, the operator must not deny parking reservation requests unjustifiably. Next, we formally define the set of parking reservation polices studied in this paper.


                        
                           Definition 1
                           (A parking reservation policy). A passive regulation whereby the operator can deny renting a vehicle only if there are no reservable parking spaces at the destination at the renting time.

Recall that under a parking reservation policy, reservations are not always required. However, when they are required, the condition of Definition 1 must hold. For example, the CPR and NR policies are both legitimate parking reservation policies. In the CPR policy, the reservation of a reservable space is always required. The NR policy trivially satisfies the requirement of Definition 1, as under this policy, no reservation is required, and thus reservations are never denied.

Under any parking reservation policy, the set of possible itineraries that can materialize journey j, Ij
                        , can be partitioned into three subsets based on the state of the system when the journey begins. (I) Itineraries that cannot be denied under a parking reservation policy. This set includes any itinerary with an available vehicle at its renting station at its renting time and a reservable parking space at its returning station at the renting time. In addition, the itinerary that consists of the alternative mode only is always included in this set, as it is also an itinerary that cannot be denied. (II) Itineraries that can be either denied or allowed under a parking reservation policy. This set includes any itinerary with available vehicles in its renting station at its renting time but no reservable parking space at its returning station at the renting time. The assignment of itineraries from this set may be materialized through overbooking policies or partial reservation policies, whereby some users start their journeys without making reservations at all. (III) Itineraries that cannot be permitted under a parking reservation policy. This set includes any itinerary with no available vehicles at its renting station at the renting time. The parking reservation policy dictates which of the itineraries in (II) are available to the user. The user, from her side, selects the itinerary from (I) or from permitted itineraries in (II) that minimizes her excess time.

Note that under a general passive regulation, a system may offer a user any subset of itineraries through the union of (I) and (II), as long as this subset includes the itinerary that uses the alternative mode only. However, under a parking reservation policy, the offered subset must include all itineraries in (I) and possibly some itineraries in (II). Thus, under these policies, a system has less control over users’ decisions.

The PR-LB model (1)–(10) is modified such that the central planner may assign the shortest itinerary in (I) or a shorter itinerary from (II) to each journey. Recall that in the original model, any itinerary derived from the union of (I) and (II) can be assigned. The partitioning of potential itineraries among sets (I), (II), and (III) cannot be pre-defined as a model input. This is because the selection of itineraries included in these subsets depends on the system's state at the decision time and on all decisions made for journeys that begin prior to that journey. Instead, we modify the PR-LB model, (1)–( 10), by adding decision variables and constraints to exclude itineraries that will not be selected by users under any parking reservation policy. We refer to this extended model as the Parking Reservation Policy Lower Bound model (abbreviated PRP-LB). We use the same notation as in the PR-LB model (1)–( 10) and add the following parameters and decision variables:

                           
                              
                                 
                                 
                                 
                                    
                                       Parameters:
                                       
                                    
                                    
                                       
                                          
                                             
                                                O
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       A 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                           tuple that represents the renting station and renting time of itinerary 
                                             i
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                D
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       A 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                           tuple that represents the returning station and returning time of itinerary 
                                             i
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                J
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       The journey that can be materialized by itinerary 
                                             i
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                T
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                       Time of node 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                S
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                       Station of node 
                                             
                                                (
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                R
                                                i
                                             
                                          
                                       
                                       A set of itineraries for which a parking space may be reserved at the returning station of itinerary 
                                             i
                                           at the renting time of itinerary 
                                             i
                                          . That is, an itinerary 
                                             k
                                           is in the set if:
                                    
                                    
                                       
                                       • It is of a different journey, 
                                             
                                                J
                                                (
                                                k
                                                )
                                                ≠
                                                J
                                                (
                                                i
                                             
                                          )
                                    
                                    
                                       
                                       • It has the same returning station as itinerary
                                             
                                                
                                                i
                                             
                                          , 
                                             
                                                S
                                                (
                                                
                                                   D
                                                   (
                                                   k
                                                   )
                                                
                                                )
                                                =
                                                S
                                                (
                                                
                                                   D
                                                   (
                                                   i
                                                   )
                                                
                                                )
                                             
                                          .
                                    
                                    
                                       
                                       • The renting time of itinerary 
                                             k
                                           is earlier than the renting time of itinerary 
                                             i
                                          , 
                                             
                                                T
                                                (
                                                
                                                   O
                                                   (
                                                   k
                                                   )
                                                
                                                )
                                                <
                                                T
                                                (
                                                
                                                   O
                                                   (
                                                   i
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       • The returning time of itinerary k is later than the renting time of itinerary 
                                             i
                                          , 
                                             
                                                T
                                                (
                                                
                                                   D
                                                   (
                                                   k
                                                   )
                                                
                                                )
                                                >
                                                T
                                                (
                                                
                                                   O
                                                   (
                                                   i
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             M
                                          
                                       
                                       A very large number (for example, twice the capacity of the largest station)
                                    
                                    
                                       Auxiliary decision variables:
                                    
                                    
                                       
                                          
                                             
                                                e
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                             
                                          
                                       
                                       0 if a vehicle is available at station 
                                             s
                                           at time
                                             
                                                
                                                t
                                             
                                          , otherwise it can either be 0 or 1.
                                    
                                    
                                       
                                          
                                             
                                                f
                                                i
                                             
                                          
                                       
                                       0 if at renting time 
                                             
                                                T
                                                (
                                                
                                                   O
                                                   (
                                                   i
                                                   )
                                                
                                                )
                                             
                                           there are some reservable parking spaces at station 
                                             
                                                S
                                                (
                                                
                                                   D
                                                   (
                                                   i
                                                   )
                                                
                                                )
                                             
                                          . Otherwise, it can either be 0 or 1.
                                    
                                 
                              
                           
                        
                     

The PRP-LB model can thus be written as (1)-(10) with the following additional constraints:

                           
                              (11)
                              
                                 
                                    
                                       e
                                       
                                          O
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    +
                                    
                                       f
                                       i
                                    
                                    ≥
                                    
                                       r
                                       k
                                    
                                    
                                    ∀
                                    i
                                    ,
                                    k
                                    ∈
                                    
                                       I
                                       j
                                    
                                    
                                    :
                                    
                                    
                                       X
                                       i
                                    
                                    <
                                    
                                       X
                                       k
                                    
                                    
                                    ∀
                                    j
                                    ∈
                                    J
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    M
                                    ·
                                    
                                       (
                                       
                                          1
                                          −
                                          
                                             e
                                             
                                                s
                                                ,
                                                t
                                             
                                          
                                       
                                       )
                                    
                                    ≥
                                    
                                       p
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    +
                                    
                                       w
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    
                                    ∀
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ∈
                                    E
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       C
                                       
                                          S
                                          
                                             (
                                             
                                                D
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    
                                    ·
                                    
                                       f
                                       i
                                    
                                    ≤
                                    
                                       p
                                       
                                          D
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    +
                                    
                                       w
                                       
                                          D
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          k
                                          ∈
                                          
                                             R
                                             i
                                          
                                       
                                    
                                    
                                       r
                                       k
                                    
                                    
                                    ∀
                                    i
                                    ∈
                                    I
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       e
                                       
                                          s
                                          ,
                                          t
                                       
                                    
                                    ∈
                                    
                                       {
                                       
                                          0
                                          ,
                                          1
                                       
                                       }
                                    
                                    
                                    ∀
                                    
                                       (
                                       
                                          s
                                          ,
                                          t
                                       
                                       )
                                    
                                    ∈
                                    E
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       f
                                       i
                                    
                                    ∈
                                    
                                       {
                                       
                                          0
                                          ,
                                          1
                                       
                                       }
                                    
                                    
                                    ∀
                                    i
                                    ∈
                                    I
                                 
                              
                           
                        
                     

Constraints (11) stipulate that each journey must be materialized via the shortest possible itinerary, i.e., the one with the shortest excess time permitted under a parking reservation policy. For any itinerary k, if an itinerary i of the same journey with shorter excess time that belongs to (I) exists, then itinerary k cannot be selected. Recall that if itinerary i is in (I), then a vehicle is available at its renting station (e
                        
                           O(i)=0), and a parking space is available at its returning station (
                           
                              
                                 f
                                 i
                              
                              =
                              0
                           
                        ). In this case, the left hand side of (11) is zero, and thus, rk
                         must be zero. Note that if itinerary i is in (II), the right hand side of (11) is greater than zero. In this case, the model may or may not assign itinerary k to the journey. According to constraints (12), a station can be considered "empty" for a given time only if there are no vehicles parked or waiting during that time. Constraints (13) assure that the fi
                         variables are set to zero if reservable parking spaces are available at the returning station of itinerary i at the renting time. The decision variable w
                        
                           s, t
                         is added to the right hand side of constraints (12) and (13) to ensure that the central planner will not “leave” vehicles waiting outside of a station that is not full in order to gain more flexibility in selecting possible itineraries. Constraints (14) and (15) stipulate that variables e
                        
                           s, t
                         and fi
                         are binary.

The value of the solution of the PRP-LB model (1)–(15) provides a tighter bound on the total excess time compared to the PR-LB model (1)–(10), as the former is based on a super-set of its constraints, and parking reservation policies are a subset of any passive regulation. As in the case of PR-LB, this model was solved while relaxing binary variable ri
                        . Binary variables e
                        
                           s, t
                         and fi
                         were not relaxed because if their integrality is not imposed, the resulting relaxation is very weak. This is due to the effects of big-M terms in constraints (12) and (13). Indeed, this model is more difficult to solve (see Section 4).

In the PRP-LB model (unlike the PR-LB), if vehicles are available at the station at a renter's arrival time, the system must offer one to the user. Therefore, this model cannot provide a lower bound on the performance of vehicle or trip reservation policies. Next, we formally prove the validity of the optimal solution value of PRP-LB as a lower bound on the total excess time under any parking reservation policy.


                        
                           Proposition 1
                           
                              For any demand realization, the total excess time associated with the optimal assignment of itineraries to journeys under PRP-LB is not greater than the excess time under any parking reservation policy.


                        
                           Proof
                           Consider the assignment of itineraries to journeys obtained under a parking reservation policy (satisfying the conditions of Definition 1). We refer to this assignment as A*. We claim that such an assignment can be mapped to a feasible solution of PRP-LB, and thus, the optimal solution of PRP-LB is a lower bound on the excess time that results from any parking reservation policy. First, note that because A* is a feasible assignment of itineraries to journeys, it must satisfy constraints (2)–(10) when setting the ri
                               variables to represent the actual itineraries that were selected by the users under policy A* and when setting the values of the variables p
                              
                                 s, t
                               and w
                              
                                 s, t
                               to represent the number of vehicles that are parking and waiting at the stations after each event (s, t), respectively. Next, we show that the values of the binary variables e
                              
                                 s, t
                               and fi
                               can be set so that the rest of the PRP-LB constraints can be satisfied. First, we set the value of e
                              
                                 s, t
                               as follows:

                                 
                                    
                                       
                                          
                                             e
                                             
                                                s
                                                t
                                             
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      
                                                         
                                                            p
                                                            
                                                               s
                                                               ,
                                                               t
                                                            
                                                         
                                                         +
                                                         
                                                            w
                                                            
                                                               s
                                                               ,
                                                               t
                                                            
                                                         
                                                         >
                                                         0
                                                      
                                                   
                                                
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         o
                                                         
                                                         t
                                                         h
                                                         e
                                                         r
                                                         w
                                                         i
                                                         s
                                                         e
                                                      
                                                   
                                                
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           

Such an assignment would immediately satisfy constraints (12) for each event (s, t). Similarly, we set

                           
                              
                                 
                                    
                                       f
                                       i
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                0
                                             
                                             
                                                
                                                   
                                                      p
                                                      
                                                         D
                                                         
                                                            (
                                                            i
                                                            )
                                                         
                                                      
                                                   
                                                   +
                                                   
                                                      w
                                                      
                                                         D
                                                         
                                                            (
                                                            i
                                                            )
                                                         
                                                      
                                                   
                                                   +
                                                   
                                                      ∑
                                                      
                                                         k
                                                         ∈
                                                         
                                                            R
                                                            i
                                                         
                                                      
                                                   
                                                   
                                                      r
                                                      k
                                                   
                                                   <
                                                   
                                                      C
                                                      
                                                         S
                                                         
                                                            (
                                                            
                                                               D
                                                               
                                                                  (
                                                                  i
                                                                  )
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1
                                             
                                             
                                                
                                                   o
                                                   
                                                   t
                                                   h
                                                   e
                                                   r
                                                   w
                                                   i
                                                   s
                                                   e
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        which immediately satisfy constraints (13) for each itinerary i. Now, it is left to show that with this assignments constraints (11) are satisfied for each pair of itineraries of the same journey (i, k) such that k is selected under policy A* and X
                           i
                         < X
                           k
                        , that is, itinerary i has a shorter excess time than itinerary k. Recall that when k is selected, 
                           
                              
                                 r
                                 k
                              
                              =
                              1
                           
                        . Assume by contradiction, that constraint (11) is violated, implying that 
                           
                              
                                 e
                                 
                                    O
                                    (
                                    i
                                    )
                                 
                              
                              =
                              0
                           
                         and 
                           
                              
                                 f
                                 i
                              
                              =
                              0
                           
                        . This means that for itinerary i, a vehicle was available, and a reservable parking space was available at the renting time. According to Definition 1, such an itinerary cannot be denied under a parking reservation policy. Finally, as it is shorter than itinerary k, it must have been selected by the user, which is a contradiction. □

According to Proposition 1, the assignment of itineraries that can result from any parking reservation policy under any demand realization is a feasible solution of PRP-LP. Thus, the excess time that can be achieved under any parking reservation policy is bounded from below by the optimal solution of the model.

The lower bounds developed in the previous section may be used to evaluate the effectiveness of any regulation or parking reservation policy. In this section, we introduce several parking reservation policies. The performance of a VSS under these policies or under any other regulation can be evaluated only with respect to user responses to rules prescribed under a regulation. We base our analysis, with respect to users’ response, on an axiomatic approach and model the users as rational independent agents who strive to minimize their own excess time. However, achieving this goal may be too difficult for many users to accomplish due to the stochastic nature of the VSS. Therefore, we postulate a user behavior model that heuristically approximates this minimization problem and that in fact, provides an optimal solution in most cases.

In Section 3.1, we present this user behavior model. The model describes the decisions taken by the users at different decision points. These decisions are affected by the state of the system and the settings of the regulation. In Section 3.2, we present three partial reservation policies, discuss the motivations for using them and explain how they are reflected in the user behavior model. In Section 3.3, we present a utopian parking overbooking policy that is used to gauge the potential benefits of parking overbooking policies.

The movement of users within the system depends both on its regulation and on the state of the system (the availability of vehicles and parking spaces). A user who enters the system acts as follows. If there are no available vehicles at her origin station, she may either decide to go to a nearby station via an alternative mode of transportation in search for an available vehicle, or she may decide to abandon the system. An abandoning user is assumed to travel to her destination using an alternative mode of transportation. Note that in a modern VSS, the user can make this decision based on real time information on the availability of vehicles in the stations of the system. Once a user finds an available vehicle, there are two options: (1) A parking reservation is not required or (2) a parking reservation is required. Under option (1), the user rents a vehicle and travels to her destination. When the user reaches her destination (with a vehicle), if she finds an available parking space, she returns the vehicle and exits the system. If there are no available parking space at the destination station, the user may decide to wait at the station until a parking space becomes available (i.e., she enters a waiting queue). Alternatively, the user may decide to roam to a nearby station in search of an available parking space. Again, this decision is based on real time information on the availability of parking spaces in the stations. Under option (2), the user attempts to make a parking reservation at her destination station. If the reservation is approved, the user makes a rent-and-reserve transaction and travels to her destination station. If the parking reservation is guaranteed, the user can immediately exit the system upon reaching her destination. If the reservation is not guaranteed, the user travels to the returning station and proceeds as in option (1). If the parking reservation is not approved, the user can either attempt to make a reservation at another station close to her destination, or she may decide to abandon the system. Finally, if for one of the above reasons the vehicle is returned to a different station than the user's destination station, the user uses an alternative mode of transportation to reach her destination station and then exits the system.

This behavior model is described in Fig. 3
                        . At decision points, we assume that users have full knowledge of the system's state, including inventory levels at each station and renter arrival rates to each station (for example, the operator, or a third party, can provide this information via a smartphone application). Users are assumed to be strategic so that at decision points, they select the alternative that minimizes their expected remaining traveling time. An alternative user behavior model can be based on the maximum utility theory, thus introducing randomness to itinerary selection decisions while reflecting factors that are not included in the current model. However, we use a deterministic itinerary selection model that is based solely on excess time, as it is based on data that are readily available to operators. We believe that such a model is sufficiently accurate in providing insight into the effects of various parking reservation polices.

We further elaborate on the user decision processes denoted in Fig. 3 by I, II and III:

                           
                              I.
                              A renter who arrives at a station with no available vehicles would consider a nearby station such that the total time spent using an alternative mode of transportation to reach that station and the traveling time from that station to the destination, is the shortest among all stations with available vehicles. The user would choose an alternative mode of transportation for the entire journey if it is faster than the above alternative.

A renter who arrives with a shared vehicle at a station with no available parking spaces would consider a nearby station such that the total time spent traveling with the shared vehicle to that station and using an alternative mode of transportation from there to the destination is the shortest among all stations with available parking spaces. The user would choose to wait in the station until a parking space becomes available if the expected time for this to occur is shorter than the above alternative.

A renter who cannot make a parking reservation at the destination station would consider making a reservation at a nearby station such that the total time spent traveling in the shared vehicle to the chosen returning station and using an alternative mode of transportation from there to the destination is the shortest among all stations for which it is possible to make a parking reservation. The user would choose using an alternative mode of transportation for the entire journey if it is faster than the above alternative.

In the user behavior model, three junctions represent the policy settings:

                           
                              •
                              Is a parking reservation required?

Has the reservation been approved?

Is a vacant parking space guaranteed?

To highlight these junctions, we plot them in Fig. 3 as trapezoids. The NR and CPR policies are complete in the sense that under each of these policies, the answer to each of the above three questions is identical for all system users. For example, under the CPR policy, all users are required to make a parking reservation, a reservation is approved if a parking space is available at the return station at the renting time and a vacant parking space is guaranteed to all users who can make a parking reservation.

In this section, we present three types of partial parking reservation policies. Each type is based on a simple, yet reasonable principle. The common motivation for these policies is to enforce parking reservations only when they are likely to have a positive effect on the performance of the system. In the descriptions presented below, a trip is defined as a direct ride between a pair of origin-destination stations.

Under this policy, parking reservations are required only for trips with expected traveling times shorter than a given threshold. At the renting time, a user specifies her destination, and if the expected traveling time is shorter than the given threshold, she is required to reserve a parking space at her destination. As in the CPR policy, if no vacant parking spaces are available at the destination at the renting time, the transaction is denied, and the user may attempt to make a reservation at a different station. A user with an expected riding time that is longer than the threshold time is not required to make a parking space reservation. If such a user finds an available vehicle at her origin, she can rent it and travel to her destination, as can be done under the NR policy. The rationale behind this policy can be stated as follows: as a parking space is a valuable resource in a VSS and a reservation practically blocks it for the duration of the trip, the parking space should only be reserved for short trips. Moreover, users with short travel times may be more sensitive to excess time due to parking space shortages at destinations.

Note that if the threshold time is set to zero, this policy coincides with the NR policy. Conversely, if the threshold is set to a large enough value, this policy coincides with the CPR policy. Different partial polices of this type can be obtained by setting the value of the threshold parameter between these two extremes.

Under this policy, a parking reservation is required only if the difference between the expected returning and renting rates at the destination station over a certain time interval is higher than a pre-specified value, referred to as the difference threshold. Otherwise, no reservation is required. Expected renting and returning rates can be estimated based on past transactions. The difference is calculated for each station during predefined time intervals of each day. If the calculated difference is lower than the difference threshold, the user will behave as she does under the NR policy.

The rationale behind this policy can be stated as follows: the probability of parking space shortages in a station grows as the imbalance (difference) between demand rates for parking spaces and vehicles grows. Such imbalances may be consistent, for example, in bike sharing stations at relatively low altitude locations, where bicycles are more likely to be returned than rented. Alternatively, the imbalance may change throughout the day (e.g., at stations located in working areas where in the morning, returning rates are much more prevalent than renting rates). When the demand rate for parking spaces (returning) is higher than the demand rate for vehicles (renting), users are more likely to find a station full. By enforcing parking reservations at such stations, the system can prevent users from traveling to stations with no available parking spaces by redirecting some users to less congested nearby stations. Such a shift is likely to occur anyway, as users who find a full station typically roam to a nearby station to return their vehicles. When parking reservations are in effect, changes in the returning stations are determined in advance, which is likely to reduce user excess time. In contrast, it seems less effective to enforce parking reservations in stations that are likely to be empty regardless.

Note that the higher the difference threshold is, the fewer the cases in which reservations are required. For extremely high threshold values, the policy coincides with the NR policy, while for extremely low (negative) values, it coincides with the CPR policy.

Under this policy, all users are required to make a parking reservation as in the CPR policy, but reservations are only valid for a limited time. After a reservation expires, the reserved parking space becomes available to other users, and a vacant parking space is no longer guaranteed to the user. If the reservation expires and no parking space is available by the time the user arrives at the destination station, she will have to either wait by the station or roam to a nearby station (as in the NR policy).

The rationale behind this policy can be stated as follows: by making a reservation, a user with a long traveling time who reaches her destination only after her reservation expires still affects the system because as long as her reservation is valid, she may prevent other users from making a reservation. That is, her reservation may divert subsequent demand, which may increase the probability of the user to find a vacant parking space, even if her reservation has expired.

Note that if the time limit is set to a large enough value, this policy coincides with the CPR policy. However, if the time limit is set to zero, the resulting policy still differs from the NR policy, as users are still required to make a reservation, and they cannot begin traveling to a station that is full at the renting time. In Section 4, we compare the performance of this specific setting (in which the time limit is set to zero) to the performance of the NR policy and discuss their differences and implications.

In many service systems that require reservations, it is common practice to allow overbooking. That is, accepting reservations for resources that may not be available at the required time. Overbooking may serve as an effective policy in the presence of arrival stochasticity or in services where customer no-shows are common. In a VSS that practices parking reservations, no-shows are not an issue, as reservations are made at the renting time, and the users must return the vehicle at the stated destinations. Nevertheless, in some cases, it may be beneficial to allow users to travel to a station even if it has no available parking spaces (i.e., to allow overbooking), as a parking space may become available by the time the user reaches her destination station. An effective overbooking policy is based on reliable forecasting that is capable of predicting such occurrences.

In order to evaluate the potential benefits of overbooking policies, we envision a system that has full information regarding the demand for vehicles at a station that allows overbooking. Overbooking decisions are based on this information, and thus, this approach is referred to as a utopian overbooking policy. Note, however, that this policy optimizes the service provided to each individual user individually rather than taking the system's perspective as is shown in the lower bounds presented in Section 2.

Under this policy, upon renting, the user is required to declare her destination, and then the system determines whether a reservation can be made or not. The system's decision is made based on knowledge of the current state of the destination station, including users who are traveling to that station in a vehicle, and of all future renter arrivals to that station (including their exact arrival times). We refer to the system decision process as a look-ahead process, as the system's decisions are made by anticipating whether a parking space will be available at the destination station upon arrival. The look-ahead algorithm, which is executed with each reservation attempt, is presented in Table 1
                        . We use the following notation to describe it:

                           
                              
                                 
                                 
                                 
                                    
                                       
                                          
                                             E
                                          
                                       
                                       A list of future events at the returning station, including return events of reservations that have already been approved, the reservation being requested, and all future rent events.
                                    
                                    
                                       
                                          
                                             
                                                x
                                                .
                                                t
                                                i
                                                m
                                                e
                                             
                                          
                                       
                                       The time of event 
                                             x
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                x
                                                .
                                                t
                                                y
                                                p
                                                e
                                             
                                          
                                       
                                       The type of event 
                                             x
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                r
                                                t
                                             
                                          
                                       
                                       Return time of the user who is attempting to make a reservation
                                    
                                    
                                       
                                          
                                             O
                                          
                                       
                                       Occupancy at the return station (parked and waiting vehicles). 
                                             O
                                           is initialized as the actual occupancy at the time that the reservation is attempted and is updated by the algorithm.
                                    
                                    
                                       
                                          
                                             C
                                          
                                       
                                       Capacity of the return station
                                    
                                 
                              
                           
                        
                     

The algorithm processes the known future events in the station and monitors anticipated future occupancy by updating the variable O. The occupancy is incremented after each return event and decremented after each rent event. If occupancy levels are expected to exceed the station's capacity at the return time of the currently requested reservation or at a later time, the reservation is denied. Note that exceeding the capacity at a later return time implies that accepting the current reservation will result in the subsequent violation of a previously placed reservation. If no such violations are expected, the current reservation is allowed.

Interestingly, in some rare cases, under this utopian overbooking policy, users may arrive at their returning station and find no vacant parking spaces to return the vehicle to. This can occur because in the look-ahead algorithm, it is assumed that all future demand for outgoing journeys from the destination station will reduce the occupancy of that station. However, some renters may decide to abandon the system due to their inability to make a reservation at their destination and in turn, the occupancy of the station may be higher than anticipated by the algorithm. In the simulation, the system is not penalized for parking space shortages. Instead, the users are assumed to leave the system at their destination as if they are allowed to park vehicles near the station. In other words, we allow for temporary station capacity overflow in our simulated system until renters remove vehicles from the station.

We note that in a real stochastic setting, overbooking is likely to lead to more shortage events than in this utopian policy as demand forecasts are less accurate. Moreover, in reality, when shortage events occur, users are not allowed to leave their vehicles near the stations. Instead, they must waste more time in search of a vacant parking space or wait for a parking space to become available. Therefore, under an actual overbooking policy, the total excess time is likely to be higher than under our utopian overbooking policy.

In Table 2
                        
                        , we summarize the answers to each of the three questions that appear in the user behavior model, which characterize the settings of the parking reservation policies described above.

In this section, we evaluate the proposed partial reservation policies with various threshold parameters and demand characteristics via a discrete event simulation of VSSs. The simulation is based on the user behavior model presented in Section 3.1. The results are compared to the lower bounds devised in Section 2. The numerical study is based on data from two real world bike sharing systems, Capital Bikeshare and Tel-O-Fun. In Section 4.1, we describe the two bike sharing systems and the trip data used to generate the input for our models. In Section 4.2, we present the results of the numerical experiments and discuss their implications.

The Capital Bikeshare system was launched in September 2010. The system operates in Washington D.C., in Arlington County and Alexandria, Virginia, and in Montgomery County, Maryland. The operating company, Alta Bicycle Share, provides full trip history data that can be downloaded from the following link: http://capitalbikeshare.com/trip-history-data. In this study, we use trip data from the second quarter of 2013. In this period, the system managed 232 operative stations with 3860 parking spaces and approximately 1750 bicycles. The average number of daily trips on weekdays was approximately 7800.

In Fig. 4
                        , we present a map with stations that were operative during the study period. On the map, we mark three station clusters: Arlington, Alexandria and Crystal City. As can be observed, in these clusters, stations are densely distributed while remaining relatively distant from other stations in the system. Indeed, most of the trips that originated or ended in these clusters remained within this cluster. In Alexandria, approximately 90% (resp., 88%) of the journeys that originated (resp., ended) in the cluster ended (resp., originated) in the cluster. In Crystal City, these figures are 77% and 74%, respectively, and in Arlington, these figures are 70% and 76%, respectively. In the following section, we present results for the entire system and for each of the three clusters separately. While generating data for each cluster, we neglected trips from/to other stations in the system. Although the resulting data do not fully reflect occurrences in these stations, they allow us to analyze small systems of varying sizes that are “close to real.”

The second system studied is the Tel-O-Fun bike sharing system in Tel-Aviv. The system was launched in April 2011, and trip data were collected over a period of two months at the start of 2012. At that time, the system included 130 stations distributed across an area of approximately 50 square kilometers, 2500 parking spaces and approximately 900 bicycles. During this period, the average number of daily trips (on weekdays) was approximately 4200.

Simulation inputs for both systems were generated as follows. We assume that the alternative mode of transportation is walking, which we believe is typically the case for bike sharing systems. Riding and walking times were estimated using the Google Maps API program. Station capacities were retrieved from the systems’ websites. The arrival rates of renters during 30 minutes periods throughout the day were estimated by aggregating weekday trips. Assuming Poisson demand processes, for each system we randomly generated 50 daily demand realizations, including renters’ arrival times to each station and their destinations. In order to reduce variation, we used the same realizations for all of the examined policies (Common random numbers). In addition, for each demand realization, we generated the input for the PR-LB and PRP-LB models, namely the set of potential itineraries per realized journey.

Two approaches were applied in setting the initial vehicle inventory levels at the stations: (1) actual initial station inventories on a randomly chosen day after the operators executed repositioning activities; (2) initial inventory levels prescribed based on the method proposed by Raviv and Kolka (2013). We used two different initial inventory levels to determine the sensitivity of our results and insights to these parameters. Clearly, we could have used other methods known in the literature to determine the initial inventory, as noted in the introduction.

@&#RESULTS@&#

The discrete event simulation, the user behavior model and the preprocessing of the input for the mathematical models were coded using MathWorks Matlab™. The PR-LB and PRP-LB models were solved using IBM ILOG CPLEX Optimization Studio 12.5.1. The codes and data are available from the authors upon request.

We begin
                         by discussing the results of the lower bounds and the utopian overbooking policy. The results and a discussion regarding the partial reservation policies are presented at the end of this section. In Table 3, we present results for the Capital Bikeshare and Tel-O-Fun systems. The first and second columns present the names of each system and the number of stations in each system, respectively. In the third column, we show how initial inventory levels were set. In columns four to seven, we present the average total excess time, over 50 realizations, for the NR policy, the CPR policy, the utopian overbooking policy and the PR-LB model. In the last column, we present the average total ideal times, over 50 realizations. Recall that the ideal time is the total traveling time when all journeys can be ideally served using shared vehicles from desired origins to desired destinations. Problem instances of the PRP-LB model cannot be solved using the available computational resources, and this lower bound is thus not presented here. We revisit this model when analyzing the smaller sub-systems below.

We observe from Table 3 that the lower bound on the total excess time provided by the PR-LB model is significantly tighter than the trivial lower bound obtained by assuming that all of the journeys are materialized by their ideal itineraries, i.e., no excess time, as in Kaspi et al. (2014). For example, in Capital Bikeshare, approximately 40% of the gap between the CPR policy and the trivial lower bound (zero excess time) is explained by the PR-LB model. That is, at least 40% of the excess time under the CPR policy cannot be reduced under any passive system regulation. Furthermore, recall that in the PR-LB model, we assume that all demands for journeys are known in advance and that a central planner determines the itinerary of each user. As this setting is unrealistic, we can expect that the excess time under any real policy should be much higher. In other words, a major part of the remaining gap can be explained by these assumptions. Recall that each figure shown in Table 3 is an estimation of the excess time under a certain reservation policy based on an average of 50 demand realizations. Differences between the values in each row of the table were tested via a one-sided sign test and were found to be significant at 
                           
                              p
                              −
                              v
                              a
                              l
                              u
                              e
                              <
                              0.000012
                           
                        .

The results presented for the PR-LB model are based on the LP relaxation of the model. In addition, we solved the original MILP model for smaller instances that are based on the Tel-O-fun data. In 97 of these 100 instances, the value of the LP relaxation solution was found to be identical to that obtained using the MILP model, where the latter were obtained at substantially longer processing times. In the remaining three instances, the lower bound obtained using the MILP model was slightly higher, although the difference was negligible (less than 0.002%).

Using the initial inventories as prescribed by the method of Raviv and Kolka (2013), the excess time was significantly reduced, as can be observed in Table 3 for all policies. Indeed, proper planning of static repositioning results with a major improvement in the service level. Nevertheless, the results for the CPR policy and the PR-LB model suggest that an additional substantial reduction in the total excess time can be achieved by integrating repositioning activities with an efficient passive regulation.

As can be observed in Table 3, the utopian overbooking policy produced only slightly better results relative to those of the CPR policy. This is quite surprising given the assumptions that the utopian overbooking policy is based on. That is, even with full knowledge of the demand realizations and the use of overbooking, a significant improvement cannot be obtained. This implies that realistic overbooking policies are not likely to be significantly (or at all) beneficial in terms of reducing the excess time in VSS. This unexpected finding can be explained by the fact that in VSS, a positive side effect of parking space reservations is the diversion of the demand toward less congested stations. This in turn may positively affect future system users who are less likely to face vehicle and parking space shortages. Allowing overbooking reduces this positive side effect. As effective overbooking policies are much more difficult to implement than the CPR policy and as the former also introduce additional uncertainty and thus reduce user trust in the system, we believe that such policies should not be practiced in VSSs.

In Table 4, we present statistics on PR-LB instances that we solved and on solution times. We present the number of stations in each system, the average number of users (over the 50 demand realizations), the average number of itineraries per user, the number of variables in the linear programming model and average solution times for the LP relaxation and the MILP model, where itinerary variables are defined as binary ones. Note that the MILP model can be solved within a reasonable timeframe only for the smaller instances of the Tel-O-Fun network. The solution time of the PR-LB model is not of particular interest in this study, as such a model is not supposed to be solved very often. We find solution times to be reasonable for most of the strategic and operational scenarios. That is, a similar formulation can be used for other purposes, where time considerations are more important.

Solving
                         the PRP-LB model presented in Section 2.3 is impractical for large real-world systems due to the large number of binary variables. To obtain insights from the PRP-LB model solution, we generated three small systems based on three clusters of stations in the Capital Bikeshare system: Alexandria with 8 stations, Crystal City with 15 stations and Arlington with 30 stations. In Table 5, we present the results for these systems. The table is supplemented with an additional column (the seventh) that presents the lower bound on the expected total excess time produced by the PRP-LB model. The table shows that for the three small systems, the value obtained from the PR-LB model explains approximately 56–66% of the gap from the trivial (zero) lower bound. However, a larger portion of this gap (67–81%) was explained by the PRP-LB value. This result further supports our belief that no other parking reservation policy is likely to result in significant improvements relative to those of the CPR policy. We also note that for these systems, the excess time for the utopian overbooking policy is sometimes slightly higher than that of the CPR policy. Recall that each of the figures in Table 5 is an estimation of the excess time under a certain reservation policy based on an average of 50 demand realizations. Differences between the values in each table row were tested via a one-sided sign test and were found to be significant at 
                           
                              p
                              −
                              v
                              a
                              l
                              u
                              e
                              <
                              
                                 10
                                 
                                    −
                                    7
                                 
                              
                              .
                           
                        
                     

In Table 6, we present statistics on the instances for the three Capital Bikeshare clusters and for the mathematical models used to create the lower bounds. The table follows the same format as that of Table 4. Interestingly, it is observed that the initial inventory has a significant effect on the solution time of PRP-LB. The optimized inventory levels obtained by the method of Raviv and Kolka (2013) results with models that can be solved much more quickly, although the dimensions of the mathematical models are identical.

Next, we
                         consider the partial reservation policies presented in Section 3.2., and we examine whether they can improve the performance obtained by the CPR policy. In Fig. 5, we present simulation results for these policies. The figure includes six graphs, with one designated to each combination of the two studied real-world systems and the three partial policies. In each graph, two curves are displayed, representing the percentage of excess time obtained using the two methods for setting the initial inventories. Namely, an actual day, displayed in black, and the method of Raviv and Kolka (2013) shown in gray.

For each partial
                         policy, we plot the percentage of excess time (relative to the ideal time) under various settings. For the trip-based partial policy, we tested 31 time thresholds in intervals of three minutes. For the time-limited partial policy, we tested 31 time limits in intervals of three minutes. For the station-based partial policy, we tested 11 difference thresholds of 0%, 10%,…, 100%; the thresholds were calculated over one-hour time intervals during the day. In order to use the same scale on the horizontal axis for both systems, we present the percentage of stations in which a parking space reservation is required rather than the difference thresholds.

Recall that extreme settings of such partial policies result with the complete policies (except for the lower extreme of the time-limited partial policy). The figure shows that as the time threshold increases, the same trend appears in all six graphs, i.e., when more reservations are required, the excess time decreases. The best performance is achieved when parking reservations are required from all users, i.e., under the CPR policy.

These results show that using a simple rule to define partial parking reservation policies is not likely to produce better results than those achieved when employing the CPR policy. We also find that the more users are required to reserve parking spaces, the better the performance of the system. However, in cases where it is possible to require reservations from only some users, it is better to apply a partial reservation policy rather than to not require reservations at all.

Recall that under the time-limited partial reservation policy (Section 3.2.3), all users must make a reservation, but the reservation expires after a given time period. When the time limit is set to zero, users are only able to travel to stations that are not full at the renting time, but a parking space cannot be guaranteed at the destination in any case. In Fig. 5, the graphs of the time-limited policy begin at lower points relative to those of the other two partial policies. That is, compared to the NR policy, significant improvements can be obtained by simply redirecting users to returning stations that are not full at the renting time. In fact, most of the improvement accomplished under the CPR policy may be attributed to the redirection of users to stations with vacant parking spaces.

Next, we examine whether the above insights are relevant to systems with other characteristics. In particular, we consider systems with the same geography and with similar demand patterns but with different levels of congestion (i.e., offered load), with different trip durations and with different station capacities. For each of the systems (Tel-O-Fun and Capital Bikeshare), we generated new instances by multiplying the demand rates in all stations by several factors, where 1 represents the original systems. Fifty demand realizations were generated based on each of these load multipliers.

In Fig. 6, we present the performance of the trip-based partial reservation policy with various time thresholds and load multipliers. It is observable that in both systems and under various congestion levels, the excess time is reduced as more reservations are required. This implies that the effect observed under the original demand load is not qualitatively affected by the congestion level. However, as congestion increases, benefits obtained from the reservation increase as well. This can be attributed to the fact that in more congested systems, shortage events are more likely to occur. For the sake of brevity, we will now present only the results for the trip-based partial reservation policy. Very similar trends were observed under the station-based and the time-limited partial reservation policies.

We conducted an additional analysis, in the same spirit, to examine the effects of shortening or prolonging trip durations. We used the same fifty demand realizations for each system and changed all trip durations for both vehicles and alternative modes of transport. Trip durations were multiplied by several factors, where 1 represents the original systems. The results of this experiment, for the trip based partial reservation policy are presented in Fig. 7. Trends similar to those shown in Figs. 5 and 6 are exhibited, i.e., the excess time decreases as more reservations are required. In addition, the performance of each system is less sensitive to the trip durations than to the demand rates. We note that in terms of the offered load, changing the demand rate or the trip duration by the same ratio is equivalent. In Kaspi et al. (2014), it is proved that under homogeneous demand rates, the excess time is uniquely determined by the offered load. Interestingly, this result does not hold when considering time heterogeneous demand rates.

Furthermore, we examined the effect of the capacities of the stations on the performance of the system under the same 50 demand realizations. To this end, we conducted the following test: the capacities of all stations in the system were decreased/increased by 25% (and rounded to the closest integer). In Fig. 8, we present the results for the trip based partial reservation policy. Similar to previous results, the excess time reduces as the time threshold increases. That is, the same trends are observed regardless of station capacity. For a given demand rate, as the capacities of the stations are increased, the number of parking space shortages is reduced. It is evident that the excess time under the NR policy, the various partial reservation policy settings and the CPR nearly converge to the same value as the station capacities increase. As may be expected, the benefit of implementing parking reservations increases when the parking spaces are scarcer. Again, similar trends are observed under the station-based and the time-limited partial policies.

To gain a more comprehensive understanding of the strengths and weaknesses of parking reservation policies, we examine percentages of unfulfilled rent, return and parking reservation requests (separately). Note that in Kaspi et al. (2014), excess time is found to be correlated with fulfillment ratios. In Fig. 9, we present the percentage of unfulfilled requests in the two systems under the trip-based partial reservation policy. We find, as expected, that as the time threshold increases, i.e., as more reservations are required, the ratio of unfulfilled reservations increases and the ratio of unfulfilled returns decreases. We note that the percentage of users that do not receive ideal service at desired origins and destinations declines due to parking reservations, but only slightly. However, the improvement is more significant in terms of the excess time. This implies that reservations reduce inconvenience to users as a result of shortages.

Finally, we examine the effect of parking reservations on stations or regions in a system that exhibit imbalanced demands for vehicles and parking spaces. To this end, we examined three stations within the Capital Bikeshare system: (a) the station with the maximal total absolute difference between renting and returning rates. The total daily demand for vehicles and parking spaces were similar, but with temporal demand imbalances in the morning and evening peaks; (b) the station with the maximal total difference between renting and returning rates. This station faces excessive demands for vehicles during the morning peak; and (c) the station with the maximal total difference between returning and renting rates. This station faces excessive demand for parking spaces during the morning peak. For each of these stations, we measured the excess time of renters (resp., returners) for whom these stations are their true origins (resp., destinations). We note that this perspective is somewhat limited, as interactions with surrounding stations are not taken into account. However, the effects of these interactions are reflected in the performance of the entire system.

In Fig. 10, we present two graphs for each of the three stations. On the left side, we present the demand rates for vehicles (renters) and parking spaces (returners) throughout the day. On the right side, we present average excess time of renters and returners at the station and the average value for the entire system. Overall, we find that for all three cases, the same trend appears once again: as more reservations are required, the excess time decreases.

In Fig. 10(b), the returners’ excess time curve is nearly flat, that is, for these users, the effect of implementing parking reservations is negligible. This may be explained by the fact that this station rarely becomes full, i.e., these users seldom face parking space shortages. As can be expected, in such cases, parking reservation policies are less likely to be effective.

In Fig. 10(c), we observe that the renters experience more excess time than the returners. This is counterintuitive because in this station, the demand for parking spaces is greater than the demand for vehicles. This may be attributed to the fact that actual demand that the station faces include additional users who roam to this station from empty nearby stations, thus limiting chances for the original users of this station to rent vehicles. Moreover, the excess time of the renters is also affected by the availability of parking spaces at their destinations. Indeed, due to complex interactions between stations, it is difficult to draw firm conclusions by focusing on a single station. Nevertheless, our main conclusions on the positive effects of parking reservations are reconfirmed.

This study reinforces the effectiveness of parking reservations in VSSs as a method to improve the service provided to its users. We find that the simplest possible parking reservation policy (namely, the CPR) appears to be the most effective in terms of reducing the total excess time. This was determined through empirical tests conducted under numerous settings that are based on the geography and demand trends of two real-world systems, diverse offered loads, station capacities and initial inventories. Our case studies, presented in Section 4, are based on data retrieved from bike sharing systems. However, we believe that parking space reservations and other passive regulations are even more relevant for car-sharing systems where the costs of active regulation (i.e., vehicle relocations) are prohibitive.

Using a lower bound calculated by the PR-LB model, we have demonstrated that, in our case studies, a significant share of the excess time that can be theoretically saved under any passive system regulation, is already saved under the CPR policy. Our extended PRP-LB model shows that other parking reservation policies are not likely to be able to save substantially (if at all) more excess time.

We also studied several partial reservation policies and demonstrated that while these policies are slightly inferior to the CPR, they may also serve as good alternatives to the basic NR policy in cases where the CPR cannot be implemented for some reason. Finally, we precluded reservation policies that are based on overbooking as a parking reservation approach that is likely to outperform the CPR policy. This was achieved by showing that even under a utopian scenario in which a system looks ahead into future demand, such policies cannot significantly reduce the excess time obtained under the CPR.

The PR-LB based lower bound introduced in Section 2 can be used to evaluate the effectiveness of various other VSS related policies. This model reflects the fact that each journey may be assigned to one of several itineraries. This adds flexibility to VSSs and affects their dynamics in a way that should not be ignored by a strategic planner. Although we have focused on reducing the excess time of users, our model can be extended to accommodate other user objectives. That is, each potential itinerary can be assigned with a measure that reflects a combination of several objectives. We also suggest using our model in the future to incorporate considerations of the operator. For example, if a car-sharing operator faces profit losses due to possible user itinerary choices, these values can be weighted and added to the excess time. It would also be interesting to examine the effects of parking reservation policies on the obtained profit under various pricing schemes.

@&#ACKNOWLEDGMENTS@&#

• This research was supported by the Israel Science Foundation (ISF) grant no. 1109/11.

• The authors wish to acknowledge valuable comments provided by two anonymous referees on a previous version of this article.

@&#REFERENCES@&#

