@&#MAIN-TITLE@&#3D surface-based registration of ultrasound and histology in prostate cancer imaging

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           We developed a 3D, surface-based, elastic registration algorithm for histology and TRUS imaging.


                        
                        
                           
                           To maximize clinical applicability, no auxiliary sensors or dedicated tools were used.


                        
                        
                           
                           Several registration techniques were tested during different steps of the algorithm.


                        
                        
                           
                           The algorithm was validated in vitro in two gelatin phantoms and in vivo in 7 patients.


                        
                        
                           
                           The resulting target registration errors were 1.5±0.2 and 2.1±0.5mm, respectively.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

3D registration

Prostate

Ultrasound

Histology

Deformable model

Elastic registration

@&#ABSTRACT@&#


               
               
                  Several transrectal ultrasound (TRUS)-based techniques aiming at accurate localization of prostate cancer are emerging to improve diagnostics or to assist with focal therapy. However, precise validation prior to introduction into clinical practice is required. Histopathology after radical prostatectomy provides an excellent ground truth, but needs accurate registration with imaging. In this work, a 3D, surface-based, elastic registration method was developed to fuse TRUS images with histopathologic results. To maximize the applicability in clinical practice, no auxiliary sensors or dedicated hardware were used for the registration. The mean registration errors, measured in vitro and in vivo, were 1.5±0.2 and 2.1±0.5mm, respectively.
               
            

@&#INTRODUCTION@&#

Prostate cancer (PCa) is the type of cancer with the highest incidence and second highest mortality among males in the United States [1]. Despite the statistics of this cancer type, the main diagnostic technique, systematic biopsy, has major drawbacks. Firstly, being invasive, it can cause infections and hematuria [2]. Secondly, tumors can be missed by the biopsy needle [3], resulting in poor sensitivity of this diagnostic tool. Thirdly, tumors can be undergraded when the more aggressive region of a tumor is missed [4], leading to undertreatment. Moreover, because of the lack of reliable localization methods, PCa is often overtreated out of precautionary considerations [5,6], increasing risk of urinary incontinence and impotence [5].

To overcome these limitations, several methods aiming at non-invasive PCa localization are currently under development. Determining the exact location of PCa would decrease the number of biopsies and the chance of missing cancerous tissue by use of targeted biopsies [7]. In addition, it can enable imaging-targeted focal therapy as a treatment option [7,8]. Currently, most studies involving PCa localization are based on magnetic resonance (MR) imaging [9–11]. However, studies using transrectal ultrasound (TRUS)-based methods – such as computer-assisted TRUS [12,13], (shear-wave) elastography [14–17], and dynamic contrast-enhanced ultrasound [18,19] – also show promising results. TRUS has the advantages over MR of being less expensive, widely used for targeting biopsies, and directly applicable by urologists.

Because of the lack of a medical imaging modality revealing the exact location of cancerous tissue in the prostate, histopathologic analysis after radical prostatectomy (RP, excision of the prostate) is frequently used as a gold standard for validation of new imaging techniques [9,20–24]. Usually, the excised prostate is sectioned into 3- to 4-mm-thick slices, after which the separate slices are compared with the images used for PCa localization [25]. However, due to the different orientation of the imaging planes and the histology slices, one image could span multiple histology planes. Deformation of the prostate caused by pressure from transrectal probe or due to surgery and preparation for histopathologic analysis can further complicate accurate validation. Moreover, the histology slice corresponding to the image has to be manually selected, endangering the objectivity of the validation. A 3-dimensional (3D) registration method could assist in making an objective and accurate comparison between the PCa imaging technique and the gold standard.

Extensive work has already been done on in vivo MR-pathology mapping of the prostate, which is a challenging task, because of the deformation due to surgery and to preparation of the tissue for histologic analysis. In some methods [26,27], the histology slices corresponding to the MR slices are manually selected after which 2D registration is applied. In another approach [28], the algorithm tries to find the corresponding slices automatically prior to their registration. However, in TRUS, the histology slices are typically not aligned with the imaging planes.

In other studies, fiducial markers [29,30], manually outlined natural landmarks [29], and a 3D-printed mold of the prostate [21,31,32] were used to assist with the registration. Some researchers [33,30] used ex vivo MR images to break down the registration in smaller steps. Although improving the registration accuracy, the extra steps could conflict with the clinical workflow in most hospitals.

In contrast to MR-histology registration, only few research groups have made attempts to register prostate ultrasound (US) imaging withhistology. Taylor et al. [34] implemented a semi-automatic 6-degrees-of-freedom (DOF) rigid body registration algorithm to match the surface of an excised prostate imaged by US with the surface of the same prostate after fixation for histology. The registration was used for validation of a cancer detection method using sonoelastography. However, the registration accuracy was estimated completely ex vivo. In [35], the authors described a method for elastic registration of a prostate recorded by in vivo TRUS imaging and histology. An ellipsoid fit and the position of the urethra were used to align the images by affine transformation, but no information on the registration error was given. Recently, a technique was proposed in [36] to jointly align histology slices to intra-operative 3D US by affine transformations using particle filtering. Again, except for the area overlap between the registered histology slices and the corresponding cross-sections in US, no information was provided on the accuracy of the method.

This paper describes a new method to elastically register TRUS and histology in 3D for validation or training of TRUS-based PCa imaging techniques. TRUS-histology registration is a challenging task for reasons concerning both TRUS and histology. The main challenges concerning TRUS are summarized below:
                        
                           •
                           the orientations of the TRUS imaging planes are unknown without use of additional sensors;

usually, no reliable natural landmarks are visible in both TRUS imaging and histology to assist with the registration;

introduction of the transrectal probe causes a local posterior deformation,

for histological analysis, the prostate is cut into 3- to 4-mm-thick slices, providing poor resolution in that direction;

after excision, the prostate is relieved from pressure caused by surrounding organs and tissue, resulting in a deformation;

fixation of the prostate after RP causes a volume decrease [37].

To avoid the need of landmarks or a high level of detail, which are lacking in B-mode TRUS, the method presented here is surface-based, requiring prostate shape information only. Both the affine and local deformations of the prostate as a result of the probe pressure and deformation after excision are taken into account. Apart from acquiring the prostate shapes, no manual intervention is required during the registration process. Moreover, being independent of the underlying imaging modality, application of the method in validation of PCa imaging techniques using other modalities (e.g., MR or CT) could be a feasible option.

In other work related to surface-based, elastic registration of prostates, Crouch et al. [38] estimated boundary displacements by minimizing deformation energy. After that, a uniform, nearly-incompressible material with linear elasticity was assumed to estimate internal deformation. Lee et al. [39] developed a technique for a joint estimation of elasticity and deformation of organs and tested it on ten prostates. Parameters describing the mechanical properties and forces acting on the boundary of the prostate were optimized through minimization of the distance between the prostate surfaces to register.

The method presented in this paper does not rely on the underlying patient-specific mechanical properties, which may be difficult to determine during an examination and may change during the fixation process as part of the preparation for histopathologic analysis. Moreover, values for Young's modulus of prostate tissue found in literature vary in order from 10 to 100kPa [40–44]; additionally, varying values of stiffness among different prostate zones were reported [40]. For these reasons, internal deformation is estimated based on shape difference only. In this way, the method can be applied using data obtained during a routine prostate examination by TRUS imaging without the use of specialized equipment or training.

Because of the 2D nature of TRUS imaging as commonly used in clinical practice, an additional step consisted of the construction of a 3D surface model based on the prostate contours in multiple 2D TRUS images. The reconstruction of 3D surfaces from 2D images can be performed in various ways [45–48] and is not the focus of this paper. However, for completeness, the method we designed for our study is also described.

In an in vitro experiment, the registration algorithm's accuracy was assessed in 2 gelatin phantoms with fiducial markers. Additionally, in an in vivo experiment, we used the border between the peripheral and central zone (BPZ) to estimate the method's target registration error (TRE) in 7 patients. To the authors’ knowledge, no quantitative in vivo validation has yet been reported for 3D registration between TRUS and histology.

@&#MATERIAL AND METHODS@&#

The prostate is part of the male reproductive system and is located between the bladder and the rectum. A schematic overview of the prostate anatomy is given in Fig. 1
                        , in which the position of the TRUS imaging probe has also been drawn. This illustration indicates the locations of the base and apex, and posterior and anterior side, which are frequently mentioned throughout this paper. In addition, a schematic overview of the zonal anatomy is shown in a transversal plane.

To perform 3D registration of TRUS and histology shapes, 3D triangulated meshes of the prostate shapes in both modalities were constructed. First, a TRUS video of the prostate, from now on referred to as “transversal sweep video”, was recorded in vivo using a Philips iU22 US scanner (Philips Healthcare, Bothell, WA) with an end-fire probe in B-mode by inserting the probe rectally until it reached the prostate and steadily rotating it to move its tip from base to apex. Additionally, a longitudinal image in the mid-sagittal plane, which is perpendicular to the images in the sweep video, was recorded. The prostate boundaries were manually outlined by an expert in approximately 30 of the frames in the transversal video, as shown for one frame in Fig. 2
                           (a), which would be used to construct the 3D model.

From the longitudinal image, the angles θ
                           
                              base
                            and θ
                           
                              apex
                            of the first and last transversal frames with the probe center line were determined (see Fig. 3
                           ). The center of rotation was initially chosen as indicated in Fig. 3. To estimate the angles of the other frames, linear interpolation was applied; i.e., a constant angular velocity of the probe was assumed. The manually drawn contours were then positioned in a 3D Euclidian space. After visual comparison of the positioned contours with the longitudinal image (Fig. 2(b)), the center of rotation could be moved vertically, and θ
                           
                              base
                            and θ
                           
                              apex
                            could be adjusted.

A triangulated mesh was created by connecting vertices on neighboring contours (Fig. 2(c)). Finally, thin caps were added to the base and apex to prevent sharp edges at the first and last contours.

Because histopathologic analysis of the prostate after excision was used as a gold standard, patients were only included in this study if they were diagnosed with PCa and underwent RP. After RP, the prostate was submerged in a formalin solution for approximately 24h, possibly producing the side-effect of prostate shrinkage [37]. Then, the distal caps of the prostate were removed by a transversal cut at approximately 4mm from the apex and base. The remaining prostate was then transversally sectioned in slices with a thickness of 4mm and prepared for microscopic examination.

A macro-photo of all slices was taken (example shown in Fig. 2(d)), in which the prostate contours were drawn. Additionally, any tumors found by histopathology were added to the photo in red. By manually aligning the slices with the contours and placing them behind each other with 4mm distance in between (Fig. 2(e)), a 3D prostate shape (including tumors) was reconstructed. A triangulated mesh was obtained by linear connection between vertices in adjacent slices (Fig. 2(f)). Finally, the distal caps of the prostate, which had been cut off before, were measured and added to the base and apex of the model to close it.

An image registration process can in general be described as the search for the spatial mapping 
                           S
                           (
                           
                              
                                 x
                              
                           
                           )
                         that best aligns a source image I
                        
                           S
                         with a reference image I
                        
                           R
                         by moving the image coordinates x:
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   I
                                                
                                             
                                          
                                          ˆ
                                       
                                    
                                    R
                                 
                                 (
                                 
                                    
                                       x
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             I
                                          
                                       
                                    
                                    S
                                 
                                 (
                                 S
                                 (
                                 
                                    
                                       x
                                    
                                 
                                 )
                                 )
                                 .
                              
                           
                        The registered image 
                           
                              
                                 
                                    
                                       
                                          
                                             I
                                          
                                       
                                    
                                    ˆ
                                 
                              
                              R
                           
                         is an estimation of I
                        
                           R
                        . In our case, the source image was the histology prostate model and the reference image was the TRUS prostate model.

Our registration algorithm consisted of three steps:
                           
                              1.
                              an affine, global registration,

an elastic surface registration,

an internal registration, which interpolates the deformation of the surface in step 2 to the inner volume.

The affine registration globally aligned the prostate model and served as initialization for the subsequent steps, which made it a very crucial step. We tested two different approaches: an iterative closest point (ICP) algorithm [49] and a stepwise method in which translation, rotation and scaling were implemented as sequential steps. As an initialization to both approaches, the midpoints – defined as the means 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                    
                                    ¯
                                 
                                 R
                              
                            and 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                    
                                    ¯
                                 
                                 S
                              
                            of the surface vertex coordinates of the reference and source models, respectively – were aligned by translating the source model.

The ICP algorithm [49] iteratively finds corresponding vertices on the prostate models and minimizes the root-mean-square (RMS) distance between those vertices by transforming the source model. In [49], where only rigid body transformations (translation+rotation) were considered, a direct solution [50] for the minimum RMS was applied.

Besides a rigid body transformation, we also tested two non-rigid transformations: a rigid body transformation followed by an isotropic scaling (IS) and a rigid body transformation followed by an anisotropic scaling (AS). Scaling was implemented to compensate for volume difference and global shape changes, mainly due to operations on the prostate after excision. Moreover, it provided a close match of the prostate surfaces as initialization for the elastic surface registration in the next step. To find the minimum RMS for the non-rigid transformations, we used a Levenberg–Marquardt optimizer [51,52].

In the stepwise approach to affine registration, first, the three main axes of both shapes were estimated by principal component analysis (PCA) of the surface vertex coordinates, as elaborated in [53]. Numerically, the principal components were computed as the eigenvectors of the symmetric P
                           ×
                           P covariance matrix C of the P observed variables, which in our case was defined as:
                              
                                 (3)
                                 
                                    
                                       
                                          C
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                
                                                
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                
                                                
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                   
                                                      cov
                                                      (
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                         
                                                         O
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                         
                                                         O
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           with cov(•, •) represented the covariance operator and x
                           
                              O
                           , y
                           
                              O
                           , and z
                           
                              O
                            the observation vectors containing the x-, y-, z-components of the model vertices x.

Let V
                           
                              R
                            and V
                           
                              S
                            be the 3×3 orthonormal matrix containing by column the eigenvectors (sorted by eigenvalue) of the covariance matrices for the reference and source models, respectively. These matrices represent the orientations of the models, but are not uniquely defined, because of the possible inverse direction of the eigenvectors. We could, however, assume a reasonable initial alignment, because both models were similarly obtained by stacking contours from apex to base. For this reason, we swapped the columns in V
                           
                              R
                            and V
                           
                              S
                            such that the largest absolute values in each column were on the diagonal, and multiplied any column by −1 for which the entry on the diagonal was negative. By doing this, we limited the rotation angle to 90∘.

Having found the orientations V
                           
                              R
                            and V
                           
                              S
                           , a rotation matrix R, which transforms V
                           
                              S
                            into V
                           
                              R
                            was obtained by:
                              
                                 (4)
                                 
                                    
                                       
                                          R
                                       
                                    
                                    =
                                    
                                       
                                          
                                             V
                                          
                                       
                                       R
                                    
                                    
                                       
                                          
                                             V
                                          
                                       
                                       S
                                       
                                          −
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          
                                             V
                                          
                                       
                                       R
                                    
                                    
                                       
                                          
                                             V
                                          
                                       
                                       S
                                       T
                                    
                                    .
                                 
                              
                           The individual coordinates x
                           
                              S
                            of the source surface model are now registered by combining the translation and rotation:
                              
                                 (5)
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                       S
                                       
                                          (
                                          r
                                          )
                                       
                                    
                                    =
                                    
                                       
                                          R
                                       
                                    
                                    (
                                    
                                       
                                          
                                             x
                                          
                                       
                                       S
                                    
                                    −
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                             
                                          
                                          ¯
                                       
                                       S
                                    
                                    )
                                    +
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                             
                                          
                                          ¯
                                       
                                       R
                                    
                                    .
                                 
                              
                           
                        

Scaling (IS or AS) was implemented as the next step in the stepwise method. Mathematically, the source surface coordinates were pre-multiplied by a scaling matrix S:
                              
                                 (6)
                                 
                                    
                                       
                                          S
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         s
                                                         a
                                                      
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      
                                                         s
                                                         b
                                                      
                                                   
                                                   
                                                      0
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      
                                                         s
                                                         c
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           For IS (s
                           
                              a
                           
                           =
                           s
                           
                              b
                           
                           =
                           s
                           
                              c
                           ), the scaling factor was chosen such that the volumes of the models were equal after scaling. In the AS approach, the scaling factors s
                           
                              a
                           , s
                           
                              b
                           , and s
                           
                              c
                            were estimated by projecting the surface nodes of each model onto each principal axis a, b, c of that model and calculating the ratio between the root mean squared distances d
                           
                              a
                           , d
                           
                              b
                           , and d
                           
                              c
                            between the coordinates projected on these axes to the model center:
                              
                                 (7)
                                 
                                    
                                       s
                                       a
                                    
                                    =
                                    
                                       
                                          
                                             d
                                             
                                                
                                                   
                                                      
                                                         a
                                                      
                                                   
                                                   R
                                                
                                             
                                          
                                       
                                       
                                          
                                             d
                                             
                                                
                                                   
                                                      
                                                         a
                                                      
                                                   
                                                   S
                                                
                                             
                                          
                                       
                                    
                                    ,
                                    
                                    
                                       s
                                       b
                                    
                                    =
                                    
                                       
                                          
                                             d
                                             
                                                
                                                   
                                                      
                                                         b
                                                      
                                                   
                                                   R
                                                
                                             
                                          
                                       
                                       
                                          
                                             d
                                             
                                                
                                                   
                                                      
                                                         b
                                                      
                                                   
                                                   S
                                                
                                             
                                          
                                       
                                    
                                    ,
                                    
                                    
                                       s
                                       c
                                    
                                    =
                                    
                                       
                                          
                                             d
                                             
                                                
                                                   
                                                      
                                                         c
                                                      
                                                   
                                                   R
                                                
                                             
                                          
                                       
                                       
                                          
                                             d
                                             
                                                
                                                   
                                                      
                                                         c
                                                      
                                                   
                                                   S
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           The subscripts R and S in (7) refer to the reference and source models, respectively.

The complete affine transformation for the stepwise approach was found by combining all previous steps:


                           
                              
                                 (8)
                                 
                                    
                                       T
                                       aff
                                    
                                    (
                                    
                                       
                                          x
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          
                                             V
                                          
                                       
                                       R
                                    
                                    
                                       
                                          S
                                       
                                    
                                    
                                       
                                          
                                             V
                                          
                                       
                                       S
                                       T
                                    
                                    (
                                    
                                       
                                          x
                                       
                                    
                                    −
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                             
                                          
                                          ¯
                                       
                                       S
                                    
                                    )
                                    +
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                             
                                          
                                          ¯
                                       
                                       R
                                    
                                    .
                                 
                              
                           
                        

For elastic registration of the surfaces, we used a parametric active contour model, based on the algorithms described in [54–56], commonly used for segmentation or motion tracking in medical images (see e.g. 
                           [57–59]). One advantage of this technique is its capability to project nodes from the source model onto the reference model while maintaining a natural spreading of the nodes. Another advantage is the intrinsic smoothing of the surface, which makes the registration less susceptible to irregularities in the prostate models. The main steps of this algorithm are described below; for a detailed description, the reader is referred to [56].

Registration is performed by minimizing an energy functional
                              
                                 (9)
                                 
                                    E
                                    =
                                    
                                       ∫
                                       Ω
                                    
                                    (
                                    
                                       E
                                       int
                                    
                                    (
                                    
                                       
                                          s
                                       
                                    
                                    )
                                    +
                                    
                                       E
                                       ext
                                    
                                    (
                                    
                                       
                                          s
                                       
                                    
                                    )
                                    )
                                    dA
                                 
                              
                           by applying a transformation 
                              
                                 
                                    s
                                 
                              
                              :
                              Ω
                              ⊂
                              
                                 
                                    
                                       ℝ
                                    
                                 
                                 2
                              
                              →
                              
                                 
                                    
                                       ℝ
                                    
                                 
                                 3
                              
                            to a surface Ω 
                           [56]. E
                           
                              int
                            represents the internal energy, defined by the surface material properties, whereas the external energy E
                           
                              ext
                            is defined by the reference image I
                           
                              R
                           . In our case, I
                           
                              R
                            was a binary voxel image of the TRUS reference volume with a resolution of 1/3mm per voxel. The internal and external energy are calculated by [56] 
                           
                              
                                 
                                    (10)
                                    
                                       
                                          E
                                          int
                                       
                                       (
                                       
                                          
                                             s
                                          
                                       
                                       )
                                       =
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          3
                                       
                                       α
                                       ∥
                                       ∇
                                       
                                          
                                             
                                                s
                                             
                                          
                                          i
                                       
                                       
                                          ∥
                                          2
                                          2
                                       
                                       +
                                       β
                                       (
                                       ∥
                                       
                                          ∇
                                          2
                                       
                                       
                                          
                                             
                                                s
                                             
                                          
                                          i
                                       
                                       
                                          ∥
                                          2
                                          2
                                       
                                       −
                                       2
                                       |
                                       H
                                       (
                                       
                                          
                                             
                                                s
                                             
                                          
                                          i
                                       
                                       )
                                       |
                                       )
                                       ,
                                    
                                 
                                 
                                    (11)
                                    
                                       
                                          E
                                          ext
                                       
                                       (
                                       
                                          
                                             s
                                          
                                       
                                       )
                                       =
                                       −
                                       κ
                                       
                                          
                                             ∥
                                             (
                                             ∇
                                             [
                                             
                                                G
                                                σ
                                             
                                             *
                                             
                                                
                                                   
                                                      I
                                                   
                                                
                                                R
                                             
                                             ]
                                             )
                                             (
                                             
                                                
                                                   s
                                                
                                             
                                             )
                                             ∥
                                          
                                          2
                                       
                                       ,
                                    
                                 
                              
                            in which s
                           
                              i
                            denotes the ith spatial component of s, H(·) represents the Hessian matrix, G
                           
                              σ
                            is a 3D Gaussian kernel with standard deviation σ, and κ is the external force factor, determining the weight of the external force [56]. The parameters α and β control the surface properties and accomplish a membrane-like or a thin-plate-like behavior, respectively.

A local minimum of (9) can be found by the iterative solution
                              
                                 (12)
                                 
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          
                                             p
                                          
                                       
                                       i
                                    
                                    +
                                    γ
                                    (
                                    α
                                    U
                                    (
                                    
                                       
                                          
                                             p
                                          
                                       
                                       i
                                    
                                    )
                                    −
                                    β
                                    
                                       U
                                       2
                                    
                                    (
                                    
                                       
                                          
                                             p
                                          
                                       
                                       i
                                    
                                    )
                                    −
                                    λ
                                    (
                                    
                                       
                                          N
                                       
                                    
                                    ·
                                    ∇
                                    
                                       E
                                       ext
                                    
                                    (
                                    
                                       
                                          
                                             p
                                          
                                       
                                       i
                                    
                                    )
                                    )
                                    
                                       
                                          N
                                       
                                    
                                    −
                                    (
                                    1
                                    −
                                    λ
                                    )
                                    ∇
                                    
                                       E
                                       ext
                                    
                                    (
                                    
                                       
                                          
                                             p
                                          
                                       
                                       i
                                    
                                    )
                                    )
                                    ,
                                 
                              
                           in which p
                           
                              i
                            contains the coordinates of a surface node in the ith iteration and γ is the step size of each iteration. The operator U(·) represents the Umbrella function as defined in [56].

Forces tangent to the mesh surface can cause self-intersection within the mesh. To prevent the surface mesh from self-intersecting, the external force vector, ∇E
                           
                              ext
                           , was replaced in (12) by a weighted sum of the external force vector and the vertex normal vector N as suggested in [56]. The parameter λ
                           ∈[0, 1] determines the influence of the image force relative to the surface normal.

The algorithm stops when the maximum node displacement per step size falls below Δp
                           
                              min
                           . After the algorithm had stopped, we defined the elastic mapping 
                              
                                 T
                                 el
                              
                              (
                              
                                 
                                    
                                       
                                          p
                                          0
                                       
                                    
                                 
                              
                              )
                            of each node position of the initial surface mesh to be the displacement p
                           
                              end
                           
                           −
                           p
                           0 of that vertex at the end of the algorithm.

The parameter values were empirically optimized based on the registration of the prostate models of 5 test patients. First, the standard deviation of the Gaussian filter σ was set to a value such that the blurred reference image entirely covered the source model. Next, a value for λ was chosen sufficiently large to prevent self-intersection, but as low as possible to keep disturbance of the external energy field to a minimum. The parameters α, β, κ, and γ were heuristically determined to achieve a fast convergence, while keeping the registration smooth and stable. All parameter values are summarized in Table 1
                           .

To estimate the elastic transformation 
                              
                                 T
                                 el
                              
                            for the interior of the prostate, the surface vertex displacements found by the elastic surface registration were interpolated. We tested two different ways of interpolating the vertex displacements.

The first method was a finite element (FE) approach assuming a linearly-elastic, nearly-incompressible material (Young's modulus 25kP, Poisson's ratio 0.495), similar to the material properties used in [60,38]. To this end, a tetrahedral mesh was generated using TetGen 1.4.3 [61] with the quality measure q set to its maximum value (i.e., 18).

In the second method, we used a natural neighbor (NN) interpolation method [62] to interpolate the surface displacements in each dimension separately. This method is based on the Voronoi diagram of the coordinates at which the displacements to be interpolated are known. To obtain the displacement at a new coordinate, a new Voronoi diagram is constructed around this coordinate. The interpolated value is then calculated as the weighted sum of the displacements at the coordinates whose old Voronoi cells overlap the Voronoi cell of the new coordinate to obtain a smooth interpolation. This technique has the advantage over FE-based methods that no internal mesh has to be generated and no prior knowledge about the mechanical properties of the underlying material is required or used.

To find the complete deformation field of the prostate, the affine and elastic deformations were concatenated by applying (2). Tumors found by histology could now be reconstructed in the analyzed TRUS plane by mapping all points of the tumor model to their corresponding positions in the TRUS model according to (1).

@&#IMPLEMENTATION@&#

The registration algorithm described in this section was implemented in MATLAB 8.4.0.150421 (The MathWorks, Natick, MA) on a PC using an Intel® Core i5-2500 processor running at 3.3GHz (Intel, Santa Clara, CA) with 16GB RAM. Our implementation of the ICP algorithm in MATLAB was based on functions written by Kroon [63] and by Wilm and Kjer [64], available at MATLAB Central [65]. For the parametric active contour model, we modified code written by Kroon [66]. All other methods were implemented using original code.

Our registration method works best with prostate models containing triangulated meshes in which the vertices are as uniformly spaced as possible (i.e., the lengths of all edges are approximately equal). It results in a more reliable orientation estimation for the affine registration, because each part of the surface is approximately equally represented in the PCA and ICP algorithms, and the active contour algorithm used for elastic surface registration showed more stable behavior with respect to self-intersection.

To obtain uniform meshes, a remesh algorithm using the non-adaptive part of the method described in [67] was applied to each of the surface models obtained from both histology and TRUS. This iterative method uses front propagation to find the location on the surface with the longest geodesic distance to all vertices that are already in the mesh; a new vertex is then inserted at that location. In this way, vertices are equally distributed over the surface, which leads to an uniform mesh. The number of vertices N in the mesh is a trade-off between computational speed and accurate representation of the prostate shape (hence higher registration accuracy for irregular surfaces). For our surface models we used N
                        =2000, which was sufficient to reproduce the encountered prostate deformations.

Because natural landmarks are not always present in both histology and TRUS, an in vitro experiment, using phantoms with fiducial markers, was designed to quantitatively assess the registration error of the presented methods. Two gelatin phantoms of the prostate were produced and embedded in a gelatin surrounding (Figs. 4 and 5
                        
                        ), based on the design presented in [68]. Different from [68], we chose to use gelatin as phantom material, because it suited the scope of our experiments and was easier to handle. The gelatin was constructed such that the prostate phantom was approximately three times stiffer than the surrounding gel.

To be able to distinguish the prostate phantom from the surrounding gel in TRUS B-mode images, a small amount of graphite powder was added to the prostate phantom as a scattering agent. Furthermore, in each phantom, 9 clay markers with a diameter of 3–5mm were added for assessment of the TRE. A hole on the side (50mm in diameter), large enough to accommodate and rotate a TRUS end-fire probe, represented the rectum, enabling simulation of TRUS imaging during a prostate examination (position 2). Alternatively, the prostate could be scanned from the top (position 1) to obtain images at a different angle than in position 1 and without phantom deformation due to pressure by the probe head, and therefore providing images that could represent the histology.

In this experiment, we used an iU22 (Philips Healthcare, Bothell, WA) US scanner with a 3D endocavity probe (3D9-3v) to exclude model construction from this validation. Each phantom was first scanned from position 1 to acquire an image of a “histology” phantom. Subsequently, each phantom was scanned with the same probe from position 2, while pushing the probe against the phantom to acquire a “TRUS” image. The latter scan was repeated 6 times with varying strength and location of the force applied on the phantom to test the robustness of the registration algorithm against varying deformations.

In each 3D US image, the phantom's contour and markers were manually segmented to construct 2000-node surface meshes with markers inside. For each phantom, all “TRUS” meshes (reference) were registered with the “histology” mesh (source) using the proposed algorithms. The TRE was defined to be the distance between a marker in the reference mesh to the same marker in the registered mesh. Results were stored after affine and elastic registration to evaluate the performance of the individual steps. The registration accuracy and execution time were compared for the different methods described in Section 2.3. The statistical significance (p-value) of the results was evaluated by two-sided Wilcoxon signed rank tests for paired data and by two-sided Wilcoxon rank sum tests for unpaired data.

The described in vitro experiment focused on validation of the registration algorithm only, leaving out the construction of the model from 2D images and deformations due to surgery and the fixation process.

In 7 patients, (parts of) the border between the peripheral and central zone (BPZ) of the prostate (see Fig. 1) was visible both in the histology and TRUS images. These patients were therefore selected for in vivo validation using the BPZs as landmarks to evaluate the TRE. In two patients, two ultrasound recordings were made at different dates and were both included. As a result, a total of 9 prostate model sets were used for validation. Different from the in vitro experiments, the in vivo validation included model construction and the effect of deformation after surgery.

The BPZ was manually drawn in the TRUS and histology images by an expert, after which 3D models were reconstructed as described in Section 2.2. Between the images, the BPZ was interpolated using a linear radial basis function with noise reduction [69,70]. The constructed models were then registered. The TRE was determined by calculating the normals to the surface of the registered (histology) BPZ and finding the point at which it intersected with the reference (TRUS) surface. The distance between the histology and TRUS surfaces along a surface normal was defined to be the TRE at that point. However, because TRUS and histology showed also BPZ parts that were not corresponding, the corresponding parts had to be defined for the validation. Parts of the BPZ for which no intersection point was found along the surface normal were considered to be non-corresponding, and were therefore ignored. Statistical analysis of the results was done in a similar way as described in Section 2.5.

Because the models were constructed by stacking contours from base to apex, as described in Section 2.2, the patient models already had a similar orientation. For this reason, the TRE was also determined for registration without applying rotation in the stepwise affine transformation.

@&#RESULTS@&#

An example of the registered phantom models with markers after affine and elastic registration is shown in Fig. 6
                        . The model shapes showed already good agreement after affine registration, but a slight mismatch could be observed due to deformation by the imaging probe. After elastic registration, the two models almost completely overlapped, as expected.

In Table 2
                        , the TREs are summarized for each registration method. For each measurement, the means and standard deviations were computed over all markers (9per phantom). Then, the means and standard deviations were computed over all measurements (6per phantom). Rotation by PCA resulted in an average TRE of over 8mm for phantom 1, but below 2mm for phantom 2. The reason for this difference resides in the observation that, different from phantom 2, no clear second main axis perpendicular to the first main axis could be distinguished for phantom 1. The ICP method performed well in both phantoms. No significant difference was observed with respect to the mean TRE after applying elastic registration (p
                        ∈[0.93, 0.97]) using FE interpolation, and for NN interpolation the mean TRE was even significantly higher (p
                        <0.001) for each ICP method.

The computation time for any of the affine registration methods was negligible compared to the computation time of the elastic registration techniques. Also, the type of scaling used in the affine registration step had little influence on the computation time required for the elastic registration. Using NN instead of FE for internal registration reduced the computation time by approximately a factor 10.


                        Table 3
                         gives the TREs per method based on 9 TRUS-histology registrations in 7 patients (see Section 2.6). The results for the methods without scaling are omitted, because in some cases the shape differences between the reference and source model were too large after rigid registration only. In those cases, parts of the source model were not covered by the blurred reference image in the elastic surface registration. In those uncovered parts, elastic registration did not work and, consequently, the internal deformations could not be computed.

The mean TRE was lower for the ICP methods than for the PCA methods. This difference was significant for the transformation including IS (p
                        <0.027), but not significant for AS (p
                        =0.074). Applying elastic registration using NN interpolation after affine registration decreased the TRE significantly for rigid ICP+IS and rigid ICP+AS (p
                        <0.01) and insignificantly for the other methods (p
                        ∈[0.055, 0.20]). Interpolation by FE even increased the TRE, although not significantly (p
                        ∈[0.13, 0.65]). When applying only scaling without automatic rotation in the affine step, the performance of the stepwise registration was similar to the performance of the methods using ICP as an affine registration step. The computation time for the NN interpolation was longer than in Table 2 (p
                        <0.001), because the BPZ contained more points to register than the 9 fiducial markers used in the phantom experiments. An example of a registration of two models using one of the best performing methods (ICP rigid+AS followed by NN) is given in Fig. 7
                        .

@&#DISCUSSION@&#

The phantom experiments resulted in a mean TRE of 1.5mm for the best performing method; in vivo, this value was 2.1mm. This error is acceptable for most clinical purposes, since tumors are considered clinically significant when their volumes exceed 0.5cm3 
                     [71]. Assuming a spherical shape, this yields a tumor diameter of 10mm. TREs were comparable with the results presented in the literature [38,39], in which surface-based registration was applied to prostates imaged in different modalities. However, in [38,39], registration was not performed between in vivo and ex vivo images, bypassing the deformation due to surgery.

In the phantom experiments, TREs due to model construction or to deformation caused by surgery and preparation of the prostate for histopathologic analysis were not included. Although these differences were included in the in vivo study, the TREs in that study were only approximately 1mm larger than those in the in vitro study. This suggests that the error introduced by our method used for model construction is relatively small.

From the lower standard deviations in the TREs in both the in vitro (Table 2) and the in vivo experiments (Table 3), it can be concluded that the ICP method is more robust in affine registration than the PCA-based method. The reason can possibly be found in the fact that the PCA method tries to find three main axes like those in an ellipsoid. Because the shape of the prostate in TRUS can be deformed drastically at the posterior side by the pressure of the probe head on the prostate, it does not resemble an ellipsoid-like shape anymore. In this case, the three orthogonal main axes to estimate the orientation of the prostate model cannot be correctly defined.

Surprisingly, in vivo, registration without applying automatic rotation performed similar to the ICP methods. Because both models were constructed by stacking slices from base to apex, they had already been reasonably well-aligned before applying the registration algorithm. The same a priori information could be applied in the validation of some PCa techniques using other imaging modalities, such as MRI, where histology slices and imaging planes are already well aligned before registration.

When comparing in vitro average TREs (Table 2) for affine ICP and elastic registration, only small differences were observed (<0.1mm). An explanation for this result could be that most of the deformation could already be covered by the affine registration. Errors in drawing the contours of the phantoms and markers were probably larger than the improvement that could be made by elastic registration. In our in vivo experiments, the elastic registration followed by NN interpolation did result in a small decrease in TRE for each affine registration method. The FE method, however, resulted in higher TREs. The deformation at the surface defined by the elastic surface registration of the affinely registered models probably did not represent realistic boundary conditions for a physics-based model. A more general interpolation method, such as the NN interpolation, could then result in lower TRE.

Although the differences between the TREs for affine and elastic registration were small, the differences could be larger close to the surface. An example of the registration of histopathology and TRUS using an affine and an elastic method is given in Fig. 8
                     . In this case, the deformation at the posterior surfaces – caused by probe pressure – could not be compensated for by an affine transformation. As a result, part of the registered tumor lied outside the prostate and could therefore not be used for validation or training of a PCa imaging technique. Applying an elastic registration using NN interpolation solved this issue.

Because the location of the BPZ in between histology slices was unknown and had to be interpolated, an inaccuracy in the estimation of the TRE in the in vivo validation was possibly introduced. Moreover, the orientation of the BPZ is largely parallel to the apex-base axis. Because the TREs were estimated based on the surface normals of the BPZ, the influence of registration errors in that direction on the final TRE was smaller than in other directions. Fiducial point landmarks could provide a more accurate reference for TRE estimation, but can be difficult to apply during a regular TRUS examination.

Although outside the scope of this work, a method was given to construct 3D prostate models from a transversal sweep video. The presented method requires manual delineation of the prostate contours to obtain the most accurate models and registration. However, an accurate (semi-)automatic segmentation could assist in making this step less time-consuming. Moreover, the accuracy of the model construction could benefit from using a 3D US probe to minimize the error made by the conversion from 2D sweep video to 3D US.

The presented method does not rely on the mechanical properties of the prostate and, therefore, assumes a homogeneous material. The prostate, however, consists of different zones with different stiffness [40]. Moreover, tumors are known to be stiffer than healthy prostate tissue [40]. When the location of the central zone and the tumors are known, it could be worth applying varying stiffness settings in the internal registration step to reduce the TRE.

@&#CONCLUSIONS@&#

Several methods, directly applicable in clinical practice, for 3D, affine and elastic, surface-based registration of prostate models obtained by TRUS imaging and histology were compared both in vitro and in vivo. Experiments using two gelatin phantoms with fiducial markers resulted in a mean TRE of 1.5±0.2mm for the best performing method. The mean TRE obtained from validation in 7 patients was 2.1±0.5mm, which is below the slicing thickness in histology or the size of clinically significant tumors. The ICP algorithm proved to be a robust approach for affine registration, whereas rotation using a PCA approach frequently resulted in large TREs. For the elastic registration, the NN interpolation outperformed a FE approach assuming linearly elastic material. Because the algorithm used for registration is independent of the adopted imaging technique, applications for imaging modalities other than TRUS (such as MR) can be envisaged.

The authors declare that they have no conflicts of interest.

@&#ACKNOWLEDGEMENT@&#

This work was supported by the European Research Council under Starting Grant #280209.

@&#REFERENCES@&#

