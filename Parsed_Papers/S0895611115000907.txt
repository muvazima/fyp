@&#MAIN-TITLE@&#Measuring sparse temporal-variation for accurate registration of dynamic contrast-enhanced breast MR images

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           Propose new techniques for robust registration of DCE-MR breast image.


                        
                        
                           
                           Treat the temporal variation of DCE-MR breast images as sparse “corruptions”.


                        
                        
                           
                           Model DCE-MR breast image similarity with a L
                              1 norm and a Lorentzian.


                        
                        
                           
                           Propose an iteratively reweighted least squares for optimization.


                        
                        
                           
                           Propose a linear programming based technique for optimization.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Image registration

Sparsity

DCE-MRI

Breast cancer

@&#ABSTRACT@&#


               
               
                  Accurate registration of dynamic contrast-enhanced (DCE) MR breast images is challenging due to the temporal variations of image intensity and the non-rigidity of breast motion. The former can cause the well-known tumor shrinking/expanding problem in registration process while the latter complicates the task by requiring an estimation of non-rigid deformation. In this paper, we treat the intensity's temporal variations as “corruptions” which spatially distribute in a sparse pattern and model them with a L
                     1 norm and a Lorentzian norm. We show that these new image similarity measurements can characterize the non-Gaussian property of the difference between the pre-contrast and post-contrast images and help to resolve the shrinking/expanding problem by forgiving significant image variations. Furthermore, we propose an iteratively re-weighted least squares based method and a linear programming based technique for optimizing the objective functions obtained using these two novel norms. We show that these optimization techniques outperform the traditional gradient-descent approach. Experimental results with sequential DCE-MR images from 28 patients show the superior performances of our algorithms.
               
            

@&#INTRODUCTION@&#

Image registration is a vital process in the dynamic contrast-enhanced (DCE) magnetic resonance (MR) imaging based breast tumor diagnosis. DCE-MR imaging based examinations generally involves multi-times of imaging on the breast volume before and after the administration of contrast agent, yielding the pre-contrast image and a series of post-contrast images. In DCE-MR images, tumor region can have various contrast enhancement patterns due to the agent, leading to significant temporal intensity changes. The analysis on the enhancement curve which describes the temporal changes of intensity of a single pixel or a local region constructs the fundamentals of diagnosis with DCE-MR images. To obtain accurate enhancement curves, image registration plays a critical role by offering spatially aligned images.

However, accurate registration of DCE-MR images is plagued mainly with two challenges: the temporal changes of image intensity, and the non-rigidity of the breast motion in the imaging process. The intensity changes in DCE-MR images can cause volume shrinking/expanding effect of tumor in the process of registration [1], i.e. a tumor area in an image is unexpectedly mapped to a smaller/larger area of another image. This unexpected volume variation in the process of image registration is not consistent with the assumption that the soft tissue is incompressible in the imaging process because of the small deformations involved and the short time imaging durations. As the other challenge, the nonrigid motion of breast makes the registration more complicated in both modeling and estimating the deformations.

To address the above challenges, different mechanisms have been proposed (as to be detailed in Section 2.1). To avoid or alleviate the tumor shrinking/expanding problem, there are various methods using some special regularization terms on the deformation field [1–4] or accounting for the enhancement effect [5,6]. However, most of them need some extra processing like the identification of tumor [1,2], or the estimation of enhancement curve [5] or enhancement field [6], etc. The registration accuracies rely significantly on the results of the extra processing. To achieve more accurate estimation on the nonrigid motion, different registration methods [7–10] have been proposed, which leverage a more efficient similarity measure, a better model of transformation, or a more advanced optimization strategy, etc. However, most optimization strategies are gradient descent based, with which only a local minimum can be guaranteed and the results are highly dependent on the initialization. Some other techniques like the simulated annealing can produce a global optimization but require a computational burden. Recently, integer programming was introduced for solving dense image registration [11], which is superior in optimization but incapable of resolving the shrinking/expanding problem.

In this paper, we propose two innovations in order to address the above-mentioned challenges in DCE-MR breast image registration. First, as inspired by recent techniques on recovery of sparsely corrupted signals [12–16], we treat the temporal changes of DCE-MR image intensity as structured noise or sparse corruptions and then model them with a L
                     1 norm and a Lorentzian 
                     [16]. By assuming the differences between images to be non-Gaussian, these new image similarity measurements are more tolerant of large intensity variations in the process of image registration. This is very different from classical image registration algorithms which assume the two images to be registered have consistent intensities plus a Gaussian noise at the corresponding pixels or have high correlations [17]. With these measurements, the image registration is formulated as minimizing a sparse field of image differences while keeping the smoothness of the deformation field. We show that the proposed measurements are pretty robust and can help to deal with the tumor shrinking/expanding problem in DCE-MR breast image registration without any extra processing. Second, we propose two new optimization strategies in order to optimize the parameters of the deformation field when incorporating the L
                     1 norm or Lorentzian into the objective function. They perform as recursively solving a weighted least square or linear programming [18]. For the latter, a global optimum can be attained in each iteration.

The rest of this paper is organized as follows. A brief review of techniques of image registration and recent applications of the sparsity prior is given in Section 2. In Section 3, we present the details of our new image registration methods, including the image transformation model in Section 3.1, the energy function in Section 3.2, the new measurements on sparse image variations in Section 3.3 and the new optimization technique in Section 3.4. Experimental results with real DCE-MR scans are included in Section 4. We finally close in Section 5 with conclusions and future directions.

Extensive investigations have been carried out on image registration due to its importance in a wide variety of practical tasks. There are a huge number of related publications and the existing methods can be basically classified into two categories: pixel-based and feature-based. Detailed review to all these methods is beyond the scope of this paper and we refer the reader to papers [17,19,20] for a general survey. In this paper, we only provide a brief review to methods of dealing with the tumor shrinking/expanding problem caused by temporal changes of image intensities in the breast tumor area between the pre-contrast DCE-MR image and a pot-contrast one.

To resolve the tumor shrinking/expanding problem, different methods have been proposed through incorporating a rigid structure of tumor in the nonrigid deformation modeling [1,2], enforcing tissue incompressibility constraint during registration by constraining the local Jacobian determinant to be close to unity everywhere in the image [3] or enforcing the orthogonality condition on the local Jacobian matrix [4], predicting the enhancement by modeling the enhancement curve [5], or by estimating and removing the enhancement field [6], etc. However, most of them require an extra processing and the final registration accuracy highly depend on the accuracy of this extra procedure. For example, methods in [1,2] need the identification of the tumor region in advance. Method in [3] enforces the incompressibility on the whole volume, which is not always true in practice. Methods in [5,6] need to model the enhancement curve or enhancement field, for which deformation estimation depends the selected model of enhance and registration can be biased towards model fits that are neither appropriate nor accurate. In contrast, we deal with the tumor shrinking/expanding problem by manipulating the image similarity measurement and therefore no extra processing is needed.

Existing image similarity measures used in image registration [7] include the sum of squared differences (SSD) [21], Mutual information, normalized mutual information and local correlation, etc. In contrast, the measurements proposed in this paper are based on the sparse distribution pattern of intensity's temporal changes in DCE-MR images and characterized with an L
                        1 norm or a Lorentzian.

In a wide range of optimization techniques for image registration, local searching is one important class, which starts from an initial guess and tries to find a minimum within a local area. It includes techniques of gradient descent [3,4,22], conjugate gradient descent, Newton Raphson, Levenberg-Marquardt optimization, etc. These methods need a lower computational burden, however, their solution depends significantly on the initialization. The other class is global optimization, which is usually more robust than the local searching methods. It includes the simulated annealing, and generic algorithm, etc. The simulated annealing generally spends a lot of time to get an optimal solution especially when the number of unknowns is huge. The generic algorithm has a tendency to converge towards local optima or even arbitrary points rather than the global optimum of the problem. In contrast, we treat the nonlinear registration problem as recursively solving a weighted least square or a linear programming [18]. For the latter, a global optimum can be attained for each iteration.

Image/signal was demonstrated to be sparse in the sense that they can be reconstructed from a smaller number of linear measurements relative to the dimension of the image/signal space [23,24]. In other words, a vector/matrix representing an image/signal is mostly composed of zeros. Taking image for example, this prior comes from the fact that colors/intensities are largely the same in areas of a natural/medical image. This important property has been widely used in the communities of medical imaging, computer vision, multimedia and signal processing. It has been successfully applied to practical applications of shape modelling [25], image segmentation [26–28], image reconstruction [29,30], motion analysis [31], bias correction [32,33], image registration [34], image retrieval [35,36] and deconvolution [37,38] in the fields of medial imaging and medical image analysis. In addition, it has also been used in a large variety of applications in the field of computer vision, including face recognition [39], image restoration [40], image denoising, deblurring, superresolution and object recognition [41–48].

Sparse-signal recovery techniques can be basically classified into three categories in sense of the assumption on the source used for performing the recovery: measurements free from noise, measurements with unstructured Gaussian noise and measurements with structured noise (also called outliers) [13]. There are various algorithms designed for accomplishing sparse-signal recovery for the former two cases. Recently, the structured noise has attracted a lot of research interests [12–16] and is usually treated as sparse and modeled in a similar way to the sparse signal to be reconstructed, e.g. using the L
                        1 norm [12] or Lorentzian 
                        [16]. These models function by forgiving large variations more than the l
                        2 norm (used in case of the unstructured Gaussian noise).

@&#METHODS@&#

Given two images 
                        I
                      and 
                        J
                     , our goal is to find an optimal geometrical transformation 
                        T
                      that models the motion from 
                        I
                      to 
                        J
                      and constructs the mapping of the voxels (volume pixels) in 
                        I
                      to J. The optimal 
                        T
                      is found by maximizing a similarity measure between the overlapping regions of the transformed image 
                        T
                        (
                        I
                        )
                      of 
                        I
                      and J. We next explain in detail three critical elements in our registration algorithm: the representation of 
                        T
                      in Section 3.1, the energy function to be minimized in order to estimate 
                        T
                      in Sections 3.2 and 3.3, and the optimization strategies in Section 3.4.

In order to deal with the tumor shrinking/expanding problem in registration of DCE-MR breast images, we propose two novel measurements for assessing the sparse temporal variations of image intensity in DCE-MR images by assuming them as a structured noise. We also introduce two new optimization strategies accomplished by recursively solving a weighted least square and a linear programming, respectively.

The transformation 
                           T
                         in our registration algorithm is composed of a global transformation 
                           
                              T
                              G
                           
                         and a local transformation 
                           
                              T
                              L
                           
                        . For an image point x
                        =(x, y, z)
                           T
                         in the 3D image 
                           I
                        , where x, y and z are the coordinates, we then have
                           
                              (1)
                              
                                 T
                                 (
                                 
                                    
                                       x
                                    
                                 
                                 )
                                 =
                                 
                                    T
                                    G
                                 
                                 (
                                 
                                    
                                       x
                                    
                                 
                                 )
                                 +
                                 
                                    T
                                    L
                                 
                                 (
                                 
                                    
                                       x
                                    
                                 
                                 )
                                 .
                              
                           
                        
                     

The global transformation 
                           
                              T
                              G
                           
                         is set as the affine transformation, and the parameters are estimated by the iterative multi-resolution search strategy [22] with the Sum of Squared Difference (SSD) similarity measure.

The local transformation 
                           
                              T
                              L
                           
                         is given by the free-form deformation (FFD) model based cubic B-splines [22]. However, to estimate it, we will use more robust similarity measures (to be described in Section 3.3) and more efficient optimization strategies (to be described in Section 3.4).

The basic idea of the FFD based B-splines is to deform the image through manipulating an underlying lattice of uniformly spaced control points (CPs) (denoted by set Ψ). The transformation 
                           
                              T
                              L
                           
                           (
                           
                              
                                 x
                              
                           
                           )
                         is simply computed by interpolating the displacements of CPs in a CP subset Ψ
                           x
                        
                        ⊂Ψ denoting the closest 4×4×4 CPs surrounding x. The 3D splines based on Ψ
                           x
                         can be treated as the tensor product of independent 1D spline functions [3] on the three axes.

To define the 1D spline function, we first take the x-axis for an example. Apparently, there are totally four different x-axis indices for the CPs in Ψ
                           x
                         and hence we can use four 1D spline functions for the interpolations, considering the fact that the CPs in Ψ
                           x
                         are distributed on a lattice. Let u denote the relative position of x to the CPs with the second-low coordinate value on the x-axis. The four 1D basis function of the B-spline can be denoted by B
                        0(u), B
                        1(u), B
                        2(u), and B
                        3(u), representing the interpolation coefficients with respect to the CPs in Ψ
                           x
                         from left to right, respectively. The expressions of the 1D spline functions are referred to [22]. For other two axes, similar to u, we use 
                           v
                         and 
                           w
                         to represent the relative positions of x to the CPs with the second-low coordinate value on the y-axis and z axis, respectively. The corresponding 1D spline functions 
                           
                              B
                              0
                           
                           (
                           v
                           )
                           ,
                           ⋯
                           ,
                           
                              B
                              3
                           
                           (
                           v
                           )
                         and 
                           
                              B
                              0
                           
                           (
                           w
                           )
                           ,
                           ⋯
                           ,
                           
                              B
                              3
                           
                           (
                           w
                           )
                         have the same forms with B
                        0(u), ⋯, B
                        3(u), respectively. Let (l
                        0, m
                        0, n
                        0) denote the the CPs in Ψ
                           x
                         with the lowest coordinate value on all three directions, we have
                           
                              (2)
                              
                                 
                                    T
                                    L
                                 
                                 (
                                 
                                    
                                       x
                                    
                                 
                                 )
                                 =
                                 
                                    ∑
                                    
                                       l
                                       =
                                       0
                                    
                                    3
                                 
                                 
                                    ∑
                                    
                                       m
                                       =
                                       0
                                    
                                    3
                                 
                                 
                                    ∑
                                    
                                       n
                                       =
                                       0
                                    
                                    3
                                 
                                 
                                    B
                                    l
                                 
                                 (
                                 u
                                 )
                                 
                                    B
                                    m
                                 
                                 (
                                 v
                                 )
                                 
                                    B
                                    n
                                 
                                 (
                                 w
                                 )
                                 
                                    
                                       
                                          ϕ
                                       
                                    
                                    
                                       
                                          l
                                          0
                                       
                                       +
                                       l
                                       ,
                                       
                                          m
                                          0
                                       
                                       +
                                       m
                                       ,
                                       
                                          n
                                          0
                                       
                                       +
                                       n
                                    
                                 
                              
                           
                        where ϕ denotes the displacement of CP specified by the subscript.

The estimation of the local transformation expressed in Eq. (2) can be formulated as a minimization of an energy function. Our energy function has two terms as in many other methods [2–4,21,22]: a data term E
                        
                           d
                         to characterize the similarity between the transformed image and the target image, driving force behind the registration process with an aim to minimize the matching cost between the two images; and a smoothness term E
                        
                           s
                         to regularize the transformation field, discouraging certain improbable or impossible transformation. It is written as
                           
                              (3)
                              
                                 E
                                 =
                                 
                                    E
                                    d
                                 
                                 +
                                 λ
                                 
                                    E
                                    s
                                 
                                 =
                                 
                                    ∑
                                    
                                       p
                                       ∈
                                       
                                          I
                                          ′
                                       
                                    
                                 
                                 C
                                 
                                    
                                       (
                                    
                                 
                                 
                                    I
                                    ′
                                 
                                 (
                                 p
                                 )
                                 −
                                 J
                                 (
                                 p
                                 )
                                 
                                    
                                       )
                                    
                                 
                                 +
                                 λ
                                 
                                    ∑
                                    
                                       p
                                       ∈
                                       
                                          I
                                          ′
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       
                                          p
                                          ′
                                       
                                       ∈
                                       
                                          N
                                          p
                                       
                                    
                                 
                                 ∥
                                 
                                    T
                                    L
                                 
                                 (
                                 p
                                 )
                                 −
                                 
                                    T
                                    L
                                 
                                 (
                                 
                                    p
                                    ′
                                 
                                 )
                                 
                                    ∥
                                    2
                                    2
                                 
                              
                           
                        where 
                           
                              I
                              ′
                           
                           =
                           
                              T
                              L
                           
                           (
                           I
                           )
                        , 
                           
                              I
                              ′
                           
                           (
                           p
                           )
                         means the image value of voxel p in 
                           
                              I
                              ′
                           
                        , C models the matching cost, 
                           
                              N
                              p
                           
                         represents the neighboring voxels of p, ∥·∥
                        2 is the L
                        2 norm, and λ is an adjusting parameter (e.g. 0.01) balancing the two terms. Obviously, the unknowns in Eq. (3) are the ϕ value for each CP in Eq. (2).

The DCE-MR breast image registration is of an intra-modality image registration task, and therefore for which, the image similarity in the data term of Eq. (3) can be characterized by measuring the intensity differences between the transformed image 
                           
                              I
                              ′
                           
                         and the target image 
                           J
                        . For a generic image registration problem, these differences are usually treated as a Gaussian noise and the data term of Eq. (3) is written as an SSD [21]:
                           
                              (4)
                              
                                 C
                                 
                                    
                                       (
                                    
                                 
                                 
                                    I
                                    ′
                                 
                                 −
                                 J
                                 
                                    
                                       )
                                    
                                 
                                 =
                                 ∥
                                 
                                    I
                                    ′
                                 
                                 −
                                 J
                                 
                                    ∥
                                    2
                                    2
                                 
                              
                           
                        However, the intensity differences between 
                           
                              I
                              ′
                           
                         and 
                           J
                         are in practice not Gaussian for DCE-MR breast images due to the temporal changes of image intensity caused by the administration of contrast agent. This improper assumption was proven to give rise to the volume shrinking/expanding effect of tumor when registering images using Eq. (4) 
                        [10]. Considering the fact that obvious intensity changes between pre-contrast and post-contrast images happen in the tumor area, the intensity differences between 
                           
                              I
                              ′
                           
                         and 
                           J
                         can be assumed to be sparsely distributed in the image. Inspired by recent techniques about recovery of sparse corrupted signal [12–16], we assume that the temporal changes (caused by the administration of enhancement agent) of image intensity between 
                           
                              I
                              ′
                           
                         and 
                           J
                         are a kind of structured noise [16] and can therefore be modeled with a L
                        1 norm
                           
                              (5)
                              
                                 C
                                 (
                                 
                                    I
                                    ′
                                 
                                 −
                                 J
                                 )
                                 =
                                 ∥
                                 
                                    I
                                    ′
                                 
                                 −
                                 J
                                 
                                    ∥
                                    1
                                 
                              
                           
                        or a Lorentzian 
                        [16]
                        
                           
                              (6)
                              
                                 C
                                 (
                                 
                                    I
                                    ′
                                 
                                 −
                                 J
                                 
                                    
                                       )
                                    
                                 
                                 =
                                 ∥
                                 
                                    I
                                    ′
                                 
                                 −
                                 J
                                 
                                    ∥
                                    
                                       
                                          LL
                                          2
                                       
                                    
                                 
                                 .
                              
                           
                        The Lorentzian is computed as a summation of the following per-pixel Lorentzian estimator
                           
                              (7)
                              
                                 ρ
                                 (
                                 t
                                 )
                                 =
                                 log
                                 (
                                 1
                                 +
                                 
                                    
                                       (
                                       t
                                       /
                                       σ
                                       )
                                    
                                    2
                                 
                                 /
                                 2
                                 )
                              
                           
                        where t means a per-pixel intensity difference and σ is a scale parameter to control the function's shape.

Without sacrificing the simplicity, incorporation of the L
                        1 norm in Eq. (5) and the Lorentzian function in Eq. (6) is extremely efficient in handling the temporal intensity changes. The problem of the SSD measure (and other previous measures) is that the outlying measurements corresponding to the temporal intensity changes in DCE-MR images are assigned a high “weight”. Therefore, the CPs’ movements are driven more by the unreliable intensity differences, leading to the shrinking/explanding problem in registration. In contrast, the L
                        1 norm and the Lorentzian function are more forgiving about the outlying measurements, reducing the driving force from the temporal intensity changes. Taking the Lorentzian for example, its influence function [49], which characterizes the bias of a particular measurement on the solution, is different from the quadratic functions, as shown in Fig. 1
                        . Different from the increasing property in the influence function of the quadratic measure, the Lorentzian is redescending for which the influence of outliers (tumor voxels) tends to zero and the L
                        1 norm is flatting for which the outliers are not weighted as more as by the SSD measure.

To specify σ in Eq. (7), we denote the intensity differences of all voxels in the first term of Eq. (3) with 
                           X
                        , then
                           
                              (8)
                              
                                 σ
                                 =
                                 
                                    c
                                    x
                                 
                                 MED
                                 (
                                 |
                                 X
                                 −
                                 MED
                                 (
                                 X
                                 )
                                 |
                                 )
                              
                           
                        where MED refers to the median value, and c
                        
                           x
                         is a constant that depends on the statistical distribution of 
                           X
                        . We simply set c
                        
                           x
                        
                        =1.4826 by assuming 
                           X
                         is normally distributed.

In order to get an optimized estimation of the deformation model in Eq. (2) by minimizing the energy function in Eq. (3), we first propose an iteratively re-weighted least squares (IRLS) technique [50,33,51] which works when the L
                        1 norm in Eq. (5) is used for measuring the image similarity. We then propose a linear programming based approach to minimize Eq. (3), which works for both the L
                        1 norm in Eq. (5) and the Lorentzian in Eq. (6). These two algorithms are both recursive, and for each iteration, the former relies on a gradient descent optimization and can only result in a local minimum. In contrast, the latter is able to get a global optimum by solving a linear programming.

When the data term is measured by the L
                           1 norm in Eq. (5), the energy function in Eq. (3) can be re-written as
                              
                                 (9)
                                 
                                    E
                                    =
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          
                                             I
                                             ′
                                          
                                       
                                    
                                    
                                       
                                          |
                                       
                                    
                                    
                                       I
                                       ′
                                    
                                    (
                                    p
                                    )
                                    −
                                    J
                                    (
                                    p
                                    )
                                    
                                       
                                          |
                                       
                                    
                                    +
                                    λ
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          
                                             I
                                             ′
                                          
                                       
                                    
                                    
                                       ∑
                                       
                                          
                                             p
                                             ′
                                          
                                          ∈
                                          
                                             N
                                             p
                                          
                                       
                                    
                                    ∥
                                    
                                       T
                                       L
                                    
                                    (
                                    p
                                    )
                                    −
                                    
                                       T
                                       L
                                    
                                    (
                                    
                                       p
                                       ′
                                    
                                    )
                                    
                                       ∥
                                       2
                                       2
                                    
                                    .
                                 
                              
                           IRLS optimizes the above energy function as a sequence of standard least square problems, each using a weight factor based on the solution of the previous iteration. Specifically, the energy function at the kth iteration using the new weight is written as
                              
                                 (10)
                                 
                                    E
                                    =
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          
                                             I
                                             ′
                                          
                                       
                                    
                                    
                                       w
                                       k
                                    
                                    (
                                    p
                                    )
                                    
                                       
                                          
                                             
                                                
                                                   I
                                                   
                                                      k
                                                      −
                                                      1
                                                   
                                                   ′
                                                
                                                (
                                                p
                                                )
                                                −
                                                J
                                                (
                                                p
                                                )
                                             
                                          
                                       
                                       2
                                    
                                    +
                                    λ
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          
                                             I
                                             ′
                                          
                                       
                                    
                                    
                                       ∑
                                       
                                          
                                             p
                                             ′
                                          
                                          ∈
                                          
                                             N
                                             p
                                          
                                       
                                    
                                    ∥
                                    
                                       T
                                       L
                                    
                                    (
                                    p
                                    )
                                    −
                                    
                                       T
                                       L
                                    
                                    (
                                    
                                       p
                                       ′
                                    
                                    )
                                    
                                       ∥
                                       2
                                       2
                                    
                                    .
                                 
                              
                           In Eq. (10), 
                              
                                 I
                                 
                                    k
                                    −
                                    1
                                 
                                 ′
                              
                              (
                              p
                              )
                            means the transformed moving image based on the deformation estimated in last iteration and the weight 
                              
                                 w
                                 k
                              
                              (
                              p
                              )
                            is computed with
                              
                                 (11)
                                 
                                    
                                       w
                                       k
                                    
                                    (
                                    p
                                    )
                                    =
                                    (
                                    1
                                    −
                                    
                                       e
                                       
                                          −
                                          1
                                       
                                    
                                    )
                                    
                                       e
                                       
                                          −
                                          S
                                       
                                    
                                    ,
                                    
                                    where
                                       
                                       
                                    S
                                    =
                                    
                                       
                                          |
                                       
                                    
                                    
                                       I
                                       
                                          k
                                          −
                                          1
                                       
                                       ′
                                    
                                    (
                                    p
                                    )
                                    −
                                    J
                                    (
                                    p
                                    )
                                    
                                       
                                          |
                                       
                                    
                                    .
                                 
                              
                           Obviously, the weighted summation of least squares in Eq. (10) can be optimized via the gradient descent algorithm as used in [22].

Instead of using the gradient descent based techniques, we propose to recursively solve a linear programming formulation [18] to minimize the energy function in Eq. (3). Being able to produce a global optimization in each iteration, our approach can result in a more optimal solution to the breast motion.

We reformulate the two terms in Eq. (3) to facilitates the analysis. For the data term E
                           
                              d
                           , we approximate its minimization by recursively minimizing the sum of the matching costs each of which is caused independently by one CP's displacement. The displacement of any CP, denoted by (i, j, k)∈Ψ, only influences the motions of voxels in a subregion, denoted by ϒ(i,j,k), around it but not at all on other voxels [22]. The sum of matching costs of voxels in ϒ(i,j,k) is denoted by C
                           (i,j,k). The minimization of E
                           
                              d
                            in Eq. (3) can then be approximated by recursively minimizing the sum of {C
                           (i,j,k), (i, j, k)∈Ψ}. Apparently, this strategy has already been implicitly used in the gradient descent based optimization methods [22,3]. For the smoothness term E
                           
                              s
                            of Eq. (3), from Eq. (2), it is easy to see that 
                              
                                 T
                                 L
                              
                              (
                              p
                              )
                            and 
                              
                                 T
                                 L
                              
                              (
                              
                                 p
                                 ′
                              
                              )
                            can both be written as a linear combination of {ϕ
                           (i,j,k), (i, j, k)∈Ψ}: 
                              
                                 T
                                 
                                    L
                                    (
                                    p
                                    )
                                 
                              
                              =
                              
                                 ∑
                                 
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                    )
                                    ∈
                                    Ψ
                                 
                              
                              
                                 ω
                                 p
                                 
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                    )
                                 
                              
                              
                                 ϕ
                                 
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                    )
                                 
                              
                            where 
                              
                                 ω
                                 p
                                 
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                    )
                                 
                              
                            represents the combination coefficients. Totally speaking, the reformulation of Eq. (3) is expressed as


                           
                              
                                 (12)
                                 
                                    E
                                    =
                                    
                                       ∑
                                       
                                          (
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                          )
                                          ∈
                                          ψ
                                       
                                    
                                    
                                       C
                                       
                                          (
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                          )
                                       
                                    
                                    +
                                    λ
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          
                                             I
                                             ′
                                          
                                       
                                    
                                    
                                       ∑
                                       
                                          
                                             p
                                             ′
                                          
                                          ∈
                                          
                                             N
                                             p
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                      ∈
                                                      ψ
                                                   
                                                
                                                
                                                   ω
                                                   p
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                                
                                                   ϕ
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                                −
                                                
                                                   ∑
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                      ∈
                                                      ψ
                                                   
                                                
                                                
                                                   ω
                                                   
                                                      
                                                         p
                                                         ′
                                                      
                                                   
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                                
                                                   ϕ
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                       2
                                       2
                                    
                                    .
                                 
                              
                           The two terms in the norm operator of Eq. (12) can be be combined:


                           
                              
                                 (13)
                                 
                                    E
                                    =
                                    
                                       ∑
                                       
                                          (
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                          )
                                          ∈
                                          ψ
                                       
                                    
                                    
                                       C
                                       
                                          (
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                          )
                                       
                                    
                                    +
                                    λ
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          
                                             I
                                             ′
                                          
                                       
                                    
                                    
                                       ∑
                                       
                                          
                                             p
                                             ′
                                          
                                          ∈
                                          
                                             N
                                             p
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                      ∈
                                                      ψ
                                                   
                                                
                                                
                                                   ω
                                                   
                                                      
                                                         pp
                                                         ′
                                                      
                                                   
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                                
                                                   ϕ
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                       2
                                       2
                                    
                                 
                              
                           where 
                              
                                 ω
                                 
                                    
                                       pp
                                       ′
                                    
                                 
                                 
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                    )
                                 
                              
                            represents the combination coefficient.

The energy function in Eq. (13) is nonlinear and usually highly non-convex relative to the unknowns {ϕ
                           (i,j,k), (i, j, k)∈
                           ψ} (as shown by an exampling matching cost curve in Fig. 2
                           ). Due to this non-convexity, local searching algorithms, such as the gradient descent technique in [22], are plagued with the inability to find a global minimum and their solutions are highly dependent on the initialization.

We construct the convex approximation for the individual matching cost surface of each CP, thus making the energy function convex. As a result, we can approximate the minimization of the energy function by recursively solving a linear programming problem [18,52], for which a global optimization can be obtained in each iteration. Specifically, for each CP (i, j, k) in 
                              
                                 I
                                 ′
                              
                           , we treat the displacements corresponding to the points comprising the facets of the lower convex hull of its matching cost surface as the basis displacements (as shown in Fig. 2), denoted by 
                              
                                 B
                                 δ
                                 
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                    )
                                 
                              
                           , and then we can rewrite ϕ
                           
                              i,j,k
                            as a linear combination of ϕ
                           
                              b
                            in 
                              
                                 B
                                 ϕ
                                 
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                    )
                                 
                              
                           , i.e.


                           
                              
                                 (14)
                                 
                                    
                                       ϕ
                                       
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                       
                                    
                                    =
                                    
                                       ∑
                                       
                                          
                                             ϕ
                                             b
                                          
                                          ∈
                                          
                                             B
                                             ϕ
                                             
                                                (
                                                i
                                                ,
                                                j
                                                ,
                                                k
                                                )
                                             
                                          
                                       
                                    
                                    
                                       ϵ
                                       
                                          
                                             ϕ
                                             b
                                          
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                          )
                                       
                                    
                                    
                                       ϕ
                                       b
                                    
                                 
                              
                           x with the constraints
                              
                                 (15)
                                 
                                    
                                       ϵ
                                       
                                          
                                             ϕ
                                             b
                                          
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                          )
                                       
                                    
                                    ≥
                                    0
                                    
                                    and
                                    
                                    
                                       ∑
                                       
                                          
                                             ϕ
                                             b
                                          
                                          ∈
                                          
                                             B
                                             ϕ
                                             
                                                (
                                                i
                                                ,
                                                j
                                                ,
                                                k
                                                )
                                             
                                          
                                       
                                    
                                    
                                       ϵ
                                       
                                          
                                             ϕ
                                             b
                                          
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          ,
                                          k
                                          )
                                       
                                    
                                    =
                                    1
                                    .
                                 
                              
                           
                           C
                           (i,j,k) in Eq. (13) can also be represented as a linear combination of the costs with ϕ
                           
                              b
                           : C
                           
                              ϕ
                              
                                 b
                              
                           . Therefore, the minimization of Eq. (13) is formulated as
                              
                                 (16)
                                 
                                    arg
                                    min
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   k
                                                   )
                                                   ∈
                                                   ψ
                                                
                                             
                                             
                                                ∑
                                                
                                                   
                                                      ϕ
                                                      b
                                                   
                                                   ∈
                                                   
                                                      B
                                                      ϕ
                                                      
                                                         (
                                                         i
                                                         ,
                                                         j
                                                         ,
                                                         k
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                ϵ
                                                
                                                   
                                                      ϕ
                                                      b
                                                   
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   k
                                                   )
                                                
                                             
                                             
                                                C
                                                
                                                   
                                                      ϕ
                                                      b
                                                   
                                                
                                             
                                             +
                                             λ
                                             
                                                ∑
                                                
                                                   p
                                                   ∈
                                                   
                                                      I
                                                      ′
                                                   
                                                
                                             
                                             
                                                ∑
                                                
                                                   
                                                      p
                                                      ′
                                                   
                                                   ∈
                                                   
                                                      N
                                                      p
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                            
                                                               (
                                                               i
                                                               ,
                                                               j
                                                               ,
                                                               k
                                                               )
                                                               ∈
                                                               ψ
                                                            
                                                         
                                                         
                                                            ω
                                                            
                                                               
                                                                  pp
                                                                  ′
                                                               
                                                            
                                                            
                                                               (
                                                               i
                                                               ,
                                                               j
                                                               ,
                                                               k
                                                               )
                                                            
                                                         
                                                         
                                                            ∑
                                                            
                                                               
                                                                  ϕ
                                                                  b
                                                               
                                                               ∈
                                                               
                                                                  B
                                                                  ϕ
                                                                  
                                                                     (
                                                                     i
                                                                     ,
                                                                     j
                                                                     ,
                                                                     k
                                                                     )
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            ϵ
                                                            
                                                               
                                                                  ϕ
                                                                  b
                                                               
                                                            
                                                            
                                                               (
                                                               i
                                                               ,
                                                               j
                                                               ,
                                                               k
                                                               )
                                                            
                                                         
                                                         
                                                            ϕ
                                                            b
                                                         
                                                      
                                                   
                                                
                                                2
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

Apparently, the optimization in Eq. (16) with the constraints in Eq. (15) is a linear programming problem [18,52]. Different methods can be used to efficiently solve it. We chose the barrier method [18] due to its high efficiency in the affine-model based registration of 2D natural images in [53].

@&#RESULTS@&#

We compared the performances of the proposed image similarity measures which model the sparse temporal-variations of DCE-MR image with the conventional SSD measurement. We also investigated the benefits of the prosed optimization techniques in contrast to the gradient-descent technique. We use “SSD-GradientDescent”, “L
                     1-IRLS”, “L
                     1-LP” and “Lorentzian-LP” to represent the algorithm in [22] which leverages the SSD measurement and a gradient-descent based optimization technique, our algorithm relying on the L
                     1 norm in Eq. (5) and the IRLS optimization strategy in Section 3.4.1, our algorithm employing the L
                     1 norm and the linear programming optimization technique in Section 3.4.2 and our algorithm exploiting the Lorentzian norm in Eq. (6) and the linear programming optimization technique, respectively.

We evaluated these algorithms quantitatively with both synthetic image transformations artificially produced with certain models and real transformations generated during the imaging process. For the latter, manual tumor segmentations were used to assess the accuracy of the image registration algorithms.

The DCE-MR scans were acquired from 26 patients and 18 of which were from a Siemens 1.5T Impact MR system using a fast gradient echo 3D sequence with TR=12ms, TE=5ms, flip angle=35°, FOV=350mm and axial slice orientation, five post-contrast scans were obtained after the injection of the agent. The resolution is 0.70mm×0.70mm×3.75mm. Other 8 patients scanned were from a GE Sigma Horizon 1.5T MR system and the special array breast coil. Images were acquired before and after the injection of Gd-DTPA. Over the course of imaging, patients were required to be in the prone position to confirm the breasts hanging naturally into the coil. Both the dynamic pre-contrast and post-contrast images matrix was 512×512. The in-plane pixel spacing ranges from 0.625mm to 0.7031mm. The acquisition parameters for the 1.5T MR system were repetition time (TR)/echo time (TE)/flip angle=4.120−4.914ms/1.952−2.152ms/15 and slice thickness/pixel spacing=2.2mm/0.3906−0.6836mm. The pathological diagnosis of the malignant lesions addressed in our study is invasive ductal carcinoma and the diagnosis result of the benign lesion is Fibroadenoma.

In order to assess the accuracies of the registration algorithms on estimating the image deformation, we chose 6 pairs of pre-contrast and post-contrast DCE-MR images for which no obvious subject motion/deformation is observed between the pre-contrast scanning and the post-contrast scanning and in which the sizes of breast tumor are different. For each image pair, we synthesized 5 deformation fields and applied to the pot-contrast image. Therefore, we totally obtained 25 image pairs. We then ran the registration algorithms on each image pair to align the post-contrast image to the pre-contrast one. To measure the registration accuracy, we employed the mean and standard deviation (STD) of the summation of squared difference between the ground-truth position and algorithm's estimation.

To synthesize a deformation field, we set up a regular lattice of control points with a control point spacing of 15mm. We then randomly chose a direction for each control point and randomly moved it within a range of [−5mm to 5mm]. The setting of the lattice of control points used in the registration algorithms is the same to the one exploited in the synthesis process.

As shown by the error bars in Fig. 3
                        , we have several findings. First, “SSD-GradientDescent” degrades on images with a larger tumor size, and in contrast, the L
                        1 norm or Lorentzian norm based techniques mostly show performances consistent over different tumor sizes. This may mean that the proposed norms derived from the sparsity prior are less sensitive to the “corruptions” in tumor regions and therefore capable of dealing with the tumor shrinking/expanding problem in registration. Second, the linear programming based optimization technique being able to achieve a global optimum in each iteration performs better (p
                        <0.05) than the IRLS which searches for a local minimum using gradient descent in each iteration. Third, it seems that the Lorentzian norm can improve registration accuracies compared with the L
                        1 norm but the progression is not significant. Finally, all the registration algorithms proposed in this paper outperform (p
                        <0.05 except for the image without tumor) the “SSD-GradientDescent” technique by benefitting from the proposed norms measuring sparse image differences and the optimization techniques.

We selected 48 pairs of pre-contrast and post-contrast images in which a wide range of tumor shapes, sizes, and temporal intensity changes are covered. We then ran the registration algorithms to align the post-contrast image to the corresponding pre-contrast image. Tumor segmentations were performed by manual delineation from an experienced rater both on the pre-contrast images and the aligned post-contrast images followed by an independent refining process based on the graph-cut based algorithm in [54]. The shrinking/expanding effects were measured by the percentage of the absolute change of tumor volume relative to the original volume in pre-contrast images.

As shown by the mean and STD values of the percentage of tumor volume change between pre-contrast and post-contrast image in Fig. 4
                        , the proposed algorithms based on both the L
                        1 norm and Lorentzian norm can efficiently resolve the tumor shrinking/expanding effect in registration, especially when the linear programming based optimization technique is used. We found that the mean and STD of the percentages with “SSD-GradientDescent” are 19.87% and 13.45%, respectively, and in contrast, the numbers of our “Lorentzian-LP” algorithm (which performs best among the proposed algorithms) are 0.92% and 0.86%, respectively. Two exampling images and the corresponding results are shown in Fig. 5
                        .

Through our experiments, we found that the proposed “L
                        1-IRLS”, “L
                        1-LP” and “Lorentzian-LP” algorithms need 4 iterations at most to get an optimal solution.

We ran the algorithms on an OSX system with Mac Pro 2-Quad-Core (8-processor) Intel Xeon, 3GHz, 6GB RAM and a 10.4 operating system, and the average running time per registration is 20.3min for “SSD-GradientDescent”, 36.7min for “L
                        1-IRLS”, 79.3min for “L
                        1-LP” and 73.9min for “Lorentzian-LP”.

@&#CONCLUSIONS AND FUTURE WORK@&#

It is well known that the temporal image variations in DCE-MR images, which are introduced by the administration of contrast agent, can result in a problem of tumor shrinking/expanding for most traditional DCE-MR image registration algorithms. In order to deal with this issue and as inspired by recent research works using the image sparsity prior, we propose to treat these temporal variations as sparse “corruptions” of images and measure them with a L
                     1 norm and a Lorentzian. For these two new measurements, we also present two efficient optimization techniques to estimate the model parameters of the deformation field, which are based on an iteratively re-weighted least squares and a linear programming, respectively. These two optimization techniques both perform as a recursive process, and in each iteration, they work as resolving a weighted least squares which is optimized with a gradient descent and a linear programming being solved by a global optimization, respectively. With experimental results from both artificial and real image deformations, we show that the proposed image similarity measures can efficiently eliminate the affects of image variations in DCE-MR images and therefore resolve the shrinking/expanding issue. At the same time, we show that the proposed optimization algorithms provide good solutions to estimation of the parameters of the FFD B-splines deformation model, especially the linear programming based technique for its ability to attain a global optimum in each iteration.

We would have our future works focused on attempts of other transformation model (e.g. the thin-plate spline [7]) and the corresponding adjustments of the linear programming technique. In addition, we are interested in experiments for showing improvements in breast cancer diagnosis by incorporating our registration algorithms.

@&#ACKNOWLEDGEMENTS@&#

This work was made possible through support from the Natural Science Foundation of Shandong Province via grants ZR2014FM001 and ZR2011FQ033, Taishan Scholar Program of Shandong Province, Shandong Normal University via grant for High-Level Talents from Overseas, Institute Support Innovation Project of Jinan Administration of Science & Technology via grants 201202012 and 201303004, Fundamental Research Funds for the Central Universities of China and the National Institutes of Health (NIH) via grants NS045839, HHSN276201000492P.

@&#REFERENCES@&#

