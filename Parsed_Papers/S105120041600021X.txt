@&#MAIN-TITLE@&#Face recognition with Riesz binary pattern

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new image descriptor RBP is presented for face recognition in this paper.


                        
                        
                           
                           RBP is based on image multi-scale analysis and multi-order Riesz transform.


                        
                        
                           
                           RBP consists of two complementary components, i.e., local Riesz binary pattern (LRBP) and global Riesz binary pattern (GRBP).


                        
                        
                           
                           Experimental results on four databases demonstrate the superiority of our RBP compared with other image representation methods.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Face recognition

Monogenic signal representation

High-order Riesz transform

Binary coding method

@&#ABSTRACT@&#


               
               
                  First-order Riesz transform based monogenic signal representation has been widely used in image processing and computer vision, however it only characterizes image intrinsic one-dimensional structure, and is incapable of describing intrinsic two-dimensional structure. To this end, a novel feature extraction approach, named Riesz Binary Pattern (RBP), is proposed for face recognition based on image multi-scale analysis and multi-order Riesz transform. RBP consists of two complementary components, i.e., local Riesz binary pattern (LRBP) and global Riesz binary pattern (GRBP). LRBP is obtained by performing local binary coding operator on each Riesz transform response to extract image intrinsic two-dimensional structure features. While GRBP is the global binary coding of joint information of image pixel multi-scale analysis and multi-order Riesz transform. Histogram of LRBP and GRBP are concatenated to form face image RBP description. Experimental results on three databases demonstrate that our proposed RBP descriptor is more discriminant in extracting image information and can provide a higher classification rate compared to some state-of-the-art image representation methods.
               
            

@&#INTRODUCTION@&#

Image representation is a key issue for face recognition task, and recent years have witnessed an increasing focus on image representation through local descriptors. As one of the most representative local descriptors, local binary pattern (LBP) characterizes the spatial structure of image texture by thresholding a local neighborhood with the value of the center pixel intensity and utilizing the sign information to form the binary pattern coding number [1]. Due to impressive computational efficiency and good texture discriminative property, LBP has achieved excellent performance and has gained considerable attention.

To further improve the performance of LBP, a number of variants have been proposed recently. Heikkilä et al. [2] proposed center-symmetric LBP (CS-LBP), which is different from LBP in that it compares center symmetric pairs of pixels against a center pixel, rather than comparing each pixel with the center. This halves the number of bits of binary patterns for the same number of neighbors. One of the most critical deficiencies of LBP is that it only extracts the sign between neighboring pixels, while the magnitude is ignored, which may discard discriminative information. To better describe local micro patterns, Guo et al. [3] proposed the completed LBP (CLBP), which includes the information contained in the center pixel and magnitudes of local differences as complementary to the sign used by the original LBP. Considering that high frequency texture regions have high higher variances and do more contribution to discriminate image, Guo et al. [4] proposed variance weighted LBP (VLBP) histogram image representation method, rather than quantized the variance into N bins as in the original work [1]. Tan and Triggs [5] proposed local ternary pattern (LTP), which quantizes the image pixel gray-level differences between center and neighbor pixels into a ternary value instead of the binary one. It is more discriminant and less sensitive to noise in uniform regions than LBP. Huang et al. [6] proposed local circular patterns (LCP), which improve the LBP and its variants by replacing the binary quantization with a clustering method, resulting in higher discriminative power as well as better robustness to noise. Zhang et al. [7] proposed local derivative pattern (LDP) for image representation. The m-th order code of LDP is generated by encoding the variations of the image directional 
                        (
                        m
                        −
                        1
                        )
                     -th derivative. Because there are a lot of pre-specific directions that can be used to estimate the variations of the 
                        (
                        m
                        −
                        1
                        )
                     -th order local derivatives, LDP may result in too many codes for each pixel. Furthermore, it is impossible for LDP to address the rotation invariance issue. Guo et al. [8] proposed the local directional derivative pattern (LDDP), which encodes directional high-order derivative features along multi-direction around center pixel, for texture classification. Yuan [9] theoretically analyzed the original LBP from the Taylor expansion of a signal along a direction and proposed high-order derivative local binary pattern (DLBP), which is similar to the LDDP. And then by applying the circular shift sub-uniform and scale space operation let the DLBP descriptor has rotation and scale invariance capability for texture classification.

Zhang et al. [10] proposed a local Gabor binary pattern histogram sequence (LGBPHS) descriptor to represent face information. By taking advantages of both Gabor wavelets and LBP feature extraction method, LGBPHS gained superior performances in uncontrolled environments. However, the multi-scale and multi-orientation Gabor feature extraction is computationally demanding and hence not affordable for real-time practical application. Yang et al. [11] proposed monogenic binary coding (MBC) image representation method, which encodes amplitude, orientation and phase of monogenic signal representation by employing the local binary coding scheme. Compared with LGBPHS method, MBC local feature extraction method has much lower time and space complexity, and leads to competitive performance. However, the main drawback of MBC method is that first-order Riesz transform based monogenic signal representation simply characterizes image intrinsic one-dimensional structure, and virtually unable to describe intrinsic two-dimensional structure.

Recently, high-order Riesz transform is widely used in image analysis for complex signal models. Zhang et al. [12] proposed monogenic-LBP (MLBP) image descriptor, which is the combination of LBP, local phase of monogenic signal and the local surface type computed by the first- and second-order Riesz transform. Zhang and Li [13] binarized the coefficients of the first- and second-order Riesz transforms according to their signs as features to encode the palmprint and finger-knuckle-print local image patterns. However, this method does not consider the valuable image texture feature, which brings discriminant information for recognition. Marchant and Jackway [14] proposed to model local image interesting structures (e.g., lines, edges, corners and junctions) as the superposition of a two-dimensional steerable wavelet constructed by multi-order Riesz transform.

Inspired by the conclusions of above mentioned works and further give a comprehensive description of the image information, we present a simple yet effective face image descriptor, Riesz binary pattern (RBP), for face recognition. The main novelty of our proposed RBP is twofold: (1) Multi-order (first, second and third) Riesz transform are jointly employed to analyze the image local intrinsic one- and two-dimensional structure information. (2) Local Riesz binary pattern (LRBP) and global Riesz binary pattern (GRBP) image patterns are devised to encode the structure information extracted by the multi-order Riesz transform. Therefore, RBP has the merits of robustness and compactness of coding based feature extraction method. The distribution of LRBP and GRBP codes within an image or sub-image is used to describe face image. Experimental results on three face databases show the effectiveness and robustness of the proposed descriptor.

The rest of the paper is organized as follows: In Section 2, we briefly review the related Hilbert transform, Riesz transform and monogenic signal representation. In Section 3, we describe our RBP based image representation method in detail. Section 4 presents the experimental results on three face databases. Finally, we conclude the paper in Section 5.

@&#RELATED WORK@&#

The Hilbert transform has been widely used in signal processing. For a real valued one-dimensional signal 
                        f
                        (
                        t
                        )
                     , its Hilbert transform 
                        
                           
                              f
                           
                           
                              H
                           
                        
                        (
                        t
                        )
                      is defined as [15]
                     
                        
                           (1)
                           
                              
                                 
                                    f
                                 
                                 
                                    H
                                 
                              
                              (
                              t
                              )
                              =
                              f
                              (
                              t
                              )
                              ⁎
                              
                                 1
                                 
                                    π
                                    t
                                 
                              
                              =
                              
                                 1
                                 π
                              
                              
                                 ∫
                                 
                                    −
                                    ∞
                                 
                                 ∞
                              
                              
                                 
                                    f
                                    (
                                    τ
                                    )
                                 
                                 
                                    t
                                    −
                                    τ
                                 
                              
                              d
                              τ
                              
                                 →
                                 
                                    FT
                                 
                              
                              j
                              
                                 sgn
                              
                              (
                              ω
                              )
                              F
                              (
                              ω
                              )
                              ,
                           
                        
                      where 
                        
                           →
                           
                              FT
                           
                        
                      means Fourier transform, ⁎ stands for convolution operation, 
                        j
                        =
                        
                           
                              −
                              1
                           
                        
                     , 
                        F
                        (
                        ω
                        )
                      is the Fourier transform of 
                        f
                        (
                        t
                        )
                      and 
                        
                           sgn
                        
                        (
                        x
                        )
                      is the sign function.

Riesz transform is the natural multidimensional generalization of the Hilbert transform. The convolution kernels of the Riesz transform in the n-dimensional spatial domain can be expressed as [15]
                     
                        
                           (2)
                           
                              
                                 
                                    R
                                 
                                 
                                    l
                                 
                              
                              (
                              y
                              )
                              =
                              
                                 
                                    c
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    
                                       y
                                    
                                    
                                       l
                                    
                                 
                                 
                                    |
                                    Y
                                    
                                       
                                          |
                                       
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                 
                              
                              ,
                           
                        
                      where 
                        
                           
                              c
                           
                           
                              n
                           
                        
                        =
                        Γ
                        [
                        (
                        n
                        +
                        1
                        )
                        /
                        2
                        ]
                        /
                        
                           
                              π
                           
                           
                              (
                              n
                              +
                              1
                              )
                              /
                              2
                           
                        
                     , 
                        Y
                        =
                        (
                        
                           
                              y
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              2
                           
                        
                        ,
                        …
                        ,
                        
                           
                              y
                           
                           
                              n
                           
                        
                        )
                      and 
                        l
                        =
                        1
                        ,
                        2
                        ,
                        …
                        ,
                        n
                     . In two-dimensional space, two kernels of the first-order Riesz transform can be written as
                        
                           (3)
                           
                              
                                 
                                    R
                                 
                                 
                                    x
                                 
                              
                              (
                              Z
                              )
                              =
                              
                                 x
                                 
                                    2
                                    π
                                    |
                                    Z
                                    
                                       
                                          |
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              ,
                              
                              
                                 
                                    R
                                 
                                 
                                    y
                                 
                              
                              (
                              Z
                              )
                              =
                              
                                 y
                                 
                                    2
                                    π
                                    |
                                    Z
                                    
                                       
                                          |
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              ,
                           
                        
                      where 
                        Z
                        =
                        (
                        x
                        ,
                        y
                        )
                        ∈
                        
                           
                              R
                           
                           
                              2
                           
                        
                     . Fourier transforms of 
                        
                           
                              R
                           
                           
                              x
                           
                        
                      and 
                        
                           
                              R
                           
                           
                              y
                           
                        
                      are
                        
                           (4)
                           
                              
                                 
                                    R
                                 
                                 
                                    u
                                 
                              
                              (
                              U
                              )
                              =
                              −
                              j
                              
                                 u
                                 
                                    |
                                    U
                                    |
                                 
                              
                              ,
                              
                              
                                 
                                    R
                                 
                                 
                                    v
                                 
                              
                              (
                              U
                              )
                              =
                              −
                              j
                              
                                 v
                                 
                                    |
                                    U
                                    |
                                 
                              
                              ,
                           
                        
                      where 
                        U
                        =
                        (
                        u
                        ,
                        v
                        )
                        ∈
                        
                           
                              R
                           
                           
                              2
                           
                        
                     .

According to [16], the N-th order Riesz transform of the d-dimensional signal f can be specified as the 
                        p
                        (
                        N
                        ,
                        d
                        )
                     -vector signal transformation whose components are given by
                        
                           (5)
                           
                              
                                 
                                    f
                                 
                                 
                                    n
                                 
                              
                              =
                              
                                 
                                    R
                                 
                                 
                                    n
                                 
                              
                              f
                              =
                              
                                 
                                    
                                       N
                                       !
                                    
                                    
                                       
                                          
                                             n
                                          
                                          
                                             1
                                          
                                       
                                       !
                                       ⋯
                                       
                                          
                                             n
                                          
                                          
                                             d
                                          
                                       
                                       !
                                    
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    1
                                 
                                 
                                    
                                       
                                          n
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ⋯
                              
                                 
                                    R
                                 
                                 
                                    d
                                 
                                 
                                    
                                       
                                          n
                                       
                                       
                                          d
                                       
                                    
                                 
                              
                              f
                              ,
                           
                        
                      where 
                        p
                        (
                        N
                        ,
                        d
                        )
                        =
                        
                           (
                           
                              
                                 
                                    N
                                    +
                                    d
                                    −
                                    1
                                 
                              
                              
                                 
                                    d
                                    −
                                    1
                                 
                              
                           
                           )
                        
                     . Hence when 
                        N
                        =
                        2
                      and 
                        d
                        =
                        2
                     , there are a total of 
                        p
                        (
                        2
                        ,
                        2
                        )
                        =
                        
                           (
                           
                              
                                 
                                    3
                                 
                              
                              
                                 
                                    1
                                 
                              
                           
                           )
                        
                        =
                        3
                      distinct components which are 
                        
                           
                              R
                           
                           
                              x
                           
                        
                        
                           
                              R
                           
                           
                              x
                           
                        
                        (
                        f
                        )
                     , 
                        
                           
                              R
                           
                           
                              x
                           
                        
                        
                           
                              R
                           
                           
                              y
                           
                        
                        (
                        f
                        )
                      and 
                        
                           
                              R
                           
                           
                              y
                           
                        
                        
                           
                              R
                           
                           
                              y
                           
                        
                        (
                        f
                        )
                     . And when 
                        N
                        =
                        3
                      and 
                        d
                        =
                        2
                     , there are a total of 
                        p
                        (
                        3
                        ,
                        2
                        )
                        =
                        
                           (
                           
                              
                                 
                                    4
                                 
                              
                              
                                 
                                    1
                                 
                              
                           
                           )
                        
                        =
                        4
                      distinct components which are 
                        
                           
                              R
                           
                           
                              x
                           
                        
                        
                           
                              R
                           
                           
                              x
                           
                        
                        
                           
                              R
                           
                           
                              x
                           
                        
                        (
                        f
                        )
                     , 
                        
                           
                              R
                           
                           
                              x
                           
                        
                        
                           
                              R
                           
                           
                              x
                           
                        
                        
                           
                              R
                           
                           
                              y
                           
                        
                        (
                        f
                        )
                     , 
                        
                           
                              R
                           
                           
                              x
                           
                        
                        
                           
                              R
                           
                           
                              y
                           
                        
                        
                           
                              R
                           
                           
                              y
                           
                        
                        (
                        f
                        )
                      and 
                        
                           
                              R
                           
                           
                              y
                           
                        
                        
                           
                              R
                           
                           
                              y
                           
                        
                        
                           
                              R
                           
                           
                              y
                           
                        
                        (
                        f
                        )
                     . Fig. 1
                      shows a face image, its band-pass filtered image and its multi-order Riesz transformed images.

For an image I, the monogenic signal is defined as the combination of I and its first-order Riesz transform
                        
                           (6)
                           
                              
                                 
                                    I
                                 
                                 
                                    M
                                 
                              
                              =
                              (
                              I
                              ,
                              
                                 
                                    R
                                 
                                 
                                    x
                                 
                              
                              ⁎
                              I
                              ,
                              
                                 
                                    R
                                 
                                 
                                    y
                                 
                              
                              ⁎
                              I
                              )
                              =
                              (
                              I
                              ,
                              
                                 
                                    I
                                 
                                 
                                    x
                                 
                              
                              ,
                              
                                 
                                    I
                                 
                                 
                                    y
                                 
                              
                              )
                              .
                           
                        
                      The local magnitude, orientation and phase can be calculated as
                        
                           (7)
                           
                              
                                 A
                                 =
                                 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             I
                                          
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             I
                                          
                                          
                                             y
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 ϕ
                                 =
                                 −
                                 
                                    sign
                                 
                                 (
                                 
                                    
                                       I
                                    
                                    
                                       x
                                    
                                 
                                 )
                                 
                                    atan
                                 
                                 2
                                 
                                    (
                                    
                                       
                                          
                                             
                                                I
                                             
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                I
                                             
                                             
                                                y
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    ,
                                    I
                                    )
                                 
                                 ,
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 θ
                                 =
                                 
                                    atan
                                 
                                 
                                    (
                                    
                                       
                                          
                                             I
                                          
                                          
                                             y
                                          
                                       
                                       
                                          
                                             I
                                          
                                          
                                             x
                                          
                                       
                                    
                                    )
                                 
                                 .
                              
                           
                        
                     
                  

In this work, we explore an image feature extraction method, Riesz binary pattern (RBP), which makes maximal use of the image multi-order Riesz transform information by employing the local and global binary coding method.

Specifically, the proposed RBP using two schemes, local Riesz binary pattern (LRBP) and global Riesz binary pattern (GRBP), to encode the image structure feature. While the LRBP encodes the local neighborhood structures of band-pass filtered images and the Riesz transformed images separately, GRBP further encodes the variations information under the multi-scale analysis and multi-order Riesz transform of the original image. The intuition behind RBP is that the proposed LRBP or GRBP is also a kind of image micro-pattern modeling method.

The use of multi-scale image analysis can reinforce the discriminative capability of image representation, since they are able to extract information that could not be present in certain scales. In this work, we perform band-pass filtering to the image before applying the Riesz transforms. The calculation of the image filtering is shown as
                           
                              (10)
                              
                                 
                                    
                                       I
                                    
                                    
                                       b
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 I
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ⁎
                                 
                                    
                                       F
                                    
                                    
                                       b
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ,
                              
                           
                         where 
                           I
                           (
                           x
                           ,
                           y
                           )
                         is the grayscale image, 
                           
                              
                                 F
                              
                              
                                 b
                              
                           
                           (
                           x
                           ,
                           y
                           )
                         is the band-pass filter. With respect to the band-pass filter, we use the Laplacian of Poisson (LOP) filter proposed in [15], whose transfer function in the Fourier domain is
                           
                              (11)
                              
                                 
                                    
                                       F
                                    
                                    
                                       LOP
                                    
                                 
                                 (
                                 U
                                 )
                                 =
                                 −
                                 4
                                 
                                    
                                       π
                                    
                                    
                                       2
                                    
                                 
                                 |
                                 U
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 
                                    exp
                                 
                                 (
                                 −
                                 2
                                 π
                                 |
                                 U
                                 |
                                 λ
                                 )
                                 ,
                              
                           
                         in which 
                           U
                           =
                           (
                           u
                           ,
                           ν
                           )
                           ∈
                           
                              
                                 R
                              
                              
                                 2
                              
                           
                        , λ is used to control the center frequency. For the purpose of the tradeoff between computation cost and representation efficiency, image is filtered at three different center frequencies (i.e., 
                           λ
                           =
                           3.6
                           ,
                           5.4
                           ,
                           7.2
                        ) in this work.

Convolute the band-pass filtered image 
                           
                              
                                 I
                              
                              
                                 b
                              
                           
                           (
                           x
                           ,
                           y
                           )
                         with the Riesz transform kernel 
                           
                              
                                 R
                              
                              
                                 k
                              
                           
                         as mentioned in Section 2
                        
                           
                              (12)
                              
                                 
                                    
                                       I
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       I
                                    
                                    
                                       b
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ⁎
                                 
                                    
                                       R
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 .
                              
                           
                         Then quantify the transform coefficients by the following rules:
                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   k
                                                
                                             
                                             (
                                             x
                                             ,
                                             y
                                             )
                                             >
                                             0
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             otherwise
                                          
                                       
                                    
                                 
                              
                           
                         
                        
                           k
                           ∈
                           {
                           b
                           ,
                           x
                           ,
                           y
                           ,
                           x
                           x
                           ,
                           x
                           y
                           ,
                           y
                           y
                           ,
                           x
                           x
                           x
                           ,
                           x
                           x
                           y
                           ,
                           x
                           y
                           y
                           ,
                           y
                           y
                           y
                           }
                        , 
                           
                              
                                 I
                              
                              
                                 k
                              
                           
                         is the certain Riesz transform resultant, 
                           
                              
                                 
                                    
                                       I
                                    
                                    
                                       ¯
                                    
                                 
                              
                              
                                 k
                              
                           
                         is the corresponding binary quantization value. Both of the following LRBP and GRBP are defined based on the one-bit code quantified image.

Simply speaking, the LRBP scheme encodes the local structures for each transformed image pixel. Formally, for each transformed image, a LRBP value at position 
                           (
                           x
                           ,
                           y
                           )
                         is computed by comparing the value of a center pixel 
                           
                              
                                 
                                    
                                       i
                                    
                                    
                                       ¯
                                    
                                 
                              
                              
                                 c
                              
                           
                         with the values of its neighboring pixels 
                           
                              
                                 
                                    
                                       i
                                    
                                    
                                       ¯
                                    
                                 
                              
                              
                                 p
                              
                           
                        . Mathematically, the LRBP code for the center pixel is defined as
                           
                              (14)
                              
                                 
                                    
                                       LRBP
                                    
                                    
                                       P
                                       ,
                                       R
                                    
                                 
                                 (
                                 
                                    
                                       I
                                    
                                    
                                       c
                                    
                                 
                                 )
                                 =
                                 
                                    ∑
                                    
                                       p
                                       =
                                       0
                                    
                                    
                                       P
                                       −
                                       1
                                    
                                 
                                 S
                                 
                                    (
                                    
                                       
                                          
                                             
                                                i
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          p
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             
                                                i
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          c
                                       
                                    
                                    )
                                 
                                 ×
                                 
                                    
                                       2
                                    
                                    
                                       p
                                    
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 
                                    
                                       i
                                    
                                    
                                       ¯
                                    
                                 
                              
                              
                                 c
                              
                           
                         and 
                           
                              
                                 
                                    
                                       i
                                    
                                    
                                       ¯
                                    
                                 
                              
                              
                                 p
                              
                           
                         are the quantized image Riesz transform value of the center and its neighborhood pixel respectively, P is the number of neighbors, R is the radius of the circular neighborhood that is the Euclidean distance between the center pixel and its neighbors, and 
                           S
                           (
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 c
                              
                              
                                 2
                              
                           
                           )
                         is a binary coding function determining the types of local pattern transitions. It encodes the co-occurrence of two quantized Riesz transform response at different neighboring pixels as
                           
                              (15)
                              
                                 S
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       c
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             1
                                             ,
                                          
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   c
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       
                                          
                                             0
                                             ,
                                          
                                          
                                             otherwise 
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Unlike LRBP encoding local structures of every transformed image separately, the GRBP scheme characterizes the structures variation under different order Riesz transforms jointly. Concretely, concatenates the quantified one-bit code of all the Riesz transform resultant into a binary string for each pixel 
                           
                              
                                 I
                              
                              
                                 c
                              
                           
                        , the decimal value converted from the binary string as following is the GRBP
                           
                              (16)
                              
                                 
                                    GRBP
                                 
                                 (
                                 
                                    
                                       I
                                    
                                    
                                       c
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             b
                                          
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             x
                                          
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             y
                                          
                                       
                                       ⋯
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             x
                                             x
                                             y
                                          
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             y
                                             y
                                             y
                                          
                                       
                                       ]
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    ∑
                                    k
                                 
                                 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ×
                                 
                                    
                                       2
                                    
                                    
                                       k
                                       −
                                       1
                                    
                                 
                                 .
                              
                           
                        
                     

With GRBP, the filtering and transforming output at each position is a 10-dimensional vector for each scale band-pass filtered image, and there are 3072 
                           (
                           3
                           ×
                           
                              
                                 2
                              
                              
                                 10
                              
                           
                           )
                         kinds of patterns in total, here 3 is the number of Riesz transform scales. Such a dimension is too large to build histogram and it will bring computation issue. To reduce the feature size, we empirically divide the transform results into 2 groups. Thus for each input image, in total 
                           3
                           ×
                           2
                         2-dimensional histograms need to be built and then these histograms are concatenated into one feature vector. The final histogram size is reduced to 192 (
                           3
                           ×
                           2
                           ×
                           
                              
                                 2
                              
                              
                                 5
                              
                           
                        ).

We compute the LRBP and GRBP histogram from every quantified transform image and the combination of all the quantified transform image respectively. Then, concatenate them into one to form the final image representation.
                           
                              (17)
                              
                                 H
                                 =
                                 [
                                 
                                    
                                       H
                                    
                                    
                                       l
                                       −
                                       b
                                    
                                 
                                 ,
                                 
                                    
                                       H
                                    
                                    
                                       l
                                       −
                                       x
                                    
                                 
                                 ,
                                 
                                    
                                       H
                                    
                                    
                                       l
                                       −
                                       x
                                    
                                 
                                 ,
                                 ⋯
                                 ,
                                 
                                    
                                       H
                                    
                                    
                                       l
                                       −
                                       x
                                       y
                                       y
                                    
                                 
                                 ,
                                 
                                    
                                       H
                                    
                                    
                                       l
                                       −
                                       y
                                       y
                                       y
                                    
                                 
                                 ,
                                 
                                    
                                       H
                                    
                                    
                                       g
                                    
                                 
                                 ]
                                 ,
                              
                           
                         where 
                           
                              
                                 H
                              
                              
                                 g
                              
                           
                         is the histogram of GRBP, 
                           
                              
                                 H
                              
                              
                                 l
                                 −
                                 x
                                 y
                                 y
                              
                           
                         is the histogram of LRBP extracted from Riesz transform 
                           
                              
                                 R
                              
                              
                                 x
                                 y
                                 y
                              
                           
                         image, and so on.

After obtaining the image RBP representation histogram feature, the similarity is measured using the histogram intersection and the feature is classified by the nearest neighbor classifier
                           
                              (18)
                              
                                 D
                                 (
                                 
                                    
                                       H
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       H
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    ∑
                                    
                                       n
                                       =
                                       0
                                    
                                    
                                       N
                                       −
                                       1
                                    
                                 
                                 min
                                 ⁡
                                 {
                                 
                                    
                                       H
                                    
                                    
                                       1
                                       ,
                                       n
                                    
                                 
                                 ,
                                 
                                    
                                       H
                                    
                                    
                                       2
                                       ,
                                       n
                                    
                                 
                                 }
                                 ,
                              
                           
                         where N is the number of histogram bins, 
                           
                              
                                 H
                              
                              
                                 1
                                 ,
                                 n
                              
                           
                         and 
                           
                              
                                 H
                              
                              
                                 2
                                 ,
                                 n
                              
                           
                         are the values of the training and testing sample histogram feature at n-th bin, respectively.

@&#EXPERIMENTAL RESULTS@&#

Three benchmark face databases: AR, Yale B and UMIST face database are used in the experiments to evaluate the performances of the proposed face image representation method.

AR face database [17] contains more than 4000 face images of 126 subjects (70 men and 56 women) with different facial expressions, illumination conditions, and occlusions. For each subject, 26 images were taken in two separate sessions (two weeks interval between the two sessions). In the experiments, a subset that contains 100 subjects (50 male and 50 female) is chosen and each image was manually cropped and resized to 
                           121
                           ×
                           100
                         pixels.

Extended Yale B database [18] consists of 2414 front-view face images of 38 subjects. There are about 64 images under different laboratory-controlled lighting conditions for each subject. In our experiments, the cropped images of size 
                           100
                           ×
                           100
                         are used.

UMIST face database [19] consists of 564 images of 20 subjects covering a range of race, sex and appearance. The size of cropped image is 
                           92
                           ×
                           112
                         pixels with 256 gray levels. And the images are shown at various angles, from profile to frontal views. Fig. 2
                         illustrates some example facial images of three subjects from three face databases.

In the experiments, for all databases, we randomly choose half of the images per subject for training and the rest ones for testing. In order to obtain reliable results, we repeat the experiment process by 10 times with different random selected training and testing images.

For the RBP descriptors, we use a constant number of 8 sampling points with radius 
                           R
                           =
                           1
                        , for LRBP computation. The number of non-overlapping subregions, 
                           w
                           ×
                           w
                        , that a face image is partitioned into, we have set to 
                           w
                           =
                           9
                        , for all mentioned methods.

In this Section, we will justify the theoretical argument about the effect of multi-order Riesz transform. Let 
                           
                              
                                 RBP
                              
                              
                                 (
                                 m
                                 )
                              
                           
                         denotes RBP based on up to m-th order Riesz transform. LBP method is provided as baseline performance. The final result illustrated in Table 1
                        .

As can be seen from the Table, the recognition rates of Riesz transform based methods 
                           
                              
                                 RBP
                              
                              
                                 (
                                 1
                                 )
                              
                           
                        , 
                           
                              
                                 RBP
                              
                              
                                 (
                                 2
                                 )
                              
                           
                        , 
                           
                              
                                 RBP
                              
                              
                                 (
                                 3
                                 )
                              
                           
                         and 
                           
                              
                                 RBP
                              
                              
                                 (
                                 4
                                 )
                              
                           
                         are all higher than the LBP feature extraction method. Among different Riesz transform based RBPs, with the increase of the order of Riesz transform applied by RBP, their recognition rate increase. This trend continues to a point that information of multi-order Riesz transform becomes redundant to image representation, from where the recognition rate increases slowly. All of these proven that multi-order Riesz transform can extract more image discriminative information for face recognition than single first-order one. Considering the computation cost and performance achieved, we utilize three orders Riesz transform to construct RBP.

Recall from Section 3 that the proposed RBP feature is composed of LRBP and GRBP components. In this Section, we will perform experiments to investigate the following two issues: (1) Which component contributes more to face recognition performance; (2) The feasibility for the usage of combined LRBP and GRBP features against utilizing LRBP and GRBP features separately.

According to the Table 2
                        , the following two conclusions can be made. (1) GRBP contributes much more than the LRBP for face recognition, this demonstrates high discriminating capabilities of GRBP features. (2) The combination of both LRBP and GRBP components achieves better results, compared with the cases of separately using them. This implies that LRBP and GRBP components bring different information and they are complement each other in terms of boosting face recognition performance.

In this section, we will compare the face recognition performance of our method RBP with those representative and state of the art methods, including LBP [20], LGBPHS, MLBP, MBC, Motif XOR pattern (MXORP) [21] and enhanced local directional patterns (ELDP) [22]. Parameters involved are empirically determined. Specifically, for the Gabor filters, the parameters are set as in the work [10]. The parameters of Riesz transform are given in Section 3. For the local binary coding or local XOR coding strategy of LBP, MXORP, LGBPHS, MLBP and MBC, we use a constant number of 8 sampling points with radius 
                           R
                           =
                           1
                        , which is consistent with other LBP face recognition works. Experimental results of these methods in three databases are illustrated in the Table 3
                        .

According to the results shown in Table 3, we can get the following observations. First, LBP, MXORP and ELDP achieve the lowest accurate recognition rate, as they only take the image pixel grayscale value information into feature generation. Second, since the Gabor filters perform multi-scale and multi-orientation analysis, LGBPHS could achieve better results than LBP, MXORP and ELDP. Third, compared to existing Riesz transform based methods MLBP and MBC, our proposed multi-order Riesz transform based image descriptor RBP achieved highest recognition rates. All of these observations demonstrate the effectiveness of the proposed method for face image representation. The underlying reason could be that the multi-order Riesz transform can well collaborate with local and global binary coding methods to extract local image feature for image representation.

For face recognition tasks, noise is inevitable under uncontrolled circumstances. Therefore, it is important for an image descriptor to be insensitive to noise for robust face recognition. In this Section, we will verify the tolerance of the proposed method to two common types of image noise, e.g., additive Gaussian white noise and multiplicative speckle noise. The resultant values are listed in Tables 4 and 5
                        
                        .

As shown in the tables, the recognition rates of all methods tend to drop in the presence of Gaussian white noise or speckle noise. Among them, the decreases in the recognition rate of our method are least. It can be concluded that our method yields the highest tolerance to the two types of image noise.

The discriminant ability and robustness of the proposed RBP descriptor has been presented by the precious experiments. In this Section, we show the computational time and space complexity of our proposed descriptor also in comparison with others. To be fair, all image description methods performed on UMIST face database. All above experiments were performed on a Lenovo desktop machine (CPU Core i5© 2.5 GHz, 4 Gb RAM) which was installed with Windows 7 64 bit SP1 and Matlab 2013b 64 bits programming environment. Although the machine has a multi-core CPU (4 cores) but all tested implementations are not parallel. We ran benchmark 5 times and reported the average results in Table 6
                        .

From the table, we can see that the computation time and length of feature vector of the RBP are smaller as compared to LGBPHS, but longer than LBP, MLBP, MBC, MXORP and ELDP. Both of these are expected and they can be explained as follows. RBP operates on 30 multi-scale and multi-order transformed images; LGBPHS uses Gabor transformations (with 5 scales and 8 orientations) to generate feature maps, which means that 80 convolutions (40 real convolutions and 40 imagery convolutions) are needed in processing a single image; MBC is extracted from 3-scale magnitude, orientation and phase components of monogenic signal; MLBP spent more time than MBC to compute image second order Riesz transform and traditional LBP; while LBP, ELDP and MXORP only work with one intensity image of the same size.

@&#CONCLUSION@&#

Image representation is generally accepted as a difficult and challenging problem of face recognition. In this correspondence, we have proposed a novel image representation approach, namely Riesz binary pattern (RBP), which is devised based on the image multi-scale analysis, multi-order Riesz transform, local and global binary encode scheme. Experimental results validate that our proposed RBP image representation method is superior to the state-of-the-art methods by taking into account the recognition rate.

Although the performance of RBP has already been excellent, some improvements are still possible. Indeed, the feature vector length and extraction time of RBP are obviously longer than that of LBP and most of other descriptors. It slows down the recognition speed, especially for very large databases. In our future work, we will consider to reduce dimensionality of the feature vector and apply parallel programming strategy to improve its performance and computational efficiency.

@&#REFERENCES@&#

