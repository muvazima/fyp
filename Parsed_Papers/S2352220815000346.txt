@&#MAIN-TITLE@&#Reversible session-based pi-calculus

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We incorporate reversibility into structured communication-based programming.


                        
                        
                           
                           We propose a reversible variant of session-based pi-calculus.


                        
                        
                           
                           We show causal consistency results for the reversible calculus.


                        
                        
                           
                           We extend the reversible session-based calculus with committable sessions.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Reversible computing

The pi-calculus

Session types

Session-based programming

@&#ABSTRACT@&#


               
               
                  In this work, we incorporate reversibility into structured communication-based programming, to allow parties of a session to automatically undo, in a rollback fashion, the effect of previously executed interactions. This permits to take different computation paths along the same session, as well as to revert the whole session and start a new one. Our aim is to define a theoretical basis for examining the interplay in concurrent systems between reversible computation and session-based interaction. We thus propose ReSπ a session-based variant of π-calculus using memory devices to keep track of the computation history of sessions in order to reverse it. We show how a session type discipline of π-calculus is extended to ReSπ, and illustrate its practical advantages for static verification of safe composition in communication-centric distributed software performing reversible computations. We also show how a fully reversible characterisation of the calculus extends to committable sessions, where computation can go forward and backward until the session is committed by means of a specific irreversible action.
               
            

@&#INTRODUCTION@&#

In the field of programming languages, reversible computing aims at providing a computational model that, besides the standard forward executions, also permits backward execution steps to undo the effect of previously performed forward computations. Despite being a subject of study for many years, reversible computing is recently experiencing a rise in popularity. This is mainly due to the fact that reversibility is a key ingredient in different application domains. In particular, for what specifically concerns our interest, many researchers have put forward exploiting this paradigm in the design of reliable concurrent systems. In fact, it permits us to understand existing patterns for programming reliable systems (e.g., compensations, checkpointing, transactions) and, possibly, to develop new ones.

A promising line of research on this topic advocates reversible variants of well-established process calculi, such as CCS [2] and π-calculus [3], as formalisms for studying reversibility mechanisms in concurrent systems. By pursing this line of research, in this work we incorporate reversibility into a variant of π-calculus equipped with session primitives supporting communication-based programming. A (binary) session consists in a series of reciprocal interactions between two parties, possibly with branching and recursion. Interactions on a session are performed via a dedicated private channel, which is generated when initiating the session. Session primitives come together with a session type discipline offering a simple checking framework to statically guarantee the correctness of communication patterns. This prevents programs from interacting according to incompatible patterns.

Practically, combining reversibility and sessions paves the way for the development of session-based communication-centric distributed software intrinsically capable of performing reversible computations. In this way, without further coding effort by the application programmer, the interaction among session parties is relaxed so that, e.g., the computation can automatically go back, thus allowing to take different paths when the current one is not satisfactory. As an application example, used in this paper for illustrating our approach, we consider a simple scenario involving a client and multiple providers offering the same service (e.g., on-demand video streaming). The client connects to a provider to request a given service (specifying, e.g., title of a movie, video quality, etc.). The provider replies with a quote determined according to the requested quality of service and to the servers status (current load, available bandwidth, etc.). Then, the client can either accept, negotiate or reject the quote; in the first two cases, the interaction between the two parties shall continue. If a problem occurs during the interaction between the client and the provider for finalising the service agreement, the computation can be automatically reverted. This allows the client to partially undo the current session, in order to take a different computation path along the same session, or even start a new session with (possibly) another provider.

The proposed reversible session-based calculus, called ReSπ (Reversible Session-based π-calculus), relies on memories to store information about interactions and their effects on the system, which otherwise would be lost during forward computations. This data is used to enable backward computations that revert the effects of the corresponding forward ones. Each memory is devoted to record data concerning a single event, which can correspond to the taking place of a communication action, a choice or a thread forking. Memories are connected with one other, in order to keep track of the computation history, by using unique thread identifiers as links. Like all other formalisms for reversible computing in concurrent settings, forward computations are undone in a causal-consistent fashion [4,5]. This means that backtracking does not have to necessarily follow the exact order of forward computations in reverse, because independent actions can be undone in a different order. Thus, an action can be undone only after all the actions causally depending on it have already been undone.

Concerning the session type discipline, ReSπ inherits the notion of types and the typing system from π-calculus. Thus, the related results are mainly based on the ones stated for π-calculus. Besides the possibility of taking advantage of the theory already defined for π-calculus, this also allows our investigation to focus on a standard session type setting, rather than on an ad-hoc one specifically introduced for our calculus.

The resulting formalism offers a theoretical basis for examining the interplay between reversible computations and session-based structured interactions. We notice that reversibility enables session parties not only to partially undo the interactions performed along the current session, but also to automatically undo the whole session and restart it, possibly involving different parties. The advantage of the reversible approach is that this behaviour is realised without explicitly implementing loops, but simply relying on the reversibility mechanism available in the language semantics. On the other hand, the session type discipline affects reversibility as it forces concurrent interactions to follow structured communication patterns. If we would consider only a single session, due to linearity, a causal-consistent form of reversibility would not be necessary, i.e. concurrent interactions along the same session are forbidden and, hence, the rollback would follow a single path. Instead, in the general case, concurrent interactions along different sessions may take place, thus introducing causal dependences. In this case, a session execution has to be reverted in a causal-consistent fashion. Notably, interesting issues concerning reversibility and session types are still open questions, especially for what concerns the validity in the reversible setting of standard properties (e.g., progress enforcement) and possibly new properties (e.g., reversibility of ongoing session history, safe closure of subordinate sessions).

It is worth noticing that the proposed calculus is fully reversible, i.e. backward computations are always enabled. Full reversibility provides theoretical foundations for studying reversibility in session-based π-calculus, but it is not suitable for a practical use on structured communication-based programming. In fact, reverting a completed session might not be desirable. Therefore, we also propose an extension of the calculus with an irreversible action for committing the completion of sessions. In this way, computation would go backward and forward, allowing the parties to try different interactions, until the session is successfully completed and, hence, irreversibly closed.


                     Summary of the rest of the paper. Section 2 reviews strictly related work. Section 3 recalls syntax and semantics definitions of the considered session-based variants of π-calculus. Section 4 introduces ReSπ, our reversible session-based calculus. Section 5 shows the results concerning the reversibility properties of ReSπ. Section 6 describes the associated typing discipline. Section 7 presents the extension of ReSπ with irreversible commit actions. Section 8 concludes the paper by touching upon directions for future work. Proofs of results are collected in Appendix A.

@&#RELATED WORK@&#

Our proposal combines the notion of (causal-consistent) reversibility with (typed) primitives supporting session-based interactions in concurrent systems. We review here some of the closely related works concerning either reversibility or session types.

Forms of reversible computation can be found in different formalisms in the literature. For example, backward reductions are considered in the λ-calculus to define equality on expressions [6]. Similar notions are used in the definitions of back and forth bisimulations [7] on Labelled Transition Systems, and of reversible steps in Petri nets [8]. More in practice, reversibility can be used for exploring different possibilities in a computation. For example, the Prolog language uses its backtracking capabilities to explore the state-space of a derivation to find a solution for a given goal. However, in our paper we mainly focus on the use of reversible computing as a suitable paradigm for designing and developing reliable concurrent systems, which came to prominence in recent years. Along this line of research, the works in the reversible computing field most closely related to ours are those concerning the definition of reversible process calculi. We briefly discuss the most relevant of them below, and refer the interested reader to [9] for a comprehensive survey and a larger perspective.

Reversible CCS (RCCS) [5] is the first proposal of reversible calculus, from which all subsequent works drew inspiration. The host calculus (i.e., the non-reversible calculus extended with capabilities for reversibility) is CCS without recursive definitions and relabelling. To each currently running thread is associated an individual memory stack keeping track of past actions, as well as forks and synchronisations. Information pushed on the memory stacks, upon doing a forward transition, can be then used for a rollback. The memories also serve as a naming scheme and yield unique identifiers for threads. When a process divides in two sub-threads, each sub-thread inherits the father memory together with a fork number (either 〈1〉 or 〈2〉) indicating which of the two sons the thread is. Then, in the case of a forward synchronisation, the synchronised threads exchange their names (i.e., memories) in order to allows the corresponding backward synchronisation to take place. A drawback of this approach for memorising fork actions is that the parallel operator does not satisfy usual structural congruence rules as commutativity, associativity and nil process as neutral element. It is proved that RCCS is causally consistent, i.e. the calculus allows backtrack along any causally equivalent past, where concurrent actions can be swapped and successive inverse actions can be cancelled. RCCS has been used for studying a general notion of transactions in [10].

CCS-R [11] is another reversible variant of CCS, which however mainly aims at formalising biological systems. Like the previous calculus, it relies on memory stacks for storing information needed for backtracking, which now also record events corresponding to the unfolding of process definitions. Instead, differently from RCCS, specific identifiers are used to label threads; in case of unfolding, sub-threads are labelled on-the-fly. Forking now does not exploit fork numbers, but it requires the memory stack of a given thread be empty before enabling the execution of its sons; this forces the sub-threads to share the memory that their father had before the forking. As in RCCS, in case of synchronisation, the communicating threads exchange their identifiers. The transition system of CCS-R is proved to be reversible and it is demonstrated that CCS-R is sound and complete w.r.t. CCS.

CCS with communication Keys (CCSK) [12] is a reversible process calculus obtained by applying a general procedure to produce reversible calculi. A relevant aspect of this approach is that it does not rely on memories for supporting backtracking. The idea is to maintain the structure of processes fixed throughout computations, thus avoiding to consume guards and alternative choices, which is the source of irreversibility. Past behaviour and discarded alternatives are then recorded in the syntax of terms. This is realised by transforming the dynamic rules of the SOS semantics into static-like rules. In this way, backward rules are obtained simply as symmetric versions of the forward ones. To ensure that synchronisations are properly reverted, two communicating threads have to agree on a communication key, which will uniquely identify that communication. In this way, the synchronising actions are locked together and can only be undone together. As usual, results showing that the method yields well-behaved transition relations are provided. The proposed converting procedure can be applied to other calculi without name passing, such as ACP [13] or CSP [14], but it is not suitable for calculi with name binders, as π-calculus, which we are interested in this work.


                     ρπ 
                     [15] is a reversible variant of the higher-order π-calculus [16]. It borrows from RCCS the use of memories for keeping track of past actions. However, in ρπ memories are not stacks syntactically associated to threads, but they simply are terms, each one dedicated to a single communication, in parallel with processes. The connection between memories and threads is kept by resorting to identifiers in a way similar to CCSK. Fork handling relies on specific structured tags connecting the identifier of the father thread with the identifiers of its sub-threads. Besides proving that ρπ is causally consistent, it is also shown that it can be faithfully encoded into higher-order π-calculus. Notably, differently from the approaches mentioned before, the semantics of ρπ is given in a reduction style. A variant of this calculus, called 
                        roll
                     -π 
                     [17], has been defined to control backward computations by means of a rollback primitive. The approaches proposed in [15,17] have been applied in [18] for reversing a variant of Klaim [19].

Another reversible variant of π-calculus is Rπ 
                     [20]. Differently from ρπ, Rπ considers a standard π-calculus (without choice and replication) as host calculus, and its semantics is defined in terms of a labelled transition relation. This latter point requires to introduce some technicalities to properly deal with scope extrusion. Similarly to RCCS, this calculus relies on memory stacks, now recording events (i.e., consumed prefixes and related substitutions) and forking (by means of the fork symbol 
                        〈
                        ↑
                        〉
                     ). Results about the notion of causality induced by the semantics of the calculus are provided.

Reversible structures [21] is a simple computational calculus, based on DSD [22], for modelling chemical systems. Since such systems are naturally reversible but have no backtracking memory, differently from most of the above proposals, reversible structures does not exploit memories. Instead, reversible structures maintain the structure of terms and use a special symbol 
                        
                           
                              
                                 i
                              
                           
                           
                              ˆ
                           
                        
                      to indicate the next operations (one forward and one backward) that a term can perform. Terms of the calculus are parallel compositions of signals and gates (i.e., terms that accept input signals and emit output signals), which interact according to a CCS-style model. When a forward synchronisation takes place, the executed gate input is labelled by the identifier of the consumed signal, and the pointer symbol inside the gate is moved forward. The backwards computation is realised by executing these operations in a reverse way, thus releasing the output signal. As usual, the interplay between causal dependency and reversible structures is studied, with the novelty that in this setting signal identifiers are not necessary unique.

In our work we mainly take inspiration from the ρπ approach. Indeed, all other approaches based on CCS and DSD cannot be directly applied to a calculus with name-passing. Moreover, the ρπ approach is preferable to the Rπ one because the former proposes a reduction semantics, which we are interested in, while the latter proposes a labelled semantics, which would complicate our theoretical framework (in order to properly deal with scope extension of names). Specifically, we use unique (non-structured) tags for identifying threads and memories for recording taking place of actions, choices and forking. Each memory is devoted to storing the information needed to revert a single event, and memories are connected each other, in order to keep track of computation history, by using tags as links.

For what concerns the related works on session-based calculi, it is worth noticing that we consider a setting as standard and simple as possible, which is the one with synchronous binary sessions. In particular, our host calculus is the well-established variant of π-calculus introduced in [23], whose notation has been revised according to [24]. We leave for future investigation the application of our approach to formalisms relying on the other forms of sessions introduced in the literature, among which we would like to mention asynchronous binary sessions [25], multiparty asynchronous sessions [26], multiparty synchronous sessions [27], sessions with higher-order communication [24], sessions specifically devised for service-oriented computing [28–30].

Finally, the paper with the aim closest to ours is [31], where a formalism combining the notions of reversibility and session is proposed. This calculus is simpler than ReSπ, because it is an extension of the formalism of session behaviours 
                     [32] without delegation (i.e., it is a sub-language of CCS) with a checkpoint-based backtracking mechanism. In fact, neither message nor channel passing are considered in the host calculus. Concerning reversibility, only the behaviour prefixed by the lastly traversed checkpoint is recorded by a given party, that is each behaviour is simply paired with a one-size memory. Moreover, causal-consistency is not considered, because in this formalism parties just reduce in sequential way. Also committable sessions are not taken into account. On the other hand, this formalism enabled the study of an extension of the compliance notion to the reversible setting.

In this section we present the syntax and semantics definitions of the host language considered for our reversible calculus. This is a variant of π-calculus enriched with primitives for managing structured binary sessions.

We use the following base sets: shared channels, used to initiate sessions; session channels, consisting on pairs of endpoints used by the two parties to exchange values within an established session; variables, used to store values; labels, used to select and offer branching choices; and process variables, used for recursion. The corresponding notation and terminology are as follows:
                           
                              
                           
                        
                        
                           
                              
                                 
                                    
                                       
                                          Values:
                                          
                                          v
                                          ,
                                          
                                             
                                                v
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          …
                                          
                                             {
                                             
                                                
                                                   
                                                      Booleans:
                                                      
                                                      
                                                         true
                                                      
                                                      ,
                                                      
                                                         false
                                                      
                                                   
                                                
                                                
                                                   
                                                      Integers:
                                                      
                                                      0
                                                      ,
                                                      1
                                                      ,
                                                      …
                                                   
                                                
                                                
                                                   
                                                      Shared channels:
                                                      
                                                      a
                                                      ,
                                                      b
                                                      ,
                                                      …
                                                   
                                                
                                                
                                                   
                                                      Session endpoints:
                                                      
                                                      s
                                                      ,
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ¯
                                                         
                                                      
                                                      ,
                                                      …
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                         Notably, each session channel s has two (dual) endpoints, denoted by s and 
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                        , each one assigned to one session party to exchange values with the other. We define duality to be idempotent, i.e. 
                           
                              
                                 
                                    
                                       s
                                    
                                    
                                       ¯
                                    
                                 
                              
                              
                                 ¯
                              
                           
                           =
                           s
                        . The use of two separated endpoints is similar to that of polarities in [33,23]. Notation 
                           
                              
                                 ⋅
                              
                              
                                 ˜
                              
                           
                         stands for tuples, e.g. 
                           
                              
                                 c
                              
                              
                                 ˜
                              
                           
                         means 
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 c
                              
                              
                                 n
                              
                           
                        .


                        Processes, ranged over by P, Q, …, and expressions, ranged over by e, 
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                        , … are given by the grammar in Fig. 1
                        . We use 
                           op
                           (
                           ⋅
                           ,
                           …
                           ,
                           ⋅
                           )
                         to denote a generic expression operator; we assume that expressions are equipped with standard operators on boolean and integer values (e.g., ∧, +, …).

The initiation of a session is triggered by the synchronisation on a shared channel a of two processes of the form 
                           
                              
                                 a
                              
                              
                                 ¯
                              
                           
                           (
                           x
                           )
                           .
                           P
                         and 
                           a
                           (
                           y
                           )
                           .
                           Q
                        . This causes the generation of a fresh session channel s, whose endpoints replace variables x and y, by means of a substitution application, in order to be used by P and Q, respectively, for later communications. Primitives 
                           k
                           !
                           〈
                           e
                           〉
                           .
                           P
                         and 
                           
                              
                                 k
                              
                              
                                 ′
                              
                           
                           ?
                           (
                           x
                           )
                           .
                           Q
                         denote output and input via session endpoints identified by k and 
                           
                              
                                 k
                              
                              
                                 ′
                              
                           
                        , respectively. These communication primitives realise the standard synchronous message passing, where messages result from the evaluation of expressions. Notably, an exchanged value can be an endpoint that is being used in a session (this channel-passing modality is called delegation), thus allowing complex nested structured communications. Constructs 
                           k
                           ◃
                           l
                           .
                           P
                         and 
                           
                              
                                 k
                              
                              
                                 ′
                              
                           
                           ▹
                           {
                           
                              
                                 l
                              
                              
                                 1
                              
                           
                           
                           :
                           
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 l
                              
                              
                                 n
                              
                           
                           
                           :
                           
                           
                              
                                 P
                              
                              
                                 n
                              
                           
                           }
                         denote label selection and label branching (where 
                           
                              
                                 l
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 l
                              
                              
                                 n
                              
                           
                         are assumed to be pairwise distinct) via endpoints identified by k and 
                           
                              
                                 k
                              
                              
                                 ′
                              
                           
                        , respectively. They mime method invocation in object-based programming.

The above interaction primitives are then combined by standard process calculi constructs: conditional choice, parallel composition, restriction, recursion and the empty process (denoting inaction). It is worth noticing that restriction can have both shared and session channels as argument: 
                           (
                           ν
                           a
                           )
                           P
                         states that a is a private shared channel of P; similarly, 
                           (
                           ν
                           s
                           )
                           P
                         states that the two endpoints of the session channel, namely s and 
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                        , are invisible from processes different from P (see the seventh law in Fig. 2
                        ), i.e. no external process can perform a session action on either of these endpoints (this ensures non-interference within a session). As a matter of notation, we will write 
                           (
                           ν
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 c
                              
                              
                                 n
                              
                           
                           )
                           P
                         in place of 
                           (
                           ν
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           )
                           …
                           (
                           ν
                           
                              
                                 c
                              
                              
                                 n
                              
                           
                           )
                           P
                        .

We adopt the following conventions about the operators precedence: prefixing, restriction, and recursion bind more tightly than parallel composition.

Bindings are defined as follows: 
                           
                              
                                 u
                              
                              
                                 ¯
                              
                           
                           (
                           x
                           )
                           .
                           P
                        , 
                           u
                           (
                           x
                           )
                           .
                           P
                         and 
                           k
                           ?
                           (
                           x
                           )
                           .
                           P
                         bind variable x in P; 
                           (
                           ν
                           a
                           )
                           
                           P
                         binds shared channel a in P; 
                           (
                           ν
                           s
                           )
                           
                           P
                         binds session channel s in P; finally, 
                           μ
                           X
                           .
                           P
                         binds process variable X in P. The derived notions of bound and free names, alpha-equivalence 
                           
                              
                                 ≡
                              
                              
                                 α
                              
                           
                        , and substitution are standard. For P a process, 
                           
                              fv
                           
                           (
                           P
                           )
                         denotes the set of free variables, 
                           
                              fc
                           
                           (
                           P
                           )
                         denotes the set of free shared channels, and 
                           
                              fse
                           
                           (
                           P
                           )
                         the set of free session endpoints. For the sake of simplicity, we assume that free and bound variables are always chosen to be different, and that bound variables are pairwise distinct; the same applies to names. Of course, these conditions are not restrictive and can always be fulfilled by possibly using alpha-conversion.

The operational semantics is given in terms of a structural congruence and of a reduction relation. Notably, the semantics is only defined for closed terms, i.e. terms without free variables. Indeed, we consider the binding of a variable as its declaration (and initialisation), therefore free occurrences of variables at the outset in a term must be prevented since they are similar to uses of variables before their declaration in programs (which are considered as programming errors).

The structural congruence, written ≡, is defined as the smallest congruence relation on processes that includes the equational laws shown in Fig. 2. These are the standard laws of π-calculus. Reading the laws in Fig. 2 by row from left to right, and from top to bottom row, the first three are the monoid laws for | (i.e., it is associative and commutative, and has 0 as identity element). The second four laws deal with restriction and enable garbage-collection of channels, scope extension and scope swap, respectively. The eighth law permits a recursion to be unfolded (notation 
                           P
                           [
                           Q
                           /
                           X
                           ]
                         denotes replacement of free occurrences of X in P by process Q). The last law equates alpha-equivalent processes, i.e. processes only differing in the identity of bound variables/channels.

To define the reduction relation, we use an auxiliary function 
                           ⋅
                           ↓
                           
                         for evaluating closed expressions: 
                           e
                           ↓
                           v
                         says that expression e evaluates to value v (where 
                           v
                           ↓
                           v
                        , and 
                           x
                           ↓
                           
                         is undefined).

The reduction relation, written →, is the smallest relation on closed processes generated by the rules in Fig. 3
                        . We comment on salient points. A new session is established when two parallel processes synchronise via a shared channel a; this results in the generation of a fresh (private) session channel whose endpoints are assigned to the two session parties (rule [Con]). During a session, the two parties can exchange values (for data- and channel-passing, rule [Com]) and labels (for branching selection, rule [Lab]). The other rules are standard and state that: conditional choice evolves according to the evaluation of the expression argument (rules [If1] and [If2]); if a part of a larger process evolves, the whole process evolves accordingly (rules [Par] and [Res]); and structural congruent processes have the same reductions (rule [Str]).

The scenario involving a client and multiple providers introduced in Section 1 can be rendered in π-calculus as follows (for the sake of simplicity, here we consider just two providers):
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       
                                          client
                                       
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       1
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       2
                                    
                                 
                              
                           
                         where the client process 
                           
                              
                                 P
                              
                              
                                 
                                    client
                                 
                              
                           
                         is defined as
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   a
                                                
                                                
                                                   
                                                      login
                                                   
                                                
                                             
                                             ‾
                                          
                                          (
                                          x
                                          )
                                          .
                                          
                                          x
                                          !
                                          〈
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          〉
                                          .
                                          
                                          x
                                          ?
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          .
                                       
                                    
                                    
                                       
                                          
                                          
                                             if
                                          
                                          
                                          
                                             accept
                                          
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          
                                          
                                             then
                                          
                                          
                                          x
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                             else
                                          
                                          
                                          (
                                          
                                             if
                                          
                                          
                                          
                                             negotiate
                                          
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          
                                          
                                             then
                                          
                                          
                                          x
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                neg
                                             
                                          
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                neg
                                             
                                          
                                          
                                          
                                             else
                                          
                                          
                                          x
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                rej
                                             
                                          
                                          .
                                          
                                          0
                                          )
                                       
                                    
                                 
                              
                           
                         while a provider process 
                           
                              
                                 P
                              
                              
                                 
                                    provider
                                 
                                 
                                 i
                              
                           
                         is as follows
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                a
                                             
                                             
                                                
                                                   login
                                                
                                             
                                          
                                          (
                                          y
                                          )
                                          .
                                          
                                          y
                                          ?
                                          (
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          )
                                          .
                                          
                                          y
                                          !
                                          〈
                                          
                                             
                                                
                                                   quote
                                                
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          )
                                          〉
                                          .
                                          
                                          y
                                          ▹
                                          {
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          ,
                                          
                                          
                                             
                                                l
                                             
                                             
                                                neg
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                neg
                                             
                                          
                                          
                                          ,
                                          
                                          
                                             
                                                l
                                             
                                             
                                                rej
                                             
                                          
                                          
                                          :
                                          
                                          0
                                          }
                                       
                                    
                                 
                              
                           
                        
                     

We show below a possible evolution of the system, where the client contacts 
                           
                              provider
                           
                           1
                         and accepts the proposed quote:
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                          
                                          
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                          
                                          
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          →
                                       
                                    
                                    
                                       
                                          (
                                          ν
                                          s
                                          )
                                          (
                                          
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          !
                                          〈
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          〉
                                          .
                                          
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          ?
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          .
                                          
                                          
                                             if
                                          
                                          
                                          
                                             accept
                                          
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          
                                          
                                             then
                                          
                                          
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          
                                             else
                                          
                                          
                                          (
                                          …
                                          )
                                       
                                    
                                    
                                       
                                          
                                          |
                                          
                                          s
                                          ?
                                          (
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          )
                                          .
                                          
                                          s
                                          !
                                          〈
                                          
                                             
                                                
                                                   quote
                                                
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          )
                                          〉
                                          .
                                          
                                          s
                                          ▹
                                          {
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          
                                          ,
                                          
                                          
                                             
                                                l
                                             
                                             
                                                neg
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                neg
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          
                                          ,
                                          
                                          
                                             
                                                l
                                             
                                             
                                                rej
                                             
                                          
                                          
                                          :
                                          
                                          0
                                          }
                                          
                                          )
                                       
                                    
                                    
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          →
                                       
                                    
                                    
                                       
                                          (
                                          ν
                                          s
                                          )
                                          (
                                          
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          ?
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          .
                                          
                                          
                                             if
                                          
                                          
                                          
                                             accept
                                          
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          
                                          
                                             then
                                          
                                          
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          
                                             else
                                          
                                          
                                          (
                                          …
                                          )
                                       
                                    
                                    
                                       
                                          
                                          |
                                          
                                          s
                                          !
                                          〈
                                          
                                             
                                                
                                                   quote
                                                
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          )
                                          〉
                                          .
                                          
                                          s
                                          ▹
                                          {
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          [
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          /
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          ]
                                          
                                          ,
                                          
                                          …
                                          }
                                          
                                          )
                                       
                                    
                                    
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          →
                                       
                                    
                                    
                                       
                                          (
                                          ν
                                          s
                                          )
                                          (
                                          
                                          
                                             if
                                          
                                          
                                          
                                             accept
                                          
                                          (
                                          
                                             quote
                                          
                                          )
                                          
                                          
                                             then
                                          
                                          
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          [
                                          
                                             quote
                                          
                                          /
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          ]
                                          
                                             else
                                          
                                          
                                          (
                                          …
                                          )
                                       
                                    
                                    
                                       
                                          
                                          |
                                          
                                          s
                                          ▹
                                          {
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          [
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          /
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          ]
                                          
                                          ,
                                          
                                          …
                                          }
                                          
                                          )
                                       
                                    
                                    
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          →
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          ν
                                          s
                                          )
                                          (
                                          
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          [
                                          
                                             quote
                                          
                                          /
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          ]
                                          
                                          |
                                          
                                          s
                                          ▹
                                          {
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          [
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          /
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          ]
                                          
                                          ,
                                          
                                          …
                                          }
                                          
                                          )
                                       
                                    
                                    
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          →
                                       
                                    
                                    
                                       
                                          (
                                          ν
                                          s
                                          )
                                          (
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          [
                                          
                                             quote
                                          
                                          /
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          ]
                                          
                                          |
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          [
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          /
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          ]
                                          
                                          )
                                       
                                    
                                    
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In this section, we introduce ReSπ, a reversible extension of the calculus described in Section 3.

A reversible calculus is typically obtained from the corresponding host calculus by adding memory devices (see Section 2). They aim at storing information about interactions and their effects on the system, which otherwise would be lost during forward computations, as e.g. the discarded branch in a conditional choice. In doing this, we follow the approach of [15], which in its turn is inspired by [5] (for the use of memories) and by [12] (for the use of thread identifiers). Of course, since here we consider as host calculus a session-based variant of standard π-calculus, rather than an asynchronous higher-order variant, the technical development is different.

Roughly, our approach to keep track of computation history is as follows: we tag processes with unique identifiers and use memories to store the information needed to reverse each single forward reduction. Thus, the history of a reduction sequence is stored in a number of small memories connected each other by using tags as links. In this way, ReSπ terms can perform, besides forward reductions (denoted by ↠), also backward reductions (denoted by ⇝) that undo the effect of the former ones. As in the reversible calculi discussed in Section 2, forward computations are reverted in a causal-consistent fashion. That is, independent (more precisely, concurrent) actions can be undone in an order possibly different from the exact order of forward reductions in reverse. Specifically, an action can be undone only after all the actions causally depending on it have already been undone. We will come back on causal-consistency in Section 5.

Before introducing the technicalities of ReSπ, we informally provide a basic intuition about its main features. Let us come back to the scenario introduced in Section 1 and specified in π-calculus in Section 3.3. We can obtain a ReSπ specification of the scenario by simply annotating the π-calculus term with the (unique) tags 
                        
                           
                              t
                           
                           
                              1
                           
                        
                     , 
                        
                           
                              t
                           
                           
                              2
                           
                        
                      and 
                        
                           
                              t
                           
                           
                              3
                           
                        
                      as follows:
                        
                           
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              :
                              
                                 
                                    P
                                 
                                 
                                    
                                       client
                                    
                                 
                              
                              
                              |
                              
                              
                                 
                                    t
                                 
                                 
                                    2
                                 
                              
                              :
                              
                                 
                                    P
                                 
                                 
                                    
                                       provider
                                    
                                    1
                                 
                              
                              
                              |
                              
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              :
                              
                                 
                                    P
                                 
                                 
                                    
                                       provider
                                    
                                    2
                                 
                              
                           
                        
                      Now, the computation described in Section 3.3 corresponds to a sequence of five forward reductions leading to the ReSπ process M having the following form:
                        
                           
                              
                                 
                                    
                                       (
                                       ν
                                       s
                                       ,
                                       
                                          
                                             t
                                          
                                          
                                             ˜
                                          
                                       
                                       )
                                    
                                    
                                       (
                                       
                                       
                                          
                                             t
                                          
                                          
                                             1
                                          
                                          
                                             ′
                                          
                                       
                                       :
                                       
                                          
                                             P
                                          
                                          
                                             acc
                                          
                                       
                                       [
                                       
                                          
                                             s
                                          
                                          
                                             ¯
                                          
                                       
                                       /
                                       x
                                       ]
                                       [
                                       
                                          quote
                                       
                                       /
                                       
                                          
                                             y
                                          
                                          
                                             
                                                quote
                                             
                                          
                                       
                                       ]
                                       
                                       |
                                       
                                       
                                          
                                             t
                                          
                                          
                                             2
                                          
                                          
                                             ′
                                          
                                       
                                       :
                                       
                                          
                                             Q
                                          
                                          
                                             acc
                                          
                                       
                                       [
                                       s
                                       /
                                       y
                                       ]
                                       [
                                       
                                          s
                                          r
                                          v
                                          _
                                          r
                                          e
                                          q
                                       
                                       /
                                       
                                          
                                             z
                                          
                                          
                                             req
                                          
                                       
                                       ]
                                    
                                 
                                 
                                    
                                    
                                       
                                       
                                       |
                                       
                                       〈
                                       
                                          
                                             t
                                          
                                          
                                             1
                                          
                                       
                                       −
                                       
                                          
                                             a
                                          
                                          
                                             
                                                login
                                             
                                          
                                       
                                       (
                                       x
                                       )
                                       (
                                       y
                                       )
                                       (
                                       ν
                                       s
                                       )
                                       
                                          
                                             P
                                          
                                          
                                             
                                                client
                                             
                                          
                                          
                                             ′
                                          
                                       
                                       
                                          
                                             P
                                          
                                          
                                             
                                                provider
                                             
                                             1
                                          
                                          
                                             ′
                                          
                                       
                                       →
                                       
                                          
                                             t
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          
                                             t
                                          
                                          
                                             1
                                          
                                          
                                             ″
                                          
                                       
                                       ,
                                       
                                          
                                             t
                                          
                                          
                                             2
                                          
                                          
                                             ″
                                          
                                       
                                       〉
                                    
                                 
                                 
                                    
                                    
                                       
                                       
                                       |
                                       
                                       〈
                                       …
                                       〉
                                       
                                       |
                                       
                                       〈
                                       …
                                       〉
                                       
                                       |
                                       
                                       〈
                                       …
                                       〉
                                       
                                       |
                                       
                                       〈
                                       …
                                       〉
                                       
                                       )
                                    
                                 
                                 
                                    
                                       |
                                       
                                       
                                          
                                             P
                                          
                                          
                                             
                                                provider
                                             
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                      The forward computation has created a tuple 
                        
                           
                              t
                           
                           
                              ˜
                           
                        
                      of fresh tags, which includes the tags 
                        
                           
                              t
                           
                           
                              1
                           
                           
                              ′
                           
                        
                      and 
                        
                           
                              t
                           
                           
                              2
                           
                           
                              ′
                           
                        
                      attached to the resulting processes of client and 
                        
                           provider
                        
                        1
                     , respectively. Moreover, each reduction has created a memory 
                        〈
                        …
                        〉
                     , which is spawn in parallel with the two processes of the involved parties and devoted to store the information for reverting the corresponding forward reduction. Here, for the sake of presentation, we have omitted the content of such memories, except for the one generated by the first reduction: it records that the process tagged by 
                        
                           
                              t
                           
                           
                              1
                           
                        
                      (i.e., the client) initiates a session s along channel 
                        
                           
                              a
                           
                           
                              
                                 login
                              
                           
                        
                      with the process tagged by 
                        
                           
                              t
                           
                           
                              2
                           
                        
                      (i.e., the first provider); it also records the variables replaced by the session endpoints and the continuation processes together with their tags. Notably, process M cannot immediately use this memory to revert the interaction corresponding to the session initiation. Indeed, a memory can trigger a backward reduction only if two processes properly tagged with the continuation tags are available, which is not the case of the first memory in the process M. Therefore, as expected, all the other forward reductions must be previously reverted in order to revert the session initiation one.

The syntax of ReSπ is given in Fig. 4
                        . In addition to the base sets used for π-calculus processes in Section 3, here we use tags, ranged over by t, 
                           
                              
                                 t
                              
                              
                                 ′
                              
                           
                        , …, to uniquely identify threads. Letters h, 
                           
                              
                                 h
                              
                              
                                 ′
                              
                           
                        , … denote names, i.e. (shared and session) channels and tags together. Uniqueness of tags is ensured by using the restriction operator and by only considering reachable processes (see Definition 3).


                        ReSπ processes are built upon standard (session-based) π-calculus processes by labelling them with tags. Thus, the syntax of π-calculus processes P, as well as of expressions e, is the same of that shown in Fig. 1 and, hence, it is omitted here. It is worth noticing that only ReSπ processes can execute (i.e., π-calculus ones cannot).


                        ReSπ also extends π-calculus with memory processes m. In particular, there are three kind of memories:
                           
                              •
                              
                                 Action memory 
                                 
                                    〈
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                    
                                    −
                                    A
                                    →
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                       
                                          ′
                                       
                                    
                                    〉
                                 , storing an action event A together with the tag 
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                    
                                  of the active party of the action, the tag 
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                    
                                  of the corresponding passive party, and the tags 
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                  and 
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                       
                                          ′
                                       
                                    
                                  of the two new threads activated by the corresponding reduction. An action event A, as we shall clarify later, records all information necessary to revert the corresponding interaction, which can be either a session initiation 
                                    a
                                    (
                                    x
                                    )
                                    (
                                    y
                                    )
                                    (
                                    ν
                                    s
                                    )
                                    P
                                    Q
                                 , a communication along an established session 
                                    k
                                    〈
                                    e
                                    〉
                                    (
                                    x
                                    )
                                    P
                                    Q
                                 , or a branch selection 
                                    k
                                    ◃
                                    
                                       
                                          l
                                       
                                       
                                          i
                                       
                                    
                                    
                                    P
                                    {
                                    
                                       
                                          l
                                       
                                       
                                          1
                                       
                                    
                                    
                                    :
                                    
                                    
                                       
                                          P
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          l
                                       
                                       
                                          n
                                       
                                    
                                    
                                    :
                                    
                                    
                                       
                                          P
                                       
                                       
                                          n
                                       
                                    
                                    }
                                 . Notably, in the latter two events, k can only be either s or 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                  (i.e., it cannot be a variable).


                                 Choice memory 
                                 
                                    〈
                                    t
                                    ,
                                    e
                                    ?
                                    
                                    P
                                    :
                                    Q
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          ′
                                       
                                    
                                    〉
                                 , storing a choice event 
                                    e
                                    ?
                                    
                                    P
                                    :
                                    Q
                                  together with the tag t of the conditional choice and the tag 
                                    
                                       
                                          t
                                       
                                       
                                          ′
                                       
                                    
                                  of the new activated thread. The choice event 
                                    e
                                    ?
                                    
                                    P
                                    :
                                    Q
                                  records the evaluated expression e, and the processes P and Q of the then-branch and else-branch, respectively.


                                 Fork memory 
                                 
                                    〈
                                    t
                                    ⇉
                                    (
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    〉
                                 , storing the tag t of a splitting thread, i.e. a thread of the form 
                                    t
                                    :
                                    (
                                    P
                                    |
                                    Q
                                    )
                                 , together with the tags 
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                    
                                  of the two new activated threads, i.e. 
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                    
                                    :
                                    P
                                  and 
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                    
                                    :
                                    Q
                                 . The use of fork memories is analogous to that of connectors in [18].

Threads and memories are composed by parallel composition and restriction operators. The latter, as well as the notion of bound and free identifiers, extend to names. In particular, for M a ReSπ process, 
                           
                              ft
                           
                           (
                           M
                           )
                         denotes the set of free tags; 
                           
                              fv
                           
                           (
                           ⋅
                           )
                        , 
                           
                              fc
                           
                           (
                           ⋅
                           )
                         and 
                           
                              fse
                           
                           (
                           ⋅
                           )
                         extend naturally to ReSπ processes. Of course, we still rely on the same assumptions on free and bound variables/channels mentioned in Section 3.1.

Not all processes allowed by the syntax in Fig. 4 are semantically meaningful. Indeed, in a general term of the calculus, the history stored in the memories may not be consistent, due to the use of non-unique tags or broken connections between continuation tags within memories and corresponding threads. For example, given the choice memory 
                           〈
                           t
                           ,
                           e
                           ?
                           
                           P
                           :
                           Q
                           ,
                           
                              
                                 t
                              
                              
                                 ′
                              
                           
                           〉
                        , we have a broken connection when no thread tagged by 
                           
                              
                                 t
                              
                              
                                 ′
                              
                           
                         exists in the ReSπ process and no memory of the form 
                           〈
                           
                              
                                 t
                              
                              
                                 ′
                              
                           
                           −
                           A
                           →
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                           〉
                        , 
                           〈
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           −
                           A
                           →
                           
                              
                                 t
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                           〉
                        , 
                           〈
                           
                              
                                 t
                              
                              
                                 ′
                              
                           
                           ,
                           e
                           ?
                           
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                           :
                           
                              
                                 P
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           〉
                        , and 
                           〈
                           
                              
                                 t
                              
                              
                                 ′
                              
                           
                           ⇉
                           (
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           )
                           〉
                         exist.

The class of meaningful ReSπ processes we are interested in consists of programs and runtime processes. The former are the terms that can be written by programmers, i.e. they are ReSπ processes with no memory. In fact, memories are not expected to occur in the source code written by programmers. We assume that the threads within a program have unique tags. The latter terms of the class are the ReSπ processes that can be obtained by means of forward reductions from programs; in this way, history consistency is ensured. Using the terminology from [20], the processes of the considered class are called reachable. We formalise their definition below.


                        
                           Definition 1
                           Programs


                           The set of ReSπ programs is the set of terms generated by the following grammar
                                 
                                    
                                       M
                                       
                                       :
                                       :
                                       =
                                       
                                       t
                                       :
                                       P
                                       
                                       
                                       |
                                       
                                       
                                       (
                                       ν
                                       c
                                       )
                                       
                                       M
                                       
                                       
                                       |
                                       
                                       
                                       M
                                       |
                                       N
                                       
                                       
                                       |
                                       
                                       
                                       
                                          nil
                                       
                                    
                                 
                               and whose threads have distinct tags, where P is a π-calculus process as in Fig. 1.


                        
                           Definition 2
                           Runtime processes


                           The set of ReSπ runtime processes is the set of terms obtained by the transitive closure under ↠ (see Section 4.2) of the set of ReSπ programs.


                        
                           Definition 3
                           Reachable processes


                           The set of ReSπ reachable processes is the union of the sets of programs and runtime processes.

Notice that in Definition 1 the restriction operator is defined on channels c rather than on names h. This because there is no need to restrict tags in a program. In fact, it is sufficient to use distinct tags, as required by the definition. In practice, the programmer would have to write just a π-calculus term that can be then automatically annotated with unique tags to obtain a ReSπ program. At runtime, as shown in the next subsection, it is the operational semantics in charge of generating fresh tags for the new threads by means of the restriction operator.

The operational semantics of ReSπ is given in terms of a structural congruence and of a reduction relation.

The structural congruence ≡ extends that of π-calculus (Fig. 2) with the additional laws in Fig. 5
                        . Most of the new laws simply deal with the parallel and restriction operators on ReSπ processes. Thus, we only focus on relevant laws (below, the laws are read by row from left to right, and from top to bottom row). The eighth law permits a restriction on a π-calculus process to be moved to the level of ReSπ processes. The ninth law lifts the congruence at π-calculus process level to the threads level. The last law is crucial for fork handling: it is used to split a single thread composed of two parallel processes into two threads with fresh tags; the tag of the original thread and the new tags are properly recorded in a fork memory.

The reduction relation of ReSπ, written ↣, is given as the union of the forward and backward reduction relations defined by the rules in Fig. 6
                        : 
                           ↣
                           
                           =
                           
                           ↠
                           ∪
                           ⇝
                        . Relations ↠ and ⇝ are the smallest relations on closed ReSπ reachable processes generated by the corresponding rules in the figure.

We comment on salient points. When two parallel threads synchronise to establish a new session (rule [fwCon]), two fresh tags are created to uniquely identify the two continuations of the synchronising threads. Moreover, all relevant information is stored in the action memory 
                           〈
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           −
                           
                           a
                           (
                           x
                           )
                           (
                           y
                           )
                           (
                           ν
                           s
                           )
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                           
                              
                                 P
                              
                              
                                 2
                              
                           
                           →
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                           〉
                        : the tag 
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                         of the initiator (i.e., the thread executing a prefix of the form 
                           
                              
                                 a
                              
                              
                                 ¯
                              
                           
                           (
                           ⋅
                           )
                        ), the tag 
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                         of the thread executing the dual action, the tags 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                         of their continuations, the shared channel a used for the synchronisation, the replaced variables x and y, the generated session channel s, and the processes 
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 P
                              
                              
                                 2
                              
                           
                         to which substitutions are applied. All such information is exploited to revert this reduction (rule [bwCon]). In particular, the corresponding backward reduction is triggered by the coexistence of the memory described above with two threads tagged 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                        , all of them within the scope of the session channel s and tags 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                         generated by the forward reduction (which, in fact, are removed by the backward one). Notice that, when considering reachable processes, due to tag uniqueness, the two processes P and Q must coincide with 
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                           [
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           /
                           x
                           ]
                         and 
                           
                              
                                 P
                              
                              
                                 2
                              
                           
                           [
                           s
                           /
                           y
                           ]
                        ; indeed, as registered in the memory, these latter processes have been tagged with 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                         by the forward reduction. The fact that two threads tagged with 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                         are available in parallel to the memory ensures that all actions possibly executed by the two continuations activated by the forward computation have been undone and, hence, we can safely proceed to undone the forward computation itself.

Rules [fwCom], [bwCom], [fwLab], [bwLab], [fwIf1], [fwIf2] and [bwIf] are similar. Notably, in the first two rules mentioned above, besides tags and continuation processes, the action memory stores the session endpoint k of the receiving party (the other endpoint 
                           
                              
                                 k
                              
                              
                                 ¯
                              
                           
                         is obtained by duality), the expression e generating the sent value, and the replaced variable x. It is also worth noticing that, since all information about a choice event is stored in the corresponding memory, we need just one backward rule ([bwIf]) to revert the effect of the forward rules [fwIf1] and [fwIf2]. The meaning of the remaining rules, dealing with parallel composition, restriction and structural congruent terms, is straightforward.

Let us consider again the multiple providers scenario. We have shown at the beginning of this section that a ReSπ specification can be obtained by simply annotating the π-calculus term with unique tags as follows:
                           
                              
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          client
                                       
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       1
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       2
                                    
                                 
                              
                           
                        
                     

Now, the computation described in Section 3.3 corresponds to the following sequence of forward reductions:
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          :
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                          
                                          
                                          |
                                          
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          :
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                          
                                          
                                          |
                                          
                                          
                                             
                                                t
                                             
                                             
                                                3
                                             
                                          
                                          :
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          ↠
                                          
                                          ↠
                                          
                                          ↠
                                          
                                          ↠
                                          
                                          ↠
                                       
                                    
                                    
                                       
                                          M
                                          
                                          =
                                       
                                       
                                          (
                                          ν
                                          s
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                4
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                5
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                4
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                       
                                          (
                                          
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                5
                                             
                                          
                                          :
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          [
                                          
                                             quote
                                          
                                          /
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          ]
                                          
                                          |
                                          
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                4
                                             
                                          
                                          :
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          [
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          /
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          
                                             
                                                a
                                             
                                             
                                                
                                                   login
                                                
                                             
                                          
                                          (
                                          x
                                          )
                                          (
                                          y
                                          )
                                          (
                                          ν
                                          s
                                          )
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                             
                                                ′
                                             
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                             
                                                ′
                                             
                                          
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          s
                                          〈
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          〉
                                          (
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          )
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                             
                                                ″
                                             
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                             
                                                ″
                                             
                                          
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          〈
                                          
                                             quote
                                          
                                          〉
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                             
                                                ‴
                                             
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                             
                                                ‴
                                             
                                          
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                3
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             accept
                                          
                                          (
                                          
                                             quote
                                          
                                          )
                                          ?
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                                _
                                                t
                                             
                                          
                                          :
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                                _
                                                e
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                4
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                4
                                             
                                          
                                          −
                                          s
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          [
                                          
                                             quote
                                          
                                          /
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       
                                       
                                          
                                          {
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          [
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          /
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          ]
                                          ,
                                          …
                                          }
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                5
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                4
                                             
                                          
                                          〉
                                          
                                          )
                                       
                                    
                                    
                                       
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                         Basically, five memories have been generated, each one dedicated to revert the effects of the corresponding forward reduction.

If a problem occurs during the subsequent interactions between the client and the provider for finalising the service agreement, the computation can be reverted to the initial state. In particular, the backward rules [bwCon], [bwCom], [bwLab] and [bwIf] can be applied only if the ReSπ term contains a memory in parallel with thread(s) appropriately tagged by the continuation tag(s) stored in the memory. For example, to apply the rule [bwCon] in the process M, two threads tagged by 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 1
                              
                           
                         must be in parallel with the first memory, which actually is not the case. In fact, in M, only the last memory can trigger a backward step, by means of the application of rule [bwLab]:
                           
                              
                                 
                                    
                                       
                                          M
                                          
                                          ⇝
                                          
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                       
                                       
                                          (
                                          ν
                                          s
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                4
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                       
                                          (
                                          
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                4
                                             
                                          
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          /
                                          x
                                          ]
                                          [
                                          
                                             quote
                                          
                                          /
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                3
                                             
                                          
                                          :
                                          s
                                          ▹
                                          {
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          
                                          :
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                acc
                                             
                                          
                                          [
                                          s
                                          /
                                          y
                                          ]
                                          [
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          /
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          ]
                                          
                                          ,
                                          
                                          …
                                          }
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          
                                             
                                                a
                                             
                                             
                                                
                                                   login
                                                
                                             
                                          
                                          (
                                          x
                                          )
                                          (
                                          y
                                          )
                                          (
                                          ν
                                          s
                                          )
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                             
                                                ′
                                             
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                             
                                                ′
                                             
                                          
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          s
                                          〈
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                          
                                          〉
                                          (
                                          
                                             
                                                z
                                             
                                             
                                                req
                                             
                                          
                                          )
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                             
                                                ″
                                             
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                             
                                                ″
                                             
                                          
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          
                                             
                                                s
                                             
                                             
                                                ¯
                                             
                                          
                                          〈
                                          
                                             quote
                                          
                                          〉
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                
                                                   quote
                                                
                                             
                                          
                                          )
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                1
                                             
                                             
                                                ‴
                                             
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                             
                                             
                                                ‴
                                             
                                          
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                3
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             accept
                                          
                                          (
                                          
                                             quote
                                          
                                          )
                                          ?
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                                _
                                                t
                                             
                                          
                                          :
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   client
                                                
                                                _
                                                e
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                4
                                             
                                          
                                          〉
                                          
                                          )
                                       
                                    
                                    
                                       
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                         In this way, the threads labelled by 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 5
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 4
                              
                           
                         are removed, while the threads performing the selection and offering the branching choice, labelled by 
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 4
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 3
                              
                           
                         respectively, are restored.

Then, in the process 
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                        , only the last memory can trigger a backward reduction, which undoes the conditional choice performed by the client thread. Similarly, other backward reductions can be subsequently triggered by the other memories, consuming them from the bottom to the top of the term. In this way, the forward computation can be completely reverted:
                           
                              
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                                 ⇝
                                 
                                 ⇝
                                 
                                 ⇝
                                 
                                 ⇝
                                 
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          client
                                       
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       1
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       2
                                    
                                 
                              
                           
                         Now, the client can start a new session, possibly with provider2.

Notice that in ReSπ there is no need of explicitly implementing loops for enabling the client to undo and restart sessions. Notice also that here we do not consider specific primitives and techniques that avoid interacting again with the same provider. This would break the Loop Lemma (see Lemma 5) and complicate our theoretical framework; we refer to [34] for a definition of some of such controlled forms of reversibility.

We present in this section some properties of ReSπ, which are typically enjoyed by reversible calculi. We exploit terminology, arguments and proof techniques of previous works on reversible calculi (in particular, [15,5,20]). As a matter of notation, we will use 
                        P
                      and 
                        R
                      to denote the set of π-calculus processes and of ReSπ processes, respectively.

We first show that ReSπ is a conservative extension of the (session-based) π-calculus. In fact, as most reversible calculi, ReSπ is only a decoration of its host calculus. Such decoration can be erased by means of the forgetful map ϕ, which maps ReSπ terms into π-calculus ones by simply removing memories, tag annotations and tag restrictions.


                        
                           Definition 4
                           Forgetful map


                           The forgetful map 
                                 ϕ
                                 
                                 :
                                 
                                 R
                                 →
                                 P
                              , mapping a ReSπ process M into a π-calculus process P, is inductively defined on the structure of M as follows:
                                 
                                    
                                       
                                          
                                             
                                                ϕ
                                                (
                                                t
                                                :
                                                P
                                                )
                                             
                                             
                                                =
                                             
                                             
                                                P
                                             
                                             
                                                ϕ
                                                (
                                                (
                                                ν
                                                c
                                                )
                                                N
                                                )
                                             
                                             
                                                =
                                             
                                             
                                                (
                                                ν
                                                c
                                                )
                                                ϕ
                                                (
                                                N
                                                )
                                             
                                          
                                          
                                             
                                                ϕ
                                                (
                                                (
                                                ν
                                                t
                                                )
                                                N
                                                )
                                             
                                             
                                                =
                                             
                                             
                                                ϕ
                                                (
                                                N
                                                )
                                             
                                             
                                                ϕ
                                                (
                                                
                                                   
                                                      N
                                                   
                                                   
                                                      1
                                                   
                                                
                                                |
                                                
                                                   
                                                      N
                                                   
                                                   
                                                      2
                                                   
                                                
                                                )
                                             
                                             
                                                =
                                             
                                             
                                                ϕ
                                                (
                                                
                                                   
                                                      N
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                |
                                                ϕ
                                                (
                                                
                                                   
                                                      N
                                                   
                                                   
                                                      2
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             
                                                ϕ
                                                (
                                                m
                                                )
                                             
                                             
                                                =
                                             
                                             
                                                0
                                             
                                             
                                                ϕ
                                                (
                                                
                                                   nil
                                                
                                                )
                                             
                                             
                                                =
                                             
                                             
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                           

To prove the correspondence between ReSπ and π-calculus, we need the following auxiliary lemma relating structural congruence of ReSπ to that of π-calculus.


                        
                           Lemma 1
                           
                              Let M and N be two ReSπ processes. If 
                              
                                 M
                                 ≡
                                 N
                               
                              then 
                              
                                 ϕ
                                 (
                                 M
                                 )
                                 ≡
                                 ϕ
                                 (
                                 N
                                 )
                              
                              .
                           

We proceed by induction on the derivation of 
                                 M
                                 ≡
                                 N
                               (see Appendix A.1.1).  □

Now, we can show that each forward reduction of a ReSπ process corresponds to a reduction of the corresponding π-calculus process.


                        
                           Lemma 2
                           
                              Let M and N be two ReSπ processes. If 
                              
                                 M
                                 ↠
                                 N
                               
                              then 
                              
                                 ϕ
                                 (
                                 M
                                 )
                                 →
                                 ϕ
                                 (
                                 N
                                 )
                              
                              .
                           

We proceed by induction on the derivation of 
                                 M
                                 ↠
                                 N
                               (see Appendix A.1.1).  □

The correspondence between ReSπ and π-calculus reductions is completed by the following lemmas, which intuitively are the inverse of Lemma 1 and Lemma 2.


                        
                           Lemma 3
                           
                              Let P and Q be two π-calculus processes. If 
                              
                                 P
                                 ≡
                                 Q
                               
                              then for any ReSπ process M such that 
                              
                                 ϕ
                                 (
                                 M
                                 )
                                 =
                                 P
                               
                              there exists a ReSπ process N such that 
                              
                                 ϕ
                                 (
                                 N
                                 )
                                 =
                                 Q
                               
                              and 
                              
                                 M
                                 ≡
                                 N
                              
                              .
                           

The proof is straightforward (see Appendix A.1.1).  □


                        
                           Lemma 4
                           
                              Let P and Q be two π-calculus processes. If 
                              
                                 P
                                 →
                                 Q
                               
                              then for any ReSπ process M such that 
                              
                                 ϕ
                                 (
                                 M
                                 )
                                 =
                                 P
                               
                              there exists a ReSπ process N such that 
                              
                                 ϕ
                                 (
                                 N
                                 )
                                 =
                                 Q
                               
                              and 
                              
                                 M
                                 ↠
                                 N
                              
                              .
                           

We proceed by induction on the derivation of 
                                 P
                                 →
                                 Q
                               (see Appendix A.1.1).  □

The following lemma shows that, in ReSπ, backward reductions are the inverse of the forward ones and vice versa.


                        
                           Lemma 5
                           Loop lemma


                           
                              Let M and N be two reachable ReSπ processes. 
                              
                                 M
                                 ↠
                                 N
                               
                              if and only if 
                              
                                 N
                                 ⇝
                                 M
                              
                              .
                           

The proof for the if part is by induction on the derivation of 
                                 M
                                 ↠
                                 N
                              , while the proof for the only if part is by induction on the derivation of 
                                 N
                                 ⇝
                                 M
                               (see Appendix A.1.2).  □

We show here that reversibility in ReSπ is causally consistent. Informally, this means that an action can be reverted only after all the actions causally depending on it have already been reverted. In this way, in the presence of independent actions, backward computations are not required to necessarily follow the exact execution order of forward computations in reverse. We formalise below the notions of independent (i.e., concurrent) actions and of causal consistency.

As in [15] and [5], we rely on the notion of transition. In ReSπ, a transition is a triplet of the form 
                           M
                           
                              →
                              
                                 m
                                 ,
                                 M
                                 ,
                                 ↠
                              
                           
                           N
                         (resp. 
                           M
                           
                              →
                              
                                 m
                                 ,
                                 M
                                 ,
                                 ⇝
                              
                           
                           N
                        ), where M and N are closed reachable ReSπ processes such that 
                           M
                           ↠
                           N
                         (resp. 
                           M
                           ⇝
                           N
                        ), m is the action or choice memory involved in the reduction, and 
                           M
                         is the set of fork memories possibly involved in the reduction. A memory is involved in a reduction if it is created or removed by the reduction. We use η to denote transition labels 
                        
                           (
                           m
                           ,
                           M
                           ,
                           ↠
                           )
                         and 
                           (
                           m
                           ,
                           M
                           ,
                           ⇝
                           )
                        . If η is 
                           (
                           m
                           ,
                           M
                           ,
                           ↠
                           )
                        , then its inverse is 
                           
                              
                                 η
                              
                              
                                 •
                              
                           
                           =
                           (
                           m
                           ,
                           M
                           ,
                           ⇝
                           )
                         and vice versa. In a transition 
                           M
                           
                              →
                              η
                           
                           N
                        , we call M the source of the transition and N its target. We use τ to range over transitions; 
                           
                              
                                 τ
                              
                              
                                 •
                              
                           
                         denotes the inverse of transition τ.

Two transitions are coinitial if they have the same source, cofinal if they have the same target, composable if the target of one is the source of the other. A sequence of transitions, where each pair of sequential transitions is composable, is called a trace; we use σ to range over traces. Notions of target, source and composability extend naturally to traces. We use 
                           
                              
                                 ϵ
                              
                              
                                 M
                              
                           
                         to denote the empty trace with source M and 
                           
                              
                                 σ
                              
                              
                                 1
                              
                           
                           ;
                           
                              
                                 σ
                              
                              
                                 2
                              
                           
                         the composition of two composable traces 
                           
                              
                                 σ
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 σ
                              
                              
                                 2
                              
                           
                        .

We consider only transitions 
                           M
                           
                              →
                              η
                           
                           N
                         where M and N do not contain threads of the form 
                           t
                           :
                           (
                           P
                           |
                           Q
                           )
                        . This condition can be always satisfied by splitting all threads of this kind into sub-threads, until their disappearance in the considered terms, using the structural law 
                           t
                           :
                           (
                           P
                           |
                           Q
                           )
                           ≡
                           (
                           ν
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           )
                           (
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           :
                           P
                           |
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           :
                           Q
                           |
                           〈
                           t
                           ⇉
                           (
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           )
                           〉
                           )
                        . Moreover, since conflicts between transitions are identified by means of tag identifiers (see Definition 5 below), we only consider transitions that do not use α-conversion on tags, and that generates fork memories in a deterministic way, e.g. given a memory 
                           〈
                           t
                           ⇉
                           (
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           )
                           〉
                         tags 
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                         are generated by applying an injective function to t.

The stamp 
                        
                           λ
                           (
                           η
                           )
                         of a transition label η identifies the threads involved in the corresponding transition, and is defined as follows (we use T to denote a set of tags 
                           
                              
                                 {
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              
                                 i
                                 ∈
                                 I
                              
                           
                        ):
                           
                              
                                 
                                    
                                       
                                          λ
                                          (
                                          m
                                          ,
                                          M
                                          ,
                                          ↠
                                          )
                                          =
                                          λ
                                          (
                                          m
                                          ,
                                          M
                                          ,
                                          ⇝
                                          )
                                          =
                                          λ
                                          (
                                          m
                                          )
                                          ∪
                                          
                                             
                                                λ
                                             
                                             
                                                λ
                                                (
                                                m
                                                )
                                             
                                          
                                          (
                                          M
                                          )
                                       
                                    
                                    
                                       
                                          λ
                                          (
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          A
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                ′
                                             
                                          
                                          〉
                                          )
                                          =
                                          {
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                ′
                                             
                                          
                                          }
                                       
                                    
                                    
                                       
                                          λ
                                          (
                                          〈
                                          t
                                          ,
                                          e
                                          ?
                                          
                                          P
                                          :
                                          Q
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                          〉
                                          )
                                          =
                                          {
                                          t
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                          }
                                       
                                    
                                    
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                T
                                             
                                          
                                          (
                                          
                                             
                                                {
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      i
                                                   
                                                
                                                }
                                             
                                             
                                                i
                                                ∈
                                                I
                                             
                                          
                                          )
                                          =
                                          
                                             
                                                ⋃
                                             
                                             
                                                i
                                                ∈
                                                I
                                             
                                          
                                          
                                             
                                                λ
                                             
                                             
                                                T
                                             
                                          
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                T
                                             
                                          
                                          (
                                          〈
                                          t
                                          ⇉
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          )
                                          〉
                                          )
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            t
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            t
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      }
                                                   
                                                   
                                                      if 
                                                      t
                                                      ∈
                                                      T
                                                   
                                                
                                                
                                                   
                                                      ∅
                                                   
                                                   
                                                      otherwise
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                         The stamp of fork memories permits us to take into account the relationships between a thread and its sub-threads. This is similar to the closure over tags used in [18]. Notably, as in [15], the tags of continuation processes are inserted into a stamp, in order to take into account possible conflicts between a forward transition and a backward one. Notice also that it is instead not necessary to include in the stamp the fresh session channel created or used by a reduction. In fact, this would allow to detect conflicts between the transitions involving the memory corresponding to the creation of the channel and the transitions where such channel is used. Such conflicts, however, are already implicitly considered, since after its creation the channel is only known by the threads corresponding to the continuation processes, which are already considered in the stamp as discussed above.

We can now define when two transitions are concurrent. 
                           Definition 5
                           Concurrent transitions


                           Two coinitial transitions 
                                 M
                                 
                                    →
                                    
                                       
                                          η
                                       
                                       
                                          1
                                       
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       1
                                    
                                 
                               and 
                                 M
                                 
                                    →
                                    
                                       
                                          η
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       2
                                    
                                 
                               are in conflict if 
                                 λ
                                 (
                                 
                                    
                                       η
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 ∩
                                 λ
                                 (
                                 
                                    
                                       η
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 ≠
                                 ∅
                              . Two coinitial transitions are concurrent if they are not in conflict.

Intuitively, two transitions are concurrent when they do not involve a common thread.

The following lemma characterises the causally independence among concurrent transitions.


                        
                           Lemma 6
                           Square lemma


                           
                              If 
                              
                                 
                                    
                                       τ
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 M
                                 
                                    →
                                    
                                       
                                          η
                                       
                                       
                                          1
                                       
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       1
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 M
                                 
                                    →
                                    
                                       
                                          η
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       2
                                    
                                 
                               
                              are two coinitial concurrent transitions, then there exist two cofinal transitions 
                              
                                 
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                                 /
                                 
                                    
                                       τ
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       M
                                    
                                    
                                       1
                                    
                                 
                                 
                                    →
                                    
                                       
                                          η
                                       
                                       
                                          2
                                       
                                    
                                 
                                 N
                               
                              and 
                              
                                 
                                    
                                       τ
                                    
                                    
                                       1
                                    
                                 
                                 /
                                 
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       M
                                    
                                    
                                       2
                                    
                                 
                                 
                                    →
                                    
                                       
                                          η
                                       
                                       
                                          1
                                       
                                    
                                 
                                 N
                              
                              .
                           


                        
                           Proof
                           By case analysis on the form of transitions 
                                 
                                    
                                       τ
                                    
                                    
                                       1
                                    
                                 
                               and 
                                 
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                               (see Appendix A.1.3).  □

In order to study the causality of ReSπ reversibility, we introduce the notion of causal equivalence 
                        [4,5] between traces, denoted ≍. This is defined as the least equivalence relation between traces closed under composition that obeys the following rules:
                           
                              
                                 
                                    
                                       τ
                                    
                                    
                                       1
                                    
                                 
                                 
                                 ;
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                                 /
                                 
                                    
                                       τ
                                    
                                    
                                       1
                                    
                                 
                                 
                                 ≍
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                                 
                                 ;
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       1
                                    
                                 
                                 /
                                 
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                                 
                                 
                                 τ
                                 
                                 ;
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       •
                                    
                                 
                                 
                                 ≍
                                 
                                 
                                    
                                       ϵ
                                    
                                    
                                       
                                          source
                                       
                                       (
                                       τ
                                       )
                                    
                                 
                                 
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       •
                                    
                                 
                                 
                                 ;
                                 
                                 τ
                                 
                                 ≍
                                 
                                 
                                    
                                       ϵ
                                    
                                    
                                       
                                          target
                                       
                                       (
                                       τ
                                       )
                                    
                                 
                              
                           
                         Intuitively, the first rule states that the execution order of two concurrent transitions can be swapped, while the other rules state that the composition of a trace with its inverse is equivalent to the empty transition.

Now, we conclude with the result stating that two coinitial causally equivalent traces lead to the same final state. Thus, in such case, we can rollback to the initial state by reversing any of the two traces.


                        
                           Theorem 1
                           Causal consistency


                           
                              Let 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       1
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       2
                                    
                                 
                               
                              be coinitial traces. Then, 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       1
                                    
                                 
                                 ≍
                                 
                                    
                                       σ
                                    
                                    
                                       2
                                    
                                 
                               
                              if and only if 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       1
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       2
                                    
                                 
                               
                              are cofinal.
                           

By construction of ≍ and by applying Lemma 6 and other two auxiliary lemmas (see Appendix A.1.3).  □

In this section, first we recall the session type discipline of session-based π-calculus  then we discuss how we could exploit it to type ReSπ processes.

The type discipline presented here is basically the one proposed in [23], except for the notation of the calculus that has been revised according to [24].

The syntax of sorts, ranged over by S, 
                              
                                 
                                    S
                                 
                                 
                                    ′
                                 
                              
                           , …, and types, ranged over by α, β, …, is defined in Fig. 7
                           . The type 
                              !
                              [
                              S
                              ]
                              .
                              α
                            represents the behaviour of first outputting a value of sort S, then performing the actions prescribed by type α. Type 
                              !
                              [
                              β
                              ]
                              .
                              α
                            represents a similar behaviour, which starts with session output (throw) instead. Types 
                              ?
                              [
                              S
                              ]
                              .
                              α
                            and 
                              ?
                              [
                              β
                              ]
                              .
                              α
                            are the dual ones, receiving values instead of sending. Type 
                              &
                              [
                              
                                 
                                    l
                                 
                                 
                                    1
                                 
                              
                              
                              :
                              
                              
                                 
                                    α
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    l
                                 
                                 
                                    n
                                 
                              
                              
                              :
                              
                              
                                 
                                    α
                                 
                                 
                                    n
                                 
                              
                              ]
                            describes a branching behaviour: it waits with n options, and behave as type 
                              
                                 
                                    α
                                 
                                 
                                    i
                                 
                              
                            if the i-th action is selected (external choice). Type 
                              ⊕
                              [
                              
                                 
                                    l
                                 
                                 
                                    1
                                 
                              
                              
                              :
                              
                              
                                 
                                    α
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    l
                                 
                                 
                                    n
                                 
                              
                              
                              :
                              
                              
                                 
                                    α
                                 
                                 
                                    n
                                 
                              
                              ]
                            represents the behaviour which would select one of 
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                            and then behaves as 
                              
                                 
                                    α
                                 
                                 
                                    i
                                 
                              
                           , according to the selected 
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                            (internal choice). Type 
                              end
                            represents inaction, acting as the unit of sequential composition. Type 
                              μ
                              t
                              .
                              α
                            denotes a recursive behaviour, representing the behaviour that starts by doing α and, when variable t is encountered, recurs to α again. As in [23], we take an equi-recursive view of types, not distinguishing between a type 
                              μ
                              t
                              .
                              α
                            and its unfolding 
                              α
                              [
                              μ
                              t
                              .
                              α
                              /
                              t
                              ]
                           , and we are interested on contractive types only, i.e. for each of sub-expressions 
                              μ
                              t
                              .
                              μ
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              …
                              μ
                              
                                 
                                    t
                                 
                                 
                                    n
                                 
                              
                              .
                              α
                            the body α is not t. The result is that, in a typing derivation, types 
                              μ
                              t
                              .
                              α
                            and 
                              α
                              [
                              μ
                              t
                              .
                              α
                              /
                              t
                              ]
                            can be used interchangeably.

For each type α, we define 
                              
                                 α
                                 ‾
                              
                           , the dual type of α, by exchanging ! and ?, and & and ⊕. The inductive definition is in Fig. 8
                           .

A sorting (resp. a typing, resp. a basis) is a finite partial map from shared identifiers to sorts (resp. from session identifiers to types, resp. from process variables to typings). We let Γ, 
                              
                                 
                                    Γ
                                 
                                 
                                    ′
                                 
                              
                           , …(resp. Δ, 
                              
                                 
                                    Δ
                                 
                                 
                                    ′
                                 
                              
                           , …, resp. Θ, 
                              
                                 
                                    Θ
                                 
                                 
                                    ′
                                 
                              
                           , …) range over sortings (resp. typings, resp. bases). We write 
                              Δ
                              ⋅
                              k
                              :
                              α
                            when 
                              k
                              ∉
                              
                                 dom
                              
                              (
                              Δ
                              )
                           ; this notation is then extended to 
                              Δ
                              ⋅
                              
                                 
                                    Δ
                                 
                                 
                                    ′
                                 
                              
                           .

Typing judgements are of the form 
                              Θ
                              ;
                              Γ
                              
                              ⊢
                              
                              P
                              
                              ▹
                              
                              Δ
                            which stands for “under the environment 
                              Θ
                              ;
                              Γ
                           , process P has typing Δ”. The typing system is defined by the axioms and rules in Fig. 9
                           . We call a typing completed when it contains only 
                              end
                            types. A typing Δ is called balanced if whenever 
                              s
                              :
                              α
                              ,
                              
                                 
                                    s
                                 
                                 
                                    ¯
                                 
                              
                              :
                              β
                              ∈
                              Δ
                           , then 
                              α
                              =
                              
                                 β
                                 ‾
                              
                           . We refer the interested reader to [23] for detailed comments on the rules.

@&#RESULTS@&#

We report here the main results concerning the type discipline, namely Subject Reduction and Type Safety, borrowed from [23]. The former result states that well-typedness is preserved along computations, while the latter states that no interaction errors occur on well-typed processes.


                           
                              Theorem 2
                              Subject reduction


                              
                                 If 
                                 
                                    Θ
                                    ;
                                    Γ
                                    
                                    ⊢
                                    
                                    P
                                    
                                    ▹
                                    
                                    Δ
                                  
                                 with Δ balanced and 
                                 
                                    P
                                    
                                       
                                          →
                                       
                                       
                                          ⁎
                                       
                                    
                                    Q
                                 
                                 , then 
                                 
                                    Θ
                                    ;
                                    Γ
                                    
                                    ⊢
                                    
                                    Q
                                    
                                    ▹
                                    
                                    
                                       
                                          Δ
                                       
                                       
                                          ′
                                       
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          Δ
                                       
                                       
                                          ′
                                       
                                    
                                  
                                 balanced.
                              

See proof of Theorem 3.3 in [23].  □

The notion of error, necessary to formalise Type Safety, is also taken from [23]. A k-process is a process prefixed by subject k, while a k-redex is the parallel composition of two k-processes either of the form 
                              (
                              
                                 
                                    k
                                 
                                 
                                    ¯
                                 
                              
                              !
                              〈
                              e
                              〉
                              .
                              
                                 
                                    P
                                 
                                 
                                    1
                                 
                              
                              
                              |
                              
                              k
                              ?
                              (
                              x
                              )
                              .
                              
                                 
                                    P
                                 
                                 
                                    2
                                 
                              
                              )
                           , or 
                              (
                              
                                 
                                    k
                                 
                                 
                                    ¯
                                 
                              
                              ◃
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                              .
                              P
                              
                              |
                              
                              k
                              ▹
                              {
                              
                                 
                                    l
                                 
                                 
                                    1
                                 
                              
                              
                              :
                              
                              
                                 
                                    P
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    l
                                 
                                 
                                    n
                                 
                              
                              
                              :
                              
                              
                                 
                                    P
                                 
                                 
                                    n
                                 
                              
                              }
                              )
                           . Then, P is an error if 
                              P
                              ≡
                              (
                              ν
                              c
                              )
                              (
                              Q
                              |
                              R
                              )
                            where Q is, for some k, the parallel composition of either two k-processes that do not form a k-redex, or of three or more k-processes.


                           
                              Theorem 3
                              Type Safety


                              
                                 A program typable under a balanced channel environment never reduces to an error.
                              

See proof of Theorem 3.4 in [23].  □

We show here how the notion of types, the typing system and the related results given for the π-calculus (Section 6.1) can be reused for typing ReSπ. The key point is that we only consider reachable ReSπ processes originated from ReSπ programs that are well-typed (according to the typing discipline of π-calculus). In fact, by statically type checking ReSπ programs, we already check all possible interactions that they will perform. More specifically, Subject Reduction and Type Safety ensure that all runtime processes obtained from a program by means of (forward) reductions are interaction safe. Thus, since backward computations cannot lead to new runtime processes, but just go back to terms reachable from the program via forward reductions, there is no need of type checking the content of the memories in runtime processes.

Now, before formally showing how the typing discipline of π-calculus extends to ReSπ, we introduce a few auxiliary definitions and results.


                        
                           Definition 6
                           Reachable processes for typed ReSπ
                           


                           The set of reachable processes for the typed ReSπ only contains: (i) programs M such that 
                                 Θ
                                 ;
                                 Γ
                                 
                                 ⊢
                                 
                                 ϕ
                                 (
                                 M
                                 )
                                 
                                 ▹
                                 
                                 Δ
                               with Δ balanced, and (ii) runtime processes M obtained by forward reductions from the above programs.


                        
                           Property 1
                           
                              Let M be a reachable process. If 
                              
                                 M
                                 ↣
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               
                              then 
                              
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               
                              is a reachable process.
                           

The proof follows from Definition 6 and Lemma 5 (see Appendix A.2).  □

The notion of well-typedness for ReSπ, expressed by the judgement 
                           Θ
                           ;
                           Γ
                           
                           
                              
                                 ⊢
                              
                              
                                 r
                              
                           
                           
                           M
                           
                           ▹
                           
                           Δ
                        , is defined in terms of the well-typedness notion introduced for the π-calculus. 
                           Definition 7
                           Well-typedness


                           
                              
                                 Θ
                                 ;
                                 Γ
                                 
                                 
                                    
                                       ⊢
                                    
                                    
                                       r
                                    
                                 
                                 
                                 M
                                 
                                 ▹
                                 
                                 Δ
                               if and only if 
                                 Θ
                                 ;
                                 Γ
                                 
                                 ⊢
                                 
                                 ϕ
                                 (
                                 M
                                 )
                                 
                                 ▹
                                 
                                 Δ
                              , with Δ balanced.

Thus, Subject Reduction extends to ReSπ terms as follows. 
                           Theorem 4
                           Subject Reduction


                           
                              Let M be a reachable process. If 
                              
                                 Θ
                                 ;
                                 Γ
                                 
                                 
                                    
                                       ⊢
                                    
                                    
                                       r
                                    
                                 
                                 
                                 M
                                 
                                 ▹
                                 
                                 Δ
                               
                              with Δ balanced and 
                              
                                 M
                                 ↣
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                              
                              , then 
                              
                                 Θ
                                 ;
                                 Γ
                                 
                                 
                                    
                                       ⊢
                                    
                                    
                                       r
                                    
                                 
                                 
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                                 
                                 ▹
                                 
                                 
                                    
                                       Δ
                                    
                                    
                                       ′
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       Δ
                                    
                                    
                                       ′
                                    
                                 
                               
                              balanced.
                           

The proof relies on Theorem 2 (see Appendix A.2).  □

We conclude by showing how the notion of error and Type Safety of π-calculus extends to ReSπ. A ReSπ process M is an error if and only if 
                           ϕ
                           (
                           M
                           )
                         is an error.


                        
                           Theorem 5
                           Type Safety


                           
                              A ReSπ program typable under a balanced channel environment never reduces to an error.
                           

By the notion of ReSπ error and by Theorem 3, we have that typable programs are not errors. Then, by Theorem 4 we have the thesis.  □

Coming back to the scenario introduced in Section 3.3 and specified in ReSπ in Section 4.3, we can easily verify that the process
                           
                              
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          client
                                       
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       1
                                    
                                 
                                 
                                 |
                                 
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 :
                                 
                                    
                                       P
                                    
                                    
                                       
                                          provider
                                       
                                       2
                                    
                                 
                              
                           
                         is well-typed (assuming that the unspecified processes 
                           
                              
                                 P
                              
                              
                                 acc
                              
                           
                        , 
                           
                              
                                 P
                              
                              
                                 neg
                              
                           
                        , 
                           
                              
                                 Q
                              
                              
                                 acc
                              
                           
                         and 
                           
                              
                                 Q
                              
                              
                                 neg
                              
                           
                         are properly typable). In particular, the channel 
                           
                              
                                 a
                              
                              
                                 
                                    login
                                 
                              
                           
                         can be typed by the shared channel type
                           
                              
                                 〈
                                 
                                 ?
                                 [
                                 
                                    Request
                                 
                                 ]
                                 .
                                 
                                 !
                                 [
                                 
                                    Quote
                                 
                                 ]
                                 .
                                 
                                 &
                                 [
                                 
                                    
                                       l
                                    
                                    
                                       acc
                                    
                                 
                                 
                                 :
                                 
                                 
                                    
                                       α
                                    
                                    
                                       acc
                                    
                                 
                                 
                                 ,
                                 
                                 
                                    
                                       l
                                    
                                    
                                       neg
                                    
                                 
                                 
                                 :
                                 
                                 
                                    
                                       α
                                    
                                    
                                       neg
                                    
                                 
                                 
                                 ,
                                 
                                 
                                    
                                       l
                                    
                                    
                                       rej
                                    
                                 
                                 
                                 :
                                 
                                 
                                    end
                                 
                                 ]
                                 
                                 〉
                              
                           
                         where we use sorts 
                           Request
                         and 
                           Quote
                         to type requests and quotes, respectively.

Let us consider now a scenario where the client wishes to concurrently submit two different requests to the same provider, which would be able to concurrently serve them. Consider in particular the following specification of the client (the provider one is dual):
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   a
                                                
                                                
                                                   
                                                      login
                                                   
                                                
                                             
                                             ‾
                                          
                                          (
                                          x
                                          )
                                          .
                                          
                                          (
                                          
                                          x
                                          !
                                          〈
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                             _
                                             1
                                          
                                          〉
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                1
                                             
                                          
                                          
                                          |
                                          
                                          x
                                          !
                                          〈
                                          
                                             s
                                             r
                                             v
                                             _
                                             r
                                             e
                                             q
                                             _
                                             2
                                          
                                          〉
                                          .
                                          
                                          
                                             
                                                P
                                             
                                             
                                                2
                                             
                                          
                                          
                                          )
                                       
                                    
                                 
                              
                           
                         The new specification of the scenario is clearly not well-typed, due to the use of parallel threads within the same session. This forbids us from mixing up messages related to different requests and wrongly delivering them. In order to properly concurrently submit separate requests, the client must instantiate separate sessions with the provider, one for each request.

The session type discipline, indeed, forces concurrent interactions to follow structured patterns that guarantee the correctness of communication. For what concerns reversibility, linear use of session channels limits the effect of causal consistency, since concurrent interactions along the same session are prevented and, hence, the backtracking of a given session follows a single path. Of course, interactions along different sessions are still concurrent and, therefore, it is important to use a causal-consistent rollback to revert them.

The calculus ReSπ discussed so far is fully reversible, i.e. backward computations are always enabled. Full reversibility provides theoretical foundations for studying reversibility in session-based π-calculus, but it is not suitable for a practical use on structured communication-based programming. Therefore, in this section, we enrich the framework to allow computation to go backward and forward along a session, allowing the involved parties to try different interactions, until the session is successfully completed. This is achieved by adding a specific action to the calculus for irreversibly committing the closure of sessions.

It is worth noticing that the fully reversible characterisation of the calculus permits us to prove that its machinery for reversibility (i.e., memories and their usage) soundly works with respect to the expected properties of a reversible calculus. This remains valid also for the extension proposed here. In fact, as clarified below, the extended calculus basically prunes some computations allowed in ReSπ, which corresponds to backward and forward actions that are undesired after a session closure.

The syntax of 
                           
                              ReS
                           
                           π
                           C
                         (Reversible Session-based π-calculus with Commit) is obtained from that of ReSπ (given in Fig. 4) by extending the syntactic category of processes P with process 
                           
                              commit
                           
                           (
                           k
                           )
                           .
                           P
                        , and by extending the syntactic category of memories m with the commit memory 
                        
                           〈
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           −
                           √
                           (
                           s
                           )
                           →
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           〉
                        . This new memory simply registers the closing event of the session identified by s due to an agreement of threads tagged by 
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                        .

The irreversible closure of a session is achieved by the synchronisation on its session channel s of two threads of the form 
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           :
                           
                              commit
                           
                           (
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           )
                           .
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           :
                           
                              commit
                           
                           (
                           s
                           )
                           .
                           
                              
                                 P
                              
                              
                                 2
                              
                           
                        . This synchronisation acts similarly to the ‘cut’ operator in Prolog, as both mechanisms are used to prevent unwanted backtracking. After the synchronisation, since the session s is closed, the continuations 
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 P
                              
                              
                                 2
                              
                           
                         can no longer use the session channel s; this check is statically enforced by the type system for 
                           
                              ReS
                           
                           π
                           C
                         (presented later on).

Formally, the semantics of 
                           
                              ReS
                           
                           π
                           C
                         is obtained by adding the following rule to those defining the reduction relation of ReSπ (Fig. 6):
                           
                              
                                 
                                 
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                commit
                                             
                                             (
                                             
                                                
                                                   k
                                                
                                                
                                                   ¯
                                                
                                             
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             |
                                             
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             
                                                commit
                                             
                                             (
                                             k
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       
                                          
                                             (
                                             k
                                             =
                                             s
                                             
                                             
                                             or
                                             
                                             
                                             k
                                             =
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             )
                                          
                                       
                                       [commit]
                                    
                                    
                                        
                                          
                                             ↠
                                             
                                             
                                             (
                                             ν
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             |
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             √
                                             (
                                             s
                                             )
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             〉
                                             )
                                          
                                       
                                       
                                       
                                    
                                 
                              
                           
                         Since commit is an irreversible action that will never be backtracked, there is no need to remember information about the continuation processes in the generated memory. For the same reason, there is no backward rule inverse to [commit].

For what concerns the type discipline, types α (defined in Fig. 7) are extended with type √, while the typing system is extended with the following rule:
                           
                              
                                 
                                    
                                       Θ
                                       ;
                                       Γ
                                       
                                       ⊢
                                       
                                       P
                                       
                                       ▹
                                       
                                       Δ
                                       ⋅
                                       k
                                       :
                                       
                                          end
                                       
                                    
                                    
                                       Θ
                                       ;
                                       Γ
                                       
                                       ⊢
                                       
                                       
                                          commit
                                       
                                       (
                                       k
                                       )
                                       .
                                       P
                                       
                                       ▹
                                       
                                       Δ
                                       ⋅
                                       k
                                       :
                                       √
                                    
                                 
                                 
                                 
                                 [
                                 
                                    Commit
                                 
                                 ]
                              
                           
                         which ensures that after the commit the session is closed.

When a commit action is executed, all actions that caused it became unbacktrackable, although they were themselves reversible. In other words, a commit action creates a domino effect that disables the possibility of reversing the session actions previously performed.

To formalise the domino effect caused by the commit irreversible action, we have to introduce the following notions of head and tail of memories:
                           
                              
                                 
                                    
                                       
                                          
                                             head
                                          
                                          (
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          A
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                ′
                                             
                                          
                                          〉
                                          )
                                          
                                          =
                                          
                                          {
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          }
                                       
                                       
                                          
                                             tail
                                          
                                          (
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          A
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                ′
                                             
                                          
                                          〉
                                          )
                                          
                                          =
                                          
                                          {
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                ′
                                             
                                          
                                          }
                                       
                                    
                                    
                                       
                                          
                                             head
                                          
                                          (
                                          〈
                                          t
                                          ,
                                          e
                                          ?
                                          
                                          P
                                          :
                                          Q
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                          〉
                                          )
                                          
                                          =
                                          
                                          {
                                          t
                                          }
                                       
                                       
                                          
                                             tail
                                          
                                          (
                                          〈
                                          t
                                          ,
                                          e
                                          ?
                                          
                                          P
                                          :
                                          Q
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                          〉
                                          )
                                          
                                          =
                                          
                                          {
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                          }
                                       
                                    
                                    
                                       
                                          
                                             head
                                          
                                          (
                                          〈
                                          t
                                          ⇉
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          )
                                          〉
                                          )
                                          
                                          =
                                          
                                          {
                                          t
                                          }
                                       
                                       
                                          
                                             tail
                                          
                                          (
                                          〈
                                          t
                                          ⇉
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          )
                                          〉
                                          )
                                          
                                          =
                                          
                                          {
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          }
                                       
                                    
                                    
                                       
                                          
                                             head
                                          
                                          (
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          √
                                          (
                                          s
                                          )
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                          )
                                          
                                          =
                                          
                                          {
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          }
                                       
                                       
                                          
                                             tail
                                          
                                          (
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          √
                                          (
                                          s
                                          )
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                          )
                                          
                                          =
                                          
                                          ∅
                                       
                                    
                                 
                              
                           
                        
                     

Using the terminology of [5], we say that a memory is locked when the event stored inside can never be reverted, because the conditions triggering the corresponding backward reduction will never be satisfied. Specifically, to perform a backward reduction is required the coexistence of a memory with threads properly tagged, and the latter will never be available due to an irreversible action. Let us now formalise, given a process M, its set 
                           
                              
                                 L
                              
                              
                                 M
                              
                           
                         of locked memories.


                        
                           Definition 8
                           Locked memories


                           Let M be a 
                                 
                                    ReS
                                 
                                 π
                                 C
                               process and 
                                 
                                    
                                       M
                                    
                                    
                                       M
                                    
                                 
                               stand for the set of memories occurring in M. The set 
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                               of locked memories of M is defined as follows:
                                 
                                    •
                                    
                                       
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          √
                                          (
                                          s
                                          )
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                          ∈
                                          
                                             
                                                M
                                             
                                             
                                                M
                                             
                                          
                                          
                                          ⇒
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          √
                                          (
                                          s
                                          )
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                          ∈
                                          
                                             
                                                L
                                             
                                             
                                                M
                                             
                                          
                                       
                                    


                                       
                                          m
                                          ∈
                                          
                                             
                                                L
                                             
                                             
                                                M
                                             
                                          
                                       , 
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                          ∈
                                          
                                             
                                                M
                                             
                                             
                                                M
                                             
                                          
                                       , 
                                          t
                                          ∈
                                          
                                             head
                                          
                                          (
                                          m
                                          )
                                       , 
                                          t
                                          ∈
                                          
                                             tail
                                          
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                          
                                          ⇒
                                          
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                          ∈
                                          
                                             
                                                L
                                             
                                             
                                                M
                                             
                                          
                                       
                                    

The first point says that a commit memory is locked, while the second point describes the propagation of the locking effect, i.e. the event within m depends on the event within 
                           
                              
                                 m
                              
                              
                                 ′
                              
                           
                         (because the latter generates a thread involved in the former) and hence also 
                           
                              
                                 m
                              
                              
                                 ′
                              
                           
                         is locked. Of course, 
                           
                              
                                 L
                              
                              
                                 M
                              
                           
                           ⊆
                           
                              
                                 M
                              
                              
                                 M
                              
                           
                        .

Now, we can demonstrate the main result about 
                           
                              ReS
                           
                           π
                           C
                        , stating that committed sessions cannot be reverted (Theorem 6). This result is based on the notion of reversible memory (Definition 9) and on Lemma 7, ensuring that locked memories cannot be reverted. We use 
                           
                              
                                 ⇝
                              
                              
                                 +
                              
                           
                         to denote the transitive closure of ⇝.


                        
                           Definition 9
                           Let M be a 
                                 
                                    ReS
                                 
                                 π
                                 C
                               process. A memory 
                                 m
                                 ∈
                                 
                                    
                                       M
                                    
                                    
                                       M
                                    
                                 
                               is reversible if there exists a process 
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               such that 
                                 M
                                 
                                    
                                       ⇝
                                    
                                    
                                       +
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               and 
                                 m
                                 ∉
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             M
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              .

Intuitively, a memory can be reverted if there exists a backward computation that consumes it to restore the threads it memorises.


                        
                           Lemma 7
                           
                              Let M be a 
                              
                                 
                                    ReS
                                 
                                 π
                                 C
                               
                              process. If 
                              
                                 m
                                 ∈
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                               
                              then m is not reversible.
                           

The proof proceeds by contradiction (see Appendix A.3).  □


                        
                           Theorem 6
                           
                              Let M be a 
                              
                                 
                                    ReS
                                 
                                 π
                                 C
                               
                              process and s a session committed in M. Then, all interactions performed along s cannot be reverted.
                           

The proof relies on Lemma 7 (see Appendix A.3).  □

Let us consider again the multiple providers scenario specified in ReSπ in Section 4.3.

Suppose now that, for the sake of simplicity, the client and the first provider commit the session immediately after the acceptance of the quote. That is, 
                           
                              
                                 P
                              
                              
                                 acc
                              
                           
                         and 
                           
                              
                                 Q
                              
                              
                                 acc
                              
                           
                         stand for 
                           
                              commit
                           
                           (
                           x
                           )
                         and 
                           
                              commit
                           
                           (
                           y
                           )
                        , respectively. Thus, the computation described in Section 3.3 in 
                           
                              ReS
                           
                           π
                           C
                         corresponds to:
                           
                              
                           
                         
                        M can now evolve as follows:
                           
                              
                                 
                                    
                                       
                                          M
                                          ↠
                                          
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                          
                                          =
                                       
                                       
                                          (
                                          ν
                                          s
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                5
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                4
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                6
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                5
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                       
                                          (
                                          
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                6
                                             
                                          
                                          :
                                          0
                                          
                                          |
                                          
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                5
                                             
                                          
                                          :
                                          0
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                5
                                             
                                          
                                          −
                                          √
                                          (
                                          s
                                          )
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                4
                                             
                                          
                                          〉
                                       
                                    
                                    
                                       
                                       
                                          
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          
                                             
                                                a
                                             
                                             
                                                
                                                   login
                                                
                                             
                                          
                                          …
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          〉
                                          
                                          |
                                          
                                          …
                                          
                                          |
                                          
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                4
                                             
                                          
                                          −
                                          s
                                          ◃
                                          
                                             
                                                l
                                             
                                             
                                                acc
                                             
                                          
                                          …
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                             
                                                5
                                             
                                          
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                             
                                                4
                                             
                                          
                                          〉
                                          
                                          )
                                       
                                    
                                    
                                       
                                       
                                          |
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   provider
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                         The memory 
                           〈
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 5
                              
                           
                           −
                           √
                           (
                           s
                           )
                           →
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 4
                              
                           
                           〉
                         generated by this last forward reduction is locked (first point of Definition 8). Thus, also memory 
                           〈
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 4
                              
                           
                           −
                           s
                           ◃
                           
                              
                                 l
                              
                              
                                 acc
                              
                           
                           …
                           →
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 3
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 1
                              
                              
                                 5
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                              
                                 4
                              
                           
                           〉
                         is locked, since its tail contains tags belonging to the head of the commit memory (second point of Definition 8). Repeatedly applying the second point of Definition 8, we obtain that 
                           
                              
                                 L
                              
                              
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           =
                           
                              
                                 M
                              
                              
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , i.e. all memory of 
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                         are locked. This means that 
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                           ⤳̸
                         and hence, as desired, the computation along session s cannot be reverted.

To bring the benefits of reversible computing to structured communication-based programming, we have defined a theoretical framework based on π-calculus that can be used as formal basis for studying the interplay between (causal-consistent) reversibility and session-based structured interaction. We conclude the paper by discussing the main directions of ongoing and future work.

Concerning the reversible calculus, we plan to investigate the definition of a syntactic characterisation of consistent terms, which statically enforces history consistency in memories (as in [15]), rather than using the current definition of reachable process (as in [20,18]). In line with [17], we also plan to enrich the language with primitives and mechanisms to control reversibility.

For what concerns the typing discipline of ReSπ, we intend to investigate the definition of a typing system capable of type checking contents of memories, in order to identify interaction errors that could be caused by terms restored from memories. This permits us to extend the class of ReSπ programs to include also processes with memories, thus allowing programmers to write also this kind of reversible code. We think that the required checks would resemble the semantics of the roll primitive in [17], which can be then used as a source of inspiration.

Coming to the extension with committable sessions, it is worth noticing that action commit must be carefully used in case of subordinate sessions. For example, let us consider the typical three-party scenario where a Customer sends an order to a Seller that, in his own turn, contacts a Shipper for the delivery. We have that the session between the Seller and the Shipper is subordinated to the session between the Customer and the Seller. Now, when the main session is committed, also the subordinate session is involved in the commit. This is usually desirable, because the commit acts on the whole transaction and, hence, after the commit the interaction with the Shipper cannot be reverted. However, if the subordinate session is previously committed, the main session is affected, because interaction performed before the commit cannot be reverted. This latter situation is typically undesirable; therefore, as a best practice, commit should be not used by subordinate sessions. We plan to devise a static analysis technique supporting this disciplined use of commit in presence of subordinate sessions.

As longer-term goal, we intend to apply the proposed approach to other session-based formalisms, which consider, e.g., asynchronous sessions and multiparty sessions. We also plan to investigate implementation issues that may arise when incorporating the approach into standard programming languages, in particular in case of a distributed setting. The rollback mechanism incorporated in the semantics of the language would require low-level synchronisations between the involved parties.


                           
                              Lemma 1
                              
                                 Let M and N be two ReSπ processes. If 
                                 
                                    M
                                    ≡
                                    N
                                  
                                 then 
                                 
                                    ϕ
                                    (
                                    M
                                    )
                                    ≡
                                    ϕ
                                    (
                                    N
                                    )
                                 
                                 .
                              

We proceed by induction on the derivation of 
                                    M
                                    ≡
                                    N
                                 . For most of the laws in Fig. 5 the conclusion is trivial because 
                                    ϕ
                                    (
                                    M
                                    )
                                    ≡
                                    ϕ
                                    (
                                    N
                                    )
                                  directly corresponds to a law for π-calculus in Fig. 2. Instead, for the eighth and twelve laws, we easily conclude because by applying ϕ we obtain the identity.  □


                           
                              Lemma 2
                              
                                 Let M and N be two ReSπ processes. If 
                                 
                                    M
                                    ↠
                                    N
                                  
                                 then 
                                 
                                    ϕ
                                    (
                                    M
                                    )
                                    →
                                    ϕ
                                    (
                                    N
                                    )
                                 
                                 .
                              

We proceed by induction on the derivation of 
                                    M
                                    ↠
                                    N
                                 . Base cases:
                                    
                                       •
                                       [fwCon]: We have that 
                                             M
                                             
                                             =
                                             
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                
                                                   a
                                                
                                                
                                                   ¯
                                                
                                             
                                             (
                                             x
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             |
                                             
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             a
                                             (
                                             y
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             N
                                             
                                             =
                                             
                                             (
                                             ν
                                             s
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             [
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             /
                                             x
                                             ]
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             [
                                             s
                                             /
                                             y
                                             ]
                                             |
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             a
                                             (
                                             x
                                             )
                                             (
                                             y
                                             )
                                             (
                                             ν
                                             s
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                             )
                                           with 
                                             s
                                             ,
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             ∉
                                             
                                                fse
                                             
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          . By definition of ϕ, we obtain 
                                             ϕ
                                             (
                                             M
                                             )
                                             
                                             =
                                             
                                             
                                                
                                                   a
                                                
                                                
                                                   ¯
                                                
                                             
                                             (
                                             x
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             |
                                             
                                             a
                                             (
                                             y
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          . Now, by applying rules [Con] and [Str], we have 
                                             ϕ
                                             (
                                             M
                                             )
                                             →
                                             (
                                             ν
                                             s
                                             )
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             [
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             /
                                             x
                                             ]
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             [
                                             s
                                             /
                                             y
                                             ]
                                             |
                                             0
                                             )
                                             
                                             =
                                             
                                             P
                                          . By definition of ϕ, we have 
                                             ϕ
                                             (
                                             N
                                             )
                                             =
                                             P
                                           that permits us to conclude.

[fwCom], [fwLab], [fwIf1], [fwIf2]: These cases are similar to the previous one.

[fwPar]: We have that 
                                             M
                                             
                                             =
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             N
                                             
                                             =
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                          . By the premise of rule [fwPar], we also have 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             ↠
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           from which, by induction, we obtain 
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             
                                             →
                                             
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                          . By definition of ϕ, we get 
                                             ϕ
                                             (
                                             M
                                             )
                                             
                                             =
                                             
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             |
                                             
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          . By applying rule [Par], we have 
                                             ϕ
                                             (
                                             M
                                             )
                                             →
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             |
                                             
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                             
                                             =
                                             
                                             P
                                          . Thus, by definition of ϕ, we have 
                                             ϕ
                                             (
                                             N
                                             )
                                             
                                             =
                                             
                                             P
                                           that directly permits us to conclude.

[fwRes]: This case is similar to the previous one. In particular, when the restricted name is a tag, it is not even necessary to apply rule [Res], because the forgetful map erases the restriction.

[fwStr]: By the premise of rule [fwStr], we have 
                                             M
                                             ≡
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                          , 
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                             ≡
                                             N
                                          . By induction, we obtain 
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             →
                                             ϕ
                                             (
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                          . By applying Lemma 1, we have 
                                             ϕ
                                             (
                                             M
                                             )
                                             ≡
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                           and 
                                             ϕ
                                             (
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             ≡
                                             ϕ
                                             (
                                             N
                                             )
                                           that allow us to conclude. □


                           
                              Lemma 3
                              
                                 Let P and Q be two π-calculus processes. If 
                                 
                                    P
                                    ≡
                                    Q
                                  
                                 then for any ReSπ process M such that 
                                 
                                    ϕ
                                    (
                                    M
                                    )
                                    =
                                    P
                                  
                                 there exists a ReSπ process N such that 
                                 
                                    ϕ
                                    (
                                    N
                                    )
                                    =
                                    Q
                                  
                                 and 
                                 
                                    M
                                    ≡
                                    N
                                 
                                 .
                              

The proof is straightforward. Indeed, given a ReSπ process M such that 
                                    ϕ
                                    (
                                    M
                                    )
                                    =
                                    P
                                 , it must have the form 
                                    (
                                    ν
                                    
                                       
                                          t
                                       
                                       
                                          ˜
                                       
                                    
                                    )
                                    (
                                    t
                                    :
                                    P
                                    |
                                    
                                       
                                          ∏
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       
                                          m
                                       
                                       
                                          i
                                       
                                    
                                    )
                                  up to ≡. Thus, the process N, such that 
                                    ϕ
                                    (
                                    N
                                    )
                                    =
                                    Q
                                 , can be defined accordingly: 
                                    N
                                    ≡
                                    (
                                    ν
                                    
                                       
                                          t
                                       
                                       
                                          ˜
                                       
                                    
                                    )
                                    (
                                    t
                                    :
                                    Q
                                    |
                                    
                                       
                                          ∏
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       
                                          m
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 . Now, we can conclude by exploiting the ninth law in Fig. 5, i.e. 
                                    t
                                    :
                                    P
                                    ≡
                                    t
                                    :
                                    Q
                                  if 
                                    P
                                    ≡
                                    Q
                                 , and the fact that relation ≡ on ReSπ processes is a congruence.  □


                           
                              Lemma 4
                              
                                 Let P and Q be two π-calculus processes. If 
                                 
                                    P
                                    →
                                    Q
                                  
                                 then for any ReSπ process M such that 
                                 
                                    ϕ
                                    (
                                    M
                                    )
                                    =
                                    P
                                  
                                 there exists a ReSπ process N such that 
                                 
                                    ϕ
                                    (
                                    N
                                    )
                                    =
                                    Q
                                  
                                 and 
                                 
                                    M
                                    ↠
                                    N
                                 
                                 .
                              

We proceed by induction on the derivation of 
                                    P
                                    →
                                    Q
                                 . Base cases:
                                    
                                       •
                                       [Con]: We have that 
                                             P
                                             
                                             =
                                             
                                             
                                                
                                                   a
                                                
                                                
                                                   ¯
                                                
                                             
                                             (
                                             x
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             a
                                             (
                                             y
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             Q
                                             
                                             =
                                             
                                             (
                                             ν
                                             s
                                             )
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             [
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             /
                                             x
                                             ]
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             [
                                             s
                                             /
                                             y
                                             ]
                                             )
                                           with 
                                             s
                                             ,
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             ∉
                                             
                                                fse
                                             
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          . Let M be a ReSπ process such that 
                                             ϕ
                                             (
                                             M
                                             )
                                             =
                                             P
                                          , it must have the form 
                                             (
                                             ν
                                             
                                                
                                                   t
                                                
                                                
                                                   ˜
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                
                                                   a
                                                
                                                
                                                   ¯
                                                
                                             
                                             (
                                             x
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             a
                                             (
                                             y
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             |
                                             
                                                
                                                   ∏
                                                
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                           up to ≡. Thus, by applying rules [fwCon], [fwPar], [fwRes] and [fwStr], we get 
                                             M
                                             ↠
                                             (
                                             ν
                                             
                                                
                                                   t
                                                
                                                
                                                   ˜
                                                
                                             
                                             ,
                                             s
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             [
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             /
                                             x
                                             ]
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             [
                                             s
                                             /
                                             y
                                             ]
                                             |
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             a
                                             (
                                             x
                                             )
                                             (
                                             y
                                             )
                                             (
                                             ν
                                             s
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                             |
                                             
                                                
                                                   ∏
                                                
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             
                                             =
                                             
                                             N
                                          . We conclude by applying ϕ to N, since we obtain 
                                             ϕ
                                             (
                                             N
                                             )
                                             =
                                             Q
                                          .

[Com], [Lab], [If1], [If2]: These cases are similar to the previous one.

[Par]: We have that 
                                             P
                                             
                                             =
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             Q
                                             
                                             =
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          . Let M be a ReSπ process such that 
                                             ϕ
                                             (
                                             M
                                             )
                                             =
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          . We have 
                                             M
                                             ≡
                                             (
                                             ν
                                             
                                                
                                                   t
                                                
                                                
                                                   ˜
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             |
                                             
                                                
                                                   ∏
                                                
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             ≡
                                             (
                                             ν
                                             
                                                
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                                
                                                   ˜
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             |
                                             
                                                
                                                   ∏
                                                
                                                
                                                   j
                                                   ∈
                                                   J
                                                
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                           with 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             ≡
                                             (
                                             ν
                                             
                                                
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ″
                                                      
                                                   
                                                
                                                
                                                   ˜
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   ∏
                                                
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                          , 
                                             
                                                
                                                   t
                                                
                                                
                                                   ˜
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                                
                                                   ˜
                                                
                                             
                                             ,
                                             
                                                
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ″
                                                      
                                                   
                                                
                                                
                                                   ˜
                                                
                                             
                                           and 
                                             J
                                             ∪
                                             K
                                             =
                                             I
                                          . By the premise of rule [Par], we also have 
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             →
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           from which, by induction, since 
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             =
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                          , there exists 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           such that 
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             =
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             ↠
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                          . Thus, by applying rules [fwPar], [fwRes] and [fwStr], we get 
                                             M
                                             ↠
                                             (
                                             ν
                                             
                                                
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                                
                                                   ˜
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             |
                                             
                                                
                                                   ∏
                                                
                                                
                                                   j
                                                   ∈
                                                   J
                                                
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                             
                                             =
                                             
                                             N
                                          . We conclude by applying ϕ to N, because 
                                             ϕ
                                             (
                                             N
                                             )
                                             =
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             Q
                                          .

[Res]: This case is similar to the previous one.

[Str]: We have that 
                                             P
                                             ≡
                                             
                                                
                                                   P
                                                
                                                
                                                   ′
                                                
                                             
                                          , 
                                             Q
                                             ≡
                                             
                                                
                                                   Q
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   P
                                                
                                                
                                                   ′
                                                
                                             
                                             →
                                             
                                                
                                                   Q
                                                
                                                
                                                   ′
                                                
                                             
                                          . Let M be a process such that 
                                             ϕ
                                             (
                                             M
                                             )
                                             =
                                             P
                                          . By applying Lemma 3, there exists 
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                           such that 
                                             ϕ
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             =
                                             
                                                
                                                   P
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             M
                                             ≡
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                          . By induction, there is 
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                           such that 
                                             ϕ
                                             (
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             =
                                             
                                                
                                                   Q
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                          . By applying Lemma 3 again, there exists N such that 
                                             ϕ
                                             (
                                             N
                                             )
                                             =
                                             Q
                                           and 
                                             N
                                             ≡
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                          . By applying rule [fwStr], we conclude 
                                             M
                                             ↠
                                             N
                                          . □


                           
                              Lemma 5
                              
                                 Let M and N be two reachable ReSπ processes. 
                                 
                                    M
                                    ↠
                                    N
                                  
                                 if and only if 
                                 
                                    N
                                    ⇝
                                    M
                                 
                                 .
                              

The proof for the if part is by induction on the derivation of 
                                    M
                                    ↠
                                    N
                                 . Base cases:
                                    
                                       •
                                       [fwCon]: We have that 
                                             M
                                             
                                             =
                                             
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                
                                                   a
                                                
                                                
                                                   ¯
                                                
                                             
                                             (
                                             x
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             |
                                             
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             a
                                             (
                                             y
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             N
                                             
                                             =
                                             
                                             (
                                             ν
                                             s
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             [
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             /
                                             x
                                             ]
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             [
                                             s
                                             /
                                             y
                                             ]
                                             |
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             a
                                             (
                                             x
                                             )
                                             (
                                             y
                                             )
                                             (
                                             ν
                                             s
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                             )
                                           with 
                                             s
                                             ,
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             ∉
                                             
                                                fse
                                             
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          . By applying rule [bwCon], we can directly conclude 
                                             N
                                             ⇝
                                             M
                                          .

[fwCom], [fwLab], [fwIf1], [fwIf2]: These cases are similar to the previous one.

[fwPar]: We have that 
                                             M
                                             =
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                          , 
                                             N
                                             =
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                          . By induction 
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ⇝
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                          . Thus, we conclude by applying rule [bwPar], since we get 
                                             N
                                             =
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                             ⇝
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             M
                                          .

[fwRes]: We have that 
                                             M
                                             =
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                          , 
                                             N
                                             =
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             ↠
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                          . By induction 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ⇝
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                          . Thus, we conclude by applying rule [bwRes], since we get 
                                             N
                                             =
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ⇝
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             M
                                          .

[fwStr]: We have that 
                                             M
                                             ≡
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                          , 
                                             N
                                             ≡
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                          . By induction 
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                             ⇝
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                          . Thus, we conclude by applying rule [bwStr], since we directly get 
                                             N
                                             ⇝
                                             M
                                          .

The proof for the only if part is by induction on the derivation of 
                                    N
                                    ⇝
                                    M
                                 . Base cases:
                                    
                                       •
                                       [bwCon]: We have that 
                                             N
                                             
                                             =
                                             
                                             (
                                             ν
                                             s
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             P
                                             |
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             :
                                             Q
                                             |
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             a
                                             (
                                             x
                                             )
                                             (
                                             y
                                             )
                                             (
                                             ν
                                             s
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                             )
                                           and 
                                             M
                                             
                                             =
                                             
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                
                                                   a
                                                
                                                
                                                   ¯
                                                
                                             
                                             (
                                             x
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             |
                                             
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             a
                                             (
                                             y
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          . Since N is a reachable process, memory 
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             
                                             a
                                             (
                                             x
                                             )
                                             (
                                             y
                                             )
                                             (
                                             ν
                                             s
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                           has been generated by a synchronisation between threads 
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                                
                                                   a
                                                
                                                
                                                   ¯
                                                
                                             
                                             (
                                             x
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             a
                                             (
                                             y
                                             )
                                             .
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          , producing a session channel s and two continuation processes 
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             [
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             /
                                             x
                                             ]
                                           and 
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             [
                                             s
                                             /
                                             y
                                             ]
                                           tagged by 
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                          , respectively. Now, by tag uniqueness implied by reachability and use of restriction in tag generation, P and Q must coincide with 
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             [
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             /
                                             x
                                             ]
                                           and 
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             [
                                             s
                                             /
                                             y
                                             ]
                                          , respectively. Therefore, by applying rule [fwCon], we can directly conclude 
                                             M
                                             ↠
                                             N
                                          .

[bwCom], [bwLab], [bwIf]: These cases are similar to the previous one.

[bwPar]: We have that 
                                             N
                                             =
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                          , 
                                             M
                                             =
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             ⇝
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                          . By induction 
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                          . Thus, we conclude by applying rule [fwPar], since we get 
                                             M
                                             =
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             |
                                             
                                                
                                                   N
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             N
                                          .

[bwRes]: We have that 
                                             N
                                             =
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                          , 
                                             M
                                             =
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             ⇝
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                          . By induction 
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                          . Thus, we conclude by applying rule [fwRes], since we get 
                                             M
                                             =
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ↠
                                             (
                                             ν
                                             h
                                             )
                                             
                                                
                                                   N
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             N
                                          .

[bwStr]: We have that 
                                             N
                                             ≡
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                          , 
                                             M
                                             ≡
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                             ⇝
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                          . By induction 
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             ↠
                                             
                                                
                                                   N
                                                
                                                
                                                   ′
                                                
                                             
                                          . Thus, we conclude by applying rule [fwStr], since we directly get 
                                             M
                                             ↠
                                             N
                                          . □


                           
                              Lemma 6
                              
                                 If 
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    M
                                    
                                       →
                                       
                                          
                                             η
                                          
                                          
                                             1
                                          
                                       
                                    
                                    
                                       
                                          M
                                       
                                       
                                          1
                                       
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    M
                                    
                                       →
                                       
                                          
                                             η
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       
                                          M
                                       
                                       
                                          2
                                       
                                    
                                  
                                 are two coinitial concurrent transitions, then there exist two cofinal transitions 
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          M
                                       
                                       
                                          1
                                       
                                    
                                    
                                       →
                                       
                                          
                                             η
                                          
                                          
                                             2
                                          
                                       
                                    
                                    N
                                  
                                 and 
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                    /
                                    
                                       
                                          τ
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       
                                          M
                                       
                                       
                                          2
                                       
                                    
                                    
                                       →
                                       
                                          
                                             η
                                          
                                          
                                             1
                                          
                                       
                                    
                                    N
                                 
                                 .
                              


                           
                              Proof
                              By case analysis on the form of transitions 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          τ
                                       
                                       
                                          2
                                       
                                    
                                 .
                                    
                                       •
                                       
                                          
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   ↠
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   ↠
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                          . The two transitions can be any combination of forward reductions. Let us consider the case of two communication (the other cases are similar). Since the two transitions are concurrent, the involved threads are four distinct threads (two sending threads and two receiving ones). In particular, we consider below two communications along different sessions; in fact, the type discipline in Section 6 forbids concurrent communications along the same session (although, in this proof, this kind of concurrent communications would not cause any problem). Thus, in the considered case, the source of the two transitions is as follows:
                                             
                                                
                                                   
                                                      
                                                         
                                                            M
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                            !
                                                            〈
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            〉
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ?
                                                            (
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            )
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                            !
                                                            〈
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            〉
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ?
                                                            (
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            )
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                           where 
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                          , 
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                          , 
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                             
                                          , 
                                             
                                                
                                                   t
                                                
                                                
                                                   4
                                                
                                             
                                           are in 
                                             
                                                
                                                   t
                                                
                                                
                                                   ˜
                                                
                                             
                                          . Then, 
                                             M
                                             ↠
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                           with
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            |
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            [
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            /
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ]
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                            !
                                                            〈
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            〉
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ?
                                                            (
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            )
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                           where 
                                             
                                                
                                                   e
                                                
                                                
                                                   1
                                                
                                             
                                             ↓
                                             
                                                
                                                   v
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             
                                                
                                                   m
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                
                                                   ¯
                                                
                                             
                                             〈
                                             
                                                
                                                   e
                                                
                                                
                                                   1
                                                
                                             
                                             〉
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                          . Similarly, 
                                             M
                                             ↠
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                           with
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  4
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                            !
                                                            〈
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            〉
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ?
                                                            (
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            )
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            |
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  4
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            [
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            /
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ]
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                           where 
                                             
                                                
                                                   e
                                                
                                                
                                                   2
                                                
                                             
                                             ↓
                                             
                                                
                                                   v
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             
                                                
                                                   m
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   ¯
                                                
                                             
                                             〈
                                             
                                                
                                                   e
                                                
                                                
                                                   2
                                                
                                             
                                             〉
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   3
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   4
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   4
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   4
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                          . Now, we have that 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                             ↠
                                             N
                                           with
                                             
                                                
                                                   
                                                      
                                                         
                                                            N
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  4
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            |
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            [
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            /
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ]
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            |
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  4
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            [
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            /
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ]
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                           As desired, we also have that 
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                             ↠
                                             N
                                          .


                                          
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   ↠
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   ⇝
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                          . The two transitions can be any combination of a forward rule and a backward one, respectively. Let us consider the case of a forward communication and the undo of a choice (again, the other cases are similar). Thus, in the considered case, the source of the two transitions is as follows:
                                             
                                                
                                                   
                                                      
                                                         
                                                            M
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            s
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                            !
                                                            〈
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            〉
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            :
                                                            s
                                                            ?
                                                            (
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            )
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                           where 
                                             
                                                
                                                   m
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                             
                                             ,
                                             
                                                
                                                   e
                                                
                                                
                                                   2
                                                
                                             
                                             ?
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   3
                                                
                                             
                                             :
                                             
                                                
                                                   P
                                                
                                                
                                                   4
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                          , 
                                             e
                                             ↓
                                             
                                                true
                                             
                                          , and 
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                          , 
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                          , 
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                             
                                           are in 
                                             
                                                
                                                   t
                                                
                                                
                                                   ˜
                                                
                                             
                                          . Notably, since the two transitions are concurrent, the continuation tag in 
                                             
                                                
                                                   m
                                                
                                                
                                                   2
                                                
                                             
                                           can be neither 
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                           nor 
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                           (indeed, in the above process M this tag is 
                                             
                                                
                                                   t
                                                
                                                
                                                   3
                                                
                                                
                                                   ′
                                                
                                             
                                          ). Then, 
                                             M
                                             ↠
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                           with
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            s
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            |
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            [
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            /
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ]
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                           where 
                                             
                                                
                                                   e
                                                
                                                
                                                   1
                                                
                                             
                                             ↓
                                             
                                                
                                                   v
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             
                                                
                                                   m
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             〈
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             〈
                                             
                                                
                                                   e
                                                
                                                
                                                   1
                                                
                                             
                                             〉
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                             →
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                             〉
                                          . Now, we also have that 
                                             M
                                             ⇝
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                           with
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            s
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                            !
                                                            〈
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            〉
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            :
                                                            s
                                                            ?
                                                            (
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            )
                                                            .
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            :
                                                            
                                                               if
                                                            
                                                            
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            
                                                            
                                                               then
                                                            
                                                            
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            
                                                            
                                                               else
                                                            
                                                            
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                           As desired, both 
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                           can then evolve with a backward and forward reduction, respectively, to N:
                                             
                                                
                                                   
                                                      
                                                         
                                                            N
                                                         
                                                         
                                                            ≡
                                                            (
                                                            ν
                                                            s
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  ˜
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                            (
                                                         
                                                         
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  1
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            |
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            :
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            [
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            /
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ]
                                                            |
                                                            
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                         
                                                         
                                                            |
                                                            
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            :
                                                            
                                                               if
                                                            
                                                            
                                                            
                                                               
                                                                  e
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            
                                                            
                                                               then
                                                            
                                                            
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  3
                                                               
                                                            
                                                            
                                                            
                                                               else
                                                            
                                                            
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            
                                                            |
                                                            
                                                            
                                                               
                                                                  M
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       


                                          
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   ⇝
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   ⇝
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                          . Similar to the first case.


                                          
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   ⇝
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             M
                                             
                                                →
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   ↠
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   2
                                                
                                             
                                          . Similar to the second case. □

The proof of the Causal Consistency theorem follows the (standard) pattern used in [15,5]. In particular, the proof relies on two auxiliary lemmas. The first lemma permits us to rearrange a trace as a composition of a backward trace and a forward one. The second lemma permits a forward trace to be shortened.


                           
                              Lemma 8
                              
                                 Let σ be a trace. There exist 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          ′
                                       
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          ″
                                       
                                    
                                  
                                 both forward traces such that 
                                 
                                    σ
                                    ≍
                                    
                                       
                                          σ
                                       
                                       
                                          •
                                       
                                       
                                          ′
                                       
                                    
                                    ;
                                    
                                       
                                          σ
                                       
                                       
                                          ″
                                       
                                    
                                 
                                 .
                              

We prove this by lexicographic induction on the length of σ, and the distance to the beginning of σ of the earliest pair of transitions in σ contradicting the property. If there is no such contradicting pair, then we are done. If there is one, say a pair of the form 
                                    τ
                                    ;
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                       
                                          ′
                                       
                                    
                                  with τ and 
                                    
                                       
                                          τ
                                       
                                       
                                          ′
                                       
                                    
                                  forward transitions, we have two possibilities: either τ and 
                                    
                                       
                                          τ
                                       
                                       
                                          ′
                                       
                                    
                                  are concurrent, or they are in conflict. In the first case, τ and 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                       
                                          ′
                                       
                                    
                                  can be swapped by using Lemma 6, resulting in a later earliest contradicting pair. Then, the result follows by induction, since swapping transitions keeps the total length constant. In the second case, there is a conflict on a tag, because it belongs to the stamps of both transitions. Again, we have two sub-cases: either the memory involved in the two transitions is the same or not. In the first sub-case we have 
                                    τ
                                    =
                                    
                                       
                                          τ
                                       
                                       
                                          ′
                                       
                                    
                                 , and then we can apply Lemma 5 to remove 
                                    τ
                                    ;
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                 . Hence, the total length of σ decreases and, again, by induction we obtain the thesis. Instead, the second sub-case never happens. Indeed, let τ generate a memory 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    〈
                                    t
                                    ,
                                    e
                                    ?
                                    
                                    P
                                    :
                                    Q
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          ′
                                       
                                    
                                    〉
                                  (the case with the action memory is similar). A conflict with 
                                    
                                       
                                          τ
                                       
                                       
                                          ′
                                       
                                    
                                  would be caused by the presence of t or 
                                    
                                       
                                          t
                                       
                                       
                                          ′
                                       
                                    
                                  in the memory 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                  removed by 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                       
                                          ′
                                       
                                    
                                  (and, by hypothesis, different from 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                 ). However, t cannot occur in 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                 , because the transition τ consumed the thread uniquely tagged by t, which then cannot be involved in the other transition. Also 
                                    
                                       
                                          t
                                       
                                       
                                          ′
                                       
                                    
                                  cannot occur in 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                 , because the thread uniquely tagged by 
                                    
                                       
                                          t
                                       
                                       
                                          ′
                                       
                                    
                                  has been generated by τ; thus, another forward transition must take place before 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                       
                                          ′
                                       
                                    
                                  to involve this thread so that 
                                    
                                       
                                          t
                                       
                                       
                                          ′
                                       
                                    
                                  could occur in 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                 .  □


                           
                              Lemma 9
                              
                                 Let 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  
                                 be coinitial and cofinal traces, with 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  
                                 forward. Then, there exists a forward trace 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                  
                                 of length at most that of 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  
                                 such that 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                    ≍
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                 
                                 .
                              

The proof is by induction on the length of 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                 . If 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  is a forward trace we are already done. Otherwise, by Lemma 8 we can write 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  as 
                                    
                                       
                                          σ
                                       
                                       
                                          •
                                       
                                    
                                    ;
                                    
                                       
                                          σ
                                       
                                       
                                          ′
                                       
                                    
                                  (with σ and 
                                    
                                       
                                          σ
                                       
                                       
                                          ′
                                       
                                    
                                  forward). Due to its form, 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  contains only one sequence of transitions with opposite direction, say 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                    ;
                                    
                                       
                                          τ
                                       
                                       
                                          ′
                                       
                                    
                                 . Let 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                  be the memory removed by 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                 . Then, in 
                                    
                                       
                                          σ
                                       
                                       
                                          ′
                                       
                                    
                                  there is a forward transition generating 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                 ; otherwise there would be a difference with respect to 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                 , since the latter is a forward trace. Let 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  be the earliest such transition in 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                 . Since 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  is able to put back 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                 , it has to be the opposite of 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                 , i.e. 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    τ
                                 . Now, we can swap 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  with all the transitions between 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                 , in order to obtain a trace in which 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                  are adjacent. To do so, we use Lemma 6, since all the transitions in between are concurrent. Assume in fact that there is a transition involving memory 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                  which is not concurrent to 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                 . A possible conflict could be caused by the presence of a continuation tag, say t, of 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                  in 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                 . But this case can never happen, since t is freshly generated by the forward rule used to produce 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  and thus, thanks to tag uniqueness, t cannot coincide with any tag of a previously executed transition. The other possible conflict could be caused by the presence of a continuation tag of 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                  in 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                 . Since 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                  removes 
                                    
                                       
                                          m
                                       
                                       
                                          1
                                       
                                    
                                 , this memory cannot contain a fresh tag generated by a subsequent transition when 
                                    
                                       
                                          m
                                       
                                       
                                          2
                                       
                                    
                                  is created. Thus, also this case can never happen. Now, when 
                                    
                                       
                                          τ
                                       
                                       
                                          •
                                       
                                    
                                  and τ are adjacent, we can remove both of them using ≍. The resulting trace is shorter, thus the thesis follows by inductive hypothesis.  □


                           
                              Theorem 1
                              
                                 Let 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  
                                 be coinitial traces. Then, 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                    ≍
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  
                                 if and only if 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  
                                 are cofinal.
                              

By construction of ≍, if 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                    ≍
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  then 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  must be coinitial and cofinal, so this direction of the theorem is verified. Thus, it just remains to prove that 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  being coinitial and cofinal implies that 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                    ≍
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                 . By Lemma 8, we know that the two traces can be written as composition of a backward trace and a forward one. The proof is by lexicographic induction on the sum of the lengths of 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  and on the distance between the end of 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  and the earliest pair of transitions 
                                    
                                       
                                          τ
                                       
                                       
                                          1
                                       
                                    
                                  in 
                                    
                                       
                                          σ
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          τ
                                       
                                       
                                          2
                                       
                                    
                                  in 
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                  which are not equal. If all the transitions are equal then we are done. Otherwise, we have to consider four cases, depending on whether the two transitions are forward or backward.
                                    
                                       •
                                       
                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                           
                                          forward and 
                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           
                                          backward. One has 
                                             
                                                
                                                   σ
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   σ
                                                
                                                
                                                   •
                                                
                                             
                                             ;
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                             ;
                                             
                                                
                                                   σ
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             
                                                
                                                   σ
                                                
                                                
                                                   •
                                                
                                             
                                             ;
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                             ;
                                             
                                                
                                                   σ
                                                
                                                
                                                   ″
                                                
                                             
                                           for some σ, 
                                             
                                                
                                                   σ
                                                
                                                
                                                   ′
                                                
                                             
                                          , and 
                                             
                                                
                                                   σ
                                                
                                                
                                                   ″
                                                
                                             
                                          . Lemma 9 applies to 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                             ;
                                             
                                                
                                                   σ
                                                
                                                
                                                   ′
                                                
                                             
                                          , since it is a forward trace, and to 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                             ;
                                             
                                                
                                                   σ
                                                
                                                
                                                   ″
                                                
                                             
                                          ; indeed, 
                                             
                                                
                                                   σ
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                           are coinitial and cofinal by hypothesis, thus also 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                             ;
                                             
                                                
                                                   σ
                                                
                                                
                                                   ′
                                                
                                             
                                           and 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                             ;
                                             
                                                
                                                   σ
                                                
                                                
                                                   ″
                                                
                                             
                                           are coinitial and cofinal. We then have that 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                             ;
                                             
                                                
                                                   σ
                                                
                                                
                                                   ″
                                                
                                             
                                           has a shorter equivalent forward trace, and so 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                           has a shorter equivalent forward trace. We can conclude by induction.


                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                           
                                          backward and 
                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           
                                          forward. This case is similar to the previous one.


                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                           
                                          and 
                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           
                                          forward. We have two possibilities: they are concurrent or are not. In the latter case, they should conflict on a thread, say 
                                             t
                                             :
                                             P
                                          , that they both consume and store in different memories. Since the two traces are cofinal, there should be a transition 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                           in 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                           creating the same memory as 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                          . However no other thread 
                                             t
                                             :
                                             P
                                           is ever created in 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                          ; hence, this is not possible. Therefore, we can assume that 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           are concurrent. Let 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                           be the transition in 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                           creating the same memory of 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                          . We have to prove that 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                           is concurrent to all the previous transitions. This holds since no previous transition can remove one of the processes needed for triggering 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                           and since forward transitions can never conflict on t. Thus we can repetitively apply Lemma 6 to derive a trace equivalent to 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                           where 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           and 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                                
                                                   ′
                                                
                                             
                                           are consecutive. We can apply a similar transformation to 
                                             
                                                
                                                   σ
                                                
                                                
                                                   1
                                                
                                             
                                          . Now, we can apply Lemma 6 to 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                           and 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           to have two traces of the same length as before but where the first pair of different transitions is closer to the end. We then conclude by inductive hypothesis.


                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                           
                                          and 
                                          
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           
                                          backward. Let 
                                             
                                                
                                                   m
                                                
                                                
                                                   1
                                                
                                             
                                           be the memory removed by 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                          , which is surely different from the memory removed by 
                                             
                                                
                                                   τ
                                                
                                                
                                                   2
                                                
                                             
                                           (indeed, the two backward transitions cannot remove the same memory). Since the two traces are cofinal, either there is another transition in 
                                             
                                                
                                                   σ
                                                
                                                
                                                   1
                                                
                                             
                                           putting back the memory or there is a transition 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                                
                                                   ′
                                                
                                             
                                           in 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                           removing the same memory. In the first case, 
                                             
                                                
                                                   τ
                                                
                                                
                                                   1
                                                
                                             
                                           is concurrent to all the backward transitions following it, but the ones that consume processes generated by it. Thus, all such transitions have to be undone by corresponding forward transitions (since they are not possible in 
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                          ). Consider the last such transition: we can use Lemma 6 to make it the last backward transition. The forward transition undoing it should be concurrent to all the previous forward transitions (the reason is the same as in the previous case). We can then use Lemma 6 to make it the first forward transition. Finally, we can apply 
                                             
                                                
                                                   τ
                                                
                                                
                                                   •
                                                
                                             
                                             
                                             ;
                                             
                                             τ
                                             
                                             ≍
                                             
                                             
                                                
                                                   ϵ
                                                
                                                
                                                   
                                                      target
                                                   
                                                   (
                                                   τ
                                                   )
                                                
                                             
                                           to remove the two transitions, thus shortening the trace. In this way, we obtain the thesis by inductive hypothesis. □


                        
                           Property 1
                           
                              Let M be a reachable process. If 
                              
                                 M
                                 ↣
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               
                              then 
                              
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               
                              is a reachable process.
                           

The proof follows from Definition 6. Indeed, since M is a reachable process, there exists a typed program N such that 
                                 N
                                 
                                    
                                       ↠
                                    
                                    
                                       ⁎
                                    
                                 
                                 M
                              , where 
                                 
                                    
                                       ↠
                                    
                                    
                                       ⁎
                                    
                                 
                               denotes the reflexive and transitive closure of ↠. Now, we distinguish two cases:
                                 
                                    •
                                    
                                       
                                          M
                                          ↠
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                       . In this case, we have 
                                          N
                                          
                                             
                                                ↠
                                             
                                             
                                                ⁎
                                             
                                          
                                          M
                                          ↠
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                       , that is 
                                          N
                                          
                                             
                                                ↠
                                             
                                             
                                                ⁎
                                             
                                          
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                       .


                                       
                                          M
                                          ⇝
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                       . Here we have to sub-cases:
                                          
                                             –
                                             
                                                
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                 is a process encountered in the computation 
                                                   N
                                                   
                                                      
                                                         ↠
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                   M
                                                . Thus, 
                                                   N
                                                   
                                                      
                                                         ↠
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   
                                                      
                                                         ↠
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                   M
                                                . In particular, since from 
                                                   M
                                                   ⇝
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                 by Lemma 5 we have 
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   ↠
                                                   M
                                                , we obtain 
                                                   N
                                                   
                                                      
                                                         ↠
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   ↠
                                                   M
                                                .


                                                
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                 is not encountered in 
                                                   N
                                                   
                                                      
                                                         ↠
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                   M
                                                . Since 
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                 is obtained from M by a backward reduction, the memories of 
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                 are the same of M except for the one consumed by the backward reduction (which, of course, is missing in 
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                ). Being M a reachable process, the content of such memories is consistent. Thus, consuming all memories in 
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                 inevitably leads to the program N, i.e. 
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   
                                                      
                                                         ⇝
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                   N
                                                . By applying Lemma 5 to all reductions in this backward computation, we obtain 
                                                   N
                                                   
                                                      
                                                         ↠
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                .


                        
                           Theorem 4
                           
                              Let M be a reachable process. If 
                              
                                 Θ
                                 ;
                                 Γ
                                 
                                 
                                    
                                       ⊢
                                    
                                    
                                       r
                                    
                                 
                                 
                                 M
                                 
                                 ▹
                                 
                                 Δ
                               
                              with Δ balanced and 
                              
                                 M
                                 ↣
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                              
                              , then 
                              
                                 Θ
                                 ;
                                 Γ
                                 
                                 
                                    
                                       ⊢
                                    
                                    
                                       r
                                    
                                 
                                 
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                                 
                                 ▹
                                 
                                 
                                    
                                       Δ
                                    
                                    
                                       ′
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       Δ
                                    
                                    
                                       ′
                                    
                                 
                               
                              balanced.
                           

We distinguish two cases:
                                 
                                    1.
                                    
                                       
                                          (
                                          ↣
                                          
                                          =
                                          
                                          ↠
                                          )
                                       . By Definition 7, from 
                                          Θ
                                          ;
                                          Γ
                                          
                                          
                                             
                                                ⊢
                                             
                                             
                                                r
                                             
                                          
                                          
                                          M
                                          
                                          ▹
                                          
                                          Δ
                                        we obtain 
                                          Θ
                                          ;
                                          Γ
                                          
                                          ⊢
                                          
                                          ϕ
                                          (
                                          M
                                          )
                                          
                                          ▹
                                          
                                          Δ
                                       . By applying Lemma 2 to the hypothesis 
                                          M
                                          ↠
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                       , we have 
                                          ϕ
                                          (
                                          M
                                          )
                                          →
                                          ϕ
                                          (
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       . Thus, by Theorem 2, we get 
                                          Θ
                                          ;
                                          Γ
                                          
                                          ⊢
                                          
                                          ϕ
                                          (
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                          
                                          ▹
                                          
                                          
                                             
                                                Δ
                                             
                                             
                                                ′
                                             
                                          
                                        with 
                                          
                                             
                                                Δ
                                             
                                             
                                                ′
                                             
                                          
                                        balanced. Finally, by Definition 7, we have the thesis 
                                          Θ
                                          ;
                                          Γ
                                          
                                          
                                             
                                                ⊢
                                             
                                             
                                                r
                                             
                                          
                                          
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                          
                                          ▹
                                          
                                          
                                             
                                                Δ
                                             
                                             
                                                ′
                                             
                                          
                                       .


                                       
                                          (
                                          ↣
                                          
                                          =
                                          
                                          ⇝
                                          )
                                       . By Property 1, we get that process 
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                        is reachable. Thus, by Definition 6, there exists a program N such that 
                                          Θ
                                          ;
                                          Γ
                                          
                                          ⊢
                                          
                                          ϕ
                                          (
                                          N
                                          )
                                          
                                          ▹
                                          
                                          
                                             
                                                Δ
                                             
                                             
                                                ″
                                             
                                          
                                        with 
                                          
                                             
                                                Δ
                                             
                                             
                                                ″
                                             
                                          
                                        balanced, and 
                                          N
                                          
                                             
                                                ↠
                                             
                                             
                                                ⁎
                                             
                                          
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                       . Now, we can proceed as in case 1, by applying Lemma 2 and Theorem 2 to obtain 
                                          Θ
                                          ;
                                          Γ
                                          
                                          ⊢
                                          
                                          ϕ
                                          (
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                          
                                          ▹
                                          
                                          
                                             
                                                Δ
                                             
                                             
                                                ′
                                             
                                          
                                        with 
                                          
                                             
                                                Δ
                                             
                                             
                                                ′
                                             
                                          
                                        balanced. Again, by Definition 7, we get the thesis. □


                        
                           Lemma 7
                           
                              Let M be a 
                              
                                 
                                    ReS
                                 
                                 π
                                 C
                               
                              process. If 
                              
                                 m
                                 ∈
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                               
                              then m is not reversible.
                           


                        
                           Proof
                           The proof proceeds by contradiction. Suppose that there exists a memory m such that 
                                 m
                                 ∈
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                               and m is reversible. By Definition 9, there exists 
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               such that 
                                 M
                                 
                                    
                                       ⇝
                                    
                                    
                                       +
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                               and 
                                 m
                                 ∉
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             M
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              . We have two cases:
                                 
                                    1.
                                    
                                       
                                          m
                                          =
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          √
                                          (
                                          s
                                          )
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                       : this case is trivial because no rule is able to revert this kind of memory (in fact, the forward rule [Commit] is not paired with a corresponding backward rule). Thus, no process 
                                          
                                             
                                                M
                                             
                                             
                                                ′
                                             
                                          
                                        such that 
                                          m
                                          ∉
                                          
                                             
                                                M
                                             
                                             
                                                
                                                   
                                                      M
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                        can be derived from M, which contradicts the hypothesis.


                                       
                                          m
                                          ≠
                                          〈
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          −
                                          √
                                          (
                                          s
                                          )
                                          →
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                       : since 
                                          m
                                          ∈
                                          
                                             
                                                L
                                             
                                             
                                                M
                                             
                                          
                                       , by Definition 8, there exists a memory 
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                          ∈
                                          
                                             
                                                L
                                             
                                             
                                                M
                                             
                                          
                                        and tag t such that 
                                          t
                                          ∈
                                          
                                             tail
                                          
                                          (
                                          m
                                          )
                                        and 
                                          t
                                          ∈
                                          
                                             head
                                          
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       . To revert m, according to rules [bwcon], [bwcom], [bwlab], and [bwif], for each tag 
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                          ∈
                                          
                                             tail
                                          
                                          (
                                          m
                                          )
                                        a thread tagged by 
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                        must be in parallel with the memory. However, the tag t in 
                                          
                                             tail
                                          
                                          (
                                          m
                                          )
                                        also belongs to 
                                          
                                             head
                                          
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       , meaning that the thread tagged by t (which, we recall, is unique) has been already executed (in fact, data concerning such execution is stored in 
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                       ). Thus, no backward rule can be applied to revert m in one step. The only possibility is to revert 
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                        before. Now, if 
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                        is a commit memory, then we proceed as in case 1, i.e. 
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                        cannot be reverted and, hence, m is not reversible, which is a contradiction. Otherwise, we repeat the same reasoning of case 2 for 
                                          
                                             
                                                m
                                             
                                             
                                                ′
                                             
                                          
                                        and proceed in this way until a commit memory is found. Indeed, this commit memory must exist by construction of 
                                          
                                             
                                                L
                                             
                                             
                                                M
                                             
                                          
                                        (Definition 8, first point). As in case 1, this memory cannot be reverted and, hence, all involved memories, included m, are not reversible, which is a contradiction. □


                        
                           Theorem 6
                           
                              Let M be a 
                              
                                 
                                    ReS
                                 
                                 π
                                 C
                               
                              process and s a session committed in M. Then, all interactions performed along s cannot be reverted.
                           

Since s is committed in M, then there exists a memory m of the form 
                                 〈
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 −
                                 √
                                 (
                                 s
                                 )
                                 →
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 〉
                               such that 
                                 m
                                 ∈
                                 
                                    
                                       M
                                    
                                    
                                       M
                                    
                                 
                              . By Definition 8, 
                                 m
                                 ∈
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                              . Now, we have to prove that all other interactions performed along s corresponds to memories in 
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                              . By linearity of sessions (ensured by the type discipline in Section 6), each interaction in s causally depends on one of the threads produced by the previous interaction along s. Since m corresponds to the last interaction along s (as ensured by rule [Commit] of the type system), m causally depends on all memories corresponding to the interactions along s. Since 
                                 m
                                 ∈
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                              , by Definition 8 (second point), all such memories are included in 
                                 
                                    
                                       L
                                    
                                    
                                       M
                                    
                                 
                              . Thus, by applying Lemma 7, we obtain the thesis.  □

@&#REFERENCES@&#

