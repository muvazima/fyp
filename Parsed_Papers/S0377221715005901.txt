@&#MAIN-TITLE@&#Complexity of routing problems with release dates

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present the Vehicle Routing Problem with Release dates.


                        
                        
                           
                           We study the problem in case of uncapacitated vehicles.


                        
                        
                           
                           We consider two variants: the case single vehicle and the multiple vehicle case.


                        
                        
                           
                           We study the computational complexity of the problems on the star and the line.


                        
                        
                           
                           We prove that all cases are polynomially solvable.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Vehicle routing

Release dates

Computational complexity

@&#ABSTRACT@&#


               
               
                  In this paper we consider a routing problem where uncapacitated vehicles are loaded with goods, requested by the customers, that arrive at the depot over time. The arrival time of a product at the depot is called its release date. We consider two variants of the problem. In the first one a deadline to complete the distribution is given and the total distance traveled is minimized. In the second variant no deadline is given and the total time needed to complete the distribution is minimized. While both variants are in general NP-hard, we show that they can be solved in polynomial time if the underlying graph has a special structure.
               
            

@&#INTRODUCTION@&#

Many carriers consolidate distribution by introducing a distribution center in the vicinity of final customers. Goods that are delivered to the centers usually by trucks are unloaded, sorted, consolidated and delivered to final customers by, usually smaller, trucks that perform routes, each visiting several final customers. A typical example of such distribution system is encountered in fast parcel delivery. Other examples are found in less-than-truckload distribution systems. Also, in the context of city logistics, often goods are consolidated and distribution in the city center is carried out by means of electric vehicles.

Usually, the phase of receiving goods arriving to these centers and the distribution to final customers are decoupled and treated independently from each other. When trucks reach the center, goods are received and temporarily stocked. At a later time, deliveries to final customers are organized. Goods are picked up, loaded into trucks and distributed. The two phases can be handled separately because of inventory that is built in the centers. Due to the pressure towards cost reduction in both inventory and transportation management, third party logistics have grown in number and size. The management of distribution centers is becoming more and more dynamic. Goods arrive at any time during the day, and routes are continuously organized and started for delivery.

The classical vehicle routing problems (see the recent book by Toth & Vigo, 2014) consider situations where the goods to be distributed are all available at the depot at the time the distribution starts. This is true also when time is considered such as in the problems with time windows (see Desaulniers, Madsen, & Ropke, 2014), in the periodic vehicle routing problems (see Francis, Smilowitz, & Tzur, 2008) and in inventory routing problems (see Bertazzi & Speranza, 2013; Coelho, Cordeau, & Laporte, 2013). A vehicle routing problem taking into account time issues recently introduced in the literature is the multi-period vehicle routing problem with due dates (see Archetti, Jabali, & Speranza, 2015) where goods have to be delivered within a certain time period. Also, city logistic problems deals with the distribution of freight over a planning horizon where different means of transportation have to be synchronized (see Crainic, Ricciardi, & Storchi, 2009).

Taking into account the arrival times of goods means considering a more dynamic organization of the distribution. In this case one has to organize the delivery routes with the additional constraint that goods are not all available at the depot at the start of the distribution. The routing problems must consider the additional issue of whether it is better to wait for additional goods to arrive and have a better loaded vehicle, or to start a route of the vehicle with the currently available goods. In the following, we call the arrival time of a product at the depot its release date. Problems with release dates, inspired by real applications, are introduced in Cattaruzza, Absi, and Feillet (2014); Cattaruzza, Absi, Feillet, Guyon, and Libeaut (2013).

Most of the classical vehicle routing problems can be extended to consider release dates. We call this new class Vehicle Routing Problems with release dates (VRP-rd). The classical performance measure in vehicle routing problems is the distance. When release dates are considered, the minimization of the distance is achieved through waiting for all goods to arrive at the depot and solving a classical routing problem. This, however, may mean that the time required to complete the distribution is longer than desired. The completion time becomes a different relevant performance measure. Practical motivations for minimizing the completion time are the willingness to make the drivers available as early as possible for further tasks, the goal of improving the customer service or of avoiding rush hours. Motivations to minimize the distance are more classical and include the minimization of operational costs and related measures, such as pollution.

In this paper we focus on the novelty implied by the presence of release dates and analyze basic problems in the class of VRP-rd where vehicles are uncapacitated (the generalization to capacitated vehicles will be mentioned in the conclusions). As commonly done in routing problems, we assume that the distance traveled coincides with the traveling time. We consider the case where a single vehicle is allowed to perform several trips during the time horizon (say, the day), one after the other, and the case where a fleet of vehicles is limited to a single route each. We consider two different objectives, the minimization of the total traveling distance within a deadline, and the minimization of the completion time, that is the sum the maximum value over all vehicle routes of the sum of traveling time and waiting time. We investigate the computational complexity of the optimization problems when the graph describing the locations of depot and customers has special structures, namely is a star or a line. The star models in an abstract way situations where the depot is at the center of the distribution area, whereas the line situations where customers are all located along a road. These special structures allow us to explore characteristics and properties implied by the presence of the release dates. We will show that, while the problems are in general NP-hard, they can be solved in polynomial time on stars and lines.

The paper is organized as follows. The following section provides the problem definition, summarizes the problem variants we study and summarizes the main contributions of the paper. Section 3 focuses on the Traveling Salesman Problem with release dates while Section 4 deals with the Uncapacitated Vehicle Routing Problem with release dates. Finally, conclusions are drawn in Section 5.

Let 
                        
                           G
                           =
                           (
                           V
                           ,
                           A
                           )
                        
                      be a complete graph. A traveling time and a traveling distance are associated with each arc (i, j) ∈ A. For the sake of simplicity, these two values are assumed identical and are denoted by tij
                     . It is also assumed that the triangle inequality is satisfied. The set of vertices V is composed by vertex 0 which identifies the depot and the set N of customers, with 
                        
                           |
                           N
                           |
                           =
                           n
                        
                     . The release date for customer i ∈ N is denoted by ri, ri
                      ≥ 0. This means that the goods for customer i arrive to the depot at time ri
                     . If goods for customer i are already at the depot at the beginning of the time horizon, because they arrived overnight or earlier, then 
                        
                           
                              r
                              i
                           
                           =
                           0
                        
                     . We consider two different objectives. First, a deadline to complete the distribution is given and we aim at minimizing the total traveling distance. Second, no deadline is given and we aim at minimizing the total time needed to complete the distribution.

We consider two special cases: a case where a single vehicle is allowed to perform several trips during the time horizon (say, the day), one after the other, and a case where an unlimited fleet of vehicles is limited to a single route each. In both cases, capacity constraints are not considered. We call the first case the Traveling Salesman Problem with release dates (TSP-rd) while the second is called the Uncapacitated Vehicle Routing Problem with release dates (UVRP-rd). For each case we consider the two above mentioned variants, where in the first variant the objective is to minimize the total traveling distance in such a way that the distribution is completed within a deadline T. We will refer to these problems as TSP-rd(distance) and UVRP-rd(distance), respectively. In the second variant we minimize the completion time, that is the maximum value over all vehicle routes of the sum of traveling time and waiting time of the vehicle. We refer to these problems as TSP-rd(time) and UVRP-rd(time), respectively. Note that, since we assume that the traveling time and the traveling distance associated with each arc (i, j) are identical, the objective function of the TSP-rd(distance) and the UVRP-rd(distance) corresponds to the minimization of the sum of tij
                      of the arcs traversed. When considering the TSP-rd(time) and the UVRP-rd(time), the objective function minimizes the maximum value over all vehicle routes of the sum of tij
                      of the arcs traversed plus the waiting time at the depot. The waiting time is due to the fact that a vehicle has to wait at the depot until the latest release date of a customer that it is going to serve.

We focus on the study of the above mentioned problems on special graphs, namely the line and the star. The main contribution of this paper is to show that all the studied variants are polynomially solvable on these two special graphs. While the proof is straightforward for some of the cases considered, it is not for the case of the TSP-rd on the line. Tables 1
                      and 2
                      summarize the results that we present in the following sections. We provide a short hint about how the optimal solution is built when the solution of the problem is straightforward, while we refer to the proof provided in the related section when it is not.

In the Traveling Salesman Problem with release dates (TSP-rd) a single vehicle is considered. We study the TSP-rd(distance) and the TSP-rd(time). For both variants, if all release dates are equal to zero, due to the triangle inequality, it is optimal to load all goods on the vehicle and perform a single route. In this case the TSP-rd is equivalent to the TSP. This also implies that the TSP-rd is NP-hard, having the TSP as a special case. Note that if in the general case the deadline is very large, the TSP-rd(distance) becomes equivalent to the TSP, as it is optimal to wait until all goods are available and perform a single TSP tour. This is not true for the TSP-rd(time).

TSP-rd(time) always admits feasible solutions. For the TSP-rd(distance) to have a feasible solution, it must be possible to serve each customer within the deadline, that is a necessary feasibility condition is that 
                        
                           
                              r
                              i
                           
                           +
                           2
                           
                              t
                              
                                 0
                                 i
                              
                           
                           ≤
                           T
                           ,
                        
                     
                     
                        
                           i
                           =
                           1
                           ,
                           …
                           ,
                           n
                        
                     . It is not trivial, however, to guarantee that a feasible solution exists as it depends on the complete set of release dates and on the traveling times. Consider, for example, two customers, with release dates equal to zero. The traveling time from the depot to each customer is equal to 4 and the traveling time between them is equal to 2. Suppose the deadline is 8. It is feasible to serve each customer individually but not to serve both within the deadline.

In the following we consider the special cases of the TSP-rd on the star and on the line. While the solution of both variants of the TSP-rd on the star is straightforward, the variants on the line are more complex and we propose to solve them through dynamic programming.

In this section we consider the special case where graph G is a star, with the depot 0 located at the center of the star. It is easy to see that, whatever are the values of the release dates, the solution is formed by n routes going from the depot to each customer. Thus, the total distance traveled to serve all customers is a constant value equal to ∑
                           i ∈ N
                        2t
                        0i
                         and this corresponds to the value of the optimal solution of the TSP-rd(distance). When considering the TSP-rd(time), as the total traveling time is constant, the minimization of the completion time corresponds to the minimization of the waiting time. Then, the best solution visits each customer in the order of non-decreasing release dates.

In this section we consider the special case where graph G is a line. The depot 0 is located at the point of abscissa 0. The set of customers N is composed of two subsets NL
                         and NR
                         such that customers in NL
                         are on the left side of the line (negative abscissa) and customers in NR
                         on the right side (positive abscissa). We introduce notation 
                           
                              
                                 n
                                 L
                              
                              =
                              
                                 |
                                 
                                    N
                                    L
                                 
                                 |
                              
                           
                         and 
                           
                              
                                 n
                                 R
                              
                              =
                              
                                 |
                                 
                                    N
                                    R
                                 
                                 |
                              
                           
                        . On the right side, customers i (1 ≤ i ≤ nR
                        ) are placed at (positive) abscissa 
                           
                              t
                              i
                              R
                           
                         in non-decreasing order (i < j implies 
                           
                              
                                 t
                                 i
                                 R
                              
                              ≤
                              
                                 t
                                 j
                                 R
                              
                           
                        ). Ties are broken arbitrarily. On the left side, customers i (1 ≤ i ≤ nL
                        ) are placed at (negative) abscissa 
                           
                              t
                              i
                              L
                           
                         in non-increasing order (i < j implies 
                           
                              
                                 t
                                 i
                                 L
                              
                              ≥
                              
                                 t
                                 j
                                 L
                              
                           
                        ). Ties are broken arbitrarily. Traveling times (distances) between customers or between a customer and the depot are set to their (positive) difference in abscissa. Release date for customer i is denoted 
                           
                              r
                              i
                              R
                           
                         if i is on the right side, and 
                           
                              r
                              i
                              L
                           
                         if i is on the left side. However, in order to ease the notation, superscripts R and L will be forgotten on release dates and abscissas when the side on which the customer is located is either clear from the context or not relevant.

Given a solution to any variant of the TSP-rd, we call route a trip starting and ending at the depot and not visiting the depot in between. A solution to the TSP-rd on the line is a sequence of routes R
                        1, R
                        2, …, RX
                        , where X is the total number of routes. In the following, without loss of generality, we assume that the routes are ordered on the basis of their non-decreasing departure time from the depot. Thus, R
                        1 is the first route performed by the vehicle and RX
                         is the last one. We use the notation Ru
                         to indicate the set of customers served by the route. Note that a route cannot contain customers belonging to both sides of the line. We say that a route is on the right if the customers it serves are located on the right side of the line, otherwise the route is said to be on the left.

We investigate the complexity of the TSP-rd(distance) and of the TSP-rd(time) on the line.

For the sake of illustrating the algorithms and the proofs, we use the simple example of a line with two customers on each side depicted in Fig. 1
                        .


                           
                              Property 1
                              
                                 Let us consider two customers i and j on the same side of the line with i < j (and thus |ti
                                 | ≤ |tj
                                 |) such that ri
                                  ≤ rj. An optimal solution to the TSP-rd(distance) and the TSP-rd(time) exists where i and j are in the same route.
                              

Let us consider an optimal solution and the route R in which customer j is served. The departure time of R is not less than rj
                                 . If i is not in this route, it is possible to transfer it to this route (as ri
                                  ≤ rj
                                 ). Furthermore, as i is located in the segment defined by 0 and j, this transfer is done with no additional cost both in terms of completion time and traveled distance. The new solution is not worse and thus optimal.□

A consequence of Property 1 is that the presence of a customer i has no impact on the solution cost as long as there exists another customer j on the same side of the line such that |ti
                           | < |tj
                           | and ri
                            < rj
                           . Thus, in what follows, we consider only instances where ri
                            > rj
                            for i < j on the same side of the line. Therefore, on each side of the line, customers are ordered, starting from the depot and following the line, in non-decreasing order of traveling time from the depot and in non-increasing order of release date.

                              Definition 1
                              We say that a solution to the TSP-rd on the line is basic if the following condition holds:

                                    
                                       (1)
                                       
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         |
                                                      
                                                      
                                                         t
                                                         i
                                                      
                                                      
                                                         |
                                                         ≥
                                                         |
                                                      
                                                      
                                                         t
                                                         j
                                                      
                                                      
                                                         |
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                
                                                
                                                   
                                                      (
                                                      i
                                                      ∈
                                                      
                                                         R
                                                         u
                                                      
                                                      ,
                                                      j
                                                      ∈
                                                      
                                                         R
                                                         
                                                            u
                                                            ′
                                                         
                                                      
                                                      ,
                                                      1
                                                      ≤
                                                      u
                                                      <
                                                      
                                                         u
                                                         ′
                                                      
                                                      ≤
                                                      X
                                                      ,
                                                      u
                                                      
                                                      and
                                                      
                                                      
                                                         u
                                                         ′
                                                      
                                                      
                                                      on
                                                      
                                                      the
                                                      
                                                      same
                                                      
                                                      side
                                                      )
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

Thus, in a basic solution, each route goes on one side of the line, serves a subset of the farthest customers from the depot that have not yet been served by previous routes, and returns to the depot (see Fig. 2
                           ).

                              Property 2
                              
                                 There exists a basic optimal solution to the TSP-rd(time) on the line. If there exists a feasible solution to the TSP-rd(distance) on the line, then there exists an optimal basic solution.
                              

The proof is the same for the TSP-rd(time) and the TSP-rd(distance). In both cases we assume that an optimal solution exists and we assume that this optimal solution s is not basic. We show that we can transform s into a basic solution s′ with the same cost whatever the objective function is (completion time or distance).

If s is not basic, it contains at least a pair of routes on the same side Ru
                                  and 
                                    
                                       R
                                       
                                          u
                                          ′
                                       
                                    
                                  with u < u′ such that Ru
                                  serves a customer i and 
                                    
                                       R
                                       
                                          u
                                          ′
                                       
                                    
                                  serves a customer j with |ti
                                 | < |tj
                                 |. Note that, since i is on the segment between 0 and j, we have ri
                                  > rj
                                 . As the departure time of route 
                                    
                                       R
                                       
                                          u
                                          ′
                                       
                                    
                                  is greater than the departure time of route Ru
                                 , customer i can be moved to route 
                                    
                                       R
                                       
                                          u
                                          ′
                                       
                                    
                                  with no additional cost (neither completion time nor distance). This procedure can be repeated iteratively until condition (1) is satisfied.□

In the following we will prove that the TSP-rd(time) and the TSP-rd(distance) on the line are polynomially solvable.

We solve the problem by dynamic programming. We define a state-space graph that represents the possible states when the vehicle is located at the depot. A state (i, j) indicates that all the vertices with an index higher than i on the right side of the line and with an index higher than j on the left side of the line are visited; furthermore, no other vertices are visited. The set of states with 0 ≤ i ≤ nR
                            and 0 ≤ j ≤ nL
                            defines the nodes of a graph H, where arcs are added to represent the possible transitions between these states. An arc is introduced from a state (i
                           1, j
                           1) to another state (i
                           2, j
                           2) if and only if i
                           2 ≤ i
                           1, j
                           2 ≤ j
                           1 and exactly one of these two inequalities is strict (exactly one thus being an equality).

Note that H is acyclic and that the set of paths connecting state (nR, nL
                           ) to state (0, 0) in H represents the set of basic solutions of the problem. Fig. 3
                            depicts the state-space graph H for the example of Fig. 1 and the path corresponding to the basic solution of Fig. 2.

Thanks to Property 2, we know that at least one basic solution is optimal, that is, one of the paths between states (nR, nL
                           ) and (0, 0) in H represents an optimal solution. In order to find this path, we use the following recursion:

                              
                                 •
                                 
                                    
                                       
                                          f
                                          (
                                          
                                             n
                                             R
                                          
                                          ,
                                          
                                             n
                                             L
                                          
                                          )
                                          =
                                          0
                                          ,
                                       
                                    
                                 


                                    
                                       
                                          
                                             f
                                             R
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          =
                                          
                                             min
                                             
                                                i
                                                <
                                                k
                                                ≤
                                                n
                                             
                                          
                                          
                                             (
                                             max
                                          
                                          
                                             (
                                             f
                                             
                                                (
                                                k
                                                ,
                                                j
                                                )
                                             
                                             ,
                                             
                                                r
                                                
                                                   i
                                                   +
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                             +
                                             2
                                             |
                                          
                                          
                                             t
                                             k
                                          
                                          
                                             |
                                             )
                                          
                                          ,
                                       
                                    
                                 


                                    
                                       
                                          
                                             f
                                             L
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          =
                                          
                                             min
                                             
                                                j
                                                <
                                                l
                                                ≤
                                                n
                                             
                                          
                                          
                                             (
                                             max
                                          
                                          
                                             (
                                             f
                                             
                                                (
                                                i
                                                ,
                                                l
                                                )
                                             
                                             ,
                                             
                                                r
                                                
                                                   j
                                                   +
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                             +
                                             2
                                             |
                                          
                                          
                                             t
                                             l
                                          
                                          
                                             |
                                             )
                                          
                                          ,
                                       
                                    
                                 


                                    
                                       
                                          f
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          =
                                          min
                                          (
                                          
                                             f
                                             R
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ,
                                          
                                             f
                                             L
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          )
                                       
                                    .

In this recursion, fR
                           (i, j) gives the minimum completion time to reach state (i, j) ending with a route on the right, fL
                           (i, j) gives the minimum completion time to reach state (i, j) ending with a route on the left and f(i, j) gives the minimum completion time to reach state (i, j).

                              Theorem 1
                              
                                 The completion time of the best basic solution is given by f(0, 0).
                              

We proceed by induction, showing for each state (i, j) that: (i) a path exists reaching state (i, j) with completion time f(i, j), (ii) no path exists with a smaller completion time. These properties are true for state (nR, nL
                                 ). Let us consider a state (i, j) and assume that they are true for all states before state (i, j) in the topological order of the graph. If the last route performed to reach state (i, j) is on the right, then the completion time cannot be lower than 
                                    
                                       
                                          min
                                          
                                             i
                                             <
                                             k
                                             ≤
                                             n
                                          
                                       
                                       
                                          (
                                          max
                                       
                                       
                                          (
                                          f
                                          
                                             (
                                             k
                                             ,
                                             j
                                             )
                                          
                                          ,
                                          
                                             r
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          )
                                       
                                       
                                          +
                                          2
                                          |
                                       
                                       
                                          t
                                          k
                                       
                                       
                                          |
                                          )
                                       
                                       =
                                       
                                          f
                                          R
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                    
                                 . In fact, if the minimum completion time is lower than fR
                                 (i, j), it means that there exists at least one state (k, j), i < k ≤ n, for which the minimum completion time is lower than f(k, j), and this contradicts the assumption that the statement is true for all states before state (i, j). The same holds for the case where the last route performed to reach state (i, j) is a route on the left. As 
                                    
                                       f
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       =
                                       min
                                       (
                                       
                                          f
                                          R
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ,
                                       
                                          f
                                          L
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       )
                                       ,
                                    
                                  the result holds.□

The optimal solution can be computed in polynomial time by computing values f(i, j) according to the topological order of graph H. Given that the number of state is 
                              
                                 
                                    (
                                    
                                       n
                                       L
                                    
                                    +
                                    1
                                    )
                                 
                                 
                                    (
                                    
                                       n
                                       R
                                    
                                    +
                                    1
                                    )
                                 
                              
                            and that each state is at most connected to 
                              
                                 
                                    n
                                    L
                                 
                                 +
                                 
                                    n
                                    R
                                 
                              
                            predecessor states, the following result holds.

                              Theorem 2
                              
                                 The TSP-rd(time) can be solved in O(n
                                 3).
                              


                           Fig. 4
                            shows the values f(i, j) (underlined) and the optimal ingoing arcs for each state, for the example of Fig. 1. Each arc connecting two states (k, j) and (i, j) is associated with a value equal to 
                              
                                 max
                                 
                                    (
                                    f
                                    
                                       (
                                       k
                                       ,
                                       j
                                       )
                                    
                                    ,
                                    
                                       r
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    )
                                 
                                 +
                                 2
                                 
                                    |
                                    
                                       t
                                       k
                                    
                                    |
                                 
                              
                           . The same for each arc connecting state (i, l) with (i, j). There are two optimal paths that reach state (0, 0). The first one is the following: (2, 2) → (1, 2) → (0, 2) → (0, 0) and corresponds to the solution depicted in Fig. 2. A second optimal path is (2, 2) → (1, 2) → (1, 0) → (0, 0) which corresponds to a solution where the vehicle first performs route R
                           1 of Fig. 2, then route R
                           3 and, finally, route R
                           2.

We solve the problem by dynamic programming. We define the same state-space graph H as in Section 3.2.2. We first define a non-polynomial solution approach and then prove that an efficient dominance rule can be introduced to obtain a polynomial-time complexity.

We first compute the latest allowed arrival time for each state (i, j) in H, i.e., the latest time at which state (i, j) can be reached without violating the deadline T. We compute the latest arrival time by adapting the recursion of Section 3.2.3 and computing recursively the due dates starting from state (0, 0). We denote this value due(i, j) and call it due date hereafter:

                              
                                 •
                                 
                                    
                                       
                                          d
                                          u
                                          e
                                          (
                                          0
                                          ,
                                          0
                                          )
                                          =
                                          T
                                          ,
                                       
                                    
                                 


                                    
                                       
                                          d
                                          u
                                          
                                             e
                                             R
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          =
                                          
                                             max
                                             {
                                             d
                                             u
                                             e
                                             
                                                (
                                                k
                                                ,
                                                j
                                                )
                                             
                                             −
                                             2
                                             |
                                          
                                          
                                             t
                                             i
                                          
                                          
                                             |
                                             ,
                                             
                                             for
                                             
                                             0
                                             ≤
                                             k
                                             <
                                             i
                                             
                                             such
                                             
                                             that
                                             
                                          
                                          
                                             r
                                             
                                                k
                                                +
                                                1
                                             
                                          
                                          
                                             ≤
                                             d
                                             u
                                             e
                                             
                                                (
                                                k
                                                ,
                                                j
                                                )
                                             
                                             −
                                             2
                                             |
                                          
                                          
                                             t
                                             i
                                          
                                          
                                             |
                                             }
                                          
                                       
                                     (
                                       
                                          −
                                          ∞
                                       
                                     if 
                                       
                                          
                                             r
                                             
                                                k
                                                +
                                                1
                                             
                                          
                                          >
                                          d
                                          u
                                          e
                                          
                                             (
                                             k
                                             ,
                                             j
                                             )
                                          
                                       
                                     for all 0 ≤ k < i),


                                    
                                       
                                          d
                                          u
                                          
                                             e
                                             L
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          =
                                          
                                             max
                                             {
                                             d
                                             u
                                             e
                                             
                                                (
                                                i
                                                ,
                                                l
                                                )
                                             
                                             −
                                             2
                                             |
                                          
                                          
                                             t
                                             j
                                          
                                          
                                             |
                                             
                                             for
                                             
                                             0
                                             ≤
                                             l
                                             <
                                             j
                                             
                                             such
                                             
                                             that
                                             
                                          
                                          
                                             r
                                             
                                                l
                                                +
                                                1
                                             
                                          
                                          
                                             ≤
                                             d
                                             u
                                             e
                                             
                                                (
                                                i
                                                ,
                                                l
                                                )
                                             
                                             −
                                             2
                                             |
                                          
                                          
                                             t
                                             j
                                          
                                          
                                             |
                                             }
                                          
                                       
                                     (
                                       
                                          −
                                          ∞
                                       
                                     if 
                                       
                                          
                                             r
                                             
                                                l
                                                +
                                                1
                                             
                                          
                                          >
                                          d
                                          u
                                          e
                                          
                                             (
                                             i
                                             ,
                                             l
                                             )
                                          
                                       
                                     for all 0 ≤ l < j),


                                    
                                       
                                          d
                                          u
                                          e
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          =
                                          max
                                          (
                                          d
                                          u
                                          
                                             e
                                             R
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ,
                                          d
                                          u
                                          
                                             e
                                             L
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          )
                                       
                                    .

Note that when 
                              
                                 
                                    r
                                    
                                       k
                                       +
                                       1
                                    
                                 
                                 >
                                 d
                                 u
                                 e
                                 
                                    (
                                    k
                                    ,
                                    j
                                    )
                                 
                              
                            then state (k, j) is not a feasible state as the latest arrival time at which this state could be reached (and thus all locations from 
                              
                                 k
                                 +
                                 1
                              
                            to nR
                            on the right and from 
                              
                                 j
                                 +
                                 1
                              
                            to nL
                            on the left are visited) is lower than the release date of 
                              
                                 k
                                 +
                                 1
                              
                           . The same happens when 
                              
                                 
                                    r
                                    
                                       l
                                       +
                                       1
                                    
                                 
                                 >
                                 d
                                 u
                                 e
                                 
                                    (
                                    i
                                    ,
                                    l
                                    )
                                 
                              
                           .

                              Theorem 3
                              
                                 The TSP-rd(distance) admits a feasible solution if and only if
                                 
                                    
                                       d
                                       u
                                       e
                                       (
                                       
                                          n
                                          R
                                       
                                       ,
                                       
                                          n
                                          L
                                       
                                       )
                                       ≠
                                       −
                                       ∞
                                    
                                 
                                 .
                              

With a proof similar to the one used for Theorem 1, we can show that due(nR, nL
                                 ) gives the latest arrival time at state (nR, nL
                                 ). When 
                                    
                                       d
                                       u
                                       e
                                       (
                                       
                                          n
                                          R
                                       
                                       ,
                                       
                                          n
                                          L
                                       
                                       )
                                       =
                                       −
                                       ∞
                                       ,
                                    
                                  we have that 
                                    
                                       d
                                       u
                                       
                                          e
                                          R
                                       
                                       
                                          (
                                          
                                             n
                                             R
                                          
                                          ,
                                          
                                             n
                                             L
                                          
                                          )
                                       
                                       =
                                       d
                                       u
                                       
                                          e
                                          L
                                       
                                       
                                          (
                                          
                                             n
                                             R
                                          
                                          ,
                                          
                                             n
                                             L
                                          
                                          )
                                       
                                       =
                                       −
                                       ∞
                                       ,
                                    
                                  i.e., 
                                    
                                       
                                          r
                                          
                                             k
                                             +
                                             1
                                          
                                       
                                       >
                                       d
                                       u
                                       e
                                       
                                          (
                                          k
                                          ,
                                          j
                                          )
                                       
                                    
                                  for all 0 ≤ k < nR
                                  and 
                                    
                                       
                                          r
                                          
                                             l
                                             +
                                             1
                                          
                                       
                                       >
                                       d
                                       u
                                       e
                                       
                                          (
                                          i
                                          ,
                                          l
                                          )
                                       
                                    
                                  for all 0 ≤ l < nL
                                 . This means that state (nR, nL
                                 ) cannot be reached on time. Moreover, when the TSP-rd(distance) has a feasible solution, this means that the state (nR, nL
                                 ) can be reached on time. This implies that due(nR, nL
                                 ) is greater than or equal to 0.□


                           Fig. 5
                            illustrates the computation of due dates on the example of Fig. 1 with 
                              
                                 T
                                 =
                                 55
                              
                           .


                              Section 3.2.2 describes a polynomial time procedure which can be used to check whether the TSP-rd(distance) admits a feasible solution. In fact, we can solve the TSP-rd(time) to calculate the minimum completion time needed to serve all customers. If the minimum completion time is not greater than T, then the TSP-rd(distance) admits a feasible solution, otherwise the problem is infeasible. Thus, in the following we assume that the problem is feasible.

Every basic solution can be represented by a path connecting state (nR, nL
                              ) to state (0, 0) in H. Note that the opposite is not true as some paths do not correspond to a feasible solution. As we know that there exists an optimal basic solution, we know that one of the feasible paths in H represents an optimal solution. We compute this path with a labeling procedure.

Let us define a label L as a quadruplet 
                                 
                                    L
                                    =
                                    (
                                    i
                                    ,
                                    j
                                    ,
                                    d
                                    ,
                                    τ
                                    )
                                 
                               where (i, j) is the state associated with the label, d is its distance and τ its duration. Note that, as we assume that the traveling distance and the traveling time associated with each arc are identical, the distance corresponds to the total traveling time while the duration is the sum of the traveling time plus the waiting time. The distance and duration represent the accumulated distance and duration of the sequence of routes that are performed to reach state (i, j). Note that different labels can be associated with the same state, with different distances and durations, as different sequences of routes can be used to attain this state.

The labeling procedure starts by labeling state (nR, nL
                              ) with a single label (nR, nL
                              , 0, 0). The procedure then consists in selecting the nodes of graph H in topological order and extending all the labels associated with a node to all the neighbors of this node. The extension rule for a label is defined as follows.

Let 
                                 
                                    
                                       L
                                       1
                                    
                                    =
                                    
                                       (
                                       
                                          i
                                          1
                                       
                                       ,
                                       
                                          j
                                          1
                                       
                                       ,
                                       
                                          d
                                          1
                                       
                                       ,
                                       
                                          τ
                                          1
                                       
                                       )
                                    
                                 
                               be a label of state (i
                              1, j
                              1) and (i
                              2, j
                              2) a successor of (i
                              1, j
                              1) in H. If i
                              2 < i
                              1 (and 
                                 
                                    
                                       j
                                       2
                                    
                                    =
                                    
                                       j
                                       1
                                    
                                 
                              ), the extension of L
                              1 to (i
                              2, j
                              2) results in a label 
                                 
                                    
                                       L
                                       2
                                    
                                    =
                                    
                                       (
                                       
                                          i
                                          2
                                       
                                       ,
                                       
                                          j
                                          2
                                       
                                       ,
                                       
                                          d
                                          2
                                       
                                       ,
                                       
                                          τ
                                          2
                                       
                                       )
                                    
                                 
                               with 
                                 
                                    
                                       d
                                       2
                                    
                                    =
                                    
                                       d
                                       1
                                    
                                    +
                                    2
                                    
                                       |
                                       
                                          t
                                          
                                             i
                                             1
                                          
                                       
                                       |
                                    
                                 
                               and 
                                 
                                    
                                       τ
                                       2
                                    
                                    =
                                    max
                                    
                                       (
                                       
                                          τ
                                          1
                                       
                                       ,
                                       
                                          r
                                          
                                             
                                                i
                                                2
                                             
                                             +
                                             1
                                          
                                       
                                       )
                                    
                                    +
                                    2
                                    
                                       |
                                       
                                          t
                                          
                                             i
                                             1
                                          
                                       
                                       |
                                    
                                 
                              . If τ
                              2 exceeds due(i
                              2, j
                              2), label L
                              2 is discarded. If j
                              2 < j
                              1 (and 
                                 
                                    
                                       i
                                       2
                                    
                                    =
                                    
                                       i
                                       1
                                    
                                 
                              ), the extension of L
                              1 to (i
                              2, j
                              2) results in a label 
                                 
                                    
                                       L
                                       2
                                    
                                    =
                                    
                                       (
                                       
                                          i
                                          2
                                       
                                       ,
                                       
                                          j
                                          2
                                       
                                       ,
                                       
                                          d
                                          2
                                       
                                       ,
                                       
                                          τ
                                          2
                                       
                                       )
                                    
                                 
                               with 
                                 
                                    
                                       d
                                       2
                                    
                                    =
                                    
                                       d
                                       1
                                    
                                    +
                                    2
                                    
                                       |
                                       
                                          t
                                          
                                             j
                                             1
                                          
                                       
                                       |
                                    
                                 
                               and 
                                 
                                    
                                       τ
                                       2
                                    
                                    =
                                    max
                                    
                                       (
                                       
                                          τ
                                          1
                                       
                                       ,
                                       
                                          r
                                          
                                             
                                                j
                                                2
                                             
                                             +
                                             1
                                          
                                       
                                       )
                                    
                                    +
                                    2
                                    
                                       |
                                       
                                          t
                                          
                                             j
                                             1
                                          
                                       
                                       |
                                    
                                 
                              . If τ
                              2 exceeds due(i
                              2, j
                              2), label L
                              2 is discarded.

Applying this extension rule, the set of labels reaching state (0, 0) represents the set of basic solutions and d represents the distance traveled. Thus, the optimal solution is the one associated with the label with minimum distance. However, as many as O(T) labels can be associated with each node and the procedure is not polynomial. Fig. 6
                               shows the first two iterations of the procedure on the example of Fig. 1. Note that label (2, 1, 16, 26) associated with state (2, 1) in the graph representing the first iteration of the procedure is discarded as the duration, which is 26, is greater than the due date of state (2, 1) which is 25.

We now show how the algorithm described above can be modified to become polynomial. The modification relies on the following property.

                                 Property 3
                                 
                                    Let two labels
                                    
                                       
                                          
                                             L
                                             1
                                          
                                          =
                                          
                                             (
                                             i
                                             ,
                                             j
                                             ,
                                             
                                                d
                                                1
                                             
                                             ,
                                             
                                                τ
                                                1
                                             
                                             )
                                          
                                       
                                     
                                    and
                                    
                                       
                                          
                                             L
                                             2
                                          
                                          =
                                          
                                             (
                                             i
                                             ,
                                             j
                                             ,
                                             
                                                d
                                                2
                                             
                                             ,
                                             
                                                τ
                                                2
                                             
                                             )
                                          
                                       
                                     
                                    be associated with the same state (i, j) with d
                                    1 < d
                                    2. L
                                    2 
                                    can be eliminated without loss of optimality.
                                 

We prove that there exists a path obtained by extending the path associated with label L
                                    1 till the final state (0, 0) whose distance is lower than or equal to the distance of any path obtained by extending the path associated with label L
                                    2.

If τ
                                    1 ≤ τ
                                    2, L
                                    2 is trivially dominated. Thus, let us assume τ
                                    2 < τ
                                    1.

We introduce the following notation. We denote by P the path associated with a label L. P
                                    1 and P
                                    2 are the paths associated with labels L
                                    1 and L
                                    2, respectively. Let P
                                    → (0, 0) be the best feasible path that extends path P associated with label L till the final state (0, 0) (note that a feasible extension always exists since labels satisfy due dates). We denote as P
                                    (i, j) → (0, 0) the part of path P
                                    → (0, 0) that goes from state (i, j) to state (0, 0). Let P⊕P′ be the concatenation of two paths P and P′ for which the final node of P coincides with the first node of P′. Then, 
                                       
                                          
                                             P
                                             
                                                →
                                                (
                                                0
                                                ,
                                                0
                                                )
                                             
                                          
                                          =
                                          P
                                          ⊕
                                          
                                             P
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                →
                                                (
                                                0
                                                ,
                                                0
                                                )
                                             
                                          
                                       
                                    . We finally denote as d(P) the distance of a path and τ(P) the completion time of a path starting at state (nR, nL
                                    ) (extended from label (nR, nL
                                    , 0, 0)).

Given that d
                                    1 < d
                                    2, we will show that 
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          ≥
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    . We introduce path 
                                       
                                          
                                             
                                                P
                                                ¯
                                             
                                             1
                                          
                                          =
                                          
                                             P
                                             1
                                          
                                          ⊕
                                          
                                             P
                                             2
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                →
                                                (
                                                0
                                                ,
                                                0
                                                )
                                             
                                          
                                       
                                    . For the sake of clarity, Fig. 7
                                     depicts the paths used in the proof.

Let us first consider the case where the extension of L
                                    1 in 
                                       
                                          
                                             P
                                             ¯
                                          
                                          1
                                       
                                     does not imply additional waiting times. In this case, we will show that:

                                       
                                          1.
                                          if 
                                                
                                                   
                                                      P
                                                      ¯
                                                   
                                                   1
                                                
                                              is feasible, then it is better than 
                                                
                                                   P
                                                   2
                                                   
                                                      →
                                                      (
                                                      0
                                                      ,
                                                      0
                                                      )
                                                   
                                                
                                             ;

if 
                                                
                                                   
                                                      P
                                                      ¯
                                                   
                                                   1
                                                
                                              is infeasible, the distance of the path 
                                                
                                                   P
                                                   1
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                      →
                                                      (
                                                      0
                                                      ,
                                                      0
                                                      )
                                                   
                                                
                                              is lower than the distance of 
                                                
                                                   P
                                                   2
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                      →
                                                      (
                                                      0
                                                      ,
                                                      0
                                                      )
                                                   
                                                
                                             .

Let us prove case 1. We have 
                                       
                                          d
                                          
                                             (
                                             
                                                
                                                   P
                                                   ¯
                                                
                                                1
                                             
                                             )
                                          
                                          =
                                          
                                             d
                                             1
                                          
                                          +
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    . As 
                                       
                                          
                                             d
                                             1
                                          
                                          +
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          <
                                          
                                             d
                                             2
                                          
                                          +
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          =
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          ,
                                       
                                     then 
                                       
                                          
                                             P
                                             ¯
                                          
                                          1
                                       
                                     is better than 
                                       
                                          P
                                          2
                                          
                                             →
                                             (
                                             0
                                             ,
                                             0
                                             )
                                          
                                       
                                    . As 
                                       
                                          P
                                          1
                                          
                                             →
                                             (
                                             0
                                             ,
                                             0
                                             )
                                          
                                       
                                     is better than 
                                       
                                          
                                             P
                                             ¯
                                          
                                          1
                                       
                                     by definition, we conclude that 
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          ≤
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    .

Let us now move to case 2. By combining the following assertions:

                                       
                                          •
                                          
                                             
                                                
                                                   τ
                                                   
                                                      (
                                                      
                                                         P
                                                         1
                                                         
                                                            →
                                                            (
                                                            0
                                                            ,
                                                            0
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                   ≥
                                                   
                                                      τ
                                                      1
                                                   
                                                   +
                                                   d
                                                   
                                                      (
                                                      
                                                         P
                                                         1
                                                         
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                            →
                                                            (
                                                            0
                                                            ,
                                                            0
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                             ;


                                             
                                                
                                                   τ
                                                   
                                                      (
                                                      
                                                         P
                                                         1
                                                         
                                                            →
                                                            (
                                                            0
                                                            ,
                                                            0
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                   <
                                                   τ
                                                   
                                                      (
                                                      
                                                         
                                                            P
                                                            ¯
                                                         
                                                         1
                                                      
                                                      )
                                                   
                                                
                                              (that holds because 
                                                
                                                   P
                                                   1
                                                   
                                                      →
                                                      (
                                                      0
                                                      ,
                                                      0
                                                      )
                                                   
                                                
                                              is feasible and 
                                                
                                                   
                                                      P
                                                      ¯
                                                   
                                                   1
                                                
                                              is not);


                                             
                                                
                                                   τ
                                                   
                                                      (
                                                      
                                                         
                                                            P
                                                            ¯
                                                         
                                                         1
                                                      
                                                      )
                                                   
                                                   =
                                                   
                                                      τ
                                                      1
                                                   
                                                   +
                                                   d
                                                   
                                                      (
                                                      
                                                         P
                                                         2
                                                         
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                            →
                                                            (
                                                            0
                                                            ,
                                                            0
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                              (as there is no waiting time while extending L
                                             1 to 
                                                
                                                   
                                                      P
                                                      ¯
                                                   
                                                   1
                                                
                                             );

we obtain that 
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          ≤
                                          τ
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          −
                                          
                                             τ
                                             1
                                          
                                          <
                                          τ
                                          
                                             (
                                             
                                                
                                                   P
                                                   ¯
                                                
                                                1
                                             
                                             )
                                          
                                          −
                                          
                                             τ
                                             1
                                          
                                          =
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    . Finally, as 
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          =
                                          
                                             d
                                             1
                                          
                                          +
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          ,
                                       
                                    
                                    
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          =
                                          
                                             d
                                             2
                                          
                                          +
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                     and d
                                    1 < d
                                    2, we have 
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          <
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    .

Let us now consider the second case, when the extension of L
                                    1 in 
                                       
                                          
                                             P
                                             ¯
                                          
                                          1
                                       
                                     implies additional waiting times. The basic idea is to show that, as additional waiting time will happen when extending L
                                    1 with 
                                       
                                          
                                             P
                                             2
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                →
                                                (
                                                0
                                                ,
                                                0
                                                )
                                             
                                          
                                          ,
                                       
                                     the advantage of L
                                    2 compared to L
                                    1, that is τ
                                    2 < τ
                                    1, will be lost.

We denote as 
                                       
                                          P
                                          1
                                          
                                             n
                                             w
                                             t
                                          
                                       
                                     the maximal subpath of 
                                       
                                          P
                                          2
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                             →
                                             (
                                             0
                                             ,
                                             0
                                             )
                                          
                                       
                                     starting at node (i, j) and such that 
                                       
                                          
                                             P
                                             1
                                          
                                          ⊕
                                          
                                             P
                                             1
                                             
                                                n
                                                w
                                                t
                                             
                                          
                                       
                                     does not imply waiting time after (i, j). We consider the state following the last node of 
                                       
                                          P
                                          1
                                          
                                             n
                                             w
                                             t
                                          
                                       
                                     in 
                                       
                                          P
                                          1
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                             →
                                             (
                                             0
                                             ,
                                             0
                                             )
                                          
                                       
                                     and 
                                       
                                          P
                                          1
                                          
                                             w
                                             t
                                          
                                       
                                     the path obtained by extending 
                                       
                                          P
                                          1
                                          
                                             n
                                             w
                                             t
                                          
                                       
                                     to this state. Without loss of generality, assume that this state is reached with a route on the right. We denote as (k, j) this state. Let us finally recall that d
                                    1 < d
                                    2 and τ
                                    2 < τ
                                    1.

Waiting time at state (k, j) implies that the vehicle has to wait for the release time of location 
                                       
                                          k
                                          +
                                          1
                                          ,
                                       
                                     thus 
                                       
                                          τ
                                          
                                             (
                                             
                                                P
                                                1
                                             
                                             ⊕
                                             
                                                P
                                                1
                                                
                                                   w
                                                   t
                                                
                                             
                                             )
                                          
                                          =
                                          
                                             r
                                             
                                                k
                                                +
                                                1
                                             
                                          
                                       
                                    . Considering 
                                       
                                          
                                             P
                                             2
                                          
                                          ⊕
                                          
                                             P
                                             2
                                             
                                                w
                                                t
                                             
                                          
                                       
                                     either we have 
                                       
                                          τ
                                          
                                             (
                                             
                                                P
                                                2
                                             
                                             ⊕
                                             
                                                P
                                                2
                                                
                                                   w
                                                   t
                                                
                                             
                                             )
                                          
                                          =
                                          
                                             r
                                             
                                                k
                                                +
                                                1
                                             
                                          
                                       
                                     or 
                                       
                                          τ
                                          
                                             (
                                             
                                                P
                                                2
                                             
                                             ⊕
                                             
                                                P
                                                2
                                                
                                                   w
                                                   t
                                                
                                             
                                             )
                                          
                                          >
                                          
                                             r
                                             
                                                k
                                                +
                                                1
                                             
                                          
                                       
                                    . Thus, we have 
                                       
                                          τ
                                          
                                             (
                                             
                                                P
                                                1
                                             
                                             ⊕
                                             
                                                P
                                                1
                                                
                                                   w
                                                   t
                                                
                                             
                                             )
                                          
                                          ≤
                                          τ
                                          
                                             (
                                             
                                                P
                                                2
                                             
                                             ⊕
                                             
                                                P
                                                2
                                                
                                                   w
                                                   t
                                                
                                             
                                             )
                                          
                                       
                                    . If we continue with the extension of both paths until state (0, 0), we obtain 
                                       
                                          τ
                                          
                                             (
                                             
                                                P
                                                1
                                             
                                             ⊕
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          ≤
                                          τ
                                          
                                             (
                                             
                                                P
                                                2
                                             
                                             ⊕
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          =
                                          τ
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    . Furthermore, 
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                             
                                             ⊕
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          <
                                          
                                             d
                                             2
                                          
                                          +
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          =
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    . Path 
                                       
                                          
                                             P
                                             1
                                          
                                          ⊕
                                          
                                             P
                                             2
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                →
                                                (
                                                0
                                                ,
                                                0
                                                )
                                             
                                          
                                       
                                     is thus feasible and better than 
                                       
                                          P
                                          2
                                          
                                             →
                                             (
                                             0
                                             ,
                                             0
                                             )
                                          
                                       
                                    . As 
                                       
                                          P
                                          1
                                          
                                             →
                                             (
                                             0
                                             ,
                                             0
                                             )
                                          
                                       
                                     is better than 
                                       
                                          
                                             P
                                             1
                                          
                                          ⊕
                                          
                                             P
                                             2
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                →
                                                (
                                                0
                                                ,
                                                0
                                                )
                                             
                                          
                                          ,
                                       
                                     we obtain that 
                                       
                                          d
                                          
                                             (
                                             
                                                P
                                                1
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                          <
                                          d
                                          
                                             (
                                             
                                                P
                                                2
                                                
                                                   →
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    .□

Thanks to this property, we can apply the labeling algorithm keeping only labels of minimum distance at each node. This provides a polynomial-time algorithm to solve the TSP-rd(distance). Given that the number of states is 
                                 
                                    
                                       (
                                       
                                          n
                                          L
                                       
                                       +
                                       1
                                       )
                                    
                                    
                                       (
                                       
                                          n
                                          R
                                       
                                       +
                                       1
                                       )
                                    
                                 
                               and that each state is at most connected to 
                                 
                                    
                                       n
                                       L
                                    
                                    +
                                    
                                       n
                                       R
                                    
                                 
                               successors, the following result holds.

                                 Theorem 4
                                 
                                    The TSP-rd(distance) can be solved in O(n
                                    3).
                                 

In the Uncapacitated Vehicle Routing Problem with release dates (UVRP-rd) an unlimited fleet of vehicles is considered. Each vehicle can perform a single route at most. We study the UVRP-rd(time) and the UVRP-rd(distance). We recall that in the UVRP-rd(time) the objective is to minimize the maximum completion time over all vehicle routes.

Note that, as the fleet is unlimited, assuming that a vehicle can perform one route at most does not change the definition of the problem. This assumption is introduced to better match the definitions commonly used in vehicle routing problems and to prepare for further extensions, such as for the case with a limited fleet of capacitated vehicles.

The UVRP-rd(distance) is NP-hard, having the TSP as a special case when all the release dates are equal to zero. This follows by observing that, thanks to the triangle inequality, the optimal solution of the UVRP-rd(distance) will use a single vehicle in this case.

In the UVRP-rd(time), as the fleet is unlimited, we can assign one customer per vehicle. At the release date of a customer, the assigned vehicle starts the route, delivers the goods to the customer and returns at the depot. This solution minimizes the completion time of all deliveries. Then, the problem is polynomially solvable. Furthermore, when the graph is a star, as in the case of the TSP-rd, the total traveling distance is a constant value equal to ∑
                        i ∈ N
                     2t
                     0i
                      which is the value of the optimal solution of the UVRP-rd(distance). Thus, the only case that remains to be studied is the UVRP-rd(distance) on the line which is analyzed in the following section.

We now consider the UVRP-rd with customers located on a line. The depot is located at the point of abscissa 0 and we use the notation introduced in Section 3.2. We first notice that Property 1 still holds. Consequently, the presence of a customer i has no impact on the solution value as long as there exists another customer j on the same side of the line such that |ti
                        | < |tj
                        | and ri
                         < rj
                        . Thus, we assume, without loss of generality, that ri
                         > rj
                         for i < j. Moreover, as done for the TSP-rd, we assume that the routes are ordered on the basis of their non-decreasing departure time from the depot. Given this order, Property 2 is still valid. Thus, if there is a feasible solution to the UVRP-rd(distance), then there exists an optimal basic solution. Note that, in order to check whether a feasible solution exists, it is sufficient to verify that 
                           
                              
                                 r
                                 i
                              
                              +
                              2
                              
                                 |
                                 
                                    t
                                    i
                                 
                                 |
                              
                              <
                              T
                           
                         as the fleet is unlimited. Finally, an optimal solution exists such that each vehicle performs a route that visits customers on the right side of the line only or the left only. Also, the departure time of each route is independent from the departure time of the other routes. Thus, the problem can be decomposed in two subproblems: the right problem, i.e., the problem of serving the customers on the right side of the line, and the left problem, i.e., the problem of serving the customers on the left side of the line.

We now propose Algorithm 1
                         to solve the right problem which can be also used to solve the left problem. We define by 
                           R
                         the set of routes, k the index of the farthest customer (on the right) not served by the routes in 
                           R
                         and Ru
                         the set of customers served by the current route.

Note that Algorithm 1 has complexity O(n
                        2) as the number of created routes may be as large as the number of customers and for each new route the algorithm explores the possibility of including the remaining customers.

                           Theorem 5
                           
                              The UVRP-rd(distance) on the line is solvable in time O(n
                              2). An optimal solution is provided by 
                              
                                 Algorithm 1
                              
                              .
                           

Let us suppose that there exists an optimal solution s′ with a cost which is lower than the cost of solution s given by Algorithm 1. Thanks to Property 2, we can assume that solution s′ is a basic solution. Without loss of generality, we can assume that each route in s′ departs from the depot as late as possible, i.e., at time 
                                 
                                    
                                       T
                                       −
                                       2
                                       |
                                    
                                    
                                       t
                                       k
                                    
                                    
                                       |
                                    
                                 
                               where k is the farthest customer visited in the route. Let us consider the first route Ru
                              (s′) in s′ which is different from the corresponding route Ru
                              (s) in s. As routes 
                                 
                                    1
                                    ,
                                    …
                                    ,
                                    u
                                    −
                                    1
                                 
                               are identical in s and s′, the farthest customer served in Ru
                              (s) is the farthest customer served in Ru
                              (s′). Let us denote this customer by ku
                              . Note that the fact that route Ru
                              (s) serves all customers i for which 
                                 
                                    
                                       r
                                       i
                                    
                                    ≤
                                    T
                                    −
                                    2
                                    
                                       |
                                       
                                          t
                                          
                                             k
                                             u
                                          
                                       
                                       |
                                    
                                 
                               implies that route Ru
                              (s′) serves a subset of customers served by route Ru
                              (s). Customers in Ru
                              (s) and not in Ru
                              (s′) can be moved from routes 
                                 
                                    
                                       R
                                       
                                          u
                                          ′
                                       
                                    
                                    
                                       (
                                       
                                          s
                                          ′
                                       
                                       )
                                    
                                 
                               with u′ > u to Ru
                              (s′) with no additional cost. This procedure can be repeated iteratively for all routes in s′. We obtain a solution which is identical to s, thus reaching a contradiction.□

The major contribution of this paper is the analysis of basic routing problems where products to be distributed arrive at the depot at different times. The presence of release dates implies that completion time becomes a relevant performance measure. One may be interested in minimizing the total distribution time or in minimizing the distance traveled, provided the distribution is completed within a deadline. We have shown that the uncapacitated problems, with one vehicle that can perform different routes or an unlimited fleet of vehicles where each vehicle can perform one route only, can be solved in polynomial time when the underlying graph is a star or a line. The analysis has brought to light important characteristics of the routing problems with release dates.

A natural extension of the problem is the case where vehicles are capacitated. None of the optimal solutions constructed for the four problems investigated on the star involves trips with more than one customer. For this reason, it can be trivially deduced that the polynomial-time complexity still holds with capacitated vehicles. This is also true for the UVRP-rd(time) on the line. Regarding the three remaining cases on the line – the TSP-rd(time), the TSP-rd(distance) and the UVRP-rd(distance) – it can be easily proved that they are NP-hard. Briefly, the basic argument is the following. By considering instances where the distance between the depot and the customers is large, the number of trips needs to be minimal in optimal solutions. Therefore, an optimal packing of the customers into trips (or routes) is needed. As the Bin Packing Problem is NP-hard, we conclude that all three problems are NP-hard.

As the class of routing problems with release dates is new, several research directions remain open. We mention here only the directions closely related to the content of this paper. The algorithmic solution of the problems studied merits investigation. Also, as variants of the problems studied in this paper one might consider a deadline specific for each customer, or to replace release dates with time intervals during which goods will arrive.

@&#REFERENCES@&#

