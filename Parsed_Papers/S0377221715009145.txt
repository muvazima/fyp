@&#MAIN-TITLE@&#An effective co-evolutionary artificial bee colony algorithm for steelmaking-continuous casting scheduling

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We study a new steelmaking-continuous casting scheduling problem.


                        
                        
                           
                           The problem is modeled as a combination of a charge scheduling and a cast scheduling.


                        
                        
                           
                           A cooperative co-evolutionary artificial bee colony (CCABC) algorithm is presented.


                        
                        
                           
                           The effectiveness of the CCABC is demonstrated by extensive experiments.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Scheduling

Hybrid flowshop

Parallel machine scheduling

Artificial bee colony

Cooperative co-evolution

@&#ABSTRACT@&#


               
               
                  This paper addresses a new steelmaking-continuous casting (SCC) scheduling problem from iron and steel production processing. We model the problem as a combination of two coupled sub-problems. One sub-problem is a charge scheduling problem in a hybrid flowshop, and the other is a cast scheduling problem in parallel machines. To solve this SCC problem, we present a novel cooperative co-evolutionary artificial bee colony (CCABC) algorithm that has two sub-swarms, with each addressing a sub-problem. Problem-specific knowledge is used to construct an initial population, and an exploration strategy is introduced to guide the CCABC to promising regions during the search. To adapt the search operators in the classical artificial bee colony (ABC) to the cooperative co-evolution paradigm, an enhanced strategy for onlookers and a self-adaptive neighbourhood operator have been suggested. Extensive experiments based on both synthetic and real-world instances from an SCC process show the effectiveness of the proposed CCABC in solving the SCC scheduling problem.
               
            

@&#INTRODUCTION@&#

There has been growing interest in solving real-world scheduling problems in recent years (Tang, Guan, & Hu, 2010). This paper considers a realistic and typical scheduling problem that integrates a charge scheduling problem in a hybrid flowshop and a cast scheduling problem in parallel machines. The problem is found in a very important industrial process of the world economy, which is the steelmaking-continuous casting (SCC) process. The SCC process includes three consecutive production stages, namely steelmaking, refining, and continuous casting, and it is usually the bottleneck in iron and steel production (Tang, Liu, Rong, & Yang, 2001, Tang, Wang, & Chen, 2014). Effective scheduling methods for the SCC process are crucial to improving the productivity of the modern iron and steel industry (Chang, Chang, & Hong, 2000, Cowling and Rezig 2000, Tang, Liu, Rong, & Yang, 2000, Tang, Lub, Liu, & Fang, 2002).

SCC scheduling is known to be one of the most difficult industrial scheduling problems. Researchers and practitioners have approached SCC scheduling problems mostly by mathematical programming and artificial intelligence (Pacciarelli & Pranzo, 2004). For mathematical programming methods, Tang et al. (2002) presented a combination of Lagrangian relaxation, dynamic programming and heuristics for an SCC problem, to ensure continuity of the production process and just-in-time delivery of the final products. Bellabdaoui and Teghem (2006) presented a mixed-integer programming model to minimize the total completion time of the sequences for scheduling an SCC process with two parallel machines at each stage in Arcelor Group in Liege, Belgium. Xuan and Tang (2007) established an integer programming model and presented a batch decoupling based on a Lagrangian relaxation algorithm for an SCC scheduling problem, to minimize a given criterion with respect to the completion time. Missbauer, Hauber, and Stadler (2009) introduced a computerized scheduling system for an SCC process from a steel plant in Austria, where a schedule is improved by a linear programming model. Sun and Wang (2013) proposed a scheduling method that consists of an equipment assignment algorithm based on a dynamic programming technique and a conflict elimination algorithm based on a linear programming technique, to guarantee that the charges are continuously processed on the same caster. Recently, Mao , Pan, Pang, and Chai (2014a) studied an SCC scheduling problem for minimizing the total weighted earliness/tardiness penalties and job waiting and presented a Lagrangian relaxation approach while relaxing the machine capacity constraints. Mao , Pan, Pang, and Chai (2014b) addressed an SCC rescheduling problem with machine break-down and processing time variations and developed a time-index formulation and an effective Lagrangian relaxation approach with machine capacity relaxation.

Using artificial intelligence methods, Pacciarelli and Pranzo (2004) formulated the scheduling of stainless ingots in a production line in central Italy by an alternative graph and solved the problem using a beam search procedure. Kumar, Kumar, Tiwari, and Chan (2006) developed a combinatorial auction-based approach to resolve an SCC scheduling problem for minimizing the waiting time and maximizing the number of steel slabs that are produced. Atighehchian, Bijari, and Tarkesh (2009) investigated an SCC scheduling problem from Mobarakeh Steel Company in Isfahan with the objective of minimizing the casting interruption cost, molten steel temperature drop cost, cost of poor quality and maximum completion time cost, and they presented a hybrid algorithm based on ant colony optimization and non-linear optimization methods. Zhu, Zheng, and Gao (2010) proposed an optimization model that is combined with a parallel-backward inferring algorithm and genetic algorithm to improve the efficiency and performance of production scheduling in an SCC process. Recently, Pan, Wang, Mao, Zhao, and Zhang (2013) considered an SCC scheduling problem to minimize the penalty caused by sojourn time and the earliness/tardiness of cast starting, using an artificial bee colony algorithm. Later, Li, Pan, Mao, and Suganthan (2014) presented an effective fruit fly optimization algorithm to solve the same SCC scheduling problem, and they improved the results. More recently, Tang, Zhao, and Liu (2014) presented an improved differential evolution algorithm with a real-coded matrix representation to re-optimize the assignment, sequencing, and timetable of a set of existing and new jobs among various production stages for a new environment in which unforeseen changes occurred in the production system.

In the above literature, one of the basic assumptions is that the assignment and sequencing of the casts (i.e., a given sequence of charges) in the continuous casting stage are fixed in advance and remain unchanged, and the researchers concentrated on the sequence and scheduling of the charges in the steelmaking and refining stages and the timing of the charges on casters in the continuous casting stage. Unlike the above studies, this paper assumes that the schedule of the casts are not given in advance and to be determined by the scheduling algorithm. That is, we address a new SCC scheduling problem that optimizes charge scheduling in the steelmaking and refining stages and cast scheduling in continuous casting stage simultaneously to minimize the makespan and charge waiting times over the whole SCC process. This approach will lead to a much higher degree of flexibility, which can significantly enhance the productivity. Furthermore, we consider multiple refining phases in the refining stage, which is an approach that has a much wider application to real-world problems.

Artificial bee colony (ABC) is a fairly new optimizer that has been shown to be as competitive as other population-based algorithms for continuous function optimization, but it has the advantage of employing fewer control parameters (Karaboga & Akay, 2009). It has gradually become more and more popular and has been successfully used in scheduling problems, including the lot-streaming flowshop (Pan, Suganthan, Tasgetiren, & Chua, 2011), flexible job shop (Li et al. 2011), and many others. In our previous work (Pan et al., 2013), we presented an effective ABC algorithm for solving a three-stage SCC scheduling problem with the assumption of a fixed cast schedule at the continuous casting stage. Whereas, this paper applies ABC to the new SCC scheduling problem, which consists of two coupled sub-problems: a charge scheduling problem in the steelmaking and refining stage and a cast scheduling problem in the continuous casting stage. We extend the ABC to a cooperative co-evolutionary paradigm by dividing the artificial bees into two sub-swarms, each addressing a scheduling problem. Furthermore, we introduce new techniques to enhance the performance of the cooperative co-evolution ABC (CCABC), including a problem-specific knowledge-based initialization, a new exploration mechanism, and a self-adaptive neighbourhood operator. Extensive simulations and comparisons demonstrate the effectiveness of the CCABC for the new SCC problem.

The remainder of this paper is organized as follows. In Section 2, a realistic SCC scheduling problem is formulated. Section 3 introduces the basic ABC briefly, which is followed by a description of the presented CCABC in Section 4. The simulation results and empirical comparisons are provided in Section 5. Finally, Section 6 concludes the paper and suggests some future work.

Basically, an SCC process consists of three consecutive production stages: steelmaking, refining, and continuous casting (see
Fig. 1
                        ).

In the steelmaking stage, hot molten iron is turned into molten steel by a Linz–Donawitz–Verfahren converter (‘LD’ in Fig. 1), which reduces the carbon, sulphur, silicon, and other impurity content to desirable levels. In the refining stage, the impurities are further eliminated, and the required alloy ingredients are added to the molten steel. To produce high grade steel, multiple refining stages always exist, such as the Ruhrstahl Heraeus (‘RH’ in Fig. 1) and Ladle Furnace (‘LF’ in Fig. 1). Charges are the basic production units in the steelmaking and refining stages, which refers to concurrent smelting in the same furnace. The continuous casting stage is responsible for casting the liquid steel into solid slabs. At this stage, a sequence of charges must be continuously cast on the same continuous caster (‘CC’ in Fig. 1) in accordance with a given precedence and without a break. Thus, a sequence of charges (or a cast) is the basic production unit. To accelerate the production and to balance the interflow of the charges, identical parallel machines are configured at each stage.

Following Atighehchian et al. (2009), Tang et al. (2002), and many others, we consider the situation in which all of the charges follow the same process route: steelmaking, refining, and then continuous casting. In the refining stage, the charges undergo refining stage one and then refining stage two, until the last refining stage. A charge or cast can be processed on any one of the parallel machines at the same stage. The production process is a complex hybrid flowshop, which is very common in modern iron and steel enterprises in China. The other cases in which the charges have different refining routes, for example, some from RH to LF, others from LF to RH, or a charge goes through some refining stage twice will be studied in the future.

A sequence-independent and separable setup time is needed when a new cast is prepared for processing. However, no setup time is required between the adjacent charges in a cast. The transportation times between the stages must be considered. We address the static scheduling problem in this paper and assume that the processing times of all of the charges, the transportation times between stages, and the setup times of all of the casts are known, deterministic, and uninterrupted. The dynamic scheduling problem, which addresses unforeseen real-time events and is solved by varying processing time and other methods (see Mao et al., 2014b; Tang, Zhao et al., 2014), is beyond the scope of this paper.

With the above assumptions, the SCC scheduling problem can be characterized as two closely coupled sub-problems, i.e., charge scheduling and cast scheduling. The former is a hybrid flowshop scheduling problem with transportation times involved, whereas the latter involves parallel machine scheduling with separable setup times. The charge scheduling sub-problem is to assign charges to converters and refining furnaces and also to sequence them on the assigned facilities as well as to determine the timetable for the charges. The cast scheduling sub-problem is to allocate the casts to casters and also to sequence them on the allocated caster as well as to determine the timetable on the caster for their charges. The technological constraints require that a cast consists of a sequence of charges. The charges and the precedence among them are given in advance. The processing of a cast is without a break. Because it is important to complete all of the casts as soon as possible and to avoid a large temperature drop, which could result in an additional cost for reheating, we aim to minimize the makespan and charge waiting times. In the following, a mathematical formulation of the SCC scheduling problem is presented.


                           Parameters and constants:
                        


                           
                              
                                 k
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 K
                              
                           : Charge index, where K is the total number of charges.


                           
                              
                                 s
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 S
                                 −
                                 1
                              
                           : Stage index, where S is the total number of stages.


                           ms
                           : The total number of machines at stage s.


                           p
                           
                              k, s
                           : Processing time of charge k at stage s.


                           ts
                           : Transportation time from stage 
                              
                                 s
                                 −
                                 1
                              
                            to stage s.


                           H: A very large positive number.


                           ψ
                           1: Penalty coefficient for the makespan.


                           ψ
                           2: Penalty coefficient for the total waiting times.


                           Decision variables:
                        


                           x
                           
                              k, s, m
                           : 0/1 variable, equal to 1 if and only if charge k is allocated to machine m at stage s.


                           
                              
                                 y
                                 
                                    
                                       k
                                       1
                                    
                                    ,
                                    
                                       k
                                       2
                                    
                                    ,
                                    s
                                 
                              
                           : 0/1 variable, equal to 1 if and only if charge k
                           1 precedes k
                           2 to be processed at stage s.


                           c
                           
                              k, s
                           : Completion time of charge k at stage s.


                           Constraints:
                        

Each charge must pass through the steelmaking and refining stages and must be processed by exactly one machine at each stage.

                              
                                 (1)
                                 
                                    
                                       
                                          ∑
                                          
                                             m
                                             =
                                             1
                                          
                                          
                                             m
                                             2
                                          
                                       
                                       
                                          x
                                          
                                             k
                                             ,
                                             s
                                             ,
                                             m
                                          
                                       
                                       =
                                       1
                                       ,
                                       
                                       k
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       K
                                       ,
                                       
                                       s
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       S
                                       −
                                       1
                                       .
                                    
                                 
                              
                           
                        

For two consecutive operations of a charge, the next operation can be started only after the previous one is completed and the charge is transferred to the current machine.

                              
                                 (2)
                                 
                                    
                                       
                                          c
                                          
                                             k
                                             ,
                                             s
                                          
                                       
                                       −
                                       
                                          p
                                          
                                             k
                                             ,
                                             s
                                          
                                       
                                       ≥
                                       
                                          c
                                          
                                             k
                                             ,
                                             s
                                             −
                                             1
                                          
                                       
                                       +
                                       
                                          t
                                          s
                                       
                                       ,
                                       
                                       k
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       K
                                       ,
                                       
                                       s
                                       =
                                       2
                                       ,
                                       …
                                       ,
                                       S
                                       −
                                       1
                                    
                                 
                              
                           
                        

For any two different operations at the same stage, there exists a precedence relationship

                              
                                 (3)
                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   y
                                                   
                                                      
                                                         k
                                                         1
                                                      
                                                      ,
                                                      
                                                         k
                                                         2
                                                      
                                                      ,
                                                      s
                                                   
                                                
                                                +
                                                
                                                   y
                                                   
                                                      
                                                         k
                                                         2
                                                      
                                                      ,
                                                      
                                                         k
                                                         1
                                                      
                                                      ,
                                                      s
                                                   
                                                
                                                ≤
                                                1
                                                ,
                                                
                                                
                                                   k
                                                   
                                                      1
                                                      ,
                                                   
                                                
                                                
                                                   k
                                                   2
                                                
                                                ∈
                                                
                                                   {
                                                   
                                                      1
                                                      ,
                                                      2
                                                      ,
                                                      …
                                                      ,
                                                      K
                                                   
                                                   }
                                                
                                                ∧
                                                
                                                   k
                                                   1
                                                
                                                ≠
                                                
                                                   k
                                                   2
                                                
                                                ,
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                s
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                S
                                                −
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

For any two operations on the same machine, only when the preceding operation is finished, the next one can be started.

                              
                                 (4)
                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      c
                                                      
                                                         
                                                            k
                                                            2
                                                         
                                                         ,
                                                         s
                                                      
                                                   
                                                   −
                                                   
                                                      p
                                                      
                                                         
                                                            k
                                                            2
                                                         
                                                         ,
                                                         s
                                                      
                                                   
                                                   −
                                                   
                                                      c
                                                      
                                                         
                                                            k
                                                            1
                                                         
                                                         ,
                                                         s
                                                      
                                                   
                                                   +
                                                   
                                                      (
                                                      
                                                         3
                                                         −
                                                         
                                                            x
                                                            
                                                               
                                                                  k
                                                                  1
                                                               
                                                               ,
                                                               s
                                                               ,
                                                               m
                                                            
                                                         
                                                         −
                                                         
                                                            x
                                                            
                                                               
                                                                  k
                                                                  2
                                                               
                                                               ,
                                                               s
                                                               ,
                                                               m
                                                            
                                                         
                                                         −
                                                         
                                                            x
                                                            
                                                               
                                                                  k
                                                                  2
                                                               
                                                               ,
                                                               s
                                                               ,
                                                               m
                                                            
                                                         
                                                         −
                                                         
                                                            y
                                                            
                                                               
                                                                  k
                                                                  1
                                                               
                                                               ,
                                                               
                                                                  k
                                                                  2
                                                               
                                                               ,
                                                               s
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   H
                                                   ≥
                                                   0
                                                   ,
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   k
                                                   1
                                                
                                                ,
                                                
                                                   k
                                                   2
                                                
                                                ∈
                                                
                                                   {
                                                   
                                                      1
                                                      ,
                                                      2
                                                      ,
                                                      …
                                                      ,
                                                      K
                                                   
                                                   }
                                                
                                                ∧
                                                
                                                   k
                                                   1
                                                
                                                ≠
                                                
                                                   k
                                                   2
                                                
                                                ,
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                m
                                                ∈
                                                
                                                   {
                                                   
                                                      1
                                                      ,
                                                      2
                                                      ,
                                                      …
                                                      ,
                                                      
                                                         m
                                                         s
                                                      
                                                   
                                                   }
                                                
                                                ,
                                                
                                                s
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                S
                                                −
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

The start times must be non-negative.

                              
                                 (5)
                                 
                                    
                                       
                                          c
                                          
                                             k
                                             ,
                                             1
                                          
                                       
                                       −
                                       
                                          p
                                          
                                             k
                                             ,
                                             1
                                          
                                       
                                       ≥
                                       0
                                       ,
                                       k
                                       ∈
                                       
                                          {
                                          
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             K
                                          
                                          }
                                       
                                    
                                 
                              
                           
                        


                           Parameters and constants:
                        


                           
                              
                                 z
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 Z
                              
                           : Cast index, where Z is the total number of casts.


                           lz
                           : The last charge index in cast z; we have 
                              
                                 
                                    l
                                    0
                                 
                                 =
                                 0
                              
                            and 
                              
                                 
                                    l
                                    Z
                                 
                                 =
                                 K
                              
                           , and 
                              
                                 z
                                 =
                                 {
                                 
                                    
                                       l
                                       
                                          z
                                          −
                                          1
                                       
                                    
                                    +
                                    1
                                    ,
                                    
                                       l
                                       
                                          z
                                          −
                                          1
                                       
                                    
                                    +
                                    2
                                    ,
                                    …
                                    ,
                                    
                                       l
                                       z
                                    
                                 
                                 }
                              
                           .


                           
                              
                                 
                                    T
                                    z
                                 
                                 =
                                 
                                    ∑
                                    
                                       k
                                       =
                                       
                                          l
                                          
                                             z
                                             −
                                             1
                                          
                                       
                                       +
                                       1
                                    
                                    
                                       l
                                       z
                                    
                                 
                                 
                                    p
                                    
                                       k
                                       ,
                                       S
                                    
                                 
                              
                           : Processing time of cast z.


                           qz
                           : Setup time of cast z.


                           Decision variables:
                        


                           χ
                           
                              z, m
                           : 0/1 variable, equal to 1 if and only if cast z is allocated to caster m.


                           
                              
                                 γ
                                 
                                    
                                       z
                                       1
                                    
                                    ,
                                    
                                       z
                                       2
                                    
                                 
                              
                           : 0/1 variable, equal to 1 if and only if cast z
                           1 is to be processed preceding z
                           2.


                           Cz
                           : Completion time of cast z, equal to the completion time of the last charge in the cast, i.e., 
                              
                                 
                                    C
                                    z
                                 
                                 =
                                 
                                    c
                                    
                                       
                                          l
                                          z
                                       
                                       ,
                                       S
                                    
                                 
                              
                           .


                           Constraints:
                        

A cast can be assigned to exactly one caster.

                              
                                 (6)
                                 
                                    
                                       
                                          ∑
                                          
                                             m
                                             =
                                             1
                                          
                                          
                                             m
                                             S
                                          
                                       
                                       
                                          χ
                                          
                                             z
                                             ,
                                             m
                                          
                                       
                                       =
                                       1
                                       ,
                                       
                                       z
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       Z
                                    
                                 
                              
                           
                        

For any two different casts, there exists an operation precedence relationship

                              
                                 (7)
                                 
                                    
                                       
                                          γ
                                          
                                             
                                                z
                                                1
                                             
                                             ,
                                             
                                                z
                                                2
                                             
                                          
                                       
                                       +
                                       
                                          γ
                                          
                                             
                                                z
                                                2
                                             
                                             ,
                                             
                                                z
                                                1
                                             
                                          
                                       
                                       ≤
                                       1
                                       ,
                                       
                                       
                                          z
                                          1
                                       
                                       ,
                                       
                                          z
                                          2
                                       
                                       ∈
                                       
                                          {
                                          
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             Z
                                          
                                          }
                                       
                                       ∧
                                       
                                          z
                                          1
                                       
                                       ≠
                                       
                                          z
                                          2
                                       
                                    
                                 
                              
                           
                        

For any two casts that are assigned to the same caster, only when the preceding cast is finished, the next one can be set up.

                              
                                 (8)
                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   C
                                                   
                                                      z
                                                      2
                                                   
                                                
                                                −
                                                
                                                   C
                                                   
                                                      z
                                                      1
                                                   
                                                
                                                −
                                                
                                                   T
                                                   
                                                      z
                                                      2
                                                   
                                                
                                                −
                                                
                                                   q
                                                   
                                                      z
                                                      2
                                                   
                                                
                                                +
                                                
                                                   (
                                                   
                                                      3
                                                      −
                                                      
                                                         χ
                                                         
                                                            
                                                               z
                                                               1
                                                            
                                                            ,
                                                            m
                                                         
                                                      
                                                      −
                                                      
                                                         χ
                                                         
                                                            
                                                               z
                                                               2
                                                            
                                                            ,
                                                            m
                                                         
                                                      
                                                      −
                                                      
                                                         γ
                                                         
                                                            
                                                               z
                                                               1
                                                            
                                                            ,
                                                            
                                                               z
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                   )
                                                
                                                H
                                                ≥
                                                0
                                                ,
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   z
                                                   1
                                                
                                                ,
                                                
                                                   z
                                                   2
                                                
                                                ∈
                                                
                                                   {
                                                   
                                                      
                                                         1
                                                         ,
                                                         2
                                                         ,
                                                      
                                                      …
                                                      
                                                         ,
                                                         Z
                                                      
                                                   
                                                   }
                                                
                                                ∧
                                                
                                                   z
                                                   1
                                                
                                                ≠
                                                
                                                   z
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

To continuously cast, when a charge in the cast is completed, the next one should arrive at or wait on the caster. For this purpose, the starting time of cast z should satisfy

                              
                                 (9)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   C
                                                   z
                                                
                                                −
                                                
                                                   T
                                                   z
                                                
                                             
                                          
                                          
                                             ≥
                                          
                                          
                                             
                                                max
                                                
                                                   {
                                                   
                                                      
                                                         c
                                                         
                                                            
                                                               l
                                                               
                                                                  z
                                                                  −
                                                                  1
                                                               
                                                            
                                                            +
                                                            1
                                                            ,
                                                            S
                                                            −
                                                            1
                                                         
                                                      
                                                      ,
                                                      
                                                         max
                                                         
                                                            k
                                                            =
                                                            
                                                               l
                                                               
                                                                  z
                                                                  −
                                                                  1
                                                               
                                                            
                                                            +
                                                            2
                                                            ,
                                                            …
                                                            ,
                                                            
                                                               l
                                                               z
                                                            
                                                         
                                                      
                                                      
                                                         {
                                                         
                                                            
                                                               c
                                                               
                                                                  k
                                                                  ,
                                                                  S
                                                                  −
                                                                  1
                                                               
                                                            
                                                            −
                                                            
                                                               ∑
                                                               
                                                                  
                                                                     k
                                                                     ′
                                                                  
                                                                  =
                                                                  
                                                                     l
                                                                     
                                                                        z
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                                  +
                                                                  1
                                                               
                                                               
                                                                  k
                                                                  −
                                                                  1
                                                               
                                                            
                                                            
                                                               p
                                                               
                                                                  
                                                                     k
                                                                     ′
                                                                  
                                                                  ,
                                                                  S
                                                               
                                                            
                                                         
                                                         }
                                                      
                                                   
                                                   }
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                +
                                                
                                                
                                                   t
                                                   S
                                                
                                                ,
                                                
                                                z
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                Z
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

No machine idling time exists between two adjacent charges in a cast.

                              
                                 (10)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      c
                                                      
                                                         k
                                                         ,
                                                         S
                                                      
                                                   
                                                   =
                                                   
                                                      C
                                                      z
                                                   
                                                   ,
                                                   
                                                   k
                                                   =
                                                   
                                                      l
                                                      z
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      c
                                                      
                                                         k
                                                         ,
                                                         S
                                                      
                                                   
                                                   =
                                                   
                                                      c
                                                      
                                                         k
                                                         +
                                                         1
                                                         ,
                                                         S
                                                      
                                                   
                                                   −
                                                   
                                                      p
                                                      
                                                         k
                                                         +
                                                         1
                                                         ,
                                                         S
                                                      
                                                   
                                                   ,
                                                   
                                                   k
                                                   =
                                                   
                                                      l
                                                      z
                                                   
                                                   −
                                                   1
                                                   ,
                                                   
                                                      l
                                                      z
                                                   
                                                   −
                                                   2
                                                   ,
                                                   …
                                                   ,
                                                   
                                                   
                                                      l
                                                      
                                                         z
                                                         −
                                                         1
                                                      
                                                   
                                                   +
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        


                           
                              
                                 (11)
                                 
                                    
                                       min
                                       
                                       F
                                       =
                                       
                                          ψ
                                          1
                                       
                                       ·
                                       
                                          max
                                          
                                             z
                                             =
                                             1
                                          
                                          Z
                                       
                                       
                                          {
                                          
                                             C
                                             z
                                          
                                          }
                                       
                                       +
                                       
                                          ψ
                                          2
                                       
                                       ·
                                       
                                          ∑
                                          
                                             k
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          
                                             ∑
                                             
                                                s
                                                =
                                                2
                                             
                                             S
                                          
                                          
                                             (
                                             
                                                
                                                   c
                                                   
                                                      k
                                                      ,
                                                      s
                                                   
                                                
                                                −
                                                
                                                   p
                                                   
                                                      k
                                                      ,
                                                      s
                                                   
                                                
                                                −
                                                
                                                   c
                                                   
                                                      k
                                                      ,
                                                      s
                                                      −
                                                      1
                                                   
                                                
                                                −
                                                
                                                   t
                                                   s
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    max
                                    
                                       z
                                       =
                                       1
                                    
                                    Z
                                 
                                 
                                    {
                                    
                                       C
                                       z
                                    
                                    }
                                 
                              
                            is the makespan, and 
                              
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    K
                                 
                                 
                                    ∑
                                    
                                       s
                                       =
                                       2
                                    
                                    S
                                 
                                 
                                    (
                                    
                                       
                                          c
                                          
                                             k
                                             ,
                                             s
                                          
                                       
                                       −
                                       
                                          p
                                          
                                             k
                                             ,
                                             s
                                          
                                       
                                       −
                                       
                                          c
                                          
                                             k
                                             ,
                                             s
                                             −
                                             1
                                          
                                       
                                       −
                                       
                                          t
                                          s
                                       
                                    
                                    )
                                 
                              
                            is the total waiting time.

Consider an instance with a single refining phase. There are two converters (1# LD and 2# LD), two refining furnaces (1# RH and 2# RH) and one continuous caster (1# CC). Two casts are to be processed. The first includes charges 1 and 2, whereas the second includes charges 3, 4 and 5. The transportation times are 
                           
                              
                                 t
                                 2
                              
                              =
                              10
                           
                         and 
                           
                              
                                 t
                                 3
                              
                              =
                              10
                           
                        . The setup times for two casts are 
                           
                              
                                 q
                                 1
                              
                              =
                              35
                           
                         and 
                           
                              
                                 q
                                 2
                              
                              =
                              15
                           
                        . The processing times of these five charges at every stage are given as follows:

                           
                              
                                 
                                    
                                       
                                          [
                                          
                                             p
                                             
                                                k
                                                ,
                                                s
                                             
                                          
                                          ]
                                       
                                       
                                          5
                                          ×
                                          3
                                       
                                    
                                    =
                                    
                                       [
                                       
                                          
                                             
                                                45
                                             
                                             
                                                25
                                             
                                             
                                                65
                                             
                                          
                                          
                                             
                                                45
                                             
                                             
                                                30
                                             
                                             
                                                25
                                             
                                          
                                          
                                             
                                                70
                                             
                                             
                                                70
                                             
                                             
                                                40
                                             
                                          
                                          
                                             
                                                85
                                             
                                             
                                                85
                                             
                                             
                                                40
                                             
                                          
                                          
                                             
                                                55
                                             
                                             
                                                55
                                             
                                             
                                                45
                                             
                                          
                                       
                                       ]
                                    
                                 
                              
                           
                        
                     

The Gantt chart of a solution is shown in Fig. 2
                        , where the makespan is 330 and the total waiting time is 110. Suppose that 
                           
                              
                                 ψ
                                 1
                              
                              =
                              10
                           
                         and 
                           
                              
                                 ψ
                                 2
                              
                              =
                              1
                           
                        ; then, the objective value is 
                           
                              F
                              =
                              10
                              ×
                              330
                              +
                              1
                              ×
                              110
                              =
                              3410
                           
                        .

As a new optimizer that is designed for function optimizations, ABC simulates the intelligent foraging behaviour of honeybees in finding nectar sources around their hives (Karaboga & Akay, 2009). ABC starts with a population of initial food sources (i.e., solutions) and, then, iteratively undergoes the employed bee phase, onlooker bee phase, and scout phase until a termination condition is satisfied.

An initial population consists of PS food sources or solutions, each of which is represented by a D-dimensional real-valued vector. Let 
                        
                           
                              α
                              i
                           
                           =
                           
                              {
                              
                                 
                                    α
                                    
                                       i
                                       ,
                                       1
                                    
                                 
                                 ,
                                 
                                    α
                                    
                                       i
                                       ,
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    α
                                    
                                       i
                                       ,
                                       D
                                    
                                 
                              
                              }
                           
                        
                      be the ith solution, which is generated as follows:

                        
                           (12)
                           
                              
                                 
                                    α
                                    
                                       i
                                       ,
                                       d
                                    
                                 
                                 =
                                 
                                    B
                                    ̲
                                 
                                 +
                                 
                                    (
                                    
                                       
                                          B
                                          ¯
                                       
                                       −
                                       
                                          B
                                          ̲
                                       
                                    
                                    )
                                 
                                 ×
                                 r
                                 a
                                 n
                                 d
                                 
                                    (
                                    
                                       0
                                       ,
                                       1
                                    
                                    )
                                 
                                 ,
                                 
                                 d
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 D
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 P
                                 S
                              
                           
                        
                     where rand(a, b) is a uniform random number in the range of [a, b]; and 
                        
                           B
                           ̲
                        
                      and 
                        
                           B
                           ¯
                        
                      are the lower and upper bounds, respectively.

In the employed bee phase, each employed bee is associated with a solution or food source. Each bee is responsible for finding a new solution in its neighbourhood. Suppose that αi
                      is the current solution. The new solution 
                        
                           α
                           
                              
                              i
                              ′
                           
                        
                      is produced as follows:

                        
                           (13)
                           
                              
                                 α
                                 
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    ′
                                 
                                 =
                                 
                                    α
                                    
                                       i
                                       ,
                                       d
                                    
                                 
                                 +
                                 
                                    (
                                    
                                       
                                          α
                                          
                                             i
                                             ,
                                             d
                                          
                                       
                                       −
                                       
                                          α
                                          
                                             
                                                i
                                                ′
                                             
                                             ,
                                             d
                                          
                                       
                                    
                                    )
                                 
                                 ×
                                 r
                                 a
                                 n
                                 d
                                 
                                    (
                                    
                                       −
                                       1
                                       ,
                                       1
                                    
                                    )
                                 
                              
                           
                        
                     where 
                        
                           
                              i
                              ′
                           
                           ∈
                           
                              {
                              
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 P
                                 S
                              
                              }
                           
                           ∧
                           
                              i
                              ′
                           
                           ≠
                           i
                           ,
                           
                           d
                           ∈
                           
                              {
                              
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 D
                              
                              }
                           
                        
                     , is a randomly chosen index. If the fitness of 
                        
                           α
                           
                              
                              i
                              ′
                           
                        
                     , 
                        
                           f
                           (
                           
                              α
                              
                                 
                                 i
                                 ′
                              
                           
                           )
                        
                     , is better than f(αi
                     ), then it will replace αi
                      and become a new member of the swarm; otherwise, αi
                      is retained and 
                        
                           α
                           
                              
                              i
                              ′
                           
                        
                      is discarded.

In the onlooker bee phase, an onlooker bee evaluates the fitness of the solutions found by the employed bees and selects a solution αi
                      with a probability ρi
                     , which is calculated by 
                        
                           
                              ρ
                              i
                           
                           =
                           
                              
                                 f
                                 (
                                 
                                    α
                                    i
                                 
                                 )
                              
                              /
                              
                                 
                                    ∑
                                    
                                       
                                          i
                                          ′
                                       
                                       =
                                       1
                                    
                                    
                                       P
                                       S
                                    
                                 
                                 
                                    f
                                    (
                                    
                                       α
                                       
                                          i
                                          ′
                                       
                                    
                                    )
                                 
                              
                           
                        
                     . Clearly, the higher the fitness f(αi
                     ) is, the more likely αi
                      is selected. Once the onlooker has selected a solution αi
                     , it produces a modification to αi
                      using the same method that the employed bees use. If the modified solution is better than αi
                     , then it will replace αi
                      and become a new member of the swarm.

In the scout phase, if a solution αi
                      cannot be further improved through a predefined maximum number of trials θ, it will be abandoned and the corresponding employed bee becomes a scout. The scout produces a solution randomly using Eq. (12). At each cycle of the ABC algorithm, at most one scout goes outside to search for a new food source.

A natural approach to addressing the SCC scheduling problem is to utilize a divide-and-conquer (or decomposition) strategy. The cooperative co-evolution approach is such a strategy, and it has attracted much attention in recent years (Li & Yao, 2012). This section presents a cooperative co-evolutionary ABC (CCABC) for solving the SCC problem. CCABC starts with two sub-swarms, each of which tackles one sub-problem. Then, CCABC evolves the two sub-swarms alternately. When one sub-swarm is being evolved, the other is fixed. To evaluate an individual that is generated for a sub-swarm, we take the best individual from the other sub-swarm as the context vector. An overall solution is constructed by concatenating the individual and the context vector. The constructed solution is evaluated, and its objective value is also the objective value of the generated individual. Then, the generated individual undergoes a competing and updating process in the current sub-swarm.

We divide the representation of the SCC problem into two parts, one for the charge scheduling sub-problem and the other for the cast scheduling sub-problem. We denote an individual or solution using a vector 
                           
                              I
                              =
                              (
                              
                                 λ
                                 ,
                                 μ
                              
                              )
                           
                         that contains a charge list λ and a cast list μ. The cast list μ is a complete permutation of all of the casts, which represents the order in which the casts are launched into the continuous casting stage. The charge list λ is a permutation of all of the charges. It indicates the order in which the charges are processed at the steelmaking and refining stages. Instead of using the charge indices in the list λ, we use the cast indices to represent the charges. A cast index z appears exactly ‖z‖ times in the list, where ‖z‖ represents the number of charges in cast z. The list λ is interpreted from left to right. The first appearance of z corresponds to the first charge of cast z, and the second appearance of z corresponds to the second charge of the cast, and so on. For the example in Fig. 2, 
                           
                              I
                              =
                              (
                              
                                 1
                                 
                                 1
                                 
                                 2
                                 
                                 2
                                 
                                 2
                                 ,
                                 
                                 1
                                 
                                 2
                              
                              )
                           
                         is a solution, where 
                           
                              λ
                              =
                              (
                              
                                 1
                                 
                                 1
                                 
                                 2
                                 
                                 2
                                 
                                 2
                              
                              )
                           
                         and 
                           
                              μ
                              =
                              (
                              
                                 1
                                 
                                 2
                              
                              )
                           
                        . In λ, from the left to the right, λ is interpreted as the charge permutation (1 2 3 4 5).

We present a method to decode an individual 
                           
                              I
                              =
                              (
                              
                                 λ
                                 ,
                                 μ
                              
                              )
                           
                         into a complete schedule in the reverse order. We first consider the cast list μ and launch its casts in the continuous casting stage from the end to the front. Each cast is assigned to the first available caster and is started as late as possible. Afterward, the charge list λ is applied to both the refining and steelmaking stages. In these stages, the charges are sequentially taken out from λ from the end to the front and allocated to the first available refining furnace or converter and started as late as possible. Fig. 3
                        (a) shows the schedule in the form of a Gantt chart decoded from the individual 
                           
                              I
                              =
                              (
                              
                                 1
                                 
                                 1
                                 
                                 2
                                 
                                 2
                                 
                                 2
                                 ,
                                 1
                                 
                                 2
                              
                              )
                           
                        , which is discussed in Section 2.3. In Fig. 3(a), we set the completion time of the last cast in μ at time 0, and the casts and charges are presented in reverse order along the coordinate axis. For the cast list 
                           
                              μ
                              =
                              (
                              
                                 1
                                 ,
                                 2
                              
                              )
                           
                        , we first assign cast 2 to 1# CC and start it at time 
                           
                              −
                              
                                 T
                                 2
                              
                              =
                              −
                              
                                 (
                                 
                                    
                                       p
                                       
                                          3
                                          ,
                                          3
                                       
                                    
                                    +
                                    
                                       p
                                       
                                          4
                                          ,
                                          3
                                       
                                    
                                    +
                                    
                                       p
                                       
                                          5
                                          ,
                                          3
                                       
                                    
                                 
                                 )
                              
                              =
                              −
                              125
                           
                        . Then, we assign cast 1 to 1# CC and start it at time 
                           
                              
                                 (
                                 
                                    −
                                    125
                                    −
                                    
                                       q
                                       2
                                    
                                 
                                 )
                              
                              −
                              
                                 T
                                 1
                              
                              =
                              
                                 (
                                 
                                    −
                                    125
                                    −
                                    
                                       q
                                       2
                                    
                                 
                                 )
                              
                              −
                              
                                 (
                                 
                                    
                                       p
                                       
                                          1
                                          ,
                                          3
                                       
                                    
                                    +
                                    
                                       p
                                       
                                          2
                                          ,
                                          3
                                       
                                    
                                 
                                 )
                              
                              =
                              −
                              230
                           
                        . In the refining stage, according to the charge permutation (1 2 3 4 5) obtained from 
                           
                              λ
                              =
                              (
                              
                                 1
                                 
                                 1
                                 
                                 2
                                 
                                 2
                                 
                                 2
                              
                              )
                           
                        , charge 5 is first considered. Both 1# RH and 2# RH are free now. 1# RH is selected, and charge 5 is started at time 
                           
                              −
                              (
                              
                                 
                                    p
                                    
                                       5
                                       ,
                                       2
                                    
                                 
                                 +
                                 
                                    t
                                    3
                                 
                                 +
                                 
                                    p
                                    
                                       5
                                       ,
                                       3
                                    
                                 
                              
                              )
                              =
                              −
                              110
                           
                        . We then consider charge 4. Because the first available refining furnace is 2# RH for charge 4, we assign it to 2# RH and start it at time 
                           
                              −
                              (
                              
                                 
                                    p
                                    
                                       4
                                       ,
                                       2
                                    
                                 
                                 +
                                 
                                    t
                                    3
                                 
                                 +
                                 
                                    p
                                    
                                       4
                                       ,
                                       3
                                    
                                 
                                 +
                                 
                                    p
                                    
                                       5
                                       ,
                                       3
                                    
                                 
                              
                              )
                              =
                              −
                              135
                           
                        . Next, we consider charge 3, charge 2, and charge 1. After the refining stage, we also address the steelmaking phase according to (1 2 3 4 5), using a similar method. Finally, we obtain a schedule with a makespan that is equal to 330 and a total waiting time equal to 70. In the figure, the starting times of the casts and charges are negative. We can shift the whole schedule to the right at an offset value that is equal to the makespan to satisfy the constraints in (5). Note that this schedule is different from the schedule shown in Fig. 2, which is presented in a forward manner.

The above decoding method shifts the operations to the right as compactly as possible, which leads to a semi-active schedule according to Pinedo (2012). To further decrease the total waiting time, we fix the operations at the steelmaking stage and shift the operations in the refining and continuous casting stages to the left as compactly as possible without changing the operation sequence on each machine. After shifting operations, the total waiting time of the schedule shown in Fig 3(a) is decreased to 50. The new Gantt chart is shown in Fig. 3(b).

An initial population that contains diverse and promising candidate solutions always results in a faster convergence to good results. A common practice for population initialization in the scheduling literature is to construct a few good solutions using heuristics and to generate the remainder randomly (Ruiz & Maroto, 2006). The largest processing time (LPT) rule is commonly used in the scheduling literature. LPT gives a higher priority to the job that has the larger processing time. We present an LPT heuristic for the SCC problem as follows:

                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm 1. The LPT heuristic
                                    
                                 
                                 
                                    
                                       Step 1: Sort all of the casts in decreasing order of their processing time 
                                             
                                                T
                                                z
                                             
                                          , 
                                             
                                                z
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                Z
                                             
                                          , and generate a cast list 
                                             μ
                                          .
                                    
                                    
                                       Step 2: Schedule the casts in reverse order according to the cast list 
                                             μ
                                          .
                                    
                                    
                                       Step 3: Compute the starting time for each charge in the continuous casting stage.
                                    
                                    
                                       Step 4: Sort all of the charges in increasing order of the start times, and generate a charge list 
                                             λ
                                          .
                                    
                                    
                                       Step 5: Schedule the charges in the steelmaking and refining stages according to the charge list 
                                             λ
                                           in the reverse order.
                                    
                                 
                              
                           
                        
                     

The LPT heuristic is very straightforward, and it can be completed in a time complexity of 
                           
                              O
                              (
                              
                                 K
                                 (
                                 
                                    log
                                    K
                                    +
                                    
                                       ∑
                                       
                                          s
                                          =
                                          1
                                       
                                       S
                                    
                                    
                                       m
                                       s
                                    
                                 
                                 )
                              
                              )
                           
                        . We take advantage of the LPT heuristic to generate a promising initial solution and produce the remainder randomly. However, if both the charge list λ and the cast list μ of a solution 
                           
                              I
                              =
                              (
                              
                                 λ
                                 ,
                                 μ
                              
                              )
                           
                         are randomly generated, the solution is most likely poor because the inherent relationship between λ and μ is not considered. To address this problem, we generate a cast list μ randomly but produce the charge list λ using Steps 3–5 of the LPT heuristic. The initialization method is given as follows.

                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm 2. Initialization
                                    
                                 
                                 
                                    
                                       
                                          Output: context vector 
                                             
                                                
                                                   I
                                                   ¯
                                                
                                                =
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                          , cast list sub-swarm 
                                             U
                                          , charge list sub-swarm 
                                             Λ
                                          
                                       
                                    
                                    
                                       Step 1: Let 
                                             
                                                U
                                                =
                                                {
                                                
                                                }
                                             
                                           and 
                                             
                                                Λ
                                                =
                                                {
                                                
                                                }
                                             
                                          .
                                    
                                    
                                       Step 2: Generate a cast list 
                                             μ
                                           by the LPT rule and let 
                                             
                                                U
                                                =
                                                U
                                                ∪
                                                {
                                                μ
                                                }
                                             
                                          .
                                    
                                    
                                       Step 3: Produce a cast list 
                                             μ
                                           randomly. Let 
                                             
                                                U
                                                =
                                                U
                                                ∪
                                                {
                                                μ
                                                }
                                             
                                           if 
                                             μ
                                           is different from all of the existing ones. Repeat this step until 
                                             
                                                ∥
                                                U
                                                ∥
                                                =
                                                P
                                                S
                                             
                                          .
                                    
                                    
                                       Step 4: For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , generate the charge list 
                                             
                                                λ
                                                i
                                             
                                           for 
                                             
                                                
                                                   μ
                                                   i
                                                
                                                ∈
                                                U
                                             
                                           using Steps 3∼5 of the LPT heuristic, and let 
                                             
                                                Λ
                                                =
                                                Λ
                                                ∪
                                                {
                                                
                                                   λ
                                                   i
                                                
                                                }
                                             
                                          .
                                    
                                    
                                       Step 5: For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , evaluate 
                                             
                                                
                                                   I
                                                   i
                                                
                                                =
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         i
                                                      
                                                      ,
                                                      
                                                         μ
                                                         i
                                                      
                                                   
                                                   )
                                                
                                             
                                          . The best one is set as the context vector 
                                             
                                                
                                                   I
                                                   ¯
                                                
                                                =
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                          .
                                    
                                    
                                       Step 6: For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , calculate 
                                             
                                                f
                                                (
                                                
                                                   
                                                      λ
                                                      i
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                           and 
                                             
                                                f
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      i
                                                   
                                                
                                                )
                                             
                                          .
                                    
                                 
                              
                           
                        
                     

As a matter of course, the initial population is divided into two sub-swarms U and Λ, with U for the cast scheduling sub-problem and Λ for the charge scheduling sub-problem.

In the employed bee phase, each employed bee is associated with a charge list or cast list. The employed bee searches promising neighbours for the associated list. The charge list sub-swarm Λ and the cast list sub-swarm U are evolved alternately. To evolve Λ, each employed bee i generates a new charge list 
                           
                              λ
                              i
                              ′
                           
                         by performing a neighbourhood operator on its associated list λi
                        . Then, a solution 
                           
                              (
                              
                                 
                                    
                                       
                                          λ
                                          ′
                                       
                                    
                                    i
                                 
                                 ,
                                 
                                    μ
                                    ¯
                                 
                              
                              )
                           
                         is constructed by concatenating 
                           
                              λ
                              i
                              ′
                           
                         and the context vector 
                           
                              μ
                              ¯
                           
                        . If the objective value of 
                           
                              (
                              
                                 
                                    
                                       
                                          λ
                                          ′
                                       
                                    
                                    i
                                 
                                 ,
                                 
                                    μ
                                    ¯
                                 
                              
                              )
                           
                         is smaller than its counterpart 
                           
                              (
                              
                                 
                                    λ
                                    i
                                 
                                 ,
                                 
                                    μ
                                    ¯
                                 
                              
                              )
                           
                        , the new list is accepted, i.e., 
                           
                              
                                 λ
                                 i
                              
                              ←
                              
                                 λ
                                 i
                                 ′
                              
                           
                        . We also compare 
                           
                              (
                              
                                 
                                    
                                       
                                          λ
                                          ′
                                       
                                    
                                    i
                                 
                                 ,
                                 
                                    μ
                                    ¯
                                 
                              
                              )
                           
                         with 
                           
                              (
                              
                                 
                                    λ
                                    ¯
                                 
                                 ,
                                 
                                    μ
                                    ¯
                                 
                              
                              )
                           
                         to update the context vector. A similar procedure is performed to update each μi
                         in U.

In the basic ABC, an onlooker bee selects a solution using a fitness proportional selection scheme. This selection operator is slow because the fitness of every individual and a mapping calculation are needed. Therefore, following our previous work (Pan et al., 2013), we change the fitness proportional selection to the tournament selection due to the simplicity and ability to escape from local optima of the tournament operator. The tournament selection involves running several “tournaments” among a few individuals that were chosen at random from the swarm. The winner of each tournament is selected. For our CCABC, two charge lists (or cast lists) are picked up randomly from the sub-swarm and compared to each other, and then, the better one is chosen to be an onlooker. We repeat this selection PS times and associate a list for every onlooker. After selection, the onlooker utilizes the same method as the employed bees to yield a new neighbouring charge list or cast list.

Unlike the basic ABC, which employs a greedy selection mechanism between the old and new candidate solutions, we consider an enhanced strategy to promote the exploitation capability of the onlookers. As shown in our previous work (Pan et al., 2013), a steady state updating procedure where the offspring replace the worst individuals in the population produces much better results than the scheme where offspring directly replace their parents. We adopt the steady state updating procedure here. At the same time, clones in the population are not allowed. In other words, the new neighbour of the current charge list λi
                         (or cast list μi
                        ) will only replace the worst charge list (or cast list) in the sub-swarm if it is better than the worst and no other identical lists exist. This steady state scheme gives potential solutions (i.e., individuals that can produce better neighbouring solutions) more opportunity to be further explored and excludes non-potential solutions such as the worst individuals. The steady state scheme also helps to maintain the diversity of the sub-swarms, to avoid premature convergence.

The scout phase aims to enhance ABC's exploration. Following the basic ABC, CCABC abandons a charge list λi
                         or a cast list μi
                         if it has not been improved in θ consecutive iterations. (If there exist multiple such lists, we randomly select one for updating). CCABC then randomly generates a charge list or cast list to enter the sub-swarm. However, the primary experiments show that CCABC yields worse results than without the scout phase.

One can argue that this finding can be attributed to the method used to generate a scout solution. A randomly generated charge list (or cast list) is most likely a very poor solution for such a complex problem. This approach misleads the CCABC. Thus, we consider generating a promising scout solution by taking advantage of the knowledge acquired in the evolutionary search. An abandoned individual often carries useful information that is collected during the search process because it survives many generations. The search space around this individual could be the most promising region. Following our previous work (Pan et al., 2013), we generate a scout solution by performing a few moves on the abandoned solution. From our primary experiments, however, even with this enhanced method to generate a scout solution, CCABC still cannot generate better results than without the scout phase. The scout phase of CCABC does not work as expected. This finding suggests that the exploration capability of the scouts cannot help the algorithm escape from local optima. Hence, we skip the scout phase in the proposed CCABC.

In CCABC, the ineffectiveness of the scouts can mainly be attributed to the co-evolution mechanism. For example, if a new charge list or cast list is introduced into the sub-swarms by a scout, it must perform a search toward the best match with its context vector. This approach limits the diversity of the search and easily drives the search back to the area in which the algorithm stalls. To move CCABC into an unexplored area, we present an exploration mechanism that changes not only the context vector but also the current sub-swarms as well. CCABC restarts the search process with the new context vector and sub-swarms.

Because the context vector 
                           
                              
                                 I
                                 ¯
                              
                              =
                              
                                 (
                                 
                                    
                                       λ
                                       ¯
                                    
                                    ,
                                    
                                       μ
                                       ¯
                                    
                                 
                                 )
                              
                           
                         is the best solution found in this round of exploitation, the search around it indicates promising areas to search for the optimal solution. We generate a group of PS new solutions by performing a small number of moves on the context vector 
                           
                              
                                 I
                                 ¯
                              
                              =
                              
                                 (
                                 
                                    
                                       λ
                                       ¯
                                    
                                    ,
                                    
                                       μ
                                       ¯
                                    
                                 
                                 )
                              
                           
                        . The best one among them is set as the new context vector 
                           
                              
                                 
                                    I
                                    ′
                                 
                                 ¯
                              
                              =
                              
                                 (
                                 
                                    
                                       
                                          λ
                                          ′
                                       
                                       ¯
                                    
                                    ,
                                    
                                       
                                          μ
                                          ′
                                       
                                       ¯
                                    
                                 
                                 )
                              
                           
                        . After 
                           
                              
                                 
                                    I
                                    ′
                                 
                                 ¯
                              
                              =
                              
                                 (
                                 
                                    
                                       
                                          λ
                                          ′
                                       
                                       ¯
                                    
                                    ,
                                    
                                       
                                          μ
                                          ′
                                       
                                       ¯
                                    
                                 
                                 )
                              
                           
                         is determined, the new charge list sub-swarm Λ′ and new cast list sub-swarm U′ are yielded by performing a number of moves to 
                           
                              
                                 λ
                                 ′
                              
                              ¯
                           
                         and 
                           
                              
                                 μ
                                 ′
                              
                              ¯
                           
                        , respectively. In the above procedure, the number of moves is critical. A too-small value will be inadequate for CCABC to escape from local optima, whereas a too-large value will result in a randomized local search. We set the value to three based on preliminary simulation results. This value has shown to work well for a large group of instances that have different sizes. The exploration strategy is outlined as follows:

                           
                              
                                  
                              
                              
                                 
                                 
                                    
                                       
                                          Algorithm 3. An exploration scheme
                                    
                                 
                                 
                                    
                                       
                                          Input: the current context vector 
                                             
                                                μ
                                                ¯
                                             
                                          .
                                    
                                    
                                       
                                          Output: new context vector 
                                             
                                                
                                                   λ
                                                   ′
                                                
                                                ¯
                                             
                                           and 
                                             
                                                
                                                   μ
                                                   ′
                                                
                                                ¯
                                             
                                          , new charge list sub-swarm 
                                             
                                                U
                                                ′
                                             
                                          , and new cast list sub-swarm 
                                             
                                                Λ
                                                ′
                                             
                                          .
                                    
                                    
                                       Step 1: For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , generate a cast list 
                                             
                                                μ
                                                i
                                             
                                           by performing a small number of moves to 
                                             
                                                μ
                                                ¯
                                             
                                          .
                                    
                                    
                                       Step 2: For each 
                                             
                                                μ
                                                i
                                             
                                          , 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , generate a charge list 
                                             
                                                λ
                                                i
                                             
                                           using Steps 3∼5 of the LPT heuristic.
                                    
                                    
                                       Step 3: For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , evaluate 
                                             
                                                
                                                   I
                                                   i
                                                
                                                =
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         i
                                                      
                                                      ,
                                                      
                                                         μ
                                                         i
                                                      
                                                   
                                                   )
                                                
                                             
                                          . Set the best one as the new context vector, i.e., 
                                             
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            λ
                                                            ′
                                                         
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         
                                                            μ
                                                            ′
                                                         
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                                =
                                                arg
                                                
                                                   (
                                                   
                                                      
                                                         min
                                                         
                                                            i
                                                            =
                                                            1
                                                            ,
                                                            .
                                                            .
                                                            ,
                                                            P
                                                            S
                                                         
                                                      
                                                      f
                                                      
                                                         (
                                                         
                                                            
                                                               λ
                                                               i
                                                            
                                                            ,
                                                            
                                                               μ
                                                               i
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                   )
                                                
                                             
                                          .
                                    
                                    
                                       Step 4: Let 
                                             
                                                
                                                   U
                                                   ′
                                                
                                                =
                                                
                                                   {
                                                   
                                                   }
                                                
                                             
                                          . For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , generate a cast list 
                                             
                                                μ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                           by performing a small number of moves to 
                                             
                                                
                                                   μ
                                                   ′
                                                
                                                ¯
                                             
                                          , and set 
                                             
                                                
                                                   U
                                                   ′
                                                
                                                =
                                                
                                                   U
                                                   ′
                                                
                                                ∪
                                                
                                                   {
                                                   
                                                      μ
                                                      
                                                         
                                                         i
                                                         ′
                                                      
                                                   
                                                   }
                                                
                                             
                                          .
                                    
                                    
                                       Step 5: Let 
                                             
                                                
                                                   Λ
                                                   ′
                                                
                                                =
                                                
                                                   {
                                                   
                                                   }
                                                
                                             
                                          . For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , generate a charge list 
                                             
                                                λ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                           by performing a small number of moves to 
                                             
                                                
                                                   λ
                                                   ′
                                                
                                                ¯
                                             
                                          , and set 
                                             
                                                
                                                   Λ
                                                   ′
                                                
                                                =
                                                
                                                   Λ
                                                   ′
                                                
                                                ∪
                                                
                                                   {
                                                   
                                                      λ
                                                      
                                                         
                                                         i
                                                         ′
                                                      
                                                   
                                                   }
                                                
                                             
                                          .
                                    
                                    
                                       Step 6: For 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                          , calculate 
                                             
                                                f
                                                (
                                                
                                                   λ
                                                   
                                                      
                                                      i
                                                      ′
                                                   
                                                   ,
                                                   
                                                      
                                                         μ
                                                         ′
                                                      
                                                      ¯
                                                   
                                                
                                                )
                                             
                                           and 
                                             
                                                f
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                         ′
                                                      
                                                      ¯
                                                   
                                                   ,
                                                   μ
                                                   
                                                      
                                                      i
                                                      ′
                                                   
                                                
                                                )
                                             
                                          .
                                    
                                 
                              
                           
                        
                     

We must decide when the exploration procedure should be performed. For this purpose, we introduce a new parameter θ′. If the context vector is not improved in θ′ consecutive iterations, the exploration procedure will be introduced. The parameter θ′ controls the balance between exploitation and exploration. A large θ′ value is in favour of an intensive search, whereas a small θ′ value helps explore a large solution space.

ABC generates a new solution in the neighbourhood of the current solution in the employed bee and onlooker phases. A neighbourhood operator plays an important role when developing an effective ABC for solving the SCC problem. In the scheduling literature, shift and pairwise exchange are two commonly used neighbourhood operators for the permutation-based representation. The shift operator relocates a randomly selected job to another random position in the permutation. Jobs between these two positions move along. The pairwise exchange performs random pairwise exchanges to an individual. Note that when performing a pairwise exchange to a charge list λ, we should select two charges from different casts to avoid an ineffective move.

The two neighbourhood operators lead to distinct neighbourhood structures for the SCC problem. An optimal neighbourhood should be different in various instances and in different search phases of the same instance. Hence, a self-adaptive approach is proposed here to determine a neighbourhood operator. We associate a charge list λi
                         (or a cast list μi
                        ) with a neighbourhood operator by which the list is generated. To generate a new list 
                           
                              λ
                              i
                              ′
                           
                         (or 
                           
                              μ
                              i
                              ′
                           
                        ), the list selects its operator as follows: A random number is generated by using a uniform distribution in the range of [0, 1]. If the random number is less than a control parameter ϑ, the associated operator is selected. Otherwise, a shift or pairwise exchange is selected with an equal probability of 50 percent. The new list 
                           
                              λ
                              i
                              ′
                           
                         (or 
                           
                              μ
                              i
                              ′
                           
                        ) is also associated with the operator that generates it. We set 
                           
                              ϑ
                              =
                              0.75
                           
                         based on preliminary simulation results. This value works robustly for a large group of instances that have different sizes.

The pseudo code of the CCABC is shown in Algorithm 2, where PS is the size of each sub-swarm, θ′ is the maximum number of consecutive iterations in which the context vector is not improved, and the function f(λ, μ) returns the objective value for 
                           
                              I
                              =
                              (
                              
                                 λ
                                 ,
                                 μ
                              
                              )
                           
                        .

                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm 4. The CCABC algorithm
                                    
                                 
                                 
                                    
                                       
                                          Parameter: 
                                             
                                                P
                                                S
                                             
                                           and 
                                             
                                                θ
                                                ′
                                             
                                          
                                       
                                    
                                    
                                       
                                          Output: 
                                             bestsofar
                                          
                                       
                                    
                                    
                                       Set parameters 
                                             
                                                P
                                                S
                                             
                                           and 
                                             
                                                θ
                                                ′
                                             
                                          
                                       
                                    
                                    
                                       Initialize the sub-swarms 
                                             
                                                {
                                                
                                                   
                                                      λ
                                                      1
                                                   
                                                   ,
                                                   
                                                      λ
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      λ
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                           and 
                                             
                                                {
                                                
                                                   
                                                      μ
                                                      1
                                                   
                                                   ,
                                                   
                                                      μ
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      μ
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                           and the context vector 
                                             
                                                
                                                   I
                                                   ¯
                                                
                                                =
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          Repeat
                                       
                                    
                                    
                                       //Employed bee phase
                                    
                                    
                                        
                                          for
                                          
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                           
                                          do
                                       
                                    
                                    
                                         Generate 
                                             
                                                λ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                           for 
                                             
                                                λ
                                                i
                                             
                                           using the self-adaptive neighbourhood operator
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      λ
                                                      
                                                         
                                                         i
                                                         ′
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         i
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   λ
                                                   i
                                                
                                                ←
                                                λ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      λ
                                                      
                                                         
                                                         i
                                                         ′
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   λ
                                                   ¯
                                                
                                                ←
                                                λ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                        
                                          end
                                       
                                    
                                    
                                        
                                          for
                                          
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                           
                                          do
                                       
                                    
                                    
                                         Generate 
                                             
                                                μ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                           for 
                                             
                                                μ
                                                i
                                             
                                           using the self-adaptive neighbourhood operator
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      μ
                                                      
                                                         
                                                         i
                                                         ′
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         i
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   μ
                                                   i
                                                
                                                ←
                                                μ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      μ
                                                      
                                                         
                                                         i
                                                         ′
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   μ
                                                   ¯
                                                
                                                ←
                                                μ
                                                
                                                   
                                                   i
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                        
                                          end
                                       
                                    
                                    
                                       //Onlooker bee phase
                                    
                                    
                                        
                                          for
                                          
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                           
                                          do
                                       
                                    
                                    
                                         Select a charge list 
                                             
                                                λ
                                                r
                                             
                                           using tournament selection
                                    
                                    
                                         Generate 
                                             
                                                λ
                                                
                                                   
                                                   r
                                                   ′
                                                
                                             
                                           for 
                                             
                                                λ
                                                r
                                             
                                           using the self-adaptive neighbourhood operator
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      λ
                                                      
                                                         
                                                         r
                                                         ′
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         w
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   λ
                                                   w
                                                
                                                ←
                                                λ
                                                
                                                   
                                                   r
                                                   ′
                                                
                                             
                                           //
                                             
                                                λ
                                                w
                                             
                                          is the worst individual in 
                                             Λ
                                          
                                       
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      λ
                                                      
                                                         
                                                         r
                                                         ′
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   λ
                                                   ¯
                                                
                                                ←
                                                λ
                                                
                                                   
                                                   r
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                        
                                          end
                                       
                                    
                                    
                                        
                                          for
                                          
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                P
                                                S
                                             
                                           
                                          do
                                       
                                    
                                    
                                         Select a cast list 
                                             
                                                μ
                                                r
                                             
                                           using tournament selection
                                    
                                    
                                         Generate 
                                             
                                                μ
                                                
                                                   
                                                   r
                                                   ′
                                                
                                             
                                           for 
                                             
                                                μ
                                                r
                                             
                                           using the self-adaptive neighbourhood operator
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      μ
                                                      
                                                         
                                                         r
                                                         ′
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         w
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   μ
                                                   w
                                                
                                                ←
                                                μ
                                                
                                                   
                                                   r
                                                   ′
                                                
                                             
                                           //
                                             
                                                μ
                                                w
                                             
                                          is the worst individual in 
                                             U
                                          
                                       
                                    
                                    
                                         
                                          if
                                          
                                             
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      μ
                                                      
                                                         
                                                         r
                                                         ′
                                                      
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         ¯
                                                      
                                                      ,
                                                      
                                                         μ
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                           
                                          then
                                          
                                             
                                                
                                                   μ
                                                   ¯
                                                
                                                ←
                                                μ
                                                
                                                   
                                                   r
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                        
                                          end
                                       
                                    
                                    
                                       // Perform the exploration scheme
                                    
                                    
                                         Call Algorithm 3 if 
                                             
                                                I
                                                ¯
                                             
                                           has not been improved in 
                                             
                                                θ
                                                ′
                                             
                                           iterations
                                    
                                    
                                       // Update the best solution found thus far
                                    
                                    
                                         
                                          
                                             
                                                bestsofar
                                                ←
                                                
                                                   I
                                                   ¯
                                                
                                             
                                           if 
                                             
                                                f
                                                
                                                   (
                                                   
                                                      I
                                                      ¯
                                                   
                                                   )
                                                
                                                <
                                                f
                                                
                                                   (
                                                   bestsofar
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          Until a termination criterion is met
                                    
                                 
                              
                           
                        
                     

@&#EXPERIMENTAL RESULTS@&#

The improvement strategies presented in Section 4 include the enhanced onlooker strategy, the new exploration mechanism, and the self-adaptive neighbourhood operator. We show their effectiveness in this section. Appropriate values for the control parameters of CCABC are also determined. CCABC has two parameters: the population size (PS) and the number of consecutive iterations (θ′) in which the algorithm cannot improve its context vector. Based on preliminary experiments, we limit PS to be in the range of [5, 20] and test the following values: 5, 7, 10, 12, 15, 17, and 20. These values are relatively small but not uncommon, as shown in the recent scheduling literature. θ′ is tested at 9 levels: 25, 50, 75, 100, 125, 150, 175, 200, and 
                           
                              +
                              ∞
                           
                        , where 
                           
                              
                                 θ
                                 ′
                              
                              =
                              +
                              ∞
                           
                         means that CCABC does not adopt the exploration scheme. To test the self-adaptive neighbourhood operator, we consider three operators: shift, pairwise exchange, and the self-adaptive operator. We also compare CCABC with and without the enhanced strategy at the onlooker phase. This process results in a total of 7 × 9 × 3 × 2 = 378 different configurations for CCABC. All of the 378 configurations are tested in a full factorial experimental design with a termination criterion of a maximum of 100 × Z × S milliseconds of elapsed CPU time. Each configuration is independently run on the experiments on an Inter (R) Core (TM) i7-2600 CPU @ 3.40 GHz with 8.00 GB RAM in a Windows 7 Operating System.

Because the considered problem is a new scheduling problem and there are no existing benchmarks, we generate a number of problem instances according to the practice situations in the steelmaking complexes from China. All of the combinations of the following S and Z are used: S ∈ {3, 4, 5, 6} and Z ∈ {10, 15, 20, 25, 30}. For each combination, one instance is generated, which results in 20 instances in total. Other production data for the instances are generated by a uniform distribution in the following range:ms
                         ∈ [3, 5], ‖z‖ ∈ [8, 12], ts
                         ∈ [10, 15], p
                        
                           k, s
                         ∈ [36, 50], and qz
                         ∈ [80, 100]. The penalty coefficients are set to 
                           
                              
                                 ψ
                                 1
                              
                              =
                              10
                           
                         and 
                           
                              
                                 ψ
                                 2
                              
                              =
                              1
                           
                        . A total of 30 independent runs are conducted for each instance. The relative percentage increase (RPI) is calculated as the response variable for the experiment. RPI is calculated by

                           
                              (14)
                              
                                 
                                    R
                                    P
                                    I
                                    
                                       (
                                       F
                                       )
                                    
                                    =
                                    
                                       (
                                       F
                                       −
                                       
                                          F
                                          *
                                       
                                       )
                                    
                                    /
                                    
                                       F
                                       *
                                    
                                    ×
                                    100
                                 
                              
                           
                        where F is the solution that is produced by a given algorithm, and F*
                         is the best solution that is yielded by all of the algorithms when compared.

A multifactor analysis of variance (ANOVA) is performed by considering PS, θ′, Neighbourhood Type, and Onlooker Type as factors. The three hypotheses (normality, homogeneity of variance and independence of the residual) of the ANOVA model are accepted in the experiments. Following Ruiz and Maroto (2006) and many others, we analyse the experimental results using the F-ratio for those factors and interactions whose p-value for the F-test is close to zero.

From the ANOVA results, Onlooker Type leads to the largest F-ratio. This finding suggests that the enhanced method at the onlooker phase has the most important effect on the response variable among the considered factors. CCABC with and without the enhanced strategy for onlookers are plotted in Fig. 4
                        (a) with Tukey Honestly Significant Difference (HSD) confidence intervals at the 95 percent confidence level. Clearly, the enhanced strategy at the onlooker phase significantly improves the CCABC.

Neighbourhood Type achieves the second largest F-ratio. Three levels are considered for this factor. The means plots for this factor are given in Fig. 4(b). It can be observed that the presented self-adaptive neighbourhood operator results in significantly better RPI than the others, which demonstrates the effectiveness of the self-adaptive neighbourhood operator for the considered SCC problem.

We next examine the influence of θ′. From the means plots in Fig. 4(c), it is clear that the performance of CCABC seriously degrades if the exploration mechanism (
                           
                              
                                 θ
                                 ′
                              
                              =
                              +
                              ∞
                           
                        ) is not adopted. This finding suggests the effectiveness of the exploration mechanism. For θ′ from 25 to 200, CCABC produces the best results when 
                           
                              
                                 θ
                                 ′
                              
                              =
                              50
                           
                        .

We report the means plots of PS in Fig. 4(d). From the plots, we can observe that CCABC performs best with a small population size that is equal to 10.

In summary, the above empirical results demonstrate the effectiveness of the improvement methods for the problem studied in this work. Based on these results, we set 
                           
                              
                                 θ
                                 ′
                              
                              =
                              50
                           
                         and 
                           
                              P
                              S
                              =
                              10
                           
                         for CCABC in the following experiments. In addition, we adopt the self-adaptive neighbourhood operator and the enhanced strategy for onlookers.

Although there are many papers cited in Section 1, as mentioned before, a difference exists between our SCC scheduling problem and those in the literature. Overall, our problem can be regarded as a very complex hybrid flowshop problem. Thus, we adapt several state-of-the-art methods presented for hybrid flowshops to our SCC scheduling problem. These algorithms are the genetic algorithm (GA) of Ruiz and Maroto (2006), the artificial immune system (AIS) of Engin and Doyen (2004), and the improved simulated annealing (ISA) of Naderi, Zandieh, Balagh, and Roshanaei (2009). We start these algorithms from the same initial population as the CCABC. We give the pseudo codes in Appendix B and introduce them briefly as follows.

For the genetic algorithm, we introduce four crossover operators presented by Park, Choi, and Kim (2003) into GAs to generate offspring for charge lists and three crossover operators, including the Partially-mapped crossover (PMX) (Goldberg & Lingle, 1985), order crossover (OX) (Davis, 1985) and one-point crossover (OP) (Michalewicz, 1996), to yield children for the cast lists. For a pair of parents, we consider crossover for the charge lists, cast lists, and both the cast and charge lists. This approach leads to a total of 19 GAs with different crossover operators. To mutate an individual, we randomly select the charge list, cast list, or both. Then, we randomly choose the shift or pairwise exchange with an equal probability of 50 percent to mutate the individual. Based on trial and error, we select the two best performing GAs (denoted GA1 and GA2, respectively) from these variants for further comparative studies. In GA1, crossover 2 of Park et al. (2003) is applied to the charge lists and OP is employed for the cast lists. In GA2, crossover 1 of Park et al. (2003) and PMX are employed for the charge and cast lists, respectively. The parameters of the two GAs are set as follows: population size PS = 10, crossover rate Pc = 0.5, and mutation rate Pm = 0.1. The AIS generates offspring in the affinity maturation process. We adapt the inverse and pairwise interchange mutations to our problems by randomly selecting the charge list, cast list, or both to mutate. The other operators are the same as those used in Engin and Doyen (2004). We use the multi-step experimental design approach presented by Engin and Doyen (2004) to dynamically determine the parameters for AIS. We use a similar method to adapt the ISA. As in Naderi et al. (2009), we employ the Taguchi method to select the optimum parameters. The initial temperature is fixed at 20, the number of neighbourhood searches at each temperature is 150, the cooling schedule type is hyperbolic, and the neighbourhood structure is DM2.

Except for the above three meta-heuristics, we consider two ABC variants and two obvious implements of ABC with a cooperative coevolution frame (OIABC for short). For the two ABC variants, one generates neighbours by randomly performing shift (ABCS), and the other performs pairwise exchange (ABCP) to the charge list, cast list, or both, of an individual. For the OIABC, we also consider OIABCS and OIABCP, which denote the variants that use shift and pairwise exchanges, respectively. The scout phase is omitted in the OIABC variants. For clarity, we outline the key operators of the above algorithms as follows.

                           
                              
                                 
                                 
                                 
                                    
                                       Algorithm
                                       Operators
                                    
                                 
                                 
                                    
                                       GA1
                                       
                                       Crossover 2 of Park et al. (2003) and OP are used for crossover operator
                                    
                                    
                                       
                                       Shift or pairwise exchange are randomly select for mutation operator
                                    
                                    
                                       GA2
                                       
                                       Crossover 1 of Park et al. (2003) and PMX are used for crossover operator
                                    
                                    
                                       
                                       Shift or pairwise exchange are randomly select for mutation operator
                                    
                                    
                                       AIS
                                       Charge list, cast list or both are randomly selected for the inverse and pairwise interchange mutations
                                    
                                    
                                       ISA
                                       Charge list, cast list or both are randomly selected for the shift operator
                                    
                                    
                                       ABCS
                                       
                                       Charge list, cast list or both are randomly select to shift to generate a new individual
                                    
                                    
                                       ABCP
                                       
                                       Charge list, cast list or both are randomly select to exchanges to generate a new individual
                                    
                                    
                                       OIABCS
                                       
                                       Shift is used to generate a new cast list and charge list
                                    
                                    
                                       OIABCP
                                       
                                       Pairwise interchange is used to generate a new cast list and charge list
                                    
                                 
                              
                           
                        
                     

We set the termination criteria of all of the algorithms as the maximum elapsed CPU time of τ × Z × S milliseconds. Three different running times are considered: 
                           
                              τ
                              =
                              100
                           
                        , 200, and 300. We implement the algorithms in Microsoft Visual Studio 2010 and conduct the experiments on the PC mentioned above. For each combination of S ∈ {3, 4, 5, 6} and Z ∈ {5, 10, 15, 20, 25, 30}, 10 instances are generated, which results in 240 instances in total. A total of 30 independent runs are conducted for each algorithm and for each of the instances. The average RPI values for each combination are reported in Tables 1
                        , 2
                         and 3
                        . The best solution found at 
                           
                              τ
                              =
                              300
                           
                         is utilized as the reference value F*
                        .

It is clear through Tables 1 and 3 that CCABC performs steadily and well in terms of the overall RPI values and that it outperforms the others. From Table 1, the overall RPI value that results from CCABC is 2.20 percent, which is much lower than that of OIABCS, which the second best performer (it achieved an overall RPI of 3.82 percent). CCABC achieves the smallest RPI value for all of the 24 combinations. ABCS/ABCP produces a much worse overall RPI than its cooperative co-evolution counterpart OIABCS/OIABCP, which suggests the effectiveness of the cooperative coevolution frame for the SCC problem. From Tables 2 and 3, where 
                           
                              τ
                              =
                              200
                           
                         and 
                           
                              τ
                              =
                              300
                           
                        , respectively, we can observe that all of the algorithms improve their results when there is more computational effort involved. CCABC again produces a much better overall RPI than the other algorithms that were compared in this study. Hence, it is concluded that as a whole, the CCABC is very effective in solving the SCC scheduling problem considered in this work.

Next, a multifactor statistical ANOVA test was performed. We consider the CPU time τ and the type of algorithms as factors. The ANOVA results show that the factors and their interactions lead to statistically significant differences in the response variable RPI at a 95 percent confidence level. We report the means plots of the interaction in Fig. 5
                        . From the figure, we can see that the CCABC outperforms the others clearly, with different CPU times involved.

In modern iron and steel enterprises in China, heuristics methods based on expert knowledge are widely used in practice for the SCC scheduling problem. In the heuristics methods, the two sub-problems are solved separately. Commonly, the cast scheduling sub-problem is solved first. The cast with a larger processing time is given a higher priority. A cast is assigned to the first available caster and will start as early as possible. The charge scheduling sub-problem is then addressed. Charges are scheduled in the reverse order. The last refining stage is first considered, where the charge that arrives earlier from the continuous casting stage is given a higher priority. A charge is assigned to the first available refining furnace and starts as late as possible. Finally, a similar method is used to schedule the remaining refining stages and the steelmaking phase. We implement the above real-world heuristic and compare it with our CCABC methods at 
                           
                              τ
                              =
                              100
                           
                        , based on the 240 instances. The RPI values (the reference value F*
                         in Section 5.2 is used here) of these methods are given in Table 4
                        . As can be seen, the CCABC has achieved much better results than those generated by the real-world heuristic.

Next, we test the performance of the CCABC for real-world SCC instances. We investigate an SCC process from an iron and steel enterprise in China. In the shop, there are three LD converters, five refining furnaces, and three continuous casters. The refining furnaces are classified into two groups. The first group includes three RH refining furnaces, and the second includes two LF refining furnaces. We collected 10 instances from the shop. The first five need only one refining stage, i.e., RH refining, and the others need two refining stages, i.e., from RH refining to LF refining. The average RPI values yielded by the proposed algorithms and the real-world heuristic are reported in Table 5
                        . One may notice that the real-world heuristic shows quite different performance in Table 4 from in Table 5. It can be explained as follows. Firstly, the instance sizes in Table 5 are smaller than those in Table 4. A smaller size instance has smaller solution space. It is easier for heuristics to get a better solution for a smaller size instance than a larger size instance. Secondly, in Table 4, to compute RPI, the best solution found at 300 × Z × S milliseconds is utilized as the reference value F*. While in Table 5, the best solution found at 100 × Z × S milliseconds is used. The best solution found at 300 × Z × S milliseconds should be much lower. A smaller F*
                         leads to a larger RPI in Table 4. Anyway, our algorithms again outperform the real-world heuristic at a considerable margin.

@&#CONCLUSIONS@&#

In this study, we address a new SCC scheduling problem that has received little attention in the literature but can be commonly found in real-world SCC processes in the modern iron and steel industry. The scheduling problem can be regarded as an integration of charge scheduling in a hybrid flowshop and cast scheduling in parallel machines. To solve this problem, CCABC, a cooperative co-evolutionary artificial bee colony algorithm, is proposed. To the best of our knowledge, this investigation is the first time that a cooperative co-evolutionary ABC has been proposed for scheduling problems. To enhance the performance of the CCABC, several new techniques, including a heuristic-based initialization procedure, a new exploration mechanism, an enhanced onlooker strategy, and a self-adaptive neighbourhood operator, have been suggested. We generate a total of 240 test instances based on a realistic production process and conduct a series of comparative studies to examine the performance of the proposed methods. Our simulation results demonstrate that the proposed CCABC, especially in combination with the improved techniques, is very effective at solving the SCC scheduling problem. The effectiveness of the CCABC has been further confirmed on the instances from real-world SCC processes. In the future, we will extend the CCABC to other scheduling problems, including hybrid flowshops, multi-objective flowshops, and flexible job shop problems.

@&#ACKNOWLEDGEMENTS@&#

This research is partially supported by the National Natural Science Foundation of China 
                  51575212,61174187, 61573178 and Science Foundation of Hubei Province in China (2015CFB560).


                     
                        
                           
                              
                              
                              
                              
                              
                                 
                                    Abbreviation
                                    Full name
                                    Abbreviation
                                    Full name
                                 
                              
                              
                                 
                                    ABC
                                    Artificial bee colony
                                    LPT
                                    Largest processing time
                                 
                                 
                                    ABCP
                                    
                                    ABC with pairwise exchange neighbourhood
                                    OIABC
                                    Obvious implementations of ABC with cooperative coevolution frame
                                 
                                 
                                    ABCS
                                    
                                    ABC with shift neighbourhood
                                    OIABCP
                                    
                                    OIABC with pairwise exchange neighbourhood
                                 
                                 
                                    AIS
                                    Artificial immune system
                                    OIABCS
                                    
                                    OIABC with shift neighbourhood
                                 
                                 
                                    ANOVA
                                    Analysis of variance
                                    OP
                                    One point crossover
                                 
                                 
                                    CC
                                    Continuous caster
                                    OX
                                    Order crossover
                                 
                                 
                                    CCABC
                                    Cooperative co-evolutionary ABC
                                    PMX
                                    Partially-mapped crossover
                                 
                                 
                                    GA
                                    Genetic algorithm
                                    RPI
                                    Relative percentage increase
                                 
                                 
                                    ISA
                                    Improved simulated annealing
                                    RH
                                    Ruhrstahl Heraeus
                                 
                                 
                                    LD
                                    Linz–Donawitz–Verfahren converter
                                    SCC
                                    Steelmaking-continuous casting
                                 
                                 
                                    LF
                                    Ladle Furnace
                                    
                                    
                                 
                              
                           
                        
                     
                  

1. The GA algorithm (Ruiz & Maroto, 2006).

                        
                           
                              
                              
                                 
                                    
                                       Algorithm 5. The GA algorithm
                                 
                              
                              
                                 
                                    
                                       Parameters: 
                                          
                                             P
                                             S
                                          
                                       , 
                                          
                                             P
                                             c
                                          
                                        and 
                                          
                                             P
                                             m
                                          
                                       
                                    
                                 
                                 
                                    
                                       Output: 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    Set 
                                          
                                             P
                                             S
                                          
                                       , 
                                          
                                             P
                                             c
                                          
                                        and 
                                          
                                             P
                                             m
                                          
                                       
                                    
                                 
                                 
                                    Initialize population 
                                          
                                             {
                                             
                                                
                                                   I
                                                   1
                                                
                                                ,
                                                
                                                   I
                                                   2
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   I
                                                   
                                                      P
                                                      S
                                                   
                                                
                                             
                                             }
                                          
                                       
                                    
                                 
                                 
                                    
                                       repeat
                                    
                                 
                                 
                                      
                                       
                                          
                                             Paren
                                             
                                                t
                                                1
                                             
                                             ←
                                             
                                                Tournament
                                                Slection
                                                from
                                             
                                             
                                                {
                                                
                                                   
                                                      I
                                                      1
                                                   
                                                   ,
                                                   
                                                      I
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      I
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             Paren
                                             
                                                t
                                                2
                                             
                                             ←
                                             
                                                Tournament
                                                Slection
                                                from
                                             
                                             
                                                {
                                                
                                                   
                                                      I
                                                      1
                                                   
                                                   ,
                                                   
                                                      I
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      I
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             
                                                (
                                                
                                                   Chil
                                                   
                                                      d
                                                      1
                                                   
                                                   ,
                                                   Chil
                                                   
                                                      d
                                                      2
                                                   
                                                
                                                )
                                             
                                             ←
                                             c
                                             r
                                             o
                                             s
                                             s
                                             o
                                             v
                                             e
                                             r
                                             
                                                (
                                                
                                                   Paren
                                                   
                                                      t
                                                      1
                                                   
                                                   ,
                                                   Paren
                                                   
                                                      t
                                                      2
                                                   
                                                   ,
                                                   
                                                      P
                                                      c
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             Chil
                                             
                                                d
                                                1
                                             
                                             ←
                                             m
                                             u
                                             t
                                             a
                                             t
                                             i
                                             o
                                             n
                                             
                                                (
                                                
                                                   Chil
                                                   
                                                      d
                                                      1
                                                   
                                                   ,
                                                   
                                                      P
                                                      m
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             Chil
                                             
                                                d
                                                2
                                             
                                             ←
                                             m
                                             u
                                             t
                                             a
                                             t
                                             i
                                             o
                                             n
                                             
                                                (
                                                
                                                   Chil
                                                   
                                                      d
                                                      2
                                                   
                                                   ,
                                                   
                                                      P
                                                      m
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             
                                                I
                                                w
                                             
                                             ←
                                             arg
                                             
                                                max
                                                
                                                   i
                                                   =
                                                   1
                                                   ,
                                                   2
                                                   ,
                                                   …
                                                   ,
                                                   P
                                                   S
                                                
                                             
                                             
                                                (
                                                
                                                   f
                                                   (
                                                   
                                                      I
                                                      i
                                                   
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             
                                                {
                                                
                                                   
                                                      I
                                                      1
                                                   
                                                   ,
                                                   
                                                      I
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      I
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                             ←
                                             
                                                {
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            I
                                                            1
                                                         
                                                         ,
                                                         
                                                            I
                                                            2
                                                         
                                                         ,
                                                         …
                                                         ,
                                                         
                                                            I
                                                            
                                                               P
                                                               S
                                                            
                                                         
                                                      
                                                      }
                                                   
                                                   −
                                                   
                                                      I
                                                      w
                                                   
                                                
                                                }
                                             
                                             ∪
                                             
                                                {
                                                
                                                   Chil
                                                   
                                                      d
                                                      1
                                                   
                                                
                                                }
                                             
                                          
                                        if 
                                          
                                             f
                                             
                                                (
                                                
                                                   Chil
                                                   
                                                      d
                                                      1
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   I
                                                   w
                                                
                                                )
                                             
                                             
                                                and
                                                Chil
                                             
                                             
                                                d
                                                1
                                             
                                             
                                                is
                                                unique
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             
                                                {
                                                
                                                   
                                                      I
                                                      1
                                                   
                                                   ,
                                                   
                                                      I
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      I
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                             ←
                                             
                                                {
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            I
                                                            1
                                                         
                                                         ,
                                                         
                                                            I
                                                            2
                                                         
                                                         ,
                                                         …
                                                         ,
                                                         
                                                            I
                                                            
                                                               P
                                                               S
                                                            
                                                         
                                                      
                                                      }
                                                   
                                                   −
                                                   
                                                      I
                                                      w
                                                   
                                                
                                                }
                                             
                                             ∪
                                             
                                                {
                                                
                                                   Chil
                                                   
                                                      d
                                                      2
                                                   
                                                
                                                }
                                             
                                          
                                        if 
                                          
                                             f
                                             
                                                (
                                                
                                                   Chil
                                                   
                                                      d
                                                      2
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   I
                                                   w
                                                
                                                )
                                             
                                             
                                                and
                                                Chil
                                             
                                             
                                                d
                                                2
                                             
                                             
                                                is
                                                unique
                                             
                                          
                                       
                                    
                                 
                                 
                                      Update the 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    
                                       Until a termination criterion is met
                                 
                              
                           
                        
                     
                  

2. The AIS algorithm (Engin & Doyen, 2004).

                        
                           
                              
                              
                                 
                                    
                                       Algorithm 6. The AIS algorithm
                                 
                              
                              
                                 
                                    
                                       Parameters: PS and B
                                    
                                 
                                 
                                    
                                       Output: 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    Set PS and B by the multi-step experimental design approach
                                 
                                 
                                    Initialize a population of antibodies 
                                          
                                             {
                                             
                                                
                                                   I
                                                   1
                                                
                                                ,
                                                
                                                   I
                                                   2
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   I
                                                   
                                                      P
                                                      S
                                                   
                                                
                                             
                                             }
                                          
                                       
                                    
                                 
                                 
                                    
                                       repeat
                                    
                                 
                                 
                                      
                                       //Cloning selection process
                                 
                                 
                                      Calculate fitness for each antibody
                                 
                                 
                                      Generate PS copies of the antibodies, 
                                          
                                             {
                                             
                                                
                                                   O
                                                   1
                                                
                                                ,
                                                
                                                   O
                                                   2
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   O
                                                   
                                                      P
                                                      S
                                                   
                                                
                                             
                                             }
                                          
                                       , using the fitness proportional selection
                                 
                                 
                                      //Affinity maturation process
                                 
                                 
                                      
                                       for
                                       
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             P
                                             S
                                          
                                        
                                       do
                                    
                                 
                                 
                                       
                                       
                                          
                                             
                                                O
                                                i
                                                ′
                                             
                                             ←
                                             I
                                             n
                                             v
                                             e
                                             r
                                             s
                                             e
                                             M
                                             u
                                             t
                                             a
                                             t
                                             i
                                             o
                                             n
                                             
                                                (
                                                
                                                   O
                                                   i
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                       
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                         ′
                                                      
                                                   
                                                   i
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   O
                                                   i
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                O
                                                i
                                             
                                             ←
                                             
                                                O
                                                i
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                       
                                       else
                                       
                                          
                                             
                                                O
                                                i
                                                
                                                   ′
                                                   ′
                                                
                                             
                                             ←
                                             P
                                             a
                                             i
                                             r
                                             w
                                             i
                                             s
                                             e
                                             E
                                             x
                                             c
                                             h
                                             a
                                             n
                                             g
                                             e
                                             M
                                             u
                                             t
                                             a
                                             t
                                             i
                                             o
                                             n
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                         ′
                                                      
                                                   
                                                   i
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                       
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                         
                                                            ′
                                                            ′
                                                         
                                                      
                                                   
                                                   i
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   O
                                                   i
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                O
                                                i
                                             
                                             ←
                                             
                                                
                                                   
                                                      O
                                                      i
                                                   
                                                
                                                
                                                   ′
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       end
                                    
                                 
                                 
                                      
                                       //Receptor editing
                                 
                                 
                                      Replace the worst 
                                          
                                             B
                                             %
                                          
                                        antibodies in 
                                          
                                             {
                                             
                                                
                                                   O
                                                   1
                                                
                                                ,
                                                
                                                   O
                                                   2
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   O
                                                   
                                                      P
                                                      S
                                                   
                                                
                                             
                                             }
                                          
                                        by randomly generated individuals
                                 
                                 
                                      
                                       
                                          
                                             
                                                {
                                                
                                                   
                                                      I
                                                      1
                                                   
                                                   ,
                                                   
                                                      I
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      I
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                             ←
                                             
                                                {
                                                
                                                   
                                                      O
                                                      1
                                                   
                                                   ,
                                                   
                                                      O
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      O
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                 
                                 
                                      Update 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    
                                       Until a termination criterion is met
                                 
                              
                           
                        
                     
                  

3. The HSA algorithm (Naderi et al., 2009).

                        
                           
                              
                              
                                 
                                    
                                       Algorithm 7. The HSA algorithm
                                 
                              
                              
                                 
                                    
                                       Parameters: initial temperature 
                                          
                                             T
                                             0
                                          
                                       , final temperature 
                                          
                                             T
                                             f
                                          
                                       , and number of neighbourhood search in each temperature 
                                          
                                             n
                                             T
                                          
                                       
                                    
                                 
                                 
                                    
                                       Output: 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    Set 
                                          
                                             T
                                             0
                                          
                                       , 
                                          
                                             T
                                             f
                                          
                                       , and 
                                          
                                             n
                                             T
                                          
                                       
                                    
                                 
                                 
                                    Initialize 
                                          
                                             I
                                             ←
                                             
                                                the
                                                LPT
                                                heuristic
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       repeat
                                    
                                 
                                 
                                     
                                       
                                          
                                             T
                                             ←
                                             C
                                             o
                                             o
                                             l
                                             i
                                             n
                                             g
                                             S
                                             c
                                             h
                                             e
                                             d
                                             u
                                             l
                                             e
                                             (
                                             
                                                
                                                   T
                                                   0
                                                
                                                ,
                                                
                                                   T
                                                   f
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                     
                                       
                                          
                                             C
                                             n
                                             t
                                             ←
                                             0
                                          
                                       
                                    
                                 
                                 
                                    
                                       repeat
                                    
                                 
                                 
                                      
                                       
                                          
                                             
                                                I
                                                ′
                                             
                                             ←
                                             S
                                             h
                                             i
                                             f
                                             t
                                             
                                                (
                                                I
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   I
                                                   ′
                                                
                                                )
                                             
                                             ≤
                                             f
                                             
                                                (
                                                I
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             I
                                             ←
                                             
                                                I
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       else if
                                       
                                          
                                             r
                                             a
                                             n
                                             d
                                             
                                                (
                                                
                                                   0
                                                   ,
                                                   1
                                                
                                                )
                                             
                                             <
                                             exp
                                             
                                                (
                                                
                                                   
                                                      (
                                                      
                                                         f
                                                         
                                                            (
                                                            I
                                                            )
                                                         
                                                         −
                                                         f
                                                         
                                                            (
                                                            
                                                               I
                                                               ′
                                                            
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                   /
                                                   T
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             I
                                             ←
                                             
                                                I
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       
                                          
                                             C
                                             n
                                             t
                                             ←
                                             C
                                             n
                                             t
                                             +
                                             1
                                          
                                       
                                    
                                 
                                 
                                     
                                       until
                                       
                                          
                                             C
                                             n
                                             t
                                             =
                                             
                                                n
                                                T
                                             
                                          
                                       
                                    
                                 
                                 
                                     
                                       
                                          
                                             I
                                             ←
                                             D
                                             M
                                             2
                                             (
                                             I
                                             )
                                          
                                       
                                    
                                 
                                 
                                     
                                       
                                          
                                             I
                                             ←
                                             L
                                             o
                                             c
                                             a
                                             l
                                             S
                                             e
                                             a
                                             r
                                             c
                                             h
                                             (
                                             I
                                             )
                                          
                                       
                                    
                                 
                                 
                                     Update 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    
                                       Until a termination criterion is met
                                 
                              
                           
                        
                     
                  

4. The ABC algorithm.
                        
                           
                              
                              
                                 
                                    
                                       Algorithm 8. The ABC algorithm
                                 
                              
                              
                                 
                                    
                                       Parameters: 
                                          
                                             P
                                             S
                                          
                                       and 
                                          θ
                                       
                                    
                                 
                                 
                                    
                                       Output: 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    Set 
                                          
                                             P
                                             S
                                          
                                        and 
                                          θ
                                       
                                    
                                 
                                 
                                    Initialize swarms 
                                          
                                             {
                                             
                                                
                                                   I
                                                   1
                                                
                                                ,
                                                
                                                   I
                                                   2
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   I
                                                   
                                                      P
                                                      S
                                                   
                                                
                                             
                                             }
                                          
                                       
                                    
                                 
                                 
                                    
                                       repeat
                                    
                                 
                                 
                                     //Employed bee phase
                                 
                                 
                                     
                                       for
                                       
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             P
                                             S
                                          
                                        
                                       do
                                    
                                 
                                 
                                      Generate a new individual 
                                          
                                             
                                                
                                                   I
                                                   i
                                                
                                             
                                             ′
                                          
                                        for 
                                          
                                             I
                                             i
                                          
                                       
                                    
                                 
                                 
                                      
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      
                                                         I
                                                         i
                                                      
                                                   
                                                   ′
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   I
                                                   i
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                I
                                                i
                                             
                                             ←
                                             
                                                
                                                   
                                                      I
                                                      i
                                                   
                                                
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                     
                                       end
                                    
                                 
                                 
                                     //Onlooker bee phase
                                 
                                 
                                     
                                       for
                                       
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             P
                                             S
                                          
                                        
                                       do
                                    
                                 
                                 
                                      
                                       
                                          
                                             
                                                I
                                                r
                                             
                                             ←
                                             
                                                Tournament
                                                Slection
                                                from
                                             
                                             
                                                {
                                                
                                                   
                                                      I
                                                      1
                                                   
                                                   ,
                                                   
                                                      I
                                                      2
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      I
                                                      
                                                         P
                                                         S
                                                      
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                 
                                 
                                      Generate a new individual 
                                          
                                             
                                                
                                                   I
                                                   r
                                                
                                             
                                             ′
                                          
                                        for 
                                          
                                             I
                                             r
                                          
                                       
                                    
                                 
                                 
                                      
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      
                                                         I
                                                         r
                                                      
                                                   
                                                   ′
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   I
                                                   r
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                I
                                                r
                                             
                                             ←
                                             
                                                
                                                   
                                                      I
                                                      r
                                                   
                                                
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                     
                                       end
                                    
                                 
                                 
                                     // Scout phase
                                 
                                 
                                     Find individual 
                                          
                                             I
                                             i
                                          
                                        which has not been improved in 
                                          θ
                                        iterations
                                 
                                 
                                     
                                       
                                          
                                             
                                                I
                                                i
                                             
                                             ←
                                             
                                                randomly
                                                generate
                                                an
                                                individual
                                             
                                          
                                       
                                    
                                 
                                 
                                     Update 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    
                                       Until a termination criterion is met
                                 
                              
                           
                        
                     
                  

5. The OIABC algorithm.

                        
                           
                              
                              
                                 
                                    
                                       Algorithm 9. The OIABC algorithm

                                 
                              
                              
                                 
                                    
                                       Parameter: PS
                                    
                                 
                                 
                                    
                                       Output: 
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                          
                                       
                                    
                                 
                                 
                                    Set PS and initialize sub-swarms 
                                          
                                             {
                                             
                                                
                                                   λ
                                                   1
                                                
                                                ,
                                                
                                                   λ
                                                   2
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   λ
                                                   
                                                      P
                                                      S
                                                   
                                                
                                             
                                             }
                                          
                                        and 
                                          
                                             {
                                             
                                                
                                                   μ
                                                   1
                                                
                                                ,
                                                
                                                   μ
                                                   2
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   μ
                                                   
                                                      P
                                                      S
                                                   
                                                
                                             
                                             }
                                          
                                       
                                    
                                 
                                 
                                    Set context vector 
                                          
                                             
                                                I
                                                ¯
                                             
                                             =
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       repeat
                                    
                                 
                                 
                                     //Employed bee phase
                                 
                                 
                                     
                                       for
                                       
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             P
                                             S
                                          
                                        
                                       do
                                    
                                 
                                 
                                      Generate a new charge list 
                                          
                                             λ
                                             
                                                
                                                i
                                                ′
                                             
                                          
                                        for 
                                          
                                             λ
                                             i
                                          
                                       
                                    
                                 
                                 
                                      
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   λ
                                                   
                                                      
                                                      i
                                                      ′
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      i
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                λ
                                                i
                                             
                                             ←
                                             λ
                                             
                                                
                                                i
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   λ
                                                   
                                                      
                                                      i
                                                      ′
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                λ
                                                ¯
                                             
                                             ←
                                             λ
                                             
                                                
                                                i
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                     
                                       end
                                    
                                 
                                 
                                     
                                       for
                                       
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             P
                                             S
                                          
                                        
                                       do
                                    
                                 
                                 
                                      Generate a new cast list 
                                          
                                             μ
                                             
                                                
                                                i
                                                ′
                                             
                                          
                                        for 
                                          
                                             μ
                                             i
                                          
                                       
                                    
                                 
                                 
                                      
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   μ
                                                   
                                                      
                                                      i
                                                      ′
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      i
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                μ
                                                i
                                             
                                             ←
                                             μ
                                             
                                                
                                                i
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   μ
                                                   
                                                      
                                                      i
                                                      ′
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                μ
                                                ¯
                                             
                                             ←
                                             μ
                                             
                                                
                                                i
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                     
                                       end
                                    
                                 
                                 
                                     //Onlooker bee phase
                                 
                                 
                                     
                                       for
                                       
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             P
                                             S
                                          
                                        
                                       do
                                    
                                 
                                 
                                       Select a charge list 
                                          
                                             λ
                                             r
                                          
                                        using tournament selection
                                 
                                 
                                       Generate a new charge list 
                                          
                                             λ
                                             
                                                
                                                r
                                                ′
                                             
                                          
                                        for 
                                          
                                             λ
                                             r
                                          
                                       
                                    
                                 
                                 
                                       
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   λ
                                                   
                                                      
                                                      r
                                                      ′
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      r
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                λ
                                                r
                                             
                                             ←
                                             λ
                                             
                                                
                                                r
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                       
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   λ
                                                   
                                                      
                                                      r
                                                      ′
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                λ
                                                ¯
                                             
                                             ←
                                             λ
                                             
                                                
                                                r
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       end
                                    
                                 
                                 
                                      
                                       for
                                       
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             P
                                             S
                                          
                                        
                                       do
                                    
                                 
                                 
                                       Select a cast list 
                                          
                                             μ
                                             r
                                          
                                        using tournament selection
                                 
                                 
                                       Generate a new individual 
                                          
                                             μ
                                             
                                                
                                                r
                                                ′
                                             
                                          
                                        for 
                                          
                                             μ
                                             r
                                          
                                       
                                    
                                 
                                 
                                       
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   μ
                                                   
                                                      
                                                      r
                                                      ′
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      r
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                μ
                                                r
                                             
                                             ←
                                             μ
                                             
                                                
                                                r
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                       
                                       if
                                       
                                          
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   μ
                                                   
                                                      
                                                      r
                                                      ′
                                                   
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   ,
                                                   
                                                      μ
                                                      ¯
                                                   
                                                
                                                )
                                             
                                          
                                        
                                       then
                                       
                                          
                                             
                                                μ
                                                ¯
                                             
                                             ←
                                             μ
                                             
                                                
                                                r
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                      
                                       end
                                    
                                 
                                 
                                      // Update the best solutions found so far
                                 
                                 
                                      
                                       
                                          
                                             b
                                             e
                                             s
                                             t
                                             s
                                             o
                                             f
                                             a
                                             r
                                             ←
                                             
                                                I
                                                ¯
                                             
                                          
                                        if 
                                          
                                             f
                                             
                                                (
                                                
                                                   I
                                                   ¯
                                                
                                                )
                                             
                                             <
                                             f
                                             
                                                (
                                                
                                                   b
                                                   e
                                                   s
                                                   t
                                                   s
                                                   o
                                                   f
                                                   a
                                                   r
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       Until a termination criterion is met
                                 
                              
                           
                        
                     
                  

@&#REFERENCES@&#

