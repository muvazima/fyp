@&#MAIN-TITLE@&#Statistical shape analysis of subcortical structures using spectral matching

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel groupwise shape analysis approach is proposed to detect regional morphological alterations in sub-cortical structures between two study groups, e.g., healthy and pathological subjects.


                        
                        
                           
                           The proposed framework applies spectral matching in order to find point-to point correspondences across all surfaces.


                        
                        
                           
                           The proposed framework is applied on the clinical application of Alzheimer's disease for detecting abnormal sub-cortical shape variations.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Subcortical morphology

Groupwise shape analysis

Spectral matching

Alzheimer's disease

@&#ABSTRACT@&#


               
               
                  Studying morphological changes of subcortical structures often predicate neurodevelopmental and neurodegenerative diseases, such as Alzheimer's disease and schizophrenia. Hence, methods for quantifying morphological variations in the brain anatomy, including groupwise shape analyses, are becoming increasingly important for studying neurological disorders. In this paper, a novel groupwise shape analysis approach is proposed to detect regional morphological alterations in subcortical structures between two study groups, e.g., healthy and pathological subjects. The proposed scheme extracts smoothed triangulated surface meshes from segmented binary maps, and establishes reliable point-to-point correspondences among the population of surfaces using a spectral matching method. Mean curvature features are incorporated in the matching process, in order to increase the accuracy of the established surface correspondence. The mean shapes are created as the geometric mean of all surfaces in each group, and a distance map between these shapes is used to characterize the morphological changes between the two study groups. The resulting distance map is further analyzed to check for statistically significant differences between two populations. The performance of the proposed framework is evaluated on two separate subcortical structures (hippocampus and putamen). Furthermore, the proposed methodology is validated in a clinical application for detecting abnormal subcortical shape variations in Alzheimer's disease. Experimental results show that the proposed method is comparable to state-of-the-art algorithms, has less computational cost, and is more sensitive to small morphological variations in patients with neuropathologies.
               
            

@&#INTRODUCTION@&#

Quantifying groupwise neuroanatomical shape differences has become an important topic in neuroscience as well as in neuroimaging studies, since brain morphometry has been hypothesized to be linked to various neurological disorders [1]. Recent advances in medical image analysis have led to several morphological studies on different pathologies including schizophrenia [2] and Alzheimer's disease [3]. Early studies on brain morphology were based on volumetric analysis, which had the advantage of simplicity [3,4]. However, these methods lacked regional shape information, which are potentially important for neurological identification. Thus, shape analysis has emerged as an alternative of evaluating morphology location and magnitude in the brain anatomy, in order to detect the neuroanatomical changes in specific regions of a single structure.

Several works have proposed groupwise shape analysis approaches based on creating a template image and estimating the deformation field between each individual image and the template [5–7]. These methods non-rigidly register each image to a specific template, and evaluate the information contained within the deformation field to detect the location and magnitude of shape changes. In deformation-based approaches the template creation and the choice of the registration technique has a critical impact on the quality of the shape analysis results [8]. Indeed, deformable registration remains a challenging problem, particularly in smaller regions such as subcortical structures, which requires a high level of accuracy to precisely match sub-fields.

Another approach for shape analysis is based on medial surface representations [9–12]. These methods provide a compact parameterization of a volumetric object by extracting the 3D skeleton of a shape. The local positional changes are then quantified by assessing morphological variations of the skeleton across a population of shapes. The medial surface representation has been applied to various subcortical structures including the cross sectional images of the corpus callosum [9] and hippocampus/amygdala complex [11], caudate [12], and lateral ventricle [13], in order to evaluate changes in patients diagnosed with schizophrenia. Since medial representation relies on a coarse-scale sampling of the structure of interest, it may be insensitive to small-scale shape differences, which might be present in a studied population [2].

In addition to the above-mentioned methods, several works have proposed surface parameterization based approaches, in which a parameterization of a shape is performed on a simple domain such as a sphere. One such approach is the spherical harmonics (SPHARM) method by Styner et al. [14], which is used in combination with Point Distribution Models (PDM) to discover structural differences across populations. In this approach, which is called SPHARM-PDM, shapes first represented by binary segmentations are converted into a corresponding spherical harmonic description. Then, the correspondence problem is solved by the alignment of the spherical parameterization using a first-order ellipsoid. In this method, the spherical description of surface meshes is sampled into triangulated surfaces using icosahedron subdivision. These surfaces are then spatially aligned using rigid Procrustes alignment.

The SPHARM-PDM method has been applied in various clinical applications, such as for studying shape variations of the hippocampus [2] and lateral ventricles [13] in schizophrenia, and analyzing caudate morphological changes [15] in bipolar disorder. Although SPHARM-PDM enabled the reliable assessment of local shape variation across populations, it requires establishing correspondence on simplified spherical models of surfaces, which is restricted to surfaces with spherical topology [16,17]. In order to overcome this limitation, combining SPHARM-PDM with an entropy-based particle system correspondence model has been proposed in [16]. Furthermore, Cates et al. [17] proposed to model the shape as sets of particles, where the particles are distributed on the surfaces of the shapes by optimizing an entropy-based energy function. According to a recent evaluation in [8], this method was not able to find the location of group differences in some cases.

Chung et al. [18] proposed weighted-SPHARM, which expresses surface data as a weighted linear combination of spherical harmonics. The weighted-SPHARM method generalizes the traditional SPHARM representation as a special case. This method reduces ringing artifacts observed with the SPHARM representation especially for the high frequency components [18]. However, it is applicable for a limited class of shapes and is only able to detect the sufficiently large shape difference across populations. The SPHARM-MAT (SPHARM Modeling and Analysis Toolkit) is another shape analysis method, which creates parametric surface models using spherical harmonics [19]. This approach is similar to the SPHARM-PDM framework [14] but applies different spherical parameterization and shape alignment process [19]. A comparison between the two spherical harmonics-based methods showed that SPHARM-PDM could capture the shape differences more accurately rather than the SPHARM-MAT [8]
                  

In general, despite the development of various approaches in the field of groupwise shape analysis, there are still some limitations and challenges that need to be addressed. For instance, the morphometry framework should be robust to different shape topologies and shape segmentation approaches, while from a computational perspective, the total population-wise shape analysis process should be determined in an efficient time manner, in order to be feasibly implemented as a clinical diagnostic tool.

One of the main challenges in a surface-based groupwise shape analysis approach is to establish reliable one-to-one correspondences among the population of surfaces. Among various surface matching algorithms in the literature, the recent spectral matching approach proposed by Lombaert et al. [20,21] have shown promising results, which enables mapping brain cortical surfaces in a computational efficient manner. To the best of our knowledge, no studies have been based on spectral matching theory directly for groupwise shape analysis. In this paper, we employ the spectral matching approach in a groupwise shape analysis pipeline, designed for the population-wise comparison between two groups of subcortical structures. In the proposed framework, the mean curvature feature is used as feature information in the spectral matching process in order to increase the surface matching accuracy. This work presents a complete pipeline that allows the detection, localization, and quantification of statistically significant morphological differences in different subcortical brain structures across various populations.

The main contribution of this paper is to propose a robust and reliable spectral-based shape analysis framework using curvature features for analyzing simple (e.g., putamen) and complex (e.g., hippocampus) subcortical structures. Furthermore, in contrast to the above-mentioned methods, the suggested framework can perform population-wise shape analysis in a computational efficient fashion and integrates the spectral matching approach with a groupwise shape analysis framework. This paper is the first work that integrates spectral matching in to a groupwise subcortical shape analysis pipeline and incorporates curvature features to increase the surface matching accuracy (methodological contribution). Experimental analysis on real clinical datasets show that the extracted group differences are similar to the findings of other clinical studies (clinical contribution). This work would represent a significant forward for providing an alternative for future clinical studies on sub-cortical brain structures.

The proposed shape analysis framework processes two groups of segmented binary images from neuroimaging data (e.g., MRI) as input. After converting the images into triangulated surface meshes and applying the curvature flow smoothing process, the surface correspondence is established between two populations using the spectral matching approach. The mean curvature features are incorporated in the spectral matching process to improve the accuracy of the resulting surface correspondence. Then, two mean shapes for each group are created as the geometric mean of all surfaces, and the distance map between the two mean shapes is computed. To verify for statistically significant differences between two populations, a non-parametric permutation testing scheme [22] is applied, followed an FDR correction [23] for multiple comparisons. The evaluation of the proposed shape analysis framework is performed on three separate neuroanatomical datasets, and group differences across populations are detected by point-to-point correspondences. The output of these analyses is compared to a state-of-the-art method used for groupwise analysis of anatomical shapes, namely SPHARM-PDM.

A preliminary version of the proposed method has been presented in [24], but was dependent of spherical representations of input shapes, integrated a point-based shape matching method, and with limited validation. The present paper provides the detailed explanation of the methodology and offers the following major contributions: (i) a curvature-based surface smoothing is employed to smoothen extracted 3D surfaces, which has less computational requirements compared to the spherical-based smoothing method used in [24]; (ii) mean curvature feature was added into the spectral matching process to increase the surface matching accuracy; (iii) a statistical permutation-based analysis is applied to detect the significant shape differences across populations; (iv) the evaluation of the proposed pipeline is performed on an increased number of clinical datasets with more samples.

The remainder of this paper is organized as follows. In Section 2, the methodology is presented, including the overview of the framework, the spectral surface matching approach, and the detailed description of the proposed population-wise shape analysis framework. The quantitative evaluation of the shape analysis method is provided in Section 3. Section 4 presents a discussion on the results obtained from different neuroimaging datasets, followed by a conclusion in Section 5.

In this section, an overview of the proposed groupwise shape analysis pipeline is presented (Fig. 1
                        ). The inputs of the proposed framework are two sets of segmented binary maps of a particular structure of interest from medical images, obtained either manually or automatically. The output of the proposed pipeline is the extracted local and global shape differences between two sets.

In the first step, the segmented binary maps are processed to the same image orientation and isotropic voxel sizes, and then converted into 3D triangulated surfaces using the marching cube algorithm [25]. A smoothing process is subsequently applied on each surface in order to remove surface noise. Then, a reference surface is defined in an iterative process, and all triangulated surfaces are aligned to this reference using a rigid registration algorithm. In order to establish the point-to-point correspondences across all surfaces, each mesh is matched to a selected reference surface using the spectral matching algorithm. The vertices of all surfaces are rearranged to create the new reconstructed meshes with consistent vertex ordering. This enables to create a mean shape of each study group, and detect any morphological variations between two groups. A distance map between two mean shapes is computed to capture the local group differences across populations. Moreover, average and maximum distances, as well as Dice volume overlap are calculated to indicate the global group differences between two study groups.

This section presents the theoretical framework of computing the spectral matching between two surfaces in the spectral domain. The matching between two surfaces S
                        1 and S
                        2 is conducted in a two-step process (Fig. 2a and b). In the first step, an initial map is calculated between the two surfaces [20]. This initial map is then used in the second step to establish a smooth map between the two meshes [21].

For each surface mesh S
                        
                           i
                        (i
                        ∈{1, 2}) composed of the set of vertices V
                        
                           i
                         and edges E
                        
                           i
                         (neighboring points in mesh faces), the corresponding graph G
                        
                           i
                        
                        ={V
                        
                           i
                        , E
                        
                           i
                        } is built. Then, the weighted adjacency matrix W
                        
                           i
                         is created based on a distance between connected vertices and the graph Laplacian matrix L
                        
                           i
                         
                        [26] is defined as:
                           
                              (1)
                              
                                 
                                    
                                       L
                                       i
                                    
                                    =
                                    
                                       G
                                       i
                                    
                                    (
                                    
                                       D
                                       i
                                    
                                    −
                                    
                                       W
                                       i
                                    
                                    )
                                 
                              
                           
                        
                     

where, D
                        
                           i
                         is a diagonal matrix with elements given by the degree of vertices. G
                        
                           i
                         is another diagonal matrix, which could be considered as 
                           
                              
                                 G
                                 i
                              
                              =
                              
                                 D
                                 i
                                 
                                    −
                                    1
                                 
                              
                           
                         or any other (positive valued) vertex weights [20,27]. The eigendecomposition of the Laplacian matrix L
                        
                           i
                         computes the eigenvalues and the associated eigenmodes. The spectrum (spectral representation) 
                           
                              
                                 
                                    S
                                    ˜
                                 
                                 i
                              
                           
                         is defined as the first k eigenmodes associated with the non-zero eigenvalues.

Once the spectrums 
                           
                              
                                 
                                    S
                                    ˜
                                 
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    S
                                    ˜
                                 
                                 2
                              
                           
                         are computed, the reordering and sign adjustment [20] process are performed and the resulting spectrums are aligned using the Coherent Point Drift (CPD) method [28]. Then, the correspondence map c between two surfaces S
                        1 and S
                        2 is established with a simple nearest-neighbor search in the spectral domain. An overview of the procedure to find the correspondence map c is shown in Fig. 2a.

Given the initial map c between two surfaces, the final map φ (smooth match) is obtained according to Fig. 2b. In this procedure, an association graph G
                        
                           a
                        
                        ={V
                        1,2, E
                        1,2,c
                        } composed of the set of vertices and edges of S
                        1 and S
                        2 with the initial links c between the two surface meshes is created. Then, the Laplacian matrix is created as L
                        
                           a
                        
                        =
                        G
                        
                           a
                        (D
                        
                           a
                        
                        −
                        W
                        
                           a
                        ), where, W
                        
                           a
                        , G
                        
                           a
                        , and D
                        
                           a
                         could be defined in the similar way as Eq. (1). The eigendecomposition of the Laplacian matrix L
                        
                           a
                         produces a shared set of eigenvectors that enables a direct mapping φ
                        1→2 between two meshes (see [21] for more details).

According to [20,27], considering higher node weights in the graph G
                        
                           a
                         could improve the spectral matching precision between two surfaces. This could be achieved by adding extra features on node weights G
                        
                           a
                         
                        [20,27]. In this paper, we propose to use the mean curvature [29] as an additional feature, due to its ability to represent the pointwise characteristic within a surface. In fact, the exponential of the mean curvature is added to the node weights in the Laplacian graph L
                        
                           a
                         to assign higher weights to each vertex. In order to compute the mean curvature at each vertex 
                           v
                        , the principal curvatures 
                           
                              
                                 C
                                 
                                    min
                                 
                              
                              (
                              v
                              )
                           
                         and 
                           
                              
                                 C
                                 
                                    max
                                 
                              
                              (
                              v
                              )
                           
                         
                        [29] are calculated as the minimum and maximum curving degrees of the surface S
                        
                           i
                        . Then, the mean surface curvature C at each vertex 
                           v
                         is defined as:
                           
                              (2)
                              
                                 
                                    C
                                    (
                                    v
                                    )
                                    =
                                    
                                       1
                                       2
                                    
                                    (
                                    
                                       C
                                       
                                          min
                                       
                                    
                                    (
                                    v
                                    )
                                    +
                                    
                                       C
                                       
                                          max
                                       
                                    
                                    (
                                    v
                                    )
                                    )
                                 
                              
                           
                        
                     

Hence, the mean curvature of surface S
                        
                           i
                         is computed as {C(1), C(2), …, C(n)}, where, n is the total number of vertices in the surface S
                        
                           i
                        . The additional information is incorporated in the weighting of the nodes by computing the exponential of the mean curvature, and defining the diagonal node weighting matrix G
                        
                           a
                         as:
                           
                              (3)
                              
                                 
                                    
                                       G
                                       a
                                    
                                    =
                                    
                                       D
                                       a
                                       
                                          −
                                          1
                                       
                                    
                                    (
                                    exp
                                    (
                                    diag
                                    (
                                    C
                                    (
                                    1
                                    )
                                    ,
                                    C
                                    (
                                    2
                                    )
                                    ,
                                    …
                                    ,
                                    C
                                    (
                                    n
                                    )
                                    )
                                    )
                                 
                              
                           
                        
                     

The effect of the curvature feature on the matching accuracy will be assessed in Section 3.

Let 
                              
                                 
                                    
                                       {
                                       
                                          I
                                          i
                                          A
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          A
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       {
                                       
                                          I
                                          i
                                          B
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          B
                                       
                                    
                                 
                              
                            be two separate sets of segmented binary maps of a particular subcortical structure, with N
                           A and N
                           B as the number of samples in each set, respectively. To extract smooth 3D triangulated surface meshes from input binary maps, the labeled datasets are first reoriented in the same image orientation and resampled to isotropic voxel sizes of 1×1×1mm3. Then, the isosurfaces of the segmentation are extracted using the marching cube algorithm [25] to generate 3D surface meshes denoted as 
                              
                                 
                                    
                                       {
                                       
                                          M
                                          i
                                          A
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          A
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       {
                                       
                                          M
                                          i
                                          B
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          B
                                       
                                    
                                 
                              
                            for the two study groups.

The 3D triangulated surface meshes are then smoothed using mean curvature flow algorithm [30], in order to create the smoothed meshes 
                              
                                 
                                    
                                       {
                                       
                                          S
                                          i
                                          A
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          A
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       {
                                       
                                          S
                                          i
                                          B
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          B
                                       
                                    
                                 
                              
                           . This smoothing step is an iterative process, which removes surface irregularities and improves the appearance of surfaces. Given a triangulated surface M
                           
                              i
                            and for each mesh vertex x, the mean curvature flow is computed using the following explicit vertex-updating scheme:
                              
                                 (4)
                                 
                                    
                                       
                                          x
                                          
                                             new
                                          
                                       
                                        
                                       ←
                                        
                                       
                                          x
                                          
                                             old
                                          
                                       
                                       +
                                       λ
                                        
                                       H
                                       (
                                       
                                          x
                                          
                                             old
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        

where, the step-size λ is a small positive number. This parameter should be chosen small enough to keep the smoothing process stable. Here, H(x
                           old) is a discrete approximation of the mean curvature vector at a mesh vertex x, which is defined as:
                              
                                 (5)
                                 
                                    
                                       H
                                       (
                                       
                                          x
                                          
                                             old
                                          
                                       
                                       )
                                       =
                                       
                                          1
                                          
                                             4
                                             ∅
                                          
                                       
                                       
                                          ∑
                                          i
                                       
                                       
                                          (
                                          cot
                                           
                                          
                                             α
                                             i
                                          
                                          )
                                          +
                                          cos
                                           
                                          
                                             β
                                             i
                                          
                                          (
                                          
                                             Q
                                             i
                                          
                                          −
                                          
                                             x
                                             
                                                old
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        

where, ∅ is the sum of the areas of the triangles surrounding x and {Q
                           
                              i
                           } are the neighbors of the vertex x
                           
                              old
                           . Here, α
                           
                              i
                            and β
                           
                              i
                            are the two angles opposite to the edge Q
                           
                              i
                           
                           x
                           old. The process defined in Eq. (4) is applied to every point of each triangulated surface M
                           
                              i
                            iteratively to further smooth the mesh. High iterations produce smoother mesh, but it might cause the loss of fine surface details. Removing fine surface information could mislead a groupwise morphological study in capturing small shape differences. In this paper, the 3D surfaces are smoothed after five iterations. This is the least smoothing that is required to avoid failure in spectral matching process. The parameter λ is set to 1.0 as suggested in [30].

As a prerequisite for any shape analysis study, objects have to be normalized with respect to a reference coordinate frame. In order to define the reference surface S
                           
                              r
                           , an arbitrary surface from the input dataset can be chosen randomly, and used as a reference mesh. Alternatively, an average template could be created in an iterative process and employed as a reference surface. In this study, these two different reference selection approaches are tested, in order to evaluate their impact on the performance of the proposed shape analysis framework.

The step-by-step procedure of the average reference computation is presented in Algorithm 1. This algorithm is based on the approach proposed by Guimond et al. [31], in which an average image was created by alternating between pairwise registrations and updates of the average image. The input to Algorithm 1 is the union of the two sets 
                              
                                 
                                    
                                       {
                                       
                                          S
                                          i
                                          A
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          A
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       {
                                       
                                          S
                                          i
                                          B
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          B
                                       
                                    
                                 
                              
                           , which is defined as 
                              
                                 
                                    
                                       {
                                       
                                          S
                                          i
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       (
                                       
                                          N
                                          A
                                       
                                       +
                                       
                                          N
                                          B
                                       
                                       )
                                    
                                 
                              
                           . Starting from an initial reference surface (e.g., S
                           
                              r
                           
                           =
                           S
                           1), all other surfaces S
                           
                              i
                            are rigidly aligned to the selected reference mesh. This rigid alignment is performed using the iterative closest point (ICP) algorithm [32], which finds the optimal rigid transformation between each mesh and the reference S
                           
                              r
                           . In the next step, the point-to-point mapping φ
                           
                              i
                              
                              →
                              
                              r
                            between each surface S
                           
                              i
                            and S
                           
                              r
                            is computed based on the spectral matching framework presented in Section 3. In the final step, the geometrical mean shape is estimated from all matched structures, and used as an updated reference shape. This process terminates when no more changes in S
                           
                              r
                            obtained or the maximum number of iterations is achieved. According to preliminary experiments, the maximum iteration value is set as 10.

Once the reference surface S
                           
                              r
                            is defined, using either random selection or average surface creation, all surfaces S
                           
                              i
                            are registered rigidly to S
                           
                              r
                           . This global surface alignment between each surface S
                           
                              i
                            and reference surface S
                           
                              r
                            consists of rigid transformations.
                              Algorithm 1
                              :


                              Average template
                                    
                                       
                                          
                                          
                                             
                                                
                                                   Input: 
                                                   N
                                                   =(N
                                                   A
                                                   +
                                                   N
                                                   B) triangulated surfaces S
                                                   
                                                      i
                                                   , and an initial reference surface (e.g., S
                                                   
                                                      r
                                                   
                                                   =
                                                   S
                                                   1)
                                             
                                             
                                                
                                                   
                                                   repeat
                                                
                                             
                                             
                                                
                                                   
                                                   1. Align all surfaces S
                                                   
                                                      i
                                                   –S
                                                   
                                                      r
                                                    using rigid ICP
                                             
                                             
                                                
                                                   
                                                   2. Find point-to-point mapping φ
                                                   
                                                      i
                                                      
                                                      →
                                                      
                                                      r
                                                    between each surface S
                                                   
                                                      i
                                                    and S
                                                   
                                                      r
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   3. Update reference 
                                                      
                                                         
                                                            S
                                                            r
                                                         
                                                         =
                                                         
                                                            1
                                                            N
                                                         
                                                         
                                                            ∑
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            N
                                                         
                                                         
                                                            (
                                                            
                                                               S
                                                               i
                                                            
                                                            
                                                               
                                                            
                                                            
                                                               φ
                                                               
                                                                  i
                                                                   
                                                                  →
                                                                   
                                                                  r
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   until No more changes in S
                                                   
                                                      r
                                                    obtained or the maximum number of iterations is reached
                                             
                                             
                                                
                                                   Output: average template S
                                                   
                                                      r
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

Given two sets of aligned surface meshes 
                              
                                 
                                    
                                       {
                                       
                                          S
                                          i
                                          A
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          A
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       {
                                       
                                          S
                                          i
                                          B
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          B
                                       
                                    
                                 
                              
                           , the point-to-point correspondences between each surface and the reference S
                           
                              r
                            is established using the spectral matching approach presented in Section 2.2. Then, the mesh vertices of all surfaces are rearranged to have the consistent ordering across the populations. The resulting reconstructed meshes are denoted as 
                              
                                 
                                    
                                       {
                                       
                                          
                                             S
                                             ′
                                          
                                          i
                                          A
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          A
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       {
                                       
                                          
                                             S
                                             ′
                                          
                                          i
                                          B
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          B
                                       
                                    
                                 
                              
                            for the two study groups.

The mean shapes 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    A
                                 
                              
                            and 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    B
                                 
                              
                            are computed by averaging the 3D coordinates of corresponding surface points across each group:
                              
                                 (6)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         S
                                                         ′
                                                      
                                                      μ
                                                      A
                                                   
                                                   =
                                                   
                                                      1
                                                      
                                                         
                                                            N
                                                            A
                                                         
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         
                                                            N
                                                            A
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            S
                                                            ′
                                                         
                                                         i
                                                         A
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   where
                                                    
                                                   
                                                      
                                                         S
                                                         ′
                                                      
                                                      i
                                                      A
                                                   
                                                   =
                                                   
                                                      
                                                         S
                                                         ′
                                                      
                                                      i
                                                      A
                                                   
                                                   
                                                      
                                                   
                                                   
                                                      φ
                                                      
                                                         i
                                                         →
                                                         r
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         S
                                                         ′
                                                      
                                                      μ
                                                      B
                                                   
                                                   =
                                                   
                                                      1
                                                      
                                                         
                                                            N
                                                            B
                                                         
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         
                                                            N
                                                            B
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            S
                                                            ′
                                                         
                                                         i
                                                         B
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   where
                                                    
                                                   
                                                      
                                                         S
                                                         ′
                                                      
                                                      i
                                                      B
                                                   
                                                   =
                                                   
                                                      
                                                         S
                                                         ′
                                                      
                                                      i
                                                      B
                                                   
                                                   
                                                      
                                                   
                                                   
                                                      φ
                                                      
                                                         i
                                                         →
                                                         r
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

with φ
                           
                              i
                              
                              →
                              
                              r
                            the mapping from instance S
                           i to reference S
                           
                              r
                           . The local shape differences between groups can be detected by computing a distance map between two mean shapes 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    A
                                 
                              
                            and 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    B
                                 
                              
                           . This will provide the visual assessment of the location and magnitude of the differences between groups A and B. We use a standard, non-parametric Hotelling T
                           2 test [22] to check for significant group differences, with the null hypothesis that the two groups are drawn from the same distribution. The resulting raw p-values are then corrected for multiple comparisons by the false discovery rate (FDR) approach [33].

The performance of the method is further evaluated by significant vertex ratio metric, which is estimated by computing the ratio of the number of statistically significant vertices over the total number of surface points of the mesh [8].

The global shape difference between two groups is computed by averaging the distances between the mean surfaces, which results in the mean absolute distance (MAD). The mean absolute distance (MAD) attempts to estimate the average distance of surfaces 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    A
                                 
                              
                            and 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    B
                                 
                              
                            by projecting the vertices of the first surface on the second one [34]. Moreover, the Hausdorff distance [35] is calculated as the maximum distance between two mean shapes. This measure has high sensitivity to positional differences between two surfaces. In addition, Dice coefficient [36] is reported as a global measure, which indicates the amount of volume overlap between two mean shapes. The 3D Dice coefficient metric between two surfaces 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    A
                                 
                              
                            and 
                              
                                 
                                    
                                       S
                                       ′
                                    
                                    μ
                                    B
                                 
                              
                            is defined as the intersection divided by the mean volume of the two surfaces:
                              
                                 (7)
                                 
                                    
                                       Dice
                                       (
                                       
                                          
                                             S
                                             ′
                                          
                                          μ
                                          A
                                       
                                       ,
                                       
                                          
                                             S
                                             ′
                                          
                                          μ
                                          B
                                       
                                       )
                                       =
                                       
                                          
                                             |
                                             
                                                
                                                   S
                                                   ′
                                                
                                                μ
                                                A
                                             
                                             ∩
                                             
                                                
                                                   S
                                                   ′
                                                
                                                μ
                                                B
                                             
                                             |
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         |
                                                         
                                                            
                                                               S
                                                               ′
                                                            
                                                            μ
                                                            A
                                                         
                                                         |
                                                         +
                                                         |
                                                         
                                                            
                                                               S
                                                               ′
                                                            
                                                            μ
                                                            B
                                                         
                                                         |
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

For identical surfaces, Dice coefficient achieves its maximum value of 1, with decreasing values indicating less volume overlap.

@&#RESULTS@&#

In this section, we will first evaluate the accuracy of the proposed method under different configurations and initial conditions. Then, the performance of the shape analysis approach will be evaluated on different subcortical structures (hippocampus and putamen) from various neuroimaging datasets. Finally, the proposed methodology is applied on a clinical application of Alzheimer's disease. This disorder is one of the most widespread diseases in the elderly population, which gradually damages the brain regions including hippocampus. Here, we use our framework to quantify subcortical morphological changes in patients diagnosed with Alzheimer's and mild cognitive impairment.

For accuracy and performance evaluation, two separate neuroimaging datasets were used. The first dataset includes putamen structures (PT dataset) and the second dataset consists of hippocampus shapes (HPC dataset).

The PT dataset includes 36 T1-weighted MR images from healthy controls. Subjects were recruited from a pediatric brain study (mean age 11, 24 males). Acquisition was performed on a 3.0 T MRI system (Philips Acheiva or Siemens) with an in-plane resolution of 256×256, slice thickness of 1mm, and voxel size ranging between 1×0.9677×0.9677mm3 and 1×1×1mm3. In this dataset, the left putamen was segmented using FSL-FIRST automatic segmentation toolbox [37] and corrected by an experienced user. The segmented putamen structures in the dataset have been randomly separated into two groups to create two different groups A and B.

The HPC dataset contains 42 hippocampus shapes obtained from schizophrenic patients and matched healthy controls (mean age 32, all male gender) [2]. The hippocampi were manually segmented from IR-Prepped SPGR (Inversion Recovery-Prepared Spoiled Gradient Echo) data segmented originally at 0.9375×0.9375×1.55mm3 resolution. In the HPC dataset, all cases were randomized and group association was performed to create two different groups (group A and group B). The SPHARM-PDM toolbox developers prepared this dataset at the UNC Neuro Image Analysis Laboratory (see www.nitrc.org/projects/spharm-pdm), as part of the public UNC Shape Tool distribution for shape analysis studies. Since the HPC dataset was provided by the SPHARM-PDM software developers, it is relevant to assess the performance of the proposed shape analysis method compared to the SPHARM-PDM approach on this dataset.

In order to validate the proposed framework on clinical applications, a popular brain imaging dataset in Alzheimer's disease, namely the Alzheimer's disease Neuroimaging Initiative (ADNI) was used. Capturing the structural morphometry have always been a target of interest in Alzheimer's disease studies, since evaluating the structural changes could provide a clue for early detection of the pathology. The ADNI database (adni.loni.usc.edu) was launched in 2003 as a public-private partnership, led by Principal Investigator Michael W. Weiner, MD. The primary goal of ADNI has been to test whether serial magnetic resonance imaging (MRI), positron emission tomography (PET), other biological markers, and clinical and neuropsychological assessment can be combined to measure the progression of mild cognitive impairment (MCI) and early Alzheimer's disease (AD). For up-to-date information, see www.adni-info.org. The database of ADNI consists of cross-sectional and longitudinal data including 1.5 or 3.0 T structural MR images. The detailed description of the MRI protocol of ADNI is provided in [38]. For this study, a subset of screening 1.5 T MR images is used including 47 normal controls (NC), 47 AD patients, and 47 individuals with MCI. The three groups are matched approximately by age and gender (NC with mean age of 76.7±5.4, 23 males; AD with mean age of 77.4±7.2, 21 males; and MCI with mean age of 75.0±6.9, 28 males). For the purpose of reproducibility, the list of the study participants’ identifiers is provided in the Supplementary material. Contributors of ADNI performed additional post-processing steps on MR images to correct certain image artifacts and to enhance standardization across sites and platforms. The post-processing steps include gradient non-linearity correction [39], intensity inhomogeneity correction [38], bias field correction [40], and phantom-based geometrical scaling to remove calibration errors [41]. Here, we use these processed images. Left and right hippocampi were segmented using FSL-FIRST automatic segmentation software package [37] and visual inspection was performed on the output binary masks to ensure the quality of the automatic segmentation.

The proposed framework was first tested under different configurations using both PT and HPC datasets. The minimum number of spectral coordinates, which is required for having a stable output, was determined. Then, the impact of curvature features and different reference surfaces on the accuracy of the proposed framework was tested. In each case, mean absolute distance (MAD) measure, along with Hausdorff distance [35] and Dice coefficient [36] was computed to assess the group differences between mean shape A and B. To evaluate the accuracy of the proposed framework, the performance of the spectral approach under different configurations was compared with a state-of-the-art method used for groupwise analysis of anatomical shapes, namely SPHARM-PDM [14]. The maximum spherical harmonics degree of the SPHARM-PDM method is set to 15 for putamen structures and 12 for hippocampus shapes.

Once the configuration of the proposed framework was completed, the proposed framework was validated on PT and HPC subcortical datasets. In these experiments, both local and global group differences were analyzed and compared to SPHARM-PDM. Finally, the proposed methodology was applied for quantifying hippocampal morphological variations in Alzheimer's disease (AD). Hippocampal morphometry have been increasingly used in the AD research in the perspective of early detection of the pathology and future treatments. Here, the proposed framework was applied for detecting the morphological changes in individuals with Alzheimer's disease, in order to verify the accuracy of the spectral based shape analysis approach in the statistical studies of this clinical application.

The number of eigenvectors used to model surfaces in the spectral domain has an impact on the accuracy of the established surface correspondences in the spectral matching process. In this experiment, we examine the effect of the number of eigenvectors used as spectral coordinates on the groupwise shape analysis output. The eigendecomposition process is performed twice in the spectral matching approach: once for generating the initial map c, and once for establishing the final map φ (see Section 2.2). As mentioned in Section 2.2, the first k eigenvectors associated with the smaller non-zero eigenvalues are extracted as spectral coordinates. The rationale for this choice is that the eigenvectors associated with the lower non-zero eigenvalues represent coarse intrinsic geometric properties of a shape (i.e., depicting the global shape model). However, the question remains how many eigenvectors is enough to represent the surfaces in the initial step, as well as the association graph G
                           
                              a
                            in the final process.

Here, we apply our shape analysis framework on both PT and HPC datasets with varying number of eigenvectors, and evaluate the framework output by measuring the mean absolute distance between two groups A and B. In this experiment, 10 separate study groups A and B are created from each dataset, and the average mean absolute distance is reported under varying number of eigenvectors (Fig. 3
                           ). This experiment demonstrates that the framework output becomes stable at k
                           =3 for PT dataset and k
                           =4 for HPC dataset, and gains no further significant changes beyond these values. The difference in the sufficient numbers of eigenvectors between two datasets is due to the higher complexity of hippocampus structures compared to putamen surfaces. Thus, more eigenvectors are required to model hippocampus surfaces. Therefore, we consider k
                           initial
                           =
                           k
                           final
                           =3 for PT, and k
                           initial
                           =
                           k
                           final
                           =4 for HPC dataset as the number of eigenvectors for the remainder of the experiments.

In this section, the impact of integrating additional features on the performance of the spectral groupwise approach is first evaluated to understand the value of surface curvature in the matching process. Then, the robustness of the subcortical surface matching process, both with and without additional features, is assessed by applying synthetic deformations to the surfaces.

As mentioned previously in Section 2.2, one can include additional information in the spectral matching process, by establishing a meaningful node weight for each vertex. Here, we compute the exponential of the mean curvature at each vertex (Eq. (3)), and use the combination of curvature and spectral coordinates for surface matching.

In order to evaluate the performance improvement after incorporating additional information, 10 separate subsets are created from 36 putamen structures of PT dataset. Each subset includes 10 different surfaces, i.e., five surfaces are considered as the member of the study group A and the rest are marked as group B. The proposed shape analysis framework is then applied on each subset with and without curvature features. In addition, the accuracy of the two implementation of the shape analysis framework is compared with the state-of-the-art groupwise shape analysis method, SPHARM-PDM [14]. Table 1
                            provides the average Dice coefficient, Hausdorff distance, and mean absolute distance in 10 separate subsets. Comparing our framework to the SPHARM-PDM approach revealed that the groupwise shape analysis is more accurate using curvature features (MAD=0.25±0.99mm rather than using the spectral coordinate alone (MAD=0.37±0.14mm).

We then tested the proposed shape analysis pipeline on the HPC dataset with and without curvature features, in order to investigate the influence of incorporating additional features. The extracted group differences show that the groupwise shape analysis integrated with curvature features (Dice=0.93, Hausd. Dist.=1.16mm, MAD=0.25±0.23mm) is more accurate rather than using the spectral coordinate alone (Dice=0.70, Hausd. Dist.=2.56mm, MAD=0.95±0.57mm). Hence, we can conclude that adding mean curvature has a significant positive effect on the framework's precision, when matching the hippocampus structures.

Now, we evaluate the accuracy of the subcortical surface matching process with and without additional features by testing for robustness to synthetic deformations on the PT dataset. To achieve this, we synthetically deform putamen surfaces, and match each putamen structure to its deformed instance. Since the vertex indexing remains the same, we are able to establish a ground truth for correspondence maps. Thus, we measure the average distance between the locations of corresponding points found with spectral matching and the real locations of corresponding points defined by the ground truth.

Here, each vertex x
                           =(X, Y, Z) of the surface S
                           
                              i
                            is deformed by applying the transformation Z′=(1+
                           α)Z. This deformation provides surface compression with out changing the topology of the mesh. All 36 putamen surfaces are deformed by varying α in the range of [0,0.4]. Fig. 4
                            left shows the accuracy of the surface matching with and without additional curvature features. At maximal deformation (α
                           =0.4), the spectral matching method achieves an average error of 0.47±0.10mm with curvature features, and 2.65±0.87mm without extra information. In the next experiment, a radial distortion of 
                              
                                 
                                    X
                                    ′
                                 
                                 =
                                 X
                                 +
                                 β
                                 
                                    
                                       (
                                       
                                          X
                                          2
                                       
                                       +
                                       
                                          Y
                                          2
                                       
                                       )
                                    
                                    2
                                 
                                 /
                                 max
                                 (
                                 
                                    
                                       (
                                       
                                          X
                                          2
                                       
                                       +
                                       
                                          Y
                                          2
                                       
                                       )
                                    
                                    2
                                 
                                 )
                              
                            is applied to each vertex x
                           =(X, Y, Z) of all 36 putamen surfaces. This deformation simulates a drastic change in a surface shape, while preserving the mesh topology. The controlling parameter β is varied in the range of [0,15] and the surface matching accuracy is assessed as shown in Fig. 4 right. These experiments show the performance of the point-to-point spectral matching under synthetic deformation and indicate that using additional curvature features enhances the surface matching accuracy.

In this section, we verify that the proposed shape analysis approach is unbiased to the choice of the reference surface within a study group. To this end, an arbitrary initial reference is selected as one of the surfaces in the PT dataset. Then, all surfaces are matched to this reference surface and shape analysis is conducted to estimate group differences. We performed 36 separate tests by iteratively selecting a new putamen surface as reference shape and computing the average mean distance in multiple runs (see Table 2
                           ). The average mean difference for the whole dataset is 0.14±0.005mm. In order to further examine the impact of reference surface on the shape analysis accuracy, in the next experiment, an average template is created in an iterative process, as described in Section 4.2. This template is applied as a reference surface in a shape analysis study on PT dataset, yielding a MAD of 0.14±0.12mm (see Table 2). These results suggest that the method produces near identical shape differences even by varying the choice of the initial reference. Therefore, if reducing the computational time is important in a study, it is possible to choose one of the input surfaces as a reference surface, instead of creating an average template.

In this section, we validate the performance of our proposed methodology on localizing structural morphologies across populations. The spectral based shape analysis framework is applied on both PT and HPC datasets to detect shape differences between groups A and B in each dataset. The performance of our spectral-based framework is compared with the state-of-the-art groupwise shape analysis method, SPHARM-PDM [14].

For putamen shapes, the local group differences produced by both methods are illustrated in Fig. 5
                        , which shows that both methods capture similar shape differences. However, no significant difference is found after applying statistical analysis (see vertex ratio in Table 3
                        ). Since PT dataset includes healthy control subjects, detecting no significant differences between two groups was expected. The Dice coefficients between A and B (Dice=0.97) and the mean absolute distances (MAD=0.14±0.11mm in spectral framework, and MAD=0.14±0.12mm in SPHARM-PDM) were the same for both methods (see Table 3). Also, the Hausdorff distances were 0.87mm and 0.74mm for spectral-based method and SPHARM-PDM, respectively. In order to further verify the accuracy of the proposed framework in comparing two groups of healthy subjects, we perform another experiment, in which the proposed pipeline is applied on different randomly separated datasets (i.e., five study group pairs, where each group contain 18 random putamen structures). The significant vertex ratio is computed on all five separate tests, which results in an average vertex ratio of zero. This experiment shows that the proposed method is working well by not detecting any significant shape variations between two healthy groups.

For hippocampus shapes, the location and magnitude of group differences is consistent between two methods (see Fig. 6
                        ). The p-values maps show a strong significance in tail region for both methods, while the head region does not show the same significant difference. On one hand, the subjects in HPC dataset are randomly divided into two groups A and B, thus we are not able to compare the pattern of hippocampal deformation with the one reported in previous studies on schizophrenia. On the other hand, inconsistencies between groupwise shape analysis approaches have been reported in the literature [8,42]. This might be due to the use of different strategies in extracting surface meshes and establishing surface correspondences between methods. The global shape differences show considerable agreement between the spectral framework (Dice=0.93, Hausd. Dist.=1.16mm, and MAD=0.25±0.23mm) and SPHARM-PDM (Dice=0.92, Hausd. Dist.=1.12mm, and MAD=0.28±0.23mm) (see Table 3). In general the two methods are consistent in global group difference measures and distance maps, although they show a small difference in p-value maps.

The computational time of both methods was measured on a 3.2GHz Core i5 computer with 32GB of RAM. The computational cost of spectral method (PT: 5min and HPC: 54min) is significantly lower than SPHARM-PDM (PT: 14min and HPC: 242min (or 4h)), especially for more complex shapes, like the hippocampus. This significant speed advantage was achieved without using parallel programing. These results suggest that the proposed spectral framework not only produces similar groupwise shape differences as the SPHARM-PDM, but it also has a clear speed advantage.

Alzheimer's disease (AD) [43] is the most common form of dementia in the elderly population. There is evidence that the neuropathological changes in AD damage the hippocampus structure, which is a brain region crucial to various cognitive functions [43,44]. Mild cognitive impairment (MCI) [45] is considered as a transition state between normal aging and dementia. The cognitive deficits in MCI patients are not as severe as those seen in people with AD. However, MCI has a 10-fold risk of a transition to early Alzheimer's disease [45]. According to neuroanatomical studies, MCI patients have shown hippocampal deformation compared with healthy elderly people [43,46]. Here, our groupwise shape analysis is applied on the ADNI dataset including 47 AD patients, 47 individuals with MCI, and 47 matched normal controls (NC). The shape variation of left and right hippocampi was studied between AD and NC, as well as MCI and NC. To correct for head size differences across populations, each hippocampi surface was scaled by the individual's total intracranial volume. The total intracranial volumes were collected from ADNI database (adni.loni.usc.edu).


                        Fig. 7(a) and (b) shows shape variations between AD and normal controls for the left and right hippocampi produced by the spectral and SPHARM-PDM methods. In both methods, hippocampal surfaces of AD patients show inward local deformity mainly in lateral zones (CA1) and inferior-medial zones (subiculum), which is consistent with findings from previous studies [44,46,47]. Table 4
                         shows the global shape differences between the spectral framework (Left hippocampi: MAD=0.58±0.26mm and Right hippocampi: MAD=0.55±0.29mm) and SPHARM-PDM (Left hippocampi: MAD=0.52±0.28mm and Right hippocampi: MAD=0.55±0.28mm). The p-values maps are almost similar between the two methods, however, in general both methods limit the shape changes to CA1 and subiculum. In addition, the ratio of the statistically significant vertices over the total number of surface points shows agreement between both methods.

The result of the same comparison performed between MCI patients and normal controls is shown in Fig. 8
                         and Table 5
                        . The distance maps produced by both methods are almost similar, while the p-value maps do not agree. Indeed, the spectral matching approach found significant inward variation in CA1 and subiculum regions of left and right hippocampi, however, no significant region was captured by SPHARM-PDM. The amount of vertex ratio is interestingly different between spectral approach (Left hippocampi=0.17 and Right hippocampi=0.19) and SPHARM-PDM (Left hippocampi and Right hippocampi=0). However, since there is no ground truth for the clinical datasets and the previous neuroanatomical studies on these pathologies used different input samples, it is unclear which method can be considered as the gold-standard. However, both methods provided almost the same global regional differences (Dice, Hausd. Dist., and MAD) and similar distance maps. In addition both methods are in line with the previous neuroanatomical studies [46,48], which reported capturing weaker group differences between MCI and normal individuals rather than AD and normal controls.

@&#DISCUSSION@&#

In this work, a new framework for groupwise shape analysis of subcortical structures, such as the hippocampus or putamen, is proposed in order to detect regional morphological alterations of subcortical structures from patients with neurological conditions, such as schizophrenia and Alzheimer's. The proposed method extracts the 3D meshes from input binary maps using the Marching cubes algorithm, which is one of the most popular 3D modeling algorithms in medical visualization. Since this approach was not able to generate high quality smoothed surfaces out of subcortical structures, the mean curvature flow algorithm was employed to smoothen the 3D surface meshes. Mean curvature flow smoothes a surface mesh by moving the surface nodes along the normal direction and achieves the best smoothing result with respect to the geometric information of the surface. In the next step, all surfaces are rigidly registered to a reference surface and mean curvature is computed at each node of all surfaces. Once all shapes are globally aligned, the spectral matching approach as proposed in [20,21] is applied in order to match each surface to the reference mesh. The proposed pipeline then creates two mean shapes as the geometric mean of all surfaces in each study group and a standard non-parametric permutation test is applied at every vertex point to detect significant local group differences. The framework terminates by applying various metrics in order to assess local and global shape differences across populations.

As suggested by the authors of the spectral matching approach [20,21], adding extra features, such as texture information, anatomical information, or landmark positions could lead to a better surface correspondence. For instance, in the case of matching cortical surfaces, the technique in [21] proposed to use sulcal depth as additional feature, which provides information about the depth of the cerebral cortex. Therefore, the choice of additional features and assessing the effect of incorporating them into the matching process depends completely on the type of structures under study. In this work, we included the exponential of the mean curvature features in the node weights of the Laplacian matrix (Eq. (2)), since it intrinsically describes the local shape information of a 3D surface, without being too application specific. Experimental analysis in Section 3.3.2 revealed that embedding this additional feature significantly improves the matching accuracy to a greater extent. For instance, adding mean curvature has a significant positive effect on point correspondence performance, when matching hippocampus shapes. However, this feature is not crucial for analyzing putamen shapes. Hence, one might conclude that incorporating curvature features has more relevance to evaluate complex structures.

In order to verify the performance of the proposed approach, the robustness of the shape analysis framework was evaluated using two reference selection approaches. According to these experiments, the use of an average reference shape gave slightly better results than using a single reference shape. However, the difference between average and randomly selected initial shape was not noticeable, indicating that the proposed framework is not significantly sensitive to this initial choice. Therefore, since computing an average reference is time-consuming, it is preferable to choose an arbitrary reference surface from input surfaces if the computational time is a critical issue in a particular study.

A series of experiments were conducted in this study to analyze the performance of the proposed groupwise shape analysis approach. According to these experiments, the proposed group analysis framework and the state-of-the-art method, the SPHARM-PDM have considerable agreement in most of the cases. However, from a computational perspective, the proposed spectral method has a clear speed advantage over the spherical harmonics based method. This speed advantage becomes more noticeable for more complex structures, such as for example analyzing a complex shape like the hippocampus, with a fourfold decrease in time compared to SPHARM-PDM. According to the experiments, the total running time of SPHARM-PDM could be reduced, by employing lower number of spherical harmonic coefficients. For instance, groupwise shape analysis on HPC dataset took on average 5.5h, when the structures were represented by 15 spherical coefficients, compared to 4h when 12 spherical coefficients were used. The problem is that the sufficient number of spherical coefficients must be provided in order to obtain an appropriate representation of a structure. In this paper, the number of spherical harmonic descriptions has been chosen in the range of 12–15, according to the SPHARM-PDM software manual (www.nitrc.org/projects/spharm-pdm) [14].

Aside from the consistency in the group distance maps produced by the two shape analysis methods, spectral and SPHARM-PDM methods, the generated p-value maps did not agree in some experiments. This type of inconsistency, which have been previously reported in the literature [8,42], mainly comes from the specific surface representation used by each method. A method like SPHARM-PDM generates smooth surfaces based on spherical harmonics, while our approach keeps the original meshes and applies only a slight smoothing process to remove surface irregularities. Severe smoothing can cause a method to miss small surface deformations in a groupwise morphological study. This might be the reason why the SPHARM-PDM does not capture any region of group differences in the comparison between MCI and healthy controls. Another reason for inconsistency in capturing significant groupwise variations is the choice of surface correspondences across populations. This influence seems to be higher in studies with lower number of samples, especially when there is large shape variability due to the high age range and gender differences. Therefore, using relatively higher number of samples in the input populations, could reduce the inconsistency in groupwise morphological frameworks. Since there is no ground truth for the clinical datasets, it is not clear which one of the two methods (spectral group analysis or SPHARM-PDM) are more accurate. Nonetheless, one should keep in mind that both methods produce similar distance maps and close global group differences, which shows that the two methods are consistent in general. In addition, both methods did not detect any significant shape variations when the two groups of controls were used as inputs. This indicates that the two methods are working well.

As an application, the proposed framework was applied on the ADNI dataset including AD, MCI, and normal controls. In previous neuroimaging studies, it has been reported that subjects with AD and MCI could be discriminated from healthy subjects by examining the pattern of hippocampal surface variations [43–48]. Hippocampal atrophy begins in lateral zones (CA1) and spreads to inferior-medial zones (subiculum) [48]. The superior zones including CA2–4 and Gyrus Dentatus are preserved [48]. We validated our scheme through a statistical shape analysis on hippocampal surface deformity in ADNI dataset, by demonstrating a consistency with previous clinical findings. These results suggest that the proposed spectral-based shape analysis framework could allow for quantitative assessment of variations in subcortical structures, associated with a neurological disorder, which leads to the better understanding of a pathology.

An important issue in any surface-based shape analysis approach is the reliance on the segmentation accuracy. This step has a crucial impact on a shape analysis pipeline, since its quality could affect the accuracy of the detected shape variations. The segmentation process becomes more challenging, when we attempt to capture slight group differences across a population, since small shape variations have greater chances of being lost in a segmentation process. In this paper, we used an openly-available automatic segmentation tool (FSL-FIRST [37]) for segmenting structures in PT and ADNI datasets. However, in order to ensure about the quality of the structural delineations, we asked a trained expert user to correct the segmentations. These corrected labels were then used as an input in the proposed shape analysis framework. As future work, it would be helpful to incorporate a more accurate segmentation process in the pipeline, which is able to correctly define the boundary of each structure and extract smoothed meshes directly from MR images.

In summary, the proposed groupwise morphological framework with its methods for surface extraction, smoothing, matching, and statistical analysis is novel, and produced comparable results to the state-of-the-art algorithm, while being faster. This paper was the first work that integrated curvature-based spectral matching in to a groupwise shape analysis pipeline. Experimental analysis on real clinical dataset even showed that the extracted group differences were in line with the findings in other clinical studies. This paper proposed an alternative to the current state-of-the-art groupwise shape analysis framework and provides a new pipeline for future clinical studies.

@&#CONCLUSION@&#

In this paper, a new groupwise shape analysis framework is proposed for subcortical surfaces based on spectral matching theory. This spectral matching process is able to establish reliable correspondences between different surface meshes and may help in the investigation of groupwise structural differences between two study groups. From a clinical perspective, the proposed method can contribute to the diagnosis of subcortical shape variations in different pathologies, like Alzheimer's disease.

One important future direction of the proposed framework is to extend the available approach for diagnosis of different pathologies, which cause morphological variations in subcortical structures. This could be done by modeling the existing shape variations in patients using a classification approach, and try to distinguish the pathological subjects from normal individuals. Such a framework would become a complementary technique to other available diagnosis approaches, which are currently used for identifying different diseases. However, this kind of diagnosis framework requires incorporating larger datasets to achieve high and stable classification accuracy.

@&#ACKNOWLEDGMENTS@&#

Funding was provided by the Canada Research Chairs and from the CHU Sainte-Justine Research Center. Hippocampus dataset (HPC) was provided by M. Styner and coworkers, UNC Neuro Image Analysis Laboratory, as part of the public UNC Shape Tool distribution and the original data acquisition was funded by the Stanley Foundation. ADNI data collection and sharing for this project was funded by the Alzheimer's Disease Neuroimaging Initiative (ADNI) (National Institutes of Health Grant U01 AG024904) and DOD ADNI (Department of Defense award number W81XWH-12-2-0012). ADNI is funded by the National Institute on Aging, the National Institute of Biomedical Imaging and Bioengineering, and through generous contributions from the following: AbbVie, Alzheimer's Association; Alzheimer's Drug Discovery Foundation; Araclon Biotech; BioClinica, Inc.; Biogen; Bristol-Myers Squibb Company; CereSpir, Inc.; Eisai Inc.; Elan Pharmaceuticals, Inc.; Eli Lilly and Company; EuroImmun; F. Hoffmann-La Roche Ltd and its affiliated company Genentech, Inc.; Fujirebio; GE Healthcare; IXICO Ltd.; Janssen Alzheimer Immunotherapy Research & Development, LLC.; Johnson & Johnson Pharmaceutical Research & Development LLC.; Lumosity; Lundbeck; Merck & Co., Inc.; Meso Scale Diagnostics, LLC.; NeuroRx Research; Neurotrack Technologies; Novartis Pharmaceuticals Corporation; Pfizer Inc.; Piramal Imaging; Servier; Takeda Pharmaceutical Company; and Transition Therapeutics. The Canadian Institutes of Health Research is providing funds to support ADNI clinical sites in Canada. Private sector contributions are facilitated by the Foundation for the National Institutes of Health (www.fnih.org). The grantee organization is the Northern California Institute for Research and Education, and the study is coordinated by the Alzheimer's Disease Cooperative Study at the University of California, San Diego. ADNI data are disseminated by the Laboratory for Neuro Imaging at the University of Southern California.

Supplementary material related to this article can be found, in the online version, at http://dx.doi.org/10.1016/j.compmedimag.2016.03.001.

The following are Supplementary data to this article:
                        
                           
                        
                     
                  

@&#REFERENCES@&#

