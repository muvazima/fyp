@&#MAIN-TITLE@&#Active surface model improvement by energy function optimization for 3D segmentation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We improve DAS in different parts to enhanced overall results of algorithms.


                        
                        
                           
                           Two different external energies are presented.


                        
                        
                           
                           As the first external energy, we use gradient of the wavelet edge map.


                        
                        
                           
                           We use phase coherence of wavelet image near each pixel as second external energy.


                        
                        
                           
                           We apply our method on CT images of different organs to validate their performance.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Active surface

Wavelet edge detection

Energy function

3D segmentation

Local phase coherence

Curvature

@&#ABSTRACT@&#


               
               
                  This paper proposes an optimized and efficient active surface model by improving the energy functions, searching method, neighborhood definition and resampling criterion. Extracting an accurate surface of the desired object from a number of 3D images using active surface and deformable models plays an important role in computer vision especially medical image processing. Different powerful segmentation algorithms have been suggested to address the limitations associated with the model initialization, poor convergence to surface concavities and slow convergence rate. This paper proposes a method to improve one of the strongest and recent segmentation algorithms, namely the Decoupled Active Surface (DAS) method. We consider a gradient of wavelet edge extracted image and local phase coherence as external energy to extract more information from images and we use curvature integral as internal energy to focus on high curvature region extraction. Similarly, we use resampling of points and a line search for point selection to improve the accuracy of the algorithm. We further employ an estimation of the desired object as an initialization for the active surface model. A number of tests and experiments have been done and the results show the improvements with regards to the extracted surface accuracy and computational time of the presented algorithm compared with the best and recent active surface models.
               
            

@&#INTRODUCTION@&#

Boundary surface extraction of 3D regions in 3D images has many applications in different fields of computer vision such as object tracking, surface reconstruction, feature extraction, computer aided diagnosis (CAD) and medical image processing. Various 3D segmentation methods and algorithms have been presented to address challenges of accurate surface extraction. In general, segmentation methods can be divided into three groups: structural techniques, stochastic techniques and hybrid techniques. Structural techniques consider image regions (i.e. structural information), the stochastic methods focus on statistical analysis of data and hybrid ones use both structural and statistical information [1].

One of the most powerful structural techniques is Deformable Models, which define curves, surfaces and solid bodies within an image. These models perform based on the development of an initial curve or surface under the influence of internal energy, specified within the image and external energy which is acquired from the image data [1,2,3,4,5,6]. The Decoupled Active Surface (DAS) method is a recently introduced deformable model for surface extraction of 3D images which shows promising results on different datasets by increasing the accuracy of the extracted surface, decreasing the number of model parameters, decreasing initialization sensitivity and improving high curvature regions extraction compared with conventional methods [7,8]. DAS applies external and internal energies separately and consists of a measurement update step which uses the Iterative Quasi-Random Search (IQRS) algorithm. It also utilizes a modification of measured surface based on regions curvature and a non-stationary prior [7,8]. Despite all the advantages of the DAS model, it can be optimized in different parts. In this paper we propose several modifications for the DAS model such as using appropriate energy functions to extract more information from an image, point updating based on strong criteria to increase the accuracy of the extracted surface (especially in high curvature regions), and finally using an modified and improved initial surface to speed up the algorithm convergence.

The paper is organized as follows: Section 2 discusses the Decoupled Active Surface (DAS) model, the proposed method is presented in Section 3, experimental results are discussed in Section 4 and Section 5 concludes this paper.

One of the recent and successful methods of deformable model is Decoupled Active Surface (DAS) [7,8]. DAS is made of a triangular mesh which is defined by triangular faces, 
                        T
                        =
                        
                           {
                           
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    t
                                 
                                 
                                    k
                                 
                              
                           
                           }
                        
                        ,
                        k
                        ∈
                        
                           [
                           
                              1
                              ,
                              t
                           
                           ]
                        
                      and vertices, 
                        v
                        =
                        
                           {
                           
                              
                                 
                                    v
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                           
                           }
                        
                        ,
                        j
                        ∈
                        
                           [
                           
                              1
                              ,
                              q
                           
                           ]
                        
                     , normal vectors on each face, 
                        
                           
                              n
                           
                           
                              t
                              k
                           
                        
                      and normal vectors in each vertices, 
                        
                           
                              n
                           
                           
                              j
                           
                        
                     . All these definitions are shown in 
                     Fig. 1. Generally, the DAS algorithm consists of three steps shown in 
                     Fig. 2, which is copied from [9]. Like all deformable models, the goal in DAS is to evolve a surface to minimize the total energy function defined as:
                        
                           (1)
                           
                              
                                 
                                    E
                                 
                                 
                                    t
                                    o
                                    t
                                 
                              
                              
                                 (
                                 v
                                 )
                              
                              =
                              
                                 
                                    E
                                 
                                 
                                    int
                                 
                              
                              
                                 (
                                 v
                                 )
                              
                              +
                              
                                 
                                    E
                                 
                                 
                                    e
                                    x
                                    t
                                 
                              
                              
                                 (
                                 v
                                 )
                              
                           
                        
                     where, 
                        
                           
                              E
                           
                           
                              i
                              n
                              t
                           
                        
                      is the internal energy consisting of two terms, elastic energy and thin-plate energy which preserves the surface continuity and smoothness, and 
                        
                           
                              E
                           
                           
                              e
                              x
                              t
                           
                        
                      is the external energy which leads the surface to converge toward the desired 3D object boundary. The energies 
                        
                           
                              E
                           
                           
                              i
                              n
                              t
                           
                        
                      and 
                        
                           
                              E
                           
                           
                              e
                              x
                              t
                           
                        
                      are mathematically defined as follows:
                        
                           (2)
                           
                              
                                 
                                    E
                                 
                                 
                                    i
                                    n
                                    t
                                 
                              
                              
                                 (
                                 v
                                 )
                              
                              =
                              
                                 ∫
                                 
                                    a
                                    =
                                    0
                                 
                                 1
                              
                              
                                 ∫
                                 
                                    b
                                    =
                                    0
                                 
                                 1
                              
                              
                                 (
                                 
                                    
                                       
                                          E
                                       
                                       
                                          e
                                          l
                                          a
                                          s
                                          t
                                          i
                                          c
                                       
                                    
                                    
                                       (
                                       
                                          v
                                          
                                             (
                                             
                                                a
                                                ,
                                                b
                                             
                                             )
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       
                                          E
                                       
                                       
                                          t
                                          h
                                          i
                                          n
                                          −
                                          p
                                          l
                                          a
                                          t
                                          e
                                       
                                    
                                    
                                       (
                                       
                                          v
                                          
                                             (
                                             
                                                a
                                                ,
                                                b
                                             
                                             )
                                          
                                       
                                       )
                                    
                                 
                                 )
                              
                              d
                              a
                              
                              d
                              b
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    E
                                 
                                 
                                    e
                                    l
                                    a
                                    s
                                    t
                                    i
                                    c
                                 
                              
                              
                                 (
                                 
                                    v
                                    
                                       (
                                       
                                          a
                                          ,
                                          b
                                       
                                       )
                                    
                                 
                                 )
                              
                              =
                              
                                 
                                    α
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    |
                                    
                                       
                                          
                                             ∂
                                             v
                                             
                                                (
                                                
                                                   a
                                                   ,
                                                   b
                                                
                                                )
                                             
                                          
                                          
                                             ∂
                                             a
                                          
                                       
                                    
                                    |
                                 
                                 2
                              
                              +
                              
                                 
                                    α
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    |
                                    
                                       
                                          
                                             ∂
                                             v
                                             
                                                (
                                                
                                                   a
                                                   ,
                                                   b
                                                
                                                )
                                             
                                          
                                          
                                             ∂
                                             b
                                          
                                       
                                    
                                    |
                                 
                                 2
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    E
                                 
                                 
                                    t
                                    h
                                    i
                                    n
                                    −
                                    p
                                    l
                                    a
                                    t
                                    e
                                 
                              
                              
                                 (
                                 
                                    v
                                    
                                       (
                                       
                                          a
                                          ,
                                          b
                                       
                                       )
                                    
                                 
                                 )
                              
                              =
                              
                                 
                                    β
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    |
                                    
                                       
                                          
                                             
                                                
                                                   ∂
                                                
                                                2
                                             
                                             v
                                             (
                                             a
                                             ,
                                             b
                                             )
                                          
                                          
                                             ∂
                                             
                                                
                                                   a
                                                
                                                2
                                             
                                          
                                       
                                    
                                    |
                                 
                                 2
                              
                              +
                              
                                 
                                    β
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    |
                                    
                                       
                                          
                                             
                                                
                                                   ∂
                                                
                                                2
                                             
                                             v
                                             (
                                             a
                                             ,
                                             b
                                             )
                                          
                                          
                                             ∂
                                             
                                                
                                                   b
                                                
                                                2
                                             
                                          
                                       
                                    
                                    |
                                 
                                 2
                              
                              +
                              2
                              
                                 
                                    β
                                 
                                 
                                    3
                                 
                              
                              
                                 
                                    |
                                    
                                       
                                          ∂
                                          
                                             ∂
                                             a
                                          
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   ∂
                                                   v
                                                   (
                                                   a
                                                   ,
                                                   b
                                                   )
                                                
                                                
                                                   ∂
                                                   b
                                                
                                             
                                          
                                          )
                                       
                                    
                                    |
                                 
                                 2
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    E
                                 
                                 
                                    e
                                    x
                                    t
                                 
                              
                              (
                              v
                              )
                              =
                              
                                 ∫
                                 
                                    a
                                    =
                                    0
                                 
                                 1
                              
                              
                                 ∫
                                 
                                    b
                                    =
                                    0
                                 
                                 1
                              
                              
                                 (
                                 
                                    P
                                    (
                                    v
                                    (
                                    a
                                    ,
                                    b
                                    )
                                    )
                                 
                                 )
                              
                              d
                              a
                              
                              d
                              b
                           
                        
                     
                     
                        
                           (6)
                           
                              P
                              =
                              −
                              γ
                              
                                 
                                    (
                                    
                                       g
                                       
                                          (
                                          I
                                          )
                                       
                                    
                                    )
                                 
                                 2
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              g
                              (
                              I
                              )
                              =
                              
                                 (
                                 
                                    |
                                    ∇
                                    I
                                    |
                                 
                                 )
                              
                           
                        
                     where in (6), g(.) is the gradient function. 
                        
                           
                              α
                           
                           
                              i
                           
                        
                      and 
                        
                           
                              β
                           
                           
                              i
                           
                        
                      are weighting parameters used to control the strength of the model׳s tension, rigidity and the attraction that the image features have on the deformable model. Generally, these parameters are considered to be fixed values.

In contrast to conventional active surface models, the DAS model consists of a visual boundary extraction using the IQRS algorithm, and a non-stationary sampling interval for the points on the surface in order to acquire a better description of the object boundary by concentrating on more vertices at high curvature regions. For this way that the DAS model does sampling (i.e. resampling stage), the model uses some special criterion and definitions. To accomplish the goal of boundary extraction, DAS defines two types of problematic triangles (i.e. tall and fat) that may be encountered/generated during the surface evolution process. The triangles whose longest edge length to the shortest edge length ratio is 
                        T
                        
                           
                              h
                           
                           
                              1
                           
                        
                      and the largest to second largest edge length ratio is between 
                        T
                        
                           
                              h
                           
                           
                              2
                           
                        
                      to 
                        T
                        
                           
                              h
                           
                           
                              3
                           
                        
                      are termed as tall triangles. Other triangles that are not labeled as tall triangles, but have the length of the longest edge length greater than 
                        T
                        
                           
                              h
                           
                           
                              4
                           
                        
                      are considered as fat triangles. All 
                        T
                        
                           
                              h
                           
                           
                              i
                           
                        
                      thresholds are user defined. Both tall and fat triangles can lead the deformable model to an unstable state, if not refined at an earlier iteration. To resample tall triangles, two vertices are generated on the two long edges of the tall triangle and these two vertices will be connected by an edge. For fat triangles, a vertex is added on the longest edge and this vertex should be connected to the vertex opposite to this longest edge. The resampling procedure of DAS is shown in 
                     
                     Figs. 3 and 4.

@&#PROPOSED METHOD@&#

In our proposed method, we improve the DAS algorithm in different parts to enhance the overall results of algorithms. It should be noted that, the basis of the proposed model is the DAS model and only some parts have been changed or added whereas other parts of the DAS model such as surface measurement and Bayesian estimation have remained unchanged. Active surface model initialization is the first step in this algorithm and has an important role in its final result. Therefore, a proper initial surface, given it is a good presentation of the final desired object, results in a higher convergence rate and more accurate output surface. In order to have such an initialization, we use the DAC model with few iterations for each layer of 3D image before our algorithm has an estimation of the object boundaries, as it extracts the approximated boundaries of object in each layer. The DAC model is one of the deformable models for boundary extraction which has been introduced recently and has shown great results compared with current 2D segmentation methods [10]. In this method, for simplicity, a circle with operator defined center and diameter, is used as an initial contour in each slice. After a number of predefined iterations, the contour converges towards the object boundary in that slice. This essentially means that the final contour is a primary estimation of the desired boundary.

With such an initialization, our active surface algorithm starts with an estimation of the final object. This means that capturing the desired object boundaries become more probable now. Instead of using a fixed shape, such as a sphere or cylinder, for all images, as practiced in the DAS algorithm, in our proposed method, we use different surface initializations for different objects. Using this initialization strategy improves the convergence rate in addition to increasing segmentation accuracy.

Energy functions in the deformable model play an important role in improving the accuracy and convergence rate of the algorithm. As the internal energy controls the flexibility and smoothness of the surface during its evolution, defining a proper function for this energy (which focuses on region׳s curvature information) can lead to better results in capturing high curvature parts. Here, we propose to use an integral of the point curvature to represent the internal energy. This integral is defined as:
                        
                           (8)
                           
                              
                                 
                                    E
                                 
                                 
                                    i
                                    n
                                    t
                                 
                              
                              
                                 (
                                 i
                                 )
                              
                              =
                              
                                 (
                                 
                                    
                                       1
                                       
                                          k
                                          
                                             
                                                d
                                             
                                             
                                                max
                                             
                                          
                                       
                                    
                                    
                                       ∫
                                       0
                                       k
                                    
                                    d
                                    x
                                    
                                    d
                                    y
                                    
                                    d
                                    z
                                 
                                 )
                              
                              
                                 
                                    n
                                 
                                 
                                    j
                                 
                              
                           
                        
                     
                  

This internal energy is calculated for each vertex i in the outlined triangles. In (8), 
                        
                           
                              d
                           
                           
                              max
                           
                        
                      is the maximum of the neighborhood distances in the algorithm and k is all neighboring vertices of vertex i with neighborhood distances equal to or lower than 
                        
                           
                              d
                           
                           
                              max
                           
                        
                     . Applying this formula, for each point a total distance vector comprising of all neighboring distance is computed. This vector is then normalized by dividing it by 
                        
                        k
                        
                           
                              d
                           
                           
                              max
                           
                        
                     , in order to use it for each point׳s energy comparison. To establish the amount of update of the point compared with its neighbors, we compute the dot product between the normalized total distance vector and the normal vector of the planar surface at that point. This function basically calculates the distance of each vertex from its neighbors in the direction of its normal to show the curvature of each point. This integral helps the algorithm to concentrate on the curvature of each point and provides more information of regions curvature for the algorithm, whilst also preserving the flexibility and smoothness of the surface.

On the other hand, as the external energy controls the movement of the surface toward the desired object boundaries, obtaining more information from voxels causes the algorithms to more accurately distinguish different regions of the image. In the proposed method, we use two different external energies. One of such information that can show the difference of regions appropriately is regions׳ edges data. An edge-extracted image has more focus on region boundaries. Thus it is a good choice for the external energy as it helps to recognize different regions precisely by representing the image boundaries with more details and contrast.

Here, for our first choice of external energy, we use an effective method of edge detection, the gradient of the wavelet edge detected image. Here we should note that the information of regions׳ edges is considered as high frequency components. Hence in order to increase edge detection accuracy, after applying the wavelet transform, we should remove the low frequency components of the image by removing the low-low sub-band of the image. After reconstructing the image we proceed with intensity, as all the voxels intensity should be between 0 and 255. Moreover contrast stretching is applied to amplify its edges and represent different regions and their boundaries more clearly. Applying wavelet edge detection on an image helps us to emphasize the intensity variations of different regions as the gradient function shows large changes around regions boundaries. This method correctly detects region boundaries, as crossing over region boundaries causes an increase in the gradient value whereas the energy minimizing step may avoid choosing such points and remains the surface in the desired region.

Another way to extract more information from an image is to use its phase instead of its intensity. The phase of an image consists of more structural detail of the image and image failures have a lower effect on phase compared with intensity of the image. A good phase extraction algorithm is local phase coherence, which is based on the coherence of the voxels of a neighborhood [11]. In order to extract the phase, we use the phase of the wavelet-transformed image localized near the position of each pixel. This is used as our second proposed external energy. The phase coherence measures and shows the voxel similarities and assessed whether they belong to a same region. When we consider the local phase coherence, it means that we focus on local information of voxels and how much a voxel is similar to its neighbors and assesses the probability of the points belonging to the same region. To extract the phase of the localized image wavelet transform we can rewrite it by Fourier transform functions using the convolution theorem and the shifting and scaling properties of Fourier transform. For an image, we can define the local phase coherence as:
                        
                           (9)
                           
                              
                                 
                                    P
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                       
                                          l
                                          =
                                          1
                                       
                                       L
                                    
                                    
                                       |
                                       
                                          
                                             
                                                c
                                             
                                             
                                                i
                                                ,
                                                l
                                             
                                          
                                       
                                       |
                                    
                                    cos
                                    
                                       (
                                       
                                          Ф
                                          
                                             (
                                             
                                                {
                                                
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         i
                                                         ,
                                                         l
                                                      
                                                   
                                                
                                                }
                                             
                                             )
                                          
                                          −
                                          
                                             Ф
                                             ^
                                          
                                          
                                             (
                                             
                                                {
                                                
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         i
                                                         ,
                                                         l
                                                      
                                                   
                                                
                                                }
                                             
                                             )
                                          
                                       
                                       )
                                    
                                 
                                 
                                    
                                       ∑
                                       
                                          l
                                          =
                                          1
                                       
                                       L
                                    
                                    
                                       |
                                       
                                          
                                             
                                                c
                                             
                                             
                                                i
                                                ,
                                                l
                                             
                                          
                                       
                                       |
                                    
                                    +
                                    K
                                 
                              
                           
                        
                     where 
                        
                           
                              c
                           
                           
                              i
                              ,
                              
                              l
                           
                        
                      are the coefficients at the finest wavelet scale, L is the number of orientations, K is a positive constant and 
                        Ф
                        
                           (
                           
                              {
                              
                                 
                                    
                                       c
                                    
                                    
                                       i
                                       ,
                                       l
                                    
                                 
                              
                              }
                           
                           )
                        
                      and 
                        
                           Ф
                           ^
                        
                        
                           (
                           
                              {
                              
                                 
                                    
                                       c
                                    
                                    
                                       i
                                       ,
                                       l
                                    
                                 
                              
                              }
                           
                           )
                        
                      are phase of each coefficient in the finest sub-band and its prediction [12,13,14]. In order to get better information about the image phase we can use a different mother wavelet such as Gabor wavelet, which contains useful and discriminative information about different regions of an image [11]. In this proposed method, local phase coherence is used as the external energy to obtain more structural data of the image in order to control the evolution of the surface toward desired object boundaries. It can be shown that using such external energy is useful in the segmentation of images with problems of contrast or illumination, and so this method leads to effective information about different regions and their boundaries.

In 3D images, specifically 3D medical images, a variety of adjacent regions exists. As mentioned above, by adjacent regions we are referring to regions of the image that are around the desired image region. These regions are the goal of the segmentation process and the initial surface is selected based on it. This means that if during surface evolution some vertices move toward neighboring regions, it is highly probable to spread through the neighboring regions, which leads to segmentation of the neighboring regions instead of the desired one. To address the segmentation problem further, we suggest to use a line search method after a specific number of iterations, k 
                     [15]. In this method, we allocate some memory for each vertex by saving selected points as this vertex during the last k iterations along with saving their total energy value, as shown in (1). We, then, search for the point with the minimum total energy value and select it instead of the vertex. We should note that the evolution of the surface toward the desired surface is based on the total energy minimization of the surface. The algorithm starts with an estimation of the boundaries, and continues with the growth of the surface toward the desired surface. This algorithm terminates when there is an increase in the total energy value, as increase in this value occurs at the edges because of the structure of proposed external energies. After a specific number of iterations, a check will be performed to evaluate whether such an increase in the total energy happened or not. If so, a point with minimum total energy will be selected as the vertex to return the surface to the desired region boundaries.

The DAS algorithms, as described in Section 2, uses a resampling step after each iteration in order to capture high curvature parts. In this method no point is omitted and points are added in the desired regions which cause high complexity, especially when working with high resolution 3D images. To overcome this drawback, we propose to use a simple resampling method based on the neighborhood distance in which the surface mesh is allowed to add or delete vertices in order to keep the distance of neighbour vertices homogeneous [16]. For this, we define two thresholds, maximum and minimum neighborhood distances, shown by 
                        
                           
                              d
                           
                           
                              m
                              a
                              x
                           
                        
                      and 
                        
                           
                              d
                           
                           
                              m
                              i
                              n
                           
                        
                      respectively, such that 
                        
                           
                              d
                           
                           
                              m
                              a
                              x
                           
                        
                        ≤
                        2
                        
                           
                              d
                           
                           
                              m
                              i
                              n
                           
                        
                     . Assume two adjacent vertices, (
                        
                           
                              v
                           
                           
                              i
                           
                        
                     ,
                        
                           
                              v
                           
                           
                              j
                           
                        
                     ) which verify the constraint 
                        
                           
                              d
                           
                           
                              m
                              i
                              n
                           
                        
                        ≤
                        
                           
                              v
                           
                           
                              i
                           
                        
                        −
                        
                           
                              v
                           
                           
                              j
                           
                        
                        ≤
                        
                           
                              d
                           
                           
                              m
                              a
                              x
                           
                        
                      and (
                        
                           
                              v
                           
                           
                              a
                           
                        
                     ,
                        
                           
                              v
                           
                           
                              b
                           
                        
                     ) are their common neighbors. For the vertices resampling, if 
                        
                           
                              v
                           
                           
                              i
                           
                        
                        −
                        
                           
                              v
                           
                           
                              j
                           
                        
                        <
                        
                           
                              d
                           
                           
                              m
                              i
                              n
                           
                        
                      then 
                        
                           
                              v
                           
                           
                              j
                           
                        
                      is omitted and 
                        
                           
                              v
                           
                           
                              i
                           
                        
                      is moved to the middle of connection line between 
                        
                           
                              v
                           
                           
                              i
                           
                        
                      and 
                        
                           
                              v
                           
                           
                              j
                           
                        
                     . On the other hand, if 
                        
                           
                              v
                           
                           
                              i
                           
                        
                        −
                        
                           
                              v
                           
                           
                              j
                           
                        
                        >
                        
                           
                              d
                           
                           
                              m
                              a
                              x
                           
                        
                      a new vertex is generated in the middle of connection line between 
                        
                           
                              v
                           
                           
                              i
                           
                        
                      and 
                        
                           
                              v
                           
                           
                              j
                           
                        
                      and is connected to 
                        
                           
                              v
                           
                           
                              a
                           
                        
                      and 
                        
                           
                              v
                           
                           
                              b
                           
                        
                     . The resampling procedure is shown in 
                     Fig. 5, which is copied from [16]. This step is used for removing the extra points in the flat parts of the surface (which have little information about the surface) to decrease the overall number of vertices and therefore decrease the computational burden of the algorithm. On the other hand, additional points will be added in high curvature parts to enable the surface to capture such regions of the desired object.

After resampling all points to address problems with interference of adjacent regions, the triangular mesh should be revised in order to make it optimized. In an optimized mesh, each vertex is connected to its nearest neighbors. We propose to reshape the triangular mesh based on the vertex nearest neighbors proposed here [17]. The process of reshaping the triangular mesh is shown in 
                     Fig. 6, which is copied from [17]. To do so, assume that two vertices 
                        
                           
                              v
                           
                           
                              1
                           
                        
                      and 
                        
                           
                              w
                           
                           
                              1
                           
                        
                      are neighbors and connected. If 
                        
                           
                              v
                           
                           
                              1
                           
                        
                      and 
                        
                           
                              w
                           
                           
                              1
                           
                        
                      are next adjacent vertices so that 
                        
                           
                              v
                           
                           
                              1
                           
                        
                     , 
                        
                           
                              v
                           
                           
                              2
                           
                        
                      and 
                        
                           
                              w
                           
                           
                              1
                           
                        
                     , 
                        
                           
                              w
                           
                           
                              2
                           
                        
                      are connected, 
                        
                           
                              v
                           
                           
                              1
                           
                        
                        
                           
                              v
                           
                           
                              2
                           
                        
                        
                           
                              w
                           
                           
                              2
                           
                        
                        
                           
                              w
                           
                           
                              1
                           
                        
                      will form a polygon. To form the optimized triangular face, the two diagonals of this polygon should be drawn and the one with smallest length should be selected as a new edge. Doing this, two optimized triangles are generated from a polygon. If the next adjacent vertex is 
                        
                           
                              v
                           
                           
                              3
                           
                        
                     , which is connected to 
                        
                           
                              v
                           
                           
                              2
                           
                        
                      and 
                        
                           
                              w
                           
                           
                              2
                           
                        
                     , these three vertices form another triangle. For the next vertex, 
                        
                           
                              v
                           
                           
                              4
                           
                        
                     , condition is the same as 
                        
                           
                              v
                           
                           
                              3
                           
                        
                     . The next two adjacent vertices are 
                        
                           
                              v
                           
                           
                              5
                           
                        
                      and 
                        
                           
                              w
                           
                           
                              3
                           
                        
                      which are connected to 
                        
                           
                              v
                           
                           
                              4
                           
                        
                      and 
                        
                           
                              w
                           
                           
                              2
                           
                        
                      and form a polygon. In this case, as done above, both diagonals are drawn and the shorter one is chosen as the new optimized triangular edge. In Fig. 6, dashed lines show the added optimized triangular edges. This step ensures the algorithm to stay in an optimized state and all the neighboring vertices will have proper minimized distances. It helps the algorithm to capture even small details of the object boundaries.

@&#RESULTS AND DISCUSSIONS@&#

In this section, the results of our proposed method are presented. We divide our optimization into two algorithms. The first algorithm is based on using the gradient of wavelet edge detected image as the external energy, which is named as Algorithm1 and the second one is based on using local phase coherence as the external energy of the model, which is named as Algorithm2. The proposed initialization, resampling and reshaping steps along with curvature integral internal energy calculations are used in both algorithms.

First of all to show the effectiveness of the DAS algorithm its result are compared to a level set based hybrid (LSHYB) active surface method as it is considered as an effective hybrid active surface technique [19]. Moreover, the DAS algorithm is compared with a vector field convolution (VFC) active surface method as a parametric active surface model with great results in 3D image segmentation [18]. LSHYB integrates the object boundary and region information and uses a level set framework to find the boundary of an object. 
                     Fig. 7 compares the performance of DAS with VFC and LSHYB, whose results are copied from [9,10]. The unbiased internal force made due to conventional representation scheme in VFC smoothens the high curvature part of the U-shape object. It is important to note that the result indicates that LSHYB is unable to capture high curvature parts and unable to extract the accurate surface of a U-shape object compared to a parametric model such as the DAS model.

To compare the results of our two proposed methods to the DAS algorithm, at first we use a synthetic object, a 3D star, with 6 vertices. 
                     Fig. 8 shows this comparison. The first row of this image, b to d, shows the results of the three algorithms (i.e. the two proposed algorithms, along with DAS) at the end of their convergence. The minimum number of iterations of these three algorithms, K, is computed. In the second row, f to h, the results of each algorithm at the end of the Kth iteration is shown. The first row shows that, at the end of each algorithm, our two proposed methods have more accurate results than the DAS model. Also, as this synthetic object has clear boundaries and high contrast with homogeneous illumination, our two proposed models have nearly the same results and extract the exact boundaries of the object. This is due to our presentation of the external force computations, and proposal of capturing high curvature parts around each vertex as a result of using the proper internal energy. In order to focus on the poor performance of algorithms around high curvature parts, the parts that algorithm which were unable to capture the accurate surface, are highlighted with red circles in Fig. 8.

To show the results of applying the three methods (i.e. our two proposed methods and the DAS model) on medical images, brain, liver and lung CT images, we present four images for each case. We should note that the lung and brain datasets are from [20] and our liver dataset are CT scan images of patients committed to the TABA Radiology Center, Iran. In this set, figures a, b and c show 3 medical orientations of each 3D image and figure d shows the vertices of the 3D triangular mesh. 
                     
                     
                     Figs. 9–11 show the results of applying Algorithm1, Algorithm2 and the DAS model on the brain CT images at the end of their convergence. As shown in these figures, especially in Figs. 9–11(a), our 2 proposed method capture high curvature parts better than the DAS model. Here Algorithm2, which uses local phase coherence as its external energy, works better than Algorithm1. This is due to the fact that in low contrast images, we can extract more information about the image region by using its phase, rather than its edges. 
                     
                     
                     Figs. 12–14 show the results of applying Algorithm1, Algorithm2 and the DAS model on the brain CT images stopped at the Kth iteration where the fastest algorithm converges. In this case, as in the previous case, Algorithm2 is able to extract more accurate object boundaries than Algorithm1 and both of them have better performance than the DAS model.


                     
                     
                     
                     Figs. 15–17 show the results of applying the three algorithms on the lung CT images at the end of their convergence. As shown in these figures, our two proposed method capture high curvature parts better than the DAS model. In this dataset, images are of low contrast. In contrast to Figs. 15–17, 
                     
                     
                     Figs. 18–20 show the results of applying the three algorithms on the lung CT images stopped at the Kth iteration where the fastest algorithm converges. The results clearly show that our proposed algorithms are able to extract more accurate object boundaries faster than the DAS model. Here as the lung CT images have good contrast around the lung boundaries, Algorithm1, which use the gradient of wavelet edge detected image as the external energy, performs better. Because in this dataset edge detected image presents effective detail about region boundaries.


                     
                     
                     
                     Figs. 21–23 show the results of applying Algorithm1, Algorithm2 and the DAS model on the liver CT images at the end of their convergence. As presented in these three figures, our two proposed methods capture high curvature parts including the liver left lobe, triangular lobe, better than the DAS model. This dataset in particular has the problem of adjacent similar regions with liver tissue, which makes it difficult to segment the desired region. As in the previous case of the brain images, Algorithm2, which uses local phase coherence as its external energy, has better performance than Algorithm1 because of the fact that in the case of having a similar adjacent region, phase information is more discriminative than edge information. 
                     
                     
                     Figs. 24–26 show the results of applying the three algorithms on the liver CT images stopped at the Kth iteration where the fastest algorithm converges. In this experiment, as the previous experiment, Algorithm2 is able to extract the liver boundaries better than Algorithm1 and both of them have better performance than the DAS model.

In order to have a better understanding of the performance of our two proposed algorithms compared with the DAS model, 
                     Table 1 shows the number of Initial and final points of each three algorithms for our four set of images, 3D star, liver, lung and brain CT images, at their convergence state and their sequence of convergence (i.e. the Kth iteration). It can be seen that our two proposed algorithms have considerably lower final vertices as we delete redundant vertices in flat regions of the surface. Also the sequence of convergence shows that for our four datasets, our 2 proposed algorithm are the first and second algorithm to convergence compared to DAS model which mean that in addition to their better performance to extract more accurate boundaries, they have faster convergence with lower iteration than the DAS model.

To validate the performance of our model, we apply our algorithms on a dataset from [21]. 
                     Fig. 27 shows the result of applying our first algorithm on the dataset and 
                     Fig. 28 is the result of applying our second algorithm. The dataset contains 128 slides of brain images. In order to present a numerical criterion of our proposed algorithms performance, we calculate the accuracy of our last tests. We use Eq. (10) to calculate the accuracy of our last two segmentation
                        
                           (10)
                           
                              Accuracy
                              =
                              
                              
                                 
                                    number
                                    
                                    of
                                    
                                    true
                                    
                                    positives
                                    +
                                    number
                                    
                                    of
                                    
                                    true
                                    
                                    negatives
                                 
                                 
                                    number
                                    
                                    of
                                    
                                    true
                                    
                                    positives
                                    +
                                    false
                                    
                                    positives
                                    +
                                    false
                                    
                                    negative
                                    +
                                    true
                                    
                                    negatives
                                 
                              
                           
                        
                     .

For applying our first algorithm on the dataset from [21], we get the accuracy of 89.7% and for applying our second algorithm on this dataset, we get the accuracy of 93.3%.

@&#CONCLUSION@&#

This paper presents two optimized active surface models with improvements in various parts of the active surface model computations. In the first step of active surface model, an approximation of the desired object obtained by the active contour, is utilized as the model initial surface to increase the convergence speed and accuracy of the model.

In the selection of the model energy function, an effective internal energy is used not only to improve the accuracy of capturing high curvature regions, but also to decrease the complexity of the computing the internal force and curvature. Moreover, two efficient external energies are computed, gradient of wavelet edge detected image and local phase coherence, to extract more discriminative information from the image in order to force the surface toward the desired object boundaries more accurately. To address problems with the adjacent similar regions, we proposed to use a line search method to avoid segmentation of near regions as a part of the final surface. To improve the accuracy of the surface, especially in capturing high curvature regions, two steps are proposed, resampling based on the neighborhood distance and reshaping the triangular mesh based on the vertex nearest neighbors. As depicted in the figures, the calculated accuracy table described in Section 4, our two proposed algorithms have better performance considering both accuracy and speed.

None declared.

@&#REFERENCES@&#

