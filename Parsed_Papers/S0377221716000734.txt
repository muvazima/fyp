@&#MAIN-TITLE@&#Optimal allocation of emergency medical resources in a mass casualty incident: Patient prioritization by column generation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We formulate a patient prioritization problem in mass casualty incidents (MCI).


                        
                        
                           
                           We take a column generation approach and develop a branch-and-price algorithm.


                        
                        
                           
                           Our algorithm produces solutions of acceptable quality quickly, important for MCI.


                        
                        
                           
                           Our formulation offers flexibility to incorporate diverse factors of real-world MCI.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

OR in disaster relief

Mass casualty incident

Triage

Emergency medical service

Column generation

@&#ABSTRACT@&#


               
               
                  Mass casualty incidents create a surge in demand for emergency medical services, and this can often overwhelm the emergency response capacity. Thus, it is critically important to ration the emergency medical resources based on prioritization to maximize the lifesaving capacity. In a traditional triage scenario, the priority for receiving care is solely determined by a patient’s criticality at the time of assessment. Recent studies show that a resource-constrained triage is more effective in providing the greatest good to the maximum number of patients. We model this problem as an ambulance routing problem, and determine the order and destination hospitals for patient evacuation. This is formulated as a set partitioning problem, and we apply a column generation approach to efficiently handle a large number of feasible ambulance schedules. We show that the proposed algorithm with a column generation approach solves the problem to near optimality within a short computation time, and the solutions derived by the algorithm outperform fixed-priority resource allocations.
               
            

@&#INTRODUCTION@&#

A mass casualty incident (MCI) is one that involves a large number of injuries or deaths. The surge in demand for emergency medical services (EMS) following an MCI often means that the available resources are below what is necessary. This relative shortage of EMS resource is recognized as a central aspect of an MCI. For example, the World Health Organization (WHO) defines an MCI as “an incident which generates more patients at one time than locally available resources can manage using routine procedures” (WHO, 2007). In Korea, by considering the typical level of local EMS resources, an emergency incident involving six or more casualties is considered an MCI (Park, 2010).

In Korea, EMS response data clearly shows that the surge in demand for EMS resources following an MCI negatively affects access to EMS. Park (2010) studied MCIs in Korea, and showed that the number of ambulances dispatched to incident sites was fewer than needed in 78% of MCIs. They also found that the response time and patient evacuation time exceeded the standard target in 77.5% and 63.9% of MCIs, respectively. Furthermore, Song et al. (2012) reported that when there is an EMS request that is unrelated but close to an MCI in time and space, the response time to those requests increases, indicating that the strain on EMS resources caused by an MCI is not confined to the incident itself. All these facts suggest that major efforts are needed to improve the quality of EMS responses to MCIs.

One way to achieve the improvement is to effectively allocate available resources, e.g., ambulances, to best serve demands. Because MCIs inherently imply the shortage of resources, its allocation is a crucial decision making problem in emergency logistics in MCIs. In this paper, we study a resource-constrained triage, where the priority of patients to deploy the limited EMS resources is determined so that the response efforts lead to the greatest good to the maximum number of patients. In emergency medicine, triage is the process of assessing clinical severity of victims in an MCI (Sacco et al., 2005), and it is an essential part in determining treatment and transport priority for the victims in the MCI. While much research has been conducted for the relief resource allocation in MCIs (e.g., Caunhye, Nie, and Pokharel (2012); Manopiniwes and Irohara (2014)), transportation of casualty, in particular conjunction with triage has received relatively less attention.

Traditional triage practice bases the prioritization on the severity of the victims’ injuries. A victim with injuries of higher severity and urgency first receives the attention and care of the EMS resources. Two of the most widely adopted triage methods are START (Simple Triage And Rapid Treatment) and SALT (Sort – Assess – Lifesaving Interventions – Treatment/Transport). In these triage methods, first responders evaluate the medical condition of victims based on a few quick tests, e.g., is the victim able to walk, breathe, or obey commands? According to the severity of their injuries, victims are classified into immediate, delayed, minor, and expectant/deceased, which are often color-coded as red, yellow, green, and black. The triage category is then used as a guideline for prioritizing the decision to deploy EMS resources. For example, ambulances transport patients in the highest severity group (i.e., immediate), followed by the delayed group, and so on.

Note that, while the purpose of triage is to determine the priority for deploying limited resources, the traditional triage practice does not explicitly take into account the availability of resources. It has been recognized that this simplistic way of using the triage categories for transport priority decisions does not necessarily lead to the greatest good to the maximum number of victims (Benson, Koenig, & Schultz, 1996; Frykberg, 2005; Garner, Lee, Harrison, & Schultz, 2001; Jenkins & McCarthy, 2008; Sacco et al., 2005). First, the START and SALT methods are patient classification algorithms based on the severity of injuries, and are not actually resource allocation algorithms. As such, they do not consider the resource limitations or the scale of an MCI in determining priorities for allocating resources. Especially in cases where the available resources are in a dire shortage to serve all victims, more lives may be saved by deploying resources to patients with a higher chance of survival, as opposed to a higher severity. These patients are not necessarily in the immediate category. Second, traditional triage does not consider the temporal aspect of MCI responses. Some victims may experience conditions that require a timely response for survival (e.g., hemorrhage, asphyxia). For these conditions, it is recognized that the victim’s chance of survival deteriorates until they receive definitive care. The victim may not survive if the delay in care provision is excessively long. Thus, the medical condition of a victim who was placed in the immediate category at the initial triage may deteriorate over time such that, if re-evaluated, she would be classified as expectant. An implication of this temporal factor is that fixed-priority resource allocation is unlikely to deliver the best outcome, and the priority should be dynamically determined considering the expected change in the victims’ chance of survival. This is particularly relevant when the survival probability for victims in different categories drops with a differing pattern; for example, see Fig. 1
                     .

To overcome the potential shortcomings of the priority assignment in the traditional triage process, several recent studies have investigated a resource-constrained prioritization for emergency response to MCIs. To the best of our knowledge, the first attempt to analytically model resource-constrained patient prioritization was made by Sacco et al. (2005), who demonstrated the necessity and possibility of applying numerical and analytical approaches to a triage process. They proposed an integer programming model to optimally determine the patient transportation priority. A key notion introduced in their work was the survival probability function, which represents the deterioration in a patient’s chance of survival as a function of elapsed time. They estimated this function from a retrospective analysis of data from trauma patients.

The work of Sacco et al. (2005) has been followed by several other studies. These studies can be classified into two streams (Mills, Argon, & Ziya, 2013). The first approach defines the prioritization as an ambulance scheduling problem, which is often formulated as a linear/integer program (Dean & Nair, 2014; Mizumoto, Sun, Yasumoto, & Ito, 2011; Sacco et al., 2005). These studies rely on the assumption that information needed to solve the mathematical program is available at MCI scenes, and the outcome is a real-time prioritization solution in the form of an ambulance schedule.

The second stream of work identifies general rules and principles that can be applied to patient prioritization in MCIs (Argon, Ziya, & Righter, 2008; Jacobson, Argon, & Ziya, 2012; Li & Glazebrook, 2010; Mills et al., 2013). Many of these studies use stochastic scheduling to model the emergency services in MCIs (Argon et al., 2008; Jacobson et al., 2012; Li & Glazebrook, 2010). They aim to develop tactical insights for resource allocation by characterizing the structure of optimal policies for the stochastic scheduling problem. A deterministic approach has been applied for the same purpose. Mills et al. (2013) developed a fluid model describing the deterioration of a victim’s survival probability over time. Based on this model, they derived simple and effective prioritization policies.

The method reported here belongs to the first stream of work, in that we model the patient prioritization as an ambulance scheduling problem. We derive the transportation priorities for the victims in an MCI by explicitly taking into account the details of ambulance operations. The novelties of our work are twofold. First, our model offers flexibility to consider various factors in the realistic decision-making environment in an MCI situation. For example, our model and solution technique allows us to easily incorporate multiple locations of MCI patients, hospital’s location, capacity and care level. Some extensions of our basic formulation are presented in Section 5 to illustrate the modeling flexibility. Second, in terms of the solution approach, our algorithm is based on a column generation formulation; hence we can in principle obtain optimal solutions for ambulance routing schedules unlike heuristic methods. Since computation time is of interest in the context of MCI response, we employ approximation schemes in the implementation of the proposed algorithm so that near optimal solutions are obtained fast.

The remainder of this paper is structured as follows. In Section 2, we describe the problem of patient transport decisions in MCI and present an integer program formulation. Then, Section 3 presents the decomposition of the original integer program, and reformulates it as a set partitioning problem with a column generation approach. A solution method for this sub-problem is discussed, and the overall branch-and-price algorithm is presented. In Section 4, experimental results demonstrating the quality of the solutions are presented, followed by a detailed discussion in Section 5. Finally, we conclude this paper with a summary and some further remarks in Section 6.

We consider a decision problem in the immediate aftermath of an MCI. The order in which victims are transported and their destination hospital, must be determined. We assume the following to be true at the moment of the prioritization decision (
                           
                              T
                              =
                              0
                           
                        ):

                           
                              •
                              All victims from the MCI have been identified, rescued, triaged according to the START classification, and prepared for loading onto ambulances;

Victims in the expectant/deceased and minor categories are not transported until there are no more patients in the immediate and delayed categories;


                                 nA
                                  ambulances are available to respond to the MCI, and all of the available ambulances are of identical type;

The ambulances are present at the MCI scene, ready to start transporting the victims;

An ambulance transports one patient at a time;

There are nH
                                  hospitals in the region to admit the victims;

The hospitals are identical in care capability, differing only in their size (i.e., number of victims they can admit); and

The survival probability for victims is a decreasing function of time: fI
                                 (t) for the immediate category, and fD
                                 (t) for the delayed category. These functions are known a priori.

The first statement specifies that, for T > 0, there will be no new victims joining the queue for ambulance transport. This assumption is necessary for analytic problem formulation. It is a rather strong assumption and may not be true in a real MCI situation, where victims are rescued as a continuous stream. In such cases, patient priority decision needs to be re-computed as new victims are identified and rescued.
                           1
                        
                        
                           1
                           Although it is possible to re-solve and update a schedule whenever a new victim is identified, a better approach would be to model as a decision problem rather than a scheduling problem.
                         The second assumption is justified by the fact that “priority decisions during emergency response mainly concern two (immediate and delayed) groups of patients” (Mills et al., 2013). Next, for the sake of simplicity in the mathematical model, we assume that no additional ambulances are dispatched to the MCI after T > 0. In Section 5, we show how this assumption can be relaxed to reflect the situation in which ambulances arrive at the scene at different times. For the hospitals, we assume all nH
                         hospitals in the region can admit and provide appropriate quality care to both immediate and delayed patients. That is, a patient’s outcome does not depend on which of the nH
                         hospitals she is sent to. In reality, however, hospitals have differing medical capabilities, e.g., Level-I, -II, and -III trauma centers, and sending a patient to the right hospital is important both in terms of the individual patient’s outcome and the overall effective use of hospital resources. Note that although equal capabilities are assumed for all hospitals, they each have a different capacity for treating the victims.

The relaxation of the above assumptions is discussed in Section 5. Such relaxation renders the model more realistic to MCI situations. Our model is solved by a column generation procedure, and in the solution framework, the above assumptions can be relaxed by modifying the structure of the sub-problem without major modification in the model. This is a strong advantage of the proposed algorithm.

The last statement deserves particular attention. We assume that patients in each triage category (i.e., immediate and delayed) follow a survival probability profile given by a known function of time, i.e., fI
                        (t) and fD
                        (t); see, e.g., Fig. 1. In emergency medicine and triage care, it is generally accepted that the timely provision of definitive care is crucial for the survival of a critically injured patient. Some research work has taken this notion further to establish the corollary that the chance of survival of a critically injured patient decreases as a function of the elapsed time from the injury until the provision of definitive care (Sacco et al., 2005; 2007; VictimBase, 2012). In Sacco et al. (2005; 2007), survival probability functions for injury victims were estimated for a given initial “RPM” (Respiration, Pulse, and Motor response) score, where a victim’s RPM score gradually decreases if no intervention is provided. In VictimBase (2012), which is a tool to create virtual victim data for research and training for MCI, the modelers define the transition of the patients’ condition as a function of time. For some specific medical conditions, e.g., hemorrhage shock, the concept of a gradual decrease in survival probability is appropriate, and the quantitative characterization of the survival probability function may be feasible with supporting evidence. Clearly, for many other conditions, including complex injuries, it is extremely difficult to estimate such a survival probability function, let alone its temporal profile. As the subject of estimating the survival probability is beyond the scope of this paper, and with due caution, we justify our use of fI
                        (t) and fD
                        (t) by the prior research that has used similar assumptions (Dean & Nair, 2014; Jacobson et al., 2012; Mills et al., 2013; Sacco et al., 2005; 2007).

With the above assumptions, our problem is more formally described as follows. At 
                           
                              T
                              =
                              0
                              ,
                           
                         there are nI
                         victims in the immediate category, which we denote by the set ΩI
                        . We let ΩD
                         denote the set of nD
                         victims in the delayed category. Note that for the formulation we assume two dummy jobs denoted by 0 and T. The set of ambulances and hospitals are denoted by sets K and H, respectively. Each hospital, indexed by h ∈ H, has a capacity limit, ch
                        , and is located away from the MCI scene by τh
                         time unit. We assume that wI
                         resources (e.g., doctor-hr) are required to treat a patient in the immediate category, and wD
                         are required for a delayed patient. In an emergency department, it is generally true that treating critical patients consumes more resources (staff in particular) than treating a less-critical patient. Thus, it is appropriate to assume wI
                         ≥ wD
                        . Therefore, our problem is to construct a set of victim transport schedules for nA
                         ambulances. Here, a schedule refers to a sequence of transport tasks, and a transport task is defined by a pair (p, h), where p ∈ {I, D} indicates the type of a patient. Fig. 2
                        (a) graphically represents the example in which 
                           
                              
                                 n
                                 I
                              
                              =
                              3
                              ,
                           
                        
                        
                           
                              
                                 n
                                 D
                              
                              =
                              1
                              ,
                           
                        
                        
                           
                              
                                 n
                                 A
                              
                              =
                              1
                              ,
                           
                         and 
                           
                              
                                 n
                                 H
                              
                              =
                              3
                           
                        . Fig. 2(b) shows the victim transport schedule for the ambulance.

We model the ambulance scheduling problem described above by a mixed integer program (MIP). Our formulation is structurally similar to the parallel machine scheduling problem, but differs in that our problem involves a second decision layer (destination hospital) that affects the job processing time. The parallel machine scheduling problem refers to a problem of determining job-machine allocation and job sequencing in a system where identical machines are available and one job is processed by one of the machines. The decision variables of the problem are:

                           
                              •
                              
                                 xij
                                 
                                 
                                    kh
                                 , which equals to 1 if ambulance k transports victim j to hospital h immediately after transporting victim i, and 0 otherwise;


                                 yi
                                 
                                 
                                    h
                                 , which is 1 if victim i is sent to hospital h and 0 otherwise; and


                                 
                                    
                                       
                                          t
                                          i
                                       
                                       ∈
                                       
                                          R
                                          +
                                       
                                       ,
                                    
                                  which represents the time of arrival for victim i at her destination hospital.


                        xij
                        
                        
                           kh
                         indicates the consecutive pair of victims transported by an ambulance and the destination hospital. It completely specifies an ambulance schedule, and 
                           
                              y
                              
                                 i
                              
                              h
                           
                         and ti
                         are determined accordingly. yi
                        
                        
                           h
                         indicates whether victim i is sent to hospital h.

The objective of this model is to maximize the number of expected survivals from an MCI. Recall that the probability of survival for victim i (of class p) who arrives at a hospital at time ti
                         is given by fp
                        (ti
                        ). We can write the objective function as:

                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             max
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      Ω
                                                      I
                                                   
                                                
                                             
                                             
                                                f
                                                I
                                             
                                             
                                                (
                                                
                                                   t
                                                   i
                                                
                                                )
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      Ω
                                                      D
                                                   
                                                
                                             
                                             
                                                f
                                                D
                                             
                                             
                                                (
                                                
                                                   t
                                                   i
                                                
                                                )
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

As mentioned in Section 2, we follow the common notion that fp
                        (t) is monotone non-increasing in t. Thus, the objective function (1) seeks to minimize each ti
                         such that the entire sum is maximized. Note that both fI
                         and fD
                         are nonlinear in general. The objective function (1) is maximized subject to the following set of constraints:

                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                   ,
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   k
                                                   h
                                                
                                             
                                             ≤
                                             1
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   T
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         0
                                                         j
                                                      
                                                   
                                                
                                                
                                                   k
                                                   h
                                                
                                             
                                             =
                                             1
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         T
                                                      
                                                   
                                                
                                                
                                                   k
                                                   h
                                                
                                             
                                             =
                                             1
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   T
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   k
                                                   h
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         j
                                                         i
                                                      
                                                   
                                                
                                                
                                                   k
                                                   h
                                                
                                             
                                             =
                                             0
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             i
                                             ∈
                                             Ω
                                             ,
                                             k
                                             ∈
                                             K
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                   ,
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   k
                                                   h
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      y
                                                      j
                                                   
                                                
                                                h
                                             
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             j
                                             ∈
                                             Ω
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             
                                                t
                                                i
                                             
                                             +
                                             
                                                τ
                                                h
                                             
                                             +
                                             
                                                ∑
                                                
                                                   l
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                
                                                   y
                                                   i
                                                   l
                                                
                                                
                                                   τ
                                                   l
                                                
                                             
                                             −
                                             
                                                t
                                                j
                                             
                                             ≤
                                             M
                                             
                                                (
                                                1
                                                −
                                                
                                                   
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                   
                                                   
                                                      k
                                                      h
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ∈
                                             Ω
                                             ,
                                             k
                                             ∈
                                             K
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      Ω
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   w
                                                   I
                                                
                                                
                                                   
                                                      
                                                         y
                                                         i
                                                      
                                                   
                                                   h
                                                
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      Ω
                                                      D
                                                   
                                                
                                             
                                             
                                                
                                                   w
                                                   D
                                                
                                                
                                                   
                                                      
                                                         y
                                                         i
                                                      
                                                   
                                                   h
                                                
                                             
                                             ≤
                                             
                                                c
                                                h
                                             
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             
                                                M
                                                ′
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   ∑
                                                   
                                                      l
                                                      ∈
                                                      H
                                                   
                                                
                                                
                                                   
                                                      
                                                         y
                                                         i
                                                      
                                                   
                                                   l
                                                
                                                )
                                             
                                             ≤
                                             
                                                t
                                                i
                                             
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             i
                                             ∈
                                             Ω
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   k
                                                   h
                                                
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ∈
                                             Ω
                                             ,
                                             k
                                             ∈
                                             K
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      y
                                                      i
                                                   
                                                
                                                h
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             i
                                             ∈
                                             Ω
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       
                                          
                                             
                                                t
                                                i
                                             
                                             ∈
                                             
                                                R
                                                +
                                             
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             i
                                             ∈
                                             Ω
                                             ∪
                                             {
                                             0
                                             ,
                                             T
                                             }
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      y
                                                      0
                                                   
                                                
                                                h
                                             
                                             =
                                             0
                                          
                                       
                                       
                                          
                                             
                                             ∀
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Ω is set of all patients, i.e., ΩI
                         ∪ ΩD
                        , then constraint (2) ensures that each victim is transported at most once. Note it is allowed to not transport a victim if desirable. With dummy jobs, 0 and T, constraints (3) and (4) define the first and last transport task for each ambulance, respectively. Constraint (5) ensures the continuity of a patient transport sequence assigned to ambulance k. Constraint (6) requires that, if victim j is sent to hospital h, the task must be accordingly specified in the ambulance’s schedule. This constraint relates 
                           
                              x
                              
                                 i
                                 j
                              
                              
                                 k
                                 h
                              
                           
                         to 
                           
                              y
                              j
                              h
                           
                        . Constraint (7) defines the hospital arrival time tj
                         for each victim, and M is a sufficiently large number. Constraint (8) ensures the total workload of hospital h is within its capacity limit. Constraint (9) assigns an arbitrarily large value M′ (M′ < M) to the hospital arrival time for those victims who are not transported at all. This is necessary when the amount of resources required by all victims exceeds the total resource capacity available in the local hospitals, i.e., 
                           
                              
                                 w
                                 I
                              
                              
                                 n
                                 I
                              
                              +
                              
                                 w
                                 D
                              
                              
                                 n
                                 D
                              
                              ≥
                              
                                 ∑
                                 
                                    h
                                    ∈
                                    H
                                 
                              
                              
                                 c
                                 h
                              
                           
                        . In this case, some of the victims will not be admitted to a hospital, and in the objective function, their survival probability is computed to be zero by assigning them a large ti
                        .

Because we assume that all ambulances are identical, we do not need to distinguish between different ambulances. Thus, we can drop the ambulance index k from xij
                        
                        
                           kh
                         to simplify the formulation of (1)–(13) as follows:

                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             (
                                             P
                                             )
                                             
                                          
                                       
                                       
                                          
                                             max
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      Ω
                                                      I
                                                   
                                                
                                             
                                             
                                                f
                                                I
                                             
                                             
                                                (
                                                
                                                   t
                                                   i
                                                
                                                )
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      Ω
                                                      D
                                                   
                                                
                                             
                                             
                                                f
                                                D
                                             
                                             
                                                (
                                                
                                                   t
                                                   i
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       
                                          
                                             
                                                s
                                                .
                                                t
                                                .
                                             
                                             
                                          
                                       
                                       
                                          
                                             (
                                             8
                                             )
                                             ,
                                             (
                                             9
                                             )
                                             ,
                                             (
                                             11
                                             )
                                             −
                                             (
                                             13
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                   ,
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                h
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             j
                                             ∈
                                             Ω
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   T
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         0
                                                         j
                                                      
                                                   
                                                
                                                h
                                             
                                             =
                                             
                                                n
                                                A
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         T
                                                      
                                                   
                                                
                                                h
                                             
                                             =
                                             
                                                n
                                                A
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   T
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                h
                                             
                                             −
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         j
                                                         i
                                                      
                                                   
                                                
                                                h
                                             
                                             =
                                             0
                                             
                                             ∀
                                             i
                                             ∈
                                             Ω
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   Ω
                                                   ∪
                                                   {
                                                   0
                                                   }
                                                   ,
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                h
                                             
                                             =
                                             
                                                
                                                   
                                                      y
                                                      j
                                                   
                                                
                                                h
                                             
                                             
                                             ∀
                                             j
                                             ∈
                                             Ω
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                t
                                                i
                                             
                                             +
                                             
                                                τ
                                                h
                                             
                                             +
                                             
                                                ∑
                                                
                                                   l
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                
                                                   y
                                                   i
                                                   l
                                                
                                                
                                                   τ
                                                   l
                                                
                                             
                                             −
                                             
                                                t
                                                j
                                             
                                             ≤
                                             M
                                             
                                                (
                                                1
                                                −
                                                
                                                   
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                   
                                                   h
                                                
                                                )
                                             
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ∈
                                             Ω
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                h
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ∈
                                             Ω
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                     

As noted earlier, (P) is a parallel machine scheduling problem, and it is well known that this class of problems is NP-hard (van den Akker, Hoogeveen, & van de Velde, 1999; Chen & Powell, 1999). Moreover, Mills et al. (2013) suggests the survival probability function f(t) be modeled by nonlinear functions such as log-logistic and log-normal. Using nonlinear functions in the objective function further increases the computational challenge of solving (P). As a computational exercise, we solved the simplified, linear version (PL
                        ) by replacing the original objective function with the total completion time (min∑
                           i ∈ Ω
                        
                        ti
                        ), and examined the size of problem instances that we can solve in a reasonable time. As expected, solving (PL
                        ) turned out to be quite problematic. For example, a problem instance of 
                           
                              n
                              =
                              20
                              ,
                              
                                 n
                                 A
                              
                              =
                              10
                              ,
                              
                                 n
                                 H
                              
                              =
                              4
                           
                         was not tractable for a commercial solver (CPLEX™v12).

To overcome these difficulties, we re-formulate (P) as a set-partitioning problem. This set-partitioning problem is then solved by a column generation approach. Chen and Powell (1999) demonstrated effectiveness of a column generation approach for solving parallel machine problems. In the following section, we provide a detailed discussion on the reformulation of (P) and the solution method. We first give an overview of how our problem is modeled in the column generation framework. Then, in Section 3.1, we present the set-partitioning formulation. In Section 3.2, we present a sub-problem for column generation, which is formulated as a longest path problem with resource constraints. A branch-and-price algorithm, which guarantees the integrality and optimality of the solution, is discussed in Section 3.3. Some implementation issues for column generation are presented in Section 3.4.

We reformulate the original problem (P) to decompose it into a master and sub-problem, and solve them in the column generation framework. The master problem is formulated as a set-partitioning problem, where we choose up to nA
                      feasible schedules to assign to each ambulance. Clearly, if the master problem contains all feasible schedules, we can obtain the optimal solution to (P). In general, however, the number of feasible schedules is prohibitively large. The column generation approach resolves this problem by solving a restricted master problem with a much smaller subset of feasible schedules. Then, the partial schedule set is iteratively updated until all partial schedules needed to construct the optimal solution are included in the restricted master problem. It is the sub-problem that determines whether the restricted master problem contains all necessary partial schedules. In the sub-problem, we find a schedule that maximizes the reduced cost for the current restricted master problem. If the maximum reduced cost is non-negative, the partial schedule is added to the feasible schedule set. The partial schedule set in the restricted master problem is updated, and we solve the updated restricted master problem. Then, the sub-problem is solved again with the updated dual variables to determine whether a new partial schedule should be added to the restricted master problem. This process is repeated until the maximum reduced cost found in the sub-problem is negative, which indicates that no more partial schedules need to be added. The effectiveness of the column generation approach is heavily dependent on how efficiently we can solve this sub-problem (Chen & Powell, 1999). Therefore, it is imperative to develop an efficient algorithm for the sub-problem by incorporating problem-specific properties of the target problem.

Let Ψ denote the set of all feasible schedules for an ambulance, indexed by s. Recall that a schedule is a sequence of transport tasks, and a single transport task of taking a patient in class p to hospital h is denoted by a pair (p, h). For each schedule s ∈ Ψ, we associate three parameters gs, aps, bhs
                         that can be computed for a given s. Let gs
                         denote the expected number of survivals by schedule s. This is the sum of survival probabilities of all victims covered in schedule s. Because schedule s completely defines ti
                         for all victims i that it covers, gs
                         can be calculated given fI
                        (t) and fD
                        (t). Let aps
                         be the number of class-p victims covered by schedule s. For example, 
                           
                              
                                 a
                                 
                                    I
                                    s
                                 
                              
                              =
                              4
                           
                        
                        
                           
                              (
                              
                                 a
                                 
                                    D
                                    s
                                 
                              
                              =
                              8
                              )
                           
                         means that an ambulance operating on schedule s will transport four immediate-class (eight delayed-class) patients. For each hospital h and s, let bhs
                         denote the resources spent by hospital h to treat all victims assigned to it in schedule s. Using the above example (
                           
                              
                                 a
                                 
                                    I
                                    s
                                 
                              
                              =
                              4
                              ,
                              
                                 a
                                 
                                    D
                                    s
                                 
                              
                              =
                              8
                           
                        ), if all victims are sent to hospital h, then 
                           
                              
                                 b
                                 
                                    h
                                    s
                                 
                              
                              =
                              4
                              
                                 w
                                 I
                              
                              +
                              8
                              
                                 w
                                 D
                              
                           
                        . Finally, we define binary decision variables λs
                         such that 
                           
                              
                                 λ
                                 s
                              
                              =
                              1
                           
                         if schedule s ∈ Ψ is selected, and 0 otherwise.

We formulate our master problem as the following set-partitioning problem,
                           2
                        
                        
                           2
                           With the hospital capacity limitations, it is possible that some patients are not assigned to any schedule. In a strict sense, this type of problem is referred to as a set-packing problem.
                         where we select at most nA
                         feasible schedules from Ψ to assign to the available nA
                         ambulances:

                           
                              (22)
                              
                                 
                                    
                                       
                                          
                                             (
                                             
                                                P
                                                
                                                   m
                                                   a
                                                   s
                                                   t
                                                   e
                                                   r
                                                
                                             
                                             )
                                             
                                          
                                       
                                       
                                          
                                             max
                                             
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   Ψ
                                                
                                             
                                             
                                                g
                                                s
                                             
                                             
                                                λ
                                                s
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       
                                          
                                             
                                                s
                                                .
                                                t
                                                .
                                             
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   Ψ
                                                
                                             
                                             
                                                a
                                                
                                                   p
                                                   s
                                                
                                             
                                             
                                                λ
                                                s
                                             
                                             ≤
                                             
                                                n
                                                p
                                             
                                             
                                             ∀
                                             p
                                             ∈
                                             
                                                {
                                                I
                                                ,
                                                D
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   Ψ
                                                
                                             
                                             
                                                b
                                                
                                                   h
                                                   s
                                                
                                             
                                             
                                                λ
                                                s
                                             
                                             ≤
                                             
                                                c
                                                h
                                             
                                             
                                             ∀
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   Ψ
                                                
                                             
                                             
                                                λ
                                                s
                                             
                                             ≤
                                             
                                                n
                                                A
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                λ
                                                s
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                ,
                                                …
                                                ,
                                                
                                                   n
                                                   A
                                                
                                                }
                                             
                                             
                                             ∀
                                             s
                                             ∈
                                             Ψ
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The objective function (22) corresponds to the original objective function (14) in (P), and seeks to maximize the expected number of survivals by the selected set of schedules. Constraint (23) is related to constraint (15), and requires the number of class-p victims covered by all schedules to be no greater than the total number of victims in that class. Constraint (24) limits the number of victims sent to a hospital according to its capacity ch
                        , which is analogous to constraint (8) in (P). Constraint (25) guarantees that we choose no more than nA
                         schedules, so that each ambulance is assigned at most one schedule. Finally, constraint (26) imposes an integrality condition for the decision variables λs
                        .

(LPmaster
                        ), an LP relaxation of the master problem, is then solved by a column generation procedure. Because |Ψ| can be extremely large, we start with a subset of partial schedules 
                           
                              
                                 Ψ
                                 ˜
                              
                              ,
                           
                         and then successively add columns by solving a column generation sub-problem.

The restricted master problem (LPmaster
                        ) is a maximization problem. For such problems, a new candidate schedule with a non-negative reduced cost improves the objective function when added to (LPmaster
                        ). Thus, the goal of our sub-problem is to find a partial schedule s′ that has a non-negative reduced cost, i.e., 
                           
                              
                                 r
                                 
                                    s
                                    ′
                                 
                              
                              ≥
                              0
                           
                        .

Given (LPmaster
                        ) with the current partial schedule set 
                           
                              
                                 Ψ
                                 ˜
                              
                              ,
                           
                         the reduced cost of a candidate partial schedule s′ is a function of the dual variables of the master problem. Specifically, the reduced cost of schedule s′ is written as follows:

                           
                              (27)
                              
                                 
                                    
                                       
                                          
                                             
                                                r
                                                
                                                   s
                                                   ′
                                                
                                             
                                             =
                                             
                                                g
                                                
                                                   s
                                                   ′
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   p
                                                   ∈
                                                   {
                                                   I
                                                   ,
                                                   D
                                                   }
                                                
                                             
                                             
                                                
                                                   a
                                                   
                                                      p
                                                      
                                                         s
                                                         ′
                                                      
                                                   
                                                
                                                ·
                                                
                                                   π
                                                   p
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                
                                                   b
                                                   
                                                      h
                                                      
                                                         s
                                                         ′
                                                      
                                                   
                                                
                                                ·
                                                
                                                   ρ
                                                   h
                                                
                                             
                                             −
                                             σ
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where πp
                         and ρh
                         are dual variables of (LPmaster
                        ) for constraints (23) and (24), respectively. σ is a dual variable corresponding to constraint (25). Variables 
                           
                              
                                 g
                                 s
                                 ′
                              
                              ,
                           
                        
                        
                           
                              
                                 a
                                 
                                    p
                                    
                                       s
                                       ′
                                    
                                 
                              
                              ,
                           
                         and 
                           
                              b
                              
                                 h
                                 
                                    s
                                    ′
                                 
                              
                           
                         are computed for a candidate schedule s′.

This problem can be formulated as a longest path problem with resource constraints. In a longest path problem with resource constraints, visiting a node requires a certain amount of resources, and the total amount of available resources is limited. The objective of the problem is to find the path of maximum reward from an origin node vo
                         to a destination node vf
                         while consuming no more than the available amount of resources.

For our problem, we seek the path of maximum reward (i.e., maximum reduced cost) across a network in which each node represents the transport of a victim in class p to hospital h. Fig. 3
                         shows an example of a network with two hospitals, H
                        1 and H
                        2. When node (p, h) is visited, wp
                         resources of hospital h are consumed, and the number of remaining victims in class p decreases by one. We consider both victims and hospital resources to be the resources of the longest path problem. Then, the resource constraints that a path must satisfy for our problem are that: (1) hospital resources used by any schedule s should be no more than ch
                         for each hospital h ∈ H, and (2) the number of victims in class I and D covered in schedule s should be no more than nI
                         and nD
                        , respectively.

Note that, in our problem, more than one victim from each class can be transported to each hospital. For example, three class-I patients can be sent to hospital H
                        1. This is represented in the network as multiple revisits to a single node. A path on a network that includes such multiple revisits is referred to as a non-elementary path. For a resource-constrained, non-elementary shortest-path problem, a pseudo-polynomial algorithm has been developed by Desrosiers, Dumas, Solomon, and Soumis (1995), and we modify this algorithm for our problem.

Consider a sub-path κ from the origin node vo
                         to node vi
                        . Let 
                           W
                        
                        
                           i
                         denote a vector that indicates the resources consumed while traversing the path κ. 
                           W
                        
                        
                           i
                         consists of two parts: the total number of patients in each class 
                           
                              (
                              
                                 x
                                 i
                                 p
                              
                              )
                              ,
                           
                         and the treatment resources used by the patients at each hospital 
                           
                              (
                              
                                 δ
                                 i
                                 h
                              
                              )
                           
                        . That is,

                           
                              
                                 
                                    
                                       W
                                       i
                                    
                                    =
                                    
                                       {
                                       
                                          x
                                          i
                                          I
                                       
                                       ,
                                       
                                          x
                                          i
                                          D
                                       
                                       ;
                                       
                                          δ
                                          i
                                          1
                                       
                                       ,
                                       …
                                       ,
                                       
                                          δ
                                          i
                                          
                                             n
                                             H
                                          
                                       
                                       }
                                    
                                    .
                                 
                              
                           
                        
                     

The resource constraints are violated at node 
                           
                              
                                 v
                                 i
                              
                              =
                              
                                 (
                                 p
                                 ,
                                 h
                                 )
                              
                           
                         if either: (1) all patients in class p have been transported by path (
                           
                              
                                 x
                                 i
                                 p
                              
                              >
                              
                                 n
                                 p
                              
                           
                        ), or (2) the treatment resources at hospital h have been exhausted (
                           
                              
                                 δ
                                 i
                                 h
                              
                              >
                              
                                 c
                                 h
                              
                           
                        ).

We also let Ri
                         denote the accumulated reward earned by traversing path κ. In this problem, reward Ri
                         is defined as the reduced cost of path κ. Recall that the reduced cost is computed by (27). For node 
                           
                              
                                 v
                                 i
                              
                              =
                              
                                 (
                                 p
                                 ,
                                 h
                                 )
                              
                              ,
                           
                         let 
                           
                              
                                 v
                                 
                                    i
                                    −
                                    1
                                 
                              
                              =
                              
                                 (
                                 
                                    p
                                    −
                                 
                                 ,
                                 
                                    h
                                    −
                                 
                                 )
                              
                           
                         denote a node that has been visited immediately before arriving at i. Note that an arc from 
                           
                              v
                              
                                 i
                                 −
                                 1
                              
                           
                         to vi
                         represents a task of transporting a class-p patient to hospital h. Then, Ri
                         is obtained recursively by adding the incremental reduced cost for the current patient transport (i.e., arc 
                           
                              v
                              
                                 i
                                 −
                                 1
                              
                           
                         to vi
                        ) to the cumulative reduced cost at the immediately preceding node 
                           
                              v
                              
                                 i
                                 −
                                 1
                              
                           
                        . That is,

                           
                              (28)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                R
                                                i
                                             
                                             =
                                             
                                                R
                                                
                                                   i
                                                   −
                                                   1
                                                
                                             
                                             +
                                             Δ
                                             
                                                R
                                                
                                                   i
                                                   −
                                                   1
                                                   ,
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             Δ
                                             
                                                R
                                                
                                                   i
                                                   −
                                                   1
                                                   ,
                                                   i
                                                
                                             
                                             =
                                             
                                                f
                                                p
                                             
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                )
                                             
                                             −
                                             
                                                π
                                                p
                                             
                                             −
                                             
                                                w
                                                p
                                             
                                             ·
                                             
                                                ρ
                                                h
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             =
                                             
                                                T
                                                
                                                   i
                                                   −
                                                   1
                                                
                                             
                                             +
                                             
                                                τ
                                                
                                                   h
                                                   −
                                                
                                             
                                             +
                                             
                                                τ
                                                h
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        fp
                         is the survivability function for class-p patients, which is a function of patient arrival times at the destination hospital. Ti
                         is the arrival time of the class-p patient at hospital h. Ti
                         can be considered as the arrival time at node vi
                        , and is obtained by adding the transport time for the current transport task to the arrival time at node 
                           
                              v
                              
                                 i
                                 −
                                 1
                              
                           
                        . The current transport task time is the travel time from 
                           
                              h
                              −
                           
                         to the MCI scene and to hospital h. πp
                         and ρh
                         are the dual variables for constraints (23) and (24), respectively.

Our algorithm, which is based on that of Desrosiers et al. (1995), searches all feasible paths in a network to find the longest path from vo
                         to vf
                        . During the search, the consumed resources and reduced cost of all nodes on all sub-paths are recorded. This information is stored as a label for each path κ at each node i
                        
                           
                              (
                              
                                 
                                    W
                                 
                                 i
                                 κ
                              
                              ,
                              
                                 R
                                 i
                                 κ
                              
                              )
                           
                        . To reduce the number of labels tracked by the algorithm, the following dominance relation is applied to the labels (Desrosiers et al., 1995):

                           Definition 1
                           If 
                                 
                                    
                                       W
                                       i
                                       κ
                                    
                                    ≤
                                    
                                       W
                                       i
                                       
                                          κ
                                          ′
                                       
                                    
                                 
                               for all resources and 
                                 
                                    
                                       
                                          
                                             R
                                             i
                                          
                                       
                                       κ
                                    
                                    ≥
                                    
                                       
                                          
                                             R
                                             i
                                          
                                       
                                       
                                          κ
                                          ′
                                       
                                    
                                    ,
                                 
                               label 
                                 
                                    (
                                    
                                       W
                                       i
                                       κ
                                    
                                    ,
                                    
                                       
                                          
                                             R
                                             i
                                          
                                       
                                       κ
                                    
                                    )
                                 
                               is said to dominate 
                                 
                                    (
                                    
                                       W
                                       i
                                       
                                          κ
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             R
                                             i
                                          
                                       
                                       
                                          κ
                                          ′
                                       
                                    
                                    )
                                 
                              .

A label 
                                 
                                    (
                                    
                                       W
                                       i
                                       κ
                                    
                                    ,
                                    
                                       
                                          
                                             R
                                             i
                                          
                                       
                                       κ
                                    
                                    )
                                 
                               of node vi
                               is said to be efficient when no other label at node vi
                               dominates it.

The above dominance relation allows us to consider only the efficient labels at each node in constructing the optimal path. This is because, when a sub-path to a node has a dominated label, it cannot be part of the longest path of the network. Let us consider the sub-paths κ and κ′ from vo
                         to vi
                        , and assume that, at vi
                        , a label 
                           
                              (
                              
                                 W
                                 i
                                 κ
                              
                              ,
                              
                                 
                                    
                                       R
                                       i
                                    
                                 
                                 κ
                              
                              )
                           
                         dominates 
                           
                              (
                              
                                 W
                                 i
                                 
                                    κ
                                    ′
                                 
                              
                              ,
                              
                                 
                                    
                                       R
                                       i
                                    
                                 
                                 
                                    κ
                                    ′
                                 
                              
                              )
                           
                        . Suppose there exists a sub-path ν from vi
                         to vf
                         such that a full path 
                           
                              
                                 κ
                                 ′
                              
                              +
                              ν
                           
                         is feasible (i.e., 
                           
                              
                                 κ
                                 ′
                              
                              +
                              ν
                           
                         satisfies the resource constraints). Then, 
                           
                              κ
                              +
                              ν
                           
                         is also feasible, because κ consumes less resources than κ′. Since Ri
                        
                        
                           κ
                         is no less than 
                           
                              
                                 
                                    
                                       R
                                       i
                                    
                                 
                                 
                                    κ
                                    ′
                                 
                              
                              ,
                           
                         path 
                           
                              κ
                              +
                              ν
                           
                         has a greater reward than path 
                           
                              
                                 κ
                                 ′
                              
                              +
                              ν
                           
                        . Hence, κ′ cannot be a sub-path of the longest path.

A label-setting method with first-in–first-out (FIFO) node selection is shown in Algorithm 1
                        . The algorithm explores all nodes in the network to repeatedly update the list of efficient labels. When no more updates are feasible, the algorithm terminates and returns 
                           
                              E
                              
                                 v
                                 f
                              
                           
                         as its output. In the algorithm, function 
                           
                              F
                              (
                              
                                 (
                                 
                                    W
                                    
                                       i
                                       *
                                    
                                 
                                 ,
                                 
                                    R
                                    
                                       i
                                       *
                                    
                                 
                                 )
                              
                              ,
                              j
                              )
                           
                         returns label (
                           W
                        
                        
                           j
                        , Rj
                        ) given that the immediately preceding node is 
                           
                              v
                              
                                 i
                                 *
                              
                           
                        . 
                           W
                        
                        
                           j
                         is obtained by adding to 
                           
                              W
                              
                                 i
                                 *
                              
                           
                         the additional resources consumed by the arc from 
                           
                              v
                              
                                 i
                                 *
                              
                           
                         to vj. Rj
                         obtained by (28). Note that when node j is the final node vf
                        , additional resource consumption is zero, and the incremental reduced cost 
                           
                              Δ
                              
                                 R
                                 
                                    
                                       i
                                       *
                                    
                                    ,
                                    f
                                 
                              
                           
                         is 
                           
                              −
                              σ
                           
                        . Finally, function EFF(Θi
                        ) returns the efficient labels from a set of node labels Θi
                        . We define Ej
                         to be a current set of efficient labels for node vj
                        , and then EFF(Ej
                         ∪ (
                           W
                        
                        
                           j
                        , Rj
                        )) removes any label in Ej
                         that is dominated by (
                           W
                        
                        
                           j
                        , Rj
                        ).

Solutions to (LPmaster
                        ), λs
                        , obtained by the column generation approach in Sections 3.1 and 3.2 are not necessarily integer solutions. To ensure the integrality condition for λs
                        , a branch-and-bound algorithm is implemented. A branch-and-bound with column generation approach is referred to as a branch-and-price algorithm (Barnhart, Johnson, Nemhauser, Savelsbergh, & Vance, 1998; Vanderbeck & Wolsey, 1996). For our problem, we follow the algorithm proposed by Vanderbeck (2000); Vanderbeck and Wolsey (1996).

In our branch-and-bound scheme, we use a depth-first search for node selection. That is, when the current node in the enumeration tree is active, we select one of the two child nodes to explore next. When the current node is pruned, we visit the other child node or return to the parent level. Pruning is determined by comparing the solution to (LP
                        
                           master, u
                        ), the master problem at current node u, with the current incumbent solution. If it is smaller than the current incumbent solution, the node is pruned; otherwise, it remains active and its child is explored next. For the initial incumbent solution at the root node, we compute an integer solution by solving (Pmaster
                        ) with a partial schedule set 
                           
                              Ψ
                              ˜
                           
                         obtained from (LP
                        
                           master, o
                        ).

For the branching variables, we follow Vanderbeck and Wolsey (1996), as described below. Note that a schedule s is completely characterized
                           3
                        
                        
                           3
                           To be precise, 
                                 
                                    
                                       W
                                    
                                    
                                       v
                                       f
                                    
                                    s
                                 
                               and 
                                 
                                    R
                                    
                                       
                                          v
                                          f
                                       
                                    
                                    s
                                 
                               together uniquely define a schedule s.
                         by a resource vector 
                           
                              
                                 
                                    W
                                 
                                 
                                    v
                                    f
                                 
                                 s
                              
                              =
                              
                                 
                                    {
                                    
                                       x
                                       
                                          v
                                          f
                                       
                                       I
                                    
                                    ,
                                    
                                       x
                                       
                                          v
                                          f
                                       
                                       D
                                    
                                    ;
                                    
                                       δ
                                       
                                          v
                                          f
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       δ
                                       
                                          v
                                          f
                                       
                                       
                                          n
                                          H
                                       
                                    
                                    }
                                 
                                 s
                              
                           
                        . For node u of an enumeration tree, we can define a set of partial schedules Θ for some threshold vector 
                           
                              
                                 
                                    q
                                 
                                 u
                              
                              =
                              
                                 
                                    {
                                    
                                       
                                          x
                                          ̲
                                       
                                       I
                                    
                                    ,
                                    
                                       
                                          x
                                          ̲
                                       
                                       D
                                    
                                    ;
                                    
                                       
                                          δ
                                          ̲
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          δ
                                          ̲
                                       
                                       
                                          n
                                          H
                                       
                                    
                                    }
                                 
                                 u
                              
                           
                        :

                           
                              (29)
                              
                                 
                                    
                                       
                                          
                                             
                                                Θ
                                                
                                                   
                                                      q
                                                   
                                                   u
                                                
                                             
                                             =
                                             
                                                {
                                                s
                                                |
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      v
                                                      f
                                                   
                                                   s
                                                
                                                
                                                   (
                                                   ·
                                                   )
                                                
                                                ≥
                                                
                                                   
                                                      q
                                                   
                                                   u
                                                
                                                
                                                   (
                                                   ·
                                                   )
                                                
                                                ,
                                                s
                                                ∈
                                                Ψ
                                                }
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Now, let 
                           
                              s
                              ˜
                           
                         denote a schedule selected as a fraction in (LP
                        
                           master, u
                        ) of node u, i.e., 
                           
                              λ
                              
                                 s
                                 ˜
                              
                           
                         is a positive non-integer. When there is at least one such 
                           
                              s
                              ˜
                           
                         in the solutions to (LP
                        
                           master, u
                        ), we can always choose 
                           q
                        
                        
                           j
                         such that 
                           
                              
                                 ∑
                                 
                                    s
                                    ∈
                                    
                                       Θ
                                       
                                          
                                             q
                                          
                                          j
                                       
                                    
                                 
                              
                              
                                 λ
                                 s
                              
                              =
                              
                                 α
                                 j
                              
                              ∉
                              N
                           
                         (Vanderbeck, 2000; Vanderbeck & Wolsey, 1996). Then, branching is performed to create child nodes by adding the branching constraints for the set of partial schedules 
                           
                              s
                              ∈
                              
                                 Θ
                                 
                                    
                                       q
                                    
                                    j
                                 
                              
                           
                        :

                           
                              (30)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   
                                                      Θ
                                                      
                                                         
                                                            q
                                                         
                                                         j
                                                      
                                                   
                                                
                                             
                                             
                                                λ
                                                s
                                             
                                             ≥
                                             
                                                ⌈
                                                
                                                   α
                                                   j
                                                
                                                ⌉
                                             
                                             ;
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   
                                                      Θ
                                                      
                                                         
                                                            q
                                                         
                                                         j
                                                      
                                                   
                                                
                                             
                                             
                                                λ
                                                s
                                             
                                             ≤
                                             
                                                ⌊
                                                
                                                   α
                                                   j
                                                
                                                ⌋
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In general, adding branching constraints changes the structure of the algorithm for the sub-problem to make it difficult to solve. In our problem, as branching constraints are added, (27) changes to incorporate the dual variables of the added constraints:

                           
                              (31)
                              
                                 
                                    
                                       
                                          
                                             
                                                r
                                                
                                                   s
                                                   ′
                                                
                                             
                                             =
                                             
                                                g
                                                
                                                   s
                                                   ′
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   p
                                                   ∈
                                                   {
                                                   I
                                                   ,
                                                   D
                                                   }
                                                
                                             
                                             
                                                
                                                   a
                                                   
                                                      p
                                                      
                                                         s
                                                         ′
                                                      
                                                   
                                                
                                                ·
                                                
                                                   π
                                                   p
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   h
                                                   ∈
                                                   H
                                                
                                             
                                             
                                                
                                                   b
                                                   
                                                      h
                                                      
                                                         s
                                                         ′
                                                      
                                                   
                                                
                                                ·
                                                
                                                   ρ
                                                   h
                                                
                                             
                                             −
                                             σ
                                             −
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   Φ
                                                
                                             
                                             
                                                
                                                   1
                                                   
                                                      
                                                         s
                                                         ′
                                                      
                                                      ∈
                                                      
                                                         Θ
                                                         
                                                            
                                                               q
                                                            
                                                            j
                                                         
                                                      
                                                   
                                                
                                                
                                                   β
                                                   j
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where Φ in the last summation term refers to the set of branching constraints at the current node, and βj
                         is their corresponding dual variable. The indicator function in the summation term allows including dual variables only when s′ belongs to the partial schedule set that the branching constraint applies to. It turns out that we can still use Algorithm 1, with a slight modification, to account for the branching constraints.

We modify Algorithm 1 to determine whether the longest path found belongs to 
                           
                              Θ
                              
                                 
                                    q
                                 
                                 j
                              
                           
                        . Recall that a label in Algorithm 1 is defined as 
                           
                              
                                 
                                    W
                                 
                                 i
                                 κ
                              
                              =
                              
                                 
                                    {
                                    
                                       x
                                       i
                                       I
                                    
                                    ,
                                    
                                       x
                                       i
                                       D
                                    
                                    ;
                                    
                                       δ
                                       i
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       δ
                                       i
                                       
                                          n
                                          H
                                       
                                    
                                    }
                                 
                                 κ
                              
                              ,
                           
                         and always increases as the search progresses (i.e., it can only consume more resources as more transport tasks are carried out). Once 
                           
                              
                                 W
                              
                              i
                              κ
                           
                         exceeds the threshold vector 
                           q
                        
                        
                           j
                        , the final path that contains the sub-path κ also exceeds 
                           q
                        
                        
                           j
                        , and hence belongs to Φ as per (29). The modified algorithm evaluates the resource vector in an updated label against 
                           q
                        
                        
                           j
                        , and, if the resource vector is greater than 
                           q
                        
                        
                           j
                        , computes 
                           
                              R
                              i
                              κ
                           
                         using (31).

@&#IMPLEMENTATION@&#

To start the proposed algorithm, we need an initial partial schedule set 
                           
                              
                                 Ψ
                                 ˜
                              
                              o
                           
                        . We generate 
                           
                              
                                 Ψ
                                 ˜
                              
                              o
                           
                         for the restricted master problem using two rule-based heuristics: immediate-first and delayed-first. In the immediate-first heuristic, all patients in the immediate class are transported before any delayed class patient. They are transported to the nearest available hospital. Under the delayed-first rule, patients in the delayed class take priority, and are transported first to the nearest available hospital.

In the implementation of the column generation formulation, we also need a strategy for managing feasible partial schedule set 
                           
                              Ψ
                              ˜
                           
                        . When the sub-problem yields partial schedules with positive reduced costs, a management strategy determines how to add those new schedules to 
                           
                              Ψ
                              ˜
                           
                        . We use a simple strategy to add all partial schedules with positive reduced costs obtained from the sub-problem. As well as simple addition, we choose to remove nonbasic schedules with high negative reduced costs from 
                           
                              Ψ
                              ˜
                           
                         to prevent the schedule set from growing too large.

While our algorithm guarantees optimal solutions, solving the above branch-and-price formulation to optimality can be computationally intensive. Obtaining strong bounds is not easy for this problem, and the algorithm may need to explore a large number of nodes in the enumeration tree. In addition, although Algorithm 1 that solves the sub-problem is pseudo-polynomial, it can still take long especially when the number of patients or capacity limit of hospitals is large. To avoid excessive computational burden, we introduce a few approximation schemes in the implementation of the algorithm.

The first approximation scheme concerns the branching decision. We prune current node u when the gap between the objective value of (LP
                        
                           master, u
                        ) and the current incumbent integer solution is within ε. In other words, we do not pursue further exploration along the branches under node u when the potential improvement is not significant enough to justify additional computation. Second, we terminate the algorithm if the current incumbent integer solution is not improved after a predefined number of subsequent nodes in the branch-and-bound tree. Finally, in solving the sub-problem, we terminate Algorithm 1 when the number of paths (i.e., the number of effective labels in vf
                        ) is greater than some threshold value, instead of waiting until the search is complete. In the practical context of emergency response, obtaining a reasonably good solution within an acceptable time-frame is desirable, which justifies our use of these approximations.

We tested our algorithm on hypothetical problem instances. First we randomly sample values for the relevant problem parameters as follows to construct 300 parameter settings:

                        
                           •
                           The number of victims in each class (nI, nD
                              ) are uniformly drawn from [10, 30];

The number of ambulances (nA
                              ) is uniformly drawn from [10, 30];

The amounts of treatment resources required for each type of victim (wI, wD
                              ) are both integers from the uniform distribution [3, 6], [1, 3], respectively;

The capacity of a hospital (ch
                              ) is uniformly drawn from [10, 30] and hospitals are generated until the total amount of resources in all hospitals is sufficient to treat all victims, i.e., 
                                 
                                    
                                       ∑
                                       
                                          h
                                          ∈
                                          H
                                       
                                    
                                    
                                       c
                                       h
                                    
                                    ≥
                                    
                                       (
                                       
                                          n
                                          I
                                       
                                       
                                          w
                                          I
                                       
                                       +
                                       
                                          n
                                          D
                                       
                                       
                                          w
                                          D
                                       
                                       )
                                    
                                 
                              ;

Travel time between MCI scene and hospital h is an integer value from uniform distribution [5, 50].

For the survival probability functions fI
                     (t) and fD
                     (t), we adopted the following three-parameter survival probability function for immediate and delayed class victims (Mills et al., 2013):

                        
                           
                              
                                 
                                    f
                                    p
                                 
                                 
                                    (
                                    t
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          β
                                          
                                             0
                                             ,
                                             p
                                          
                                       
                                       
                                          
                                             
                                                (
                                                t
                                                /
                                                
                                                   β
                                                   
                                                      1
                                                      ,
                                                      p
                                                   
                                                
                                                )
                                             
                                             
                                                β
                                                
                                                   2
                                                   ,
                                                   p
                                                
                                             
                                          
                                          +
                                          1
                                       
                                    
                                 
                                 
                                 for
                                 
                                 
                                 p
                                 ∈
                                 
                                    {
                                    I
                                    ,
                                    D
                                    }
                                 
                                 ,
                              
                           
                        
                     
                  

where β
                     
                        k, p
                      > 0. Values of β
                     
                        k, p
                      are listed in Table 1
                      and plotted in Fig. 4
                     . The parameters shown in the first row of Table 1 represent the case in which the victims’ survival probability, particularly those in the immediate class, starts low and drops rapidly. Hence, we label this the pessimistic case. Similarly, the second and third cases are labeled as moderate and optimistic.

With the 300 parameter settings and three survival probability scenarios, we solve a total of 900 problem instances. We use CPLEX™v12.5 to solve the master problem (LPmaster
                     ), and the sub-problems are solved using Algorithm 1. Recall that three approximation scheme are introduced in the implementation of our algorithm, and each of them requires a parameter value (Section 3.4). First, for branching decision, we set 
                        
                           
                              ɛ
                           
                           =
                           1
                           %
                        
                     . That is, we prune the current node u when the gap between the objective value of (LP
                     
                        master, u
                     ) and current incumbent solution is less than 1%. Second, if the current incumbent integer solution is not improved after the next 1,000 nodes have been visited in the branch-and-bound tree, we terminate and outputs the current incumbent solution. Lastly, in Algorithm 1, we set the threshold value for the number of labels in node vf
                      to 1,000. Table 2
                      summarizes the performance of our algorithm.
                        4
                     
                     
                        4
                        It should be mentioned that, even with the approximation schemes, some of the problem instances are not solved within reasonable time. For these instances, we simply report the initial incumbent integer solution obtained at the root node. As explained in Section 3.3, this initial incumbent solution is obtained by solving (Pmaster
                           ) with a partial schedule set 
                              
                                 Ψ
                                 ˜
                              
                            derived from solving (LP
                           
                              master, o
                           ). While this is a potentially gross approximation, it turns out that only a small fraction of problem instances (80 out of 900) requires such intervention, and even for those 80 cases, the average optimality gap is 1.68% and the worst case is 4.93%. Thus, its impact on the overall performance of our algorithm as summarized in Table 2 seems marginal.
                     
                  

In Table 2, we first report “LP-IP gap” as an indicator for the quality of our solutions. LP-IP gap refers to the gap in the objective function value between our (near-optimal) solution and an LP-relaxed solution. An LP-relaxed solution is obtained by solving the root node of the branch and bound tree with linear relaxation. The LP-IP gap is an upper bound for the objective function, and thus represents the maximum possible optimality gap. Under all three scenarios, LP-IP gap is 0.40% on average with the maximum gap less than 5% and 95 percentile is well below 2%, all of which demonstrates our solutions show sufficiently acceptable quality. Computation time for most problem instances is in the order of a few seconds as indicated by less than 3 seconds of 95 percentile value.

To put our solution in a perspective, we compare it with two simple heuristics – immediate-first and delayed-first priority rule. This comparison is relevant since, in a dire situation of MCI, a simple operational discipline may be more desired than optimal yet complicated operations of EMS resources. Solutions from our model often exhibits a complicated pattern. For example, an optimal solution may suggest victims be transported in the order of immediate–delayed–delayed–immediate–immediate–delayed–
                        …
                     . In fact, simple rule-based heuristics, such as the immediate-first rule or policies discussed in prior research (Argon et al., 2008; Jacobson et al., 2012; Li & Glazebrook, 2010; Mills et al., 2013), aim to maintain simplicity for practical reasons.

The last two columns in Table 2 show the gap in the objective function values evaluated with the two heuristic rules and our solution. We can see that there is a broad range in the results. Under the pessimistic scenario, the immediate-first rule performs significantly worse than our solution. It fares better under the moderate scenario and much better in the optimistic scenario, though in both cases, it still shows non-trivial gap from the (near) optimal solution. The delayed-first rule shows a quite different pattern. It performs closest to the optimal solution under the pessimistic scenario, and worst under the optimistic scenario. Also noteworthy is that the delayed-first rule yields far better performance than the immediate-first rule under the pessimistic scenario, but less so under the optimistic scenario. This is due to the structure of survival probability curves and the particular form of objective function used in our model. This will be discussed in Section 5.

It turns out that a particular group of parameters, which we call a “workload” for ambulances, provides a meaningful interpretation for the results. Fig. 5
                      presents the gaps in the objective function values for the heuristics under the three scenarios. Shown along the y-axis is the gap value between our (near-optimal) solution and the heuristic rule. x-axis is 
                        
                           
                              (
                              
                                 n
                                 I
                              
                              +
                              
                                 n
                                 D
                              
                              )
                           
                           ·
                           
                              T
                              ¯
                           
                           ·
                           
                              n
                              A
                              
                                 −
                                 1
                              
                           
                           ,
                        
                      which is the product of the total number of victims and average travel time to hospitals divided by the number of ambulances. This quantity corresponds to the average workload for transporting the victims, experienced by the ambulances.

On the left column in Fig. 5, we see that the performance of the immediate-first rule worsens as the workload increases. The gap is particularly significant under the pessimistic scenario, and becomes smaller under the moderate and optimistic scenario (note the scale difference between the three plots). In contrast, the delayed-first rule shows an opposite pattern. The largest gap is observed under the optimistic scenario, and decreases in moderate and pessimistic scenario. Although not as evident as the immediate-first case, it also shows that the workload is correlated with the gap performance, just in the opposite direction; the gap is larger for low workload cases.

Role of the workload on the performance of ambulance operation is clearly visible in Fig. 6
                     . In Fig. 6, each circle represents a test instance under the optimistic scenario. A circle is filled dark if the immediate-first rule performs better than the delayed-first rule in the instance. It shows that at a low workload (near origin), the immediate-first rule performs better and the delayed-first rule dominates as the workload increases.


                     Fig. 7
                      shows the pattern more explicitly by plotting the difference in the objective value between the two heuristic rules as a function of the total workload. A negative value indicates that the immediate-first rule performs better. In Fig. 7, we observe three workload regimes; when workload ≤ 40, the immediate-first rule produces better results than the delayed-first rule. For 40 ≤ 80, we have mixed results, and ≥ 80, the delayed-first rule outperforms the immediate-first rule. It demonstrates that the average workload experienced by ambulances is an important factor to consider when selecting an operational rule for ambulances. In fact, this is in accordance with Mills et al. (2013)’s observation, where they recommend the following policy: use the immediate-first rule when the average workload is less than certain threshold value; otherwise, use the delayed-first rule.

@&#DISCUSSION@&#

In Section 4, we show that the delayed-first rule outperforms the immediate-first rule in most cases other than low-workload, optimistic scenario cases. When this conclusion was presented to the EMS practitioners, however, it was not well received. That was because intuitively they believe firmly that more urgent patients deserve higher priority, which they also seem to believe more ethical. We believe this discrepancy between the practitioner’s belief and the model outcome is attributed to the two key components – survival probability and objective function.

Let us first examine the role of the survivability functions fI
                         and fD
                         in resource assignment. Compared with fD, fI
                         drops quickly in the early period, and then remains flat (Fig. 4). As a consequence, 
                           
                              
                                 Δ
                                 f
                              
                              =
                              
                                 (
                                 
                                    f
                                    D
                                 
                                 −
                                 
                                    f
                                    I
                                 
                                 )
                              
                           
                         first increases, reaches a peak, and then decreases (see, for example, Fig. 8
                        (a), plotted for the pessimistic scenario). This means that fI
                         drops off more rapidly than fD
                         up to the peak, after which the drop in fD
                         becomes steeper. The implication for the priority decision is that serving victims in the immediate class is more rewarding during the early period, and less so during the later period. Roughly speaking, this transition occurs at the peak of the 
                           
                              
                                 Δ
                                 f
                              
                              =
                              
                                 (
                                 
                                    f
                                    D
                                 
                                 −
                                 
                                    f
                                    I
                                 
                                 )
                              
                           
                         curve. Note that, in Fig. 8, the peak of 
                           
                              
                                 Δ
                                 f
                              
                              =
                              
                                 (
                                 
                                    f
                                    D
                                 
                                 −
                                 
                                    f
                                    I
                                 
                                 )
                              
                           
                         occurs after 7 minute in the pessimistic scenario, 35 minute in the moderate scenario, and 71 minute in the optimistic scenario. Thus, the period during which serving victims in the immediate class is more beneficial is shortest in the pessimistic scenario, and longest in the optimistic scenario. This is one of the main reasons why the immediate-first heuristic performs far worse than the delayed-first heuristic in the pessimistic scenario, and fares better in the optimistic scenario. This role of the survival probability was recognized by Mills et al. (2013), where they identified the peak of 
                           
                              
                                 Δ
                                 f
                              
                              =
                              
                                 (
                                 
                                    f
                                    D
                                 
                                 −
                                 
                                    f
                                    I
                                 
                                 )
                              
                           
                         as a key determinant in the resource allocation priority.

Second, it is possible that practitioners may base their priority decision on a different objective function than the one in the model. The objective function used in our model aims to maximize the total expected number of survivors. Suppose we have one ambulance and there are two patients waiting to be transported at T = 0. One is an immediate-class patient with 
                           
                              
                                 f
                                 I
                              
                              
                                 (
                                 0
                                 )
                              
                              =
                              0.5
                              ,
                           
                         and the other is a delayed-class patient with 
                           
                              
                                 f
                                 D
                              
                              
                                 (
                                 0
                                 )
                              
                              =
                              0.9
                           
                        . Also suppose that transporting them to a hospital located δ minute away yields the survival probability of 
                           
                              
                                 f
                                 I
                              
                              
                                 (
                                 δ
                                 )
                              
                              =
                              0.5
                              --
                              0.1
                              δ
                           
                         and 
                           
                              
                                 f
                                 D
                              
                              
                                 (
                                 δ
                                 )
                              
                              =
                              0.9
                              --
                              0.12
                              δ
                           
                        . Then, the objective function will drive a solution to choose to transport the delayed-class patient first because its opportunity cost is smaller; i.e., the objective function value when transporting the delayed-class patient and letting the immediate-class patient wait is (0.9
                           −
                        0.12δ) + (0.5
                           −
                        0.1 × 3δ) whereas it is (0.5
                           −
                        0.1δ) + (0.9
                           −
                        0.12 × 3δ) in the opposite case. However, transporting a patient with survival probability of 0.9 when there is another patient in much more critical condition is difficult to accept from a practical standpoint. As a thought experiment, we test an alternative objective function that considers the relative drop in the patients’ survival probability with respect to their initial condition as follows:

                           
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             Ω
                                             I
                                          
                                       
                                    
                                    
                                       
                                          
                                             f
                                             I
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                          −
                                          
                                             f
                                             I
                                          
                                          
                                             (
                                             
                                                t
                                                i
                                             
                                             )
                                          
                                       
                                       
                                          
                                             f
                                             I
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             Ω
                                             D
                                          
                                       
                                    
                                    
                                       
                                          
                                             f
                                             D
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                          −
                                          
                                             f
                                             D
                                          
                                          
                                             (
                                             
                                                t
                                                i
                                             
                                             )
                                          
                                       
                                       
                                          
                                             f
                                             D
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     


                        Fig. 9
                         shows the result from 300 problem instances under the optimistic scenario. Compared this result with Fig. 5, effects of the new objective function is clearly observed. The immediate-first rule is now much less sensitive to the workload increase, and the performance of the delayed-first rule is significantly poor (i.e. large gap) in the low workload condition. As a result, the immediate-first rule is preferred over the delayed-first rule in many more instances (Fig. 10
                        ), which is closer to the practitioner’s decision making preference.

One more point worth mentioning regarding Fig. 9 is that the gaps between the two heuristic rules and our solution are much larger than before (Fig. 5). This suggests that the two simple heuristic rules may not be as effective if various factors and preferences in the real decision making environment are taken into account. One may want to adopt optimal solutions or at least examine and understand the effect of operating under simple heuristic rules. In such cases, model flexibility is going to be important, and in fact it is the advantage of our model and solution method. Our algorithm allows us to incorporate any type of objective function because the objective function is used only for calculating gs
                         in the sub-problem.

There are several assumptions in the original model that we introduce for the sake of simplicity in modeling and analysis. First, our model assumes that all hospitals are equally capable, and we do not distinguish between an immediate-class victim being sent to a higher-level hospital (e.g., trauma center) or to a local emergency room. It is more realistic to assume a hierarchical care capability structure: immediate-class patients can only be treated at upper-tier emergency departments (EDs), whereas delayed-class patients can be treated at an ED of any tier. Second, we assume that all victims are located at one location, whereas in reality it may be possible for victims of a large-scale MCI to be spread across multiple locations. Third, the model assumes that ambulances are available for service at the onset of an MCI, which is quite unrealistic for most MCIs. These assumptions can be relaxed under slight changes to the original model, and the solution approach described in this paper remains valid.

We can incorporate the hierarchical ED structure by modifying the sub-problem. Recall that, on the (p, h) network of a longest-path problem (e.g., Fig. 3), node (p
                        *, h
                        *) indicates that a victim in class-p
                        * is transported to hospital h
                        *, which implies that hospital h
                        * can treat class-p
                        * patients. Then, the absence of node (p
                        *, h
                        *) means class-p
                        * patients cannot be treated at hospital h
                        *, and thus they will not be transported to hospital h
                        *. By removing nodes (I, h′) for lower-tier hospitals denoted by h′, victims in the immediate class will not be transported to any of those hospitals in any derived schedule, representing the hierarchical ED structure.

Multiple victim locations can also be modeled with a relatively simple change to the network in the sub-problem. Specifically, we create duplicates of all nodes in the network, and give an extended node definition by appending a location index, i.e., (p, h, l), where l is an index of the victim’s location. Constraint (23) in (Pmaster
                        ) needs to be modified accordingly as:

                           
                              
                                 
                                    
                                       ∑
                                       
                                          s
                                          ∈
                                          Ψ
                                       
                                    
                                    
                                       a
                                       
                                          p
                                          s
                                       
                                       l
                                    
                                    
                                       λ
                                       s
                                    
                                    ≤
                                    
                                       n
                                       p
                                       l
                                    
                                    
                                    ∀
                                    p
                                    ∈
                                    
                                       {
                                       I
                                       ,
                                       D
                                       }
                                    
                                    ,
                                    l
                                    ∈
                                    L
                                    ,
                                 
                              
                           
                        where L is a location set, indexed by l.

Finally, we can model the sequential availability of ambulances by distinguishing the ambulances in the model. The original problem (Pmaster
                        ) is modified to include ambulance index k as follows:

                           
                              (32)
                              
                                 
                                    
                                       
                                          
                                             (
                                             
                                                P
                                                
                                                   m
                                                   a
                                                   s
                                                   t
                                                   e
                                                   r
                                                   ,
                                                   k
                                                
                                             
                                             )
                                             
                                          
                                       
                                       
                                          
                                             max
                                             
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   
                                                      Ψ
                                                      k
                                                   
                                                
                                             
                                             
                                                g
                                                s
                                                k
                                             
                                             
                                                λ
                                                s
                                                k
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (33)
                              
                                 
                                    
                                       
                                          
                                             
                                                s
                                                .
                                                t
                                                .
                                             
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   
                                                      Ψ
                                                      k
                                                   
                                                
                                             
                                             
                                                a
                                                
                                                   p
                                                   s
                                                
                                                k
                                             
                                             
                                                λ
                                                s
                                                k
                                             
                                             ≤
                                             
                                                n
                                                p
                                             
                                             
                                             ∀
                                             p
                                             ∈
                                             
                                                {
                                                I
                                                ,
                                                D
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (34)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   
                                                      Ψ
                                                      k
                                                   
                                                
                                             
                                             
                                                b
                                                
                                                   h
                                                   s
                                                
                                                k
                                             
                                             
                                                λ
                                                s
                                                k
                                             
                                             ≤
                                             
                                                c
                                                h
                                             
                                             
                                             ∀
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (35)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   s
                                                   ∈
                                                   
                                                      Ψ
                                                      k
                                                   
                                                
                                             
                                             
                                                λ
                                                s
                                                k
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (36)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                λ
                                                s
                                                k
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             s
                                             ∈
                                             Ψ
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Decision variables and coefficients in the formulation are similarly defined as in (Pmaster
                        ), but here the assignment of a schedule s to ambulance k is explicitly defined. That is, 
                           
                              
                                 λ
                                 s
                                 k
                              
                              =
                              1
                           
                         if schedule s ∈ Ψk
                         is selected and executed by ambulance k ∈ K. In this formulation, the sub-problem must be solved for each ambulance, because their arrival times will be different. The reduced cost of schedule s for ambulance k is calculated by

                           
                              
                                 
                                    
                                       r
                                       
                                          s
                                       
                                       k
                                    
                                    =
                                    
                                       g
                                       
                                          s
                                       
                                       k
                                    
                                    −
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          {
                                          I
                                          ,
                                          D
                                          }
                                       
                                    
                                    
                                       
                                          a
                                          
                                             p
                                             s
                                          
                                          k
                                       
                                       ·
                                       
                                          π
                                          p
                                       
                                    
                                    −
                                    
                                       ∑
                                       
                                          h
                                          ∈
                                          H
                                       
                                    
                                    
                                       
                                          b
                                          
                                             h
                                             s
                                          
                                          k
                                       
                                       ·
                                       
                                          ρ
                                          h
                                       
                                    
                                    −
                                    
                                       σ
                                       k
                                    
                                    ,
                                 
                              
                           
                        
                     

where σk
                         denotes a dual variable value corresponding to constraint (35) for ambulance k. The arrival time for ambulance k is taken into account in Algorithm 1 by adding the arrival time when computing 
                           
                              g
                              s
                              k
                           
                        .

Note that the above modification can be also useful to model a situation where victims are located and rescued as a stream (as opposed to a single batch) and continuously join the queue for ambulances over the course of an MCI. With a new arrival of a victim(s), transport priority needs to be updated. When re-computing to update the priority, we need to consider the current status of the system, the availability of ambulances in particular. The above modification allows us to re-solve for an updated schedule upon a new victim’s arrival. We estimate return times for the currently busy ambulances, and set those times as the ambulances’ arrival time to solve (P
                        
                           master, k
                        ) to get an updated solution.

@&#CONCLUSION@&#

In the aftermath of an MCI, there is a surge in demand for EMS resources. A sudden excessive demand can overwhelm the local EMS system, and effective use of the limited EMS resources is thus critical in such events. We have developed a solution approach to prioritize resource allocation in the event of an MCI. Given the number of victims and their triage categories, our model determines the order of transportation and destination hospital so as to maximize the number of expected survivals.

In the model, we take into account various operational factors to incorporate the reality of decision-making under an MCI. Given the number of victims and their triage categories, our model considers the location and care capacity of hospitals and the ambulance fleet.

To obtain optimal solutions, we modeled this problem as a set-partitioning problem and solved by a column generation approach. We then solved the problem by a branch-and-price scheme, and our numerical experiments with 900 problem instances demonstrates the algorithm produces near-optimal solutions within a short computation time. With optimal solutions at hand, it is possible to assess the quality of solutions obtained from alternative priority decision-making, such as simple rule-based priority assignment.

Before closing, we wish to point out that there is a potential shortcoming to the optimal decision-making approach in disaster situations. While providing better solutions that will ideally save more patients, optimal solutions may require complicated operations, and it may not be easy to follow and execute the solution in a post-disaster environment. Simple heuristic rules, which are easier to follow, may be practically more relevant. Nevertheless, as the scale and complexity of priority decision-making grows, the gains in lifesaving capabilities offered by optimal solutions will increase, and we believe that the advancement and availability of information technology for disaster response management can help to resolve the challenge of executing optimal solutions.

@&#ACKNOWLEDGMENTS@&#

This research was supported by the Public Welfare 
                     &
                   Safety Research Program through the National Research Foundation of Korea (NRF) funded by the Ministry of Science, ICT 
                     &
                   Future Planning (2011–0029883) and by a grant “research and development of modeling and simulating the rescues, the transfer, and the treatment of disaster victims” [nema-md-2013-36] from the man-made disaster prevention research center, Ministry of Public Safety and Security.

@&#REFERENCES@&#

