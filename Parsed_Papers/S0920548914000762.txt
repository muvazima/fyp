@&#MAIN-TITLE@&#Real-time message scheduling for ISA100.11a networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Two novel scheduling methods for ISA100.11a based on the traffic information of the network are proposed.


                        
                        
                           
                           We applied the previous scheduling scheme of FlexRay to ISA100.11a standard.


                        
                        
                           
                           Focus on average end-to-end delay and throughput


                        
                     
                  
               
            

@&#KEYPHRASES@&#

ISA100.11a

Message scheduling

Traffic-aware

@&#ABSTRACT@&#


               
               
                  This paper proposes two new message scheduling methods on shared timeslots of the ISA100.11a standard to enhance real-time performance, namely, traffic-aware message scheduling (TAMS) and contention window size adjustment (CWSA). In TAMS, instead of competing to transmit sporadic messages in consecutive cycles, end-nodes are divided into groups, which then access the channel in specific cycles when the probability of timeslots getting involved in collisions exceeds a specified threshold. Conversely, in CWSA, the contention window is adjusted when the probability of timeslots getting involved in collisions exceeds the threshold. The results of simulations conducted indicate that these two proposed methods provide performance improvements in terms of success probability and end-to-end delay.
               
            

@&#INTRODUCTION@&#

Nowadays, the revolution in wireless technology is predicted to bring fundamental changes to industrial applications over the coming years. By freeing users from the cord, wireless communication systems offer many advantages compared to wired systems, since they do not require wiring devices to connect sensors to a central hub. Wireless networks triggered the development of standard protocols specifically designed for industrial applications [1–3].

One such move in that direction is the recent proposal of IEEE 802.15.4 [4,5] as a basic media access control (MAC) standard. One of the first protocols to use IEEE 802.15.4 is Zigbee [6], which changed from wired fieldbus to wireless network applications. However, it does not meet the required demand to achieve a widely adopted wireless solution for industrial applications [7]. In response to the need for a standard for industrial solutions, in September 2007, the highway addressable remote transducer (HART) Communication Foundation (HCF) issued WirelessHART [8] as the first public standard dedicated to process measurement and control devices. This standard provides deterministic behavior and guarantees the bandwidth by using time division multiple accesses (TDMA) with token passing.

At the end of 2009, the international standard of automation (ISA) released ISA100.11a [9,10] which adopts many features in common with WirelessHART. However, ISA100.11a targets a wider class of process controls. It also provides for connectivity among disparate networks and network expansion, in contrast to WirelessHART. The ISA100.11a standard is responsible for standardizing system solutions that will meet requirements, such as interoperability and interchangeability, regardless of manufacturer or implementation. Furthermore, ISA100.11a, like WirelessHART accesses the network using TDMA to provide deterministic services. In addition, ISA100.11a also uses the CSMA-CA mechanism used by the original IEEE 802.15.4 standard for contending transmissions. In ISA100.11a, as well as networked systems in general, real-time scheduling is one of the most important tasks [11,12]. In Ref. [5], the authors described a scheduling method of wireless control networks using IEEE 802.15.4 networks. The superframe of IEEE 802.15.4 is used for the transmission of real-time periodic and sporadic data. In that proposed scheme, when added to the network, each node sends the task period and deadline of the data. Then the coordinator gathers all of the guaranteed time slots (GTS) requests and offset the nodes in the network. The authors in Ref. [11] proposed an event-based scheduling algorithm for networked discrete control systems. The algorithm in this paper was based on some conditions about the channel utilization of messages in the network to adjust the sampling period. Dinh et al. [13] evaluated the network performance and priority CSMA-CA mechanism on ISA100.11a by considering the effect of various MaxBExp parameters and priority settings. The results of their study indicated that the bigger MaxBExp is, the better the network utilization is, and results in packets with higher priority having shorter average delay and consuming more amount of total channel bandwidth. Hsu et al. [14] proposed the dynamic traffic-aware duty cycle adjustment MAC protocol (TA-MAC), which is based on the use of the sending/receiving buffer, traffic loading and battery life of sensors to adjust a sensor's duty cycle. Their simulation results indicated that TA-MAC can reduce energy consumption.

Various researches have done work on traffic-aware techniques using the MAC protocol. Alam et al. [15] proposed the traffic-aware dynamic (TAD) MAC protocol for wireless body area sensor networks (WBASN), which allows the wake-up interval to converge to a steady state for fixed and variable traffic rates. Their results showed that the TAD-MAC protocol can optimize energy consumption. Chunguang et al. [16] presented a novel protocol, called the traffic-aware channelization MAC (TAC-MAC) protocol, for wireless ad hoc networks. Their protocol dynamically divides variable-width subchannels and allocates subchannel width based on the orthogonal frequency division multiplexing (OFDM) technique according to the traffic demands of nodes. Their experimental results indicated that the TAC-MAC protocol can significantly improve network throughput and reduce packet delay. Wang and Helmy [17] designed the background traffic-aware rate adaption algorithm (BEWARE) which uses a mathematical model to calculate the expected transmission time based on current wireless channel and background traffic conditions. Their results on a test-bed experiment showed that BEWARE outperforms other algorithms in terms of throughput. Chen et al. [18] introduced a protocol for transceivers, called the multichannel medium access control (TAMMAC) protocol. Their protocol exploits channels using a smart window to dynamically increase and decrease the contention window size, based on various loads. The results of simulations they conducted showed that the TAMMAC protocol can achieve higher network throughput than other schemes. Palattella et al. [19] conceived a new traffic aware scheduling algorithm (TASA) that extends the theoretically well-established graph theory methods based on network topology and traffic load. Their simulation results showed that TASA is able to support emerging industrial applications as it can diminish latency and power consumption. The results of our literature investigation indicated that research related to message scheduling using shared timeslots on ISA100.11a is limited.

A scheduling method for sporadic data named traffic-aware message scheduling (TAMS) method was mentioned in Ref. [21]. Based on Ref. [21], a new method called contention window size adjustment (CSWA) for ISA100.11a networks is proposed. This method optimizes the contention window sizes according to the probability of contention slots getting involved in collisions exceeds a predefined threshold. Furthermore, the simulation scenarios which consist of large number of nodes in the ISA100.11a networks are investigated and analyzed.

The remainder of this paper is organized as follows. We give a technical overview of the ISA100.11a standard in Section 2, specially, the architecture, radio spectrum, CSMA-CA mechanism, timeslots in general, and operation of shared timeslots of ISA100.11a in particular. In Section 3, we describe the traffic-aware message scheduling (TAMS) method in details, and the contention window size adjustment (CWSA) method in Section 4. We then look at performance evaluations conducted in Section 5. Finally, we conclude and outline future work in Section 6.

There are two kinds of networks in ISA100.11a, networks with backbone routers and networks with no backbone router. Fig. 1
                         depicts a simple network with no backbone router. It consists of a collection of wireless devices called a data link (DL) subnet and additional devices that DL subnet and connect it to other networks. In this topology, all wireless field devices (I/O devices and routers are called field devices) communicate directly to the gateway and the System/Security Manager without relaying the packets over an infrastructure backbone. The advantage of this kind of topology is that it reduces communication latencies and increases the predictability of network behavior. However, ISA100.11a networks that use backbone routers (such as that illustrated in Fig. 2
                        ) are used in applications that stretch over a wide geographical area, for example, interconnected halls within a plant. This topology can connect multiple DL subnets through a network backbone. It is the extension of the ISA100.11a network, both geographically as well as in terms of number of devices. Backbone routers provide a communication link between the wireless field devices and the backbone infrastructure. Figs. 1 and 2 show that standard ISA100.11a networks include such component as security managers, system managers, gateways, backbone routers, and field devices.
                           
                              •
                              Field devices: Physical instruments that collect data and control diverse equipments. A field device can have routing capabilities (routers) or operate as a non-routing device (I/O devices). An I/O device only sources the data collected from its own interfaces. Routers, on the other hand, relay packets to and from other adjacent devices.

Backbone router: Responsible for the communication link between the wireless field devices in a subnet and the backbone. It performs address translation between the 16-bit short addresses utilized within the subnet and the 128-bit IPv6 addresses. It also carries out packet expansion from the compressed 6LoWPAN packets to fully expanded IPv6 packets.

System and security managers: Responsible for managing all ISA100.11a specified layers and the join process of the functional entities that exist in the ISA100.11a network. All decisions pertaining to communication, resource distribution, and security are centralized in the System Manager. The System Manager ensures that all devices operate in a planned and determined way by appropriately managing resources across the network and setting the communication parameters for each separate device. The System Manager also operates as a proxy for the Security Manager, which is responsible for the security parameter generation and distribution within the ISA100.11a network.

Gateway: Responsible for application layer connectivity between the field devices and the backbone network. It also facilitates interaction between devices employing ISA100.11a protocols and systems employing non-ISA100.11a protocols.

ISA100.11a uses IEEE 802.15.4 channels in the 2.4GHz band—a total of 16 channels, numbered 11 through 26 (channel 26 is optional, because some applications may encounter regulatory limitations at the upper band edge). Fig. 3
                         depicts the 16 IEEE 802.15.4 channels and 3 IEEE 802.11 channels. In Fig. 3, the narrow non-overlapping channels, 11–26 are IEEE 802.15.4 channels. The wider channels 1, 6, and 11, are IEEE 802.11 (WiFi) channels.

As shown in Fig. 3 
                        [9], ISA100.11a takes into account the coexistence with IEEE 802.11 channels. Channels 15, 20, and 25 do not substantially overlap any of the three IEEE 802.11 channels (1, 6, and 11). This means that those channels will not experience any interference from the WiFi signal, so they may reasonably be designated as slow hopping channels (introduced in the next section). The slow hopping channels may provide benefit when utilized to find the routers. For example, routers can periodically send advertisement packets to I/O devices on pre-designated hopping channels to spread network information.

In ISA100.11a, the system manager configures a device in one of three general operational alternatives, slotted channel hopping, slow channel hopping, and hybrid slotted/slow hopping, as illustrated in Fig. 4
                        . A timeslot is a single period of time. The timeslot durations are configurable to a fixed value such as 10ms or 12ms. All timeslots generally have the same duration and are re-aligned to a 1Hzcycle every 250ms clock interval. A superframe is a collection of timeslots repeating on a cyclic schedule. The number of timeslots in a given superframe determines how frequently each timeslot repeats, thus, setting a communication cycle for the end-nodes that use the superframe.

In the slotted hopping method, each dedicated timeslot is preferred for periodic messages, and employs the TDMA approach (the investigation of the dedicated time slots is not in the scope of this paper). In the slow hopping method, a number of timeslots are combined to make a shared timeslot, usually on a scale of about 100ms to 400ms. Shared timeslots use the CSMA-CA mechanism to transmit sporadic messages. This process is described below.

For dedicated timeslots that use TDMA, each end-node is given a dedicated timeslot to send and receive a periodic message. However, for shared time slots things are a bit more complicated in cases where multiple-links may encounter link collision when two or more links coincide. In order to avoid collisions and increase reliability, ISA100.11a uses the CSMA-CA algorithm with priority. The CSMA-CA backoff algorithm used by ISA100.11a is outlined in Algorithm 1. It primarily depends on four variables:
                           
                              •
                              The backoff exponent (BExp) enables the computation of the backoff delay, which is the length of time before the clear channel assesment (CCA) is performed. The backoff delay is a random variable between zero and (2
                                    BExp
                                 −1). The backoff exponent has a maximum value, called maximum backoff exponent (MaxBExp). BExp is applied when, and only when, end-nodes use shared time slots to transmit messages, but do not receive an ACK, indicating the possibility of a collision. BExp is intended to resolve such collisions.

The contention window (CW) represents the number of periods during which the channel must be sensed idle before being accessed. ISA100.11a sets default value to CW =1 (corresponding to one CCA), compared to two for IEEE 802.15.4. Like its IEEE 802.15.4 counterpart, CCA lasts for 192μs.

The maximum lifetime of the packet (MaxLifeTime), which varies from 2s to 480s (recommended value is 30s), is the maximum lifetime one packet lives on the MAC buffer, after this value the packet is destroyed. The backoff procedure of IEEE 802.15.4 stops when the number of retransmission exceeds a predefined maximum number. In ISA100.11a, however, the retry number depends on packet living time, which is determined by MaxLifeTime.

The delay time t, before CW is performed, determines the available priority set for a packet. The packets of ISA100.11a are categorized up to 16 levels (4 bits are reserved for this number) by delay before beginning to perform CW. At the same priority level, collision can happen when two or more end-nodes transmit data at the same time.

In Algorithm 1, the system starts with BExp=0 and BackoffCounting=0. After that, there is a procedure that updates the BExp and BackoffCounting values. In that case, the new value for BExp is (BExp+1) and the new value for BackoffCounting is a random value in (0,2
                           BExp
                        
                        −1).

The idea of message scheduling in shared timeslots is inspired from the previous work on the dynamic segment of the Flexray protocol [20]. In that work, each message is dynamically mapped to specific cycles in order to decrease the unused bandwidth. In fact, ISA100.11a can be set to operate like the Flexray protocol, as described below.
                           Algorithm 1
                           Transmission at shared timeslots in ISA100.11a
                                 
                                    
                                 
                              
                           

In ISA100.11a, all end-nodes in the network try to access the channel (i.e., operate Algorithm 1) in all cycles over time. This means that there are many end-nodes competing to transmit packets in each cycle. For example, if there are five end-nodes in a network, with the original ISA100.11a, all those end-nodes access the channel in consecutive cycles, as depicted in Fig. 5
                        . This results in very heavy traffic and large number of collisions. Consequently, many packets exceed the MaxLifetime limit and are destroyed. In our method, each end-node is mapped to specific cycles, and is only able to access the channel in those cycles. A reservation for an end-node n is depicted by Rn (k,w) with the reservation period k, which depicts the period between two consecutive access times of an end-node:
                           
                              (1)
                              
                                 k
                                 
                                 =
                                 
                                    
                                       Number
                                       
                                       of
                                       
                                       end
                                       ‐
                                       nodes
                                       
                                       in
                                       
                                       the
                                       
                                       network
                                    
                                    
                                       Number
                                       
                                       of
                                       
                                       end
                                       ‐
                                       nodes
                                       
                                       joining
                                       
                                       in
                                       
                                       1
                                       
                                       cycle
                                    
                                 
                                 .
                              
                           
                        The offset w ∈ {0, …, k − 1} is the position of the first cycle in which an end-node joins. The following example illustrates the reservations for endnodes.
                           Example 1
                           A distributed star topology network, comprising a gateway and nine end-nodes. The end-nodes send sporadic messages to the gateway, and each of them has a reservation value, as depicted in Fig. 6
                              . With those values, end-nodes participate in predefined cycles, as illustrated in Fig. 7
                              .

Those end-nodes have the value k=3. This means that they access the channel every three cycles. Moreover, end-nodes in the network are randomly divided into three groups: Nodes 1, 3, and 5 with the value w=0, begin accessing the channel in the first cycle; Nodes 2, 8, and 9 with the value w = 1, initialize in the second cycle; the others, with the value w=2, start accessing the channel in the third cycle.

In shared timeslots, there are multiple links from end-nodes to the gateway that may contend to transmit packets. Hence, the words shared timeslots and contention slots will be used interchangeably.

The value k depends on the probability of contention slots getting involved in collisions (Pc), which indicates how congested the network is (as mentioned in [13]). The higher the value of Pc, the lower the throughput. The value of Pc is calculated using
                           
                              (2)
                              
                                 
                                    P
                                    c
                                 
                                 =
                                 
                                    
                                       N
                                       col
                                    
                                    
                                       N
                                       cont
                                    
                                 
                                 .
                              
                           
                        
                     

Ncol is the number of contention slots involved in a collision, caused by two or more end-nodes trying to transmit packets at the same time. Ncont is the number of contention slots during the considered time. If Pc exceeds a threshold θ, w and k are measured based on Algorithm 2.
                           Algorithm 2
                           Measuring k and w
                                 
                                    
                                 
                              
                           

The proposed method depends on traffic information to adjust parameters and consequently optimize performance. Hence, it is called the traffic-aware message scheduling (TAMS) method. Normally, with the original ISA100.11a standard, the values of k and w are 1 and 0, respectively. However, in our proposed scheme, when Pc exceeds threshold θ, k is incremented by one, and a value that depends on k is added to w. The number of end-nodes in the network is divided into k parts. The first set of end-nodes begins accessing the channel in the first cycle. The second, third, …, kth then access the channel in the second, third, …, kth cycles, respectively. It is assumed in this paper that the traffic of end-nodes in the network is always static. Therefore, the k value increases until Pc becomes lower than the threshold θ. Consequently, there is no need to decrease k value.


                        Example 1 illustrates our technique. When Pc reaches threshold θ, the number of end-nodes is divided into three groups. The first group of endnodes (1, 3, 5), the second group (2, 8, 9), and the third group (4, 6, 7) start accessing the channel in the first, second, and third cycles, respectively.

In Example 1, the number of end-nodes is perfectly divisible by k=3, so they are distributed into three groups, each group has three end-nodes. However, in cases where the number of end-nodes is not divisible by k without a remainder, it is still divided by k, and the remaining end-nodes are put into the first group. The following example illustrates this scenario.
                           Example 2
                           Similar to 
                                 Example 1, but there are 10 end-nodes around the gateway. k=3, therefore the end-nodes are divided into three groups, with one end-node remaining. That node is put into the first group, as depicted in Fig. 8
                              .

In the previous section, we described the TAMS method. In this section, we discuss the contention window size adjustment (CWSA) method, which also relies on traffic information to adjust the contention window. In the traditional IEEE 802.15.4 standard used in ISA100.11a, the contention window is fixed (192μs) regardless of the traffic. The proposed scheme optimizes the contention window sizes according to the probability of contention slots getting involved in collisions (Pc). When this probability exceeds the threshold θ, the contention window (CW) is updated as defined below:
                        
                           (3)
                           
                              CW
                              
                              =
                              
                              CW
                              
                              ‐
                              
                              
                                 p
                                 CW
                              
                              .
                           
                        
                     
                  

Here, pCW represents the amount by which the size of CW is reduced. pCW can be determined by the increasing ratio of Pc. Eq. (4) is used to calculate the size of pCW based on the amount of Pc that exceeds the thresold θ (∆Pc), the original contention window size (CW), and threshold θ:
                        
                           (4)
                           
                              pcw
                              =
                              
                                 
                                    Δ
                                    
                                       P
                                       c
                                    
                                    ⋅
                                    CW
                                 
                                 θ
                              
                              .
                           
                        
                     
                     Algorithm 3 demonstrates the new self-adaptive contention window adjustment for ISA100.11a nodes. The new algorithm is simple in principle. The major distinction between the new algorithm and the original 802.15.4 standard is that the initial contention window in the new algorithm adapts to the contention intensity of the wireless channel. The initial contention window of a packet is the contention window used for its first transmission. In the conventional 802.15.4 standard, the size of the window is always a constant without dependence on the network load condition, but in the proposed scheme, the window size is adapted based on the network load condition. As can be seen from Algorithm 3, it is shown that this method decreases the contention window size whenever the estimated Pc exceeds threshold θ. However, it is not triggered if Pc is below the threshold θ or after the CWSA method has been applied (unlike the TAMS method).

The performance would be optimized if we apply Algorithm 3 until Pc drops below threshold. However, it is just for small-scale networks. In large-scale networks, with the high values of Pc, CW might be reduced until it reaches 0. In that case, there is no time to sense the channels, but nodes feel free to transmit. Consequently, Pc might be out of control. The performance of the network becomes worse. The following example depicts the updating procedure of contention window size.
                        Example 3
                        A network consisting of nodes which have the CW value of 192μs. The threshold is set up to 0.7. When Pc is 0.9, it means that Pc exceeds the threshold a value of 0.2. pCW can be calculated to 55. Finally, the new CW is 137μs.

Adjust the contention window size
                              
                                 
                              
                           
                        

The proposed schemes were evaluated by using the OPNET Modeler 16.0. We used a star topology network with one gateway and various numbers of end-nodes, ranging from 10 to 200 (more nodes than in our previous work [21]), in a 200m × 200m square area. The system operated in a passive monitoring scenario, in which the end-nodes sent their data to the gateway following a Poisson distribution with an interarrival time λ equal to 6. Each end-node produced only one kind of priority packet. Table 1
                         summarizes the simulation parameters while Table 2
                         shows information about the workload used in the simulation.

The threshold is 0.7 because of the trade-off of the system. If the threshold is high, the system slowly adjusts the k value following the environment condition. It leads to the high value of Pc. However, if the threshold is low, the k value would be high; it means that the system cannot use the bandwidth in an effective way. The data generation follows Poisson distribution, with the interarrival time is 6s. The interarrival time of 6s is a reasonable time for the frequent of special events in the simulation environment. In industrial systems, sporadic messages are the representative for unpredictable events such as alarms or cases that devices have temporary lost contact to the network, etc. It is a serious problem if these events could not be fully reported to the central manager, in nuclear plants, for example. In the future works, we may find out the optimized value that is suitable for the real environment case by case. The superframe was configured as a hybrid. It consisted of 25 slots, with the length of each slot being 10ms. Hence, the superframe cycle was 250ms. In our simulation, the number of shared timeslots in a superframe was set to one. In industrial applications, the periodic data are the more important part; it needs more timeslots to use. However, the sporadic rarely appends. That is why the number of shared timeslots is set as one. This paper considers the scenario that the nodes transmit only sporadic data without periodic data in order to evaluate the efficiency of the proposed method. The proposed method can be applied to real applications in which the nodes transmit both periodic and sporadic method. That is one of the future directions of this work.

The assumptions made in this simulation were as follows:
                           
                              •
                              There is no communication error in the environment so each transmitted frame is received correctly at the intended destination, i.e., the gateway.

All end-nodes can listen to each other's sending signal, which means that there is no hidden terminal problem.


                        Fig. 9
                         shows the values of Pc, the original ISA100.11a and ISA100.11a with the CWSA and TAMS methods. In the original ISA100.11a, i.e., k = 1, Pc exceeds threshold θ in the scenario where the number of end-nodes is 10 nodes (reaching 0.712). This means that the value of k needed to be increased. With the TAMS method, the value of k is increased whenever the Pc value reaches the threshold θ. This means that the end-nodes had to postpone their access over the next k −1cycles. Consequently, the traffic became lighter. That is why the Pc value is always below the threshold θ when the TAMS method is applied. However, things are different with the CWSA method. Because the contention window size is decreased based on ∆Pc, the CWSA method cannot keep Pc below the threshold in scenarios where the number of end-nodes is large (more than 100). That is why the Pc value of CWSA is higher than that of the TAMS method.

In this paper, the scenarios in which there are big numbers of nodes are considered, so it is difficult to draw clearly the values of k on graphs. The audiences are recommended to see Ref. [21] to obtain the k values in a small scale network scenario.

In this study, the first metric used to evaluate the performance of the TAMS and CWSA method was success probability. We used it to compare the original ISA100.11a and the two proposed methods. Success probability is the probability of successfully transmitting packets (Ps), calculated by
                           
                              (5)
                              
                                 
                                    P
                                    s
                                 
                                 =
                                 
                                    
                                       N
                                       suc
                                    
                                    
                                       N
                                       held
                                    
                                 
                              
                           
                        where Nsuc is the number of packets transmitted successfully within the MaxLifetime and Nheld is the number of packets that are held in the packet queue.

During one timeslot, only one packet is allowed to transmit from source. Hence, we use the probability of successfully transmitting packets (Ps) for meaning of throughput. If the Ps value is high, it means that the throughput of the nodes in the network is high. A plan to adopt these methods to other methods for transmitting periodic data is progressing as the future works of this paper. In that case, the throughput of the full system for both periodic and sporadic data will be analyzed clearly.

Overall, it can be seen from Fig. 10
                         that data transmission with the CWSA method had an approximately 44% higher Ps than that of ISA100.11a. The TAMS method had the optimum result, which was 13% higher than that of CWSA. This can be explained as followed. In this case, end-nodes in the traditional ISA100.11a tried to access the channel in consecutive cycles, even in scenarios where Pc exceeded threshold θ (as depicted in Fig. 9). This means that the probability of collisions was very high, and so Ps was low. However, in the TAMS method, end-nodes are divided into groups and arranged in specific cycles, with the number of groups depending on the sensed traffic information, which is also represented by k. This resulted in fewer end-nodes joining in a cycle, and thus a higher possibility of each successfully transmitting its packets than in ISA100.11a. Conversely, the CWSA method decreases the contention window size if Pc exceeds threshold θ without concern about whether Pc is below the threshold after the method is applied. Hence, the Ps value when applying the CWSA method is lower than that of the TAMS method.

The second metric was average end-to-end delay. Fig. 11
                         shows the average end-to-end delay values for the two proposed schemes and the original ISA100.11a. The end-to-end delay tendency is similar to that of Ps. It can be seen that the average end-to-end delay in the CWSA scheme was nearly 23% lower than that of the original ISA100.11a. However, the TAMS method had the lowest, approximately 35% lower than that of CWSA.

This can be explained by the fact that on the one hand, when end-nodes are divided into groups, there are fewer end-nodes accessing the channel at any one time, unlike in ISA100.11a. This means that the number of retransmissions of one packet until it is successfully delivered to the gateway is reduced. On the other hand, when the contention window size is decreased, end-nodes can access the channel more frequently than in the original ISA100.11a. Therefore, the average end-to-end delay can be reduced.

@&#CONCLUSIONS@&#

In this paper, we presented two methods for sending sporadic messages in the shared timeslots of the ISA100.11a standard, namely, the traffic-aware message scheduling (TAMS) method and the contention window size adjustment (CWSA) method. With TAMS, the values of offset and reservation period are adjusted following the sensed traffic, which is represented by the Pc value. The end-nodes are then arranged to transmit sporadic messages in specific cycles based on these values. On the other hand, with CWSA, the contention window size is decreased if the Pc value exceeds the threshold, without concern as to whether the Pc value is below the threshold after application of the CWSA method. The results of simulations conducted show the effectiveness of the two proposed scheme in reducing average end-to-end delay and increasing success probability. To address practical concerns, the proposed algorithm can be easily implemented on existing devices without major changes.

The limitation of this work is that it can only be applied to star topologies, we plan to apply those methods to mesh topologies and multi-channel applications in the future work.

@&#REFERENCES@&#

