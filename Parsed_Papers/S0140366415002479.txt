@&#MAIN-TITLE@&#Practical identity-based private sharing for online social networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Novel practical solution using Identity based Encryption with multiple untrusted Key Servers (PKGs) to be used on top of current Online Social Networks (OSNs) to protect privacy as con


                           dentiality of the content.


                        
                        
                           
                           An outsider anonymous Identity Based broadcast encryption protocol with a multi-PKG model to support multiple recipients.


                        
                        
                           
                           A prototype implementation as Firefox extension requiring a relatively small overhead.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Online social networks

Privacy

Identity-based encryption

@&#ABSTRACT@&#


               
               
                  Online Social Networks (OSNs) constitute vital communication and information sharing channels. Unfortunately, existing coarse-grained privacy preferences insufficiently protect the shared information. Although cryptographic techniques provide interesting mechanisms to protect privacy, several issues remain problematic, such as, OSN provider acceptance, user adoption, key management and usability. To mitigate these problems, we propose a practical solution that uses Identity-Based Encryption to simplify key management and enforce data confidentiality. Moreover, we devise an Identity-Based outsider anonymous private sharing scheme to disseminate information among multiple users. Furthermore, we demonstrate the viability and tolerable overhead of our solution via an open-source prototype.
               
            

@&#INTRODUCTION@&#

Online Social Networks (OSNs), such as Facebook, Google+, and Twitter present a significant growth and have become a prominent communication channel for many millions of users. OSNs offer users an efficient and reliable channel to distribute and share information. At the same time, OSNs store large amounts of data which prompts several privacy concerns, in particular as it is possible to infer a considerable amount of sensitive information from the shared and stored content. Although users are allowed to configure “privacy preferences” to limit access and select which users or groups can access the shared content, these preferences are generally too coarse-grained and difficult to configure [1]. In addition, these preferences do not exclude providers along with the dangers of data beaches and leaks [2] nor government. As proved by recent events like the PRISM project [3] and the iCloud breach [4].

All these worrisome issues motivate the need for effective techniques to properly protect user’s privacy in OSNs. Several solutions have been proposed advocating the use of cryptographic mechanisms to address the privacy issues, either by an add-on atop of existing OSNs [5–8], or by complete new privacy-friendly architectures [9], mainly decentralized [10,11]. In general, those solutions suffer from user adoption and key management issues as users are required to register and then share, certify and store public keys [12]. Günther et al. [13] formalize cryptographic models for private profile management achieving confidentiality and unlinkability, however their sharing information protocols similar complex key management do not protect privacy of the recipients. Completely new architectures represent a difficult step for users as the trade-off of moving away from the commonly used social ecosystem compared with the risk of losing interactions is high. Arguably, current centralized OSNs are here to stay and will continue to be actively used by millions of people. In light of recent events, such as Edward Snowden’s whistle-blowing on US surveillance programs [3], OSN providers have an interest to maintain their users and a privacy-friendly image. Hence, it is important to protect user’s sharing information, such as text and media content, as well as the identity of the recipients as it can contain private and sensitive information.

Identity Based Encryption (IBE) [14] solutions overcome the key management problem as the public key of the user can be represented by any valid string, such as the email, unique 
                                 id
                               and username. Therefore, by using a OSN username any savvy and concerned user can share encrypted content with other users who are not using the solution, thereby motivating curious ones to use the system as well. However, IBE-based systems require a trusted central Private Key Generator (PKG) server to generate the private parameters for each user based on the PKG master secret. Consequently, such an architecture only shifts the trusted party from the OSN to the PKG. This problem can be mitigated if the master secret is divided among multiple PKGs following a Distributed Key Generation (DKG) [15] protocol based on Verifiable Secret Sharing (VSS) [16]. A DKG protocol allows n entities to jointly generate a secret requiring that a threshold t of the n entities does not get compromised. In fact, each entity holds only a share of the master secret, that can be reconstructed by atleast t shares.

Many OSN users are represented on several OSNs, and potentially hold multiple public keys. In this way, the multi-PKG setting could be supported and maintained by several OSNs, in particular if considering the collaboration between competing OSN providers to be difficult and orthogonal to their business model. Fig. 1
                               shows an overview of the proposed model, in which users authenticate to t-PKGs of their choice; to retrieve private keys. This action is performed after the reception of encrypted content. For an additional level of security, PKG servers can also be represented by governmental entities from different continents, with no incentives to collaborate, thus overcoming more powerful adversaries using legal measures [17] that may at least affect t-PKGs.

In this paper, we propose a novel practical solution using IBE with multiple semi-trusted PKGs on top of current OSNs. We highlight that multi-PKGs can be supported by several OSNs in view of business competition. We present an IBE broadcast encryption protocol with a multi-PKG model to support multiple recipients. Using a broadcast IBE-based mechanism users can share content with multiple recipients, thus, enforcing data confidentiality while hiding the recipient set. Furthermore, this solution is implemented on top of the Scramble Firefox extension [6], requiring a relatively small overhead.

The remainder of this paper is organized as follows. Section 2 gives a brief overview of the cryptographic background. Next, Section 3 presents the model followed by the description of the suggested solution in Section 4. Section 5 describes the implementation details, while Section 6 reviews related work. Finally, Section 7 summarizes and concludes the paper.

@&#BACKGROUND@&#

In this section we briefly overview the cryptographic tools and building blocks used in this paper. For ease of explanation we omit the definitions of the underlying cryptographic primitives. This section can, however, be skipped with no loss of continuity.

The concept of Identity Based Encryption (IBE) was introduced by Shamir [14], with the main idea of using any string as the public key. IBE requires no certificates as users can rely on publicly known identifiers such as an e-mail address or a telephone number, thus, reducing the complexity of establishing and managing a public key infrastructure. Boneh and Franklin proposed the first practical IBE using bilinear pairings [18], later extended by Gentry [19].

A generic IBE scheme is composed of four randomized algorithms:

                           
                              
                                 IBE.Setup(λ): On the input of a security parameter λ, outputs a master secret msk and the master public parameters mpk ← params.


                                 IBE.Extract(
                                    
                                       p
                                       a
                                       r
                                       a
                                       m
                                       s
                                       ,
                                       m
                                       s
                                       k
                                       
                                       ,
                                       id
                                    
                                 ): Takes the public parameters params, the master secret msk, and an 
                                    id
                                  and returns the private key 
                                    
                                       s
                                       
                                          k
                                          id
                                       
                                    
                                 .


                                 IBE.Encrypt(
                                    
                                       p
                                       a
                                       r
                                       a
                                       m
                                       s
                                       ,
                                       m
                                       ,
                                       id
                                    
                                 ): Returns the encryption 
                                    C
                                  of the message 
                                    m
                                  on the input of the params, the 
                                    
                                       id
                                       ,
                                    
                                  and the arbitrary length message 
                                    m
                                 .


                                 IBE.Decrypt(
                                    
                                       p
                                       a
                                       r
                                       a
                                       m
                                       s
                                       ,
                                       
                                          s
                                          
                                             k
                                             id
                                          
                                       
                                       ,
                                       C
                                    
                                 ): Reconstruct 
                                    m
                                  from 
                                    C
                                  by using the secret 
                                    
                                       s
                                       
                                          k
                                          id
                                       
                                    
                                  and the public parameters. Otherwise return ⊥.

The IBE.Setup and IBE.Extract algorithms are executed by a trusted Private Key Generator (PKG) server, whereas IBE.Encrypt and IBE.Decrypt are performed by two players, e.g., Alice and Bob. Consequently, key escrow is performed implicitly in the classic IBE scheme as the PKG holds the master secret key. The correctness property holds with overwhelming probability for all 
                           
                              
                                 s
                                 
                                    k
                                    id
                                 
                              
                              ←
                              IBE
                              .
                              Extract
                              
                                 (
                                 p
                                 a
                                 r
                                 a
                                 m
                                 s
                                 ,
                                 m
                                 s
                                 k
                                 
                                 ,
                                 
                                    id
                                    i
                                 
                                 )
                              
                              ,
                           
                         such that, 
                           
                              m
                              =
                              IBE
                              .
                              Decrypt
                              
                                 (
                                 
                                    s
                                    
                                       k
                                       id
                                    
                                 
                                 )
                              
                              ,
                              
                                 (
                                 C
                                 
                                 ←
                                 IBE
                                 .
                                 Encrypt
                                 
                                    (
                                    m
                                    ,
                                    
                                       id
                                       i
                                    
                                    )
                                 
                                 )
                              
                           
                        .

The notion of Broadcast encryption (BE) was introduced by Fiat and Naor [20], as a public-key generalization to a multi-user setting. A BE scheme allows a user to encrypt a message to a subset 
                           S
                         of users, such that, only the users in the set 
                           S
                         are able to decrypt the message. The computational overhead of the BE is generally bounded to the size of the ciphertext and the number of recipients. To overcome the overhead issue, the set 
                           S
                         of recipients is generally known. Barth et al. [21] and Libert et al. [22] extended the notion of BE and introduced the notion of Anonymous Broadcast Encryption (ANOBE) scheme, where the recipient set 
                           S
                         remains private even to the members in the set. Fazio and Perera [23] suggested the notion of outsider anonymous BE that represents a more relaxed notion of ANOBE. Thus, a generic broadcast encryption (BE) scheme consists of four randomized algorithms:

                           
                              
                                 BE.Setup(λ, n): On the input of a security parameter λ, generates the public parameters params ← (mpk, msk) of the system.


                                 BE.KeyGen(params, i): Returns the public and private key (pki, ski
                                 ) for each user i according to the params.


                                 BE.Encrypt(
                                    
                                       m
                                       p
                                       k
                                       
                                       ,
                                       m
                                       ,
                                       S
                                    
                                 ): Takes the set 
                                    
                                       S
                                       =
                                       {
                                       
                                          p
                                          
                                             k
                                             i
                                          
                                       
                                       …
                                       
                                          p
                                          
                                             k
                                             
                                                |
                                                S
                                                |
                                             
                                          
                                       
                                       }
                                       ,
                                    
                                  s.t., 
                                    
                                       S
                                       ⊂
                                       U
                                    
                                  along with the secret message 
                                    m
                                  and generates 
                                    C
                                 .


                                 BE.Decrypt(
                                    
                                       m
                                       p
                                       k
                                       
                                       ,
                                       
                                          s
                                          
                                             k
                                             i
                                          
                                       
                                       ,
                                       C
                                    
                                 ): Reconstructs 
                                    m
                                  from 
                                    C
                                  using the private key ski
                                  if the corresponding public key 
                                    
                                       
                                          p
                                          
                                             k
                                             i
                                          
                                       
                                       ∈
                                       S
                                    
                                 . Otherwise, return ⊥.

An outsider anonymous broadcast encryption (oANOBE) scheme [23] is a BE with the extra property of recipient privacy, in which the users in the recipient set 
                                 S
                               are kept anonymous towards any user not in 
                                 S
                              .

A fully anonymous broadcast encryption (ANOBE) scheme [21,22] is a BE with the extra property of recipient privacy, in which the users in the recipient set 
                                 S
                               are kept anonymous towards all users including other users in 
                                 S
                              .

Note that the pk can be represented by the 
                           id
                         string value from an Identity-Based scheme. Subsequently, the correctness property holds for all 
                           
                              id
                              ∈
                              S
                              ,
                           
                         such that, 
                           
                              
                                 s
                                 
                                    k
                                    id
                                 
                              
                              ←
                              BE
                              .
                              KeyGen
                              
                                 (
                                 p
                                 a
                                 r
                                 a
                                 m
                                 s
                                 )
                              
                              ,
                           
                         and 
                           
                              m
                              =
                              BE
                              .
                              Decrypt
                              (
                              
                                 s
                                 
                                    k
                                    id
                                 
                              
                              ,
                              
                                 (
                                 C
                                 ←
                                 BE
                                 .
                                 Encrypt
                                 
                                    (
                                    m
                                    ,
                                    S
                                    )
                                 
                                 )
                              
                           
                        .

Distributed Key Generation (DKG) was introduced by Pedersen [15] to allow a group of entities to collaboratively setup a secret sharing environment over a public channel. Secret sharing was introduced by Shamir [24] and consists of dividing a secret 
                           k
                         into n shares among n entities, such that, only a subset of size greater than or equal to a threshold t can reconstruct 
                           
                              k
                              ,
                           
                         where t ≥ n. In practice, a random secret 
                           k
                         is generated along with a polynomial f(x) of degree 
                           
                              t
                              −
                              1
                           
                         such that 
                           
                              f
                              (
                              0
                              )
                              =
                              k
                              ,
                           
                         where the shares si
                         are represented by different points on the polynomial. Any entity with t or more shares can reconstruct f(x) using Lagrange interpolation, and subsequently find 
                           k
                        . Chor et al. [16] suggested Verifiable Secret Sharing (VSS) scheme to allow anyone to verify that the right shares are used. The scheme was later extended by Feldman [25] and Pedersen [15].

For multiple parties to jointly generate a shared secret 
                           
                              k
                              ,
                           
                         all entities are required to participate in a DKG scheme. Each entity i involved generates a different 
                           
                              k
                              i
                           
                         and fi
                        (x), distributing their own share and verifying all other shares sij
                        . Hence, a generic DKG does not require a trusted party, as the master secret is computed as the aggregation of all the polynomials and can only be retrieved by joining t shares. A generic DKG protocol consists of two phases:

                           
                              
                                 DKG.Setup(t, n): Every entity i generates a random secret 
                                    
                                       k
                                       i
                                    
                                  and computes a polynomial of degree 
                                    
                                       t
                                       −
                                       1
                                    
                                 . The entity i Distributes a valid share sij
                                  over all the other j entities, along with the commitment to the share. Each entity j verifies the shares and computes the new share 
                                    
                                       
                                          s
                                          j
                                       
                                       =
                                       
                                          ∑
                                          i
                                       
                                       
                                          s
                                          
                                             i
                                             j
                                          
                                       
                                    
                                 . The master secret is unknown by each party, and composed by the origin point on the sum of all polynomials fi
                                 (x).


                                 DKG.Reconstruct(t): Each entity i broadcasts its share si
                                 , and with t ≤ n shares, one can reconstruct the master secret s.

The DKG protocol is secure assuming that no adversary is able to corrupt t or more parties. However, the uniformity of a key generated using the Pedersen DKG [15] cannot be guaranteed against a rushing adversary, i.e., adversaries contribute last in each run of the protocol [26]. Despite the biased distribution of the public key, this issue can be mitigated by increasing the security parameter [27].

We consider a user u to be a member of one or several OSNs, and to be connected with other users in the same OSN by a friendship relationship [28]. Inherently, u aims to interact and share information 
                        m
                      with other users in the same OSN. Each user holds a public and private key-pair, the public key is represented by the user 
                        
                           id
                           ,
                        
                      whereas the private key is given by an Identity-Based server. The latter is composed of multiple PKG servers. Each user can be registered in multiple OSNs accumulating different 
                        id
                     s, and thus different public keys. We assume the authentication between users and identity servers is performed under an authenticated channel, such as TLS, and uses a token similar to open id, such as, Facebook OAuth. For a stronger adversarial model these providers should operate under different jurisdictions to avoid coercion from the government to reveal their shares, for instance, Twitter (US), Spotify (Sweden/UK), Shazam (UK) or SoundCloud (Germany), Privalia (Spain). Nevertheless, an analysis of the security provided by a trans-jurisdictional distribution is beyond the scope of this paper.

We model our OSN private sharing scheme (OSN-PS) as a generalization of a BE scheme using IBE with multiple PKGs, aiming at sharing private information on current popular OSNs.

                           Definition 3
                           OSN-PS


                           For the universe of users 
                                 
                                    U
                                    =
                                    {
                                    
                                       id
                                       0
                                    
                                    ,
                                    …
                                    ,
                                    
                                       id
                                       N
                                    
                                    }
                                 
                               in a OSN, and a list of available 
                                 
                                    Γ
                                    =
                                    {
                                    
                                       PKG
                                       0
                                    
                                    ,
                                    …
                                    ,
                                    
                                       PKG
                                       n
                                    
                                    }
                                 
                              . Then, a OSN private sharing scheme (OSN-PS) Π is composed by four randomized algorithms: Π ← {Setup, KeyGen, Publish, Retrieve}.

                                 
                                    
                                       Π
                                       .Setup(λ, t, n): On the input of a security parameter λ, the threshold t and the number of PKGs n, generates the public parameters params ← (mpk, msk) of the system.


                                       Π
                                       .KeyGen(
                                          
                                             p
                                             a
                                             r
                                             a
                                             m
                                             s
                                             ,
                                             Ψ
                                             ,
                                             
                                                id
                                                i
                                             
                                          
                                       ) Returns the private key 
                                          
                                             s
                                             
                                                k
                                                
                                                   id
                                                   i
                                                
                                             
                                          
                                        for the user identity 
                                          
                                             id
                                             i
                                          
                                        according to the params and using a subset Ψ ⊆ Γ, s.t., |Ψ| ≥ t.


                                       Π
                                       .Publish(
                                          
                                             p
                                             a
                                             r
                                             a
                                             m
                                             s
                                             ,
                                             m
                                             ,
                                             S
                                          
                                       ): Takes a subset 
                                          
                                             S
                                             ,
                                          
                                        s.t., 
                                          
                                             S
                                             ⊂
                                             U
                                          
                                        along with the secret message 
                                          m
                                        and generates 
                                          C
                                       .


                                       Π
                                       .Retrieve(
                                          
                                             m
                                             p
                                             k
                                             
                                             ,
                                             
                                                s
                                                
                                                   k
                                                   id
                                                
                                             
                                             ,
                                             C
                                          
                                       ): Reconstructs 
                                          m
                                        from 
                                          C
                                        using the private key 
                                          
                                             s
                                             
                                                k
                                                id
                                             
                                          
                                        if 
                                          
                                             
                                                id
                                                i
                                             
                                             ∈
                                             S
                                          
                                       . Otherwise, return ⊥.

We consider an adversary to be any entity attempting to passively access the shared information 
                           m
                         by monitoring the OSN, such as the communication sharing channel; with no motivational incentive to tamper with the content. This can be any curious user in the OSN, the OSN provider or even a government agency [3]. Such adversaries should not learn the content of the message and the identity of members in the recipient set 
                           
                              S
                              ,
                           
                         otherwise we consider the adversary breaks both confidentiality and recipient anonymity [21].


                        – Confidentiality. The confidentiality property holds if the OSN PS-scheme achieves ciphertext indistinguishability. In particular, if the adversary 
                           A
                         does not win the following game between the Challenger 
                           Ch
                         with a non-negligible probability. This is similar to the confidentiality modeled by Günther et al. [13]. The confidentiality property holds if the OSN PS-scheme achieves ciphertext indistinguishability. In particular, if the adversary 
                           A
                         does not win the following game between the Challenger 
                           Ch
                         with high probability. This is similar to the confidentiality modeled by Günther et al. [13].

                           Game 1
                           OSN-PS Confidentiality


                           Let Π ← {Setup, KeyGen, Publish, Retrieve} be a OSN PS-scheme, 
                                 A
                               a probabilistic polynomial time (PPT) adversary, and 
                                 Ch
                               the challenger. We say that Π is (IND-CCA) secure if 
                                 A
                               wins the below game with 
                                 Ch
                               with negligible probability.

                                 
                                    
                                       Init:
                                       
                                          Ch
                                        runs 
                                          
                                             Setup
                                             (
                                             λ
                                             )
                                             ,
                                          
                                        and gives 
                                          A
                                        the resulting params.


                                       Setup:
                                       
                                          Ch
                                        generates keys for each potential recipient 
                                          
                                             i
                                             ∈
                                             S
                                             ,
                                          
                                        running 
                                          
                                             
                                                s
                                                
                                                   k
                                                   i
                                                
                                             
                                             ←
                                             KeyGen
                                             
                                                (
                                                params
                                                ,
                                                
                                                   u
                                                   i
                                                
                                                )
                                             
                                             ,
                                          
                                        and sends each pki
                                        for 
                                          
                                             i
                                             ∈
                                             S
                                          
                                        to the 
                                          A
                                       .


                                       Phase 1: The 
                                          A
                                        adaptively performs queries to the 
                                          
                                             Retrieve
                                             (
                                             C
                                             ,
                                             
                                                s
                                                k
                                             
                                             )
                                          
                                        oracle.


                                       Challenge:
                                       
                                          A
                                        sends to the 
                                          Ch
                                        two different messages 
                                          
                                             (
                                             
                                                m
                                                0
                                             
                                             ,
                                             
                                                m
                                                1
                                             
                                             )
                                             ,
                                          
                                        s.t., 
                                          
                                             
                                                |
                                             
                                             
                                                m
                                                0
                                             
                                             
                                                |
                                                =
                                                |
                                             
                                             
                                                m
                                                1
                                             
                                             
                                                |
                                             
                                          
                                       . 
                                          Ch
                                        picks a random bit b ∈ {0, 1}, runs 
                                          
                                             
                                                
                                                   C
                                                
                                                ′
                                             
                                             ←
                                             Publish
                                             
                                                (
                                                p
                                                a
                                                r
                                                a
                                                m
                                                s
                                                ,
                                                S
                                                ,
                                                
                                                   m
                                                   b
                                                
                                                )
                                             
                                             ,
                                          
                                        and sends 
                                          
                                             
                                                C
                                             
                                             ′
                                          
                                        to 
                                          A
                                       .


                                       Phase 2:
                                       
                                          A
                                        adaptively issues additional decryption queries 
                                          
                                             Retrieve
                                             (
                                             
                                                
                                                   C
                                                
                                                ′
                                             
                                             ,
                                             
                                                s
                                                k
                                             
                                             )
                                             ,
                                          
                                        such that, 
                                          
                                             C
                                             
                                             ≠
                                             
                                                
                                                   C
                                                
                                                ′
                                             
                                          
                                       .


                                       Guess:
                                       
                                          A
                                        outputs a guess b′ ∈ {0, 1} and wins if 
                                          
                                             b
                                             =
                                             
                                                b
                                                ′
                                             
                                          
                                       .

The 
                                 A
                               advantage to win the above game is defined as:

                                 
                                    
                                       
                                          
                                             Adv
                                             
                                                A
                                                ,
                                                Π
                                             
                                             
                                                I
                                                n
                                                d
                                             
                                          
                                          =
                                          
                                             |
                                             
                                                P
                                                r
                                             
                                             
                                                [
                                                b
                                                =
                                                
                                                   b
                                                   ′
                                                
                                                ]
                                             
                                             −
                                             
                                                1
                                                2
                                             
                                             |
                                          
                                       
                                    
                                 
                              
                           


                        – Recipient set anonymity. The high-level idea behind recipient set privacy is as follows. For any two recipient sets 
                           
                              S
                              0
                           
                         and 
                           
                              S
                              1
                           
                         an adversary 
                           A
                         cannot distinguish between a ciphertext intended for the recipient set 
                           
                              
                                 S
                                 0
                              
                              ,
                           
                         and a ciphertext intended for the recipient set 
                           
                              
                                 S
                                 1
                              
                              ,
                           
                         given that 
                           A
                         does not possess the secret key of any user in 
                           
                              
                                 S
                                 0
                              
                              ∪
                              
                                 S
                                 1
                              
                           
                        .

                           Game 2
                           OSN-PS Recipient Set Anonymity


                           A OSN-PS scheme Π ← {Setup, KeyGen, Publish, Retrieve} is recipient anonymous (ANOPS) if a probabilistic polynomial time (PPT) adversary 
                                 A
                               wins the following game with negligible probability:

                                 
                                    
                                       Init:
                                       
                                          Ch
                                        runs Setup(λ), and gives 
                                          A
                                        the resulting params. 
                                          A
                                        outputs 
                                          
                                             
                                                S
                                                0
                                             
                                             ,
                                             
                                                S
                                                1
                                             
                                             ∈
                                             U
                                             ,
                                          
                                        such that, 
                                          
                                             
                                                |
                                             
                                             
                                                S
                                                0
                                             
                                             
                                                |
                                                =
                                                |
                                             
                                             
                                                S
                                                1
                                             
                                             
                                                |
                                                ,
                                             
                                          
                                        and 
                                          
                                             (
                                             
                                                S
                                                0
                                             
                                             △
                                             
                                                S
                                                1
                                             
                                             )
                                             =
                                             ∅
                                          
                                       .
                                          1
                                       
                                       
                                          1
                                          
                                             
                                                
                                                   
                                                      S
                                                      0
                                                   
                                                   △
                                                   
                                                      S
                                                      1
                                                   
                                                
                                              represents the symmetric difference, such that: 
                                                
                                                   
                                                      S
                                                      0
                                                   
                                                   △
                                                   
                                                      S
                                                      1
                                                   
                                                   =
                                                   
                                                      {
                                                      x
                                                      :
                                                      
                                                         (
                                                         x
                                                         ∈
                                                         
                                                            S
                                                            0
                                                         
                                                         )
                                                      
                                                      ⊕
                                                      
                                                         (
                                                         x
                                                         ∈
                                                         
                                                            S
                                                            1
                                                         
                                                         )
                                                      
                                                      }
                                                   
                                                
                                             
                                          
                                       
                                    


                                       Setup:
                                       
                                          Ch
                                        generates keys for each potential recipient i, running 
                                          
                                             
                                                s
                                                
                                                   k
                                                   i
                                                
                                             
                                             ←
                                             KeyGen
                                             
                                                (
                                                params
                                                ,
                                                
                                                   u
                                                   i
                                                
                                                )
                                             
                                             ,
                                          
                                        and sends each pki
                                        for 
                                          
                                             i
                                             ∈
                                             
                                                S
                                                0
                                             
                                             ∩
                                             
                                                S
                                                1
                                             
                                          
                                        and ski
                                        for 
                                          
                                             i
                                             ∈
                                             
                                                S
                                                0
                                             
                                             ∪
                                             
                                                S
                                                1
                                             
                                          
                                        to the 
                                          A
                                       .


                                       Phase 1:
                                       
                                          A
                                        adaptively issues decryption queries 
                                          
                                             
                                                q
                                                1
                                             
                                             =
                                             
                                                (
                                                i
                                                ,
                                                C
                                                )
                                             
                                             ,
                                          
                                        and 
                                          Ch
                                        returns 
                                          
                                             Retrieve
                                             (
                                             p
                                             a
                                             r
                                             a
                                             m
                                             s
                                             ,
                                             
                                                s
                                                
                                                   k
                                                   i
                                                
                                             
                                             ,
                                             C
                                             )
                                          
                                       .


                                       Challenge:
                                       
                                          A
                                        gives the 
                                          Ch
                                        a message 
                                          m
                                       . The 
                                          Ch
                                        picks a random bit b ∈ {0, 1} and runs 
                                          
                                             
                                                
                                                   C
                                                
                                                ′
                                             
                                             ←
                                             Publish
                                             
                                                (
                                                p
                                                a
                                                r
                                                a
                                                m
                                                s
                                                ,
                                                
                                                   {
                                                   
                                                      u
                                                      i
                                                   
                                                   |
                                                   
                                                      u
                                                      i
                                                   
                                                   ∈
                                                   
                                                      S
                                                      b
                                                   
                                                   }
                                                
                                                ,
                                                m
                                                )
                                             
                                             ,
                                          
                                        and sends 
                                          
                                             
                                                C
                                             
                                             ′
                                          
                                        to 
                                          A
                                       .


                                       Phase 2:
                                       
                                          A
                                        adaptively issues additional decryption queries 
                                          
                                             
                                                q
                                                2
                                             
                                             =
                                             
                                                (
                                                i
                                                ,
                                                C
                                                )
                                             
                                             ,
                                          
                                        such that 
                                          
                                             C
                                             
                                             ≠
                                             
                                                
                                                   C
                                                
                                                ′
                                             
                                          
                                       .


                                       Guess:
                                       
                                          A
                                        outputs a guess b′ ∈ {0, 1} and wins if 
                                          
                                             b
                                             =
                                             
                                                b
                                                ′
                                             
                                          
                                       .

The advantage of 
                                 A
                               of winning the above game is defined as:

                                 
                                    
                                       
                                          
                                             Adv
                                             
                                                A
                                                ,
                                                Π
                                             
                                             ANOPS
                                          
                                          =
                                          
                                             |
                                             
                                                P
                                                r
                                             
                                             
                                                [
                                                b
                                                =
                                                
                                                   b
                                                   ′
                                                
                                                ]
                                             
                                             −
                                             
                                                1
                                                2
                                             
                                             |
                                          
                                       
                                    
                                 
                              
                           

In addition, we assume that such an adversary cannot compromise more than t identity servers (PKGs) or control the user-computing environment. Any malicious recipient who copy or forwards shared content is considered to break the social contract. Protection against traffic analysis or timing attacks is beyond the scope of this protocol.

We aim to protect OSN users privacy by ensuring confidentiality, data integrity and recipient anonymity [21]. In this way we allow users to enforce access control without having to rely on the privacy preferences offered by the OSN. At the same time, we aim at limited modifications to the OSN environment. In particular, we require as little effort as possible, and reduced prior knowledge from users in order to achieve a user-friendly scheme as defined by Balsa et al. [12]. In contrast to previous solutions, users are allowed to be in the recipient set by default as their public key is represented by the OSN identifier. Our main goals are summarized as follows:

                           
                              
                                 – Content privacy. The content should be confidentiality protected from any unauthorized entities.


                                 – Recipients privacy. The recipients of the messages should be hidden from any unauthorized entities.


                                 – Ease of key management. The original OSN environment should not be altered since some OSN providers are probably not willing to support a more confidential architecture because it could hurt their business model.


                                 – Immediate deployment. No additional changes to the OSN design and infrastructure of current OSNs.


                                 – Direct opt-In. Registration to third-party key architectures or key exchange should be required to enable the system. In fact, users should be able to receive confidential messages upon registration to any OSN.

In this section, we describe our OSN outsider-anonymous private sharing scheme (oANOPS). The proposed solution is based on the IBE scheme from Boneh et al. [18] and a relaxed version of the broadcast scheme from Libert et al. [22]. The system relies on a DKG protocol as described by Pedersen [15] to bootstrap multiple PKGs. In addition, we converted the schemes from using Type 1 (i.e., 
                        
                           
                              G
                              1
                           
                           =
                           
                              G
                              2
                           
                        
                     ) to Type 3 (i.e., 
                        
                           
                              G
                              1
                           
                           ≠
                           
                              G
                              2
                           
                        
                     ) pairings for efficiency [29] and because Type 1 pairings are no longer secure according Joux in [30].

The scheme allows users to publish any content while enforcing access rules by selecting the recipient set per content. Only authorized users can run the Retrieve and output access the content. We acknowledge that we do not support revocation, however, we assume that it is hard to protect content from malicious authorized recipients, who save, store, and broadcast the content.

Let λ be the security parameter for a security level of l bits, and 
                           S
                         the set of desired recipients ui
                         with corresponding 
                           
                              
                                 id
                                 i
                              
                              ,
                           
                         such that 
                           
                              S
                              =
                              {
                              
                                 u
                                 1
                              
                              ,
                              .
                              .
                              ,
                              
                                 u
                                 η
                              
                              }
                           
                         where 
                           
                              η
                              =
                              |
                              S
                              |
                           
                        . Let 
                           G
                         be a generator that satisfies the Bilinear Diffie–Helman (BDH) assumption, and 
                           
                              e
                              :
                              
                                 G
                                 1
                              
                              ×
                              
                                 G
                                 2
                              
                              →
                              
                                 G
                                 T
                              
                           
                         the bilinear map such that 
                           
                              e
                              
                                 (
                                 a
                                 P
                                 ,
                                 b
                                 Q
                                 )
                              
                              =
                              e
                              
                                 
                                    (
                                    P
                                    ,
                                    Q
                                    )
                                 
                                 
                                    a
                                    b
                                 
                              
                           
                         for 
                           
                              P
                              ∈
                              
                                 G
                                 1
                              
                              ,
                              Q
                              ∈
                              
                                 G
                                 2
                              
                           
                         and 
                           
                              a
                              ,
                              b
                              ∈
                              
                                 Z
                                 q
                              
                           
                         as in [18] . In addition, let 
                           
                              
                                 〈
                                 C
                                 ,
                                 T
                                 〉
                              
                              ←
                              
                                 
                                    E
                                    k
                                 
                                 
                                    (
                                    M
                                    )
                                 
                              
                           
                         be any secure authenticated symmetric encryption that takes as input the plaintext M ∈ {0, 1}* and a key 
                           
                              K
                              ∈
                              
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 *
                              
                              ,
                           
                         and generates ciphertext 
                           
                              C
                              ∈
                              
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 *
                              
                           
                         and authentication tag 
                           
                              T
                              ∈
                              
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 τ
                              
                           
                         as output [31], such that, 
                           
                              E
                              :
                              M
                              ×
                              K
                              →
                              {
                              C
                              ,
                              T
                              }
                           
                        . Similarly, 
                           
                              
                                 〈
                                 M
                                 ,
                                 T
                                 〉
                              
                              ←
                              
                                 
                                    D
                                    k
                                 
                                 
                                    (
                                    C
                                    )
                                 
                              
                           
                         be the valid authenticated decryption that takes ciphertext 
                           C
                         as input and computes the plaintext M along with an authentication tag 
                           T
                        . Thus, our oANOPS scheme Π for OSNs is composed by four randomized algorithms: Π ← {Setup, KeyGen, Publish, Retrieve}.

                           
                              
                                 Setup (λ, t, n): Outputs the public params of the system with respect to the security parameter λ, a list of available PKGs 
                                    
                                       Γ
                                       =
                                       {
                                       
                                          PKG
                                          0
                                       
                                       ,
                                       …
                                       ,
                                       
                                          PKG
                                          n
                                       
                                       }
                                       ,
                                    
                                  such that 
                                    
                                       |
                                       Γ
                                       |
                                       =
                                       n
                                       ,
                                    
                                  for the threshold t.

                                    
                                       1.
                                       On input of security parameter λ generate a prime q, two groups 
                                             
                                                
                                                   G
                                                   1
                                                
                                                ,
                                                
                                                   G
                                                   2
                                                
                                             
                                           of order q satisfying the BDH assumption, and an admissible bilinear map 
                                             
                                                e
                                                :
                                                
                                                   G
                                                   1
                                                
                                                ×
                                                
                                                   G
                                                   2
                                                
                                                →
                                                
                                                   G
                                                   T
                                                
                                             
                                          . Choose random generators 
                                             
                                                P
                                                ∈
                                                
                                                   G
                                                   1
                                                
                                                ,
                                             
                                           and 
                                             
                                                Q
                                                ∈
                                                
                                                   G
                                                   2
                                                
                                             
                                          .

Choose the hash functions 
                                             
                                                
                                                   H
                                                   1
                                                
                                                :
                                                
                                                   
                                                      {
                                                      0
                                                      ,
                                                      1
                                                      }
                                                   
                                                   *
                                                
                                                →
                                                
                                                   G
                                                   1
                                                
                                                ,
                                             
                                          
                                          
                                             
                                                
                                                   H
                                                   2
                                                
                                                :
                                                
                                                   G
                                                   T
                                                
                                                →
                                                
                                                   
                                                      {
                                                      0
                                                      ,
                                                      1
                                                      
                                                      }
                                                   
                                                   l
                                                
                                                ,
                                             
                                          
                                          
                                             
                                                
                                                   H
                                                   3
                                                
                                                :
                                                
                                                   
                                                      {
                                                      0
                                                      ,
                                                      1
                                                      
                                                      }
                                                   
                                                   l
                                                
                                                ×
                                                
                                                   
                                                      {
                                                      0
                                                      ,
                                                      1
                                                      
                                                      }
                                                   
                                                   l
                                                
                                                →
                                                
                                                   Z
                                                   q
                                                   *
                                                
                                                ,
                                             
                                           and 
                                             
                                                
                                                   H
                                                   4
                                                
                                                :
                                                
                                                   
                                                      {
                                                      0
                                                      ,
                                                      1
                                                      
                                                      }
                                                   
                                                   l
                                                
                                                →
                                                
                                                   
                                                      {
                                                      0
                                                      ,
                                                      1
                                                      
                                                      }
                                                   
                                                   l
                                                
                                                ,
                                             
                                           modeled as random oracles.

Each 
                                             
                                                
                                                   PKG
                                                   j
                                                
                                                ∈
                                                Γ
                                             
                                           generates 
                                             
                                                n
                                                −
                                                1
                                             
                                           shares σjv
                                           of a Feldman VSS scheme by executing Pedersen DKG, and redistributing the 
                                             
                                                n
                                                −
                                                1
                                             
                                           shares σjv
                                           with the other v PKGs.


                                          
                                             
                                                PKG
                                                j
                                             
                                           publishes 
                                             
                                                
                                                   P
                                                   
                                                      p
                                                      u
                                                      b
                                                   
                                                   
                                                      (
                                                      j
                                                      )
                                                   
                                                
                                                =
                                                
                                                   s
                                                   j
                                                
                                                P
                                                ,
                                             
                                           s.t., 
                                             
                                                
                                                   s
                                                   j
                                                
                                                =
                                                
                                                   ∑
                                                   
                                                      v
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   σ
                                                   
                                                      j
                                                      v
                                                   
                                                
                                             
                                          .

Select a semantically secure authenticated 
                                             
                                                〈
                                                C
                                                ∥
                                                T
                                                〉
                                                ←
                                                
                                                   E
                                                   (
                                                   ·
                                                   )
                                                
                                                ,
                                                
                                                   D
                                                   (
                                                   ·
                                                   )
                                                
                                                ,
                                             
                                           so that 
                                             C
                                           represents the encrypted output and 
                                             T
                                           the authenticity tag.

The master secret key 
                                    
                                       m
                                       s
                                       k
                                       
                                       =
                                       
                                          ∑
                                          
                                             j
                                             ∈
                                             Ψ
                                          
                                       
                                       
                                          b
                                          j
                                       
                                       
                                          s
                                          j
                                       
                                    
                                  for 
                                    
                                       
                                          b
                                          j
                                       
                                       =
                                       
                                          ∏
                                          
                                             z
                                             ∈
                                             Ψ
                                          
                                       
                                       
                                          z
                                          
                                             z
                                             −
                                             j
                                          
                                       
                                    
                                  cannot be retrieved unless a subset Ψ ⊆ Γ is of size at least t, s.t., |Ψ| ≥ t. The following parameters are published publicly:

                                    
                                       
                                          
                                             p
                                             a
                                             r
                                             a
                                             m
                                             s
                                             =
                                             {
                                             p
                                             ,
                                             q
                                             ,
                                             
                                                G
                                                1
                                             
                                             ,
                                             
                                                G
                                                2
                                             
                                             ,
                                             e
                                             ,
                                             P
                                             ,
                                             Q
                                             ,
                                             
                                                H
                                                1
                                             
                                             ,
                                             
                                                H
                                                2
                                             
                                             ,
                                             
                                                H
                                                3
                                             
                                             ,
                                             
                                                H
                                                4
                                             
                                             ,
                                             t
                                             ,
                                             n
                                             ,
                                             
                                                P
                                                
                                                   p
                                                   u
                                                   b
                                                
                                                
                                                   (
                                                   0
                                                   )
                                                
                                             
                                             ,
                                             …
                                             ,
                                             
                                                P
                                                
                                                   p
                                                   u
                                                   b
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                             
                                             }
                                          
                                       
                                    
                                 
                              


                                 KeyGen(
                                    
                                       Ψ
                                       =
                                       
                                          {
                                          
                                             PKG
                                             0
                                          
                                          ,
                                          …
                                          ,
                                          
                                             PKG
                                             t
                                          
                                          }
                                       
                                       ,
                                       
                                          id
                                          i
                                       
                                    
                                 ): On input of a user 
                                    
                                       id
                                       i
                                    
                                  the subset Ψ of size t of PKG servers, generates a valid private key for 
                                    
                                       id
                                       i
                                    
                                 .

                                    
                                       1.
                                       User with identifier 
                                             
                                                
                                                   id
                                                   i
                                                
                                                ,
                                             
                                           authenticates to a subset Ψ, s.t., |Ψ| ≥ t, or all PKGs and sends 
                                             
                                                id
                                                i
                                             
                                          .

Each 
                                             
                                                
                                                   PKG
                                                   j
                                                
                                                ∈
                                                Ψ
                                             
                                           determines the respective secret share sj
                                           by computing 
                                             
                                                
                                                   Q
                                                   
                                                      id
                                                      i
                                                   
                                                
                                                =
                                                
                                                   H
                                                   1
                                                
                                                
                                                   (
                                                   
                                                      id
                                                      i
                                                   
                                                   )
                                                
                                                ,
                                             
                                           and 
                                             
                                                
                                                   Q
                                                   
                                                      p
                                                      r
                                                      i
                                                      v
                                                      ,
                                                      
                                                         id
                                                         i
                                                      
                                                   
                                                   
                                                      (
                                                      j
                                                      )
                                                   
                                                
                                                =
                                                
                                                   s
                                                   j
                                                
                                                
                                                   Q
                                                   
                                                      id
                                                      i
                                                   
                                                
                                             
                                          .

The user 
                                             
                                                id
                                                i
                                             
                                           computes the shared public parameter Ppub
                                           using the Lagrange coefficients bj
                                           as follows:

                                             
                                                
                                                   
                                                      
                                                         P
                                                         
                                                            p
                                                            u
                                                            b
                                                         
                                                      
                                                      =
                                                      
                                                         ∑
                                                         
                                                            j
                                                            ∈
                                                            Ψ
                                                         
                                                      
                                                      
                                                         b
                                                         j
                                                      
                                                      
                                                         P
                                                         
                                                            p
                                                            u
                                                            b
                                                         
                                                         
                                                            (
                                                            j
                                                            )
                                                         
                                                      
                                                      
                                                      for
                                                      
                                                      
                                                         b
                                                         j
                                                      
                                                      =
                                                      
                                                         ∏
                                                         
                                                            z
                                                            ∈
                                                            Ψ
                                                         
                                                      
                                                      
                                                         z
                                                         
                                                            z
                                                            −
                                                            j
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

All PKGs in Ψ return 
                                             
                                                Q
                                                
                                                   p
                                                   r
                                                   i
                                                   v
                                                   ,
                                                   
                                                      id
                                                      i
                                                   
                                                
                                                
                                                   (
                                                   j
                                                   )
                                                
                                             
                                           to the corresponding user 
                                             
                                                id
                                                i
                                             
                                           over a secure channel.

Each user verifies for each 
                                             
                                                Q
                                                
                                                   p
                                                   r
                                                   i
                                                   v
                                                   ,
                                                   
                                                      id
                                                      i
                                                   
                                                
                                                
                                                   (
                                                   j
                                                   )
                                                
                                             
                                           value whether,

                                             
                                                
                                                   
                                                      e
                                                      
                                                         (
                                                         
                                                            Q
                                                            
                                                               p
                                                               r
                                                               i
                                                               v
                                                               ,
                                                               
                                                                  id
                                                                  i
                                                               
                                                            
                                                            
                                                               (
                                                               j
                                                               )
                                                            
                                                         
                                                         ,
                                                         P
                                                         )
                                                      
                                                      
                                                         =
                                                         ?
                                                      
                                                      e
                                                      
                                                         (
                                                         
                                                            Q
                                                            
                                                               id
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            P
                                                            
                                                               p
                                                               u
                                                               b
                                                            
                                                            
                                                               (
                                                               j
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          Finally, the user with 
                                             
                                                id
                                                i
                                             
                                           calculates the associated private key 
                                             
                                                s
                                                
                                                   k
                                                   
                                                      id
                                                      i
                                                   
                                                
                                             
                                           using the Lagrange coefficients bj
                                           as follows:

                                             
                                                
                                                   
                                                      s
                                                      
                                                         k
                                                         
                                                            id
                                                            i
                                                         
                                                      
                                                      =
                                                      
                                                         ∑
                                                         
                                                            j
                                                            ∈
                                                            Ψ
                                                         
                                                      
                                                      
                                                         b
                                                         j
                                                      
                                                      
                                                         Q
                                                         
                                                            p
                                                            r
                                                            i
                                                            v
                                                            ,
                                                            
                                                               id
                                                               i
                                                            
                                                         
                                                         
                                                            (
                                                            j
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

In this way, no user nor 
                                    PKG
                                  learns the master key msk of the system. In fact, an adversary is required to corrupt at least t or more parties to reconstruct msk. This algorithm combines DKG.Reconstruct, IBE.Extract and BE.KeyGen algorithms.


                                 Publish(
                                    
                                       p
                                       a
                                       r
                                       a
                                       m
                                       s
                                       ,
                                       S
                                       ,
                                       m
                                    
                                 ): Takes the message 
                                    
                                       m
                                       ,
                                    
                                  the subset 
                                    S
                                  of size η and the public parameters params, output a broadcast message 
                                    C
                                 .

                                    
                                       1.
                                       Generate a random symmetric session key 
                                             
                                                k
                                                ←
                                                
                                                   
                                                      {
                                                      0
                                                      ,
                                                      1
                                                      }
                                                   
                                                   l
                                                
                                             
                                          .

Choose a random value ρ ∈ {0, 1}
                                             l
                                           and compute r as a hash of concatenated values 
                                             
                                                r
                                                =
                                                
                                                   
                                                      H
                                                      3
                                                   
                                                   
                                                      (
                                                      ρ
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                             
                                          
                                       

For each recipient 
                                             
                                                
                                                   id
                                                   i
                                                
                                                ∈
                                                S
                                                ,
                                             
                                           compute the ciphertext, running the IBE.Encrypt algorithm, as follows.

                                             
                                                
                                                   
                                                      
                                                         w
                                                         i
                                                      
                                                      =
                                                      ρ
                                                      ⊕
                                                      
                                                         H
                                                         2
                                                      
                                                      
                                                         (
                                                         
                                                            g
                                                            
                                                               
                                                                  id
                                                                  i
                                                               
                                                            
                                                            r
                                                         
                                                         )
                                                      
                                                      
                                                      where
                                                      
                                                      
                                                         g
                                                         
                                                            id
                                                            i
                                                         
                                                      
                                                      =
                                                      e
                                                      
                                                         (
                                                         
                                                            Q
                                                            
                                                               id
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            P
                                                            
                                                               p
                                                               u
                                                               b
                                                            
                                                         
                                                         )
                                                      
                                                      ∈
                                                      
                                                         G
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       

Let W be a random permuted concatenation of wi
                                          , 
                                             
                                                v
                                                ←
                                                k
                                                ⊕
                                                
                                                   
                                                      H
                                                      4
                                                   
                                                   
                                                      (
                                                      ρ
                                                      )
                                                   
                                                
                                                ,
                                             
                                           and U ← rP, then the authenticated data c
                                          1 is computed as,

                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                               1
                                                            
                                                         
                                                         
                                                            =
                                                         
                                                         
                                                            
                                                               
                                                                  {
                                                                  U
                                                                  ∥
                                                                  v
                                                                  ∥
                                                                  W
                                                                  }
                                                               
                                                               
                                                               
                                                               s.t.
                                                               
                                                               
                                                               W
                                                               =
                                                               
                                                                  {
                                                                  
                                                                     w
                                                                     1
                                                                  
                                                                  ∥
                                                                  
                                                                     w
                                                                     2
                                                                  
                                                                  ∥
                                                                  …
                                                                  ∥
                                                                  
                                                                     w
                                                                     
                                                                        |
                                                                        S
                                                                        |
                                                                     
                                                                  
                                                                  }
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Apply authenticated symmetric encryption on 
                                             
                                                M
                                                ,
                                             
                                           the concatenation of the intended recipient set 
                                             S
                                           and the plaintext message 
                                             
                                                m
                                                ,
                                             
                                           such that 
                                             
                                                M
                                                =
                                                (
                                                m
                                                ∥
                                                S
                                                )
                                             
                                          .

                                             
                                                
                                                   
                                                      
                                                         〈
                                                         
                                                            c
                                                            2
                                                         
                                                         ,
                                                         T
                                                         〉
                                                      
                                                      ←
                                                      
                                                         
                                                            E
                                                            k
                                                         
                                                         
                                                            (
                                                            M
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Publish the result 
                                             
                                                C
                                                
                                                =
                                                {
                                                
                                                   c
                                                   1
                                                
                                                ∥
                                                
                                                   c
                                                   2
                                                
                                                ∥
                                                T
                                                }
                                             
                                           on the OSN.


                                 Retrieve(
                                    
                                       p
                                       a
                                       r
                                       a
                                       m
                                       s
                                       ,
                                       
                                          s
                                          
                                             k
                                             id
                                          
                                       
                                       ,
                                       C
                                    
                                 ): on input of the broadcast message 
                                    C
                                  and the private key 
                                    
                                       s
                                       
                                          k
                                          id
                                       
                                    
                                  of user 
                                    
                                       
                                          id
                                          i
                                       
                                       ,
                                    
                                  reconstruct the plaintext message 
                                    m
                                 . This algorithm comprises the {IBE,BE}.Decrypt algorithms. Therefore, the user retrieves 
                                    C
                                  from the OSN, and for each wi
                                  ∈ W performs the following:

                                    
                                       1.
                                       Compute 
                                             
                                                
                                                   w
                                                   i
                                                
                                                ⊕
                                                
                                                   H
                                                   2
                                                
                                                
                                                   (
                                                   e
                                                   
                                                      (
                                                      
                                                         s
                                                         
                                                            k
                                                            id
                                                         
                                                      
                                                      ,
                                                      U
                                                      )
                                                   
                                                   )
                                                
                                                =
                                                ρ
                                             
                                           for 
                                             
                                                
                                                   s
                                                   
                                                      k
                                                      id
                                                   
                                                
                                                ,
                                             
                                           and 
                                             
                                                v
                                                ⊕
                                                
                                                   
                                                      H
                                                      4
                                                   
                                                   
                                                      (
                                                      ρ
                                                      )
                                                   
                                                
                                                =
                                                k
                                             
                                          
                                       

Set 
                                             
                                                r
                                                =
                                                
                                                   
                                                      H
                                                      3
                                                   
                                                   
                                                      (
                                                      ρ
                                                      ,
                                                      k
                                                      )
                                                   
                                                
                                             
                                          . Verify 
                                             
                                                U
                                                
                                                   =
                                                   ?
                                                
                                                r
                                                P
                                             
                                          . If the check fails, try next wi
                                          , and return to 1.

Retrieve 
                                             
                                                
                                                   〈
                                                   M
                                                   ,
                                                   
                                                      
                                                         T
                                                      
                                                      ′
                                                   
                                                   〉
                                                
                                                ←
                                                
                                                   
                                                      D
                                                      k
                                                   
                                                   
                                                      (
                                                      
                                                         c
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       

Verify whether 
                                             
                                                
                                                   
                                                      T
                                                   
                                                   ′
                                                
                                                
                                                   =
                                                   ?
                                                
                                                T
                                                ∈
                                                C
                                                ,
                                             
                                           and return 
                                             m
                                          . Otherwise return ⊥.


                        Correctness. The OSN oANOPS scheme is correct if for every member 
                           
                              
                                 id
                                 i
                              
                              ∈
                              S
                              ,
                           
                         s.t., 
                           
                              s
                              
                                 k
                                 
                                    id
                                    i
                                 
                              
                              ←
                           
                         
                        KeyGen({
                           
                              
                                 PKG
                                 0
                              
                              ,
                              …
                              ,
                              
                                 PKG
                                 t
                              
                           
                        }, 
                           
                              id
                              i
                           
                        ), then 
                           
                              m
                              =
                           
                         
                        Retrieve(
                           
                              p
                              a
                              r
                              a
                              m
                              s
                              ,
                              s
                              
                                 k
                                 
                                    id
                                    i
                                 
                              
                              ,
                           
                         
                        Publish(
                           
                              p
                              a
                              r
                              a
                              m
                              s
                              ,
                              S
                              ,
                              m
                           
                        )).

                           
                              Let 
                                    
                                       
                                          w
                                          i
                                       
                                       =
                                       ρ
                                       ⊕
                                       
                                          
                                             H
                                             2
                                          
                                          
                                             (
                                             
                                                g
                                                i
                                                r
                                             
                                             )
                                          
                                       
                                       ,
                                    
                                  where 
                                    
                                       
                                          g
                                          i
                                          r
                                       
                                       =
                                       e
                                       
                                          
                                             (
                                             
                                                Q
                                                id
                                             
                                             ,
                                             
                                                P
                                                
                                                   p
                                                   u
                                                   b
                                                
                                             
                                             )
                                          
                                          r
                                       
                                       ∈
                                       
                                          G
                                          T
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          P
                                          
                                             p
                                             u
                                             b
                                          
                                       
                                       =
                                       
                                          ∑
                                          
                                             j
                                             ∈
                                             Ψ
                                          
                                       
                                       
                                          b
                                          j
                                       
                                       
                                          P
                                          
                                             p
                                             u
                                             b
                                          
                                          
                                             (
                                             j
                                             )
                                          
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                          Q
                                          
                                             p
                                             r
                                             i
                                             v
                                             ,
                                             
                                                id
                                                i
                                             
                                          
                                          
                                             (
                                             j
                                             )
                                          
                                       
                                       =
                                       
                                          s
                                          i
                                       
                                       
                                          Q
                                          
                                             id
                                             i
                                          
                                       
                                       ,
                                    
                                  and 
                                    
                                       
                                          s
                                          
                                             k
                                             id
                                          
                                       
                                       =
                                       
                                          ∑
                                          
                                             j
                                             ∈
                                             Ψ
                                          
                                       
                                       
                                          (
                                          
                                             b
                                             j
                                          
                                          
                                             s
                                             i
                                          
                                          
                                             Q
                                             
                                                id
                                                i
                                             
                                          
                                          )
                                       
                                    
                                 . Then:

                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         w
                                                         i
                                                      
                                                      ⊕
                                                      
                                                         H
                                                         2
                                                      
                                                      
                                                         (
                                                         e
                                                         
                                                            (
                                                            
                                                               s
                                                               
                                                                  k
                                                                  id
                                                               
                                                            
                                                            ,
                                                            U
                                                            )
                                                         
                                                         )
                                                      
                                                   
                                                
                                                
                                                   
                                                      =
                                                      ρ
                                                      ⊕
                                                      
                                                         
                                                            H
                                                            2
                                                         
                                                         
                                                            (
                                                            
                                                               g
                                                               i
                                                               r
                                                            
                                                            )
                                                         
                                                      
                                                      ⊕
                                                      
                                                         H
                                                         2
                                                      
                                                      
                                                         (
                                                         e
                                                         
                                                            (
                                                            
                                                               s
                                                               
                                                                  k
                                                                  id
                                                               
                                                            
                                                            ,
                                                            r
                                                            P
                                                            )
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                
                                                   
                                                      =
                                                      ρ
                                                      ⊕
                                                      
                                                         H
                                                         2
                                                      
                                                      
                                                         (
                                                         e
                                                         
                                                            
                                                               (
                                                               
                                                                  Q
                                                                  
                                                                     id
                                                                     i
                                                                  
                                                               
                                                               ,
                                                               
                                                                  P
                                                                  
                                                                     p
                                                                     u
                                                                     b
                                                                  
                                                               
                                                               )
                                                            
                                                            r
                                                         
                                                         )
                                                      
                                                      ⊕
                                                      
                                                         H
                                                         2
                                                      
                                                      
                                                         (
                                                         e
                                                         
                                                            (
                                                            
                                                               s
                                                               
                                                                  k
                                                                  id
                                                               
                                                            
                                                            ,
                                                            r
                                                            P
                                                            )
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                
                                                   
                                                      =
                                                      ρ
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

Let 
                                    
                                       v
                                       ⊕
                                       
                                          
                                             H
                                             4
                                          
                                          
                                             (
                                             ρ
                                             )
                                          
                                       
                                       =
                                       k
                                       ⊕
                                       
                                          
                                             H
                                             4
                                          
                                          
                                             (
                                             ρ
                                             )
                                          
                                       
                                       ⊕
                                       
                                          
                                             H
                                             4
                                          
                                          
                                             (
                                             ρ
                                             )
                                          
                                       
                                       =
                                       k
                                    
                                 .

Retrieve 
                                    
                                       M
                                       /
                                       ⊥
                                       ,
                                       
                                          
                                             T
                                          
                                          ′
                                       
                                       ←
                                       
                                          
                                             D
                                             k
                                          
                                          
                                             (
                                             
                                                c
                                                1
                                             
                                             )
                                          
                                       
                                    
                                 .

It is common on OSNs for users to post replies and comments to the previously shared content 
                           m
                        . As users in the recipient set 
                           S
                         are able to reconstruct the symmetric session key k, it is possible to encrypt the new comment with k. As in security using the same key is not advisable, a hash chain can be used, for instance, the first reply would be H(k), then H(H(k)). In this way, a conversation among users can be build and new users can be added at the middle of the conversation just by receiving the respective hash value of the joint point without learning previous shared information. This is possible due to the one-way secure hash functions property, as it is infeasible to any adversary to reverse the hash and obtain a previous node of the chain.

@&#EVALUATION@&#

We now evaluate the proposed OSN oANOPS scheme in terms of key management, security, anonymity, and complexity. In light, we show that the proposed scheme avoids key escrow, ensures confidentiality of the shared information 
                           
                              m
                              ,
                           
                         and provides recipient set anonymity towards non players and the PKGs. Note that, using IBE allows any user in the OSN to be part of the recipient set 
                           S
                         before registering in the system. In addition, users can reuse (a hash of) the same symmetric key 
                           k
                         during the comments and discussion phase.


                        Complexity. In terms of efficiency, users are required to decrypt wi
                         on average 
                           
                              |
                              S
                              |
                              /
                              2
                           
                         times before obtaining the symmetric key 
                           k
                        . The size complexity is linearly bounded to the size of the recipient set 
                           
                              S
                              ,
                           
                         i.e., 
                           
                              O
                              (
                              S
                              )
                           
                        . In contrast, the complexity of key storage is minimal, requiring only the need to store the private keys, as the public keys of the users are represented by their public 
                           id
                        s, and the session key is encrypted with the content.


                        Security analysis. As the OSN ANO-PS scheme consists of secure underlying key privacy IBE, and authentication encryption schemes, the semantic security follows directly.

                           Theorem 1
                           
                              If the OSN oANO-PS-IBE scheme is correct, the DKG protocol is secure such that no more than t-PKGs gets compromised, the IBE scheme is CCA-secure and CCA-key private, and the
                              
                                 
                                    E
                                    (
                                    ·
                                    )
                                 
                               
                              is a secure authenticated encryption scheme. Then a PS-IBE scheme is CCA outsider recipient private.
                           


                        Proof sketch: The confidentiality, integrity, and outsider recipient anonymity hold as a consequence of the security of the underlying authenticated encryption scheme. In particular, the session key can only be obtained if the recipient holds the corresponding secret key 
                           
                              
                                 s
                                 
                                    k
                                    id
                                 
                              
                              ,
                           
                         assuming the IBE-scheme is also semantically secure, i.e., IND-CCA.

Regarding recipient privacy, according to Theorem 1 a OSN oANO-PS-scheme is recipient privacy if the underlying constructions fulfill certain requirements. As shown by Boneh and Waters [18], the underlying IBE is semantically secure under an adaptive adversary. As demonstrated by Paterson and Srinivasan [32] an IBE scheme is CCA-key private, and PKG anonymous if its also IND-CCA secure. Hence, if the chosen authentication encryption scheme is semantically secure, e.g., AES-GCM, then we show that our scheme is recipient private. As the OSN oANO-PS scheme also shares 
                           S
                         along with the message we conclude that the scheme is outsider-anonymous. However, as the ciphertext size increases linearly with the size of 
                           
                              S
                              ,
                           
                         a powerful adversary may infer the cardinality of the set. We also note that we aim at an outsider-anonymous recipient privacy so that it does not guarantee privacy against users in 
                           S
                         authorized to decrypt the data, as modeled by Günther et al. [13].

A user is able to detect malicious behavior of any PKG from the public commitments of the Feldman VSS [25]. It is also required that at least t from n PKGs do not get compromised. In case the OSN providers would maintain the PKG infrastructure, one could rely on the assumption that direct business competitors do not collude nor get legally coerced. Furthermore, the authentication and identity verification to the different servers can be done via, for instance, an open id token. This token could be generated as a proof of identity by any of the OSN providers. In addition, according to Gennaro et al. [26] Pedersen DKG is vulnerable to rushing adversaries that wish to learn extra information about the keys, this is however mitigated by increasing the security parameter [27].


                        Key management. In contrast to the other versions of PS-schemes, the IBE version requires very little to any effort for key distribution, while the public key (
                           id
                        ) verification is bound to the OSN identity, along with authentication to the different PKGs. The DKG approach solves the key escrow issues that come with generic Identity-Based solutions. In contrast to classic public key infrastructure, if a public key is revoked, the user would no longer be able to use that identifier for encryption, e.g., Facebook ID. Therefore, to support revocation an expiration date is concatenated to the identifier [18], requiring an extra periodic key update process. Similarly to the PS-BE scheme, the access control rights are selected per content, thereby allowing group revocation to be represented by removal of the revoked user id. Similarly to PS-BE version, revocation is just applied to future content, providing no forward security.

Now we discuss some possible improvements and extensions to improve the efficiency, protect the cardinality of the recipient set privacy, and offer the extra property of undetectability.


                        Efficiency. Barth et al. [21] and Libert et al. [22] propose using a tag based system to hint users where their symmetric key can be found, and improve the efficiency of the Retrieve phase. However, as a design choice we deliberately decided to not implement such property in the scheme as it introduces a linear dependency from extra public parameters to the users, i.e., there are extra public parameters that need to be shared and verified, and extra N*|Tag|-size to the ciphertext. In addition, to reduce ciphertext size several broadcast encryption scheme, such as Fazio et al. [23], make use of binary tree construction. Such solutions, however, require a fixed size universe of users.


                        Recipient set cardinality privacy. Although an adversary from outside 
                           S
                         is not able to learn the identity of the recipients in the set 
                           
                              S
                              ,
                           
                         it learns the cardinality of 
                           S
                        . A possible solution is to use dummies, i.e., extra random wi
                         values. By padding W with random values 
                           
                              
                                 w
                                 i
                                 ′
                              
                              
                                 ←
                                 R
                              
                              
                                 
                                    {
                                    0
                                    ,
                                    1
                                    ,
                                    }
                                 
                                 l
                              
                           
                         increases the recipient privacy at the cost of ciphertext size and complexity during the Retrieve phase.


                        Undetectability. Although the confidentiality of 
                           m
                         is guaranteed, an adversary is able to detect that secret information is being shared. In particular, when the OSN is the main communication channel other curious friends and the provider are able to detect, and later blocked by the latter. Recently, Beato et al. [33] modeled the property of undetectability in OSNs and provided a general solution to achieve it. To do so, they allow users to post a social indistinguishable text st, storing the encrypted 
                           m
                         in an additional storage server. The st is then used as an index on a mapping servers used to retrieve the location of the storage server and subsequently 
                           m
                        .

To demonstrate the viability of our solution, we implemented a proof-of-concept prototype of the distributed identity based broadcast encryption scheme for OSNs.
                        2
                     
                     
                        2
                        Source of our implementations is available upon request.
                      In this section, we discuss the implementation details and the performance results of the cryptographic blocks.

@&#IMPLEMENTATION@&#

For the client component we modified the cryptographic library from Scramble [6] as it is an available open source privacy preserving project. In addition, Scramble is implemented as a Firefox Extension compatible with Firefox 14+, but as it is written in simple Javascript it could easily be ported to other browsers, e.g., Chrome. We implemented the multiple PKG servers in PHP. The bilinear pairing and cryptographic blocks for the PKG and the client component are implemented using the multi-precision MIRACL library [34]. To overcome the limitation of accessing binary code from a browser extension implementation, a local client-server socket implementation was used to perform the cryptographic requests to the developed scheme using the MIRACL library. For the DKG library we used the available implementation from Kate and Goldberg [35,36] to generate the collective master secret key for the 
                           
                              (
                              n
                              ,
                              t
                              )
                              −
                           
                        PKG servers. AES-GCM [31] was used for the authenticated encryption. The Facebook username was used, i.e., 
                           
                              id
                              =
                              f
                              a
                              c
                              e
                              b
                              o
                              o
                              k
                              .
                              c
                              o
                              m
                              /
                              u
                              s
                              e
                              r
                              .
                              n
                              a
                              m
                              e
                              ,
                           
                         was used as the public key.

Experiments were conducted on a Intel Core 2.4 GHz i5 processor with 8Gb of 1600 MHz DDR3L onboard memory. Fig. 2
                         illustrates the execution times for the scheme proposed in Section 4 for 
                           
                              λ
                              =
                              256
                           
                        bits. Each recipient has to decrypt Wi
                         an average of N/2 times to retrieve the secret and subsequently decrypt the secret message 
                           m
                        . Note that the efficiency comes at the cost of the recipient anonymity 
                           
                              S
                              ,
                           
                         as for hiding the 
                           S
                         it is required to produce more IBE.Encrypt calls, while more efficient broadcast encryption schemes require constant time decryption and overhead [37].

We also analyzed the execution times of the IBE scheme, as it represents the most costly part of the scheme. Furthermore, our solution uses the random oracle assumption to improve the efficiency when compared with the standard model, i.e., Gentry [19]. Nevertheless, we believe that our solution presents a tolerable cost to average users with 100 friends and a usual group size of 15 [38].

@&#RELATED WORK@&#

The increased popularity of Online Social Networks (OSNs) and the amount of disseminated information prompted several privacy concerns. Guha et al. [7] proposed NOYB a solution that replaces the personal details of users by fake information. Later, FaceCloak [8] and Scramble [6] make use of cryptographic mechanisms to enforce privacy to the published information. Further, Persona [5] and EaSiER [39] suggest an attribute based encryption scheme for social networks. Günther et al. [13] suggested a private profile management cryptographic model serving as a building block for privacy in social interactions alongside with formal security definitions on confidentiality and unlinkability. In addition, two different profile management schemes are prosed based on symmetric cryptography and Gentry and Waters broadcast encryption scheme [19], achieving both confidentiality and unlinkability. However, their construction requires users to hold full power and manage their profile data as in decentralized networks minimizing the communication and storage overhead, whereas recipient anonymity is not addressed. However, all the aforementioned solutions suffer from a complex key management infrastructure while do not protecting the identities of the recipients.

Other solutions take a more drastic approach by proposing novel, privacy-friendly architectures meant to replace existing platforms [9–11]. Besides the privacy protection offered, these solutions face a reduced user willingness to adopt to a new platform.

Recently, Jung et al. [40] proposed a key management scheme based on dynamical IBE for decentralized OSNs. Their scheme, however, presents several problems. Foremost contains a single point of failure as a trusted party should generate the secret keys for a given 
                        id
                     . This proposal still requires an additional public key that needs to be certified and shared among other users for the broadcasting, thus, not solving the key management issue.

In general all previous schemes require public parameters that should be shared and verified by users. By employing an Identity-based scheme we allow users to motivate their friends to use the solution, as registered users can already encrypt messages to unregistered friends.

Different cryptographic solutions have been proposed addressing other specific privacy problems in OSNs. For protecting content privacy on the friend search and common friend finder scenarios, De Cristofaro et al. [41] introduced private contact discovery protocol. The protocol enables two users of a OSN to learn their common contacts without learning any of the other friends. Later, Nagy et al. [42] extended [41] to the finding friends problem, using private set intersection techniques. The protocol allows users to privately generate and share their list of friends such that other friends can compare and find common friends in the honest-but-curious model.

@&#CONCLUSION@&#

Identity Based Encryption (IBE) solutions provide desirable properties to construct mechanisms to deliver privacy in OSNs. The minimal additional architectural support and the increased ease of key management represent a major motivation to implement IBE in OSNs. We developed an Identity-Based outsider anonymous private sharing (oANOPS) scheme that protects user shored content in OSNs. With such scheme, we show that using secret sharing and multi-PKGs there is no need to have a single trusted party, assuming that at least 
                        
                           t
                           −
                           1
                        
                      of the PKGs are compromised, as well as users key exchange and verification. Furthermore, assuming the competing business models of OSNs, the multiple PKG infrastructure can be maintained by several OSN providers. This can be motivated by an additional and attractive privacy-friendly label, thus creating more incentives towards privacy concerned users. In addition, users are provided with the option to use multiple identities, that they can use interchangeably among OSNs, e.g., use Twitter 
                        id
                      as a public key in Facebook. In contrast to previous solutions, it is possible to share content with users not holding private keys to their identity as the valid public key is directly represented by their 
                        id
                      in the OSN. This forces curious users to register if they wish to view the protected content shared with them. Lastly, we have extended Scramble and demonstrated that such extension presents a tolerable overhead to end-users.


                     Future work. There are some important open challenges that call for further research. We endeavor to obtain a full open source project that supports different browsers for a larger user adoption. Items like a more detailed security discussion and efficiency improvement are also important and required. In addition, for the authentication and proof of identity we foresee several open challenges during key generation and update.

@&#ACKNOWLEDGMENTS@&#

We gratefully acknowledge Roel Peeters, Kimmo Halunen, Ruan de Clerq, and the anonymous reviewers for their insightful comments and suggestions. This work was supported in part by the Research Council KU Leuven: GOA TENSE (GOA/11/007), by the Flemish iMinds projects, and by the European Commission through the ICT programme under contract ICT-2007-216676 ECRYPT II. The author Filipe Beato is supported by the FCT doctoral grant SFRH/BD/70311/2010.

@&#REFERENCES@&#

