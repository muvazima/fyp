@&#MAIN-TITLE@&#Interactive web service system for exploration of biological pathways

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The study proposes a web service system for exploring pathways in an interactive manner.


                        
                        
                           
                           Pathways can be converted from a static format into an interactive format.


                        
                        
                           
                           The entries in one pathway can be moving or rotating, and multiple pathways can be displayed simultaneously without overlaps.


                        
                        
                           
                           The system can discovery all possible reaction paths between two selected genes and chosen reaction types.


                        
                        
                           
                           Automatic identification of common entries and similar reaction paths in two different pathways.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Biological pathways

Medical information and modeling

Bioinformatics

Visualization

Data analysis

@&#ABSTRACT@&#


               
               
                  Objective
                  Existing bioinformatics databases such as KEGG (Kyoto Encyclopedia of Genes and Genomes) provide a wealth of information. However, they generally lack a user-friendly and interactive interface.
               
               
                  Methodology
                  The study proposes a web service system for exploring the contents of the KEGG database in an intuitive and interactive manner. In the proposed system, the requested pathways are uploaded from the KEGG database and are converted from a static format into an interactive format such that their contents can be more readily explored. The system supports two basic functions, namely an exhaustive search for all possible reaction paths between two specified genes in a biological pathway, and the identification of similar reaction sequences in different biological pathways.
               
               
                  Results
                  The feasibility of the proposed system is evaluated by means of an initial pilot study involving 10 students with varying degrees of experience of the KEGG website and its operations. The results indicate that the system provides a useful learning tool for investigating biological pathways.
               
               
                  Conclusion
                  A system is proposed for converting the static pathway maps in KEGG into interactive maps such that they can be explored at will. The results of a preliminary trial confirm that the system is straightforward to use and provides a versatile and effective tool for examining and comparing biological pathways.
               
            

@&#INTRODUCTION@&#

Due to rapid advances in the biotechnology and systems biology fields, a huge amount of experimental data is now available regarding the interactions between the components of biological systems and the manner in which these interactions determine the function and behavior of the system. Many bioinformatics resources have been developed to store this information and to facilitate its sharing amongst national and international bodies. Amongst such resources, the Kyoto Encyclopedia of Genes and Genomes (KEGG), developed jointly by the Bioinformatics Center of Kyoto University and the Human Genome Center of the University of Tokyo, is one of the most commonly used in academic and commercial circles [1–3]. KEGG provides a wealth of information linking genes and genomes to life and the environment. The database is used to understand high level functional meanings and utilities of the cell or the organism from molecular information [4], and is one of the most commonly used bioinformatics resources in the life sciences research field.

KEGG comprises multiple databases relating to systems information, genomic information and chemical information, respectively. The genomic and chemical information databases contain the molecular building blocks of life in the genomic and chemical spaces, respectively, while the systems information database contains the functional aspects of the biological systems constructed using these building blocks. KEGG also contains a PATHWAY database comprising a collection of manually drawn maps describing the molecular interaction and reaction networks pertinent to metabolism (and other cellular processes) and human diseases. Importantly, the pathway maps are converted into a KEGG Markup Language (KGML) format in order to facilitate their exchange over the Internet and to support automatic drawing, computational analysis and modeling applications. The KGML files for metabolic pathway maps contain two different types of graph object pattern showing how enzymes and compounds are linked by “relations” and “reactions”, respectively. By contrast, the KGML files for non-metabolic pathway maps show only how proteins are linked by “relations”.

However, the databases within KEGG generally lack a user-friendly, interactive interface. Furthermore, the maps within the PATHWAY database are simply manually drawn representations of published information, and are static in the sense that they present a single, fixed view of the pathway. As a result, they do not easily support such functions as determining all of the possible reaction paths between two genes (or compounds) or comparing two different pathways in order to identify any common reaction sequences between them.

Accordingly, the present study proposes an intuitive and interactive web service system for interrogating the contents of the KEGG PATHWAY database. In the proposed system, the pathways requested by the user are downloaded from the KEGG database and converted into an interactive format such that an exhaustive search can be made for all of the possible reaction paths between a given start gene (or compound) and a given end gene (or compound). In addition, the system provides the means to view two pathways simultaneously and to identify any reaction sequences which are common to both pathways. Significantly, the user can explore the displayed pathway(s) interactively by clicking on the genes or compounds of interest in order to reveal the related annotations, define the start and end points of the reaction sequence search process, and so on. Moreover, in contrast to the conventional KEGG pathway maps, the maps generated by the proposed system have a three-dimensional (3D) format and are therefore more easily visualized by the user. The feasibility of the proposed system is investigated by means of a pilot study involving 10 students with varying degrees of experience of the KEGG website and its operations.

The remainder of this paper is organized as follows. Section 2 reviews the related studies. Section 3 presents an overview of the proposed system and describes its detailed functions and algorithms. Section 4 shows some typical results obtained from the proposed system. Section 5 presents and discusses the feedback received from the preliminary user test of the proposed system. Finally, Section 6 summarizes the major contributions of the present study and indicates the intended direction of future research.

Pathway diagrams provide a visual representation of a reaction network help biochemists understand the complex relationships which exist among different reactions and reaction networks. The KEGG system provides a vast repository of information relating to genomes, enzymatic pathways and biological chemicals. This information is stored within four main databases, namely GENES, LIGAND, PATHWAY and BRITE. GENES comprises a collection of gene catalogs for all complete genomes and some partial genomes generated from publicly available resources. LIGAND contains a bank of knowledge pertaining to the universe of chemical substances and reactions that are relevant to life, and is organized in the form of three sub-databases, namely COMPOUND, GLYCAN and REACTION. Meanwhile, the PATHWAY database contains a collection of manually drawn pathway maps representing existing knowledge regarding the molecular interaction and reaction networks associated with Metabolism, Genetic Information Processing, Environmental Information Processing, Cellular Processes, and Human Diseases. Finally, BRITE comprises a collection of hierarchical classifications representing contemporary knowledge relating to various aspects of biological systems, such as Protein families, organ systems and Disease markers. Among the four databases, GENES and PATHWAY are the most commonly used to search for gene sequences and functional structures in metabolic pathways.

Much work has been done concerning the visualization and rebuilding of metabolic pathways [5,6]. Okuda et al. [7] proposed a graphical interface for the PATHWAY and BRITE databases designated as KEGG Atlas. The proposed interface consists of a global map and an associated viewer covering approximately 120 KEGG metabolic pathway maps and 10 BRITE hierarchies, and provides the user with the means to map high-throughput experimental data for different organisms to the global map. Karp et al. proposed a graphical user interface based on a dynamic query process for the automated sketching of metabolic pathways [8,9].

Various methods have been proposed for extracting the metabolic pathways in KEGG. Schreiber [10] classified the methods used to represent the pathway information as either static visualization methods or dynamic visualization methods. In static methods, the pathway diagrams generally take the form of simple pictures and figures reproduced from medical textbooks, teaching materials, information released by research bodies, and so forth. However, such diagrams only represent the best knowledge available at the time of drawing and inevitably become outdated as new knowledge emerges. By contrast, dynamic visualization methods construct pathway diagrams on demand, and draw on the latest information available within the underlying data source when doing so. Typically, dynamic visualization methods are based on a graph drawing approach, in which the nodes represent the substance and enzymes, while the edges represent the reactions. Schreiber surveyed several graph drawing methods and then presented a constraint-based graph drawing algorithm for the construction and comparison of metabolic pathways in different species [11,12]. In the proposed system, the nodes belonging to different sub-graphs were replaced with a single node on the same horizontal layer if they pertained to the same substance, thereby constraining identical reactions to appear in the same layer of the pathway representation.

Tsay et al. [13] observed that many complex pathways actually comprise a hierarchical structure and can be partitioned recursively into several sub-pathways. Accordingly, they proposed an algorithm designated as the Hierarchically Organized Layout (HOLY) algorithm comprising three main stages, namely Decomposition, Layout and Layout-joining. The Decomposition stage comprises two phases, i.e., a Grouping phase and a Partitioning phase. The Grouping phase identifies overlapped groups and acyclic groups, respectively. The former groups are sub-pathways which are highly overlapped, and therefore contain many components which are highly related. The group will be represented as a single node. Meanwhile, the latter groups are used to decompose global cycles into metabolic processes. Having identified the various groups, the Partitioning phase separates them into strongly related components and produces a tree of the group components. The Layout stage in the HOLY algorithm recognizes edges for connected components and the direction of acyclic components. The last stage, the Layout-joining, is used to join the sub-pathways and reduce number of crossing edges. The stage first recognizes the center of each component and iteratively joins a new component to the main component by means of an attaching point. It then fixes the attaching point and rotates the new component in such a way as to maximize the separation distance between its center point and that of the main component.

Wolf et al. [14] developed a color-based visualization tool in which gene/EC numbers and expression data were imported from KEGG and used to construct colored maps comprising blocks rendered in accordance with the corresponding expression level, as determined using a predetermined color scale. Becker and Rojas [15] proposed an algorithm, for drawing biochemical networks which first checked for the existence (or otherwise) of cycles in the reaction paths, and then adopted different strategies to draw the corresponding network. The drawing process was performed in accordance with the constraints that the nodes in the network must not overlap and nodes belonging to a different cycle should be positioned close to the nodes associated with the cycle to which they are connected. To achieve these constraints, each edge was assumed to act as a spring with a preferred length and to exert a repulsive or attractive force on the connected nodes. The total energy of the network was then minimized by allowing the nodes to move iteratively in the direction of the exerted forces. Kamburov et al. [17] proposed the ConsensusPathDB which integrates multiple biology database resources. The system employs statistic tests to interpret the transcriptomics and proteomics data and uses overlap graphs to visualize functional gene sets. The system also provides the function of induced network modules analysis to visualize possible interconnections of a given set of seed genes.


                     Fig. 1
                      illustrates the architecture of the proposed system. As shown, the system is composed of two sub-systems, implemented on the Server side and the Client side, respectively. The Server sub-system comprises an online database management system containing the raw KGML pathway data, while the Client sub-system comprises an Interpreter module, designed to analyze the KGML data and to generate painting scripts, and a Visualization module, designed to receive inputs from the user and to generate 3D representations of the KEGG pathway maps. The details of the two modules are presented in the sections below.

When the user submits a pathway request to the system, the server responds with the corresponding KGML data. The data tags are analyzed by the Interpreter module, and painting scripts are then generated in order to draw the corresponding 3D map.


                        Fig. 2
                         presents a flowchart showing the main processing steps in the KGML analyzer. As shown, the module commences with the receipt of the requested KGML data from the online database management system. The Interpreter then identifies all of the compounds in the pathway by searching for the KGML elements with a “circle” graphics tag. For each identified element, the Interpreter retrieves the corresponding id, compound name, and x- and y-coordinate values in two-dimensional space. The Interpreter then identifies all of the genes in the pathway by searching for the KGML elements with a “rectangle” graphics tag. For each gene, the Interpreter records the id, gene name, and x- and y-coordinate values. The Interpreter then analyzes the reactions between each pair of elements. In KGML, the interactions between two entries, namely Entry1 and Entry2, are modeled by a <relation> tag. (Note that Entry1 is the starting (i.e., “from”) point of the reaction, while Entry2 is the ending (i.e., “to”) point.) Moreover, the nature of the relationship between the two entries is indicated by a Type attribute, e.g., “PPrel” and “PCrel” for a protein-protein relation and a protein-chemical compound relation, respectively. For the case of a linkage between a protein in the current map and a protein or compound in another map, the Type attribute value is set to “maplink”. Finally, the Interpreter combines the gene and compound tables to form tuples with which to generate the 3D pathway map.

The tuples generated by the KGML analyzer are passed to the Script generator, which produces the information required to draw the corresponding pathway map (e.g., the shape of the entry nodes, the line styles of the various reactions, the turning points in the relation lines, and so on) in accordance with a set of predetermined graphical representation rules. The Script generator first reads the type of the relation from the tuple. As discussed above, if the type value is equal to “PPrel”, the two entries on either end of the relation are genes. Conversely, if the type value is equal to “PCrel”, one entry is a gene while the other is a compound. The generator then retrieves the subtype attribute of the tuple. The subtype attribute has nine possible values, namely “compound”, “activation”, “binding/association”, “dissociation”, “phosphorylation”, “dephosphorylation”, “inhibition”, “ubiquination”, and “indirect effect”. Having identified the subtype attribute of the tuple, the Script generator selects the appropriate graphical representation rule from amongst 15 pre-defined patterns (see Fig. 3
                        ).

The graphical representation rules produced by the Script generator are passed to the Visualization module in order to construct the corresponding pathway. KEGG represents the biological pathways in the form of flat maps. However, given a flat format, it is difficult to discern all of the annotations in a complex pathway map. Moreover, it is not easy to display and compare multiple maps simultaneously. Accordingly, the Visualization module proposed in this study converts the flat KEGG pathways into a 3D format. Specifically, the 2D x- and y-coordinate values specified in the KGML file are mapped to equivalent 3D values as follows:
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                   
                                                      3
                                                      D
                                                   
                                                
                                                =
                                                
                                                   x
                                                   
                                                      2
                                                      D
                                                   
                                                
                                                −
                                                wight
                                                /
                                                2
                                                ,
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   y
                                                   
                                                      3
                                                      D
                                                   
                                                
                                                =
                                                
                                                   y
                                                   
                                                      2
                                                      D
                                                   
                                                
                                                −
                                                hight
                                                /
                                                2
                                                ,
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   Z
                                                   
                                                      3
                                                      D
                                                   
                                                
                                                =
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where x
                        
                           3D
                        , x
                        
                           2D
                         and y
                        
                           3D
                        , y
                        
                           2D
                         are the x- and y-coordinate values of the entries in 3D space and 2D space, respectively. Note that the origin of the 3D space is located at the center of the display window on the screen. Note also that the width and height parameters in Eq. (1) denote the width and height of the display window in pixels. Finally, note that z
                        
                           3D
                         is the z-coordinate value of the entry in 3D space, where the z-axis is normal to the screen and a value of z
                        
                           3D
                        
                        =0 indicates that the entry is located on the plane of the screen. It is noted that all of the entries in one pathway are located on the same plane (i.e., z
                        
                           3D
                        
                        =0). In constructing each pathway, the Visualization module first creates a 3D wireframe for each entry, and then assigns a pattern graph to each frame in accordance with its type/subtype. Importantly, the viewpoint of the entries in one pathway can be changed by moving or rotating the corresponding plane. Thus, multiple pathways can be displayed simultaneously without overlaps. Since biological pathways typically contain a large numbers of entries, the Visualization model textures only one face of each entry in order to avoid overlaps between proximal entries in the same pathway or different entries in the same pathway which are located far from one another but appear close once the pathway plane is rotated. As a result, the readability of the pathways is significantly improved compared to the case where the entries are patterned with three-dimensional effects.

As described in the following sections, the proposed system supports two basic query functions, namely (1) an exhaustive search for all possible reaction sequences between two user-nominated entries; and (2) the automatic identification of common reactions and similar reaction paths in two different pathways.

This function provides the user with a convenient tool for browsing all of the possible reaction paths between any two entries in the 3D pathway map. The search process is performed using a Depth First Search (DFS) algorithm. The DFS algorithm was originally proposed to explore tree and graph data structures [16]. The algorithm starts at the root of the data structure and explores as far as possible along each branch. If a leaf has been previously visited, the algorithm backtracks until it finds an un-visited leaf/branch. The process is repeated iteratively until all of the branches in the data structure have been visited.


                        Fig. 4
                         shows the use of the DFS algorithm in the present study to search for all of the possible reaction paths between two entries. As shown, the process commences with the user inputting the start and end genes. The system then retrieves all of the reactions in the 3D path whose first entry is equal to the start gene, and puts these reactions into a stack. A reaction is then popped from the stack and its direction checked. If the reaction direction is negative (i.e., the reaction path leads away from the end gene), the reaction is simply dropped; else the entry on the other end of the <relation> link is identified. If the entry is equal to the end gene, the reaction path is added to the drawing list, and a new reaction is popped from the stack. Conversely, if the entry is not equal to the end gene, the system retrieves all of the successive reactions relating to this entry on the 3D pathway map and adds these reactions to the stack. Note that if there are no successive reactions relating to the entry, the path is simply dropped. The search procedure continues iteratively in this way until all of the reaction paths between the start gene and the end gene have been identified.

In systems biology research, it is frequently necessary to examine the effects of biological functions on the pathways since even small differences in the order of the reactions can result in quite different products and pathways. The Visualization module supports this requirement by providing an interface in which two different pathways (and their associated annotations) are displayed simultaneously on the screen. The system allows the user to select particular reactions in one pathway and then searches for any similar reaction paths in the other pathway. Fig. 5
                         presents a flowchart of the brute force method [16] used to accomplish the search process. The method is also called exhaustive search. It searches for all possible candidate solutions and then checks whether they satisfy the problem statement. As shown, the process commences with the selection of a reaction in the first pathway (pathway1). A search is then made for the same reaction in the second pathway (pathway2). If an identical reaction is not found in pathway2, the algorithm selects another reaction from pathway1, and repeats the search process. However, if an identical reaction is found in pathway2, the reaction is stored in a buffer. Note that this simple detection of common reactions in different pathways is of only limited practical use since researchers are generally more interested in the manner in which biological functions affect the orders of these reactions and their products. In other words, it is more useful to identify identical reaction paths in the two different pathways rather than identical reactions. Thus, having identified the common reaction paths in the two pathways, the algorithm selects one of the reactions from the buffer, and searches for any other reactions in the stack whose entries are the same as those of the selected reaction. If such reactions are found, it implies that the reactions may form part of the same reaction path in the two different pathways. Thus, the algorithm searches for this candidate path within pathway1 and pathway2. If the paths can be found in both pathway1 and pathway2, they are taken as identical paths within the two pathways. The system then iteratively examines the other reactions in the buffer until all of the identical reaction paths have been found.

This section commences by illustrating the effects of errors in the KGML data file on the 3D pathway generated by the proposed system. The arrangement of the individual entries in the 3D pathway maps is then discussed. Finally, typical results are presented for the reaction path discovery process and the reaction path comparison process, respectively.


                     Fig. 6(a) shows the manually drawn KEGG map for the B cell receptor signaling pathway. Fig. 6(b) shows the corresponding 3D map generated by the proposed system using the KGML data file. Comparing the two maps, it is seen that some discrepancies exist between them. For example, some components in the original KEGG map are not reproduced in the 3D map (e.g., the inhibition relation between SHIP and PIP3, and the activation relation between PLC-r2 and DAG). Furthermore, some of the reaction descriptions are inconsistent between the two maps. For example, the reaction between Ban32(DAPP1) and Rac(RAC1) is annotated as an “indirect effect” in Fig. 6(a), but is annotated as “activation” in Fig. 6(b). In the proposed system, the 3D pathway maps are generated automatically from the KGML data. In other words, the accuracy of the 3D maps depends fundamentally on the accuracy with which the KGML data represent the original pathway map. The results presented in Fig. 6 suggest that coding errors (or omissions) occurred when transforming the 2D KEGG map for the B cell receptor signaling pathway to a KGML format; with the result that slight differences exist between the 3D map produced by the proposed system and the original 2D KEGG map.


                     Fig. 7
                      presents some typical results obtained from the exhaustive reaction path discovery function when applied to the “regulation of actin cytoskeleton” pathway. Note that the dialog box on the right-hand side of the screen indicates all of the reaction types considered in the present study. Having selected the start and end genes for the discovery process, and having chosen a reaction type (or types), the system identifies all of the reaction paths of the corresponding type(s) between the two genes. In the example shown in Fig. 7(a), the start and end genes are RAC1(Rac) and ARPC5(Arp2/3), respectively, and the reaction types are specified by the user as activation and inhibition. As shown, two paths are found, namely RAC1-BAIAP2-WASF2-ARPC5 and RAC1-NCKAP1-C3orf10-ARPC5. (Note that for ease of visualization, the different reaction types are shown using different colors.) Fig. 7(b) presents the results of a different search process for the same pathway, in which the start gene is specified as RAC1 (Rac), the end gene is specified as MYL12B (MLC), and the reaction types are specified as Activation, Phosphorylation, Phosphorylation&Inhibition, Dephosphorylation&Inhibition, and Inhibition. Once again, two possible reaction paths are found, namely RAC1-PAK4-ARHGEF7-ARHGEF12-RHOA-ROCK1-PPP1R12-MYL12B and RAC1-PAK4-ARHGEF7- ARHGEF12-RHOA-ROCK1- MYL12B. Note that a third reaction path also exists, namely RAC1-PAK4-MYLK-MYL12B. However, this path is not identified by the system since the reaction type between MYLK and MYL12B (i.e., Phosphorylation&activation) is not specified by the user for the search process.


                     Fig. 8
                      shows the results obtained when searching for common reactions and similar reaction sequences in the B cell receptor signaling pathway and T cell receptor signaling pathway. Both cell receptors play an important role in the human immune system. The B cell receptor is an integral membrane protein complex that can recognize soluble antigen, which forms a B cell following ligation by antigen, and plays a key role in the humoral immune response. Meanwhile, the T cell receptor recognizes antigens bound to major histocompatibility complex (MHC) molecules and then forms a T cell, which plays a central role in cell-mediated immunity. Although the reaction sequences of the two signaling pathways are different, they have many similar reactions and common elements. In Fig. 8(a), the T cell receptor signaling pathway is shown on the left, while the B cell receptor signaling pathway is shown on the right. Moreover, the angle between the two planes is 80 degrees and the vanishing point is located at the center of the window. As shown, the entries in the two pathways are divided into two groups; distinguished by different colors. Specifically, an entry is shaded in green if it appears in only one of the two pathways, but is shaded in purple if it appears in both pathways. Furthermore, if the common entries are part of similar reaction paths, they are bounded by a blue frame. Fig. 8(b) lists all of the common entries in the two pathways. When the user selects a particular entry, the system displays the corresponding annotations and marks the relevant path elements with an orange frame (see Fig. 8(c)). In addition, the system provides links to external bioinformatics resources such that additional information can be easily retrieved if required.

In performing this study, many different viewing angles were explored in order to identify the perspective which most conveniently allowed the user to browse the various pathway components and annotations. It was found that in addition to the placement angle of the plane within the viewing window, the angle between the individual entries and the plane also plays a key role in determining the clarity of the visualization results. Thus, as shown in Fig. 9
                     , the entries do not lie flat on the plane, but are rotated slightly such that they face the observer.


                     Fig. 10
                      shows the common path and connected entries of the two pathways in Fig. 8. Fig. 10(b) shows the common entries and associated reaction paths in Fig. 10(a). Fig. 10(c) shows the common path and connected entries in the B cell receptor signaling pathway. Fig. 10(d) shows the common path and connected entries in the T cell receptor signaling pathway. Fig. 10(e) shows the common path and all its connected entries in the two pathways. In general, the results presented in Fig. 10 show that “AKT3” has a direct effect on path BCL10-IKBKG-NFKBIA-NFKB1 in the B cell receptor signaling pathway, but does not interact directly with the same path in the T cell receptor signaling pathway.

@&#DISCUSSIONS@&#

To evaluate the performance of the proposed system, a preliminary trial was performed using 10 subjects (6 students majoring in Computer Science and 4 students majoring in Biology). Of the 10 students, seven had previous experience in using the KEGG database, while 3 were aware of the database, but had little or no experience in its actual use. The evaluation tests focused on five key questions, namely:
                        
                           1
                           Is the system easy to understand and operate?

Does the system successfully support the two query functions described in Sections 3.3 and 3.4, respectively?

Is the use of Visualization module effective in presenting the pathway information in an easy-to-read manner?

Does the side-by-side arrangement of two pathways in the viewing window facilitate an easy comparison of the entries and reactions in the two pathways?

Is the visual-graphics interface used in the system effective in enhancing the learning of biological pathways?


                     Table 1
                      summarizes the feedback received from the 10 users following the evaluation process. As shown, most of the users agreed that the system provides a useful learning tool for investigating biological pathways. Furthermore, they also agreed that the system provides a convenient means of searching for all of the possible reaction paths between two entries in a pathway and for identifying similar reaction sequences in different pathways. However, approximately one-third of the participants commented that by displaying all of the entry and pathway information simultaneously on the screen, it is difficult to read some of the data even though the system uses a 3D visualization approach. Accordingly, further work is required .to determine a more suitable viewing angle and perspective, and to develop an adjustment mechanism which allows the viewing angle to be changed in accordance with the size and complexity of the pathway map.

@&#CONCLUSIONS@&#

The KEGG website provides a wealth of information relating genomes to life and the environment, and is therefore a critical resource for research in the life sciences field. However, the pathway maps in the KEGG PATHWAY database are static. That is, they can only be viewed; not interactively explored. As a consequence, they are of only limited use for education and learning purposes. Accordingly, this study has proposed a system in which the static pathway maps in KEGG are converted into interactive maps such that they can be explored at will. The proposed system supports two specific functions, namely (1) the automatic identification of all possible reaction paths between two nominated genes; and (2) the automatic identification of all similar reactions and reaction paths in two different pathways. In general, the results of a preliminary trial have suggested that the system provides a versatile tool for life sciences education purposes. However, further work is required to improve the visualization interface; particularly for large-scale, complex pathway maps.

In the proposed system, the pathway maps are generated directly from the KGML data. Thus, the accuracy of the maps is fundamentally dependent on the accuracy of the corresponding KGML file. In practice, the KGML file may contain errors or omissions, and hence the machine-drawn pathway maps may differ slightly from the corresponding hand-drawn maps. Accordingly, in a future study, an artificial intelligence mechanism will be developed to visualize a wider range of gene annotations and to detect errors and omissions in the KGML file in order to improve the accuracy and completeness of the machine-generated pathway maps.

@&#REFERENCES@&#

