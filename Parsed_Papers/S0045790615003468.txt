@&#MAIN-TITLE@&#A modified listless strip based SPIHT for wireless multimedia sensor networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Proposed a modified listless strip based zero tree structure (LZT) based on SPIHT.


                        
                        
                           
                           Image quality in terms of signal-to-noise ratio is improved besides memory reduction obtained.


                        
                        
                           
                           Decreasing processing time reduces system complexity and power consumption.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

WMSN

SPIHT

Listless SPIHT

Power consumption

PSNR

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Wireless sensor networks (WSN) are networks that have small devices with collecting information capabilities from the physical environment. The main function of WSN is to process extracted data and transmit it to remote locations. Recently, many new applications are needed to capture multimedia content from the environment. Therefore, the development of wireless multimedia sensor network (WMSN) becomes mandatory. Unlike classical wired networks and WSN, the WMSN differs from its predecessor scalar network in the following points: the nature and size of data being transmitted, the important memory resources, as well as the power consumed per each node for processing and transmission [1]. Table 1
                      shows the differences between scalar WSN and WMSN.

Recently, WMSN has gained a wide attention and has been used for many applications such as military, traffic surveillance, security monitoring, health care, machine failure diagnoses, chemical and biological detection, plant monitoring, agriculture, binary document image compression [2] and transportation [3].

The layout of a typical WMSN consists of a large number of sensor nodes deployed in a region of interest and one or more base station or sink. Typically, each node in the WMSN has the ability to acquire process, compress and transmit captured frames to the base station which acts as the main network controller or coordinator. In this situation, its primary function is to coordinate the functions of the nodes. This coordinator also collects information gathered by the nodes to be stored or further processed. In fact, the most popular media considered in the WMSN are audio [4], video and image. Further, images and different frames contain large amount of redundancy that occupies a massive storage space and minimizes transmission bandwidth. Consequently, the most effective solution to minimize memory storage, and reduce power consumption due to processing and transmission via WMSN is image compression [5,6].

Due to having compact output bit stream, low bit rate with higher compression ratio, and using a subset partitioning scheme in the sorting pass, Set Partitioning in Hierarchical Tree (SPIHT) [7] is the most effective compression technique for limited resources environment. On the other hand, SPIHT has several coding drawbacks [8] as follows: (1) The use of three lists to store coordinates of individual coefficients will increase amount of storage, (2) The complexity and the implementation cost of the coder due to memory management required for adding or removing nodes from lists during sorting pass, significantly increases along with the processing time. (3) A full wavelet transformed image needs to be stored in memory as all zero trees are scanned in each pass, which will increase memory required with image resolution. (4) A Large memory is needed especially for the on-board image coders due to the increased hardware cost and complexity of image coders. (5) SPIHT applies the Mallat algorithm to realize fast wavelet transform, which causes bad real time performance [9].

In order to overcome these drawbacks, this paper presents an energy efficient compression scheme for WMSN by combining improved listless SPIHT with a pipelined strip based concept. This scheme minimizes processing time, memory usage and system complexity reduction. The modified algorithm uses:

                        
                           1.
                           A modified listless zero tree structure (LZT) based on SPIHT [10] with modified coding process.

A strip based image compression concept with the presented listless SPIHT.

A discrete wavelet transform (DWT) lifting based (Cohen-Daubechies-Feauveau wavelet (CDF) 9/7 [11]) instead of DWT convolution based filter [9,10].

All these features contribute in resolving some of previously mentioned SPIHT problems for WMSN. The listless SPIHT eliminates the use of lists that minimizes memory storage. Additionally, it requires a few bits to encode the same set of wavelet coefficients compared with classical SPIHT. Moreover, merging a sorting and refinement pass into only one single pass simplifies the coding algorithm. Also, there is no need for arithmetic coding with large memory requirement. Furthermore, there is no need to wait for full wavelet transform of the image using strip based concept. This is due to the ability to carry the coding out once a strip is fully buffered. Consequently, the processing time is reduced as a result of using the pipeline strip-based concept. The pipelined mode helps remote sensing images that are acquired continuously from sensors to be compressed. This will help efficient utilization of B.W in real time without full image buffering.

The implementation is conducted using a Raspberry Pi board with a Raspberry Pi hardware package in MATLAB 2014. Finally, comparative results confirm the supremacy of our approach over competing schemes in terms of power consumption, memory usage and system complexity.

The paper is organized as follows: Section 2 surveys image compression algorithms for WMSN and related work. The proposed work is discussed in Section 3 in detail. The results, discussion and analysis are covered in Section 4. Finally, conclusion will be drawn in section 5.

The compression techniques as shown in Fig. 1
                      can be classified into two main categories, namely; lossy and lossless compression techniques [12]. The choice of compression technique depends on the operating platform. However, limited platform resources such as WMSN requires compression techniques with less computation complexity, lower power consumption and acceptable image quality. The lossless compression method is not preferred for image transfer over WMSN. Therefore, lossy compression techniques are highly encouraged for WMSN [6,8].

The convolution DWT based on Mallat filter requires a large memory requirement with a large number of arithmetic operations which increase the computational complexity. To overcome these problems, the lifting based DWT can be used, it has the following advantages over convolution DWT: (1) faster wavelet transform implementation, this is due to the use of half number of computations compared to traditional convolution based DWT, (2) the lifting based DWT allows a fully in-place calculation of wavelet transform with no extra memory requirement, (3) the computation complexity is reduced because it implements reversible integer wavelet transforms and, (4) the lifting scheme (L.S) provides inverse transform from the same forward structure. This can be obtained by inversion normalization factors and inverting signs from positive to negative and vice versa. Hence, the number of arithmetic operations is nearly decreased by 50% compared to the convolution based DWT.

The lifting scheme as shown in Fig. 2
                         is composed of three steps, splitting [13], lifting and scaling modules.

                           
                              1.
                              Splitting: to split original 1-D input signal X(n) into odd x(2n + 1) and even x(2n) samples using Lazy transform.

Lifting (prediction): to modify the obtained samples by predicting x(2n + 1) from x(2n) using prediction operation P with error signal d(n) = x(2n +1) – P[x(2n)].
                              

Scaling (update): to update d(n) by applying update function U and produce combined signal S(n). Then, normalization (scaling) factors Ko, Ke
                                  are applied to d(n) and S(n) samples, respectively. Finally, a low pass sub-band YL
                                  and a high pass sub-band YH
                                  can be obtained.

It is worth noting that, Hasan and Ngah [11] found that lifting scheme is the most appropriate wavelet filter type for SPIHT algorithm. Additionally, Kabir et al. [14] proposed an algorithm for medical image compression based on lifting base wavelet transform with SPIHT. The experimental results [14] show that the proposed algorithm provides better results of PSNR and measurement structural similarity index (MSSI) for medical images at low bit rate compared to traditional methods. However, this algorithm could not be used for all bit rates.

The SPIHT [7] is a powerful wavelet based image compression algorithm with more compact output bit stream than Embedded Zero Tree of wavelet coefficients (EZW) without adding any entropy encoders. The implementation of SPIHT [15] in resource constrained WMSN is an excellent choice due to its high compression ratio, small computational complexity, low power consumption and less complex implementation over EZW and discrete cosine transform (DCT).

The SPIHT achieves very compact output bit stream without adding any entropy encoders which decreases computational complexity and amount of required transmitted data (for 512*512 gray scale image). The encoder speed is 7 times faster than using MSPIHT [16] and the decoder is 11 times faster. The MSPHIT has saved 0.5625MB of working memory. A modified SPIHT was presented by Ma et al. [17], which improves the PSNR from 0.2 to 0.4 over different techniques without arithmetic coding.

On the other hand, the SPIHT requires more memory storage as it has three passes which increases in complexity. Nowadays, many researchers work to adapt the SPIHT for WMSN by minimizing number of passes or eliminating them using wavelet lifting based scheme instead of convolutional scheme. The SPIHT achieves high compression ratios with minimal consumed power. Sun et al. [18] explored a real time implementation of the SPIHT using the DSP chip, which decreases memory cost by 13–14 times with reduced coding time to less than 40 ms.

One of the major drawbacks of the traditional SPIHT is the use of three lists to store individual coefficients coordinates and subset tree during sorting pass. Using the three lists increases the amount of storage needed, complexity and implementation cost of the coder. However, this is attributed to memory management requirement for adding or removing nodes from lists during sorting pass and consequence processing time will be increased. So, the listless SPIHT overcome this problem by removing the use of three lists with flag maps. The Listless coder greatly decreases memory needed during image coding.

The enhancement of the listless coders has been an area of extensive research.. An improved listless zero tree structure (LZT) [9] improves the reconstructed image quality. In their framework lists are replaced with flag maps and the lifting scheme is used for wavelet transform. Moreover, memory requirements are minimized and coding process is speeded up. Their experimental results show better performance with respect to the restored image, especially, at low bit rate. Jing et al. in [10] presented a modified zero-tree algorithm based on SPIHT. They replaced lists by flag maps FC, FD and FL. The FL flag was used to control the coding of the subset under current threshold. Furthermore, their proposed algorithm [10] has high performance with better restored image quality. Moreover, system complexity and memory requirements were reduced. However, better performance was achieved at low bit rates only.

The listless SPIHT-ZTR [19] used a modified SPIHT algorithm based on zero degree tree coding scheme. They replace lists with three significant maps which represent significance of individual nodes, descendent nodes and, grand descendent nodes. Therefore, memory requirements and coder complexity are reduced. This was attributed to sorting and refinement passes in the traditional SPIHT that were merged into one pass. Besides, their software simulation were conducted using 5/3 DWT filter. The performance of The Listless SPIHT- ZTR scheme was compared to the traditional SPIHT, both binary uncoded (SPIHT-BU) and arithmetic coding (SPIHT-AC). Therefore, the proposed SPIHT-ZTR achieved PSNR improvement of 0.14 dB at 1 bpp compared to SPIHT-BU with a slightly lower PSNR compared to SPIHT-AC. Also, SPIHT-ZTR reduced the memory requirement by 75% as compared to traditional SPIHT.

Liu et al. [20] presented a novel technique based on wavelet packet decomposition to enhance the compression accuracy of visual measuring image and improve compression quality. They decomposed image into low and high frequency components by wavelet packet. The wavelet coefficients in high frequency sub-bands were encoded by the improved Listless SPIHT. This technique [20] protected more detailed information and increased edge accuracy.

In strip-based coding, an image is acquired from an image sensor and the computed wavelet coefficients are buffered into a strip buffer for the SPIHT coding. Once completed, it is released and the next set of data lines can be received. Since only a portion of the full wavelet decomposition sub-band is encoded at a time, there is no need to wait for the full transformation of the image. Additionally, the coding can be done once a strip is fully buffered. Therefore, the coding can be carried out rapidly with greatly reduced memory storage.

In addition, a pipelined strip-based coding is introduced with the use of more than one strip for saving the DWT coefficients. In this case, the full occupied strip is achieved once the first line in Lth decomposition level is generated, and then strip is released for coding. Also, number of lines generated at lower levels exceeds the capacity allocated to that level in a strip. The number of lines in the first level = 2
                           L
                        
                        -1, the second level = 2
                           L
                        
                        -2…, and the last level = 2
                           L
                        
                        -
                        
                           L
                        , which call for more strips to the line at the Lth level to be generated. The number of strips depends upon the DWT level decomposition and it is calculated as follows: number of strips = 4−3/2
                           L
                        
                        -1 
                        [21] where L is the decomposition level. Each strip delivers its output to the next strip as the strip is filled when the Lth level is occupied with the first line of wavelet decomposition. Then, this strip is ready for encoding and it is added as an empty last strip. A second strip is released for the coding after 2
                           L
                         line and so on. Pipeline concept speeds processing time, and decreases memory used due to the use of strips instead of loading the whole image with line by line processing. A strip-based non embedded coding (SBNC) is proposed in [21] where coder performance is improved with 2 dB for five levels of decomposition compared with JPEG. On the other hand, there is performance degradation resulted from lack of rate distortion.

Chew [22] presented a virtual SPIHT tree structures for a very low memory strip-based image compression. Their framework reduces the memory requirements for the practical software and hardware implementations without sacrificing performance. They developed new tree structures, namely; SOT-B, SOT-C, SOT-D depending on the number of scales of the parent-children relationship. They applied this new structure for strip based implementations, and 75% memory reduction is obtained with the VSPIHT coding with new SOT's as compared to the reported work in [7].

Chew [19] implemented listless-ZTR technique using a soft core microprocessor based approach on a field programmable gate array (FPGA) for verifying the strip-based wavelet compression architecture. The proposed strip-based SPIHT-ZTR using SOT-C reduced the memory requirement by 75% compared to the traditional SPIHT using the original 2*2 SOT structure. However, it achieves less image quality at low bit rates.

The proposed algorithm introduces a modified strip based listless SPIHT algorithm for WMSN to reduce traditional SPIHT challenges. The implementation of low memory listless strip based on WMSN platforms helps in reducing system complexity, processing time, and memory used. The system complexity reduction is resulted from merging sorting and refinement pass into only one single pass with simplified coding algorithm. Also, there is no need for arithmetic coding which requires more memory for coding tables. In addition, by using strip based concept there is no need to wait for image full wavelet transform. This is due to the ability of carrying out coding once a strip is fully buffered. Also, the processing time will be reduced as a result of using the pipeline strip-based concept. This is attributed to the pipelined mode which helps remote sensing images. The pipelined mode results in efficient utilization of B.W in real time without buffering the full image. Also, the listless SPIHT eliminates the use of lists which minimizes memory storage. Furthermore, the listless compared with the traditional SPIHT requires a few bits to encode the same set of wavelet coefficients.


                     Fig. 3
                      depicts the sequence diagram of the proposed algorithm. It describes the listless pipelined strip-based coding for large images. First, few lines of image called a strip are loaded into a strip buffer. Next, a lifting based DWT in the DWT module is applied to compute the wavelet coefficients. Once the first line in N scale is generated, the output wavelet coefficients are stored back in the strip buffer for performing the proposed Listless SPIHT (fully occupied strip). Then, the strip is released for SPIHT encoding. After the SPIHT coding process is completed, the output bit stream can be obtained. This released strip for coding is reused to collect input data for achieving the pipeline concept. Then take another image strip and so on.

Once the first line in Lth decomposition level is generated, there is a need to use more than one strip for saving the DWT coefficients due to a full occupied strip. Then the strip is released for coding and the number of lines generated in the lower levels exceeds the capacity allocated to that level in a strip.

Listless structure is defined as:


                     C(x, y): wavelet transform coefficient coordinates of node (x, y).
                  


                     O(x, y): Direct offspring nodes coordinates of a node (x, y).
                  


                     D(x, y): all descendent coordinates set of node (x, y).
                  


                     L(x, y): all descendent coordinates set exception of (x, y) direct offspring.


                     L(x, y) = D(x, y)-O(x, y) [
                     
                        7
                     
                     ].
                  

And significance test function from SPIHT is defined as [7]:

                        
                           (1)
                           
                              
                                 s
                                 n
                                 
                                    (
                                    
                                       x
                                       ,
                                       y
                                    
                                    )
                                 
                                 =
                                 f
                                 
                                    (
                                    x
                                    )
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                             
                                          
                                          
                                             
                                                
                                                   m
                                                   a
                                                   x
                                                   |
                                                   
                                                      C
                                                      (
                                                      
                                                         x
                                                         ,
                                                         y
                                                      
                                                      )
                                                   
                                                   |
                                                
                                                ≥
                                                
                                                   2
                                                   n
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                0
                                                ,
                                             
                                          
                                          
                                             
                                                o
                                                t
                                                h
                                                e
                                                r
                                                w
                                                i
                                                s
                                                e
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

In the proposed technique, let C(x, y), D(x, y) and L(x, y) denote significance tests performed on individual nodes, descendent nodes and grand descendent nodes, respectively. However, the sent order of the D(x, y) and L(x, y) bits is different in LZC scheme [9,10]. The L(x, y) bits are sent immediately and D(x, y) is found to be significant. Three flag maps FC, FD, FL, represent significance maps of individual coefficients C(x, y), descendent coefficients and grand descendent coefficients, respectively. The proposed listless strip based SPIHT is shown in detail in Fig. 4.
                     
                  


                        Fig. 4 depicts the proposed listless strip based SPIHT flowchart. First, flag maps, individual coefficients flag (FC), descendent coefficients flag (FD) and grand descendent coefficients flag (FL) are initialized to zero. Additionally, the threshold value T is determined for significance test based on n value calculated from the following equation [7].

                           
                              (2)
                              
                                 
                                    n
                                    =
                                    
                                       log
                                       2
                                    
                                    
                                       (
                                       
                                          m
                                          a
                                          x
                                          (
                                          
                                             x
                                             ,
                                             y
                                          
                                          )
                                          {
                                          
                                             |
                                             
                                                C
                                                (
                                                
                                                   x
                                                   ,
                                                   y
                                                
                                                )
                                             
                                             |
                                          
                                          }
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

Then, descendent map (FD) is scanned to determine significant nodes. If FD(x, y) is significant (FD (x, y) = 1), four children nodes C(k, l) will be sent for each (k, l) that belongs to (x, y) node. Then, the significant of each children node should be checked to get output stream.

In the next stage, the FL is scanned to test the significance of grand descendent L(x, y) to decide whether four descendent nodes D(k, l) need to be sent or not. This depends on whether FL(x, y)=1 or 0. If FL(x, y) = 1, FD will be scanned for grand decedent nodes (k, l) (FD(k, l)). On the other hand, if FL(x, y) = 0, the significance function of grand decedent nodes Sn(L(x, y)) should be tested. Finally, if FD(x, y) = 0, there will be no significant grand descendent under (x, y), therefore, the descendent set nodes will be encoded only. The details of the proposed algorithm are depicted in Algorithm 1
                        .

Experimental study and analysis are performed on a Raspberry Pi model B. It has a broadcom BCM 2835 full HD multimedia application processor chip. The board contains a built in memory with size of 512MB SDRAM. Also, it has an onboard SD card slot. Additionally, USB connector is connected to WIFI USB module called EDimax Ew 7811un which is used for transferring the output bit stream between network nodes. Moreover, the Raspberry Pi has CSI port which is used to connect the Raspberry Pi camera board. The camera acts as a visual node to capture image sequences for performing processing on the image. Finally, our experiments are done on Raspberry Pi run with MATLAB 2014 package for Raspberry Pi hardware. Table 2
                      summarizes hardware specifications which are used in the implementation process.

The suggested system implementation can be summarized in the following steps:

                           
                              1.
                              Capture an image sequence by the camera board, and then store it on the SD memory card.

Apply the lifting based (CDF 9/7) DWT, then store wavelet coefficients back into strip buffer for SPIHT encoding.

Subsequently encode (compress) the image using the proposed listless strip based coding as described in Fig. 4.
                              

Output encoded bit stream will be stored back into the memory.

Once encoded, data are needed from the request side (host station), the compressed bit stream will be transmitted via WIFI module to the host station.

At host station side, the received bit stream will be decoded with the inverse steps of aforementioned encoding listless strip based algorithm. Then, the reconstructed (decompressed) image sequence will be delivered.

There are many different parameters that are taken into consideration during experimental study due to limited resources in WMSN. Those parameters include: (1) memory size, as image requires large memory storage, (2) processing complexity and processor speed which determine processing time and power consumption and (3) compression efficiency which affects the image quality.

The different variables that are used in the implementation steps are documented in Table 3.
                        
                     

In order to verify the high performance and accuracy of the proposed listless strip based SPIHT for WMSN, the proposed algorithm is used to encode 20 gray scale images with size of 512*512, and processing is done using MATLAB. Furthermore, the estimated results are used to obtain averaged peak signal-to-noise ratio (PSNR) and averaged processing time. The obtained results are compared with listless-ZTR proposed in [23] and the traditional SPIHT shown in Table 4
                        . The listless SPIHT-ZTR and traditional SPIHT depend on using LZT and strip based with SPIHT coding that are used by the presented method. It is worth noting that five level [11] lifting D9/7 wavelet transform is applied instead of the convolution wavelet transform because the best possible number of decomposition process is five levels as reported in [11].

The comparison between the PSNR of the restored images from the proposed algorithm; listless-ZTR SPHT [23] and SPIHT are shown in Table 4 and Fig. 5
                        a. Table 4 shows that the developed technique gives a better compression performance in terms of reconstructed image quality (PSNR) than traditional SPIHT and the listless SPIHT-ZTR at all bit rates as the PSNR value increases with increasing the number of bit rates. The PSNR average value of the presented method is equal to 1 dB for all bit rates between 0.1 and 2 bpp compared to the listless SPIHT-ZTR [23], and 1.27 dB compared to the traditional SPIHT, which confirms the robustness and accuracy of the proposed approach. Also, Table 5
                         and Fig. 5b compare between the traditional SPIHT, the SPIHT-based encoder introduced in [24] and our framework for coding image of size 128*128 pixels. Obviously, the PSNR values of the presented algorithm are in excellent agreement with those of the SPIHT-based encoder [24], which maintains good image quality (PSNR > 30) for bit rates >1 bpp. However, there is superiority of the proposed algorithm compared to the traditional SPIHT in terms of image quality (PSNR) of 1.63 dB on average. This is because the number of bits required to encode the image in the proposed algorithm is fewer than those in the listless-ZTR SPIHT [23] and SPIHT based encoder [24].

Finally, in terms of image quality (PSNR) comparisons, we compare our algorithm to the SPIHT-ZTR proposed in [19] for Lena and Baboon images with size of 512*512 pixels as shown in Fig. 5c and d, and Table 6
                        . It is revealed from the results that, an average PSNR improvement of 0.4 (on an average) is obtained using the proposed coding method.

Furthermore, Tables 7
                         and 8
                         illustrate a noticeable reduction in the processing time of the proposed algorithm compared to the traditional SPIHT. On average, the proposed algorithm offers 67% time reduction compared to the SPIHT for encoding 20 test images as shown in Fig. 6

                        a. However, according to Fig. 6
b and c, the proposed method achieves 65% time reduction for encoding Lena and Baboon images. Certainly, the reduction in the processing time decreases the system complexity and hence the power consumption per node in WMSN. This is because merging sorting and refinement passes into only one single pass reduces coding complexity. Further, the use of pipeline strip-based concept minimizes the processing time.

As previously mentioned, the listless SPIHT eliminates the use of lists which reduces memory storage. In addition, using the strip based concept allows coding to be carried out once a strip is fully buffered which also contributes in memory reduction. The experimental results show that the proposed coding function requires 4504 Kb of memory during the processing as shown in Table 9
                        . This means that, the proposed algorithm offers 71% memory reduction compared to SPIHT coder and 10% on average compared to strip-based SPIHT [21].

Finally, for the power consumption, Joulemeter is a software tool that estimates the power consumption (from CPU) of an application. As documented in Table 10
                         and Fig. 7
                        , the proposed coding method achieves considerable power saving which reaches to 27% approximately compared to the SPIHT-based encoder [24]. This is attributed to, simplifying encoding algorithm and acceleration of coding speed.

Summing up the above, the experimental results show that the proposed algorithm introduced in this paper achieves higher compression ratio in terms of image quality (PSNR). In addition, it reduces processing time and memory usage compared to the traditional SPIHT. Therefore, power consumption and system complexity are reduced. Consequently, the proposed technique can be operated on restricted resource environments such as WMSN.

@&#CONCLUSION@&#

To conclude, the traditional SPIHT algorithm needs three lists to store significance information which represents an essential problem for implementation on limited resource environments such as WMSN. Therefore, hardware cost and complexity of image coders are increased due to large memory requirement. Based on listless SPIHT and strip based concept, this paper introduced a modified listless strip based SPIHT for WMSN. First, the image is decomposed into strips before coding process and the SPIHT lists are replaced with flag map. Besides, the sent order of descendent and grand descendent bits is altered compared to LZC. Grand descendent nodes L (x, y) bits are sent immediately when descendent nodes D(x, y) is found to be significant. Additionally, the strip based concept cancels the need to wait for full wavelet transform of the image. This is due to the ability of carrying out the coding once a strip is fully buffered. Moreover, the structure of LZC is adapted and combined with strip based architecture. Finally, lifting based DWT (CDF 9/7) instead of DWT convolutional based filter is used to realize wavelet transform. All those features contributed in 71% memory reduction as well as, minimizing processing time with 65%. Furthermore, the experimental results verify the effectiveness of the proposed algorithm in enhancing compression performance of reconstructed image in terms of image quality and PSNR with average 1 dB for bit rates between 0.1 and 2 bpp. As future paths of research, we will analyze the effect of changing spatial orientation tree (SOT) structure on the performance of proposed algorithm and study its effect on memory reduction. In addition, we will perform a more careful study about merging region of interest (ROI) with proposed algorithm to be more intelligent.

@&#REFERENCES@&#

