@&#MAIN-TITLE@&#Adaptive large window correlation for optical flow estimation with discrete optimization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A method based on using large correlation windows with adaptive support-weights


                        
                        
                           
                           Three new weighting constraints from image gradient, color statistics and occlusion


                        
                        
                           
                           Contributes to suppress the effect of cluttered background in the windows


                        
                        
                           
                           Elevates the quality of estimations especially on object boundaries


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Window correlation

Optical flow

Data cost

Discrete optimization

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Optical flow estimation aims to find dense visual correspondence between reference and target images. Obtaining dense correspondence between images can benefit computer vision algorithms, such as super-resolution, video denoising, and 3D scene reconstruction, of which performances are easily influenced by image matching quality [1–3]. A basic clue to the problem is the brightness constancy constraint, assuming that the intensity value of a pixel may not change in both the images. However, optical flow estimation remains a difficult problem as it is highly under-constrained, with ambiguity that one pixel in the reference image may correspond to many pixels in the target image.

Various approaches have been introduced. In [4], a global formulation is combined with the linearized brightness constancy assumption, to enforce spatial coherence between locally adjacent flows, using a quadratic function. Although this seminal approach has been employed as a baseline algorithm in numerous follow-up researches, but it suffers from over-penalized outliers included in the motion boundaries. To address this challenge, many works proposed more robust penalizing functions. Black et al. [5] replace the quadratic error function with the Lorentzian function, which is robust to outliers, but is very difficult to find the optimum due to its non-convexity. The functions based on L1-norm [6–8] have been shown to be a good substitute for the non-convex robust function, utilizing variational methods for optimization.

Filtering approaches may also be applied to address the boundary issue. In [9], a multi-cue driven bilateral filter is employed to discard background clutter in the smoothing kernel. Sun et al. [10] reveal that applying the median filter to intermediate flow estimations [11] is a very effective approach to the issue. They incorporate this heuristic scheme in their energy function as non-local L1 smoothness prior and present state-of-the-art results.

While most of these works employ the variational method for optimization, several works reported promising results using discrete optimization methods [12–14]. In [15], proposal solutions using continuous optimization are first computed and then, combined with discrete optimization. To reduce the high complexity of discrete methods, Glocker et al. [16] incrementally update flow vectors, only within highly probable regions. In [17], an input image is represented as a tree of over-segmented regions, which defines an energy function to be optimized by dynamic programming. A non-local smoothness prior on the discrete framework [18] is also proposed, showing competitive results to the variational models. In contrast, Rhemann et al. [19] present plausible estimations, using cost-volume filtering without using any prior information, which reduces much of the computational complexity.

In this work, we address the estimation based on the discrete MAP–MRF framework [16,20], comprising the data matching cost and the spatial smoothness cost. In comparing brightness of pixel for the data cost calculation, we employ local neighborhoods of the pixel [21,7], instead of the single pixel of interest. This pixel set of local neighborhoods is referred to as a correlation window. We aim to improve the estimation, by enhancing the quality of the correlation window matching.

One critical factor for the quality of the matching is the size of the window. A large correlation window can address the aperture phenomenon, and other robustness issues, such as illumination change and/or random noise. On the other hand, the large window may also include cluttered background motion segments, which may cause incorrect window matching on motion boundaries. To address this issue, the support-weight based approach [22,23] has been widely employed in the field of stereo matching. It imposes different weights on each pixel t in the window according to geometric and photometric constraints, e.g., the pixel's proximity and the color difference to the central pixel s, defined as follows:
                           
                              (1)
                              
                                 
                                    
                                       w
                                       s
                                       prox
                                    
                                    
                                       t
                                    
                                    =
                                    exp
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            x
                                                            s
                                                         
                                                         −
                                                         
                                                            x
                                                            t
                                                         
                                                      
                                                   
                                                
                                                2
                                             
                                             
                                                2
                                                
                                                   σ
                                                   g
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       w
                                       s
                                       color
                                    
                                    
                                       t
                                    
                                    =
                                    exp
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   
                                                      
                                                         I
                                                         
                                                            s
                                                         
                                                         −
                                                         I
                                                         
                                                            t
                                                         
                                                      
                                                   
                                                
                                                2
                                             
                                             
                                                2
                                                
                                                   σ
                                                   p
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where x
                        
                           s
                        , and x
                        
                           t
                         indicate 2D coordinates, and I(s), and I(t) mean color values of the points s and t, respectively.

This strategy gives an effect accentuating the foreground object, and outperforms previous works, such as adaptively changing window size [24] and using multiple windows [25]. However, the fixed variances (σ
                        
                           g
                        , σ
                        
                           p
                        ) that are applied to all image regions can degrade the performance on certain image regions, particularly for very large correlation windows. Learning the parameters on test images can be a solution, but it requires extra time complexity, and may not cover the variety of real world scenes.

We propose to employ three new types of weight constraints, which are adaptively adjusted, based on contents in the correlation window.


                        Gradient structure constraint: The previous proximity constraint applies the homogeneous weight to every correlation window regardless of the image contents in each window. This may help coherent estimation on a single large object, but may degrade results on objects with detailed geometric structures, such as small branches of a tree. Since such objects form strong image gradients in general, we propose to use the structure tensor of the window, to adaptively apply the weight distribution according to the geometric structure. We assign strong weights normal to the predominant gradient directions in the window. As a result, the shape of weighted region in the window appears to be a sharp ellipse along with the objects, reducing the effect of background regions outside the objects.


                        Perceptual color constraint: In the previous color constraint in Eq. (2), σ
                        
                           p
                         needs to be small enough, to clearly distinguish a foreground object from background objects by their color difference. However, the small variance may result in over-segmented estimation on a single large object containing various colors inside, which could stem from object texture, image noise or specular illumination. Addressing the issue, we propose to use perceptual color distance that takes account of color distribution and accordingly calculate the weight. By applying a new perceptual color distance instead of the Euclidean color distance, we could obtain relatively high coherence inside the single object, while using the small σ
                        
                           p
                         for the boundary distinction.


                        Occlusion constraint: Occlusion indicates the phenomenon that a certain area of the reference image is not seen in the target image due to various reasons, such as object movement and/or view change. Since the pixels in the occlusion do not correspond to any pixel in the target image, we propose to exclude this region in computing widow correlation.

We compare our results with results using the proximity and color constraints in [22,23], and show that the proposed constraints outperform the previous constraints in our experiments. To demonstrate the effect of the occlusion constraint, we show that adding the occlusion constraints to the geometric and photometric constraints leads to improvements in quantitative evaluation. We also show that the proposed constraints jointly yield highly competitive performance on various datasets, especially on motion boundaries.

The rest of this paper is organized as follows. Section 2 briefly defines our energy formulation for the discrete framework. In Section 3 we propose the new adaptive correlation window design and show its advantages. Section 4 introduces a method to enhance the efficiency of the discrete optimization, and Section 5 presents experimental results evaluating the proposed model. We finalize this work by providing the conclusion and the future work in Section 6.

@&#BACKGROUND@&#

Let 
                        G
                      be an undirected graph with a node set 
                        V
                      and an edge set 
                        E
                     . A node in 
                        V
                      corresponds to a pixel in the reference image. Let l
                     
                        s
                      be a label, i.e., a random variable for a node s in some discrete sample space 
                        
                           
                              L
                              s
                           
                           =
                           
                              1
                              …
                              
                                 L
                                 2
                              
                           
                        
                     , representing the quantized displacement vector set 
                        
                           
                              T
                              s
                           
                           =
                           
                              
                                 
                                    u
                                    s
                                 
                                 
                                    1
                                 
                                 ,
                                 …
                                 ,
                                 
                                    u
                                    s
                                 
                                 
                                    
                                       L
                                       2
                                    
                                 
                              
                           
                        
                     . Note the displacement vector is two dimensional, i.e., u
                     
                        s
                     
                     =(u
                     
                        s
                     ,v
                     
                        s
                     ), and each dimension is homogeneously quantized by L labels. Optical flow estimation can be expressed as finding the labels for each pixel, which minimizes an energy function such as:
                        
                           (3)
                           
                              
                                 
                                    
                                       ∑
                                       
                                          s
                                          ∈
                                          V
                                       
                                    
                                 
                                 
                                 
                                    Φ
                                    s
                                 
                                 
                                    
                                       l
                                       s
                                    
                                 
                                 +
                                 
                                    
                                       ∑
                                       
                                          
                                             s
                                             t
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                 
                                    Ψ
                                    st
                                 
                                 
                                    
                                       
                                          u
                                          s
                                       
                                       
                                          
                                             l
                                             s
                                          
                                       
                                       −
                                       
                                          u
                                          t
                                       
                                       
                                          
                                             l
                                             t
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     where Φ
                        s
                     (⋅) imposes the cost for matching the correlation window for s, and Ψ
                        st
                     (⋅) denotes the spatial smoothness term between s and t.

The discrete sample space 
                           L
                         is a finite set. The size of the space 
                           
                              L
                           
                         (=
                        L
                        2) is proportional to the maximum displacement over the desired flow precision μ, such that, 
                           
                              |
                              L
                              |
                              ∝
                              max
                              
                                 T
                              
                              /
                              μ
                           
                        . If the given scenes contain very large displacement, or if we desire very accurate flow estimation, using a big sample space with sufficient number of labels would be a simple solution; however, it may drastically increase computational complexity and memory requirement. To yield similar estimation results using fewer labels, we employ the following coarse-to-fine approaches.


                        Image pyramid: We build Gaussian image pyramids for the input images, and find the rough solution from the top level of the pyramids. Down to the next level, the dense flow field is estimated by interpolating the coarse solution, and is provided as the initial flow field for further estimation. The number of pyramid level is determined by 
                           
                              
                                 log
                                 d
                              
                              
                                 
                                    max
                                    
                                       T
                                    
                                    /
                                    |
                                    L
                                    |
                                 
                              
                           
                         where d
                        −1 is the downsampling factor building the image pyramid. We use d
                        =2 in our experiments.


                        Incremental flow update: To produce high precision flow using the limited number of labels, we iteratively find the incremental flow based on the current flow field. For the i
                        
                           th
                         iteration, the flow precision is set to f
                        (i)
                        =0.5f
                        (i
                           −1), so that the discrete algorithm employs smaller quantization unit for the incremental flow. We note, in practice, the flow accuracy at a higher level pyramid strongly influences the performance of the next level pyramid; thus we run this process to obtain sufficiently high precision at every pyramid level.

A virtue of the discrete approach is that we can test various data matching cost Φ
                           s
                        (l
                        
                           s
                        ) in Eq. (3), without changing the optimization scheme according to the cost function. We tested SAD (Sum of Absolute Difference), SSD (Sum of Squared Difference), and NCC (Normalized Cross Correlation), which are combined with GIP (Gradient Inner Product) [16]. GIP is a measure for geometric constancy [26], computing the angle between the gradients of two input images. Except NCC, weighted versions of these matching criteria are defined using the support-weight on each pixel in the window, such that:
                           
                              (4)
                              
                                 
                                    
                                       Φ
                                       s
                                    
                                    
                                       
                                          l
                                          s
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   t
                                                   ∈
                                                   W
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          
                                          
                                             w
                                             s
                                          
                                          
                                             t
                                          
                                          
                                             w
                                             
                                                s
                                                ′
                                             
                                          
                                          
                                             
                                                t
                                                ′
                                             
                                          
                                          ρ
                                          
                                             t
                                             
                                                t
                                                ′
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   t
                                                   ∈
                                                   W
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          
                                          
                                             w
                                             s
                                          
                                          
                                             t
                                          
                                          
                                             w
                                             
                                                s
                                                ′
                                             
                                          
                                          
                                             
                                                t
                                                ′
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where W(s) is a node set in the window supporting s, and w
                        
                           s
                         means a weight function for s. s′ and t′ are points in the target image, where s, and t in the reference image are mapped to by displacement vector u(l
                        
                           s
                        ). ρ(t,t′) denotes a similarity measure between pixels at t and t′, for example of GIP:
                           
                              (5)
                              
                                 
                                    ρ
                                    
                                       s
                                       
                                          s
                                          ′
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∇
                                                
                                                   I
                                                   1
                                                
                                                
                                                   s
                                                
                                             
                                             
                                                
                                                   ∇
                                                   
                                                      I
                                                      1
                                                   
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          ⋅
                                          
                                             
                                                ∇
                                                
                                                   I
                                                   2
                                                
                                                
                                                   
                                                      s
                                                      ′
                                                   
                                                
                                             
                                             
                                                
                                                   ∇
                                                   
                                                      I
                                                      2
                                                   
                                                   
                                                      
                                                         s
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                    ,
                                 
                              
                           
                        where the subscripts 1 and 2 for I denote the reference and the target images respectively. The weighted NCC [23] is defined as follows:
                           
                              (6)
                              
                                 
                                    
                                       Φ
                                       s
                                       WNCC
                                    
                                    
                                       
                                          l
                                          s
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   t
                                                   ∈
                                                   W
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          
                                          
                                             w
                                             s
                                          
                                          
                                             t
                                          
                                          
                                             w
                                             
                                                s
                                                ′
                                             
                                          
                                          
                                             
                                                t
                                                ′
                                             
                                          
                                          
                                             J
                                             1
                                          
                                          
                                             s
                                             t
                                          
                                          
                                             J
                                             2
                                          
                                          
                                             
                                                s
                                                ′
                                             
                                             
                                                t
                                                ′
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         t
                                                         ∈
                                                         W
                                                         
                                                            s
                                                         
                                                      
                                                   
                                                
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               w
                                                               s
                                                            
                                                            
                                                               t
                                                            
                                                            
                                                               J
                                                               1
                                                            
                                                            
                                                               s
                                                               t
                                                            
                                                         
                                                      
                                                   
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         t
                                                         ∈
                                                         W
                                                         
                                                            s
                                                         
                                                      
                                                   
                                                
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               w
                                                               
                                                                  s
                                                                  ′
                                                               
                                                            
                                                            
                                                               
                                                                  t
                                                                  ′
                                                               
                                                            
                                                            
                                                               J
                                                               2
                                                            
                                                            
                                                               
                                                                  s
                                                                  ′
                                                               
                                                               
                                                                  t
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              J
                              
                                 s
                                 t
                              
                              =
                              I
                              
                                 t
                              
                              −
                              
                                 I
                                 ¯
                              
                              
                                 s
                              
                           
                         and 
                           
                              
                                 I
                                 ¯
                              
                              
                                 s
                              
                           
                         is the mean intensity of pixels in W(s).

The combination of GIP and each criterion is implemented by summing two terms with a balancing parameter λ; e.g., GIP+NCC is defined as follows:
                           
                              
                                 
                                    
                                       Φ
                                       s
                                    
                                    
                                       
                                          l
                                          s
                                       
                                    
                                    =
                                    λ
                                    
                                       Φ
                                       s
                                       WGIP
                                    
                                    
                                       
                                          l
                                          s
                                       
                                    
                                    +
                                    
                                       
                                          1
                                          −
                                          λ
                                       
                                    
                                    
                                       Φ
                                       s
                                       WNCC
                                    
                                    
                                       
                                          l
                                          s
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

We empirically found that GIP+NCC with λ
                        =0.7 showed the best performance among other combinations, and used it through experiments in the work.

The weight function in Eq. (4) consists of three types of constraints. We assume that all constraints are independent events and that they can be measured individually. Then the function is determined by multiplying each factor as follows:
                        
                           (7)
                           
                              
                                 
                                    w
                                    s
                                 
                                 
                                    t
                                 
                                 =
                                 
                                    w
                                    s
                                    grad
                                 
                                 
                                    t
                                 
                                 
                                    w
                                    s
                                    perc
                                 
                                 
                                    t
                                 
                                 
                                    w
                                    s
                                    occ
                                 
                                 
                                    t
                                 
                                 ,
                              
                           
                        
                     where w
                     
                        s
                     
                     
                        grad
                     , w
                     
                        s
                     
                     
                        perc
                      and w
                     
                        s
                     
                     
                        occ
                      are functions related to the three proposed constraints.

At the point where strong gradient is found, we may expect distinct object boundary in the direction normal to the gradient. By adaptively imposing weak weight along this gradient, the pixels across the boundary have less effect on the matching cost calculation. This constraint can be implemented using the structure tensor (i.e., second moment matrix) of a correlation window. The eigenvectors of the structure tensor indicate the predominant directions of the gradient in the window. We define an anisotropic tensor T
                        
                           p
                        (s) with the structure tensor of the window around s as follows:
                           
                              (8)
                              
                                 
                                    
                                       T
                                       g
                                    
                                    
                                       s
                                    
                                    =
                                    
                                       1
                                       
                                          D
                                          g
                                       
                                    
                                    
                                       
                                          
                                             1
                                             
                                                
                                                   W
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   W
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          ∇
                                          
                                             I
                                             g
                                          
                                          
                                             k
                                          
                                          ∇
                                          
                                             I
                                             g
                                          
                                          
                                             
                                                k
                                             
                                             T
                                          
                                          +
                                          
                                             ν
                                             2
                                          
                                          1
                                       
                                    
                                    ,
                                 
                              
                           
                        where 1 means the 2×2 identity matrix, and ∇
                        I
                        
                           g
                         means the gradient of the gray-scaled input image. D
                        
                           g
                         represents a denominator for normalization, defined as the trace of the matrix in the parenthesis. ν is the parameter controlling the degree of isotropy. If ν is large enough, T
                        
                           g
                        (s) becomes close to the identity matrix, and if ν is close to zero, T
                        
                           g
                        (s) is almost identical to the second moment matrix.

With this tensor, we define the weight function as follows:
                           
                              (9)
                              
                                 
                                    
                                       w
                                       s
                                       grad
                                    
                                    
                                       t
                                    
                                    =
                                    exp
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                               s
                                                            
                                                            −
                                                            
                                                               x
                                                               t
                                                            
                                                         
                                                      
                                                   
                                                   T
                                                
                                                
                                                   T
                                                   g
                                                
                                                
                                                   s
                                                
                                                
                                                   
                                                      
                                                         x
                                                         s
                                                      
                                                      −
                                                      
                                                         x
                                                         t
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                                
                                                   σ
                                                   g
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        The effect of the proposed constraint is demonstrated in Fig. 1
                        . We sample two points (shown in red boxes in (d)) and present their weight distributions. Compared to the previous proximity constraint shown in (e), the proposed constraint can impose low weight on background regions; e.g., around the branch as shown in (f). As a result, the proposed constraint presents improvements, with less foreground-fattening effect around fine structures of the scene, as seen in (b) compared to (c). While the weight distributions for the previous constraint are homogeneous regardless of the sample points, the proposed constraint controls degree of isotropy according to the image content, as presented in (g).

To define a new color distance between two pixels, proposed perceptual color constraint makes use of the Mahalanobis distance style, instead of the Euclidean distance. Assuming the color distance in a correlation window share the same distribution, we define the new color distance measure using the covariance matrix of color difference of adjacent pixels in the window. For a three-channel color space, the covariance matrix in the window around a node s is defined as follows:
                           
                              (10)
                              
                                 
                                    
                                       Σ
                                       c
                                    
                                    
                                       s
                                    
                                    =
                                    
                                       1
                                       
                                          D
                                          p
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         0
                                                      
                                                      ,
                                                      
                                                         C
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         0
                                                      
                                                      ,
                                                      
                                                         C
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         0
                                                      
                                                      ,
                                                      
                                                         C
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         1
                                                      
                                                      ,
                                                      
                                                         C
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         1
                                                      
                                                      ,
                                                      
                                                         C
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         1
                                                      
                                                      ,
                                                      
                                                         C
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         2
                                                      
                                                      ,
                                                      
                                                         C
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         2
                                                      
                                                      ,
                                                      
                                                         C
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   σ
                                                   
                                                      
                                                         C
                                                         2
                                                      
                                                      ,
                                                      
                                                         C
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where σ
                        
                           X,X
                        , and σ
                        
                           X,Y
                         mean the variance and covariance of channel X,
                        Y
                        ∈{C
                        0,C
                        1,C
                        2} for the gradient image ∇
                        I. D
                        
                           p
                         represents a denominator for normalization, defined as the trace of the matrix. In experiments, we use the CIELab color space.

We define the weight function to adaptively compute the difference of color:
                           
                              (11)
                              
                                 
                                    
                                       w
                                       s
                                       perc
                                    
                                    
                                       t
                                    
                                    =
                                    exp
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      −
                                                      
                                                         
                                                            I
                                                            
                                                               s
                                                            
                                                            −
                                                            I
                                                            
                                                               t
                                                            
                                                         
                                                      
                                                   
                                                
                                                T
                                             
                                             
                                                Σ
                                                c
                                                
                                                   −
                                                   1
                                                
                                             
                                             
                                                s
                                             
                                             
                                                
                                                   I
                                                   
                                                      s
                                                   
                                                   −
                                                   I
                                                   
                                                      t
                                                   
                                                
                                             
                                          
                                          
                                             2
                                             
                                                σ
                                                p
                                                2
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     


                        Fig. 2
                         demonstrates the effect of the perceptual color constraint. The estimation in (b) employs σ
                        
                           p
                        
                        =2.4, and the flow around the right hand shows foreground-fattening effect. Applying a smaller variance (e.g., σ
                        
                           p
                        
                        =1.8) addresses the problem as seen in (c), but it causes over-segmentation artifact for the flow around the left hand. In contrast, the proposed constraint using the same variance σ
                        
                           p
                        
                        =1.8 addresses the problem without the artifact, as shown in (d).

In the reference image, a certain area of a scene can disappear in the target image for some reasons, e.g., object movement and/or view change. Since the pixels in the area do not play any role in correlating the windows, we may ignore those pixels by setting the weight to zero. Given an occlusion map 
                           
                              O
                              =
                              
                                 
                                    v
                                    
                                       s
                                    
                                    |
                                    s
                                    ∈
                                    V
                                 
                              
                           
                        , where the binary variable v(s) indicates if the pixel s is occluded or not, we define the weight function as follows:
                           
                              (12)
                              
                                 
                                    
                                       w
                                       s
                                       occ
                                    
                                    
                                       t
                                    
                                    =
                                    1
                                    −
                                    v
                                    
                                       t
                                    
                                    .
                                 
                              
                           
                        
                     

Although the occlusion map is not initially given, we can generate it by checking consistency, in the iterations for the incremental flow update. In each iteration, we additionally estimate backward flow from the target to the reference, and check consistency of a pixel using the following equation:
                           
                              (13)
                              
                                 
                                    v
                                    
                                       s
                                    
                                    =
                                    
                                       
                                          
                                             
                                                0
                                             
                                             
                                                if
                                             
                                             
                                                ∥
                                                
                                                   u
                                                   s
                                                
                                                +
                                                
                                                   
                                                      
                                                         u
                                                         ′
                                                      
                                                   
                                                   
                                                      s
                                                      ′
                                                   
                                                
                                                ∥
                                                <
                                                γ
                                             
                                          
                                          
                                             
                                                1
                                             
                                             
                                                else
                                             
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where u
                        
                           s
                         means the forward flow at x
                        
                           s
                        , 
                           
                              
                                 
                                    u
                                    ′
                                 
                              
                              
                                 s
                                 ′
                              
                           
                         means the backward flow at 
                           
                              
                                 x
                                 
                                    s
                                    ′
                                 
                              
                              =
                              
                                 x
                                 s
                              
                              +
                              
                                 u
                                 s
                              
                           
                        , and γ is a threshold parameter. In experiments, we found the optimal γ
                        =2.5 by quantitative evaluation of the Middlebury test dataset, which produces the minimum average end-point error, (i.e., EPE=0.310,) as shown in Table 1
                        .


                        Fig. 3
                         demonstrates the qualitative effect of the occlusion constraints. The example image contains complex motion boundaries with non-rigid movement and similar color distribution. The result with a non-weighted window presents the obvious foreground-fattening effect around object boundaries. Although utilizing the proximity and the color constraints can reduce such an effect, the occlusion constraints present much better results with more structured mesh around motion boundaries.

To find the optimal solution for the MRF formulation in Eq. (3), we employ the TRW-S [13], which has shown state-of-the-art results [27] in many discrete framework applications. The asymptotic computational complexity of the TRW-S, in general, is 
                        
                           O
                           
                              
                                 |
                                 V
                                 |
                                 |
                                 L
                                 
                                    |
                                    2
                                 
                              
                           
                        
                     . In our current framework, we may rewrite it as 
                        
                           O
                           
                              
                                 |
                                 V
                                 |
                                 
                                    L
                                    4
                                 
                              
                           
                        
                     . Since the complexity is dominated by the number of labels, and our method requires an adequate number of labels to yield plausible estimation results, we introduce a technique to address the complexity issue.

We apply the node decomposition scheme [28], reducing the complexity to 
                           
                              O
                              
                                 
                                    |
                                    V
                                    |
                                    
                                       L
                                       2
                                    
                                 
                              
                           
                        . The scheme decomposes the node 
                           
                              s
                              ∈
                              V
                           
                         into two nodes 
                           
                              
                                 s
                                 x
                              
                              ∈
                              
                                 V
                                 x
                              
                           
                         and 
                           
                              
                                 s
                                 y
                              
                              ∈
                              
                                 V
                                 y
                              
                           
                        . We may define 
                           
                              l
                              
                                 s
                                 i
                              
                           
                         as a random variable for a node s
                        
                           i
                         in some discrete sample space 
                           
                              
                                 L
                                 
                                    s
                                    i
                                 
                              
                              =
                              
                                 1
                                 …
                                 L
                              
                           
                        , representing the quantized 1D displacement vector set 
                           
                              
                                 T
                                 
                                    s
                                    i
                                 
                              
                              =
                              
                                 
                                    
                                       u
                                       
                                          s
                                          i
                                       
                                    
                                    
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       u
                                       
                                          s
                                          i
                                       
                                    
                                    
                                       L
                                    
                                 
                              
                           
                         where i
                        ∈{x,y}. The original displacement vector u
                        
                           s
                        (l
                        
                           s
                        ) corresponds to (
                           
                              
                                 u
                                 
                                    s
                                    x
                                 
                              
                              
                                 
                                    l
                                    
                                       s
                                       x
                                    
                                 
                              
                              ,
                              
                                 u
                                 
                                    s
                                    y
                                 
                              
                              
                                 
                                    l
                                    
                                       s
                                       y
                                    
                                 
                              
                           
                        ). The original edge set 
                           E
                         is decomposed into 
                           
                              E
                              x
                           
                         and 
                           
                              E
                              y
                           
                        , and the new edge set 
                           
                              E
                              xy
                           
                         is introduced, to account for the pairwise potential between the decomposed nodes. Fig. 4
                         shows a conceptual illustration of the decomposition scheme. The original MRF formulation in Eq. (3) is updated as follows:
                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         s
                                                         x
                                                      
                                                      
                                                         s
                                                         y
                                                      
                                                   
                                                   ∈
                                                   
                                                      E
                                                      xy
                                                   
                                                
                                             
                                          
                                          
                                          
                                             Φ
                                             xy
                                          
                                          
                                             
                                                l
                                                
                                                   s
                                                   x
                                                
                                             
                                             
                                                l
                                                
                                                   s
                                                   y
                                                
                                             
                                          
                                          
                                          +
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         s
                                                         x
                                                      
                                                      
                                                         t
                                                         x
                                                      
                                                   
                                                   ∈
                                                   
                                                      E
                                                      x
                                                   
                                                
                                             
                                          
                                          
                                          
                                             Ψ
                                             st
                                          
                                          
                                             
                                                
                                                   u
                                                   
                                                      s
                                                      x
                                                   
                                                
                                                
                                                   
                                                      l
                                                      
                                                         s
                                                         x
                                                      
                                                   
                                                
                                                −
                                                
                                                   u
                                                   
                                                      t
                                                      x
                                                   
                                                
                                                
                                                   
                                                      l
                                                      
                                                         t
                                                         x
                                                      
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         s
                                                         y
                                                      
                                                      
                                                         t
                                                         y
                                                      
                                                   
                                                   ∈
                                                   
                                                      E
                                                      y
                                                   
                                                
                                             
                                          
                                          
                                          
                                             Ψ
                                             st
                                          
                                          
                                             
                                                
                                                   u
                                                   
                                                      s
                                                      y
                                                   
                                                
                                                
                                                   
                                                      l
                                                      
                                                         s
                                                         y
                                                      
                                                   
                                                
                                                −
                                                
                                                   u
                                                   
                                                      t
                                                      y
                                                   
                                                
                                                
                                                   
                                                      l
                                                      
                                                         t
                                                         y
                                                      
                                                   
                                                
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

We note that the original unary potential Φ
                           s
                         is updated to the pairwise potential Φ
                           xy
                        , defined by the decomposed nodes. Unary potentials for these nodes are undefined, imposing no cost on any configuration. As the number of labels for a node reduces to L, the complexity of the TRW-S also reduces to 
                           
                              O
                              
                                 
                                    |
                                    V
                                    |
                                    
                                       L
                                       2
                                    
                                 
                              
                           
                        .

In addition, the decomposition enables defining the pairwise potential Ψ
                           st
                         as linear to the label difference; that is, we may rewrite Ψ
                           st
                        (u
                        
                           s
                        (l
                        
                           s
                        )−
                        u
                        
                           t
                        (l
                        
                           t
                        )) as 
                           
                              
                                 
                                    
                                       Ψ
                                       ′
                                    
                                 
                                 st
                              
                              
                                 
                                    
                                       l
                                       s
                                    
                                    −
                                    
                                       l
                                       t
                                    
                                 
                              
                           
                        . Then we can apply the min-convolution algorithm [29] for the TRW-S, reducing the time complexity to 
                           
                              O
                              
                                 
                                    |
                                    V
                                    |
                                    L
                                 
                              
                           
                        . In experiments, we set 
                           
                              
                                 
                                    
                                       Ψ
                                       ′
                                    
                                 
                                 st
                              
                              
                                 
                                    
                                       l
                                       s
                                    
                                    −
                                    
                                       l
                                       t
                                    
                                 
                              
                              =
                              α
                              |
                              
                                 l
                                 s
                              
                              −
                              
                                 l
                                 t
                              
                              |
                           
                        , which is a parametric and robust convex penalizer.

@&#EXPERIMENTAL RESULTS@&#

We validate our flow estimation method on the Middlebury flow dataset [30]. The dataset contains several image sequences of indoor and outdoor scenes, containing various real or synthetic objects.

We assumed the maximum deformation for each direction to be 32, and quantized each direction by 4 with the target precision μ
                     =0.05. The size of correlation windows was fixed to 35×35. The parameters affecting the relative influence and strictness of the different constraints, were evaluated in Section 5.2, and fixed to optimal values for other experiments: σ
                     
                        g
                     
                     =7.2, σ
                     
                        p
                     
                     =1.8. By varying σ
                     
                        g
                     , we can control the effective area with non-negligible weight in the window, and so we may think σ
                     
                        g
                      implicates the actual window size. Other parameters were empirically tuned to α
                     =0.05 and ν
                     =10−6.

To show the effects of each proposed constraint, Fig. 5
                         provides quantitative analysis comparing estimation errors obtained with our full algorithm (“full”) to errors computed with various constraints removed. Removing the perceptual constraint (“w/o perc”) causes significant degradation compared to the full algorithm, particularly when using the large windows (e.g., σ
                        
                           p
                        
                        >5.) Not using the gradient structure constraint (“w/o grad”) also leads to an amount of increase in errors, as the window size increases. Leaving out the occlusion constraint (“w/o occ”) also shows worse results than the full algorithm; although the difference is not significant, due to the fact that the occluded region is sparse in general. Fig. 6
                         shows the visualization of the flow results, obtained with our full algorithm.

We additionally validate our technique through comparisons with the previous support-weight constraints, employing the bilateral filtering-based weights [22,23]; i.e., proximity and color constraints which correspond to the gradient structure and perceptual color constraints. The occlusion constraint is excluded for fair comparison.


                        Fig. 7(a) compares the geometric constraints without the photometric constraints. Although the geometric constraints generally degrade performance as we apply larger windows, the proposed constraint (“grad”) presents lower EPE than the previous constraint (“prox”) for all varied parameters. Next, the photometric constraints are compared in Fig. 7(b). We chose a mid-size window (e.g., 15×15) and varied σ
                        
                           p
                        , from 0.6 to 4.8. The perceptual color (“perc”) yields better estimations with relatively small variances, presenting the lowest EPE at σ
                        
                           p
                        
                        =1.8. Finally, we compare the combinations of the geometric and photometric constraints in Fig. 7(c). With the optimal color variances obtained from the previous analysis, we varied the window size by σ
                        
                           g
                        . Although the proposed constraints (“grad+perc”) yielded slightly worse estimations for small windows, it outperforms the previous constraints (“prox+color”) for large windows σ
                        
                           g
                        
                        >5.

We also provide comparison to other top-performing methods, to validate overall performance of the full algorithm. Table 2
                         lists the seven best methods in the Middlebury Flow site [30] for the average end-point error, and the average angular error measured on different image part: whole image (all), motion boundary (disc.) and untextured region (untext). We also present the results from the previous constraints, shown as Bilateral-Window.

For the first four sequences (i.e., the Army, Mequon, Schefflera and Wooden,) our method presents very competitive results on the overall regions. We note that these sequences are based on real scenes and provide accurate ground truth occlusion maps, by which the occluded regions are excluded in calculating the end-point/angular errors. We also note our method outperforms Bilateral-Window, especially on motion boundaries. The performance gain increases for the sequences containing an amount of occlusions, e.g., the Urban and Teddy.

In Fig. 8
                        , we also provide qualitative results for various real-world scenes. The first column of the figure demonstrates layered two input frames for each scene, showing various motions of objects. While the top-performing method [31] in the Middlebury Flow evaluation (shown in the third column) generally presents the best estimations, our method also shows competitive results. Compared to the method of Sun et al. [10] (shown in the second column), which is also famous for its state-of-the-art performance, the proposed method yields better estimations particularly on regions with large displacements. (e.g., the beak of the duck and the right foot of the football player.)

@&#CONCLUSION@&#

In this paper, we presented a new adaptive window correlation for optical flow estimation on the discrete MRF framework. A novel data cost design incorporating various constraints efficiently ignores inhomogeneous motion in correlation windows on object boundaries, helping to enlarge the window size to cover the aperture phenomenon. The effect of each constraint compared to the previous constraints has been shown with quantitative analysis. In order to reduce computational complexity and fully utilize image resolution, we utilized the decomposed scheme combined with the course-to-fine approach.

In future work, we plan to enhance the occlusion detection algorithm. The current algorithm adopts a symmetric approach, obtaining an occlusion map given a flow field and vice versa, implying that the field and map are not generated at once. Using discrete optimization, an integrated framework combining both energy models can provide a better solution, which is closer to the global minimum. More sophisticated occlusion reasoning may result in further improvement in flow estimation.

Our current implementation takes 935.4s, on average, to find the estimation of a 640×480 image, with a 35×35 correlation window. We employ graphic hardware for parallel calculation of the data matching cost, which takes only 182.4s. The rest of the time is taken for optimization on the CPU; and we believe significantly faster processing can be obtained with a full implementation that computes message-passing based optimization on parallel graphics hardware [32].

@&#ACKNOWLEDGMENT@&#

This research was supported by the Basic Science Research Program through the National Research Foundation of Korea (NRF) funded by the Ministry of Education, Science and Technology (2010-0012006, 2013R1A1A2A10004550).

@&#REFERENCES@&#

