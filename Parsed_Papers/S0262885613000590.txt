@&#MAIN-TITLE@&#The Weibull manifold in low-level image processing: An application to automatic image focusing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We model filtered image responses with the Weibull distribution.


                        
                        
                           
                           We represent images as points on the 2D Weibull manifold.


                        
                        
                           
                           We solve image processing problems as optmisation on the manifold.


                        
                        
                           
                           Application to automatic image focusing


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Weibull distribution

Image processing

Weibull manifold

Image autofocus

@&#ABSTRACT@&#


               
               
                  In this paper, we introduce a novel framework for low-level image processing and analysis. First, we process images with very simple, difference-based filter functions. Second, we fit the 2-parameter Weibull distribution to the filtered output. This maps each image to the 2D Weibull manifold. Third, we exploit the information geometry of this manifold and solve low-level image processing tasks as minimisation problems on point sets. For a proof-of-concept example, we examine the image autofocusing task. We propose appropriate cost functions together with a simple implicitly-constrained manifold optimisation algorithm and show that our framework compares very favourably against common autofocus methods from literature. In particular, our approach exhibits the best overall performance in terms of combined speed and accuracy.
               
            

@&#INTRODUCTION@&#

Low-level image processing typically involves the application of some type of filter function onto the image data, which results in the extraction of a number of desired feature descriptors. These descriptors are identified, isolated and subsequently evaluated in the later stages of the image analysis pipeline. The analysis step is often carried out in some representation of the resulting feature space (e.g. histogram), an endeavour which can be both difficult and inefficient due to the arbitrary-dimensional, discretised nature and inconvenient form of the space. So for example, distances, angles and directions between elements of the feature space may not always be defined or easily and accurately approximated. Furthermore, notions such as mean and dispersion might not be applicable in certain feature spaces. Therefore, explicit information about the geometry of the feature space is usually desirable, if not necessary, for reliable processing and image analysis.

The responses of difference-based filter functions on image data, are known to be Weibull distributed [16,2,49]. As such, every filtered image may be represented as a single, unique point on a statistical manifold. We exploit this fact and carry out the analysis in the 2-dimensional Weibull manifold, which is much simpler than the original feature space. The 2D, smooth Weibull manifold has well known properties that have been examined in statistical literature, but this is the first time its geometry has been applied to the area of image processing and analysis. In this new lower-dimensional representation, one may easily make use of the established notions of distance, arc-length, curvature and mean, in order to perform basic image analysis tasks in a more principled and efficient manner.

We have devised a modular framework (see Fig. 1
                     ) that casts the image processing and analysis tasks as an implicitly-constrained optimisation problem, where we exploit the known manifold geometry to drive the optimisation algorithm to a good solution. For the purpose of feature extraction, we will be using simple line and edge filters in the form of the dihedral filters originally proposed by [27]. These filters, constructed with the aid of representation theory of discrete groups, are both fast and simple and allow for very efficient implementation for parallel execution. Their application in tasks such as content-based image retrieval and classification of high-level scene concepts has been described in a previous publication [49]. We demonstrate the efficacy of our framework and in particular the advantage of the Weibull manifold solution over standard methods, in the well known problem of automatic image focusing.

This paper is organised as follows. In Section 2 we describe in more detail the individual components of our framework. We then continue onto Section 3 with a brief introduction to automatic image focusing and include some of the common approaches from literature. In the same section, we describe how our proposed framework may be applied to the solution of the autofocusing problem. Section 4 follows with a description of the comparative experiments run and a description of the datasets used, as well as an analysis of the results. We conclude in Section 6.

The image processing framework we are introducing in this paper consists of a number of individual components that work together in a loop. First is the image acquisition component. This is the module which captures the images to be processed and makes them available to the rest of the system. This could be as simple as a look-up table of a stack of images or some interface to an imaging device. In general, the rest of the system does not have an explicit model of the imaging process, and the contents of and the conditions in the imaged scene. However, modification of some parameters or physical properties of the acquisition system is carried out and is controlled by the rest of the framework.

The next step, is the filtering component. This component isolates important characteristic features from the image, such as edges or corners and generates a new representation of the image data in this new feature space. The output of the filtering stage is a vector of magnitudes of filter responses, which is known to be Weibull distributed. The natural next step therefore is to fit a Weibull distribution to the data and describe the filtered image with just two numbers, the Weibull scale and shape. Note that this is of course a global application of the filters to the whole image. One may subdivide the image in patches and apply the filters at each patch. The per-patch filtered results are still Weibull distributed, but now they capture the local image properties instead.

Every such scale-shape pair may be considered as a point on the 2D Weibull manifold, and the manifold can be given a Riemannian metric, by the Fisher matrix, at every such point. Abstraction of images as manifold coordinates, allows us to turn the image processing task into corresponding operations on points such as curve fitting or optimisation. Using this line of thought, the next component is a cost function defined on the manifold, which should obtain an appropriate minimum related to the image processing task at hand. We may recover such a minimum using a manifold-based optimisation algorithm.

The image acquisition modification parameters are adjusted, driven by the optimisation component and the main loop (Fig. 1) is repeated until convergence to a good solution. The main framework components are described in more detail in the rest of this section.

In the proposed processing scheme we characterise the visual properties of images with the help of low-level filter systems. We use the so-called dihedral filter systems that meet the requirements of both, fast execution times and simplicity. These filters are constructed with the help of the representation theory of discrete groups, which is a generalisation of the theory of the discrete Fourier transform. Their usage is based on three observations: almost all digital images consist of pixels located on a square or hexagonal grid; the transformations that map these grids into themselves are the so-called dihedral groups; The filter functions should be adapted to these transformations. In this paper we will use filters defined on a 5×5 window and on grayscale images. The filters are constructed as follows. First we define two positions in the window as equivalent if there is a group element in the dihedral group (i.e. a rotation or a reflection) that maps one point into the other. As a result we get the six equivalence classes c
                        1,c
                        2,a
                        1,a
                        2,i and o shown in the matrix
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   c
                                                   1
                                                
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   a
                                                   1
                                                
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   c
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                i
                                             
                                             
                                                
                                                   c
                                                   2
                                                
                                             
                                             
                                                
                                                   a
                                                   2
                                                
                                             
                                             
                                                
                                                   c
                                                   2
                                                
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                
                                                   a
                                                   1
                                                
                                             
                                             
                                                
                                                   a
                                                   2
                                                
                                             
                                             
                                                o
                                             
                                             
                                                
                                                   a
                                                   2
                                                
                                             
                                             
                                                
                                                   a
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                i
                                             
                                             
                                                
                                                   c
                                                   2
                                                
                                             
                                             
                                                
                                                   a
                                                   2
                                                
                                             
                                             
                                                
                                                   c
                                                   2
                                                
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                
                                                   c
                                                   1
                                                
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   a
                                                   1
                                                
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   c
                                                   1
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The value at the origin o will be ignored. For the remaining 24 points we use the tools from the representation theory of the dihedral groups to divide them into six subsets of 4 points each. The first four subsets are the points in the equivalence classes c
                        1,c
                        2,a
                        1,a
                        2. The other two contain the points in the class i. From the general theory it follows that for each of these quadruples of points there are two linear combinations gx
                        , gy
                         which transform like the traditional 2×2 edge detectors. For the four points (a,b,c,d) defined by the corners c
                        1 or c
                        2 we get the following
                           
                              (2)
                              
                                 
                                    
                                       c
                                       i
                                    
                                    =
                                    
                                       
                                          
                                             
                                                a
                                             
                                             
                                                b
                                             
                                          
                                          
                                             
                                                c
                                             
                                             
                                                d
                                             
                                          
                                       
                                    
                                 
                              
                           
                        and g
                        
                           x
                        
                        =(a
                        +
                        c)−(b
                        +
                        d), g
                        
                           y
                        
                        =(a
                        +
                        b)−(c
                        +
                        d). We combine them to obtain the magnitude value given by the squared norm ∥
                        e
                        ∥
                        2
                        =
                        g
                        
                           x
                        
                        2
                        +
                        g
                        
                           y
                        
                        2 which corresponds to the output of a simple edge detector on the 2×2 pixels. A similar construction is used for all quadruples resulting in a vector E
                        =(e
                        1
                        2,…,e
                        6
                        2) containing all magnitude values from the six quadruples. Finally we compute the Euclidean length ∥
                        E
                        ∥ of the vector and use this as a measure of the “edge-strength” of the pixel distribution in this 5×5 window. The important properties of this construction is that the value ∥
                        E
                        ∥ does not change when the underlying 5×5 pixel pattern undergoes one of the dihedral transformations (rotation and reflection) and that there are an equal number of +1 and −1 coefficients involved in the filtering.

The filters used here represent one special type of edge detectors and in the framework of the representation theory, they transform like the two-dimensional representation of the group. For a detailed description of the group theoretical filter systems we refer the interested reader to the references [27,28,31]. The choice for using the dihedral filters was dictated by their simplicity of representation, their execution speed and their ease of parallelisation. In principle, it is possible to utilise other “edge-type” filters instead, which are similarly based on the calculation of pixel differences. This is because such types of filters naturally lead to the same distribution families (Weibull, discussed next) that are fundamental to our framework, meaning that we do not need to make any alterations to the rest of the framework when switching to a different filter function. Notable choices with a Weibull connection are the Gaussian-based derivative filters [16], and the Gabor filters (see [3] and Fig. 2(a)), and possibly many others.

The Weibull distribution is a member of the family of extreme value distributions, and arises as a natural limiting distribution of the extrema in a random sample with size n
                        →
                        ∞ 
                        [21]. The probability density function (pdf) of a Weibull random variable x is defined as
                           
                              (3)
                              
                                 
                                    p
                                    
                                       
                                          x
                                          |
                                          μ
                                          ,
                                          σ
                                          ,
                                          k
                                       
                                    
                                    =
                                    
                                       k
                                       σ
                                    
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                   −
                                                   μ
                                                
                                                σ
                                             
                                          
                                       
                                       
                                          k
                                          −
                                          1
                                       
                                    
                                    exp
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                         −
                                                         μ
                                                      
                                                      σ
                                                   
                                                
                                             
                                             k
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        for 
                           
                              x
                              ≥
                              μ
                              ,
                              μ
                              ∈
                              R
                              ,
                              k
                              ,
                              σ
                              ∈
                              
                                 R
                                 +
                              
                           
                         and where θ
                        =(μ,σ,k) are the location, scale and shape parameters of the distribution respectively. For μ
                        =0, we obtain the 2-parameter Weibull distribution.

The Weibull distribution has a large domain of applications and has been traditionally used in survival analysis, reliability engineering, extreme event modelling, and material sciences. Quite recently [18,16] have established a link between the Weibull distribution and difference filters on images. In [18] the authors suggested the connection to extreme value theory [21], via the properties of sums of correlated variables [2], whereas [16] follows the alternative path of fragmentation theory [7]. We have also subsequently exploited these ideas and presented a connection between the dihedral filters from Section 2.1 and extreme value theory in [49]. More specifically, for dihedral filter systems whose kernels consist of an identical number of +1 and −1 coefficients, we have found that the statistical distribution of their norm ∥
                        E
                        ∥ follows the Weibull model, for a vast class of natural images.

The Weibull distribution is quite versatile in that, for different parameter values it can obtain the form of other commonly known distributions. For example, when k
                        =1 its mode vanishes and becomes the exponential distribution, and for k
                        =2, we obtain the Rayleigh distribution (see Fig. 2(a)). In addition, the Weibull pdf is roughly symmetrical for k near 3.6, when k
                        <3.6 the distribution is left-skewed, and right-skewed otherwise (see Fig. 2(b)).

The maximum likelihood estimation (MLE) of the Weibull distribution
                           
                              (4)
                              
                                 
                                    
                                       θ
                                       ^
                                    
                                    =
                                    
                                       argmin
                                       θ
                                    
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          ln
                                          p
                                          
                                             
                                                
                                                   x
                                                   i
                                                
                                                |
                                                θ
                                             
                                          
                                       
                                    
                                 
                              
                           
                        from a data sample x, generally involves solving a numerical optimisation problem, since there are no closed-form solutions for the estimates of its 3 parameters. In this paper, we provide a standard steepest-descent fitting scheme for estimating the Weibull parameters from a data sample. However, for the interested reader we suggest the book by [38], which offers an extensive discussion on more advanced iterative schemes and effective initial estimates for θ.

Therefore, given the Weibull log-likelihood function
                           
                              (5)
                              
                                 
                                    L
                                    
                                       
                                          x
                                          |
                                          θ
                                       
                                    
                                    =
                                    n
                                    
                                       
                                          log
                                          k
                                          −
                                          k
                                          log
                                          σ
                                       
                                    
                                    +
                                    
                                       
                                          k
                                          −
                                          1
                                       
                                    
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          log
                                          
                                             
                                                
                                                   x
                                                   i
                                                
                                                −
                                                μ
                                             
                                          
                                       
                                    
                                    −
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            x
                                                            i
                                                         
                                                         −
                                                         μ
                                                      
                                                      σ
                                                   
                                                
                                             
                                             k
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        with n being the size of the data sample x, and a current estimate of the Weibull parameters 
                           
                              
                                 
                                    θ
                                    ^
                                 
                              
                              t
                           
                        , we may obtain the next-best estimate as 
                           
                              
                                 
                                    
                                       θ
                                       ^
                                    
                                 
                                 
                                    t
                                    +
                                    1
                                 
                              
                              =
                              
                                 
                                    
                                       θ
                                       ^
                                    
                                 
                                 t
                              
                              −
                              λ
                              
                                 ∇
                                 θ
                              
                              
                                 
                                    L
                                    (
                                    x
                                    |
                                    
                                       
                                          
                                             θ
                                             ^
                                          
                                       
                                       t
                                    
                                 
                              
                           
                        , where λ
                        >0 is the step size parameter. The gradient components of the log-likelihood 
                           
                              
                                 ∇
                                 θ
                              
                              L
                              
                                 
                                    x
                                    |
                                    
                                       
                                          
                                             θ
                                             ^
                                          
                                       
                                       t
                                    
                                 
                              
                           
                         are given by:
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∂
                                                L
                                                
                                                   
                                                      x
                                                      |
                                                      θ
                                                   
                                                
                                             
                                             
                                                ∂
                                                μ
                                             
                                          
                                          =
                                          −
                                          
                                             
                                                k
                                                −
                                                1
                                             
                                          
                                          
                                             
                                                ∑
                                                i
                                             
                                             
                                                
                                                   1
                                                   
                                                      
                                                         x
                                                         i
                                                      
                                                      −
                                                      μ
                                                   
                                                
                                                +
                                                
                                                   k
                                                   σ
                                                
                                                
                                                   
                                                      ∑
                                                      i
                                                   
                                                   
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                        i
                                                                     
                                                                     −
                                                                     μ
                                                                  
                                                                  σ
                                                               
                                                            
                                                         
                                                         
                                                            k
                                                            −
                                                            1
                                                         
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∂
                                                L
                                                
                                                   
                                                      x
                                                      |
                                                      θ
                                                   
                                                
                                             
                                             
                                                ∂
                                                σ
                                             
                                          
                                          =
                                          
                                             k
                                             σ
                                          
                                          
                                             
                                                −
                                                n
                                                +
                                                
                                                   
                                                      ∑
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                        i
                                                                     
                                                                     −
                                                                     μ
                                                                  
                                                                  σ
                                                               
                                                            
                                                         
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∂
                                                L
                                                
                                                   
                                                      x
                                                      |
                                                      θ
                                                   
                                                
                                             
                                             
                                                ∂
                                                k
                                             
                                          
                                          =
                                          
                                             n
                                             k
                                          
                                          −
                                          n
                                          log
                                          σ
                                          +
                                          
                                             
                                                ∑
                                                i
                                             
                                             
                                                log
                                                
                                                   
                                                      
                                                         x
                                                         i
                                                      
                                                      −
                                                      μ
                                                   
                                                
                                             
                                          
                                          −
                                          
                                             
                                                
                                                   ∑
                                                   i
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                               i
                                                            
                                                            −
                                                            μ
                                                         
                                                         σ
                                                      
                                                   
                                                
                                             
                                             k
                                          
                                          log
                                          
                                             
                                                
                                                   
                                                      x
                                                      i
                                                   
                                                   −
                                                   μ
                                                
                                                σ
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

In this work we restrict ourselves to the 2-parameter Weibull distribution, since it has a simpler form and various analytic properties of its manifold are known. We still fit the 3-parameter model p(x|μ,σ,k) as explained above, but we work with the 2-parameter equivalent p(x|σ,k)≈
                        p(x|0,σ,k). This has the same effect as fitting the 2-parameter model to the normalised sample x
                        –
                        μ, and as a result no additional fitting is required. Since in practice the parameter μ accounts for very little variation in the data, we can work on the simple 2-parameter Weibull instead, without much loss of generality.

A set of probability densities can, under certain smoothness conditions, be equipped with a metric that makes them into a Riemannian manifold. A Riemannian manifold may be thought of as a geometrical object that locally looks like a flat Euclidean space. This means that at every point on the manifold we have a tangent space and on this tangent space a positive definite matrix defining distances and angles between elements on the tangent space. If these matrices vary smoothly along the manifold then they define a Riemannian metric on that manifold. In the case where the points on the manifold are given by probability distributions these manifolds are known as statistical manifolds. Statistical manifolds allow for differential geometry tools to be applied to information theoretic and statistical problems. The study of such statistical manifolds has led to the development of information geometry 
                        [1] as a novel research field.

From information geometry, one can show [15,37] that the Fisher information
                           
                              (7)
                              
                                 
                                    
                                       g
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    =
                                    E
                                    
                                       
                                          
                                             
                                                ∂
                                                2
                                             
                                             L
                                             
                                                
                                                   x
                                                   |
                                                   θ
                                                
                                             
                                          
                                          
                                             ∂
                                             
                                                θ
                                                i
                                             
                                             ∂
                                             
                                                θ
                                                j
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        induces a Riemannian metric on the parameter space of the distribution family p(θ), using for coordinates the parameters θ. For the particular case of the 2-parameter Weibull distribution, the Fisher information matrix is given by
                           
                              (8)
                              
                                 
                                    
                                       g
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      σ
                                                      2
                                                   
                                                   
                                                      k
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ξ
                                                      −
                                                      1
                                                   
                                                   k
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      ξ
                                                      −
                                                      1
                                                   
                                                   k
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         ξ
                                                         2
                                                      
                                                      −
                                                      2
                                                      ξ
                                                      +
                                                      
                                                         π
                                                         2
                                                      
                                                      /
                                                      6
                                                      +
                                                      1
                                                   
                                                   
                                                      σ
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              ξ
                              =
                              
                                 lim
                                 
                                    n
                                    →
                                    ∞
                                 
                              
                              
                                 
                                    
                                       
                                          ∑
                                          
                                             k
                                             =
                                             1
                                          
                                          n
                                       
                                    
                                    
                                    
                                       
                                          1
                                          k
                                       
                                    
                                    −
                                    ln
                                    
                                       n
                                    
                                 
                              
                           
                         is the Euler–Mascheroni constant.

A large range of image processes, such as automatic focusing and colour mapping, when examined through our framework, will produce point sequences (along some implicit curves), lying on the Weibull manifold. There, we can analyse and characterise these processes using information geometric tools and the specific properties of the manifold. Working on this manifold, is significantly more convenient than some arbitrary-dimensional discretised histogram space that is produced from the filtered image data. Additional properties of the Weibull 2-manifold are presented in detail in [34,9].

Every image that has been processed by the filtering and Weibull fitting steps of our framework, will generate one point on the manifold, which encapsulates the statistical properties of that filtered image. The next step is to assign some type of “quality” to these points, that in a way represents the suitability of the extracted features in relation to the problem which we wish to solve.

This is achieved with the introduction of a cost function F, defined on the Weibull manifold. One is free to construct a wide array of cost functions that incorporate some knowledge about the problem at hand, but as long as they are expressed in the Weibull coordinate system (σ,k), we can use the same basic methodology in every case to obtain the best solution.

Since we are exploring the problem of automatic image focusing in this paper, we suggest two different cost functions, which are suited for, but not necessarily restricted to, this particular problem. The first and simplest cost function, is the variance of the Weibull distribution [14], and is defined as
                           
                              (9)
                              
                                 
                                    
                                       F
                                       v
                                    
                                    
                                       σ
                                       k
                                    
                                    =
                                    
                                       σ
                                       2
                                    
                                    
                                       
                                          Γ
                                          
                                             
                                                
                                                   k
                                                   +
                                                   2
                                                
                                                k
                                             
                                          
                                          −
                                          
                                             Γ
                                             2
                                          
                                          
                                             
                                                
                                                   k
                                                   +
                                                   1
                                                
                                                k
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        with Г being the gamma function. The Weibull variance is a smooth, scalar valued function which increases quadratically in σ, while decreasing as a power-law in k. It behaves much in the same way as the sample variance, describing the frequency content of a signal. Variance-type cost functions are widely used in autofocus research due to their connection with Fourier optics [19]. There, the imaging system is modelled as a linear system that can be characterised by its point spread function. One can show that increased focus results in an increased high-frequency content in the image. As such, on average, the difference between neighbouring pixels will increase and so will the pixel sample variance. In addition, the variance will attain a maximum value at the best focused image of the sequence.

An alternative cost function, is the arctangent of the principal eigen-vector of the Fisher information matrix gij
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       F
                                       a
                                    
                                    
                                       σ
                                       k
                                    
                                    =
                                    arctan
                                    
                                       
                                          
                                             V
                                             21
                                          
                                          
                                             V
                                             11
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where V
                        [2×2] is the symmetric eigen-vector matrix of gij
                        . Eq. (10) can be rewritten in closed form as
                           
                              (11)
                              
                                 
                                    
                                       F
                                       a
                                    
                                    
                                       σ
                                       k
                                    
                                    =
                                    arctan
                                    
                                       
                                          
                                             −
                                             6
                                             
                                                k
                                                4
                                             
                                             +
                                             
                                                σ
                                                2
                                             
                                             γ
                                             −
                                             
                                                ω
                                             
                                          
                                          
                                             −
                                             12
                                             
                                                
                                                   ξ
                                                   −
                                                   1
                                                
                                             
                                             σ
                                             
                                                k
                                                2
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where
                           
                              (12)
                              
                                 
                                    
                                       
                                          γ
                                          =
                                          6
                                          
                                             
                                                
                                                   ξ
                                                   −
                                                   1
                                                
                                             
                                             2
                                          
                                          +
                                          
                                             π
                                             2
                                          
                                          
                                          and
                                       
                                    
                                    
                                       
                                          ω
                                          =
                                          −
                                          24
                                          
                                             π
                                             2
                                          
                                          
                                             σ
                                             2
                                          
                                          
                                             k
                                             4
                                          
                                          +
                                          
                                             
                                                
                                                   
                                                      σ
                                                      2
                                                   
                                                   γ
                                                   +
                                                   6
                                                   
                                                      k
                                                      4
                                                   
                                                
                                             
                                             2
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                        Fa
                         has similar properties to Fv
                         but it is smoother. It is based on the idea that during autofocusing, most of the data variance is explained by σ
                        2, so an optimum path is one of increasing σ. When at maximum focus, there is very little variance left to be explained by σ, so the principal eigen-vector will align with the k-coordinate axis, meaning that min(F
                        
                           a
                        (σ,k))=
                        π/2.

Both of these cost functions will be evaluated in a number of focusing experiments and compared against other standard cost functions. They are illustrated in Fig. 3
                        .

We are restricting ourselves to image processing tasks where only a single parameter is modified. This is because such processes will define an implicit curve on the manifold, meaning a pre-defined search orientation along the curve. Here we present a basic approach for solving these very specific types of optimisation problems defined on manifolds. Note that for the remainder of this paper we shall consider the optimisation problem in terms of minimisation.

Therefore, given a modification parameter t defined in some arbitrary interval, and some non-trivial mapping 
                           
                              m
                              :
                              R
                              →
                              
                                 R
                                 2
                              
                           
                         from the domain of t onto an implicit curve xt
                         on the Weibull manifold, we seek to minimise the expression
                           
                              (13)
                              
                                 
                                    
                                       
                                          argmin
                                          F
                                       
                                       t
                                    
                                    
                                       
                                          m
                                          
                                             t
                                          
                                       
                                    
                                    =
                                    
                                       
                                          argmin
                                          F
                                       
                                       t
                                    
                                    
                                       
                                          x
                                          t
                                       
                                    
                                    =
                                    
                                       
                                          argmin
                                          F
                                       
                                       t
                                    
                                    
                                       
                                          σ
                                          
                                             t
                                          
                                          ,
                                          k
                                          
                                             t
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where F is some cost function defined on the Weibull coordinate system. The mapping m includes the image generation, dihedral filtering and Weibull fitting steps and maps each image onto a point on the manifold (see Fig. 4
                        ). Thus for a time sequence of t values, we obtain a sequence of manifold points that determine an implicit curve.

As Eq. (13) suggests, our approach will be to work exclusively on the manifold and constrained to lie on the curve, without explicit knowledge of the curve or the mappings involved. In short, we deal with an implicitly constrained optimisation problem on a manifold.

We propose an iterative estimate-update stepping solution, where given an existing sample xt
                         we estimate the next point 
                           
                              
                                 
                                    x
                                    ^
                                 
                              
                              
                                 t
                                 +
                                 1
                              
                           
                         on the curve and map back onto the modification space to obtain t
                        +1. We then generate the actual sample x
                        
                           t
                           +1, update our observations and proceed with the optimisation until convergence. We do not employ an explicit correction step between 
                           
                              
                                 
                                    x
                                    ^
                                 
                              
                              
                                 t
                                 +
                                 1
                              
                           
                         and x
                        
                           t
                           +1, although such a functionality can be introduced if desired.

First we explore this problem in its simpler form, defined in the Euclidean space. From standard numerical optimisation theory, given a smooth cost function F(x), its gradient field ∇
                           F(x) and a current evaluation xi
                            of the location of the solution, we can obtain the next best, first order, estimate of the solution along the direction of the steepest descent as
                              
                                 (14)
                                 
                                    
                                       
                                          
                                             
                                                x
                                                ^
                                             
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       =
                                       
                                          x
                                          i
                                       
                                       −
                                       
                                          λ
                                          i
                                       
                                       ∇
                                       F
                                       
                                          
                                             x
                                             i
                                          
                                       
                                       ,
                                    
                                 
                              
                           where λi
                            is some positive step-length. In the case where we are restricted to lie on an implicit curve, then the orientation of the search is pre-determined and Eq. (14) can be re-written as
                              
                                 (15)
                                 
                                    
                                       
                                          
                                             
                                                x
                                                ^
                                             
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       =
                                       
                                          x
                                          i
                                       
                                       +
                                       
                                          λ
                                          i
                                       
                                       
                                          T
                                          i
                                       
                                       ,
                                    
                                 
                              
                           where Ti
                            represents the (normalised) tangent vector at the point xi
                           . The direction along Ti
                            represents our best (first order) estimate of the form of the curve beyond the point xi
                           . In addition, Ti
                            is numerically approximated via finite differences as 
                              
                                 
                                    T
                                    i
                                 
                                 =
                                 
                                    
                                       
                                          x
                                          i
                                       
                                       −
                                       
                                          x
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                    
                                    
                                       
                                          
                                             x
                                             i
                                          
                                          −
                                          
                                             x
                                             
                                                i
                                                −
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           .

The step-length λi
                           , is chosen using the very simple analogy of the planar motion of a particle along a curve. At each location xi
                           , we may define 3 vectors. The gradient vector ∇
                           F(x
                           
                              i
                           ),T
                           
                              i
                            and its orthogonal complement T
                           
                              i
                           
                           ⊥
                           =[−
                           T
                           
                              i
                           (2),T
                           
                              i
                           (1)], using a right-hand orientation convention (see Fig. 5
                           ). We already have analytic expressions for F(xi
                           ) and ∇
                           F(x
                           
                              i
                           ) and T
                           
                              i
                           
                           ⊥ is easily calculated given Ti
                           . We may further decompose ∇
                           F(x
                           
                              i
                           ) into its two components. The tangential part F
                           
                              t
                           
                           =〈−∇
                           F(x
                           
                              i
                           )|T
                           
                              i
                           〉, which is the scalar projection of the gradient vector on the curve tangent, and the centripetal part F
                           
                              c
                           
                           =〈−∇
                           F(x
                           
                              i
                           )|T
                           
                              i
                           
                           ⊥〉, which is the projection of the gradient vector along the tangent normal. The interaction between Ft
                            and Fc
                            is what determines the increase or decrease of the next step-length. In particular, we may formulate the step-length as
                              
                                 (16)
                                 
                                    
                                       
                                          λ
                                          i
                                       
                                       =
                                       sgn
                                       
                                          
                                             F
                                             c
                                          
                                       
                                       K
                                       
                                       
                                          
                                             
                                                F
                                                t
                                             
                                             
                                                F
                                                c
                                             
                                          
                                       
                                       
                                          λ
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       ,
                                    
                                 
                              
                           where λ
                           
                              i
                              −1 is the step-length at the previous iteration, K(.) is some damping kernel that maps from [−∞,∞] to [−1,1] and sgn(Fc
                           ) is used to determine the correct sign change for all possible configurations of T
                           
                              i
                           
                           ⊥ in space, relative to the gradient field. For the damping kernel we chose the logistic function
                              
                                 (17)
                                 
                                    
                                       K
                                       
                                          x
                                       
                                       =
                                       
                                          
                                             2
                                             a
                                          
                                          
                                             1
                                             +
                                             exp
                                             
                                                
                                                   −
                                                   2
                                                   x
                                                
                                             
                                          
                                       
                                       −
                                       a
                                       ,
                                    
                                 
                              
                           where a
                           ≥1 is some acceleration scaling factor (see Fig. 6
                           ). This formulation essentially suppresses infinitely large increases in acceleration when F
                           
                              c
                           
                           →0.

The behaviour of these acceleration components is easily understood if we isolate the two extremal cases in Fig. 7
                           . In the first case, when F
                           
                              c
                           
                           →0 then Eq. (16) reduces to λ
                           
                              i
                           
                           =
                           aλ
                           
                              i
                              −1 and the new step-length represents an acceleration by a. Furthermore, since ∇
                           F(x
                           
                              i
                           )∥
                           T
                           
                              i
                           , Eq. (15) becomes the standard gradient descent in Eq. (14). In the second case, when the tangential component vanishes F
                           
                              t
                           
                           →0 then also λ
                           
                              i
                           
                           →0, because we are approaching the point of equilibrium, where the particle stops. This is the stationary point where the cost function is at a minimum along the curve.

The final component is the mapping from the cost function domain, where the optimisation is carried out, onto the modification space of t. We chose the simple inverse mapping
                              
                                 (18)
                                 
                                    
                                       
                                          
                                             Δ
                                             
                                                t
                                                i
                                             
                                             =
                                             
                                                λ
                                                i
                                             
                                             
                                             where
                                          
                                       
                                       
                                          
                                             
                                                t
                                                
                                                   i
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                t
                                                i
                                             
                                             +
                                             Δ
                                             
                                                t
                                                i
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           which is sufficient and both Δti
                            and λi
                            will converge to 0 without any oscillations, provided that the initial step-length λ
                           0 is not too large. The rate of convergence depends on the difference in scale between the two quantities and is adjusted by the acceleration scaling factor a in Eq. (17).

As a result, we present the main optimisation routine in Algorithm 1 in Appendix B. We also include a Wolfe-type estimation step getWolfe() in Algorithm 2, to avoid unnecessary step evaluations during overshoots (see Fig. 8
                           ). For the termination conditions, we typically look at the number of maximum iterations iter, a tolerance on the decrease of the cost function F
                           tol, a tolerance on the change of the modification parameter Δt
                           tol and the distance between samples in the cost function space x
                           tol.

The algorithms that we have presented for the Euclidean space, have a simple and natural extension to the Weibull manifold, since at each point xi
                           , both Ti
                            and ∇
                           F(x
                           
                              i
                           ) lie on the tangent space of xi
                           . Thus the scalar products in Eq. (16) are now defined in the same way as the dual maps F
                           
                              t
                           
                           =−
                           T
                           
                              ik
                           
                           ∇
                           F
                           
                              l
                           
                           g
                           
                              lk
                            and F
                           
                              c
                           
                           =−
                           T
                           
                              ik
                           
                           ⊥
                           ∇
                           F
                           
                              l
                           
                           g
                           
                              lk
                           , and the orthogonal complement T
                           
                              i
                           
                           ⊥ now satisfies the two equations ∑
                           
                              ij
                           
                           
                           T
                           
                              i
                           
                           T
                           
                              j
                           
                           ⊥
                           g
                           
                              ij
                           
                           =0 and ||T
                           
                              i
                           
                           ⊥||=||T
                           
                              i
                           ||, giving:
                              
                                 (19)
                                 
                                    
                                       
                                          T
                                          ⊥
                                       
                                       
                                          2
                                       
                                       =
                                       
                                          
                                             1
                                             /
                                             
                                                
                                                   1
                                                   +
                                                   
                                                      ρ
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                       ,
                                       
                                       
                                          T
                                          ⊥
                                       
                                       
                                          1
                                       
                                       =
                                       −
                                       
                                          T
                                          ⊥
                                       
                                       
                                          2
                                       
                                       ρ
                                       ,
                                    
                                 
                              
                           with
                              
                                 (20)
                                 
                                    
                                       ρ
                                       =
                                       
                                          
                                             T
                                             
                                                2
                                             
                                             g
                                             
                                                2
                                                2
                                             
                                             +
                                             T
                                             
                                                1
                                             
                                             g
                                             
                                                2
                                                1
                                             
                                          
                                          
                                             T
                                             
                                                1
                                             
                                             g
                                             
                                                1
                                                1
                                             
                                             +
                                             T
                                             
                                                2
                                             
                                             g
                                             
                                                1
                                                2
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           
                        

Finally, the x
                           tol termination criterion in Algorithm 1 now changes from the Euclidean distance to the Rao distance between two points (σ
                           1,k
                           1) and (σ
                           2,k
                           2) on the Weibull manifold, and which was given by [34] as
                              
                                 (21)
                                 
                                    
                                       s
                                       =
                                       2
                                       b
                                       tan
                                       
                                          h
                                          
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  log
                                                                  
                                                                     
                                                                        
                                                                           σ
                                                                           2
                                                                        
                                                                        /
                                                                        
                                                                           σ
                                                                           1
                                                                        
                                                                     
                                                                  
                                                                  −
                                                                  a
                                                                  
                                                                     
                                                                        
                                                                           k
                                                                           2
                                                                        
                                                                        −
                                                                        
                                                                           k
                                                                           1
                                                                        
                                                                     
                                                                  
                                                                  /
                                                                  
                                                                     
                                                                        
                                                                           k
                                                                           2
                                                                        
                                                                        
                                                                           k
                                                                           1
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         2
                                                      
                                                      +
                                                      
                                                         b
                                                         2
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                               2
                                                            
                                                            −
                                                            
                                                               k
                                                               1
                                                            
                                                         
                                                      
                                                      /
                                                      
                                                         
                                                            
                                                               k
                                                               2
                                                               2
                                                            
                                                            
                                                               k
                                                               1
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  log
                                                                  
                                                                     
                                                                        
                                                                           σ
                                                                           2
                                                                        
                                                                        /
                                                                        
                                                                           σ
                                                                           1
                                                                        
                                                                     
                                                                  
                                                                  −
                                                                  a
                                                                  
                                                                     
                                                                        
                                                                           k
                                                                           2
                                                                        
                                                                        −
                                                                        
                                                                           k
                                                                           1
                                                                        
                                                                     
                                                                  
                                                                  /
                                                                  
                                                                     
                                                                        
                                                                           k
                                                                           2
                                                                        
                                                                        
                                                                           k
                                                                           1
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         2
                                                      
                                                      +
                                                      
                                                         b
                                                         2
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                               2
                                                            
                                                            +
                                                            
                                                               k
                                                               1
                                                            
                                                         
                                                      
                                                      /
                                                      
                                                         
                                                            
                                                               k
                                                               2
                                                               2
                                                            
                                                            
                                                               k
                                                               1
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             1
                                             /
                                             2
                                          
                                       
                                       ,
                                    
                                 
                              
                           where 
                              
                                 b
                                 =
                                 π
                                 /
                                 
                                    6
                                 
                              
                            and a
                           =1−
                           ξ.

In the previous sections, we have presented all the individual components of our framework. In the next few sections, we will investigate the application of the complete framework to the solution of a typical image processing problem, and that is automatic image focusing. Automatic image focusing, or autofocusing is an interesting problem to explore since it belongs to the family of single-parameter image processing tasks, the modification of the parameter is done in some arbitrary (lens) space outside the image domain, and also additional image samples are very expensive, which makes for a good test case for our optimisation approach. Finally, this problem has been explored by various authors in the past and so comparative baseline methods are available for further evaluation.

Passive autofocus systems, determine the correct image focus by analysing the data that enters the optical device. Such methods are usually based on the calculation of a “sharpness function” (SF), which is a real-valued estimate of the image focus. Commonly used sharpness functions in literature have been based on image derivatives [45,6,32,12,47,40], statistics [13,20,46,35,39] and Fourier transforms [24,44].

The most desirable property that an ideal SF should possess, is that of unimodality. In other words, for a through focus series of images (i.e. images sampled between the closest and furthest possible focal points) the SF must obtain a unique global optimum at the position of best focus. Beyond this basic behaviour, there are no widely agreed requirements for an SF. In [20], the authors proposed a set of criteria that a useful SF should fulfil. From those we note the two most important, accuracy: the global optimum must be present when the image is in focus, and range: the range over which an in-focus image can be obtained must be as large as possible. This means that the SF around the global optimum must have a wide basin of attraction so that any numerical optimisation algorithm has a good chance of locating the point of best focus. The same authors also mention reproducibility, that is, the existence of a sharp peak at the global optimum as a desirable property. However, we argue that this might not always be advantageous, especially if we employ a gradient-based numerical optimisation method, or if we wish to model the region around the optimum with a low degree polynomial model (e.g. quadratic).

Besides the type of SF used, passive autofocusing methods may be categorised based on their strategy for locating the global optimum (focus point). The simplest strategy [4], involves capturing a small number of images at some distance apart, thereby coarsely sampling the SF. This process is repeated at finer scales, around the location of the current optimum, until convergence. More advanced methods, such as [23,25], start by evaluating the SF at a random focus position. The camera lens is moved around the current position and additional SF samples are computed. The focus search continues along the lens direction of improving sharpness with preferably an adaptive step-length.

These methods sample the SF directly and as a result they can be quite slow and expensive, since they typically require a large number of images to be captured. For faster autofocusing, other strategies have been proposed where they try to model the SF based on a limited number of coarse samples. Chen et al. [10] use a second order discrete difference equation prediction model and [43,17,41] use a second order polynomial model.

Even more recently, novel methods have been introduced, which are trained on specific objects, lens positions and imaging conditions, and which can recover the optimal focus very fast and efficiently, by means of matching and a lookup table query. Most notable are those by [11,22]. The obvious drawback, is that these approaches are highly specific to the device used, the object of interest and the imaging conditions, and as such, do not scale very well as the number of possible objects increases.

Our framework may be used on the autofocusing problem by direct application of the Algorithms 1 and 2, together with either of the cost functions presented in Section 2.5. Furthermore, in this particular case, the modification parameter t represents the lens position which has been mapped into the interval [0,1]. For illustration purposes, we examine a synthetic focus sequence of a real image that has been convolved with a Gaussian kernel of increasing width. The implicit curve that is generated onto the manifold is shown in Fig. 9(a) together with the contour plot of the cost function from Eq. (9). The path traced by the curve on the cost function determines the one-dimensional SF F(σ(t),k(t)) in Fig. 9(b). Observe how this SF behaves much in the same way as common SFs from literature. We stress once again that although we seek a minimum for F(σ(t),k(t)), we are in fact carrying out the optimisation in the 2-dimensional manifold curve in Fig. 9(a) where the derivatives of F are well defined, unlike the unknown derivatives of F w.r.t t in Fig. 9(b), that require costly numerical approximations.

Also notice in Fig. 9(b) that for regular sampling in the lens parameter space t, we get irregular samples in the SF domain. This is more apparent near the narrow region around the minimum where the SF drops significantly, but otherwise is almost flat. The same behaviour occurs also in the 2d curve in Fig. 9(a).

The basic interpretation of this is that when the images are blurred they all look very similar and one has to take very large lens steps to move away from the “blurred region” of the focus space. This is why the tail(s) of the SF typically look flat. The danger here is that for a fixed lens step λ the optimisation might terminate if no significant progress is made.

On the opposite side, when we start to obtain focused images, then each subsequent focused image will look considerably different from its predecessor. The SF will change dramatically, which explains the sharp drop. In the “focused region” (i.e. near the basin of the SF) a fixed lens step will lead to an ever-decreasing SF value until the minimum is obtained. The risk here of course is that we might overshoot a very narrow basin.

We may understand this behaviour further if we examine the squared arc length element in Fig. 9(c), which is given by
                           
                              (22)
                              
                                 
                                    d
                                    
                                       s
                                       2
                                    
                                    =
                                    
                                       
                                          k
                                          2
                                       
                                       
                                          σ
                                          2
                                       
                                    
                                    d
                                    
                                       σ
                                       2
                                    
                                    +
                                    
                                       
                                          2
                                          
                                             
                                                ξ
                                                −
                                                1
                                             
                                          
                                       
                                       σ
                                    
                                    dσdk
                                    +
                                    
                                       
                                          
                                             ξ
                                             2
                                          
                                          −
                                          2
                                          ξ
                                          +
                                          
                                             π
                                             2
                                          
                                          /
                                          6
                                          +
                                          1
                                       
                                       
                                          k
                                          2
                                       
                                    
                                    d
                                    
                                       k
                                       2
                                    
                                    ,
                                 
                              
                           
                        at an infinitesimally small region of the manifold around each position t. Where ds
                        2 is large, i.e. in the blurred region, neighbouring points on the manifold are far apart and for a fixed, small step-length we may not move very much on the manifold. The SF might thus appear flat and one would need to take larger steps λ in order to make progress. On the contrary, where ds
                        2 is small, i.e. on the focused region, neighbouring points on the manifold are very close together and so the same λ might produce a very large manifold step. One would therefore need to take smaller steps to avoid missing the solution.

We emphasise here that regular t sampling versus irregular SF responses is not an effect of the manifold, since it occurs for all SFs (see for example the Tenenbaum gradient and sample variance in Fig. 9(b)). All the pictured SFs have a similar monotonic decrease. However, we argue that ours is the only method that by using additional information from the geometry of the manifold, can provide a way of designing optimisation algorithms that can adaptively adjust λ depending on where in the focus space we are.

@&#EXPERIMENTS@&#

In this section, we present the results from the experiments we have carried out in order to evaluate our framework in autofocusing and compare it against common baseline methods. The main purpose of these experiments is not to determine if our method outperforms every other method in literature, but to simply establish if the framework can be applied to and provide a reasonable solution in terms of speed and accuracy, for the problem of autofocusing. This is why we compare against more commonly used, baseline methods rather than against methods from consumer electronics literature [22], which are heavily tuned to the type of hardware used and the objects imaged.

First are the off-line experiments, where we used 8 focus sequences, 6 of them captured with an inexpensive consumer camera
                           1
                        
                        
                           1
                           Canon IXY DIGITAL 20 IS.
                         and 2 captured with an optical microscope. All the images are single-channel grayscale. For the 6 camera sequences, we captured between 200 and 300 frames per sequence, at a maximum resolution of 3264×2448 pixels, by varying the position of the camera lens between its minimum and maximum settings, thereby sampling the full range of focal plane positions at regular intervals. The 2 microscopy sequences contain 34 frames each, at a resolution of 696×520 pixels, and have been selected from the dataset in [5]. All the images in the 8 sequences were stored on disc, with the lens positions mapped between the range [0,1] and made available to all optimisation algorithms in a look-up table fashion, thereby simulating the real camera lens control. The in-focus frames for all the 8 sequences together with their corresponding Weibull variance SFs are shown in Fig. 10
                        .

The off-line experiments are partitioned into two sets. First, we wish to evaluate the performance of the proposed optimisation scheme on the 2-manifold against standard (baseline) 1-dimensional optimisation schemes; Second, we wish to compare the complete solution (Weibull sharpness function and manifold optimisation) against common autofocusing schemes.

For the first set, it was necessary to have the same SF across all optimisation methods in order to evaluate the performance of the optimisation solution alone. Since it also had to be one SF that was comparable with our method, we opted for the Weibull variance. All optimisation methods modify the lens parameter t and for each value at t, calculate an SF value from Eq. (9). As such, we have performed 1000 tests for each sequence, where in order to keep the experiments as fair as possible, we used the same lens starting position t
                        0 and the initial step-length Δt
                        0 across all tested optimisation methods, at every test run. In addition, to evaluate the sensitivity on starting position and initial step-length, we sampled uniformly at random t
                        0
                        ∼
                        U(0.2,0.5) and Δt
                        0
                        ∼
                        U(0.1,0.5) for each test. For the second set, which is the evaluation of the complete autofocus schemes, we compared our method (using both cost functions from Section 2.5) against the methods described in the next sub-section. We have also carried out 1000 test runs for each sequence, while varying t
                        0 and Δt
                        0 at each test run.

In addition, we have also carried out a small set of on-line autofocusing experiments using a Canon EOS 50D camera. The camera was connected to a computer via a USB cable and the lens focus motor was controlled using the Digital EOS SDK (EDSDK 2.8 API) [8]. Images were captured in a real-time, on-line fashion at specified lens positions. The rest of the framework and interface remained unchanged and identical to the off-line experiments previously. The on-line setup allows for examining our method in more realistic and uncontrolled lighting and noise conditions. In other words, a scene imaged multiple times at the same lens position, might result in slightly different sharpness values each time, due to the stochastic noise process in the camera and the minute variations in the global illumination properties. One advantage with having a computer-controlled camera setup, is that we can obtain a ground truth (g.t.) focused frame using the camera's autofocus functionality. This allowed us to obtain more accurate estimates of the sharpness relative to the g.t., for all compared methods. In addition, the exact lens position could be read out directly from the camera, giving more precise measurements of frame distance from the g.t. As such, we imaged 4 different objects (see Fig. 11
                        ) with a 85mm lens, at fixed aperture and shutter speed. Each experiment was repeated 10 times and we computed the Weibull arctangent SF as described in Eq. (11), over a 200×200 pixel rectangular region, around the centre of each image. As we have already mentioned in Section 2.5, the Weibull arctangent SF, is in general smoother and wider than the Weibull variance SF we examined in the first set of experiments. This can be seen clearly in the plots in the second row of Fig. 11.

Performance was evaluated in all cases (on-line and off-line experiments), in terms of speed and accuracy. We used 4 different but complementary measures. These are:
                           
                              i)
                              (NFEs): the number of function evaluations, or equally the number of captured images until convergence. Note that the same termination tolerances have been used for all methods. The NFEs is the most important factor that determines optimisation speed, since the majority of the time used is spent in image acquisition, especially for microscopy. Obviously, the lower the NFEs is, the faster the method is.

(Fmin): the minimum normalised SF value achieved at convergence. This is an accuracy measure and only makes sense when the same SF is used across all optimisation schemes, and so we only used it for the first set of off-line and the on-line experiments. The normalisation was done for illustration purposes and for comparing accuracies across sequences. Thus, although we minimise the negative SF, in the figures that follow, Fmin varies between [0,1] and the higher it is, the more accurate the optimisation method is.

(Tval): the distance (in image frames) from the ground truth, focused frame. This is an additional measure of accuracy, and it is especially useful in situations where different SFs are compared. In particular, it is often the case that a specific SF graph is very wide around the global minimum. This means that even though a recovered optimum may be far from the ground truth solution in terms of frames, in actual reality the SF difference between the two is very small. It would be useful to have an additional accuracy measure that is able to differentiate between the two cases, especially in order to give some contextual meaning to different SF values. The distance measure we use here is defined as
                                    
                                       (23)
                                       
                                          
                                             
                                                T
                                                val
                                             
                                             =
                                             
                                                
                                                   
                                                      T
                                                      gt
                                                   
                                                   −
                                                   
                                                      T
                                                      opt
                                                   
                                                
                                             
                                             ⋅
                                             frames
                                             ,
                                          
                                       
                                    
                                 where Tgt is the ground truth lens position and Topt is the recovered lens position.

(Nr): the total number of mechanical lens movements (steps) required to converge to the optimum. This measure is used to differentiate between methods that might converge to a minimum within the same NFEs but have different strategies on how to get there. Obviously, the lower the number of motor steps, the faster the method is, and in order to have some way of comparing between different sequences, we evaluate instead
                                    
                                       (24)
                                       
                                          
                                             
                                                N
                                                r
                                             
                                             =
                                             
                                                
                                                   
                                                      N
                                                      ms
                                                   
                                                   −
                                                   
                                                      N
                                                      gt
                                                   
                                                
                                             
                                          
                                       
                                    
                                 where Nms is the total number of lens motor steps that the optimisation method requires, and Ngt is the theoretical ground truth lens steps necessary if we were to obtain a focused image with just a single function evaluation from the current starting point. Nr has units of minimum lens step.

Here we present a selection of 1-dimensional optimisation methods and a number of commonly used SFs from autofocusing literature that together define the set of baseline methods we used for comparative evaluation. In terms of SFs, all of which obtain a global minimum at the focused image, we looked at the image negative variance
                        
                           
                              (25)
                              
                                 
                                    
                                       F
                                       var
                                    
                                    
                                       x
                                       y
                                       t
                                    
                                    =
                                    −
                                    
                                       1
                                       N
                                    
                                    
                                       
                                          ∑
                                          x
                                       
                                    
                                    
                                    
                                       
                                          ∑
                                          y
                                       
                                    
                                    
                                    
                                       
                                          
                                             
                                                I
                                                
                                                   x
                                                   y
                                                   t
                                                
                                                −
                                                
                                                   I
                                                   ¯
                                                
                                                
                                                   t
                                                
                                             
                                          
                                       
                                       2
                                    
                                    ,
                                 
                              
                           
                        where N is the number of pixels in the image I, and 
                           
                              
                                 I
                                 ¯
                              
                              
                                 t
                              
                           
                         signifies the mean image at lens parameter t. We also looked at the Shannon entropy
                           
                              (26)
                              
                                 
                                    
                                       F
                                       E
                                    
                                    
                                       t
                                    
                                    =
                                    −
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          
                                          
                                             p
                                             i
                                          
                                          
                                             t
                                          
                                          
                                             log
                                             2
                                          
                                          
                                             p
                                             i
                                          
                                          
                                             t
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        where pi
                         is the grayscale image histogram and the sum is over the histogram bins. Finally we looked at another widely used SF, which is the Tenenbaum gradient [45] and is defined as follows
                           
                              (27)
                              
                                 
                                    
                                       F
                                       TB
                                    
                                    =
                                    
                                       
                                          ∑
                                          x
                                       
                                       
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          y
                                       
                                    
                                    
                                    
                                       S
                                       x
                                    
                                    
                                       
                                          x
                                          y
                                          t
                                       
                                       2
                                    
                                    +
                                    
                                       S
                                       y
                                    
                                    
                                       
                                          x
                                          y
                                          t
                                       
                                       2
                                    
                                    ,
                                 
                              
                           
                        where
                           
                              (28)
                              
                                 
                                    
                                       
                                          
                                             
                                                S
                                                x
                                             
                                             
                                                t
                                             
                                             =
                                             I
                                             
                                                t
                                             
                                             ∗
                                             
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         −
                                                         1
                                                      
                                                      
                                                         −
                                                         2
                                                      
                                                      
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                          
                                          
                                             and
                                          
                                          
                                             
                                             
                                                S
                                                y
                                             
                                             
                                                t
                                             
                                             =
                                             I
                                             
                                                t
                                             
                                             ∗
                                             
                                                
                                                   
                                                      
                                                         −
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         −
                                                         2
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         −
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

For the optimisation methods, we tested 5 different approaches. These are: Boddeke's method 
                        [4], the Golden Search (GS) [36], Nelder–Mead downhill simplex 
                        [33], the Global adaptive (GA) method [26] and finally the Hill climbing (HC) method [42]. Due to economy of space we refer the interested reader to the respective publications for additional information on each method, but it suffices to say that all of them work on the SF directly, without calculating numerical derivatives. We also mention that we have not tested the 15 possible combinations of SFs and optimisation methods, as this would be rather uninformative and time consuming. Instead, we determined the best overall performing optimisation method from the first type of experiments, and used that method with the 3 SFs in the second type of experiments.

@&#RESULTS@&#

We begin with the results from the off-line experiments. The first set of experimental results, averaged over all the 8 datasets and over all the 1000 test runs, are shown in Fig. 12
                        . From the Fmin accuracy plot (Fig. 12(a)), we see that the Golden Search method is the most accurate and with a very low variance. Our manifold optimisation method performs relatively well, with a median of 0.9806, which is better than the 0.9389of the commonly used Boddeke's method. Ours however has a larger variance, which might indicate an increased sensitivity to starting values, something which is expected from local gradient-descent methods. If we look at the average frame distance plot (Fig. 12(b)), we observe a similar behaviour. The Golden Search is the most accurate method with a median of 2.41, followed by the Simplex and Global Adaptive methods. Our method has a median of 8.7 frames from the ground truth, which again is more accurate than Boddeke's method.

In terms of speed, we observe a very different result. First, at the very important NFEs measure (Fig. 12(c)), the Golden Search is the most expensive method with a median of 33.85 frames required for convergence, and with the highest variance from all other optimisation methods. A similar behaviour is shown by the other highly-accurate methods such as the Simplex and the Global Adaptive. Our method together with Boddeke's are amongst the fastest if we also consider the average number of motor steps (Fig. 12(d)). Notice that in terms of motor steps our method is quite efficient without too much of exploratory, overshooting or backtracking behaviour, unlike Boddeke's. We may conclude by saying that the most accurate methods are also the most expensive, and for a small increase in accuracy they pay a very large penalty in captured image overhead. The Weibull optimisation method as well as Boddeke's exhibit the best compromise between speed and accuracy, with ours being more efficient in terms of lens steps and much more accurate, while only requiring one more image frame to converge, on average.

From the other competing methods, we note the Hill climbing approach which also produces very good accuracy scores, at a moderate expense. For this reason, we have decided to use it as the optimisation component in the baseline methods in the second set of the experiments.

The averaged results from the second set are shown in Fig. 13
                        . In terms of frame distance accuracy (Fig. 13(a)), the HC+V combination is the only one that outperforms our solutions. Surprisingly the Tenenbaum gradient is the least accurate solution. However, in terms of speed (Fig. 13(b, c)) all HC solutions are approximately twice as expensive as our approach with the HC+V combination being the most time consuming. From our two variants, the one using the Weibull arctangent in Eq. (11) is slightly more accurate and faster than its Weibull variance counterpart. This result supports in some respects our claim originally posed in Section 3 about the advantages of a wide region near the optimum.

For the on-line experiments with the Canon EOS 50D, we can observe a similar pattern with the previous results. In Fig. 14(a) we can see the SF values for the 6 methods. Note here, that just like in Fig. 12(a) we are quoting normalised SF accuracy, with a larger value indicated a more accurate SF value recovered by the algorithm, relative to the ground truth. The g.t. value, is obtained by the camera's internal autofocus functionality. However, unlike the off-line results, in this case due to the slight variations in the imaging conditions between different test runs, there are small fluctuations in the SF values. Therefore, it is possible to obtain an SF value that is smaller than the ground truth and as a result normalised SF values that exceed 1 in Fig. 14(a). What we can see from this plot is that our method is very accurate, with no outliers and with low variance, a behaviour which is more of the characteristic of the global optimisation (and hence accurate) methods. For the average frame distance from the g.t. (Fig. 14(b)), which is an additional measure of accuracy, we see that our method is performing very well on average, just behind the global Hill climbing method. Compare this with the performance in the off-line experiments (Fig. 12(b)), where both our method and Boddeke's where less accurate than all the global methods.

In terms of speed, the results in Fig. 14(c) and (d) are much in line with what we have already seen in Fig. 12(c) and (d). Our method together with Boddeke's and the Hill climbing methods, requires the fewer number of acquired images (NFEs). For the average number of motor steps relative to the g.t., we see that in this case our method falls slightly behind Boddeke's but still faster than the global optimisation approaches.

In summary we can say that our method offers a very good trade-off between speed and accuracy. We have seen some performance variations between the off-line and on-line realistic experiments, which are to be expected due to the different SFs examined with different characteristics (Weibull variance vs arctangent). What is important to note is that the good overall performance of our method generalises well across the different experimental setups and the different SFs used. These results, provide considerable support to our hypothesis that the Weibull framework can be applied to and provide a fast and accurate solution to the problem of autofocusing, in line with existing methods in literature.

The autofocus application described so far is only one example where we can manipulate a single parameter (in this case the focus settings of the camera) in order to minimise a cost function defined on a statistical manifold, and thus solve a specific image processing problem. Another application where our Weibull optimisation framework can be used, is in the combination of multiple channels in an image, producing a scalar-valued image. Specifically, we have looked into the task of weighted linear combinations of the RGB channels in a colour image into a single channel intensity image, in order to enhance certain properties such as edge information or contrast in the resulting image. This type of processing is particularly useful in subsequent tasks such as object segmentation. In that respect, we have published two papers [29,30] using the same Weibull framework and optimisation method. In more detail, we used the trace of the Fisher information matrix as the objective function
                        
                           (29)
                           
                              
                                 
                                    F
                                    t
                                 
                                 
                                    σ
                                    k
                                 
                                 =
                                 
                                    
                                       6
                                       +
                                       6
                                       
                                          
                                             ξ
                                             −
                                             2
                                          
                                       
                                       ξ
                                       +
                                       
                                          π
                                          2
                                       
                                       +
                                       6
                                       
                                          k
                                          4
                                       
                                       /
                                       
                                          σ
                                          2
                                       
                                    
                                    
                                       6
                                       
                                          k
                                          2
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     and since instead of one we had to optimise over three parameters (RGB weights), we carried out a single search in each parameter independently (coordinate search scheme). Some results that show the efficacy of this method over standard approaches, in terms of a grayscale mapping for image enhancement, are illustrated in Fig. 15
                     .

An additional application of the Weibull framework in image processing, is our ongoing work on tonemapping optimisation for dynamic range reduction in High Dynamic Range (HDR) images, to the 8-bit pixel values used in most processing applications today. An appropriate Weibull-based cost function, related to the gamma value of the image, is optimised using our framework over regularly sampled, overlapping, local patches from the HDR image and the mapped results are combined into the final output. We can see some initial results in Fig. 16
                     . Compared with standard techniques, the Weibull optimised method gives visually more pleasing results, with a better contrast response, while avoiding over-exposure.

One further potential application of the Weibull framework, is in the area of saliency enhancement. The connection between the Weibull and image saliency has been identified and used by [48]. A straightforward extension to their work would be to cast saliency enhancement as optimisation, by tuning the appropriate saliency response of the image using our Weibull framework.

The aforementioned examples, are just a few of the possible additional applications of the Weibull manifold and optimisation framework, and illustrate that our proposed approach is not limited to the autofocus scenario presented here, but may be used with little or no modification to a variety of different image processing problems (discrete, continuous and multi-parameter).

@&#CONCLUSION@&#

In this work we have exploited the connection between pixel-difference type of filter functions and the Weibull distribution, and devised a basic framework for low-level processing and subsequent analysis of images. Any image, once filtered can be represented as a point on the 2D Weibull manifold. Since we know many of the basic properties of that manifold, such as curvature, geodesic distances and its Riemannian metric, we can easily and efficiently carry out tasks like optimisation, clustering, curve fitting and extrapolation on the manifold. This undertaking would undoubtedly be very difficult in the original feature space.

In order to demonstrate our proposed framework, we have looked at its application to the image processing task of autofocusing. In that problem, we modify the lens position while capturing new images, until the most focused image is recovered. Such a modification scheme suggests that one may use an optimisation approach to solve the problem. In fact, most of the existing methods in literature are 1-dimensional minimisation schemes working on an appropriate sharpness function. We have followed the same route, but instead perform the optimisation on the 2D manifold, constrained to lie on an implicit curve. There we are free to define cost functions with known, analytic derivatives and which can be used in a very efficient gradient-descent minimisation algorithm.

We have compared our method against common baseline approaches from literature, on different image sequences and across a number of different evaluation measures. What we found is that our manifold method is one of the best overall performers in terms of combined speed and accuracy. Both of these measures are important for practical applications where we require a well focused image but without capturing too many additional images. As a result, we have established that the additional cost of fitting the Weibull distribution to the filtered data, is more than compensated by the reduction in the number of required images for convergence.

Further to the autofocusing scenario we have also presented some additional application areas where our framework can be used (e.g. RGB-to-grayscale mapping, HDR tonemapping and saliency boosting), that demonstrate the flexibility and usefulness of our proposed approach in a variety of different image processing tasks.

@&#ACKNOWLEDGEMENTS@&#

This work was supported with funding from the ECs 7th Framework Programme (FP7/2007-2013), grant agreement 247947 
                  (GARNICS); by the Swedish Foundation for Strategic Research through grant IIS11-0081; and from the Swedish Research Council through a grant for the project Extended Target Tracking (within the Linnaeus environment CADICS).

The gradient of the Weibull variance cost function in Eq. (9) is given by:
                        
                           A.1
                           
                              
                                 ∇
                                 
                                    F
                                    v
                                 
                                 =
                                 
                                    
                                       
                                          
                                             −
                                             2
                                             σ
                                             
                                                
                                                   −
                                                   Γ
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  +
                                                                  k
                                                               
                                                               k
                                                            
                                                         
                                                      
                                                      2
                                                   
                                                   +
                                                   Γ
                                                   
                                                      
                                                         
                                                            2
                                                            +
                                                            k
                                                         
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   2
                                                   
                                                      σ
                                                      2
                                                   
                                                
                                                
                                                   k
                                                   4
                                                
                                             
                                             
                                                
                                                   −
                                                   Γ
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               k
                                                            
                                                         
                                                      
                                                      2
                                                   
                                                   ψ
                                                   
                                                      
                                                         1
                                                         +
                                                         
                                                            1
                                                            k
                                                         
                                                      
                                                   
                                                   +
                                                   2
                                                   kΓ
                                                   
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   ψ
                                                   
                                                      
                                                         
                                                            2
                                                            +
                                                            k
                                                         
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     where 
                        
                           ψ
                           
                              m
                              z
                           
                           =
                           
                              
                                 
                                    d
                                    
                                       m
                                       +
                                       1
                                    
                                 
                                 
                                    d
                                    
                                       z
                                       
                                          m
                                          +
                                          1
                                       
                                    
                                 
                              
                           
                           ln
                           Γ
                           
                              z
                           
                        
                      is the polygamma function. The gradient of the arctangent cost function in Eq. (11) is given by:
                        
                           A.2
                           
                              
                                 ∇
                                 
                                    F
                                    a
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   6
                                                   
                                                      
                                                         ξ
                                                         −
                                                         1
                                                      
                                                   
                                                   
                                                      k
                                                      2
                                                   
                                                   
                                                      
                                                         6
                                                         
                                                            k
                                                            4
                                                         
                                                         +
                                                         
                                                            σ
                                                            2
                                                         
                                                         χ
                                                      
                                                   
                                                
                                                ζ
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   −
                                                   12
                                                   
                                                      
                                                         ξ
                                                         −
                                                         1
                                                      
                                                   
                                                   σk
                                                   
                                                      
                                                         6
                                                         
                                                            k
                                                            4
                                                         
                                                         +
                                                         
                                                            σ
                                                            2
                                                         
                                                         χ
                                                      
                                                   
                                                
                                                ζ
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     where ζ
                     =36k
                     8
                     +12σ
                     2
                     k
                     4(6(ξ
                     −1)2
                     −
                     π
                     2)+
                     σ
                     4
                     χ
                     2 and χ
                     =6(ξ
                     −1)2
                     +
                     π
                     2.


                     
                        
                           
                        
                     
                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

