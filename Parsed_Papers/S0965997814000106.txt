@&#MAIN-TITLE@&#Semantic requirements sharing approach to develop software systems using concept maps and information entropy: A Personal Health Information System example

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Using concept maps to bridge the semantic gap in software development.


                        
                        
                           
                           Using information entropy to measure the strength of the concept map.


                        
                        
                           
                           A new methodology to measure the strength of the semantic gap.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Semantic Web Technology

Structural properties

Concept maps

Semantic gap

Information entropy

Node source connectivity strength

@&#ABSTRACT@&#


               
               
                  In this paper we describe a process of developing software systems by capturing the conceptual domain knowledge of the problem domain using concept maps. To illustrate the implementation of this process we have used the example of developing Personal Health Information Systems. In addition to the aforementioned development process, the paper also describes an evaluation metric developed using Design Structure Matrix and information entropy to measure the structural properties of the concept map. The determination of entropy is based on the information derived from the hierarchical structure of a concept map. The probability distributions and the information entropy were calculated defining a new metric: node source connectivity strength based on the number of unique paths from a node to another. The results were compared by using a more standard metric, the graph node connectivity.
               
            

@&#INTRODUCTION@&#

In this paper we attempt to provide a solution that mitigates the semantic gap problem associated with the implementation of software systems using the example of a Health Information System [1,2]. Our attempt to mitigate this problem is based on capturing the research process using a process model and then capturing the semantic of the process using concept maps. A broad overview of possible solutions is provided in Section 2. In Section 3, a detailed overview of the solution to this problem has been provided. In Section 4, the solution is analyzed by applying Design Structure Matrix (DSM) [3,4] and information entropy [5,6] to mitigate the problem of semantic gap. We compare the semantic gap results of the new entropy measure based on the number of unique paths from a source node (concept map) with that of standard connectivity.

A gap exists between user needs and software implementation efforts in the area of software development [7]. This problem persists mainly because software systems often do not fully support user needs [8]. This gap, termed a semantic gap (Fig. 1
                        ), exists mainly for two reasons: (a) lack of communication between the users and developers of the system and (b) lack of integrated support tools across the different software development phases, which further leads to a breakdown in communication. Chomsky [9] states that “grammar of a language can be viewed as a theory of the structure of this language.” Since it is difficult to limit the grammar of a language to a particular group of sentences, the ambiguity involved in natural languages sometimes intensifies the breakdown in communication between user needs and implementation. This problem is critical because it leads to major inefficiencies in the operation of enterprises [10] and therefore results in increased costs and low productivity. Many enterprises have failed to succeed due to software failures caused by implementations not meeting the user needs [11]. The existence of a semantic gap may have the following effects:
                           
                              (i)
                              Difficulty in translating abstract information into an executable entity.

Difficulty in communication between the user and developer as a result of lack of domain expertise.

Increase in time required to build the implementation as per user needs.

There is a need for software requirements to be developed in a manner that allows them to be converted appropriately into software design [12]. Usually, the problem domain is well understood by the domain expert, who educates the Requirements Engineer about the problem domain. The Requirements Engineer uses his/her understanding of the domain to build the requirements document. It must be noted that the Requirements Engineer may not fully comprehend the problem domain, especially if he/she must deal with unfamiliar terminologies. For example, if the Requirements Engineer needs to build software for biomedical research, then it is imperative that he/she be well versed in some of the complex terminologies and concepts used in health information systems.

To provide a streamlined approach to the aforementioned problem, we have devised a two phased approach that involves using semantic relationships between the attributes of a dataset. First, we facilitate the required identification of the process where a system is divided into subsystems involved in the process and their relationships. Second, we build a repository of these relationships and use it to extract data along with its semantic relationships from the database.

Usually any manual process requires the user to know the intricacies of the semantics of the data of database or an information system. If the process has to be automated by using a web-based application, the developer needs to comprehend the intricacies of the terminologies involved. This may involve additional learning time which may delay the progress of building the application. If the information system does not provide the semantics of the relationships of the various data elements, then the user is expected to know them. Therefore, we have built an information system using concept maps, and semantic web technologies to facilitate the storage and retrieval of these relationships.

The process of health informatics could be further enhanced by using the tools and technologies associated with the semantic web available to the scientific community [13]. A shift from research based on painstakingly acquired evaluation, experience, and knowledge of the domain experts to that of a decision support system can accelerate the research process. Therefore, we propose the development of an integrated tool using concept maps with Web Ontology Language (OWL) [14] as an effective resource for enhancing biomedical informatics research. OWL is an essential part of the semantic web which is now being used to build infrastructure for storing metadata on a particular problem domain. OWL provides a high level of web automation by enabling information to be represented in the form of machine-processible ontologies for Personal Health Information Systems.

The process of building an information system for health research involves identifying the processes involved in the research [2]. In this paper we perceive a process as a collection of resources, tasks performed on these resources, and the flow of control of these tasks. A process model helps an individual clearly understand the research process. While the processes for enterprises have used process modeling paradigms used by methodologies such as CommonKADS [15], in this paper we describe processes by using Task System Models (TSM). A TSM is defined by Mills and Tanik [16] as “a process engineering formalism that supports the development and maintenance of distributed process systems.” TSM are commonly used in designing operating systems. However, Sadasivam [2] in his dissertation explained that they can also be used to describe Health Information research processes.

A concept map is a tool for representing and organizing knowledge [17] which is usually formed by assembling a constellation of concepts. This is done by encapsulating objects that can form complex relationships between concepts indicated by a connecting line linking them all together [18]. A particular concept can be depicted by using concept map tools such as IHMC C-Map Tools COE developed by the Institute for Human Machine Cognition (IHMC). These C-Map Tools software can be effectively used by the clinicians to represent an idea or a concept in a graphical format [19,20].

A concept map allows an ordinary computer literate to illustrate an idea, concept or domain knowledge to be described in a graphical form [21–23]. Novak and Cañas [22] explains that concept maps have many such features that can be effectively used in representing domain information. Table 1
                         provides the key features of the concept maps required for representing domain information.

Concept maps allow a two level representation of domain knowledge information:
                           
                              (i)
                              Concept maps allow the domain expert to build a schematic representation of the domain knowledge. This information can be easily comprehended by every individual involved in the development of a software system [8,23].

The concepts thus built can be converted into machine-processible XML format which can be used by programs capable of parsing and utilizing this information [9,18].

Our approach in automating the manual search involved in the personal health information process involves the steps described in Table 1.

Here we have developed a methodology to build the concept maps from the TSM. From these concept maps we extract the ontology file by using IHMC C-Map Tools COE and extract information from OWL files and develop Resource Description Framework (RDF) triples. These triples represent the information in the web. The underlying structure for RDF is the collection of triples, each consisting of a subject, a predicate (also called the property that denotes relationship) and an object. The steps outlined in Table 1 are further explained in the following sections.

Concept maps can be built directly by the domain expert in a situation when the domain knowledge to be covered by the information system has a reduced level of complexity and information. However, in situations where the domain experts work with requirements engineers to build an information system, a TSM can be used as an effective means of communication to describe the process.

The concept maps obtained by using C-Map Tools can also be converted into Web Ontology Language (OWL), N-Triple, or Resource Description Framework (RDF) [24]. Information stored in the form of ontology can be readily manipulated by using a suitable parser as well using Semantic Web Technology [25]. Fig. 2
                         depicts the conversion of a concept map into an N-Triple document using CMap Tools COE. From this figure we can clearly see that the simple concept map is converted into an XML-based ontology. This XML-based ontology contains the required information to achieve machine-actability which is explained in detail in Section 4.3.

The usage of an ontology-based integrated tool in building an information system provides emphasis on the semantics of data used to build the system as depicted in Fig. 3
                        . First, the domain expert builds concepts using the IHMC C-Map Tools COE. The concepts thus created by the domain expert are converted into OWL. The information obtained in the form of OWL is provided to the Semantic Web application. The application consumes this information to generate the required analysis on biomedical research data. The concepts built by the domain expert can also be converted into XML which can be parsed by an XML parser [23] to provide the required information to a suitable application. The data thus obtained in the form of ontology is used by the Data Extraction Module to extract the data required by the research application. Finally, the research application uses this data for carrying out required analysis for the researcher.

The concept maps can be used to represent the hierarchical list of project tasks that define the scope of project, which translates into the modules of system and the process of gathering data [26,27]. The planning objective of using a concept map is to reduce the semantic gap [28] in representing the system. To ensure the stable process performance for the system and to benefit the organizations, it is important to know the path of process [27] that is combined to form the system.

In the concept map, the process is a set of concepts which are interlinked with relations to control the information that provides decision support and flow logic [29]. There is information that flows between these concepts which can be derived from the RDF triples. The Design Structure Matrix (DSM) [30] 
                        [3] serves as system analysis for representing the concepts and their relationships in a square matrix that is used for analyzing feedback and noting down the connections [31] which is represented by the arrows that can take place between any two concepts in the concept map.

The DSM is a square matrix utilized as a network modeling tool with identical rows and columns which are labeled as concepts used to identify the dependence between the concepts [3,32] and sequence the design process [33] of the system. The matrix provides a strong compact, easily scalable, and intuitively readable representation [32] for the whole system architecture. To overcome the problem associated with representation of understanding of the process that is involved in PHIS system, we propose a semantic tool to facilitate the total information about the process with minimum input from the domain experts [34]. The objectives of this semantic search tool are as follows:
                           
                              (i)
                              Provide a user friendly system for extracting information for process of PHIS system with minimum input from the user.

Display the data related to personal health related information along with the semantics of the terminologies involved in it.

Help the investigator define the semantics of the personal health information for the above mentioned process.

Although, this problem may not be very complicated we would like to demonstrate how the tool can be built by constructing a TSM with concept maps. The determination of the structural information [35,36] from the concept maps is based on partitioning of the concepts to find the probability distributions [37]. Based on these probability distributions the entropy of the concept map can be determined. In this scenario, the structural information content is defined as the entropy for the underlying hierarchy structure of the concept map. In contrast to classical approaches, the generalized approach is done to define the entropy of system by using the information content from the concept maps [38]. This is done by using the general hierarchy properties or measures for defining information for concept maps [39].

Building the process model for the Personal Health Information System includes identifying the resources involved and connection between them. The domain experts gather all the necessary related information that may have importance in building up the system. They may have different scenarios in choosing the required information that can be used in building the system. Hence this scenario has importance of relationships that may be involved in representing the total information [19,20] about the system.

Modeling a process requires the following steps.
                           
                              (i)
                              Decompose the process into activities that can be represented as concepts in concept map (that will be complexity of concept map)

Document the information flow among these activities that can be represented as relations in concept map (that will be integration of concept map)

Analyzing the sequence of activities into a maximally feed forward process flow.

The TSM must determine the boundary of the process that is to be modeled and how the process is executed with the activities which is defined with the relation in the concept map. A general guideline to model the process is to the level of concepts that can be shown to which one desires to understand and control the process with maximum relations in the concept map. Table 2
                         shows the steps that are involved in process model to convert it into concept maps.

Hence from the above process, the key resources are identified that are involved in building the PHIS system. We focus on structural properties of the concept map that can be developed to represent the system [45]. Information theory deals with the efficiency of information processing in concept maps using information entropy. In the context of concept mapping, two concept maps are taken in Figs. 4 and 5
                        
                         respectively, a suitable measure is proposed to reveal their information uncertainty. Let us consider two concept maps that are developed for representing the PHIS system as shown in Figs. 4 and 5.

As seen from the above Fig. 4, the concept map represents the basic PHIS system identifying the key process that is involved in building the system. Fig. 5 shows basic information that we can get out of PHIS system. As seen from Figs. 4 and 5, there is no change in complexity (number of concepts) and integration (number of relations).

Many of the methods are developed to study complex networks that can be carried over to study the structural properties of the concept maps. The purpose of these concept maps to OWL or XML files is to calculate the information that each concept map has for suitable application and to determine the concept dependencies [40] for each concept. The next step is to find out how the measured values of the concepts can be distributed in the concept map. If such distribution can be established, it opens up the possibility of classifying the concept maps on the basis of the probability distribution for each concept [41,42]. Finding the probability distributions is the core part for finding the entropy of the concept map [39].

A critical objective of this approach is to facilitate the development of abstract information and then convert that information into executable information. The development of a concept map facilitates the development of abstract information needed by a team of users and developers involved in gathering the requirements of a particular software system. Conversion of the requirements thus gathered into machine-processible representation of information provides the required path to build the necessary application.


                        Fig. 6
                         provides a snapshot of the OWL document generated from the concept map. In this snapshot we can clearly identify the concepts and the interlinking relationships marked by ellipses. For example, the fact that the “User Interaction” module stores “Records” and displays “Facts” is embedded in the OWL document using RDF triples. These RDF triples form the most elementary form of information.

In the concept map represented in Fig. 4, different concepts are linked to another concept resembling a network. This concept map is then converted into the OWL document depicted in Fig. 6. This OWL document is built by using the C-Map Tools software. With the use of a Java DOM parser [25], the developer can extract necessary information from this OWL document. The RDF triples provide a semantic description of the available Personal Health data to a database application built by using Java or .NET technology [43]. The database application built by using Java Server Pages [44] extracts the semantic information stored in the form of RDF triples. This database application extracts the data stored on individual concepts and their relations by using the semantics described by the RDF triples to provide the output, as indicated in Fig. 5. The RDF triples shown in Table 3
                         provide the developer the information for building the semantics of the data associated with the Personal Health Information System. While the actual data is stored in a separate database, the semantics of the actual data is derived by using the concept map built by the domain experts. We assume that these RDF triples represent the unit connections between the concepts.

The concept map is developed by the domain experts. The first step is to represent the concept maps using DSM. The activity-based DSM captures all the concepts that are represented in the concept map and their information flow is indicated by the relationships between the concepts. Table 4
                         maps how the DSM can be modeled to process the concepts and their interlinks present in the concept map. The table shows the cardinality among the components of a concept map process and the DSM concepts. For example, a connection in a concept map can be associated with one and only one information flow in DSM, a DSM can be associated with many concept map processes, multiple (one or more) relations in a concept map can be associated with multiple (one or more) extension flow.

Our approach models the OWL schema definition as the process concepts in DSM. The package acts as a filter for grouping between individual processes that is defined between the concepts. The Package provides a clear description of interrelation between the concepts which can be seen in the above Fig. 5. Since an OWL file has only one package, the Package is modeled as an activity based DSM including the multiple processes.

The OWL file includes four activity types. These activity types are modeled as an element in an activity based DSM with the extension attribute “Activity.” The “Connections” in the process describes possible connections between concepts and relations enabling or disabling them. The “Concept” is described as essential elements that are required to co-ordinate each other to form a system. The “Relation” is described as path of information flow between any two concepts and it indicates the process flow of the system. The outgoing relation for the concept can be either zero, one or many. Table 5
                         indicates the possibility of relationships that can take place between concepts with their connectivity values.

The activities represented in the concept map are used to develop the DSM. The DSM represents every concept [45–47] present in the concept map. These concepts are now represented as individual elements in the DSM. The DSM represents the concepts and interlinks that are associated with the every other concepts in the concept map [32,33]. The connectivity represents the information flow between individual concepts that are associated with the overall process. However, we would like to mention that these connections can be either direct or indirect: the direct connection indicates that there is a direct information flow [27,48,49] between the concepts and they are marked with upper case letter “X” in matrix, and the indirect connection indicates that there is no direct link between the concepts and they are marked with lower case letter “x” in matrix. We have 13 concepts in the concept map described in Fig. 4. The DSM developed for this concept map is represented in Table 6
                        . A similar DSM was also developed for the concept map in Fig. 5 (not shown here).

As shown in the Table 6, the above DSM is called binary DSM [33] because the off diagonal marks indicate merely the presence or absence of a connection that can take place between the concepts. DSM is not symmetric; it is anti-symmetric in the sense that if element ij is occupied by “x” or “X” then element ji is empty. We assign importance to a concept by the number of direct relationships which is linked to other concepts. Hence the more number of Xs in the corresponding row of the concept in the DSM, the more is importance of the concept in the concept map. For example, the concept #8, “Owl documents”, has importance of 1 because it receives only one arrow, as can be seen by column #8 having one “X”.

After representing the concept map with DSM, the connections between the concepts are to be evaluated to establish the strength of the information that is present in the concept map. This binary DSM representation can be extended by including further attributes for these connections such as numbers to indicate the binding between the elements. This extended form of DSM is called Numerical DSM [30,3]. The above DSM represents every possible connection that can occur between any two elements with a behavior from Concept→relation and relation→concept [50,33]. The mapping of the above behavior is given as RDF triples which is represented as concept→relation→concept which is as already shown in Table 4.

The RDF triples represents the knowledge structures and can be represented in the form of network of concepts. The complexity and integration of such RDF triples is closely related to knowledge production, acquisition and processing. The concept map represents similar to that of a graph network to measure the cohesion and connectivity of concept maps and it can be shown how the distribution of these properties can be interpreted with Minimum Entropy method. To describe the network complexity and integration in mathematical model it is desirable to use a function that describes the organization of knowledge in the concept maps.

The concept maps are similar to network structures where the node-link-node representations are similar to that of concept-relation-concept. The advantage of using the concepts maps is that it emphasizes the relational structure of knowledge based on the rules of the system. The rules for making the connections have critical role in determining the structure of the maps.

Using this idea an approach is developed based on information theory (the knowledge present in the concept maps) to define generalized mutual entropy based for a given concept map. This mutual entropy is calculated for each concept which contains information related to organization of concept map. This entropy function takes the degree of connectivity [40] and interactions of the concepts which represent information exchange between each pair of concepts. Thus we address the problem of calculating the semantic gap [31,35] from concept maps which represents the complex system in terms of mutual entropy calculations. To define entropy on a network we use a probabilistic approach for information / entropy description. Then the entropy can be calculated in the usual way, provided that probability distribution function of the network is given.

We propose an algorithm for finding the minimum entropy for the concept map which is as shown in Fig. 7
                        .

From Fig. 7, the input will be the concept map of any size n where n represents the number of concepts present in the concept map. The .owl file can be obtained from the concept map. We can parse these OWL documents to RDF triples and by using Depth First Search algorithm [51,52] for calculating paths that exists between any two concepts present in the concept map. We calculate source connectivity probability for each concept and find the entropy for the concept map.

The probability of the given concept can be found from the existing methods by using the connectivity matrix Cnxn
                         
                        [40,53], where n represents the number of concepts in the concept map. The elements in the connectivity matrix Cij
                         contain information about connectivity between concepts i and j and has value 0 (concept i not connected to concept j) or 1 (concept i is connected to concept j). However, connectivity matrix can be represented by real numbers which describes the interactions between concepts in the concept map. This can be tabulated in Table 7a
                         as shown below. Note that Cij
                         is a measure which directly depends on the node degree, number of connections that link it to the rest of the network, which is the weakest measure of network connectivity [57].

The above table clearly shows the connectivity between any two given concepts in the concept map. The probability pk
                         for each concept k can be calculated as follows.
                           
                              (1)
                              
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             C
                                          
                                          
                                             ik
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             C
                                          
                                          
                                             ij
                                          
                                       
                                    
                                 
                              
                           
                        
                     

For in Table 7a for concept map 1, the connectivity row for the first concept “PHIS” has two entries of 1, one for concept 2 “Doctors” and one for concept 3 “Modules”, since PHIS is directly connected to “Doctors” and “Modules”. Therefore, number of connections for concept 1, PHIS, is 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    C
                                 
                                 
                                    i
                                    1
                                 
                              
                              =
                              2
                           
                        . Number of connections for other concepts are also calculated similarly and presented in the last column, and the total number of all of the connections for all of the concepts, 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    C
                                 
                                 
                                    ij
                                 
                              
                           
                         sums up to 15, as presented in the bottom right cell of the table. Based on the last column and the gross sum, we can calculate the probabilities for individual concepts using Eq. (1). We can see that the probability for the concept “PHIS”, p
                        PHIS can be calculated as 2/15=0.387.

Similarly, for concept map 2 we found the connectivity matrix values which is shown in Table 7b
                        .

Instead of the plain connectivity of concepts in the concept map, which is the weakest measure of network complexity [55], we define and measure the complexity and integration of each concept by calculating all unique paths for among all the concepts in the concept map. We denote the number of unique paths between two concepts i and k in the concept map with lik
                        . The number of unique paths between nodes of a graph is clearly a stronger measure of complexity of a graph, taking into account more than just the direct connections between the nodes as the plain connectivity cik
                         does. 
                           
                              [
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    l
                                 
                                 
                                    ik
                                 
                              
                              ]
                           
                        , where i
                        ≠
                        k, represents the number of possible unique directed paths that can occur from concept k to concept i, and, [
                           
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    l
                                 
                                 
                                    ij
                                 
                              
                           
                        ], where i
                        ≠
                        j, represents the total number of all the unique directed paths between all the node pairs (i, j) in the concept map. Table 8a
                         shows the possible paths for all the concepts that are connected to any other paths for the concept map 1(Fig. 4). For example, between the concept 1 “PHIS” and concept 2 “Doctors”, there is only one unique path. Between concept 1 “PHIS” and concept 8 “Knowledge Extraction Module”, there are two paths; one path through “1. Doctors” and “5. Concept Maps”, and another path through “3. Modules”. Number of unique paths connecting concept 1 “PHIS” to all other concepts can be calculating by summing up all the li
                        
                        1 for all other concepts i, which sums to 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    l
                                 
                                 
                                    i
                                    1
                                 
                              
                              =
                              26
                           
                        . We calculated it for all the concepts in the map, and presented it in the last column of Table 8a. Finally, we calculate the gross sum for the who graph summing up all the values in the concept map. The value on the bottom right cell of Table 8a shows that the sum is 71 for concept map 1.

With this measure, for any concept map, the root node concept has the highest number of connected paths when compared to other concepts. Similarly for concept map 2, we find the number of distinct unique paths that exists between any two concepts in the concept map. The results are tabulated in Table 8b
                         and as shown below.

To find out the probability for each concept, we define the source path connectivity probability pk
                         for concept k which is given by
                           
                              (2)
                              
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             l
                                          
                                          
                                             ik
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             l
                                          
                                          
                                             ij
                                          
                                       
                                    
                                 
                              
                           
                        where k is the concept of interest, k
                        =1, 2,…,
                        n and n is the total number of concepts in the concept map. We can define and find out the source path connectivity probability for a particular concept from the above table by calculating the unique paths for a particular concept by summing all the values across the rows for that concept divided by summing all the possible number of paths for the whole concept map across the column. For example, in Table 8a, the probability p
                        1 for the concept “1.PHIS” is 26/71=0.366.

The new measure of connectivity, number of unique paths, also represents how many ways can the information flow between two elements [38] (represented as concept in the concept map) in the DSM. Information theory provides a better foundation to quantify the information uncertainty for a concept map. In the context of concept mapping, each concept and relation represents the semantic of a particular domain as perceived from the concept map which is shown in Table 3. All of these RDF triples represents the information and it is possible to apply the notion of information entropy to assess the information uncertainty in concept maps. When all individual concepts are aggregated together, we could get the information uncertainty of whole concept map. The central idea of measuring the statistical complexity of distribution is to use Shannon entropy-based [49] mutual information as a measure of information [50,52]. The entropy [49,52,46,45] for all the concepts present in the concept map can be calculated by the equation as shown below.
                           
                              (3)
                              
                                 S
                                 =
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       log
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                              
                           
                        
                     

Hence the entropy values can be calculated for each concept in the concept map. Note that the leaf concept has no other concepts that are linked to them. Hence we consider that the entropy values for such concepts to be zero. The entropy values are tabulated and as show below in Table 9a
                         for both methods.


                        Table 9a shows all the entropy values for each concept present in the concept map. Irrespective of the structure of the concept map, the root node concept always has higher entropy when compared with other concepts in path matrix method. This is because the root concept is connected to all other concepts in the concept map. Similarly the entropy values for each concept in the concept map 2 are also tabulated which is as shown in Table 9b
                        .

As seen from the Tables 9a and 9b, the entropy values differs more in the case of well associative concept map 1 in Fig. 4 and well hierarchy structured concept map 2 in Fig. 5 for both the methods. The total entropy results for the two concept maps with the two methods are summarized in Fig. 8
                        . The entropy is much less for the hierarchy structured concept map 2. We can interpret the difference in total entropies between the two maps as the semantic gap between the two networks. The entropy difference is 0.667, which corresponds to a normalized variation of 6.3%, when calculated with the connectivity matrix method. In the case of the new path matrix method, the entropy difference is 0.509, which corresponds to 5.7% normalized variation. We calculated the normalized variation, v, between two quantities e
                        1 and e
                        2 by using the formula (Eq. (22) in [56]):
                           
                              (4)
                              
                                 v
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             e
                                          
                                          
                                             1
                                          
                                       
                                       -
                                       
                                          
                                             e
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    
                                       0.5
                                       (
                                       
                                          
                                             e
                                          
                                          
                                             1
                                          
                                       
                                       +
                                       
                                          
                                             e
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

The development of information systems such as concept maps can be useful in enhancing the speed of research activities for health research. This is mainly because the above mentioned approach provides access to the semantic information associated with the process by representing concept maps. Some of the key contributions of this application are as follows:
                           
                              (i)
                              Provides the user with data combined with their semantics.

Allows the domain expert to represent semantics of the terminologies involved in health systems.

Reduces the need for the user to have prior knowledge of terminologies involved in health systems.

@&#CONCLUSION@&#

In this paper a semantic requirements sharing approach is shown to reduce the semantic gap involved in the process of developing software systems. Additionally, a new way of defining entropy rate for concept maps is introduced. Graph entropy rate is a measure of the complexity of the graph, and it is a better measure than the existing graph complexity measures such as closeness centrality and degree centrality since these do not fully capture the complexity of the graph due to being limited to local neighborhoods. Graph connectivity is used generally used in graph entropy calculations; connectivity depends directly on the node degree, which is the weakest measure of network connectivity. In this work, we defined and used a better and more meaningful measure for connectivity which uses the number of unique paths between concepts (nodes) for probability calculations. We used this new metric in entropy calculations, and applied it to the semantic gap calculations of two graphs. When compared with the standard connectivity-based entropy calculations [54], this new method provides similar results; it also demonstrates the entropy difference, hence, the semantic gap between the concept maps. Thus, we demonstrated the applicability graph entropy rate on a more meaningful connectivity-based metric, to assess the complexity semantics for very large systems. We strongly believe that concept maps aided with the use of semantic web technologies with this new meaningful metric can play a critical role in developing software systems. Future work involves applying the new metric to entropy calculations of different concept maps in order to assess the semantic gap. Overall, we strongly believe that concept maps aided with the use of semantic web technologies can play a critical role in developing software systems. The following broader benefits are obtained by using the process described in this article:
                        
                           (i)
                           A unique approach using concept maps has been delineated. Usually concept maps are used in systems used for educating students [58]. Here we have illustrated the use of concept maps in architecting software.

The ease of use involved in developing concept maps and converting it to XML provides this approach a clear advantage over conventional design tools. This is because the amount of learning involved in using these tools [59,60,61] is much more than developing concept maps. This is mainly because the approach does not impose the use of a particular pre-defined structure in developing concept maps thereby providing enough flexibility in describing the system.

@&#REFERENCES@&#

