@&#MAIN-TITLE@&#Sequential behavior prediction based on hybrid similarity and cross-user activity transfer

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Linear algebraic modeling of human behavior with mobile devices.


                        
                        
                           
                           Improving behavior prediction by transferring knowledge from different users.


                        
                        
                           
                           A hybrid similarity measure based on PCA and longest/daily common behavior.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Mobile data

Behavior similarity

Common behavior analysis

Transfer learning

Principal component analysis

Sequential prediction

@&#ABSTRACT@&#


               
               
                  The proliferation of smart phones has opened up new kinds of data to model human behavior and predict future activity but this prediction can be tempered by the relative sparsity of data. In this paper, we integrate a time-dependent instance transfer mechanism, driven by a hybrid similarity measure, into learning and predicting human behavior. In particular, transfer component analysis (TCA) is utilized for domain adaptation from different data types to overcome data sparsity. The hybrid user similarity measure is developed based on three different characteristics: eigen-behavior, longest common behavior (LCB), and daily common behavior (DCB). Extensive comparisons are made against state-of-the-art time series prediction algorithms using the Nokia Mobile Data Challenge (MDC) dataset and the MIT Reality Mining dataset. We compare the prediction performance given (i) no additional data, (ii) only data from identical behavior from other users, and (iii) data from any type of behavior from other users. Experimental results show that our proposed algorithm significantly improves the performance of behavior prediction.
               
            

@&#INTRODUCTION@&#

The way in which we engage socially and with our entertainment has been revolutionized recently with the rapid expansion of modern communication technologies. Mobile internet-connected devices are increasingly important constantly-available tools for searching information, connecting with friends, and consuming content [1,2]. The manner in which we engage with these devices can yield valuable information about personal behaviors including where we spend our time, how we interact socially, and how we consume media. This information, in turn, can be tremendously useful in the modeling of our personal preferences for the purposes of directed marketing, which is a key reason that companies such as Twitter, Facebook, and Google are developing inference algorithms that can combine and analyze behavioral data [3,4].

In our previous paper [5], we went in depth about the behavior prediction task based on the repetitive properties of human behavior. One challenge for behavior and activity prediction is the lack of sufficient individual data for relevant activities. In such cases, the target users do not have enough consecutive measurements. An important goal is therefore to robustly reconstruct or synthesize these missing data.

This paper describes how the data shortage problem is overcome by the transfer of information between different persons for future behavior prediction. First, we investigate the possibility of mining useful patterns from historical records and present a preliminary framework for future behavior prediction. Then, we provide a detailed analysis of behavior similarity and the use of both “same-behavior” and “different-behavior” data from mobile device users to improve personalized behavior prediction. A hybrid similarity measure is proposed which makes use of eigen-behavior distance [6] and common behavior analysis. In particular, we propose integrating a time-dependent direct instance transfer mechanism into the sequential behavioral learning/prediction paradigm.

@&#RELATED WORK@&#

Earlier research on using mobility data for behavior prediction focused primarily on trajectories or locations (e.g., GPS, GSM) of users. Vlachos et al. [7] proposed a trajectory-matching algorithm based on the longest common subsequence (LCS) and provided an intuitive notion of similarity between trajectories by giving more weight to the similar portions of those sequences. Prediction of short-term future location also attracts considerable attention due to its potential applications, for example, in collision avoidance systems and traffic control. Monreale et al. [8] proposed predicting the next location of a moving object using a decision tree constructed using previously extracted movement patterns.

Recently, the Palo Alto Research Center developed a context-aware mobile recommendation system called Magitti for serendipitous, activity-based discovery for leisure purposes in an urban setting [9]. The software attempted to add more intelligence into smartphone applications so that the device could learn about its owner and provide relevant recommendations. This was one of the first attempts to develop a personalized recommendation system based on the smartphone owner’s contextual activities and past behavior, with preference modeling. Lee et al. [10] investigated the use of Bayesian networks on human activity inference based on mobility contextual data from mobile devices. In 2011, Pan et al. [11] proposed utilizing composite social networks to predict application installation behavior on cell phones. They proposed to make use of the social relationship network constructed from other categories (e.g., call log network, Bluetooth proximity network, friendship network) to predict the APP installation by maximizing the conditional likelihood [11]. The prediction task can also be extended to other domains, such as phone human behavior, stock return, bank failure, customer consumption, and so on [4,2,12–14]. Haddad et al. [4] proposed a prediction model for recurrent consumption behaviors based on inhomogeneous Poisson processes, which could effectively predict future incoming/outgoing phone calls. Baumann proposed to predict human mobility based on adaptive sensor cooperation [15]. The above mentioned algorithms require large amount of training materials to get satisfying results. However, in practice there are usually very limited training data.

Prediction tasks for a particular domain with limited training data can be handled by utilizing transfer learning [16] and related techniques to gather information from other domains to improve task prediction. Transfer learning applies data from another domain (often in another feature space) for which there are many observations to a domain of interest where data is more limited. Transfer learning is motivated by the human ability to generalize knowledge to solve new problems more quickly [16,17]. Vincent et al. [18] proposed to transfer the available labeled data from a set of existing activities in one domain to help recognize the activities in another different but related domain. Recently, Zhong et al. [19] proposed a hierarchical Bayesian model to transfer behavior model knowledge across different social networks via a composite network consisting of multiple sub-networks for personalized user behavior prediction. Common users across different networks form bridges to enable this transfer. The data samples from different domains are first processed to make them statistically similar (in terms of mean, variance, covariance, or other problem-specific constraints), and are then used directly with the target domain data. Common knowledge across different social networks is uncovered by exploiting both the topological and topical knowledge. Often, the model learned for a specific person cannot yield accurate results when used with a different person [20]. Therefore, different transfer learning approaches have been proposed to solve the cross-person activity recognition problem [21,20,22]. Generally, transfer learning algorithms are based on the statistical properties (i.e., mean and variance) of the samples. A typical approach is to minimize the difference of mean and variance between source domain and target domain samples, for example, maximum mean discrepancy embedding [19] and TCA [23].

The daily activity or behavior of the target user, u, for a particular activity, a, (e.g., phone call) is represented by a 
                        
                           D
                           ×
                           24
                        
                      binary matrix of behaviors, 
                        
                           
                              
                                 M
                              
                              
                                 u
                                 ,
                                 a
                              
                           
                        
                     , where D is the number of days in the sample. Each element of 
                        
                           
                              
                                 M
                              
                              
                                 u
                                 ,
                                 a
                              
                           
                        
                      represents whether a particular activity happens during each of the 24 one-hour intervals [24]. For example, 
                        
                           
                              
                                 M
                              
                              
                                 u
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       j
                                    
                                 
                              
                           
                           (
                           
                              
                                 D
                              
                              
                                 i
                              
                           
                           ,
                           10
                           )
                           =
                           0
                        
                      means that there was no activity of type 
                        
                           
                              
                                 a
                              
                              
                                 j
                              
                           
                        
                      during the 9h00–10h00 interval of day 
                        
                           
                              
                                 D
                              
                              
                                 i
                              
                           
                        
                     , whereas 
                        
                           
                              
                                 M
                              
                              
                                 u
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       l
                                    
                                 
                              
                           
                           (
                           
                              
                                 D
                              
                              
                                 k
                              
                           
                           ,
                           15
                           )
                           =
                           1
                        
                      means that activity 
                        
                           
                              
                                 a
                              
                              
                                 l
                              
                           
                        
                      occured during the 14h00–15h00 interval of day 
                        
                           
                              
                                 D
                              
                              
                                 k
                              
                           
                        
                     . Fig. 1
                      shows a sample of behavior matrix based on the Nokia dataset [3].

One practical issue for behavior prediction is that data may not be available daily, that is, entire rows of 
                        
                           
                              
                                 M
                              
                              
                                 u
                                 ,
                                 a
                              
                           
                        
                      may be zero vectors (missing) for a multitude of possible reasons. Our investigation focuses on whether one can further improve the prediction accuracy obtainable from a user’s own data given auxiliary data, 
                        
                           
                              
                                 M
                              
                              
                                 
                                    
                                       u
                                    
                                    
                                       S
                                    
                                 
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       R
                                    
                                 
                              
                           
                        
                     , from other users (
                        
                           
                              
                                 u
                              
                              
                                 S
                              
                           
                        
                     ) where the activity type 
                        
                           
                              
                                 a
                              
                              
                                 R
                              
                           
                        
                      is either identical or different from the behavior (or activity) of interest in the sequential prediction task.

This paper describes how the data shortage problem is overcome utilizing transfer learning for sequential behavior prediction. The sequential behavior prediction and transfer learning problems are formulated in our application context as follows.
                        Problem 1
                        Sequential Behavior Prediction


                        Given a behavior matrix 
                              
                                 
                                    
                                       M
                                    
                                    
                                       u
                                       ,
                                       a
                                    
                                 
                              
                            for activity a of target user u, use the initial 
                              
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                            days (i.e., 
                              
                                 
                                    
                                       M
                                    
                                    
                                       u
                                       ,
                                       a
                                    
                                 
                                 (
                                 1
                                 :
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                                 ,
                                 :
                                 )
                              
                           ), how can one predict future acitivity (i.e., 
                              
                                 
                                    
                                       M
                                    
                                    
                                       u
                                       ,
                                       a
                                    
                                 
                                 (
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                                 +
                                 n
                                 ,
                                 :
                                 )
                              
                           ), for 
                              
                                 n
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                              
                           ?

Given a behavior matrix 
                              
                                 
                                    
                                       M
                                    
                                    
                                       u
                                       ,
                                       a
                                    
                                 
                              
                            with missing data for activity a of user u and the behavior records from other users, 
                              
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       ,
                                       
                                          
                                             a
                                          
                                          
                                             R
                                          
                                       
                                    
                                 
                              
                           , how can one predict future activity?

Our study shows that there is a high correlation and similarity among some users for the same activity and even for some different activities (Section 5.2). Therefore, we substitute the zero vectors in a target user’s behavior matrices with similar auxiliary data (same type or different type, as processed by a domain adaptation algorithm) from other users. Towards this end, the performance of sequential behavior prediction can be improved (Section 5) based on target user data together with the additional time-dependent directly-transferred data (Section 4.4).

The general idea of our proposed algorithm is to utilize the behavior data from similar users (in the source domain) for missing data reconstruction for a target user to improve the performance of behavior prediction algorithms. Our proposed time-dependent direct instance transfer framework for personalized sequential behavior prediction (Fig. 2
                     ) consists of eight steps, namely:
                        
                           1.
                           Construct activity representations for all source and target user activities (Section 3).

Construct target user activity eigen-behavior (eigenvector matrix 
                                 
                                    E
                                 
                               in Eq. (4)).

Project all behavior matrices into the target user activity eigen-behavior space.

Compute the similarity between target user activity and each source user activity (both same and different activities) in the eigen-behavior space (eigen-similarity).

Measure (between and cross user) behavior similarity based on common behavior analysis (CBA): calculate longest common behavior (LCB) and daily common behavior (DCB).

Calculate joint similarity score based on eigen-similarity, LCB and DCB.

Transfer time-dependent instances via transfer component analysis (TCA).

Predict the next days’ activity.

The details of steps 2–8 are presented in the next subsections.

Principle component analysis (PCA) is widely used for feature extraction and dimensionality reduction. Eagle et al. [24] proposed to use PCA to extract useful information from human behaviors. It can be used for similarity analysis, behavior prediction and classification. Given the target user’s daily activity vector representation (Section 3), 
                           
                              
                                 
                                    v
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       
                                          a
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              1
                              )
                              ,
                              
                                 
                                    v
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       
                                          a
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              2
                              )
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       
                                          a
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              k
                              )
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       
                                          a
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              D
                              )
                           
                        , for a total of D days then, following the convention used in Eagle et al.’s paper [6], the average activity behavior of the individual is
                           
                              (1)
                              
                                 Ψ
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       D
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                    
                                    
                                       
                                          
                                             a
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 (
                                 k
                                 )
                              
                           
                        
                     

The deviation in activity behavior for a particular day from the average is
                           
                              (2)
                              
                                 
                                    
                                       Φ
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       v
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                    
                                    
                                       
                                          
                                             a
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 (
                                 k
                                 )
                                 -
                                 Ψ
                              
                           
                        
                     

Principal Component Analysis (PCA) [25] is then performed on these vectors generating a set of orthonormal vectors that can be linearly combined to best describe the distribution of the behaviors. The vectors and their corresponding scalars computed from PCA are the eigenvectors and eigenvalues of the covariance matrix 
                           
                              C
                              =
                              
                                 
                                    AA
                                 
                                 
                                    T
                                 
                              
                           
                         for the set of behavior vectors such that
                           
                              (3)
                              
                                 A
                                 =
                                 
                                    
                                       
                                          
                                             
                                                Φ
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                Φ
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                Φ
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                Φ
                                             
                                             
                                                D
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In this paper, we use the PCA feature space for similarity analysis. The number of valid days, 
                           
                              
                                 
                                    D
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         differs across the various behavior matrices, 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                        . Direct distance calculation based on the 
                           
                              
                                 
                                    l
                                 
                                 
                                    2
                                 
                              
                           
                         norm is not possible, since the dimension of 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         varies for different conditions. Therefore, we use a window size 
                           
                              W
                              <
                              
                                 
                                    D
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         to partition the behavior matrices of both the target user, 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                        , and the source user, 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                           
                        , into a series of 
                           
                              W
                              ×
                              24
                           
                         matrices, that is 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                              ,
                              l
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              
                                 
                                    N
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                              ,
                              l
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              
                                 
                                    N
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 
                                    N
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                 
                              
                              =
                              floor
                              (
                              
                                 
                                    D
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                 
                              
                              ,
                              
                                 
                                    a
                                 
                                 
                                    j
                                 
                              
                              /
                              W
                           
                         and 
                           
                              
                                 
                                    N
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                 
                              
                              =
                              floor
                              (
                              
                                 
                                    D
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                 
                              
                              ,
                              
                                 
                                    a
                                 
                                 
                                    k
                                 
                              
                              /
                              W
                           
                        .

Given the behavior matrices of both the target user, 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                        , and the source user, 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                           
                        , we construct the eigenvector matrix 
                           
                              E
                           
                         based on 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         then we project 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                           
                         into the feature space by
                           
                              (4)
                              
                                 
                                    
                                       F
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             a
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 
                                    
                                       E
                                    
                                    
                                       T
                                    
                                 
                                 ×
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             a
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       l
                                    
                                 
                              
                           
                        and
                           
                              (5)
                              
                                 
                                    
                                       F
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       ,
                                       
                                          
                                             a
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 
                                    
                                       E
                                    
                                    
                                       T
                                    
                                 
                                 ×
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       ,
                                       
                                          
                                             a
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       l
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    F
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              
                                 
                                    F
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         are the feature matrices of the target user and the source user, respectively.

In Section 5, we discuss how the window size W is chosen. The main challenge is the limited amount of data collected for the target user. This is the main motivation for our proposed transfer learning framework. To compare the similarity between the activity behavior of the target user 
                           
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                           
                         and source user 
                           
                              
                                 
                                    u
                                 
                                 
                                    S
                                 
                              
                           
                         in the eigen-behavior space for activity 
                           
                              
                                 
                                    a
                                 
                                 
                                    j
                                 
                              
                           
                        , we use
                           
                              (6)
                              
                                 d
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       S
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   T
                                                
                                             
                                          
                                       
                                       
                                          
                                             N
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   S
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          m
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      T
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          n
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      S
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   m
                                                
                                             
                                             -
                                             
                                                
                                                   F
                                                
                                                
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         S
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         S
                                                      
                                                   
                                                
                                                
                                                   n
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        which is the average 
                           
                              
                                 
                                    l
                                 
                                 
                                    2
                                 
                              
                           
                        -norm between all the possible combinations of 
                           
                              
                                 
                                    F
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    m
                                 
                              
                           
                         and 
                           
                              
                                 
                                    F
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    n
                                 
                              
                           
                        .

The similarity score based on eigen-behavior distance, Eq. (6), is defined as the normalized distance
                           
                              (7)
                              
                                 
                                    
                                       R
                                    
                                    
                                       e
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       S
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       d
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             max
                                          
                                          
                                             S
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             U
                                          
                                       
                                       d
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        where U is the total number of experiment subjects/users.

The longest common subsequence (LCS) is widely used in time-series trajectory matching [20,26,7]. The LCS method finds the longest subsequence common to all sequences in a set. A subsequence is defined as a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements. Phone calls, text messages, and use of media can all be more unpredictable than typical trajectory or location records, which can reduce the likelihood of longer shared sequences.

Given two behavior observation vectors, source vector 
                           
                              S
                              =
                              {
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                              
                              }
                           
                         of length m and target vector 
                           
                              T
                              =
                              {
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    t
                                 
                                 
                                    n
                                 
                              
                              }
                           
                         of length n, the longest common behavior (LCB) is defined as the length of the longest sequence 
                           
                              C
                              =
                              {
                              
                                 
                                    c
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    c
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    c
                                 
                                 
                                    k
                                 
                              
                              }
                              =
                              {
                              
                                 
                                    t
                                 
                                 
                                    1
                                    +
                                    i
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    2
                                    +
                                    i
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    t
                                 
                                 
                                    k
                                    +
                                    i
                                 
                              
                              }
                           
                        , where 
                           
                              0
                              ⩽
                              i
                              ⩽
                              n
                              ,
                              0
                              ⩽
                              k
                              +
                              i
                              ⩽
                              n
                           
                         and 
                           
                              ∀
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                              ∈
                              S
                           
                        .

Compared with the traditional LCS algorithm, this approach requires the sub-activity, 
                           
                              C
                           
                        , to be a subsequence of the target sequence, 
                           
                              T
                           
                        , while each element of 
                           
                              C
                           
                         is from the source sequence, 
                           
                              S
                           
                        . While LCB requires the shared elements 
                           
                              C
                           
                         to follow exactly the same order as the target sequence, 
                           
                              T
                           
                        , it does not need to follow the same order in the source sequence, 
                           
                              S
                           
                        . Denoting the LCB between source user 
                           
                              
                                 
                                    u
                                 
                                 
                                    S
                                 
                              
                           
                         and target user 
                           
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                           
                         as 
                           
                              L
                              (
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    S
                                 
                              
                              )
                           
                        , the similarity score based on LCB is defined as
                           
                              (8)
                              
                                 
                                    
                                       R
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       S
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       L
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             max
                                          
                                          
                                             S
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             U
                                          
                                       
                                       L
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        where U is the total number of users.

Because of the stochastic nature of human behavior, even a single person is unlikely to repeat their own longer behavior sequences exactly. Therefore, we also propose to use the number of identical daily behaviors as a similarity measure. This records how often a person repeats the same behavior. The daily common behavior (DCB) is defined as
                           
                              (9)
                              
                                 
                                    
                                       R
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       S
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       D
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             max
                                          
                                          
                                             S
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             U
                                          
                                       
                                       D
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        where 
                           
                              D
                              (
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    S
                                 
                              
                              )
                           
                         is the number of identical daily behaviors between the source user 
                           
                              
                                 
                                    u
                                 
                                 
                                    S
                                 
                              
                           
                         and the target user 
                           
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                           
                        . Based on Eqs. (7)–(9), the joint similarity score can be obtained by
                           
                              (10)
                              
                                 R
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       γ
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       R
                                    
                                    
                                       e
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       γ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       R
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       γ
                                    
                                    
                                       3
                                    
                                 
                                 
                                    
                                       R
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                           
                        where 
                           
                              ∑
                              
                                 
                                    γ
                                 
                                 
                                    i
                                 
                              
                              =
                              1
                           
                        . For simplicity, in our present implementation the joint similarity is calculated as the mean of the three similarity scores.

In order to solve the problem of data sparsity, the transfer of data from other users with high similarity measures to the target user is crucial. Based on the similarity measure in Eq. (10), data from source and target users can be merged across time. For the target user 
                           
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                           
                         with the data matrix 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         (ordered by day), we reinsert a 24-dimensional zero-vector when there is no data collection on that day. Let 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    o
                                 
                              
                           
                         be the new matrix with zero-vectors included in rows corresponding to days when no data is collected. Let 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          l
                                       
                                    
                                 
                                 
                                    o
                                 
                              
                           
                         be the matrix for source user 
                           
                              
                                 
                                    u
                                 
                                 
                                    S
                                 
                              
                           
                         for the activity 
                           
                              
                                 
                                    a
                                 
                                 
                                    l
                                 
                              
                           
                         in the same temporal interval as 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    o
                                 
                              
                           
                        . Again, we include zero vectors corresponding to days when no data is collected for 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          S
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          l
                                       
                                    
                                 
                                 
                                    o
                                 
                              
                           
                        , so that the two matrices have an equal number of rows.

Before the knowledge transfer process, the source domain data is processed by transferring component analysis (TCA) for domain adaptation. TCA learns a set of common transfer components underlying both domains such that the difference in data distributions of the different domains, when projected onto this subspace, can be dramatically reduced and the fundamental properties of the data can be preserved [23]. When transferring data from source domain 
                           
                              
                                 
                                    X
                                 
                                 
                                    S
                                 
                              
                           
                         of size 
                           
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                           
                         to target domain 
                           
                              
                                 
                                    X
                                 
                                 
                                    T
                                 
                              
                           
                         of size 
                           
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                           
                        , this embeds the behavior data in a kernel matrix, 
                           
                              K
                           
                        , defined in Eq. (A.1).

TCA minimizes the distance between the empirical means of the two domains, while maximizing the variance of the projected samples, shown in Eq. (A.6) (detailed derivation is given in Appendix A). Then we obtain the updated version of source domain data, 
                           
                              
                                 
                                    
                                       
                                          M
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    o
                                 
                              
                           
                        , by the k-Nearest Neighbor (kNN) vector regression method introduced in [27]. In the following discussion, the symbol “:” in matrices means that the variable takes all the possible values of the specific dimension. The detailed reconstruction steps are as follows.
                           
                              1.
                              Project the source domain and target domain behavior data to the TCA feature domain.

Locate the target domain missing days, 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             T
                                          
                                       
                                       (
                                       
                                          
                                             I
                                          
                                          
                                             m
                                          
                                       
                                       ,
                                       :
                                       )
                                    
                                 , and the corresponding source domain days, 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             S
                                          
                                       
                                       (
                                       
                                          
                                             I
                                          
                                          
                                             m
                                          
                                       
                                       ,
                                       :
                                       )
                                    
                                 . The source domain days are then used as ‘clues’ to reconstruct the missing days.

Find the k neighbors in the target domain closest to each missing day in the source domain, 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             S
                                          
                                       
                                       (
                                       
                                          
                                             I
                                          
                                          
                                             m
                                          
                                       
                                       ,
                                       :
                                       )
                                    
                                 .

Interpolate these neighbors’ behaviors to predict the missing days, that is, 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             T
                                          
                                       
                                       (
                                       
                                          
                                             I
                                          
                                          
                                             m
                                          
                                       
                                       ,
                                       :
                                       )
                                    
                                  or equivalently 
                                    
                                       
                                          
                                             
                                                
                                                   M
                                                
                                                
                                                   ^
                                                
                                             
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   a
                                                
                                                
                                                   l
                                                
                                             
                                          
                                          
                                             o
                                          
                                       
                                    
                                 . Here, we simply output the mean of these k neighbors.

After applying the time-dependent direct instance transfer, the new activity data matrix for target user 
                           
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                           
                         is
                           
                              (11)
                              
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             T
                                          
                                       
                                       ,
                                       
                                          
                                             a
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       new
                                    
                                 
                                 
                                    
                                       
                                          r
                                          ,
                                          :
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               M
                                                            
                                                            
                                                               ^
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               u
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               l
                                                            
                                                         
                                                      
                                                      
                                                         o
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            r
                                                            ,
                                                            :
                                                         
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         
                                                            
                                                               u
                                                            
                                                            
                                                               T
                                                            
                                                         
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                      
                                                         o
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            r
                                                            ,
                                                            :
                                                         
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                         ×
                                                         24
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         
                                                            
                                                               u
                                                            
                                                            
                                                               T
                                                            
                                                         
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                      
                                                         o
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            r
                                                            ,
                                                            :
                                                         
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         
                                                            
                                                               u
                                                            
                                                            
                                                               T
                                                            
                                                         
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                      
                                                         o
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            r
                                                            ,
                                                            :
                                                         
                                                      
                                                   
                                                   
                                                   ≠
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                         ×
                                                         24
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where r is the row index and 
                           
                              
                                 
                                    0
                                 
                                 
                                    1
                                    ×
                                    24
                                 
                              
                           
                         is a 24-dimensional zero-vector. One performs the merging step in Eq. (11) with any activity 
                           
                              
                                 
                                    a
                                 
                                 
                                    l
                                 
                              
                           
                         as long as the source user activity has a high similarity (based on Eq. (6)) with respect to the target user 
                           
                              
                                 
                                    u
                                 
                                 
                                    T
                                 
                              
                           
                        . When 
                           
                              l
                              =
                              j
                           
                        , activity 
                           
                              
                                 
                                    a
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              
                                 
                                    a
                                 
                                 
                                    j
                                 
                              
                           
                         are identical and our prediction approach uses same-type behavioral data from other users. When 
                           
                              l
                              
                              ≠
                              
                              j
                           
                        , activity 
                           
                              
                                 
                                    a
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              
                                 
                                    a
                                 
                                 
                                    j
                                 
                              
                           
                         are different and our approach uses different-type behavioral data from other users.


                        Fig. 3
                         shows how the behavior matrix 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    new
                                 
                              
                           
                         derived from Eq. (11) is used for sequential next-day behavior prediction. We define 
                           
                              
                                 
                                    M
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                         as the target user’s activity behavior from day 1 to day d, that is, 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          a
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    new
                                 
                              
                              (
                              1
                              :
                              d
                              ,
                              :
                              )
                           
                        , where d will be referred to as the training window size. The objective is to predict hourly activity behavior on day 
                           
                              d
                              +
                              1
                           
                         based on the data within this moving window.

The time-dependent instance transfer allows one to include likely daily data into the moving window when there are missing daily data. Hence it provides a more complete picture on the target user behavior. Our proposed prediction approach assumes that the behavior model of the target user remains similar when it is shifted by one day. In other words, 
                           
                              
                                 
                                    M
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                         and 
                           
                              
                                 
                                    M
                                 
                                 
                                    2
                                 
                                 
                                    d
                                    +
                                    1
                                 
                              
                           
                         are represented by similar behavior models. Similar to the method described in Section 4.1, we perform PCA on 
                           
                              
                                 
                                    M
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                         to obtain a 
                           
                              d
                              ×
                              k
                           
                         eigenvector matrix, 
                           
                              
                                 
                                    E
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                        . Based on the above assumption, we can approximate (or reconstruct) 
                           
                              
                                 
                                    M
                                 
                                 
                                    2
                                 
                                 
                                    d
                                 
                              
                           
                         (see the green window in Fig. 3) based on 
                           
                              
                                 
                                    E
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                         using a 
                           
                              k
                              ×
                              24
                           
                         (coefficient) matrix 
                           
                              F
                           
                        , that is,
                           
                              (12)
                              
                                 
                                    
                                       M
                                    
                                    
                                       2
                                    
                                    
                                       d
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             E
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       1
                                    
                                    
                                       d
                                    
                                 
                                 ×
                                 F
                              
                           
                        such that 
                           
                              
                                 
                                    
                                       
                                          E
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                         is the first 
                           
                              d
                              -
                              1
                           
                         rows of 
                           
                              
                                 
                                    E
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                        .

The coefficient matrix 
                           
                              F
                           
                         can be obtained by
                           
                              (13)
                              
                                 F
                                 =
                                 
                                    
                                       
                                          
                                             E
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 ×
                                 
                                    
                                       M
                                    
                                    
                                       2
                                    
                                    
                                       d
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    
                                       
                                          E
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    -
                                    1
                                 
                              
                           
                         is the pseudo inverse matrix of 
                           
                              
                                 
                                    
                                       
                                          E
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                        . Then, the prediction for day 
                           
                              d
                              +
                              1
                           
                         (Fig. 3) can be obtained as the last row of the approximated (or reconstructed)
                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       2
                                    
                                    
                                       d
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       E
                                    
                                    
                                       1
                                    
                                    
                                       d
                                    
                                 
                                 ×
                                 F
                              
                           
                        
                     

This approach uses the relationship embedded in the historical data from the previous d days. Note that the prediction approach can be used to predict not only the behavior for the next day (i.e., 
                           
                              d
                              +
                              1
                           
                        ) but also the next n days’ behavior. For multiple day prediction,
                           
                              (15)
                              
                                 F
                                 =
                                 
                                    
                                       
                                          
                                             E
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       n
                                       +
                                       1
                                    
                                    
                                       d
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    
                                       
                                          E
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    -
                                    1
                                 
                              
                           
                         is the inverse of the matrix representing the first 
                           
                              d
                              -
                              n
                           
                         rows of 
                           
                              
                                 
                                    E
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                        .

The computation complexity of our proposed algorithm is very low. The key part of our proposed prediction algorithm is Eq. (15). Since the similarity matrix (Eq. (10)) and the eigenvector matrix (
                           
                              
                                 
                                    
                                       
                                          E
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                           
                        ) can be pre-computed and stored, the computational complexity is decided by Eq. (15), which is a simple matrix multiplication. As for the storage requirement of the pre-computed files, for a 
                           
                              38
                              ×
                              38
                           
                         similarity matrix used in the following experiment, it takes about 10KB in Matlab mat file format. Note that the space requirement can be further decreased by keeping only the top similar pairs in a sparse format, while eliminating the less similar pairs.

@&#RESULTS AND DISCUSSION@&#

Our results show that prediction accuracy is improved when both same-behavior from other users and any-behavior data from any users are used in the time-dependent direct instance transfer mechanism based on similarity comparison in the eigen-behavior space. We compare these results to the prediction performance of our sequential prediction approach with and without TCA domain adaptation. Here, we use the phone call behavior as the target activity and the media consumption behavior as a source activity for different-behavior instance transfer. Prediction performance is measured based on (1) accuracy: the average prediction correctness in percentage for hourly predictions, and (2) relative improvement: the proportional percentage difference between the results of different methods. Comparisons are made against moving average (MA), autoregressive integrated moving average (ARIMA) methods, and hidden Markov model (HMM) [28–30].

The ARIMA model can be treated as a combination of an autoregressive model (AR), an integration model (I), and a moving average model (MA). It is used on time series data either to better understand the data or to predict future points in the series (i.e., forecasting) [31]. The ARIMA model has been applied in cases where data show evidence of non-stationarity, e.g., prediction of future electricity price [32], energy demand [33], etc. A hidden Markov model (HMM) is a statistical Markov model with unobserved (hidden) states. It is very widely used in time-series analysis, especially speech processing. All the observations of daily records are assumed to be generated by a 4-state HMM model. The initial 70days are used for HMM training. After each prediction, the target day is fed back and the HMM parameters are updated. In the particular application addressed in this paper, we used the Baum-Welch approach for estimating the parameters of our HMMs [30], and the task of human movement prediction is reduced to the particular HMM inference problem. Given a set of sequences of the form 
                        
                           Y
                           =
                           {
                           
                              
                                 M
                              
                              
                                 u
                              
                              
                                 a
                              
                           
                           (
                           D
                           -
                           
                              
                                 N
                              
                              
                                 d
                              
                           
                           +
                           1
                           ,
                           :
                           )
                           ,
                           …
                           ,
                           
                              
                                 M
                              
                              
                                 u
                              
                              
                                 a
                              
                           
                           (
                           D
                           -
                           1
                           ,
                           :
                           )
                           ,
                           
                              
                                 M
                              
                              
                                 u
                              
                              
                                 a
                              
                           
                           (
                           D
                           ,
                           :
                           )
                           ,
                           
                              
                                 P
                              
                              
                                 D
                                 +
                                 1
                              
                           
                           }
                        
                     , in which the first D positions correspond to historical records (including current day), and 
                        
                           
                              
                                 P
                              
                              
                                 D
                                 +
                                 1
                              
                           
                        
                      encodes a possible observation for next day, the sequence that has the highest probability can be used for future behavior prediction.

Evaluation is performed using the Nokia Mobile Data Challenge (MDC) dataset [3,34] and the MIT Reality Mining dataset [35], described below.

The MDC dataset consists of smartphone data collected in the Lake Geneva region from October 2009 to March 2011. A summary of the data types in MDC is given in Table 1
                            
                           [3]. Data types related to location (GPS, WLAN), motion (accelerometer), proximity (Bluetooth), communication (phone and short message logs), multimedia (camera, media player), and application usage are considered [3,34]. A total of 185 participants were involved, 38% of whom are females. Individual data was collected using Nokia N95 smartphones and a client–server architecture.

In addition to contributing phone data, participants of the MDC also agreed to conduct a small number of surveys during the data recording process including (1) a set of manual semantic labels for frequently and infrequently visited places for each user, and (2) basic demographic attributes. The relevant places were first detected automatically with a two-level clustering method discussed in [36], then participants specified place categories from a fixed list of tags (e.g., home, work, leisure places). Participants self-reported demographic information such as gender, age group, marital status, and job type [3]. Since our objective is to predict future activities or behaviors, only the first four sets of data (Calllog, Voice Calls, SMS, Application) are used in the analysis and experiments. In the table, calllog includes both voice call and SMS (short message), which is mainly intended to solve the data shortage problem. Data shortage will lead to the matrix sparsity problem in the data processing stage. Calllog data yields better results than voice call and SMS (Section 5).

The Reality Mining project was conducted from 2004–2005 at the MIT Media Laboratory [35]. Participants consisted of students and staff at MIT between September 2004 and June 2005 [35]. The Reality Mining study followed 94 subjects using mobile phones pre-installed with software that recorded data about location, motion, proximity, and communication (calllog, Bluetooth devices in proximity of approximately five meters, cell tower IDs, application usage, and phone status) [6].

Of these 94 subjects, 68 were colleagues working in the same building on campus (90% graduate students, 10% staff) and the remaining 26 subjects were incoming students at the university’s business school [6]. The dataset also provides self-report relational data from each individual, where subjects were asked about their proximity to, and friendship with, others [6]. The phone log records (Calllog, Voice Calls, SMS) from the Reality Mining dataset are used in our analysis and experiments.

Two similarity measures are considered to determine suitable candidates for knowledge transfer, as described in the following subsections.


                           Fig. 4
                           (a) compares the mean self-distance (
                              
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       S
                                    
                                 
                              
                            in Eq. (11)) and cross user-distance (
                              
                                 
                                    
                                       u
                                    
                                    
                                       T
                                    
                                 
                                 
                                 ≠
                                 
                                 
                                    
                                       u
                                    
                                    
                                       S
                                    
                                 
                              
                           ) in the eigen-behavior space using the mobile phone usage data for the thirty-eight users in the MDC dataset as the window size varies from 20 to 100 at a step size of 10. The mean self-distance is consistently low regardless of the window size W and is always lower than the mean cross user-distance, as expected. This is a good indication that Eq. (6) is an appropriate measure to compare user behavior similarity. Here, the self-distance is not strictly zero as we are comparing different behavioral data subsets from the same user.

The amount of data collected for a user must be sufficient for at least W days to calculate the self-distance. As W increases, the number of users eligible for the similarity comparison decreases. The number of users included in the calculation is given in Fig. 4(b). When the window size becomes larger than 70, there is a significant drop in the number of valid users, from 37 of 38 (
                              
                                 W
                                 =
                                 20
                              
                           ) to 30 of 38 (
                              
                                 W
                                 =
                                 100
                              
                           ). Therefore, 
                              
                                 W
                                 =
                                 70
                              
                            is chosen in order to utilize as many users as possible to validate our proposed approach.

The similarity distance listed in Fig. 4(a) is the mean value of all the possible combinations. To exemplify a typical similarity distance distribution, Fig. 5
                           (a) shows the histogram of the eigen-behavior distance between user 2 and all the other users based on phone usage behavior data. The eigen-behavior distance matrix for the MDC dataset is given in Fig. 5(b). It is a 
                              
                                 38
                                 ×
                                 38
                              
                            matrix, which describes the distance of all the possible transfer pairs. Since there are 94 test subjects/users in the Reality Mining dataset, ones has a 
                              
                                 94
                                 ×
                                 94
                              
                            distance matrix.

In the MDC dataset, there are 38 different users, which leads to 703 pairwise combinations; in the Reality Mining dataset, there are 94 valid users, with 4606 unique pairwise combinations. Fig. 6
                            shows the degree of shared behavior between pairs of users in both datasets, calculated as the number of identical days for each case.

Most combinations show limited shared elements. In Fig. 6(b), the amount of common behavior is nearly inversely proportional to the corresponding degree of possible combinations. For the MDC dataset, the mean user data size is about 186, while the number of mean shared days is about 11. Therefore, on average about 6% of user data are shared. For different individuals this value may vary from 0% to over 10%. For the Reality Mining dataset, the mean data size is about 111, while the number of shared elements is about 4. On average 4% of the data are shared. Fig. 7
                           (a) gives a three-dimensional view of the normalized daily common behavior (DCB) score, defined in Eq. (9), for all the possible combinations based on phone behavior activity of MDC dataset. Similarly, the three-dimensional view of the normalized longest common behavior (LCB) score is given in Fig. 7(b). They are also obtained using the phone usage behavior data in the MDC database.

The joint similarity score can be calculated by the weighted sum of eigen-similarity, DCB, and LCB, shown in Eq. (10). As for the Reality Mining dataset, similar results can be obtained. For example, Fig. 8
                            shows the number of common days (DCB) between user 1 and others. It can be seen that certain user pairs show clear similarities such as users 1 and 2.

Two prediction approaches are applied to the MDC database, as described in the following subsections.

The recently-proposed Transfer Component Analysis (TCA) method can relate data distributions across different domains preserving the information in those data with the objective of minimizing the variance of the data samples [23]. As an illustration, Fig. 9
                            shows an example from the MDC dataset, which intends to transfer the behavior data of User 1 to User 5. It can be seen that originally (Fig. 9(a)) a large amount of the behavior data from User 1 do not overlap with User 5. After TCA, the mobile phone usage behavior of user 1 becomes very similar to user 5.

Following the steps proposed in Pan et al.’s paper [27], the source user activity data can be transferred to the target user activity domain recursively. Sequential behavior prediction is performed based on the target user data and data from time-dependent direct instance transfer. In order to give a better view of the effectiveness of our proposed algorithm, an instance transfer task is conducted. We include additional same-behavior (phone call behavior) data from user 2 into the windowed data set for all the users. For users having a distance less than 4.5 from user 2, the prediction accuracy of our proposed approach is 87.26%. For those with distance greater than 5, the prediction accuracy is 83.11%. There is clear correlation between the user similarity based on Eq. (6) and the prediction accuracy.


                           Fig. 10
                            shows the relative improvement when time-dependent instance transfer is used. The proposed approach improves the prediction accuracy with an improvement of more than 2% for user 20 when the window size is 20. Using a bigger window size of 70, there is more significant improvement in the prediction accuracy for individual users (Fig. 10(b)).

From the previous experiment, it is clear that the adoption of additional relevant information increases the prediction accuracy. In order to further improve the prediction performance, information from any behavior type from any set of users (including the target user) with high similarity can be merged into the target user data. Fig. 11
                            shows that the relative improvement is significant compared to the previous two instance transfer approaches when they are used separately. In particular, the relative improvement reaches more than 10% for user 17 with window size of 70.

The time-dependent direct instance transfer always improves the prediction performance of the sequential behavior prediction approach for the three behavior transfer settings. The auxiliary data from other users clearly help to provide more information about the pattern of the target user, which leads to a more appropriate eigen-behavior pattern. Table 2
                            gives the experimental results for comparison targets. Here, ‘PCA Rec.’ (short for PCA reconstruction) is the algorithm proposed in Section 4.5 (without auxiliary data transfer). Clearly, our proposed approach shows significantly better performance than the compared baseline approaches.

Although our proposed method is consistently more accurate than PCA Rec, this difference is not significant given paired t-tests (voice: 
                              
                                 p
                                 =
                                 0.136
                                 ,
                                 CI
                                 =
                                 [
                                 -
                                 0.012
                                 ,
                                 0.088
                                 ]
                              
                           ; SMS: 
                              
                                 p
                                 =
                                 0.141
                                 ,
                                 CI
                                 =
                                 [
                                 -
                                 0.007
                                 ,
                                 0.046
                                 ]
                              
                           ; and App usage: 
                              
                                 p
                                 =
                                 0.119
                                 ,
                                 CI
                                 =
                                 [
                                 -
                                 0.006
                                 ,
                                 0.054
                                 ]
                              
                           ). Our approach is typically significantly more accurate than ARIMA, however (voice: 
                              
                                 p
                                 =
                                 0.047
                                 ,
                                 CI
                                 =
                                 [
                                 0.001
                                 ,
                                 0.099
                                 ]
                              
                           ; SMS: 
                              
                                 p
                                 =
                                 0.004
                                 ,
                                 CI
                                 =
                                 [
                                 0.014
                                 ,
                                 0.070
                                 ]
                              
                           ; and App usage: 
                              
                                 p
                                 =
                                 0.078
                                 ,
                                 CI
                                 =
                                 [
                                 -
                                 0.003
                                 ,
                                 0.060
                                 ]
                              
                           ). Our proposed algorithm yields empirically better performance in terms of effect size (Cohen’s d), as shown in Table 3
                           .

Another set of experiments are performed based on the MIT Reality Mining dataset which contains mainly location and phone usage information. After preprocessing the raw data, rearranging the behavior sequences to the 2-dimensional matrix, 
                           
                              
                                 
                                    M
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          a
                                       
                                       
                                          T
                                       
                                    
                                 
                              
                           
                        , 85 users remain with valid data. Here, only the different-user same-behavior transfer experiments are performed. The mean data size of the reality mining dataset is about 111days. Generally, larger window size leads to better results. However, larger window size also leads to less valid users, since some users do not have enough data (more than the window size) for training. The optimization of the window size involves the balance between better individual results and less valid users. In order to make use of as many users as possible, the empirical window size is 30.

The direct prediction results are given in Fig. 12
                        (a). The few 0-values are caused by insufficient user data for those individuals (i.e., fewer observations than the window size, 30). Fig. 12(b) shows the histogram of the detailed prediction results excluding the zeros. The mean prediction accuracy over 85 users is 74.40% (
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              =
                              3.44
                              %
                           
                        ), ranging from 59.13% to 92.36% across individuals.

After applying time-dependent instance transfer from different users, the prediction accuracy is significantly improved. Fig. 12 gives the detailed prediction accuracy and the corresponding relative improvements. The mean prediction accuracy over 85 users is 80.61% (
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              =
                              3.43
                              %
                           
                        ), ranging from 60.02% to 95.83%. This transfer algorithm clearly boosts accuracies for users for whom a sparsity of data previously made behavior prediction impossible. Fig. 12(c) shows the relative improvements. Excluding users for whom there were no results initially, the largest relative improvement is 18.97% and the mean relative improvement is about 3.09%. Table 2 shows the results for comparison targets. Our approach shows significantly better performance than all the comparison baseline approaches (see Table 4
                        ).

In this dataset, the improvement using our proposed algorithm over 6% is evident. Our approach is significantly more accurate than PCA (
                           
                              p
                              =
                              0.0015
                              ,
                              CI
                              =
                              [
                              0.027
                              ,
                              0.112
                              ]
                           
                        ), MA (
                           
                              p
                              <
                              0.001
                              ,
                              CI
                              =
                              [
                              0.035
                              ,
                              0.118
                              ]
                           
                        ), ARIMA (
                           
                              p
                              =
                              0.00001
                              ,
                              CI
                              =
                              [
                              0.054
                              ,
                              0.136
                              ]
                           
                        ), and HMM (
                           
                              p
                              =
                              0.0015
                              ,
                              CI
                              =
                              [
                              0.013
                              ,
                              0.129
                              ]
                           
                        ).

@&#CONCLUSIONS@&#

In this paper, we propose a general knowledge transfer strategy that integrates a time-dependent instance transfer mechanism, driven by a hybrid similarity measure, into learning and predicting sequential human behavior. In particular, transfer component analysis (TCA) is utilized for domain adaptation from different data types to overcome data sparsity in a sequential prediction setting. The hybrid user similarity measure is developed based on three different characteristics: eigen-behavior, longest common behavior (LCB), and daily common behavior (DCB). Extensive comparisons are made against state-of-the-art time series prediction algorithms using the Nokia Mobile Data Challenge (MDC) dataset and the MIT Reality Mining dataset. Experimental results show that our proposed instance transfer algorithm significantly improves the performance of behavior prediction up to 89.94% accuracy.

The proposed knowledge transfer algorithm is not based on any special assumption of the data and therefore could be easily applied to any data types. The present work focuses mainly on ‘high level’ prediction of future behaviors over hourly intervals. Future work will focus on simultaneous-behavior prediction, where different behavior records can be processed jointly.

As mentioned in Section 4.4, when transferring data from source domain 
                        
                           
                              
                                 X
                              
                              
                                 S
                              
                           
                        
                      of size 
                        
                           
                              
                                 n
                              
                              
                                 1
                              
                           
                        
                      to target domain 
                        
                           
                              
                                 X
                              
                              
                                 T
                              
                           
                        
                      of size 
                        
                           
                              
                                 n
                              
                              
                                 2
                              
                           
                        
                     , this first embeds the behavior data in a kernel matrix, 
                        
                           K
                        
                     , defined in Eq. (A.1).
                        
                           (A.1)
                           
                              K
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      S
                                                      ,
                                                      S
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      S
                                                      ,
                                                      T
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      T
                                                      ,
                                                      S
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      T
                                                      ,
                                                      T
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 K
                              
                              
                                 S
                                 ,
                                 S
                              
                           
                           ,
                           
                              
                                 K
                              
                              
                                 T
                                 ,
                                 T
                              
                           
                        
                     , and 
                        
                           
                              
                                 K
                              
                              
                                 S
                                 ,
                                 T
                              
                           
                        
                      are the Gram matrices defined on the source domain, target domain, and cross-domain data in the embedded space, respectively.

By using the empirical kernel map 
                        
                           K
                           =
                           
                              
                                 
                                    
                                       
                                          KK
                                       
                                       
                                          -
                                          1
                                          /
                                          2
                                       
                                    
                                 
                              
                           
                           
                              
                                 
                                    
                                       
                                          K
                                       
                                       
                                          -
                                          1
                                          /
                                          2
                                       
                                    
                                    K
                                 
                              
                           
                        
                     , the resultant kernel matrix is
                        
                           (A.2)
                           
                              
                                 
                                    K
                                 
                                 
                                    ∼
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             KK
                                          
                                          
                                             -
                                             1
                                             /
                                             2
                                          
                                       
                                       
                                          
                                             W
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   W
                                                
                                                
                                                   ∼
                                                
                                             
                                          
                                          
                                             T
                                          
                                       
                                       
                                          
                                             K
                                          
                                          
                                             -
                                             1
                                             /
                                             2
                                          
                                       
                                       K
                                    
                                 
                              
                              =
                              
                                 
                                    KWW
                                 
                                 
                                    T
                                 
                              
                              K
                           
                        
                     where 
                        
                           W
                           =
                           
                              
                                 K
                              
                              
                                 -
                                 1
                                 /
                                 2
                              
                           
                           
                              
                                 W
                              
                              
                                 ∼
                              
                           
                        
                     . The maximum mean discrepancy (MMD) distance between the empirical means of source domain and target domain can be calculated as [23]
                     
                        
                           (A.3)
                           
                              Dst
                              (
                              
                                 
                                    X
                                 
                                 
                                    S
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    T
                                 
                              
                              )
                              =
                              tr
                              
                                 
                                    
                                       
                                          
                                             KWW
                                          
                                          
                                             T
                                          
                                       
                                       KL
                                    
                                 
                              
                              =
                              tr
                              
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             T
                                          
                                       
                                       KLKW
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 L
                              
                              
                                 ij
                              
                           
                        
                      is defined as
                        
                           (A.4)
                           
                              
                                 
                                    L
                                 
                                 
                                    ij
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                1
                                                /
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      j
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      S
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1
                                                /
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      j
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      T
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1
                                                /
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

The variance of the projected samples can be calculated as
                        
                           (A.5)
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              (
                              
                                 
                                    X
                                 
                                 
                                    S
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    T
                                 
                              
                              )
                              =
                              
                                 
                                    W
                                 
                                 
                                    T
                                 
                              
                              KHKW
                           
                        
                     where 
                        
                           H
                           =
                           
                              
                                 I
                              
                              
                                 
                                    
                                       n
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       n
                                    
                                    
                                       2
                                    
                                 
                              
                           
                           -
                           (
                           1
                           /
                           
                              
                                 n
                              
                              
                                 1
                              
                           
                           +
                           
                              
                                 n
                              
                              
                                 2
                              
                           
                           )
                           
                              
                                 11
                              
                              
                                 T
                              
                           
                        
                      is the centering matrix, 
                        
                           1
                        
                      is the column vector with all 1’s, 
                        
                           
                              
                                 I
                              
                              
                                 
                                    
                                       n
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       n
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                      is the identity matrix [23].

TCA minimizes the distance between the empirical means of the two domains, while maximizing the the variance of the projected samples, shown in Eq. (A.6).
                        
                           (A.6)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                
                                                   min
                                                
                                                
                                                   W
                                                
                                             
                                          
                                          
                                          tr
                                          
                                             
                                                
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   KLKW
                                                
                                             
                                          
                                          +
                                          μ
                                          ·
                                          tr
                                          
                                             
                                                
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   W
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                          
                                          
                                          
                                          
                                             
                                                W
                                             
                                             
                                                T
                                             
                                          
                                          KHKW
                                          =
                                          
                                             
                                                I
                                             
                                             
                                                m
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           μ
                           >
                           0
                        
                      is a tradeoff parameter, 
                        
                           tr
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          T
                                       
                                    
                                    W
                                 
                              
                           
                        
                      is a regularization term to control the complexity of W, and 
                        
                           
                              
                                 I
                              
                              
                                 m
                              
                           
                        
                      is the identity matrix of size m.

@&#REFERENCES@&#

