@&#MAIN-TITLE@&#A new robust and secure digital image watermarking scheme based on the integer wavelet transform and singular value decomposition

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new robust secure IWT–SVD image watermarking scheme is proposed in this paper.


                        
                        
                           
                           It strongly achieved the watermarking requirements due to the IWT and SVD properties.


                        
                        
                           
                           It outperformed among the compared schemes especially in robustness and security.


                        
                        
                           
                           It addressed security weakness due to false positive problem using digital signature.


                        
                        
                           
                           All the previous points makes the scheme a good choice for copyright protection.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Digital image watermarking

Integer wavelet transform

Singular value decomposition

Wilcoxon signed rank test

Digital signature

@&#ABSTRACT@&#


               
               
                  In this paper, a new robust and secure digital image watermarking scheme that can be used for copyright protection is proposed. The scheme uses the integer wavelet transform (IWT) and singular value decomposition (SVD). The grey image watermark pixels values are embedded directly into the singular values of the 1-level IWT decomposed sub-bands. Experimental results demonstrate the effectiveness of the proposed scheme in terms of robustness, imperceptibility and capacity due to the IWT and SVD properties. A challenge due to the false positive problem which may be faced by most of SVD-based watermarking schemes has been solved in this work by adopting a digital signature into the watermarked image. The proposed digital signature mechanism is applied to generate and embed a digital signature after embedding the watermarks; the ownership is then authenticated before extracting watermarks. Thus, the proposed scheme achieved the security issue where the false positive problem is solved, in addition to that, the scheme is considered as a blind scheme. A computer simulation is used to verify the feasibility of the proposed scheme and its robustness against various types of attacks and to compare it with some previous schemes. Furthermore, the statistical Wilcoxon signed rank test is employed to certify the effectiveness of the proposed scheme.
               
            

@&#INTRODUCTION@&#

With the rapid global expansion of the Internet, the growth of digital technologies has become a basic requirement, and these technologies provide numerous advantages for transferring data across the World Wide Web. The easy editing, transfer and tracing of digital data and the ability to copy data without degrading the content are some advantages. However, a number of problems have emerged along with these advantages, one of which is the ease with which digital data can be perfectly and rapidly copied, which necessitates copyright protection. Thus, digital watermarking was suggested as an attractive solution to protect copyright. Although it was the main reason for the introduction of digital watermarking, copyright protection is not the only application of this technology, which has been expanded to fingerprinting, broadcast monitoring and authentication applications.

Digital watermarking is the process of concealing secret information in a digital medium. This information should be imperceptibly embedded in a way that allows it to be extracted or detected later for security purposes. Different types of digital watermarking methods for various media have been developed and classified into three classes: robust, fragile and semi-fragile. These classes are application-dependent. Additional classes of such technologies are blind, semi-blind and non-blind, which are based on the information required for the extraction or detection process. The alternative classifications rely on the domain where the secret information will be embedded and are further classified as spatial domain techniques and transform domain techniques. Low complexity and easy implementation are the advantages of each spatial watermarking technique. Despite these benefits, spatial watermarking methods are fragile against image processing operations. However, transform watermarking techniques; such as discrete cosine transform (DCT) [1,2], discrete wavelet transform (DWT) [3], redundant discrete wavelet transform (RDWT) [4,5], radon transform [6], lifting wavelet transform (LWT) [7] and etc., are preferred due to their desirable properties. These schemes embed a watermark by modulating the coefficients magnitude in a transform domain, allowing more information to be embedded, thus resulting in greater robustness against both image processing attacks (e.g., JPEG compression and noise attacks) and malicious attacks (e.g., rotation, scaling and translation attacks).

All digital watermarking schemes consist of two processes: the embedding process and the extracting or detecting process. Each watermarking scheme must satisfy a number of requirements. The basic requirements related to any watermarking system are robustness, capacity and data payload, imperceptibility and security. Robustness refers to the scheme's resistance against several attacks, including image processing attacks and geometrical attacks. Robustness varies from one operation to another and from one scheme to another. All schemes cannot resist all attacks, and hence, their resistance is application-dependent [8]. The second requirement is capacity and data payload. The data payload indicates number of watermark bits that encoded within a message [9] while the watermark capacity indicates the amount of information in the selected medium (e.g., image, video or audio), for example in an image, if multiple watermarks are embedded, then the sum of all individual watermark's data payload is the watermarking capacity [10]. The similarity between the original medium and its watermarked version is known as imperceptibility. Imperceptibility is sometimes referred to as fidelity or perceptual transparency [9]. The peak signal-to-noise ratio (PSNR) is a metric that is used to evaluate imperceptibility performance. A higher PSNR indicates a higher imperceptibility. Generally in the watermarking world, a minimum PSNR of 38 dB is considered acceptable [11]. A trade-off always exists among the robustness, capacity and imperceptibility; for example, increasing the embedding capacity in an image may enhance its robustness while simultaneously degrading its imperceptibility and vice versa. Therefore, researchers have increased their efforts to develop techniques that find a compromise between these conflicting parameters. Thus, many robust techniques with high embedding capacities and good imperceptibilities have been developed. The security term is used to describe a technique that resists many hostile attacks [9], indicating that a robust scheme can survive common image processing operations, but may not be secure against malicious attacks. The security aspect of the singular value decomposition (SVD)-based schemes should be monitored, specifically, the problem of false positive, thus will serve the security requirement.

Currently, improving the robustness against attacks by protecting the visual quality is considered the core motivation of most existing watermarking schemes. Hence, the incentive to develop hybrid schemes that combine two or more transforms to utilise the properties of these transforms and achieve the required goals has arisen. A few years ago, a number of robust hybrid watermarking schemes based on SVD were developed [12,13,4,14,3,5,7,15]. SVD is a technique that can be used to mathematically extract the algebraic properties from an image. Considering an image as a matrix A, SVD of A can be represented as follows:
                        
                           (1)
                           
                              
                                 SVD
                              
                              (
                              A
                              )
                              =
                              U
                              S
                              
                                 
                                    V
                                 
                                 
                                    T
                                 
                              
                           
                        
                      
                     U, S and 
                        
                           
                              V
                           
                           
                              T
                           
                        
                      are matrices. SVD-based digital watermarking schemes embed a watermark by modifying either the singular values (S) or the orthogonal vectors U and V. One of the advantages to employing SVD in digital watermarking schemes is the good stability of its singular values, meaning that the visual quality of the image can be preserved even for large singular value changes, which may occur during the attacks. Although, most SVD-based watermarking schemes have proven their robustness, they have failed to resolve their rightful ownership [12,13,4,14,3,5]. These schemes suffered from the false positive problem, in which a fake watermark was detected from the content of where a different watermark was embedded. Two causes of this problem are stated in this paper. The first involves the modification of the singular values of the host with the singular values of the watermark as occurred with the schemes developed by Ganic et al. [13], Lagzian et al. [4] and Rastegar et al. [14]. All of these schemes followed the same embedding steps except for the wavelet transform types used, which were the DWT by [13], RDWT by [4], and finite Radon transform (FRAT) and DWT by [14]. The embedding process was performed by modifying the singular values of each sub-band of the host image with the singular values of the watermark. Here, the false positive problem might have occurred due to exposing the watermark to the SVD process, as was explained clearly by Xiao et al. [16]. The second cause of this problem is due to the following embedding process:
                        
                           (2)
                           
                              S
                              +
                              α
                              W
                              =
                              
                                 
                                    U
                                 
                                 
                                    W
                                 
                              
                              
                                 
                                    S
                                 
                                 
                                    W
                                 
                              
                              
                                 
                                    V
                                 
                                 
                                    W
                                 
                                 
                                    T
                                 
                              
                           
                        
                      as occurred with [12,3,5]. This process requires the embedding of the watermark (W) into the singular values (S) of the host image after multiplying it by scaling factor α. Next, the result is transformed using SVD to obtain new matrices named as 
                        
                           
                              U
                           
                           
                              W
                           
                        
                     , 
                        
                           
                              S
                           
                           
                              W
                           
                        
                      and 
                        
                           
                              V
                           
                           
                              W
                           
                           
                              T
                           
                        
                      to distinguish between them and the matrices results due to applying SVD on the original host image. The challenge in such an embedding process results from adopting 
                        
                           
                              U
                           
                           
                              W
                           
                        
                      and 
                        
                           
                              V
                           
                           
                              W
                           
                           
                              T
                           
                        
                      as secret keys for the extraction process. Usually, U and V can preserve major information about an image. Therefore, the attacker can claim ownership using forged singular vectors 
                        
                           
                              U
                           
                           
                              F
                           
                        
                      and 
                        
                           
                              V
                           
                           
                              F
                           
                        
                      to obtain a unique forged watermark regardless of the extracted singular values [17,18]. Thus, the schemes follow the same embedding technique are vulnerable to the false positive problem [17–19]. Examples of these schemes include Liu et al. [12], Lai et al. [3] and Makbol et al. [5]. In Liu et al. [12], the host image was transformed using SVD, and the watermark was then directly embedded into the singular values of the host image using Eq. (2). In Lai et al. [3], the authors decomposed the host image into four sub-bands (LL, LH, HL and HH) using the DWT and then applied SVD to only the LH and HL sub-bands. Finally, the watermark image was divided into two-halves and then embedded into the singular values of LH and HL, respectively, using Eq. (2). However, Makbol et al. [5] decomposed the host image into four sub-bands (LL, LH, HL and HH) using the RDWT instead of the DWT proposed by Lai et al. [3]. Each sub-band was the same size as the host image due to the RDWT decomposition analysis. After this analysis, the SVD was applied to all sub-bands, and four grey-scale watermark images with the same host image size were embedded in the singular values of the sub-bands by means of Eq. (2). Notably, the above-mentioned schemes that suffered from the false positive problem exhibited good performance against attacks, especially our previously reported scheme (Makbol et al. scheme [5]). With the Makbol et al. scheme [5], we approached the problem by ignoring the exposure of the watermark to SVD, but the security weakness due to the false positive detection is emerged due to the adopted embedding equation that addressed by Eq. (2). However, Makbol's scheme outperformed some of the state of the art schemes in all watermarking requirements (robustness, embedding capacity and imperceptibility). In this study, we met all of the watermarking requirements, especially robustness. Moreover, we attempted to overcome the lack of security due to the false positive problem by discovering a suitable solution that also satisfied the other watermarking requirements. Several solutions to this issue have been suggested, such as those proposed by Loukhaoukha et al. [20] and Gupta et al. [21]. Loukhaoukha et al. [20] reported two solutions, the first of which was to apply a one-way hash function on U and V. Accordingly, these terms received two hashing values, 
                        
                           
                              H
                           
                           
                              U
                           
                        
                      and 
                        
                           
                              H
                           
                           
                              V
                           
                        
                     , which were then stored into a private key. This proposed solution was presented and implemented by Loukhaoukha et al. [7]. First, these authors applied a 2-level LWT on a host image and then selected any sub-band (LH2, HL2 or HH2). The authors then computed the inverse LWT and applied SVD to the results, obtaining U, S and V. SVD was also applied to a watermark, obtaining 
                        
                           
                              U
                           
                           
                              W
                           
                        
                     , 
                        
                           
                              S
                           
                           
                              W
                           
                        
                      and 
                        
                           
                              V
                           
                           
                              W
                           
                        
                     . Embedding was accomplished by modifying the singular values (S) of the host image using the singular values (
                        
                           
                              S
                           
                           
                              W
                           
                        
                     ) of the watermark. Loukhaoukha et al. [7] solved the false positive problem by applying a one-way hash function to 
                        
                           
                              U
                           
                           
                              W
                           
                        
                      and 
                        
                           
                              V
                           
                           
                              W
                           
                        
                      to protect them. In this approach, the receiver tests the extracted hash values and then compares them with the received values for authentication before beginning the extraction process. If the values are authenticated, the extraction process is continued; otherwise, it is stopped. The second suggested solution by Loukhaoukha et al. [20] involved encrypting the watermark before embedding it into the host image, this solution has been adopted by Gokhale et al. [22]. Gupta et al. [21] suggested another solution to this problem. The authors proposed a signature-based authentication mechanism for both U and V before continuing to the extraction process.

A new secure and robust image watermarking scheme based on the integer wavelet transform (IWT) and SVD was developed and investigated in this study. In the proposed scheme, the grey watermark image was embedded directly into the singular values of all the IWT sub-bands. The embedded watermark size was half of the original image size, due to IWT decomposition analysis. A 1-level IWT was used to decompose the host image into four sub-bands, with each one being half the size of the host image. The proposed scheme was blind and demonstrated a high resistance against geometrical and non-geometrical attacks (especially JPEG compression and noise attacks). JPEG compression was a major focus in this study, because numerous real-time applications use this function to reduce media storage and transmission costs. The resistance of any scheme to JPEG compression and noise attacks may benefit those applications. As previously explained, the security weaknesses occurring due to false positive problem were also covered well by generating a digital signature. The scheme proposed in this paper generates a digital signature using a special key and a SHA-1 algorithm and then embeds it into a watermarked image by applying a proposed digital signature embedding procedure. The digital signature is used in the extraction process to authenticate the secret key values, and if they match, the watermark is extracted, else the extraction process is stopped. Good imperceptibility, capacity, security and high robustness made our proposed scheme an ideal choice for copyright protection applications. The proposed scheme was compared with those of Makbol et al. (RDWT–SVD) [5], Ganic et al. (DWT–SVD) [13] and Lagzian et al. (RDWT–SVD) [23]. Statistical analyses were performed in this study by employing the Wilcoxon signed rank statistical test to compare our proposed scheme to the Makbol et al. scheme [5] due to the closeness between their results. This test indicated that the IWT–SVD scheme proposed herein outperformed our previous RDWT–SVD scheme [5] in almost all sub-bands with respect to robustness and security.

The remainder of this paper is organised as follows. Section 2 presents a brief overview regarding each of the transforms applied in the proposed scheme. In Section 3, the proposed IWT–SVD scheme (i.e., the watermark embedding and extracting procedures) and the authentication mechanism (i.e., the digital signature generating, embedding and extracting procedures), are stated. The experimental setup and results are presented in Section 4. In Section 5, comparative and statistical analyses of our scheme and Makbol's scheme [5] are presented. Finally, our conclusions are stated in Section 6.

The lifting wavelet transform is a flexible technique introduced by Sweldens [24] and is considered as a construction tool for adapting wavelets to general settings. The generalisation is applied to the first generation wavelets to include new properties while preserving the existing properties [24]. The essential idea, which inspired the name, is to begin with a simple multi-resolution analysis and gradually work until a multi-resolution analysis with certain properties is obtained [24]. Simply, the transform is “lifted” to another transform with particular properties, allowing the custom design of filters, which are required by the transform for the situation at hand [24]. It is proved that all classical wavelets could be implemented using lifting schemes [25], possessing a number of advantages over the classical wavelet transforms. They are easy to understand, easy to implement and easy to invert [26,24]. They are also fast where all calculations are performed in place, and auxiliary memory is not required [24]. Splitting, predicting and updating are the three implementation steps for any lifting wavelet transform [27,26].
                           
                              •
                              Split: The original signal is divided into two samples sets: even and odd sets [26].

Predict: This step is also called dual lifting [27]. In this phase, the odd samples are predicted from the even samples [26].

Update: This step is also called primal lifting. In this step new even samples are produced by adding the original even samples to the predicted odd samples after update them using the updating operator [27,26,28].

The inverse lifting transform is easy and is accomplished via reversing the lifting steps and exchanging the split by merging. Fig. 1
                         illustrates the lifting and the inverse lifting steps [26]. In many applications; such as image compression and processing, the input data contains integer samples. However, all classical transforms assume that the input data are floating point values, even if they are actually integers. These floating point values represent the wavelet coefficients, which will then be rounded to integer values so they will lose the perfect reconstruction property. One of the significant features of lifting schemes is that they can be altered into a transform, which maps integers to integers without rounding errors [29,30]. The transform described is the integer wavelet transform (IWT). The IWT is reversible and thus can ensure a perfect reconstruction property. Due to the previously mentioned properties, the IWT is considered to be a more efficient and rapid lifting wavelet transform [31]; Its properties can be utilised to enhance the robustness and preserve the imperceptibility. Accordingly, this technique is adopted by the scheme proposed in this paper.

The singular value decomposition (SVD) is a numerical analysis technique that was discovered long ago to serve many applications [5]. This scheme was introduced in the 1870's by Beltrami and Jordan and used for real square matrices and then for complex matrices by Autonne's 1902 as cited in [7]. Later, in 1939, Eckart and Young improved the SVD technique to include rectangular matrices as cited in [7]. Currently, the SVD scheme is effective and widely used in image processing applications, such as image watermarking, image hiding, image compression and noise reduction [7,5]. Applying the SVD on any medium, such as an image, would not noticeably affect it when a small interference is added to this image [7,32].

Consider an image as matrix A of real/complex 
                           N
                           ×
                           N
                         with rank r, 
                           A
                           (
                           r
                           <
                           N
                           )
                        . Using SVD, matrix A can be represented as follows:
                           
                              (3)
                              
                                 A
                                 =
                                 
                                    
                                       U
                                    
                                    
                                       A
                                    
                                 
                                 
                                    
                                       S
                                    
                                    
                                       A
                                    
                                 
                                 
                                    
                                       V
                                    
                                    
                                       A
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    r
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 ⁎
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 ⁎
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                    
                                       T
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       U
                                    
                                    
                                       A
                                    
                                 
                                 =
                                 [
                                 
                                    
                                       u
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 .
                                 .
                                 .
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       N
                                    
                                 
                                 ]
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       V
                                    
                                    
                                       A
                                    
                                 
                                 =
                                 [
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 .
                                 .
                                 .
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       N
                                    
                                 
                                 ]
                              
                           
                        
                        
                           
                              (6)
                              
                                 S
                                 =
                                 
                                    [
                                    
                                       
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   1
                                                
                                             
                                          
                                          
                                          
                                          
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                          
                                          
                                       
                                       
                                          
                                          
                                          
                                             .
                                          
                                          
                                          
                                       
                                       
                                          
                                          
                                          
                                          
                                             .
                                          
                                          
                                       
                                       
                                          
                                          
                                          
                                          
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   N
                                                
                                             
                                          
                                       
                                    
                                    ]
                                 
                              
                           
                         
                        
                           
                              
                                 U
                              
                              
                                 A
                              
                           
                         and 
                           
                              
                                 V
                              
                              
                                 A
                              
                           
                         are 
                           N
                           ×
                           N
                         orthogonal matrices, in which 
                           
                              
                                 u
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 v
                              
                              
                                 i
                              
                           
                        , (
                           1
                           ≤
                           i
                           ≤
                           N
                        ), respectively, represent their column vectors, whereas the 
                           
                              
                                 S
                              
                              
                                 A
                              
                           
                         is 
                           N
                           ×
                           N
                         diagonal matrix including the singular values 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         in a decreasing order [7]. The widespread use of SVD in image processing applications is due to its important features and characteristics, which are the following [5,7]:
                           
                              1.
                              Good stability of the singular values 
                                    
                                       
                                          S
                                       
                                       
                                          A
                                       
                                    
                                  of any image, i.e., no significant changes to the SVs of images will occur upon the addition of small perturbations.

The singular values (S) of an image specify its algebraic properties, representing an image's luminance, whereas the singular vectors (U and V) represent the geometry properties of an image.

Singular values are in descending order, and many of them have small values compared to the first singular value. Updating or ignoring these small singular values at the reconstruction stage leads to a slight and negligible effect on an image's quality.

SVD can be applied on square or rectangle matrices.

The proposed IWT–SVD scheme is presented in this section. The scheme has two procedures: watermark embedding and extracting, as shown in Fig. 2
                     (a) and Fig. 2(b), respectively.

Before listing the steps of these two procedures, our proposed authentication mechanism will be illustrated.

An authentication mechanism is proposed in this paper as one of several suggested solutions for the false positive problem, which has occurred in numerous SVD-based watermarking schemes [12,13,4,14,3,5]. Several experiments have addressed this problem independently. Zhang et al. [17] and Rykaczewski [19] addressed this problem for the scheme proposed by Liu et al. [12], and Ling et al. [18] addressed it for the scheme proposed by Rastegar et al. [14]. The authors showed that the flaw in such schemes was due to matrices U and V, which preserved the major information of an image, as the eigenvectors of the singular values S were represented. When applying inverse SVD, eigenvectors play a significant role in the reconstruction process. Thus, any singular matrix S is used along with these eigenvectors, producing a correlated output instead of an actual output. The correlation will be high if the unmatched singular values are approximately equal to the original singular values, and hence, a security weakness arises, namely, the high probability of false positive watermark detection [21]. This security threat is due to unauthorized embedding by an attacker, in which personal eigenvectors are employed in the extraction process to claim a false ownership.

Thus, a signature-based authentication mechanism for the matrices U and V is proposed in this study to overcome such drawbacks. The orthogonal matrices U and V are authenticated before being used in the watermark extraction process. The authentication process is performed into two stages: the signature generation and embedding stage and the signature extraction and authentication stage. First, a unique signature is generated and embedded into an image by means of a signature embedding procedure. In this work, the signature embedding process is implemented in parallel with the watermark embedding process. The signature is generated within the watermark embedding steps and is then embedded into the watermarked image as a final step in the watermark embedding procedure. On the detection side, the decoder extracts the embedded signature first and matches it with the signature that is generated at the user side based on the received U and V. If U and V match, they are authenticated, and the watermark extraction process is continued. Otherwise, the extraction process is stopped.

Unique binary digits are generated as a digital signature of the secret keys: the U and V matrices. This signature should be random to prevent an attacker from predicting it. A secret key is also selected to participate in generating the signature. The digital signature generation steps are the following:
                              
                                 1.
                                 Transform the orthogonal matrices U and V from 2-D to 1-D arrays.

Hash U and V using SHA-1.
                                       
                                          (7)
                                          
                                             
                                                
                                                   
                                                      Digest
                                                   
                                                
                                                
                                                   U
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      Hashing
                                                   
                                                
                                                
                                                   (
                                                   
                                                      SHA
                                                   
                                                   -
                                                   1
                                                   )
                                                
                                             
                                             (
                                             U
                                             )
                                          
                                       
                                    
                                    
                                       
                                          (8)
                                          
                                             
                                                
                                                   
                                                      Digest
                                                   
                                                
                                                
                                                   V
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      Hashing
                                                   
                                                
                                                
                                                   (
                                                   
                                                      SHA
                                                   
                                                   -
                                                   1
                                                   )
                                                
                                             
                                             (
                                             V
                                             )
                                          
                                       
                                    
                                 

Convert the 
                                       
                                          
                                             
                                                Digest
                                             
                                          
                                          
                                             U
                                          
                                       
                                     and 
                                       
                                          
                                             
                                                Digest
                                             
                                          
                                          
                                             V
                                          
                                       
                                     into their corresponding binary digits, and then do XORing between them; the result is named R1.

Convert the selected secret key into binary digits; the result is named R2.

XORing R1 and R2; the result is named Result.

For authentication purposes, select the first 8-bits of the Result as a digital signature bits stream, named Sig.

Before listing the signature embedding steps, we acknowledge that we attempted to embed the digital signature stream into pixels that are robust against attacks, which did not significantly affect the image quality. The SVD transform provides many properties that make it an ideal choice to embed the digital signature. To achieve high robustness, the digital signature is embedded via changing the first column entries of the U matrices. Empirically, the second elements of the U orthogonal vector first column are selected as the optimal elements to embed the digital signature. In contrast, image imperceptibility should be protected. DWT has been selected to decompose the watermarked image before embedding the signature. The reasons for choosing DWT are simplicity as it is for the purpose of embedding 8 bit signature and using different transform from the main embedding process as to provide additional security. Steps of the signature embedding are illustrated as follows:
                              
                                 1.
                                 Perform the 1-level DWT onto the watermarked image.

Divide the LL sub-band into 
                                       8
                                       ×
                                       8
                                     blocks.

Randomly select eight blocks with the help of the secret key.

For each selected block, perform an SVD.

Round each element 
                                       
                                          
                                             U
                                          
                                          
                                             2
                                             ,
                                             1
                                          
                                       
                                     to the nearest integer less than or equal to its integer part after multiplying 
                                       
                                          
                                             U
                                          
                                          
                                             2
                                             ,
                                             1
                                          
                                       
                                     by 10, as follows:
                                       
                                          (9)
                                          
                                             
                                                
                                                   U
                                                
                                                
                                                   2
                                                   ,
                                                   1
                                                
                                                
                                                   
                                                      modified
                                                   
                                                
                                             
                                             =
                                             ⌊
                                             
                                                
                                                   U
                                                
                                                
                                                   2
                                                   ,
                                                   1
                                                
                                             
                                             ×
                                             10
                                             ⌋
                                          
                                       
                                    
                                 

Based on the digital signature bits stream Sig, examine 
                                       
                                          
                                             U
                                          
                                          
                                             2
                                             ,
                                             1
                                          
                                          
                                             
                                                modified
                                             
                                          
                                       
                                     as follows:
                                       
                                          (a)
                                          If the signature bit equals one and 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      2
                                                      ,
                                                      1
                                                   
                                                   
                                                      
                                                         modified
                                                      
                                                   
                                                
                                              is even, or if signature bit equals zero and 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      2
                                                      ,
                                                      1
                                                   
                                                   
                                                      
                                                         modified
                                                      
                                                   
                                                
                                              is odd, increase 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      2
                                                      ,
                                                      1
                                                   
                                                   
                                                      
                                                         modified
                                                      
                                                   
                                                
                                              by one, and divide the results by 10.

Otherwise keep 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      2
                                                      ,
                                                      1
                                                   
                                                   
                                                      
                                                         modified
                                                      
                                                   
                                                
                                              unchanged.

Based on the previous steps, save the results in 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      2
                                                      ,
                                                      1
                                                   
                                                
                                             .

Perform inverse SVD for all selected blocks.

Perform inverse DWT.


                           
                              
                                 1.
                                 Perform the 1-level DWT on the received image (watermarked image (possibly distorted)).

Divide the LL sub-band into 
                                       8
                                       ×
                                       8
                                     blocks.

Select the blocks based on the secret key.

Perform SVD for all the selected blocks.

Examine 
                                       
                                          
                                             U
                                          
                                          
                                             2
                                             ,
                                             1
                                          
                                       
                                     using the following condition:
                                       
                                          (10)
                                          
                                             
                                                Sig
                                             
                                             (
                                             i
                                             )
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         mod
                                                         (
                                                         ⌊
                                                         
                                                            
                                                               U
                                                            
                                                            
                                                               2
                                                               ,
                                                               1
                                                            
                                                         
                                                         ÷
                                                         10
                                                         ⌋
                                                         ,
                                                         2
                                                         )
                                                         =
                                                         =
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Before listing the embedding process steps, two scaling factor values will be adopted to embed the watermark in the image sub-bands. This adoption occurs because the singular values of the LL sub-band are much larger than the singular values of the other sub-bands. Based on this result, two values are selected as scaling factors: a value of 0.05 for the LL sub-band and a small value of 0.005 for the remaining sub-bands. Those selected values are based on several experiments; we believe that increasing the scaling factor will increase the scheme's robustness and simultaneously degrade the quality of the watermarked image. Based on our experiments, the range of 0.03 to 0.06 was suitable for the LL sub-band, while the range of 0.002 to 0.008 was suitable for the others. Thus, we used 0.05 for the LL sub-band and 0.005 for the other sub-bands to generate a fair comparison with some previous schemes, such as those of Ganic et al. [13] and Lagzian et al. [23]. The embedding procedure steps are listed below:
                           
                              •
                              Apply the 1-level IWT to decompose the host image into four sub-bands, named LL, HL, LH and HH.

Perform SVD on all sub-bands (LL, HL, LH and HH), as follows:
                                    
                                       (11)
                                       
                                          
                                             
                                                A
                                             
                                             
                                                i
                                             
                                          
                                          =
                                          
                                             
                                                U
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                V
                                             
                                             
                                                i
                                             
                                             
                                                T
                                             
                                          
                                       
                                    
                                  where i indicates the sub-bands (LL, LH, HL and HH).

Modify the singular values (
                                    
                                       
                                          S
                                       
                                       
                                          i
                                       
                                    
                                 ) of each sub-band by embedding the watermark directly into each singular value. Then, apply SVD to the altered sub-band singular values. These two alteration processes can be displayed as follows:
                                    
                                       (12)
                                       
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          +
                                          α
                                          W
                                          =
                                          
                                             
                                                U
                                             
                                             
                                                i
                                             
                                             
                                                W
                                             
                                          
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                             
                                                W
                                             
                                          
                                          
                                             
                                                V
                                             
                                             
                                                i
                                             
                                             
                                                T
                                                W
                                             
                                          
                                       
                                    
                                  where i indicates the sub-bands (LL, LH, HL and HH), α is the scaling factor (
                                    α
                                    =
                                    0.05
                                  for embedding into the LL sub-band and 
                                    α
                                    =
                                    0.005
                                  for embedding into other sub-bands (HL, LH and HH)).

Apply the signature generation procedure to the four corresponding sets (
                                    
                                       
                                          U
                                       
                                       
                                          i
                                       
                                       
                                          W
                                       
                                    
                                  and 
                                    
                                       
                                          V
                                       
                                       
                                          i
                                       
                                       
                                          T
                                          W
                                       
                                    
                                 ) of the four sub-bands. As a result, four 8-bit digital signatures are generated and named (
                                    
                                       
                                          Sig
                                       
                                       
                                          LL
                                       
                                    
                                 , 
                                    
                                       
                                          Sig
                                       
                                       
                                          HL
                                       
                                    
                                 , 
                                    
                                       
                                          Sig
                                       
                                       
                                          LH
                                       
                                    
                                  and 
                                    
                                       
                                          Sig
                                       
                                       
                                          HH
                                       
                                    
                                 ).

A final 8-bit digital signature will be established as follows:
                                    
                                       (13)
                                       
                                          
                                             
                                                Sig
                                             
                                             
                                                
                                                   Final
                                                
                                             
                                          
                                          =
                                          
                                             
                                                Sig
                                             
                                             
                                                LL
                                             
                                          
                                          ⊕
                                          
                                             
                                                Sig
                                             
                                             
                                                HL
                                             
                                          
                                          ⊕
                                          
                                             
                                                Sig
                                             
                                             
                                                LH
                                             
                                          
                                          ⊕
                                          
                                             
                                                Sig
                                             
                                             
                                                HH
                                             
                                          
                                       
                                    
                                  
                                 
                                    
                                       
                                          Sig
                                       
                                       
                                          
                                             Final
                                          
                                       
                                    
                                  is used at the end of the watermark embedding procedure by the signature embedding procedure to embed it as a digital signature into the watermarked image.

New modified IWT coefficients for each sub-band are performed as follows:
                                    
                                       (14)
                                       
                                          
                                             
                                                A
                                             
                                             
                                                i
                                             
                                          
                                          
                                             new
                                          
                                          =
                                          
                                             
                                                U
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                             
                                                W
                                             
                                          
                                          
                                             
                                                V
                                             
                                             
                                                i
                                             
                                             
                                                T
                                             
                                          
                                       
                                    
                                  where i indicates the sub-bands (LL, LH, HL and HH).

The watermarked image is then obtained after applying the inverse IWT on the four sets of modified IWT coefficients.
                                    
                                       (15)
                                       
                                          
                                             
                                                A
                                             
                                             
                                                W
                                             
                                          
                                          =
                                          
                                             
                                                IWT
                                             
                                             
                                                −
                                                1
                                             
                                          
                                       
                                    
                                 
                              

Finally, the signature embedding procedure is applied to embed the digital signature (
                                    
                                       
                                          Sig
                                       
                                       
                                          
                                             Final
                                          
                                       
                                    
                                 ) into the watermarked image (
                                    
                                       
                                          A
                                       
                                       
                                          W
                                       
                                    
                                 ).

Before extracting the watermark, a safety test was performed to protect our proposed scheme against false positive detection by authenticating the four received sets of 
                           
                              
                                 U
                              
                              
                                 i
                              
                              
                                 W
                              
                           
                         and 
                           
                              
                                 V
                              
                              
                                 i
                              
                              
                                 T
                                 W
                              
                           
                        ; i indicates each sub-band (LL, HL, LH and HH). The authentication process was performed by matching the generated digital signature of the four received sets of 
                           
                              
                                 U
                              
                              
                                 i
                              
                              
                                 W
                              
                           
                         and 
                           
                              
                                 V
                              
                              
                                 i
                              
                              
                                 T
                                 W
                              
                           
                        ; a secret key was also used in the authentication process, with the extracted digital signature from the watermarked image. If these values matched, the watermark extracting procedure was continued, and the four embedded watermarks were extracted. Otherwise, the process was stopped due to the high probability of false positive detection. The watermark extraction procedure is as follows:
                           
                              •
                              Perform the 1-level IWT on a watermarked image 
                                    
                                       
                                          A
                                       
                                       
                                          ⁎
                                          W
                                       
                                    
                                  (possibly distorted) to decompose it into four sub-bands (LL, LH, HL and HH).

Implement SVD on all sub-bands (LL, HL, LH and HH), as follows:
                                    
                                       (16)
                                       
                                          
                                             
                                                A
                                             
                                             
                                                ⁎
                                                W
                                             
                                          
                                          =
                                          
                                             
                                                U
                                             
                                             
                                                i
                                             
                                             
                                                ⁎
                                             
                                          
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                             
                                                ⁎
                                             
                                          
                                          
                                             
                                                V
                                             
                                             
                                                i
                                             
                                             
                                                ⁎
                                                T
                                             
                                          
                                       
                                    
                                  where i refers to the sub-bands (LL, LH, HL and HH).

Compute the following:
                                    
                                       (17)
                                       
                                          
                                             
                                                D
                                             
                                             
                                                i
                                             
                                             
                                                ⁎
                                             
                                          
                                          =
                                          
                                             
                                                U
                                             
                                             
                                                i
                                             
                                             
                                                W
                                             
                                          
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                             
                                                ⁎
                                             
                                          
                                          
                                             
                                                V
                                             
                                             
                                                i
                                             
                                             
                                                T
                                                W
                                             
                                          
                                       
                                    
                                  where i indicates the sub-bands (LL, LH, HL and HH).

Extract the watermark; which is denoted by 
                                    
                                       
                                          W
                                       
                                       
                                          i
                                       
                                       
                                          ⁎
                                       
                                    
                                 , using the secret key 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          i
                                       
                                    
                                    )
                                  as follows:
                                    
                                       (18)
                                       
                                          
                                             
                                                W
                                             
                                             
                                                i
                                             
                                             
                                                ⁎
                                             
                                          
                                          =
                                          
                                             (
                                             
                                                
                                                   D
                                                
                                                
                                                   i
                                                
                                                
                                                   ⁎
                                                
                                             
                                             −
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          /
                                          α
                                       
                                    
                                  where 
                                    
                                       
                                          W
                                       
                                       
                                          i
                                       
                                       
                                          ⁎
                                       
                                    
                                  is the watermark extracted from each sub-band.

The proposed IWT–SVD scheme simulation was implemented in MATLAB. The popular test image 
                        512
                        ×
                        512
                      Lena and 
                        256
                        ×
                        256
                      Cameraman image were used as a host image and a watermark image, respectively, to evaluate the proposed scheme. The investigation of the performance of the proposed IWT–SVD scheme under different circumstances was conducted in terms of imperceptibility and robustness against various attacks. Many criteria were suggested to estimate the imperceptibility and the robustness. The most widely used criteria are the peak signal-to-noise ratio (PSNR) and the normalised correlation (NC), which are employed consecutively. The PSNR is utilised to estimate the imperceptibility, a term used to evaluate the similarity between a host image and a watermarked image, and can be defined as follows:
                        
                           (19)
                           
                              
                                 PSNR
                              
                              =
                              10
                              
                                 
                                    log
                                 
                                 
                                    10
                                 
                              
                              ⁡
                              
                                 [
                                 
                                    
                                       max
                                       ⁡
                                       
                                          
                                             (
                                             x
                                             (
                                             i
                                             ,
                                             j
                                             )
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       MSE
                                    
                                 
                                 ]
                              
                           
                        
                      where the mean square error (MSE) between the host image x and the watermarked image y is defined as follows:
                        
                           (20)
                           
                              
                                 MSE
                              
                              =
                              
                                 1
                                 
                                    m
                                    ⁎
                                    n
                                 
                              
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 m
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 n
                              
                              
                                 
                                    [
                                    x
                                    (
                                    i
                                    ,
                                    j
                                    )
                                    −
                                    y
                                    (
                                    i
                                    ,
                                    j
                                    )
                                    ]
                                 
                                 
                                    2
                                 
                              
                           
                        
                      A good imperceptibility means that the watermarked image looks nearly identical to the original image, and thus, the host image is barely affected by the embedding process. In the watermarking world, the minimum acceptable value of PSNR is 38 dB [11].

The NC is a criterion that measures robustness by evaluating the similarities between the original and extracted watermarks after an attack. When the NC value is closer to 1 under applicable attacks, the scheme is robust against those attacks. In general, an NC value is acceptable if it is 0.75 or higher and can be estimated as follows:
                        
                           (21)
                           
                              
                                 NC
                              
                              (
                              w
                              ,
                              
                                 
                                    w
                                 
                                 
                                    ¯
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          M
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    [
                                    w
                                    (
                                    i
                                    ,
                                    j
                                    )
                                    −
                                    
                                       
                                          μ
                                       
                                       
                                          w
                                       
                                    
                                    ]
                                    [
                                    
                                       
                                          w
                                       
                                       
                                          ¯
                                       
                                    
                                    (
                                    i
                                    ,
                                    j
                                    )
                                    −
                                    
                                       
                                          μ
                                       
                                       
                                          
                                             
                                                w
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                    
                                    ]
                                 
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                M
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                                =
                                                1
                                             
                                             
                                                N
                                             
                                          
                                          
                                             
                                                [
                                                w
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                −
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      w
                                                   
                                                
                                                ]
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                M
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                                =
                                                1
                                             
                                             
                                                N
                                             
                                          
                                          
                                             
                                                [
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      ¯
                                                   
                                                
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                −
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            ¯
                                                         
                                                      
                                                   
                                                
                                                ]
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                      where M and N represent the numbers of rows and columns of the watermark image, respectively, and 
                        M
                        ×
                        N
                      is the number of pixels in the watermark image. Additionally, w, 
                        
                           
                              w
                           
                           
                              ¯
                           
                        
                      indicate the original watermark and the extracted watermark, respectively, while 
                        
                           
                              μ
                           
                           
                              w
                           
                        
                      and 
                        
                           
                              μ
                           
                           
                              
                                 
                                    w
                                 
                                 
                                    ¯
                                 
                              
                           
                        
                      represent the mean of the original and extracted watermarks.

The proposed scheme was tested and compared with the schemes of Makbol et al. [5], Ganic et al. [13] and Lagzian et al. [23]. These comparisons regarded authentication, imperceptibility, security, capacity and robustness.

The purpose of the authentication mechanism is the ability to recover the signature bits from the watermarked image if it is either exposed, attacked or not hindered. This purpose can be achieved through selecting good signature embedding positions. To prove the robustness of the signature embedding process used in this study with the proposed scheme, the host image is exposed to different attack types after embedding the signature. Table 2 lists the number of signature bits that can be recovered in the case of each attack.

The Lena imperceptibility test image value of the proposed IWT–SVD scheme (43.6769 dB) is stated and compared to other good schemes in Table 1
                        
                        . The achieved PSNR value is considered to be a high imperceptibility value [11], even though it is lower than previously reported [5]. Fig. 3
                         displays the Lena watermarked image under zero attacks. The figure shows the performance of the proposed scheme in terms of imperceptibility.

As explained in Section 1, one of the main problems with security issues is false positive detection. Our IWT–SVD scheme is able to overcome this serious problem by embedding the watermark pixel values without any modifications inside the wavelet coefficients of the host image. Furthermore, proposing the authentication phase in our proposed scheme completely solves the false positive problem and creates more security and authentication, unlike the studies of Ganic et al. [13], Lagzian et al. [23] and Makbol et al. [5]. Additionally, the security issue is improved due to the blind condition, as satisfied with the proposed scheme where the original image is not required in the extraction step. Ordinarily, blind watermarking schemes are more secure than non-blind schemes.

By applying the IWT on 
                           512
                           ×
                           512
                         Lena image, the capacity in each sub-band is 
                           256
                           ×
                           256
                        , which is half the size of the host image. This capacity can be considered high. A similar capacity was achieved by Ganic et al. [13] due to the DWT decomposition analysis; however, Lagzian et al. [23] and Makbol et al. [5] achieved twice this capacity in their schemes due to decomposition analysis of the RDWT. Additional data are also embedded in the proposed scheme (i.e., the 8-bit digital signature).

Robustness is the key requirement in developing digital watermarking techniques and is the scope of our research. Robustness is the resistance against geometrical attacks, which are considered malicious attacks, and non-geometrical attacks. Tables 4–16, present the NC values of the extracted watermarks of the IWT–SVD scheme when exposed to different attack types. Several non-geometrical and geometrical attacks are applied to 
                           512
                           ×
                           512
                         Lena test image. Non-geometrical attacks (image processing attacks), such as noise addition (e.g., salt and pepper, gaussian and speckle noise), filtering, gamma correction and JPEG compression attacks were applied. Cutting, shearing, scaling, rotating and translation attacks were selected as geometrical attacks. The proposed scheme showed high resistance in all sub-bands (see Table 3
                        ).

The first non-geometrical attack was noise addition attacks, considered to be one of the common image processing attacks. Salt and pepper, speckle and gaussian noise are added to the watermarked image as noise addition attacks. The proposed scheme was tested with various densities and magnitudes, as shown in Tables 4, 5 and 6
                        
                        
                        . The proposed IWT–SVD scheme exhibited a higher resistance against all noising attacks.

The second attack type is the filtering attack. Three types of filtering or de-noising attacks were applied in our proposed scheme. The gaussian, median and wiener filter attacks were employed with six different sizes (e.g., 
                           2
                           ×
                           2
                        , 
                           3
                           ×
                           3
                        , 
                           5
                           ×
                           5
                        , 
                           7
                           ×
                           7
                        , 
                           9
                           ×
                           9
                         and 
                           11
                           ×
                           11
                        ). Tables 7, 8 and 9
                        
                        
                         display the NC values of the extracted watermarks under the gaussian, median and wiener filter attacks, respectively. These attacks produced a high resistance against all filtering types. The JPEG compression attack is also one of the most common and significant non-geometrical attacks that must be checked and covered by a lot of watermarking algorithms (must be countered by numerous watermarking algorithms). In our experiments, the Lena host image was compressed by 10, 20, 25, 30, 40, 50 and 70 compression rates. The NC values of the extracted watermarks under the previously mentioned quality percentage rates of the original watermarked image are presented in Table 10
                        . In general, an NC value is accepted if it is ≥0.75 [33]. Overall, our IWT–SVD proposed scheme proved its efficiency in resisting these types of attacks and accordingly, will be applicable in many watermarking applications. In addition to noise addition attacks, filtering attacks, JPEG compression and gamma correction attacks were also tested with our proposed scheme. The gamma values varied from 0.1 to 1, as shown in Table 11
                        . The results in this table indicate the ability of the proposed scheme to resist these types of attacks.

The proposed IWT–SVD scheme was additionally tested against a number of geometrical attacks. The rotation attack is one type of these attacks. The rotation can be conducted by rotating the image to special angles. The proposed scheme showed good resistance against rotation attacks, as shown in Table 12
                        . The watermarked image was tested under different rotation angles, such as 45, 2, 70, 110, 50, −50, −270, −2 and −80. Changing the image size to either larger or smaller than the original image and then resizing it to the original size is called scaling. The watermarked image was tested against different types of scaling attacks with different scaling parameters, as shown in Table 13
                        . The NC values in this table illustrate how the proposed scheme is robust against these types of attacks. Cutting attacks were also used to evaluate the robustness of the proposed IWT–SVD scheme. Table 14
                         shows the cutting attacks with different parameters. The resulting NC values prove that the proposed scheme is robust against cutting attacks. Finally, translation and shearing attacks were applied on our IWT–SVD proposed scheme. Tables 15 and 16
                        
                         list the NC values of these attacks, respectively, proving the robustness of the scheme.


                        Table 17
                         compares the proposed scheme with the schemes of Lagzian et al. (RDWT–SVD) [23], Ganic et al. (DWT–SVD) [13] and Makbol et al. (RDWT–SVD) [5]. This table summarises the similarities, differences and some of the highlighted points of each scheme. From the comparison table, the proposed scheme clearly outperforms the other schemes due to its authentication mechanism. The proposed scheme's imperceptibility result (43.6769 dB for 
                           512
                           ×
                           512
                         Lena image, Table 1) is higher than the results of Ganic et al. [13] and Lagzian et al. [23] but lower than the imperceptibility result of Makbol et al. [5]. In the watermarking world, this imperceptibility result is considered to be a good and high value [11].

The capacities for Makbol's and Lagzian's schemes are higher than the capacity of the proposed IWT–SVD scheme and Ganic's scheme due to the RDWT, IWT and DWT decomposition analysis. In these analysis, the IWT and DWT decomposed the host image into sub-bands with half the size of the host image while the decomposition by the RDWT led to sub-bands of the same size as the host image. Despite these results, the proposed scheme and Ganic scheme can be considered to be two good watermarking schemes in terms of capacity.

To compare the robustness, our watermarking scheme and the other schemes were exposed to different types of attacks, as shown in Table 18
                        . The performance of the proposed scheme and Makbol's scheme surpassed the performance of Lagzian's and Ganic's schemes, in which the NC values were less than 0.75; the negative values in the comparison table indicate that the extracted watermark appears as a negative film of the original watermark (i.e., the lighter image regions become darker, and the darker regions become lighter) [13].

The results of the proposed scheme and of Makbol's scheme are very close in terms of robustness. After careful consideration of their results, we believe that the proposed scheme is better than Makbol's scheme. The proposed scheme exhibits high resistance against all attacks.

To perform a more accurate comparison, the Wilcoxon signed rank test was used to compare the proposed scheme (IWT–SVD) to Makbol's scheme (RDWT–SVD). The Lena host image was tested using different types of geometrical and non-geometrical attacks. Each attack was examined with different parameters, as shown in Tables 4–16. The Wilcoxon test was performed separately based on the results of each attack. The results of the Wilcoxon signed rank test and the statistical comparison are explained in the next section (statistical analyses section).

In this section, an accurate comparison between our proposed scheme and Makbol's scheme is performed. One of the methods used to make this comparison is statistical analysis. Accordingly, the statistical significance of the difference between the proposed scheme and Makbol's scheme was assessed using the Wilcoxon signed ranks test with a significance level of 0.05. The Wilcoxon signed rank test was selected because the results of each attack in both schemes did not show normal distribution [34]. This test was performed to compare Makbol's scheme and the proposed scheme for each individual type of attack. The NC robustness values against the tested attacks are shown in Tables 4 to 16.

IBM SPSS statistic 20.0 was used to perform our statistical calculations. In the test, the null hypothesis 
                           
                              
                                 H
                              
                              
                                 0
                              
                           
                         indicates that there is no significant difference between the proposed scheme (IWT–SVD) and Makbol's scheme (RDWT–SVD) is observed. In contrast, the alternative hypothesis 
                           
                              
                                 H
                              
                              
                                 1
                              
                           
                         indicates that a significant difference exists between the compared schemes. With a 95% confidence level, the null hypothesis 
                           
                              
                                 H
                              
                              
                                 0
                              
                           
                         is rejected if 
                           α
                           ≤
                           0.05
                        ; the null hypothesis 
                           
                              
                                 H
                              
                              
                                 0
                              
                           
                         cannot be rejected if 
                           α
                           >
                           0.05
                        . In the case of rejecting the null hypothesis 
                           
                              
                                 H
                              
                              
                                 0
                              
                           
                         (
                           α
                           ≤
                           0.05
                        ), we confirm the critical value for the Wilcoxon signed rank test 
                           
                              
                                 w
                              
                              
                                 α
                              
                              
                                 ⁎
                              
                           
                         and the sum of the negative ranks 
                           
                              
                                 w
                              
                              
                                 −
                              
                           
                         and a decision can be made based on their values [34]. If the sum of the negative ranks value is smaller than or equal to the critical value for the Wilcoxon signed rank test (i.e., 
                           
                              
                                 w
                              
                              
                                 −
                              
                           
                           ≤
                           
                              
                                 w
                              
                              
                                 α
                              
                              
                                 ⁎
                              
                           
                        ), the proposed scheme (IWT–SVD) is better than Makbol's scheme (RDWT–SVD). Otherwise, Makbol's scheme (RDWT–SVD) is better.

With a 
                           512
                           ×
                           512
                         image size, the proposed scheme generally outperforms other schemes in many attacks, as shown in Table 19
                        . To explain this result in detail, a comparison was performed among the sub-bands. In the HH sub-band, the robustness of the IWT–SVD scheme is better than the robustness of Makbol's scheme for all attacks, except scaling, shearing, Median and Wiener filtering attacks in which no significant difference between the schemes (i.e., the schemes have nearly identical robustness performance). In the HL sub-band, Makbol's scheme performs well with rotation, translation, shearing and gamma correction attacks, while the IWT–SVD performs better with all filtering attacks (i.e., Median, Wiener and Median filter attacks), JPEG compression and scaling attacks. For the remaining attacks, namely, the noising and shearing attacks, both schemes perform well, and no significant difference exists between these attacks. In the LH sub-band, the robustness against the gaussian filter, gamma correction and cut attacks is better with Makbol's scheme, whereas the IWT–SVD performs with better robustness against translation, scaling, wiener filtering and JPEG compression attacks. No significant differences were observed between these schemes with noise attacks, rotation and shearing attacks. Finally, in the LL sub-band, Makbol's scheme performs well with translation attacks, and the IWT–SVD scheme performs better with filtering attacks (i.e., Median, Wiener and Median filter attacks), JPEG compression and scaling. No significant difference was observed between the schemes for the remaining attacks. From the above statistical analyses, our IWT–SVD scheme is better than Makbol's scheme in 24 cases, weaker in only 8 cases, and performs similarly in 20 cases. According to these statistical results, the proposed IWT–SVD scheme is more robust than Makbol's scheme [5].

@&#CONCLUSION@&#

In this paper, a new hybrid, secure and robust image watermarking scheme based on the IWT and SVD is proposed. This scheme utilises the properties of IWT and SVD transforms to achieve the watermarking requirements. These properties include the good stability of the SVD and the ability of the IWT to preserve a perfect reconstruction, in which integers are mapped to integers. In addition to the blind issue, the security is improved and guaranteed by including a digital signature authentication mechanism. The digital signature authentication mechanism helps to solve the false positive problem which is one of the important problems in the watermarking area. All the properties listed have been exploited to strongly achieve the requirements for our proposed scheme to be used in watermarking applications such as copyright protection. Among all of the compared techniques, our proposed IWT–SVD scheme proves its superiority, demonstrating good imperceptibility, capacity and security. Our IWT–SVD scheme exhibited high resistance against geometrical and non-geometrical attacks. For precise comparison in terms of robustness, the Wilcoxon signed rank statistical test was performed, and the results indicated that our proposed IWT–SVD scheme surpassed previous schemes.

@&#FUTURE WORK@&#

Our recent work developed robust SVD-based watermarking schemes that involve embedding the watermark into the singular values. Such schemes may suffer from a number of security problems that include false positive detection. Several solutions have been suggested to resolve this problem, and one of these solutions was adopted in our proposed scheme in this study. Future work will continue to develop a robust SVD-based watermarking scheme via embedding the watermark into the singular vectors. This task will help to improve the robustness, where the singular vectors represent the image's geometrical properties. Embedding in the singular vectors will additionally increase the security by avoiding the false positive problem.

@&#ACKNOWLEDGEMENTS@&#

The authors wish to express their gratitude to the anonymous reviewers for their valuable comments and suggestions to improve the quality of the paper.

@&#REFERENCES@&#

