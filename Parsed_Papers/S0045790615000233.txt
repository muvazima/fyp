@&#MAIN-TITLE@&#Edge detection with fuzzy cellular automata transition function optimized by PSO

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This study is the application of 2D linear cellular automata (CA) rules with the help of fuzzy membership function to the problems of edge detection.


                        
                        
                           
                           An efficient and simple thresholding technique of edge detection based on CA transition rules optimized by Particle Swarm Optimization method (PSO) is proposed.


                        
                        
                           
                           Results of the proposed to the selected 22 images from the Berkeley Segmentation Dataset (BSDS) are presented.


                        
                        
                           
                           Comparison with some classical Sobel and Canny results is included.


                        
                        
                           
                           Baddeley Delta Metric (BDM) is used for the performance index to compare the results.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Cellular automata

Image processing

Edge detection

Cellular automata linear rules

@&#ABSTRACT@&#


               
               
                  In this paper we discuss the application of two-dimensional linear cellular automata (CA) rules with the help of fuzzy heuristic membership function to the problems of edge detection in image processing applications. We proposed an efficient and simple thresholding technique of edge detection based on fuzzy cellular automata transition rules optimized by Particle Swarm Optimization method (PSO). Finally, we present some results of the proposed linear rules for edge detection to the selected 22 images from the Berkeley Segmentation Dataset (BSDS) and compare with some classical Sobel and Canny results. Also, Baddeley Delta Metric (BDM) is used for the performance index to compare the results.
               
            

@&#INTRODUCTION@&#

Edges in a digital image provide important information about the objects contained within the image since they constitute the boundaries between the objects in the image [1]. In order to extract the contour of an object in an image, we must detect the complete information of the edges, so edge detection is an indispensable part of image processing [2]. These edges can be used as a final result or as intermediate information for further interpretations, such as segmentation, face recognition, object recognition, tracking, image retrieval or stereo vision [3] The image intensity shows sudden changes at edges. Therefore, edge detection usually involves the calculation of the derivative of the image intensity function at a given pixel location. If the magnitude of the derivative of the image intensity function is relatively high at a given pixel location, then the pixel at that image location is classified as an edge pixel. An important property of the edge detection method is its ability to extract the accurate edge line with good orientation in the considered image, and much literature on edge detection has been published in the past two decades.

There are many methods for edge detection, and most of them use the computed gradient magnitude of the pixel value as the measure of edge strength [4]. A different edge detection method i.e. Prewitt, Laplacian, Roberts, Canny [5] and Sobel [6] use different discrete approximations of the derivative function. Surface fitting approach for edge detection is adopted by [7]. Some optimization based detectors are presented in [8,9]. Use of statistical techniques are illustrated in [10]. Other approaches shows the usage of genetic algorithms [11], neural networks [12], the Bayesian approach [13], residual analysis-based techniques [14] and orthogonal projections [15]. Some authors have tried to study effect of noise in images on the performance of edge detectors [16]. In [16], an edge detector is proposed where thresholding is performed using statistical principles.

A cellular automaton (CA) is basically a computer algorithm and operates on a lattice of sites (e.g. pixels). CA have been used for many different applications because of property of simple rules generating complex behavior. Main advantage of CA is that, although each cell generally only contains a few simple basic rules, the combination of cells with their local interaction leads to more sophisticated emergent global behavior. It is capable of fast, parallel computation and have thus found application in image processing [4] and the study of CA has received remarkable attention in the last few years (see references). To enable CA-based image processing techniques to be applied to systems with limited computational resources, recent work in this field has focused on designing binary CA rules for performing binary image processing like edge detection, noise reduction and thinning [17,20–22]. Edge detection and noise reduction algorithms are usually applied to multi-valued (digital, gray scale or color) images, so it is required to improve the CA based method for practical application. Also, in [18], we presented some of the result of this study using CA fuzzy transition rules.

The application of linear rules of CA on image matrix is demonstrated which forms the basis of self replicating and self similar patterns in image processing area (see details in [19]). Particularly the rules are used for image multiplication of one image into several replicating or similar images. Multiple copies or similar patterns of any arbitrary image, obtained in this study, find innumerable applications in real life phenomena and situations (for example textile design, DNA genetics research, etc. see also [19,20]). Also the semiconductor technology is moving towards the sub-micron era and the system designers try to embed complex functions from software domain to hardware blocks on the silicon floor. While doing this, within a feasible limit of the complexity, the designers are forced to look for simple, modular, and reusable building blocks for implementing various complex functions. In these reasons, CA is the right candidate to fulfill all the above objectives. Further the ever increasing need for faster computing necessitates adoption of parallel processing architectures.

In this paper, we studied a method to construct a CA based edge detection utilized fuzzy logic. All rule set of proposed fuzzy-CA technique are investigated by using PSO in order to improve the performance. By experimental comparison of different methods for edge detection of a digital image, we observe that the method based on cellular model with offered fuzzy heuristic function leads to a better performance for some linear rules and suitable parameters optimized by PSO. It is also seen that a two-dimensional cellular automaton with a very simple transition rule taking into account the edginess of neighborhood may be used as a very efficient edge detector in digital images. In this way, the edge pixels are strengthened and the non-edge pixels are weakened by the fuzzy-CA transition thresholded rule.

The obtained results are very promising, the border produced by the cellular automaton border detector in digital images are very satisfactory. This method has potential future in the field of digital image processing. The work is under further progress of wider implementation of cellular automata to automate the rule generation and also to try to eliminate the computational time of CA as much as possible A very important feature of the proposed method is its intrinsic parallelism since it is implemented on a cellular automaton where the individual cells update in a synchronous manner and independently of each other. The main goal of the present paper is to propose an alternative method of procedures for edge detection by using cellular automata and fuzzy logic. We then present and discuss our experimental results.

The organization of the paper is presented as follows. Section 2 discusses the technical preliminaries of the subject and the details about two-dimensional CA. Fuzzy Cellular Transition Rules with thresholding is given Section 3. Experiment design can be found in Section 4. In Section 5, we present our results and discussion points in detail. Finally a conclusion of the present study is summarized in Section 6.

We present two dimensional (2D) CA with spin values in 
                           
                              
                                 
                                    Z
                                 
                                 
                                    256
                                 
                              
                           
                         (i.e. spin values of gray scale image) by using a specific local nonlinear filtering rule. First, let us recall the definition of a cellular automaton. We consider the two dimensional integer lattice 
                           
                              
                                 
                                    Z
                                 
                                 
                                    2
                                 
                              
                           
                         and the configuration space 
                           
                              Ω
                              =
                              
                                 
                                    {
                                    0
                                    ,
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    255
                                    }
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    Z
                                 
                                 
                                    256
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                         with elements
                           
                              
                                 σ
                                 :
                                 
                                    
                                       Z
                                    
                                    
                                       2
                                    
                                 
                                 →
                                 {
                                 0
                                 ,
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 255
                                 }
                                 =
                                 
                                    
                                       Z
                                    
                                    
                                       256
                                    
                                 
                                 .
                              
                           
                        The value of σ at a point 
                           
                              n
                              ∈
                              
                                 
                                    Z
                                 
                                 
                                    2
                                 
                              
                           
                         will be denoted by 
                           
                              
                                 
                                    σ
                                 
                                 
                                    n
                                 
                              
                           
                        . Let 
                           
                              
                                 
                                    u
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    u
                                 
                                 
                                    s
                                 
                              
                              ∈
                              
                                 
                                    Z
                                 
                                 
                                    2
                                 
                              
                           
                         be a finite set of distinct vectors and
                           
                              
                                 F
                                 :
                                 
                                    
                                       Z
                                    
                                    
                                       256
                                    
                                    
                                       s
                                    
                                 
                                 →
                                 
                                    
                                       Z
                                    
                                    
                                       256
                                    
                                 
                              
                           
                        a function. A CA with local rules F is defined as a pair 
                           
                              (
                              Ω
                              ,
                              T
                              )
                           
                        , where the global transition map 
                           
                              T
                              :
                              Ω
                              →
                              Ω
                           
                         is given by
                           
                              
                                 
                                    
                                       (
                                       T
                                       σ
                                       )
                                    
                                    
                                       n
                                    
                                 
                                 =
                                 F
                                 (
                                 
                                    
                                       σ
                                    
                                    
                                       n
                                       +
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       σ
                                    
                                    
                                       n
                                       +
                                       
                                          
                                             u
                                          
                                          
                                             s
                                          
                                       
                                    
                                 
                                 )
                                 ,
                                 
                                 n
                                 ∈
                                 
                                    
                                       Z
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        The space Ω is assumed to be equipped with a (metrizable) Tychonoff topology. For a fixed 
                           
                              v
                              ∈
                              
                                 
                                    Z
                                 
                                 
                                    2
                                 
                              
                           
                        , let 
                           
                              
                                 
                                    U
                                 
                                 
                                    v
                                 
                              
                              :
                              Ω
                              →
                              Ω
                           
                         be the shift map: 
                           
                              
                                 
                                    U
                                 
                                 
                                    v
                                 
                              
                              (
                              a
                              )
                              =
                              
                                 
                                    b
                                 
                                 
                                    m
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    b
                                 
                                 
                                    m
                                 
                              
                              =
                              
                                 
                                    a
                                 
                                 
                                    m
                                    -
                                    v
                                 
                              
                           
                        , for all 
                           
                              m
                              ∈
                              
                                 
                                    Z
                                 
                                 
                                    2
                                 
                              
                           
                        . A CA is a continuous map which commutes with all shifts. It is easily seen that the global transition map T introduced above and the shift operator U are continuous in this topology (see [23] for the details). The 2D finite CA consists of 
                           
                              m
                              ×
                              n
                           
                         cells arranged in m rows and n columns, where each cell takes one of the values 0, 1, 2, …, or 255. A configuration of the system is an assignment of the states to all cells. Every configuration determines the next configuration via a linear transition rule that is local in the sense that the state of a cell at time 
                           
                              (
                              t
                              +
                              1
                              )
                           
                         depends only on the states of some of its neighbors at the time t using the local rules F. For 2D CA nearest neighbors, there are nine cells arranged in a 
                           
                              3
                              ×
                              3
                           
                         matrix centering that particular cell (see Fig. 1
                        ). For 2D CA there are some classic types of neighborhoods, but in this work we only restrict ourselves to the adjacent neighbors. So, we can define the 
                           
                              (
                              t
                              +
                              1
                              )
                              th
                           
                         state of the 
                           
                              (
                              i
                              ,
                              j
                              )
                              th
                           
                         cell as follows:
                           
                              (1)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   +
                                                   1
                                                   )
                                                
                                             
                                             =
                                             F
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   +
                                                   1
                                                   ,
                                                   j
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   +
                                                   1
                                                   ,
                                                   j
                                                   -
                                                   1
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   -
                                                   1
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   -
                                                   1
                                                   ,
                                                   j
                                                   -
                                                   1
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   -
                                                   1
                                                   ,
                                                   j
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   -
                                                   1
                                                   ,
                                                   j
                                                   +
                                                   1
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   +
                                                   1
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   +
                                                   1
                                                   ,
                                                   j
                                                   +
                                                   1
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             )
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             =
                                             F
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             )
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where F can be defined in many different ways with respect to any model (see our F in the next section). The value of each cell for the next state may not depend upon all nine neighbors. The conventional method of defining a rule number for a linear rule in 2D CA can be explained in Fig. 1.

Using cellular automaton for image processing should involve the relation between the automaton and image processing. A digital image with size 
                           
                              m
                              ×
                              n
                           
                         is a bi-dimensional array which each element is called a pixel with a gray level or color value. Each pixel can be characterized by the triplet 
                           
                              (
                              i
                              ,
                              j
                              ,
                              k
                              )
                           
                         where 
                           
                              (
                              i
                              ,
                              j
                              )
                           
                         represents its position in the array and k represents gray level or color. The image can be then considered as a particular configuration state of a cellular automaton that has as cellular space on the array defined by the image. Each site in the array corresponds to a pixel. cellular automaton growth is used for image processing and is controlled by predefined rules, usually controlled by program, or by some grammar rules.

CA consists of a regular grid of cells (pixels) and each cell (pixel) can be in only one of a finite number of possible states. For a gray level image, each cell (pixel) has 256 states that are composed of integer numbers from 0 to 255. The state of a cell (pixel) is determined by the previous states of a surrounding neighborhood of cells (pixels) and is updated synchronously in discrete time steps. The identical rules contained in each cell is essentially a finite state machine, usually specified in the form of grammar rules with an entry for every possible neighborhood configuration of states.

A specific rule convention that is adopted here is as follows. The central box (see Fig. 1) represents the current cell that is the cell under consideration and all other boxes represent the eight nearest neighbors of that cell. Each of the cells can be taken as a variable. Thus for 2D CA there are 9 variable to be considered. The number within each box represents the rule number characterizing the dependency of the current cell on that particular neighbor only. Rule 1 characterizes dependency of the central cell on itself alone where as such dependency only on its top neighbor is characterized by Rule 128, and dependency on all neighbors is characterized by Rule 510 (also called Moore neighborhood), and so on. These nine rules are called fundamental rules (see Fig. 1). In the case, the cell has dependency on two or more neighboring cells, the rule number will be the arithmetic sum of the numbers of the relevant cells. The number of rules generated by a combination of these 9-variables is 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                9
                                             
                                          
                                          
                                             
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                              +
                              
                                 
                                    
                                       
                                          
                                             
                                                9
                                             
                                          
                                          
                                             
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                              +
                              …
                              +
                              
                                 
                                    
                                       
                                          
                                             
                                                9
                                             
                                          
                                          
                                             
                                                9
                                             
                                          
                                       
                                    
                                 
                              
                              =
                              512
                           
                         which includes rule characterizing due to no dependency. If the next state of a cell depends on the current state of itself and its right neighbor, it is referred to as Rule 3 (=Rule 1+Rule 2) since it is dependent only on two cells. If the next state depends on the present state of itself and all its Moore neighbors, it is referred to as Rule 511 (= Rule 1+Rule 2+Rule 4+Rule 8+Rule 16+Rule 32+Rule 64+Rule 128+Rule 256). All other linear rules can be obtained in the similar way.

PSO was inspired by the social behavior of animals such as flocking of birds and schooling of fish. As a population-based optimization method, it has been successfully applied to solve global optimization problems [24]. The population contains m particles which move in an n-dimensional search space according to the PSO velocity and position equations (1) and (2).
                           
                              (2)
                              
                                 
                                    
                                       x
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 +
                                 1
                                 )
                                 =
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 +
                                 1
                                 )
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 )
                              
                           
                        Here, 
                           
                              
                                 
                                    x
                                 
                                 
                                    k
                                 
                              
                              (
                              t
                              )
                           
                         are the position and 
                           
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              (
                              t
                              )
                           
                         velocity of the particle at time t. The velocity is often influenced by three components: current motion influence, particle memory influence, and swarm influence:
                           
                              (3)
                              
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 +
                                 1
                                 )
                                 =
                                 w
                                 ∗
                                 [
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 )
                                 +
                                 
                                    
                                       r
                                    
                                    
                                       1
                                    
                                 
                                 ∗
                                 
                                    
                                       c
                                    
                                    
                                       1
                                       k
                                    
                                 
                                 ∗
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       
                                          
                                             best
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 )
                                 )
                                 +
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                                 ∗
                                 
                                    
                                       c
                                    
                                    
                                       2
                                       k
                                    
                                 
                                 ∗
                                 (
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             best
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 )
                                 )
                                 ]
                              
                           
                        
                        
                           
                              
                                 w
                                 =
                                 
                                    
                                       2
                                    
                                    
                                       |
                                       2
                                       -
                                       ϕ
                                       -
                                       
                                          
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   2
                                                
                                             
                                             -
                                             4
                                             ϕ
                                          
                                       
                                       |
                                    
                                 
                              
                           
                        where 
                           
                              ϕ
                              =
                              
                                 
                                    c
                                 
                                 
                                    1
                                    k
                                 
                              
                              +
                              
                                 
                                    c
                                 
                                 
                                    2
                                    k
                                 
                              
                           
                         and 
                           
                              ϕ
                              >
                              4
                              ,
                              w
                           
                         is the constriction factor, often set 0.7289, to control the learning factor from the previous movement and to decreases the amplitude of the particles oscillation; 
                           
                              
                                 
                                    c
                                 
                                 
                                    1
                                    k
                                 
                              
                           
                         and 
                           
                              
                                 
                                    c
                                 
                                 
                                    2
                                    k
                                 
                              
                           
                         are the particle history and swarm influence factors respectively; 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                           
                         are uniform random variables between 0 and 1; 
                           
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                              
                                 
                                    est
                                 
                                 
                                    k
                                 
                              
                           
                         represents the personal best position of each particle in history; and finally 
                           
                              
                                 
                                    g
                                 
                                 
                                    b
                                 
                              
                              
                                 
                                    est
                                 
                                 
                                    k
                                 
                              
                           
                         is the position of the particle which is defined by a neighborhood topology and leads other particles in order to explore better regions of the search space.

Fuzzy logic is another method of artificial intelligence. The key idea about fuzzy logic theory is that it allows for something to be partly that, rather than having to be either all this or all that. The degree of belongingness to set or category can be described numerically by a membership number between 0 and 1. The variables are fuzzified through the use of membership function that defines the membership degree to fuzzy sets. These variables are called linguistic variables. Membership functions are curves that define how each point in the input space is mapped to a membership value in the interval 0,1. It can be of different forms including triangular, trapezium and gauss curve etc. The fuzzy rule based model operates on an IF-THEN principle, where the IF is a vector of fuzzy explanatory variables of premises (input) and THEN is fuzzy consequence or dependent variable (output). Fuzzy logic allows the user to capture uncertainties in data [2].

Let an 
                              
                                 M
                                 ×
                                 N
                              
                            matrix be the set of all pixels of image X and 
                              
                                 
                                    
                                       g
                                    
                                    
                                       mn
                                    
                                 
                                 ∈
                                 [
                                 0
                                 ,
                                 L
                                 ]
                              
                            be the gray level of each pixel at the position 
                              
                                 (
                                 m
                                 ,
                                 n
                                 )
                              
                           . X also can be considered as an array of fuzzy singletons 
                              
                                 
                                    
                                       μ
                                    
                                    
                                       mn
                                    
                                 
                                 ∈
                                 [
                                 0
                                 ,
                                 1
                                 ]
                              
                            which indicates the degree of brightness of each pixel [25]:
                              
                                 (4)
                                 
                                    X
                                    =
                                    
                                       
                                          
                                             ⋃
                                          
                                          
                                             m
                                             =
                                             1
                                          
                                          
                                             M
                                          
                                       
                                    
                                    
                                       
                                          
                                             ⋃
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                μ
                                             
                                             
                                                mn
                                             
                                          
                                       
                                       
                                          
                                             
                                                g
                                             
                                             
                                                mn
                                             
                                          
                                       
                                    
                                 
                              
                           The membership function μ can be determined by normalizing the image matrix X:
                              
                                 (5)
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          mn
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                g
                                             
                                             
                                                mn
                                             
                                          
                                       
                                       
                                          
                                             
                                                max
                                             
                                             
                                                i
                                                ∈
                                                [
                                                1
                                                ,
                                                M
                                                ]
                                                ,
                                                j
                                                ∈
                                                [
                                                1
                                                ,
                                                N
                                                ]
                                             
                                          
                                          
                                             
                                                g
                                             
                                             
                                                ij
                                             
                                          
                                       
                                    
                                 
                              
                           Therefore, the image 
                              
                                 
                                    
                                       X
                                    
                                    
                                       ′
                                    
                                 
                              
                            containing all edges is:
                              
                                 (6)
                                 
                                    
                                       
                                          X
                                       
                                       
                                          ‾
                                       
                                    
                                    =
                                    
                                       
                                          
                                             ⋃
                                          
                                          
                                             m
                                             =
                                             1
                                          
                                          
                                             M
                                          
                                       
                                    
                                    
                                       
                                          
                                             ⋃
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      ̂
                                                   
                                                
                                             
                                             
                                                mn
                                             
                                          
                                       
                                       
                                          
                                             
                                                g
                                             
                                             
                                                mn
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             ̂
                                          
                                       
                                    
                                    
                                       mn
                                    
                                 
                              
                            indicates the degree of edginess of each pixel. By finding a proper membership function, the edge detection can easily be done. There are different ways of determining a proper membership function for each pixel. In the following section, a simple way of calculating by using heuristic membership functions is suggested

The simplest way for defining a limy edge detector is the determination of a proper membership function μ for each pixel 
                              
                                 
                                    
                                       g
                                    
                                    
                                       mn
                                    
                                 
                              
                            at the position 
                              
                                 (
                                 m
                                 ,
                                 n
                                 )
                              
                            with a surrounding 
                              
                                 w
                                 ×
                                 w
                              
                            spatial window. The definition is heuristic, and in this sense, not unique. Based on general properties of an edgy neighborhood and based on heuristics different membership functions can be introduced. An example for such membership function is the following formula based on gray level differences in each neighborhood [25,26]
                           
                              
                                 (7)
                                 
                                    
                                       
                                          
                                             
                                                μ
                                             
                                             
                                                ̂
                                             
                                          
                                       
                                       
                                          mn
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                             
                                          
                                          |
                                          
                                             
                                                g
                                             
                                             
                                                ij
                                             
                                          
                                          -
                                          
                                             
                                                g
                                             
                                             
                                                mn
                                             
                                          
                                          |
                                       
                                       
                                          Δ
                                          +
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                             
                                          
                                          |
                                          
                                             
                                                g
                                             
                                             
                                                ij
                                             
                                          
                                          -
                                          
                                             
                                                g
                                             
                                             
                                                mn
                                             
                                          
                                          |
                                       
                                    
                                 
                              
                           where 
                              
                                 Δ
                                 ∈
                                 [
                                 0
                                 ,
                                 L
                                 )
                              
                            is a proper parameter. The lower Δ, the more edges are detected [25]
                        

Let 
                        
                           
                              
                                 C
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        
                      represent the central pixel of Moore neighborhood (see Table 1
                     ) in the selected cellular automata. 
                        
                           
                              
                                 C
                              
                              
                                 i
                                 +
                                 k
                                 ,
                                 j
                                 +
                                 l
                              
                           
                        
                      represents the neighborhood pixels values in the same window and 
                        
                           k
                           ,
                           l
                           ∈
                           {
                           -
                           1
                           ,
                           0
                           ,
                           1
                           }
                        
                     . For the other values in the window, we can define a membership degree which measures their own contribution to the edginess by using wisely selected heuristic fuzzy membership function. It will assign an non-zero value for the center pixel in that window and eventually all of the pixels belonging to the chosen rule around 
                        
                           
                              
                                 C
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        
                      with the parameter Δ will be used for the detection of edginess.
                        
                           (8)
                           
                              μ
                              (
                              
                                 
                                    C
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              )
                              =
                              
                                 
                                    Φ
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    )
                                 
                                 
                                    Δ
                                    +
                                    Φ
                                    (
                                    
                                       
                                          C
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    )
                                 
                              
                           
                        
                     where
                        
                           
                              Φ
                              (
                              
                                 
                                    C
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       l
                                    
                                 
                              
                              |
                              
                                 
                                    C
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              -
                              
                                 
                                    C
                                 
                                 
                                    i
                                    +
                                    k
                                    ,
                                    j
                                    +
                                    l
                                 
                              
                              |
                           
                        
                     we can calculate how much contribution will be added by the neighborhood pixels to the edginess of center pixel. Finally, all these operations can be combined in a partial threesholded function to construct our local state transition rule, F of cellular automaton as follows:
                        
                           (9)
                           
                              F
                              (
                              
                                 
                                    C
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                             
                                             
                                                μ
                                                (
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                )
                                                >
                                                τ
                                             
                                          
                                          
                                             
                                                0
                                                ,
                                             
                                             
                                                μ
                                                (
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                )
                                                ⩽
                                                τ
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

In this section, we describe the results of our experimentation. We also applied the Canny and the Sobel algorithms to the selected 22 images from the Berkeley Segmentation Dataset (BSDS) [29]. The images in the database have a resolution of 
                        
                           481
                           ×
                           321
                        
                      (or 
                        
                           321
                           ×
                           481
                        
                     ) pixels and are provided in gray scale. In addition, each of them comes together with 510 hand-made segmentations. Given the fact that those segmentations are provided in the shape of region boundaries, we have used them as ground truth for the quantification of the quality of the edge detection results. Also, It was set 
                        
                           w
                           =
                           0.73
                           ,
                           
                           
                              
                                 c
                              
                              
                                 1
                                 k
                              
                           
                           =
                           2.01
                           ,
                           
                           
                              
                                 c
                              
                              
                                 2
                                 k
                              
                           
                           =
                           2.01
                        
                      and iteration number was 100 in PSO optimization code, which we developed for this study. Traditional edge detectors are executed by MATLAB toolbox and found the best parameter to obtain the smallest BDM index for this algorithms seen in Table 2
                     .

Baddeleys Delta Metric (BDM) is a measure initially designed for the comparison of binary sets [27], but can also be used to compare binary images because edge maps consists of the same structure. It intends to measure the dissimilarity of the subsets of featured points, which are usually represented by the value 1.

Let 
                           
                              
                                 
                                    B
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    B
                                 
                                 
                                    2
                                 
                              
                           
                         be two binary images with the same dimensions 
                           
                              M
                              ×
                              N
                           
                        , and let 
                           
                              Ω
                              =
                              {
                              1
                              ,,
                              M
                              }
                              ×
                              {
                              1
                              ,,
                              N
                              }
                           
                         be the set of their positions. Given a value 
                           
                              1
                              <
                              k
                              <
                              ∞
                           
                         the k-BDM between the images 
                           
                              
                                 
                                    B
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    B
                                 
                                 
                                    2
                                 
                              
                           
                         (denoted 
                           
                              
                                 
                                    Π
                                 
                                 
                                    k
                                 
                              
                              (
                              
                                 
                                    B
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    B
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        ) is defined as:
                           
                              (10)
                              
                                 
                                    
                                       Π
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 
                                    
                                       B
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       B
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   |
                                                   Ω
                                                   |
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      t
                                                      ∈
                                                      Ω
                                                   
                                                
                                             
                                             |
                                             w
                                             (
                                             d
                                             (
                                             t
                                             ,
                                             
                                                
                                                   B
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             -
                                             w
                                             (
                                             d
                                             (
                                             t
                                             ,
                                             
                                                
                                                   B
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                             |
                                          
                                       
                                    
                                    
                                       
                                          
                                             1
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              d
                              (
                              t
                              ,
                              Bi
                              )
                           
                         represents a distance from the position t to the closest featured point of the image 
                           
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              w
                              :
                              [
                              0
                              ,
                              ∞
                              ]
                              →
                              [
                              0
                              ,
                              ∞
                              ]
                           
                         is a concave, increasing function used for weighing. Both images must contain at least one featured element. In our experiments, we use the Euclidean distance in the computation of d. Hence, 
                           
                              d
                              (
                              t
                              ,
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         stands for the minimum Euclidean distance from the position t to an edge point of 
                           
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                           
                        . As for the function w, we use 
                           
                              w
                              (
                              x
                              )
                              =
                              x
                           
                         and 
                           
                              k
                              =
                              2
                           
                         
                        [28].

@&#RESULTS AND DISCUSSION@&#

Our proposed method for designing rule-changing CA uses two-state CA to deal with images and represents a transition rule which can be easily applied directly to the particular images. Fig. 2
                         depicts edges of the image detected by the cellular automata proposed in this paper for different rules. For different rules, it can be obtained different results and adjusted edge-thickness and some other. The results for Rule 47, Rule 170, Rule 510 and Rule 367, can be seen from the Table 2 for Im 1. Rule 47 and Rule 170 has light thickness compared to the other rules in Fig. 2. Obviously, edges are accurately extracted for all rules used in this study. The texture of image is clearly detected without distortion with the proposed method. Additionally, the extracted edges performed by the proposed method include more detail which can be specially seen in the last two images in Fig. 3
                        . These are the rules after applying PSO procedure with the parameters 
                           
                              
                                 
                                    Δ
                                 
                                 
                                    Im
                                    1
                                 
                              
                              =
                              110
                              ,
                              
                              
                                 
                                    τ
                                 
                                 
                                    Im
                                    1
                                 
                              
                              =
                              0.62
                           
                         for Im 1, included in the fuzzy-CA transition Rule. The best result for the Im 1 was obtained for the Rule 47. Also, for the Im 2, it was found 
                           
                              
                                 
                                    Δ
                                 
                                 
                                    Im
                                    2
                                 
                              
                              =
                              39
                              ,
                              
                              
                                 
                                    τ
                                 
                                 
                                    Im
                                    2
                                 
                              
                              =
                              0.472
                           
                         for the Rule 35 which gives the smallest BDM result after PSO. For the other images, all parameters was given in Table 4 and the BDM results was given in Table 3
                        
                        .

Here we employ the classical Canny, Sobel, detectors to extract edges of the grey images. Figs. 4–6
                        
                        
                         shows the edges of image obtained by using the classical detectors with a standard threshold technique. We used the Matlab image processing package to obtain the results of the known methods.

In Table 3, we observe how the proposed methods perform better than the classical ones, except the Canny result for some images in terms of BDM index. Although it is possible to obtain smaller BDM value for all images, for the sake of consistency of the images, this way was not preferred. For example, for the image 2 in Table 2, the Rule 114 gives the smallest BDM value, but the image for Rule 114 was resulted in broken pieces, the loss of some important edges. On the other hand, implementations of the proposed edge detector exhibit very good detection performance and successfully detect most of the edges in all images. Object boundaries and other details in the images are reflected to the output image of the proposed detector much better than the other detectors. The edges in the more detailed regions of the input images are successfully extracted, as observed in the Im 3–5, 9, 11, 13, 15–17, 18 and 22. In addition, the proposed detector shows a significantly better performance at detecting the edges where the luminance variation is not very sharp as in Im 2, 4, 9–11, 13, 16 and 18–20. Usually, the ability of dealing with some details, such as Continuity is crucial to pattern recognition and target tracking. That is, this is a challenge to most existing algorithms of edge detection. As shown in Figs. 6–9
                        
                        
                        , the effect of edges detected by cellular automata is to those of edges detected by the classical ones. Significant edges, such as object contours and borderlines between the two surface areas, were accurately detected in Im 1–3, 5–7, 9–11 13, 16, 17, 19 and 22. Compared with the results using the Canny and Sobel filter, the transition rule preserves more details and edges are detected slightly more smoothly, and with more details in some cases and compensate broken edges. Also, it can detect low contrast and complicated edge patterns, and produce more exact and continuous edges. Moreover, it provides fine connectivity which gives less false edges than the other techniques and removes the misleading edges.

@&#CONCLUSION@&#

Choosing of an optimal rule and the parameters in the transition rule for a given task is important, which it is applied PSO procedure to find the best ones for the proposed method. The new functions may also improve the results once the fuzzy edge images are binarized and enhance the flexibility and interpretability of the process because of neighborhood approach of CA. In this study, we only showed the efficiency and edge recognition performance of our proposed detection method based on parametric fuzzy membership functions for the conversion of gradient magnitudes of the neighbourhood into membership degrees fuzzy-cellular automata. Changing the membership function to obtain better results and optimize that with the better techniques will remain as an our next topic.

@&#ACKNOWLEDGMENT@&#

S. Uguz is partially supported by TUBITAK 
                  110T713 and HUBAK
                  Project Number 13139.

@&#REFERENCES@&#

