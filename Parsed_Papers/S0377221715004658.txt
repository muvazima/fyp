@&#MAIN-TITLE@&#An optimal plan of zero-defect single-sampling by attributes for incoming inspections in assembly lines

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An optimal sampling plan is developed for incoming inspections in assembly lines.


                        
                        
                           
                           Inspection sample sizes are chosen to minimize all quality related costs.


                        
                        
                           
                           A three-step procedure is developed to efficiently solve larger size problems.


                        
                        
                           
                           The optimization model provides insightful implications for quality management.


                        
                        
                           
                           The optimal inspection sampling plan builds a foundation for other advanced plans.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Quality management

Incoming inspection

Quality attributes

Acceptance sampling

Nonlinear integer programming

@&#ABSTRACT@&#


               
               
                  This paper proposes a nonlinear integer program for determining an optimal plan of zero-defect, single-sampling by attributes for incoming inspections in assembly lines. Individual parts coming to an assembly line differ in the non-conforming (NC) risk, NC severity, lot size, and inspection cost-effectiveness. The proposed optimization model is able to determine the inspection sample size for each of the parts in a resource constrained condition where a product’s NC risk is not a linear combination of NC risks of the individual parts. This paper develops a three-step solution procedure that effectively reduces the solution time for larger size problems commonly seen in assembly lines. The proposed optimization model provides insightful implications for quality management. For example, it reveals the principle of sample size decisions for heterogeneous, dependent parts waiting for incoming inspections; as well as provides a tool for quantifying the expected return from investing additional inspection resources. The optimization model builds a foundation for extensions to advanced inspection sampling plans.
               
            

@&#INTRODUCTION@&#

Acceptance sampling is for sensing the quality of incoming material and outgoing products of a production system. The general procedure of acceptance sampling is to take a random sample from each lot and determine whether the lot will either be rejected or accepted based on the inspection result of the sample. A complete inspection is often not desirable when the inspection is expensive, time-consuming, or destructive. Therefore, acceptance sampling becomes a commonly used technique for quality management (Schilling & Neubauer, 2009). In incoming inspections, a manufacturer uses acceptance sampling to discriminate good lots of received material from bad lots, reducing the chance of bad lots entering the production system (Hamaker, 1958); sampling results are also provided by manufacturers to their suppliers as feedback on the quality of received lots, thus promoting healthy consumer–supplier relationships (Hill, 1960; Robinson & McNicholl, 1990).

During the past two decades, the use of zero-defect acceptance policy is growing. Under this policy a lot is accepted only if no defect has been identified in the inspected sample; that is, the maximum allowable number of defects is zero (Squeglia, 2008). The zero-defect policy emphasizes the non-existence of non-conformance and simplifies sampling plans, making the use of it easier for both suppliers and consumers. The zero-defect policy has been proved to be optimal in a variety of circumstances where quality control is very critical (Starbird, 1997). This policy has been implemented in the army (e.g., MIL-STD-1916) as well as in manufacturing and service industries (e.g., ISO/TS 16949). When the zero-defect acceptance policy is used, the quality control of a lot through incoming inspection solely relies on the selection of the sample size. This amplifies the importance of optimizing the sample size. Among existing approaches to addressing this problem, the economic modeling approach, which quantifies all quality-related cost components and aims at minimizing the total cost, demonstrates special advantages over the others. It supports the optimization of sample sizes; thus, it is more capable of revealing insightful implications for quality management.

The incoming inspection for assembly lines is a situation where the optimization of sample sizes is not a simple task for quality managers, particularly for inspecting quality attributes (due to the discrete nature of the decision). Nowadays many products are made of multiple parts; for example, an engine for a car includes hundreds of parts featured by different quality attributes. Some of the parts have complex designs with hundreds of quality features. These quality attributes are heterogeneous in that they usually differ in non-conforming (NC) rate, NC severity, and inspection complexity, necessitating the need for calibrating the sample size for each attribute. The interdependence of quality attributes further magnifies this need because certain relationships among them may make the cumulative error grow exponentially than linearly.

While it has been identified as a research need by industry practitioners, the above-mentioned problem has not been addressed in the literature. In an attempt to fill some of the existing gaps and to advance the use of zero-defect incoming inspections for complex conditions, this paper models and optimizes the zero-defect, single-sampling by attributes for inspecting incoming parts in an assembly line. Single-sampling is the most common and easiest plan for incoming inspections. The model and results of this paper build the foundation for other advanced sampling plans and for the integration of sampling plans across multiple decision levels.

The remainder of the paper is organized as follows. The relevant literature is briefly discussed in the next section, followed by the optimization model for sample size decisions. Section 4 presents the solution approach and important features of an optimal sampling plan, with mathematical derivations provided in the appendices. A real example is solved and discussed in Section 5. Conclusions and important extensions of the paper are discussed at the end, in Section 6.

Recently, the use of “accept on zero” as a policy of acceptance inspection has been growing. With this policy a lot is accepted only if no defect is identified in the inspected sample. Squeglia (2008) provided detailed discussions on the zero-defect policy. This policy emphasizes the non-existence of non-conforming products and simplifies the sampling plan, making the use of it easier for both suppliers and consumers. The military standard MIL-STD-1916, which replaced the popular standard MIL-STD-105E in 1996, is based on zero-defect acceptance sampling policy. The zero-defect policy is also used by manufacturing and service industries (e.g., ISO/TS 16949). The study by Starbird (1997) showed that a manufacturer who uses the zero-defect policy in the incoming inspection is most likely to motivate suppliers to deliver zero defects. Furthermore, when the manufacturer’s consumers use 100 percent inspection or zero-defect policy for their acceptance sampling inspections, the zero-defect policy is also optimal for the manufacturer to inspect the outgoing products. Although quality control is extremely important to certain manufacturers, the zero-defect policy has not received sufficient attention in the research literature.

When the zero-defect policy is used, sample size becomes the only decision to make. The determination of sample sizes for incoming inspections are often addressed in different ways, including: (i) applying standard sampling inspection tables such as Dodge and Romig Tables (Dodge & Romig, 1998) and Military Standards (e.g., MIL-STD-105E, 1989; MIL-STD-1916, 1996); (ii) using acceptance criteria such as acceptance quality level (AQL) and lot tolerance percent defective (LTPD) based on the supplier’s and producer’s risks (e.g., Collins, Jr., Case, and Bennett, 1973; Pearn and Wu, 2007); or (iii) developing an economic model to consider all quality-related costs (e.g., Case and Chen, 1985; Ferrell, Jr. and Chhoker, 2002; Horsnell, 1957; Shin and Lingayat, 1992; Wetherill and Chiu, 1975). Among these, the economic modeling approach provides the capability for optimizing sample sizes (Hamaker, 1958). It has been an important approach for decades (Wetherill & Chiu, 1975), being popularly used in the operations research literature.

The literature on the economic modeling approach is generally divided into two streams, with one focused on the sampling by variables and the other by attributes. The former is relatively well addressed for both the inspection of independent quality variables (e.g., Ferrell, Jr. and Chhoker, 2002; Fink and Margavio, 1994; Shin, Kongsuwon, and Cho, 2010; Tagaras, 1994) and that of multiple dependent quality variables over a single stage or multiple stages (e.g., Balamurali and Jun, 2007; Chan and Ibrahim, 2004; Drezner and Wesolowsky, 1995; Kapur and Cho, 1996; Moskowitz, Plante, and Duffy, 2001; Plante, 2002; Tang and Tang, 1989). Wetherill and Chiu (1975) reviewed the literature on acceptance sampling by attributes. Most of the work included in their review paper are economic models for inspecting only a single quality attribute. Schmidt and Bennett (1972) and Case, Schmidt, and Bennett (1975) modeled the optimization of multi-attribute acceptance sampling. Yet all the attributes were assumed independent in their studies. Moskowitz, Plante, Tang, and Ravindran (1984) developed a multi-attribute Bayesian acceptance sampling plan and, accordingly, designed a discrete search algorithm, based on a pattern search, to determine an optimal solution. The algorithm was shown to be efficient for up to three attributes. Tang, Plante, and Moskowitz (1986) extended the work of Moskowitz et al. by showing that interactions among attributes can impact an optimal inspection plan. Tang et al. developed a heuristic algorithm for solving the problem, which changes the sampling plan by just one attribute at a time (it is defined as a subproblem) until no improvement of the object function is possible. All of the testing problems in this paper considered only four attributes.

The discrete nature of sampling by attributes is one challenge facing the optimization of sampling plans. Discrete optimization such as nonlinear integer programming (NIP) has become a useful tool for addressing this issue. Ercan, Hassan, and Taulananda (1974) built an integer program (IP) to determine the sample size and the acceptance number for the incoming and outgoing inspections of a product, simultaneously. The product considered by Ercan et al. has a single quality attribute. Ravindran, Shin, Arthur, and Moskowitz (1986) developed two lexicographic nonlinear integer goal programming models to determine the optimal sample size and acceptance number for a product’s outgoing inspection. The goal of the decision is to determine the best trade-off between the average lot inspection quality and the average outgoing quality.

Nowadays, acceptance sampling decisions are no long considered in a standalone quality control scenario. In a broader range of operational settings, the decisions must be made jointly with other considerations. Tools of operations research have been shown to be effective in modeling and solving these complex problems. For instance, Seidel (1991) built a minimax problem to optimize the selections of sampling size and acceptance number when the prior information about the quality of incoming lots is incomplete. Modeling the risk of statistical classification error, Markowski and Markowski (2002) proposed alternative sampling plans that increase the lot acceptance number. Ben-Daya and Noman (2008) modeled the integration of inventory decision with inspection policies for buyers who face stochastic demand. Hsieh and Liu (2010) studied the quality investment by different parties in a serial supply chain and used noncooperative games to model the manufacturer’s inbound inspection policy and the supplier’s outbound inspection policy. Fernández, Pérez-González, Aslam, and Jun (2011) built an optimization model for designing group sampling plans with considerations of various constraints such as quality requirements by the producer and consumers. Although operations research tools would also be helpful for modeling and analyzing the problem presented in this paper, to our best knowledge no literature has made such an attempt.

The acceptance policy of zero-defect, single-sampling by attributes for incoming inspections is the following. Inspectors will pick a random sample from the lot of each part without replacement. If no non-conforming (NC) item is found in the sample, the lot is accepted and sent to the inventory department. Otherwise, the entire lot is rejected. The sample size for each lot waiting for an incoming inspection is a decision to be made.

The inspection of M different parts coming into an assembly line can be formulated as an optimization problem that minimizes the total quality-related cost by choosing an optimal sample size for each part. Fig. 1
                      shows the quality-related cost components of a single lot, the expected total cost, and the way in which the sample size decision affects these costs. Increasing the sample size of any part i effectively reduces the NC rate, thus reducing the expected NC cost. However, the total inspection time inclines linearly as the sample size increases. In an incoming inspection the supplier is responsible for the cost of replacing rejected lots if they do not pass the incoming inspection. Therefore, the expected rejection cost per lot to the assembly line is often a very small amount, unlike that in an outgoing inspection. Moreover, the expected rejection cost per lot is bounded by the rejection cost per lot; therefore, the expected rejection cost is less sensitive to the sample size decision than the other two cost components are, as Fig. 1 illustrates. Excluding the rejection cost from the planning of incoming inspection does not significantly alter an optimal solution. This simplification allows management to obtain a near-optimal solution with certain features, which will be discussed in the next section.

For this research problem, management would also like to take the inspection resource constraint into consideration and determine the right sample sizes for the M parts waiting for an incoming inspection. The M parts are heterogeneous in that they differ in the lot size, Ni
                     , the NC rate, ri
                     , the average labor time for inspecting one item, ti
                     , and the NC severity (measured by the NC cost per NC item, ci
                     ). Considering both the inspection resource constraint and the heterogeneity of different parts, sample sizes must be determined jointly to maximize the overall cost-effectiveness of the incoming inspection. The best trade-offs among the M parts and between the two types of costs for each part are determined by an optimal solution to the problem (P) in the following.


                     Index:


                     i: the index of parts.


                     Variables:


                     ni
                     : the inspection sample size for part i;


                     Di
                     : the number of NC items in each lot of part i;


                     Parameters:


                     M: the total number of parts;


                     Ni
                     : the lot size of part i;


                     T: the amount of inspectors time available;


                     ci
                     : the NC cost pertaining to one NC item of part i;


                     di
                     : a value of the variable Di
                     ;


                     l: the unit cost of inspector labor (e.g., hourly rate of wage);


                     ri
                     : the NC rate of part i;


                     ti
                     : the average labor time to inspect one item of part i;


                     b(di
                     |Ni, ri
                     ): the probability that the part i has di
                      NC items given that the lot size is Ni
                      and the NC rate is ri
                     ;


                     h(0|Ni, di, ni
                     ): the probability of detecting zero NC item of part i in the incoming inspection, given that the lot size is Ni
                     , the number of NC items is di
                     , and the inspection sample size is ni
                     .


                     Sets:


                     
                        
                           I
                           =
                           {
                           1
                           ,
                           2
                           ,
                           ⋯
                           ,
                           M
                           }
                        
                     : the index set for parts;


                     
                        
                           
                              Ω
                              i
                           
                           =
                           
                              {
                              0
                              ,
                              1
                              ,
                              ⋯
                              ,
                              
                                 N
                                 i
                              
                              }
                           
                        
                     : the space of the random variable, Di
                     ;


                     
                        
                           
                              A
                              i
                           
                           =
                           
                              Ω
                              i
                           
                        
                     : the space of the decision variable, ni
                     .


                     (P)
                  


                     Minimize:

                        
                           (1)
                           
                              
                                 f
                                 
                                    (
                                    
                                       n
                                       1
                                    
                                    ,
                                    
                                       n
                                       2
                                    
                                    ,
                                    ⋯
                                    ,
                                    
                                       n
                                       M
                                    
                                    )
                                 
                                 
                                    
                                    =
                                 
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       I
                                    
                                 
                                 
                                    {
                                    
                                       c
                                       i
                                    
                                    
                                       ∑
                                       
                                          
                                             d
                                             i
                                          
                                          ∈
                                          
                                             Ω
                                             i
                                          
                                       
                                    
                                    b
                                    
                                       (
                                       
                                          d
                                          i
                                       
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          r
                                          i
                                       
                                       )
                                    
                                    
                                       d
                                       i
                                    
                                    h
                                    
                                       (
                                       0
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          d
                                          i
                                       
                                       ,
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    +
                                    l
                                    
                                       t
                                       i
                                    
                                    
                                       n
                                       i
                                    
                                    }
                                 
                                 ,
                              
                           
                        
                     
                     subject to:

                        
                           (2)
                           
                              
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       I
                                    
                                 
                                 
                                    t
                                    i
                                 
                                 
                                    n
                                    i
                                 
                                 ≤
                                 T
                                 ;
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 0
                                 ≤
                                 
                                    n
                                    i
                                 
                                 ≤
                                 
                                    N
                                    i
                                 
                                 ,
                                 
                                 ∀
                                 
                                    i
                                    ∈
                                    I
                                 
                                 ;
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    n
                                    i
                                 
                                 
                                 is
                                 
                                 an
                                 
                                 integer
                                 ,
                                 
                                 ∀
                                 
                                    i
                                    ∈
                                    I
                                 
                                 .
                              
                           
                        
                     In the objective function in Eq. (1),

                        
                           (5)
                           
                              
                                 b
                                 
                                    (
                                    
                                       d
                                       i
                                    
                                    |
                                    
                                       N
                                       i
                                    
                                    ,
                                    
                                       r
                                       i
                                    
                                    )
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          N
                                          i
                                       
                                       
                                          d
                                          i
                                       
                                    
                                    )
                                 
                                 
                                    r
                                    i
                                    
                                       d
                                       i
                                    
                                 
                                 
                                    
                                       (
                                       1
                                       −
                                       
                                          r
                                          i
                                       
                                       )
                                    
                                    
                                       
                                          N
                                          i
                                       
                                       −
                                       
                                          d
                                          i
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     and

                        
                           (6)
                           
                              
                                 h
                                 
                                    (
                                    0
                                    |
                                    
                                       N
                                       i
                                    
                                    ,
                                    
                                       d
                                       i
                                    
                                    ,
                                    
                                       n
                                       i
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             
                                                N
                                                i
                                             
                                             −
                                             
                                                d
                                                i
                                             
                                          
                                          
                                             n
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       (
                                       
                                          
                                             N
                                             i
                                          
                                          
                                             n
                                             i
                                          
                                       
                                       )
                                    
                                 
                                 .
                              
                           
                        
                     
                  

The objective of the problem (P) is to minimize the expected total cost composed of the inspection cost and the expected NC cost for M parts, as Eq. (1) defines. Decision variables of this problem are inspection sample sizes of the M parts, ni
                     ’s. (3) and (4) state that ni
                      is a non-negative integer ranging from zero to Ni
                      for any part i. The sample size decisions are subject to the constraint of inspection resource in (2). Let 
                        
                           n
                           i
                           *
                        
                     ’s denote an optimal solution to problem (P).

The number of NC items in each single lot of part i, Di
                     , is a random variable that can take 
                        
                           
                              N
                              i
                           
                           +
                           1
                        
                      different non-negative integer values. The research uses di
                      to denote a value of Di
                     , where di
                      ∈ Ωi
                     . The probability of having di
                      NC items in the lot of part i, 
                        
                           P
                           r
                           {
                           
                              D
                              i
                           
                           =
                           
                              d
                              i
                           
                           }
                           ,
                        
                      is determined by the probability distribution function (pdf) of the binomial distribution, b(di
                     |Ni, ri
                     ), in (5). The number of NC items of part i detected by the incoming inspection is a random variable too, which follows a hypergeometric distribution. According to the zero-defect acceptance policy, all NC items of part i either are removed (if the lot is rejected) or enter the assembly line (if the lot is accepted), if the incoming inspection is fully effective. Given that the lot size of part i is Ni
                      and the number of NC items is dj
                     , the probability of all NC items of part i entering the assembly line is a function of the sample size, ni
                     , calculated in (6). Therefore, the first portion within the bracket of the objective function is the expected NC cost for part i.

This paper first derives an optimal solution under a standalone condition where the inspection resource constraint is relaxed so that the sample size for each part can be determined independently. Results from the standalone condition provide important information for the sample size decisions under a resource constrained condition where sample sizes for all parts must be determined simultaneously.

The number of non-conforming (NC) items of part i, Di
                        , is a random variable whose value can vary from one lot to another; therefore, the realized outcome of incoming inspection is not deterministic. Lemma 1 in the following summarizes the relationship between the effectiveness of incoming inspection and the number of NC items of any part i, Di
                        , under the zero-defect acceptance policy.

                           Lemma 1
                           
                              
                                 
                                    h
                                    
                                       (
                                       0
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          d
                                          i
                                       
                                       ,
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    >
                                    h
                                    
                                       (
                                       0
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          d
                                          i
                                          ′
                                       
                                       ,
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    >
                                    0
                                    ,
                                 
                               ∀ 
                                 
                                    
                                       d
                                       i
                                    
                                    <
                                    
                                       d
                                       i
                                       ′
                                    
                                    ,
                                 
                               
                              and di and
                              
                                 
                                    d
                                    i
                                    ′
                                 
                               ∈ 
                                 
                                    
                                       Ω
                                       i
                                       P
                                    
                                    =
                                    
                                       {
                                       1
                                       ,
                                       ⋯
                                       ,
                                       
                                          N
                                          i
                                       
                                       −
                                       
                                          n
                                          i
                                       
                                       }
                                    
                                 
                              
                              . That is, if the inspection sample size does not exceed
                              
                                 
                                    
                                       N
                                       i
                                    
                                    −
                                    
                                       d
                                       i
                                    
                                    ,
                                 
                               
                              the incoming inspection has a chance of failing to detect the NC items. This chance declines with the increase in di.
                              
                                 
                                    h
                                    (
                                    0
                                    |
                                    
                                       N
                                       i
                                    
                                    ,
                                    
                                       d
                                       i
                                    
                                    ,
                                    
                                       n
                                       i
                                    
                                    )
                                    =
                                    0
                                    ,
                                 
                               ∀ 
                                 
                                    
                                       d
                                       i
                                    
                                    ∈
                                    
                                       Ω
                                       i
                                       O
                                    
                                    =
                                    
                                       {
                                       
                                          N
                                          i
                                       
                                       −
                                       
                                          n
                                          i
                                       
                                       +
                                       1
                                       ,
                                       
                                          N
                                          i
                                       
                                       −
                                       
                                          n
                                          i
                                       
                                       +
                                       2
                                       ,
                                       ⋯
                                       ,
                                       
                                          N
                                          i
                                       
                                       }
                                    
                                 
                              
                              . That is, the incoming inspection is able to prevent all NC items of part i from entering the assembly line if the sample size ni exceeds
                              
                                 
                                    
                                       N
                                       i
                                    
                                    −
                                    
                                       d
                                       i
                                    
                                 
                              
                              .
                           

The proof of Lemma 1 is in Appendix A. Lemma 1 shows that the zero-defect, single-sampling plan with a sample size of ni
                         eliminates the chance of more than 
                           
                              
                                 N
                                 i
                              
                              −
                              
                                 n
                                 i
                              
                           
                         NC items of part i entering the assembly line.

When 
                           
                              
                                 d
                                 i
                              
                              ∈
                              
                                 Ω
                                 i
                                 P
                              
                              ,
                           
                         the choice of inspection sample size ni
                         impacts the effectiveness of incoming inspection because the probability h(0|Ni, di, ni
                        ) is positive. Lemma 2 in the following summarizes this impact.

                           Lemma 2
                           
                              When
                              
                                 
                                    
                                       d
                                       i
                                    
                                    ∈
                                    
                                       Ω
                                       i
                                       P
                                    
                                    ,
                                 
                              
                              
                                 
                                    h
                                    
                                       (
                                       0
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          d
                                          i
                                       
                                       ,
                                       
                                          n
                                          i
                                          ′
                                       
                                       )
                                    
                                    <
                                    h
                                    
                                       (
                                       0
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          d
                                          i
                                       
                                       ,
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    ,
                                 
                               ∀ 
                                 
                                    
                                       n
                                       i
                                       ′
                                    
                                    >
                                    
                                       n
                                       i
                                    
                                    ,
                                 
                              
                              
                                 
                                    n
                                    i
                                    ′
                                 
                               
                              and ni
                               ∈ Ai. That is, an increase in the sample size ni will reduce the probability of all NC items of part i entering the assembly line if the sample size has not exceeded
                              
                                 
                                    
                                       N
                                       i
                                    
                                    −
                                    
                                       d
                                       i
                                    
                                 
                               
                              for any positive di.
                           

The proof of Lemma 2 is in Appendix B. Lemmas 1 and2 show how the incoming inspection controls the NC risk. The decision in a standalone scenario is to determine the sample size for each individual part i, 
                           
                              
                                 
                                    n
                                    ˜
                                 
                                 i
                              
                              ,
                           
                         at which the total cost for part i is minimized. The optimization problem for determining 
                           
                              
                                 n
                                 ˜
                              
                              i
                           
                         is presented as following:


                        (P
                        
                           i
                        
                        )
                     


                        Minimize:

                           
                              (7)
                              
                                 
                                    
                                       g
                                       i
                                    
                                    
                                       (
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    =
                                    l
                                    
                                       t
                                       i
                                    
                                    
                                       n
                                       i
                                    
                                    +
                                    
                                       c
                                       i
                                    
                                    
                                       ∑
                                       
                                          
                                             d
                                             i
                                          
                                          ∈
                                          
                                             Ω
                                             i
                                             P
                                          
                                       
                                    
                                    w
                                    
                                       (
                                       
                                          d
                                          i
                                       
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          r
                                          i
                                       
                                       )
                                    
                                    
                                       
                                          (
                                          
                                             N
                                             i
                                          
                                          −
                                          
                                             n
                                             i
                                          
                                          )
                                       
                                       
                                          
                                             d
                                             i
                                          
                                          ̲
                                       
                                    
                                    ,
                                 
                              
                           
                        subject to the constraints in (3) and (4).

In the objective function of (P
                           i
                        ), w(di
                        |Ni, ri
                        ) is defined as

                           
                              (8)
                              
                                 
                                    w
                                    
                                       (
                                       
                                          d
                                          i
                                       
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          r
                                          i
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          
                                             r
                                             i
                                             
                                                d
                                                i
                                             
                                          
                                          
                                             
                                                (
                                                1
                                                −
                                                
                                                   r
                                                   i
                                                
                                                )
                                             
                                             
                                                
                                                   N
                                                   i
                                                
                                                −
                                                
                                                   d
                                                   i
                                                
                                             
                                          
                                       
                                       
                                          (
                                          
                                             d
                                             i
                                          
                                          −
                                          1
                                          )
                                          !
                                       
                                    
                                    ,
                                 
                              
                           
                        which is greater than zero. 
                           
                              
                                 (
                                 
                                    N
                                    i
                                 
                                 −
                                 
                                    n
                                    i
                                 
                                 )
                              
                              
                                 
                                    d
                                    i
                                 
                                 ̲
                              
                           
                         is a dropping factorial

                           
                              (9)
                              
                                 
                                    
                                       
                                          (
                                          
                                             N
                                             i
                                          
                                          −
                                          
                                             n
                                             i
                                          
                                          )
                                       
                                       
                                          
                                             d
                                             i
                                          
                                          ̲
                                       
                                    
                                    =
                                    
                                       ∏
                                       
                                          z
                                          =
                                          0
                                       
                                       
                                          
                                             d
                                             i
                                          
                                          −
                                          1
                                       
                                    
                                    
                                       (
                                       
                                          N
                                          i
                                       
                                       −
                                       
                                          n
                                          i
                                       
                                       −
                                       z
                                       )
                                    
                                    .
                                 
                              
                           
                        The objective function, derived in Appendix C, shows that the expected number of NC items of part i entering the assembly line is a weighted average of falling factorial functions, 
                           
                              
                                 (
                                 
                                    N
                                    i
                                 
                                 −
                                 
                                    n
                                    i
                                 
                                 )
                              
                              
                                 
                                    d
                                    i
                                 
                                 ̲
                              
                           
                        ’s, with the weights defined in Eq. (8).

                           Lemma 3
                           
                              The expected number of NC items of part i entering the assembly line, calculated as
                              
                                 
                                    
                                       ∑
                                       
                                          
                                             d
                                             i
                                          
                                          ∈
                                          
                                             Ω
                                             i
                                             P
                                          
                                       
                                    
                                    w
                                    
                                       (
                                       
                                          d
                                          i
                                       
                                       |
                                       
                                          N
                                          i
                                       
                                       ,
                                       
                                          r
                                          i
                                       
                                       )
                                    
                                    
                                       
                                          (
                                          
                                             N
                                             i
                                          
                                          −
                                          
                                             n
                                             i
                                          
                                          )
                                       
                                       
                                          
                                             d
                                             i
                                          
                                          ̲
                                       
                                    
                                    ,
                                 
                               
                              is a convex function of the inspection sample size ni.
                           

The proof of Lemma 3 is provided in Appendix D. Lemma 3 indicates that the marginal return from increasing the sample size ni
                         is non-increasing.

Since the objective function of problem (P
                           i
                        ) is a convex function of sample size ni
                        , a local minimum of the objective function gi
                         is always a global minimum. Proposition 1 in the following summarizes the solution to problem (P
                           i
                        ). The pseudocode of the solution process is in Table 1
                        
                        
                        .

                           Proposition 1
                           
                              In a standalone scenario, no inspection is optimal if
                              
                                 
                                    
                                       g
                                       i
                                    
                                    
                                       (
                                       1
                                       )
                                    
                                    −
                                    
                                       g
                                       i
                                    
                                    
                                       (
                                       0
                                       )
                                    
                                    ≥
                                    0
                                 
                              
                              ; a full inspection is optimal if
                              
                                 
                                    
                                       g
                                       i
                                    
                                    
                                       (
                                       
                                          N
                                          i
                                       
                                       )
                                    
                                    −
                                    
                                       g
                                       i
                                    
                                    
                                       (
                                       
                                          N
                                          i
                                       
                                       −
                                       1
                                       )
                                    
                                    ≤
                                    0
                                 
                              
                              ; otherwise, a partial inspection is optimal. When a partial inspection is optimal, the optimal sample size,
                              
                                 
                                    
                                       
                                          n
                                          ˜
                                       
                                       i
                                    
                                    ,
                                 
                               
                              is determined as the following: let
                              
                                 
                                    x
                                    ˜
                                 
                               
                              be the real number at which
                              
                                 
                                    
                                       
                                          d
                                          
                                             g
                                             i
                                          
                                          
                                             (
                                             x
                                             )
                                          
                                       
                                       
                                          d
                                          x
                                       
                                    
                                    =
                                    0
                                 
                              
                              .
                              
                                 
                                    
                                       
                                          n
                                          ˜
                                       
                                       i
                                    
                                    =
                                    
                                       x
                                       ˜
                                    
                                 
                               
                              if
                              
                                 
                                    x
                                    ˜
                                 
                               
                              is an integer; otherwise
                              
                                 
                                    
                                       n
                                       ˜
                                    
                                    i
                                 
                               
                              is equal to either
                              
                                 
                                    ⌊
                                    
                                       x
                                       ˜
                                    
                                    ⌋
                                 
                               
                              or
                              
                                 
                                    ⌈
                                    
                                       x
                                       ˜
                                    
                                    ⌉
                                    ,
                                 
                               
                              whichever minimizes the objective function gi.
                           

Under a resource contained condition, increasing the sample size for a part may require cutting inspection resources for other parts. Therefore, sample sizes for all parts must be determined simultaneously, as problem (P) has defined. This problem falls in a specific category of optimization problems.

                           Proposition 2
                           
                              Problem (P) is a convex nonlinear integer program.
                           

The proof of Proposition 2 is in Appendix F. Gupta and Ravindran (1985) discussed convex optimization in detail. Branch and Bound (BNB) is one method of solving integer programming problems. This paper presents a three-step procedure for solving problem (P) in Table 2.

@&#RESULTS AND ANALYSIS@&#

This paper illustrates the implementation of the developed optimization model by an off-highway vehicle manufacturer in one of its assembly lines. A quality manager is responsible for entering inputs to the optimization tool and running it to determine sample sizes for the assembly line’s incoming inspection.


                           Fig. 2 displays the users interface of the optimization tool. In this example the quality manager wants to determine the sample sizes for 20 different parts waiting for the incoming inspection (i.e., M = 20). The inspection must be finished within 8 hours. Five inspectors are available during that time frame. Therefore, the total inspectors’ time available, T, is 40 hours. The rate of inspector wage, l, is 40 dollars per hour; therefore, the maximum inspection cost is 1600 dollars. The manager enters the information to the “TASK AND RESOURCES” section.

In the “INPUTS” section the quality manger enters the average inspection time per item, ti
                           , the NC cost per item, ci
                           , the lot size, Ni
                           , and the NC rate, ri
                           , for each of the 20 parts. The optimization tool solves the problem (P) to provide the optimal sample sizes, 
                              
                                 
                                    n
                                    i
                                    *
                                 
                                 ,
                              
                            in the “DECISIONS” section.

In the “EFFECTIVENESS” section the tool calculates the NC rate and expected NC cost for each of the M parts, both before and after the inspection so that effectiveness of the optimal incoming inspection can be assessed. The interface also includes two bar plots to visualize the reductions in the NC rate and the expected NC cost for each part.

The “OVERALL BENEFITS” section summarizes the investment in the incoming inspection, the reduction in the expected NC cost, and the reduction in the total cost. This section highlights the overall economic benefit from implementing the optimal incoming inspection.

The optimization model is programmed in the environment of Matlab R2013a and solved on a workstation (Dell T7500: 2 quad-core Intel® Xeon® processors CPU, 1.4 and 2.39 gigahertz, 48 gigabyte RAM). Table 3
                           
                           
                            summarizes the solution to the example.

The first step is to solve problems (P
                              i
                           ), for any i ∈ I. The average solution time of this step is 0.1 seconds. The solution violates the inspection resource constraint in problem (P) because it requires 5214 minutes of inspection time (approximately 11 inspectors), more than the 2400 minutes of available inspectors’ time. Therefore, the continuous relaxation of problem (P) is further solved and the average solution time for this step is 14.4 seconds. The solution indicates the five inspectors are fully utilized. The expected total cost is 7501 dollars including 1600 dollars of inspection cost and 5901 dollars of expected NC cost. Since many of 
                              
                                 x
                                 i
                                 *
                              
                           ’s are not integers, problem (P) is solved, which uses 
                              
                                 
                                    {
                                    
                                       x
                                       i
                                       *
                                    
                                    }
                                 
                                 
                                    i
                                    ∈
                                    I
                                 
                              
                            to set up the starting point and the search boundary for the BNB process. Table 3 shows that the BNB procedure is the most time-consuming step. Solving problem (P) with 20 integer variables took on average 15.6 minutes. Compared to the solution to the continuous relaxation of problem (P), the solution to problem (P) increases both the expected NC cost and the expected total cost by only one dollar. The “OVERALL BENEFITS” section in Fig. 2 shows that the optimal incoming inspection effectively reduces the expected NC cost by 80.36 percent, from 29999 to 5902 dollars. The reduction of the total expected cost is 75.0 percent, from 29999 to 7502 dollars.

The risk of NC items entering the assembly line is measured by the NC rate, and the expected NC cost measures the severity of non-conformance. The two bar plots in the users interface show changes of these two metrics after implementing the proposed optimal incoming inspection. Major findings from the plots are as follows.

                              
                                 •
                                 The incoming inspection is not recommended for parts with low NC rates (parts #2, #20, #7, and #9) and those with low ci
                                    /ti
                                     ratios (parts #13, #17, and #11).

Parts with high NC rates, large lot sizes, and high ci
                                    /ti
                                     ratios are recommended for a thorough inspection (e.g., parts #19, #4, #1, and #18).

This example has confirmed the principle of sample size decisions for resource-constrained incoming inspections is to treat parts differently by taking into account their NC risks and severity, lot size, as well as cost-effectiveness of the incoming inspection. The parts high in NC risk and severity are recommended for thorough inspections. When the inspectors’ time is limited, the inspection priority is given to parts that have large lot sizes and are highly cost-effective in incoming inspections. The optimization model developed in this paper helps calibrate sample size decisions based on this principle.
                        

When sample size decisions are constrained by the availability of inspection resource, quality management would like to know the maximum marginal return on each unit of additional resource to be invested in the incoming inspection. Results based on the example in the previous section are presented in Fig. 3.

The left plot in Fig. 3 displays the minimized expected total cost, as a percentage of the expected total cost before the incoming inspection, at any given amount of inspection resource (i.e., the inspectors’ time). The plot shows that the minimized expected total cost declines as the inspection resource increases; however, the marginal reduction diminishes and will approach zero, finally.

The right plot in Fig. 3 shows the maximized expected rate of return (i.e., the maximized reduction of the expected NC cost divided by the investment in incoming inspections) at different levels of inspection resource investment (i.e., the wage paid to inspectors). The maximized return on investment declines when the investment continues to increase and the reason for it is the decreasing margin of investment. The optimization decision model ensures a non-increasing total cost, thus rendering an expected rate of return greater or equal to 1.

This paper further uses a simpler example with only three parts to illustrate the impact of the resource constraint on sample size decisions. Parameters of the three parts are listed in Fig. 4. This figure displays a series of bubbles in the space of decision variables. Each bubble corresponds to a case at a unique level of inspection resource: the location of each bubble is the optimal decisions, 
                           
                              (
                              
                                 n
                                 1
                                 *
                              
                              ,
                              
                                 n
                                 2
                                 *
                              
                              ,
                              
                                 n
                                 3
                                 *
                              
                              )
                              ,
                           
                         and the size of the bubble measures the minimized expected total cost (as a percentage of the expected total cost before inspection).


                        Fig. 4 , again, shows that the minimized expected total cost declines if the inspection resource increases. When the inspection resource is sufficient, no longer posing a constraint on sample size decisions, the expected total cost can be reduced to only 3.6 percent of the expected before-inspection cost. More importantly, Fig. 4 demonstrates that the three parts with heterogeneous quality features are treated differently by the incoming inspection. Part #1 is seen as the least important by the incoming inspection because both the NC cost and ci
                        /ti
                         ratio are the smallest among the three parts. Although parts #2 and #3 are similar in their NC rate and ci
                        /ti
                         ratio, part #2 is more important than part #3 in that the lot size of the former is 50 percent larger than that of the later. As a result, increments of the inspection resource initially are used to increase only the sample sizes of parts #2 and #3, and the sample size of part #2 increases faster than that of part #3. After the inspection resource exceeds a certain level, the sample size of part #1 starts to increase.

The optimal decision model presented in this paper does not take the rejection cost into account. To illustrate this simplification is appropriate, the paper assesses the resulted cost deviations at four levels of rejection cost (in dollars per lot): 10, 50, 100, and 500. The setting of this comparative study is the same as that in Section 5.1. Results are summarized in Table 4. For example, if the rejection cost is 10 dollars per lot and it is not modeled by the sample size decision, this simplification reduces the expected NC cost by 0.006 percent, increases the expected rejection cost by 0.726 percent, and increases the total cost by 0.004 percent. When the rejection cost is increased by 10 times, to 100 dollars per lot, the expected total cost is increased by only 0.296 percent. However, the impact becomes less trivial when the reject cost is increased to 500 dollars per lot. At this level of rejection cost, excluding the consideration of it increases the expected total cost by 2.769 percent. This comparison confirms the fact that the rejection cost is less sensitive to sample size decisions than other cost components for incoming inspections, particularly, when the reject cost is low.

To demonstrate that selecting the starting point and narrowing the boundary for the BNB procedure help reduce the solution time, the paper examines the reduction in solution time for ten cases. These ten cases have different levels of inspection resource, ranging from 320 to 3200 minutes and with an increment of 320 minutes per case. The amount of inspection resource has a direct impact on both the sparsity of the optimal solution to the problem (P) and the sample sizes, thus impacting the solution time. The average solution time for each case is based on five replications. Fig. 5
                         shows the average solution time and its 95 percent confidence interval for each case, both before and after applying the technique for reducing solution time. The proposed approach works consistently for the ten cases examined, and the average reductions range from 48.3 to 90.2 percent.

@&#CONCLUSIONS@&#

This paper proposed a nonlinear integer program to determine an optimal plan of zero-defect, single-sampling by attributes for incoming inspections in assembly lines. In the presence of an inspection resource constraint, sample sizes of the parts waiting for incoming inspections must be determined simultaneously. The optimization model can take into account the parts’ heterogeneous quality features (e.g., NC risk, NC severity, lot size, and complexity of inspection) and determine the right sample size for each part. The paper proved the convexity feature of the expected total cost function for the zero-defect acceptance policy and, accordingly, recommended a three-step solution procedure. A real example of twenty parts was presented to illustrate the application of the optimization model.

This paper has built a foundation for practically meaningful extensions. The maximum allowable defective number in this paper is zero. The zero-defect acceptance policy may not be optimal in other circumstances. When it is greater than zero, the maximum allowable defective number becomes an additional decision variable besides the sample size. The sample size and the maximum allowable defective number adversely impact the expected NC cost, and the convexity of the objective function is no longer held on the entire decision space. These require a re-calibration of solution features. The rejection cost is low for incoming inspections and, thus, it was not considered in this paper. However, the rejection cost is an important cost component to be considered, for example, in outgoing inspections. By including the expected rejection cost in the objective function, the sample size decision seeks a trade-off among three cost components, which is more complex than the one presented in this paper. Another important extension of this paper is to model sample size decisions for multiple quality features at a part level and then integrate this lower level decision with the higher level decision analyzed in this paper. The lower level decision provides more accurate inputs to the higher level decision, while the latter poses a constraint for the former. The integration is a value-added, yet challenging, topic of research. All above-mentioned extensions are important subjects of future research.

Supplementary material associated with this article can be found, in the online version, at doi:10.1016/j.ejor.2015.05.054.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

