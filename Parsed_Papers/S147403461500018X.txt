@&#MAIN-TITLE@&#Cloud asset for urban flood control

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The concept of “cloud asset” is first proposed for urban flood control.


                        
                        
                           
                           The framework of cloud asset is worked out from both hardware and software aspects.


                        
                        
                           
                           Cloud asset enabled workflow management is presented.


                        
                        
                           
                           A case is given to verify the effectiveness of cloud asset.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Cloud asset

Smart object

Cloud-based applications

Mobile agent

Urban flood control

@&#ABSTRACT@&#


               
               
                  The performance of physical assets has become a major determinant success factor for urban flood control. However, managing these assets is always challenging as there are a huge number of diverse assets involved, which are distributed throughout the city, and owned by different agencies. Aiming at improving the management efficiency of these assets, and ensuring their performance, this paper proposes the concept of cloud asset based on cloud computing, mobile agent, and various smart devices. Through hardware integration and software encapsulation, cloud asset could sense its real-time status, adapt to varied working scenarios, be controlled remotely, and shared among agencies. It enables accurate real-time control of every asset, and thus improves the management efficiency and effectiveness. This paper first presents the concept of cloud asset with its technical architecture, and then analyses the software agent model for cloud asset, which is the key enabler to realize UPnP (Universal Plug and Play) management of assets, and provides mobility and intelligence for them. After that, the framework of cloud asset-enabled workflow management is built, in which cloud asset could be easily found and dynamically invoked by different workflows. Finally, a demonstrative case is provided to verify the effectiveness of cloud asset.
               
            

@&#INTRODUCTION@&#

Urban flood control has attracted more and more attention in recent years since flood is becoming the most frequent and greatest natural disaster for urban areas, and usually causes severe impacts. Over 233 out of the 633 largest cities in the world are threatened by flood, affecting about 663million inhabitants [1]. In China, during 2008 to 2010, at least 62% cities had encountered urban flood, and 137 cities were flooded for more than three times. According to the Flood Control and Draught Relief Headquarters of China, over 234 cities had been suffered from flood in 2013. The situation will become even worse in the future with the worldwide excessive urbanization and climate change [2]. To mitigate future flood damages in urban area, various measures have been taken out, such as river training, storm water diversion, flood forecasting, real-time warning, and emergency management.

However, the effectiveness of these measures is always impeded by the poor performance of diverse physical assets involved, such as dams, sewers, pipes, pumps, hoisters, and sandbags, which will then threaten the success of urban flood control [2]. In order to ensure the performance of these assets throughout the whole process of urban flood control, effective management of them is urgently needed. Currently, some attempts have also been made. For example, Malano et al. [3] identified the roles asset management program (AMP) plays for irrigation and drainage infrastructure, and analyzed its investment requirements. Park and Kim [4] developed a data warehouse based decision support system for the management of sewer infrastructure. To monitor the condition of water pipeline and networks, Davis et al. [5] made a detailed analysis for the possible techniques, and Lau and Dwight [6] proposed a fuzzy-based decision support model. Nevertheless, as most of them are only focusing on a sub-set of assets in urban flood control and covering parts of their lifecycles, many problems remain unsolved, including how to get real-time data from different assets, make remote control of them, and optimize the usage throughout their whole lifecycles.

Information technology provides an opportunity to solve these problems, and has been proved to be effective in many other fields. For example, radio frequency identification (RFID) could help asset managers to make asset tracking and monitoring. It has already been widely used in hospitals to improve the asset management efficiency and reduce the cost [7]. As the enabling technology to collect real-world information, wireless sensor network (WSN) has also been widely used in asset management [8]. In addition, agent technology, which could make the management process much more intelligent and flexible, is also widely adopted, such as in the management of transformers in smart grids [9]. However, compared with these practices, the management of physical assets in urban flood control is immensely more complex. It evolves tremendous large amount of diverse physical assets that are physically distributed in very large areas, located in extreme environment, and owned by different agencies [3]. Major challenges still exist that impede the adoption of these technologies to improve the effectiveness and efficiency of physical asset management in urban flood control.

Firstly, how to make asset smart so that it could work automatically and be controlled remotely? In urban flood control, monitoring the working status of various physical assets and the environmental information around them is of great importance. However, the dispersion of assets and their extreme working environment makes it impossible to make on-site control for them, thus is a challenge to collect real-time data from them. Besides, during the process of urban flood control, many assets are mobile that would move from one place to another, which further increases the difficulty of managing them. Moreover, the poor connectivity of network posts another difficulty to manage assets remotely as it cannot be always guaranteed in emergency during urban flood.

Secondly, how to realize UPnP management for all the diverse assets? In urban flood control, physical assets are usually differed from properties, functions, and interfaces. Even for the semantic same assets, such as pumps from different manufactures, may varied from the implementation point of view. Professional knowledge is usually required when managing these assets, which is fault-prone and inefficient. UPnP is an agile, efficient and platform independent concept for the management of devices, and could greatly improve the management efficiency and flexibility of these assets. However, due to the diversity of APIs for different assets, it is a challenge to develop an information infrastructure for the UPnP management of assets. In addition, the differences on assets executing platforms also impede the development of integrated asset management solution, and hinder the deployment of information systems.

Thirdly, how to improve the flexibility of asset management so that assets could easily adapt to the dynamic and diverse working scenarios? In urban flood control, the exact working scenarios of assets are usually dynamic and unpredictable. It will benefit a lot if assets could be easily raised and adopted in a new working scenario according to the real-time situations. However, the management of assets is always separated with the process of urban flood control, and information of them is isolated in different agencies with different formats and security levels. It will be a great obstruction to realize flexible utilization. Moreover, the absence of effective asset sharing mechanism further increases the difficulty, and impedes the global optimal decision making during the process of urban flood control.

Aiming at addressing the above challenges, this paper proposes the concept of “cloud asset” for urban flood control. Through equipping with various information technologies, cloud asset could: (1) Automatically collect real-time data from the physical world during its whole lifecycle; (2) Be monitored and controlled remotely in an UPnP manner; (3) Be flexible and intelligent to adapt to various working scenarios; And (4) be easily invoked and shared through the cloud by all the authorized agencies.

In the rest of this paper, relevant literatures will be reviewed first, and then Section 3 will introduce the concept of cloud asset and its technical architecture. In Section 4, the mobile agent model of cloud asset will be discussed in details, and Section 5 will describe the mechanism of how a cloud asset is invoked and used by diverse workflows. A case of cloud asset with its executing process will be presented in Section 6. After that, Section 7 will conclude the whole paper and discuss the future works.

@&#LITERATURE REVIEW@&#

In this research, the relevant literatures can be categorized into three aspects: urban flood control, smart object, and cloud computing and mobile agent.

Generally, the whole process of urban flood control can be divided into four stages [10], they are flood planning and designing, flood event (includes flood warning and flood forecasting), flood response, and evaluation after flood. A variety set of measures have been taken for these four stages, including both structural and non-structural measures [11]. Structural measures refer to engineering works that make physical changes on urban landscapes to mitigate the risks of flood, such as canalization and detention basins. Non-structural measures stand for those preventive methods. For example, flood forecasting and warning, disaster management, flood proofing, and the method proposed in this paper, all belong to non-structural measures.

Plenty of research and practices have been done on non-structural measures by using various information technologies. Al-Sabhan et al. [12] have built an information system to provide real-time flood forecasting. By using GIS and WWW, environmental data could be accessed and processed online in near real time. Price and Vojinovic [13] have introduced the concept of digital city based on GIS to provide urban flood disaster management. Basha et al. [14] have developed a framework for predictive model-driven control, and applied it in the flood prediction. Besides, various decision support systems have also been built to support the different stages of urban flood control [15–17].

Despite abundant research on the non-structural measures has been done, virtually scare research has been conducted from the aspect of physical asset management, needless to say the research on how to use information technologies to facilitate the asset management process in urban flood control.

The concept of smart object has been introduced over 20years with the development of information technologies [18,19]. It refers to any object that can be uniquely identified, be aware of its status and the environment around it, communicate with others, make decisions, and take actions automatically [20]. Smart object serves as the building block of Internet of Things (IoT), and has been widely accepted and adopted in many areas, such as supply chain management, healthcare, smart homes, and product management [21,22].

With the development of emerging technologies, smart object has also been further studied and developed in various aspects. López et al. [20] proposed the general framework of smart object system, so that it can be seamlessly integrated with various technologies and be implemented feasibly and flexibly in different applications. Considering the real-world context of smart object and the changing network structure, Siegemund [23] developed a communication platform for smart object. Menegatti et al. [24] presented a robotic system for the discovery, detection and localization of smart objects. Furthermore, the concept of smart object has also been extended to support the specific requirements of diverse fields, and many new concepts have been proposed, such as smart device [25] and self-serving asset [26].

However, to our best knowledge, currently, scare research of smart object has been conducted in the context of urban flood control. Efforts are still needed on how to build smart object considering the rigors requirements and extreme environment of urban flood control.

Cloud computing is an emerging technology in computer science. Everything is treated as a service in cloud computing, which makes it more efficient, flexible, and economical for industry to do their business [27]. Besides, cloud computing also provides opportunities for companies to flexibly access sufficient computing and storage resources, and easily scale their services [28]. The benefits of cloud computing has been widely accepted by various fields, including healthcare, logistics, and manufacturing. It has also been applied in physical asset management. For example, Chun et al. [29] have built a system called CloneCloud to manage mobile applications and devices. Scott de Deugd et al. [30] has modeled devices as services to lower the cost and increase the management flexibility.

Virtualization is the key feature of cloud computing. It transforms the physical resources as virtual resources in the cloud. Agent technology has been proved to be an effective tool for virtualization [31], and mobile agent could provide additional flexibility to use the cloud [32]. Generally, mobile agent refers to active object with behavior, state, and location, which is autonomous and mobile. It can move freely with state and code in execution without suspending services, provide better asynchronous interaction, reduce communication cost, and enhance flexibility [33]. A lot of efforts and practices on asset management have been made based on mobile agent. For example, Smarsly and Law [34] have presented a mobile agent based approach to reduce the communication cost in wireless sensor networks for structural health monitoring. To improve the flexibility of managing numerous distributed generators, Otani and Kobayashi [35] have developed an SCADA system based on mobile agent. Lee et al. [36] have introduced an itinerary-based mobile agent approach to address problems in managing mobile devices through OSGi (Open Services Gateway initiative).

Despite the efforts reviewed above, there is still little research focusing on how to use cloud and mobile agent to facilitate the management of physical assets involved in urban flood control, and further research is needed taking account of the specialized context in urban flood control.

Generally, the physical assets involved in urban flood control could be grouped into three categories: infrastructure (e.g. flood retarding basin, flood embankment, and dam), equipment (e.g. pump, hoist, and emergency diesel generator), and materials (e.g. sandbag, tent, and life jacket). Because the management requirement between different categories of assets varies a lot, they are always managed manually by trained staff in separate professional agencies, which is usually inefficient, inaccurate and error prone. And it has already becomes a great obstruction to further improve the effectiveness of urban flood control.

Aiming at overcoming these problems and minimizing repetitive human works, “cloud asset” is proposed. This section will first introduce the concept of cloud asset, and then discuss its general architecture.

To improve the physical asset management efficiency and effectiveness from a technical perspective, multiple ways could be achieved. For example, the movement of mobile pump could be tracked in a sensor-rich environment, and its working status could be monitored by on-site equipment. However, considering the extremely large area and numerous working scenarios involved in urban flood control, it is impossible to realize such scenario-oriented solutions in practice. Fortunately, the development of technologies provides another opportunity [20]. Much more technologies could be embedded into assets and provide sufficient information to build an asset-centric solution, in which asset takes control of the information and actively participates in real working scenarios. According to this notion, the concept of cloud asset is proposed.

In general, cloud asset refers to a physical asset that is augmented with the capability of identification, sensing, communicating, reasoning, and acting, and can be stored, evolved, controlled, and shared through the cloud. It can also be treated as an extension of smart object that integrates the concept of smart object (to be more specified, here is smart asset) and cloud service.

Basically, cloud asset consists of two parts: hardware part and software part, and its conceptual model can be depicted in Fig. 1
                        .

The hardware part is also called “smart asset” that consists of physical asset itself and the smart devices attached with it. By equipping with various smart devices at the hardware level, such as Auto-ID devices, sensors, communication modules, microprocessors, and actuators, traditional physical asset could be turned into smart asset that can be uniquely identified, could sense the environment, communicate with others, make decisions, and take actions. Along with the rapid development in information technology, especially in integrated circuitry and embedded technologies, these smart devices would become much more powerful with even smaller size and cheaper price. It would greatly facilitate the integration of physical assets with these smart devices, and make it much easier and more plausible to build smart asset in practice.

The software part of cloud asset refers to the mobile agent that is used to wrap and represent smart asset in the cloud. It is also called “cloud asset agent” that exposes various cloud services for external environment. As a mirror of smart asset, cloud asset agent could execute paralleled according to the real-time data collected, be intelligent to make decisions, and can be easily shared and managed through the cloud. Besides, it is also flexible not only could work under diverse workflows, but also can be accessed through various ways. The details of cloud asset agent will be further discussed in Section 4.

To implement the concept of cloud asset into reality, the general architecture of cloud asset and its management platform is built under the context of urban flood control, as is shown in Fig. 2
                        . As a typical cloud-based solution, this management platform consists of three major layers: Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS).

IaaS layer provides sufficient and scalable virtual resources for the upper layer. The basics of this layer are numerous smart assets involved in urban flood control which represent the concrete physical resources, including smart infrastructure, smart equipment, and smart materials. As discussed before, they are the integration of physical assets and various appropriate smart devices.

Gateway Operating System (GOS) is another important component in IaaS layer that is used to virtualize these physical resources (smart asset) into virtual resources (cloud asset agent). It is a light-weighted middleware system that could be deployed on desktops, servers, and mobile devices. GOS connects and hosts a set of smart assets through wired or wireless communications, and takes control for them. It wraps all the connected smart assets as cloud asset agents so that they become virtual resources and could be found and invoked through the cloud.

The instances of cloud asset agent and the real-time data collected by them will be stored in PaaS layer, in cloud asset agent repository and cloud database respectively. Besides, based on the virtual resources provided by IaaS layer, various scenario-independent services are provided by PaaS layer, such as cloud asset agent management service, data analytics service, and workflow management service. These services could provide basic management for the execution of cloud asset agent, mine useful information from mass real-time data, and support the workflow management of cloud asset.

At the top of this architecture, SaaS layer contains various applications that are built based on the services provided by PaaS. These applications are used to facilitate the management processes during the four stages of urban flood control. Users could easily access these applications through the urban flood control explorer provided by this layer.

Essentially, cloud asset agent is a cloud-based mobile agent that is used to wrap and represent smart asset in the cloud. It is developed with three main features. Firstly, cloud asset agent is highly abstracted with uniform interfaces, which is the key enabler to realize the UPnP management for diverse assets. Secondly, it is intelligent and serves as the brain of cloud asset. Thirdly, cloud asset agent is mobile and could well support the migration of assets, and facilitate the sharing of them between agencies. In the following, mechanisms to realize the above three features will be discussed in detail respectively.

To manage physical assets through cloud, it is a prerequisite to represent them as software models in the cloud. Cloud asset agent is thus developed. As a typical mobile software agent, it is built according to FIPA 2000 [37] and OMG Mobile Agent Facility Specification [38]. Basically, cloud asset agent contains eight main components: agent name, agent locator, agent communication language (ACL), attributes, services, service scheduler, life-cycle manager, and knowledge base. All the well connected smart assets will be virtualized and wrapped by this agent model, and represented as independent instances of cloud asset agent, which will be running in separate threads of the cloud-based executing environment. The properties and parameters of asset are represented as attributes of cloud asset agent, and its functions and behaviors are abstracted as services. Cloud asset agent is a mirror of the corresponding smart asset and could execute in the cloud paralleled. In this way, asset could be easily searched, configured, and invoked through the cloud.

Cloud asset agent is also the key enabler for the UPnP management of different assets. It simplifies the asset management processes for diverse assets without losing their particularities. To realize this, two core methods are adopted in the development of cloud asset agent.

The first one is abstraction. Cloud asset agent is highly abstracted that could wrap all the diverse assets involved in urban flood control. The abstraction framework of cloud asset agent is shown in Fig. 3
                        . From the bottom to top, different asset agent will be abstracted step by step, and finally become a highly abstracted agent model: cloud asset agent. This model contains all the common information of different assets, and implements agent controller, which defines the uniform interfaces for the control of software agent. Through this abstraction, cloud asset agent also hides the complex implementation details of different assets, so that asset managers could focus on the general asset management processes without knowing the details about which specific interfaces at the bottom are invoked.

However, with the increasing of abstraction levels, the particularities of assets lose accordingly. In order to keep these particularities to the utmost extent while making high level abstraction, the technology of reflection, which is derived from computer programming, is adopted by cloud asset agent. As the inverse process of abstraction, reflection keeps the variety of diverse assets, and could examine the lower-level abstraction models of cloud asset agent at runtime. More importantly, it could detect the hidden services provided by the low-level models, and dynamically invoke them when necessary. This mechanism enables that even different assets are represented by the same model of cloud asset agent, they could behave differently, according to their own characteristics.

The intelligence of cloud asset agent basically lies in two aspects. Firstly, it is intelligent to evolve according to the real-time data collected from the physical world throughout the whole asset lifecycle. By this means, problems could be found in advance, and in time maintenance could be made. Secondly, cloud asset agent is intelligent to work in diverse workflows, and could easily cooperate with other assets and agencies.

To realize these two types of intelligence, rule-based approach is adopted for cloud asset agent, where knowledge is represented as rules explicitly and real-time data are processed and abstracted as events/facts. When events meet the conditions of one or more rules, the rules will be triggered and results will be generated accordingly. Rule-based approach separates knowledge with its reasoning process, so that it could be more flexible to fit the varied asset management processes in urban flood control. Besides, rules could reflect the best knowledge of humans unambiguously, and can be easily understood and modified by experts in different fields. Furthermore, rule-based approach is easy to verify and validate, which will also accelerate the development process of cloud asset.

The general working logic of the rule-based cloud asset agent is shown in Fig. 4
                        (a). Cloud asset agent continuously gets the real-time data from the environment, and sends the abstracted events to inference engine. It compares these events with rules stored in knowledge base to deduce the results, which are plans that contain a series of actions. After that, these actions will be scheduled by action scheduler, and then taken by cloud asset agent. To improve the accuracy and effectiveness of rules, cloud asset agent will continue to get feedback data from the environment, and make some basic analysis. Then the selected rules will be evaluated according to the result, and necessary updates of rules will be made afterward. This mechanism enables cloud asset to automatically learn from the environment, and makes it more robust to adapt to varied environment.

To improve the interoperability between different applications in urban flood control, and make it easy to be understood and edited by humans, rule is depicted by sematic web rule language (SWRL), and represented as XML-based files in the knowledge base, as shown in Fig. 4(b). Line 2 to line 11 define the antecedent (body) of the rule, and line 12 to 17 define its consequent (head). When all the conditions in the body are satisfied, the head must be satisfied consequently, which will be shown as the output of the rule. In this way, rules could be easily edited by many open source ontology editors like FluentEditor, even in controlled natural language, which would finally improve the management efficiency of these rules.

Physical movement of cloud asset is a common scenario in urban flood control. When asset is moving from one site to another, it will first disconnect with the previous GOS and then reconnect with a new one. In order to provide continuous services during the movement and eliminate repetitive configuration of asset in the new place, cloud asset agent should also be able to move accordingly. Besides, in urban flood control, the connectivity of internet cannot be always ensured, which requires the agent should be flexible enough to migrate from the cloud to GOS to execute locally, and resume executing in the cloud when network is recovered. To support such mobility, cloud asset agent is developed as a mobile agent that could migrate freely among asset cloud and GOS seamlessly.

The mobile process of cloud asset agent is depicted in Fig. 5
                        . At the sender’s side, cloud asset could begin to migrate by calling its function “Transfer” with identifier of its receiver. After that, five steps will be taken to prepare the journey of agent, and then it will be send out. All the information about the asset that would migrate with the agent is stored in an XML-based definition file, as shown in the middle of Fig. 5. After the XML file is well received by the receiver, it could automatically start a new thread of cloud asset agent and initialize it with all the information stored in that file. Then the cloud asset agent could continue to work from its previous state and working parameters.

In order to reduce the network transportation while keeping all the necessary information during the migration of cloud asset agent, the XML-based definition file is carefully tailored. For the information that is compulsive for initializing cloud asset agent, it will be stored in the definition file regardless of the migration direction. This kind of information include agent state (current working status and host information), attributes (asset properties and working parameters), services, and knowledge base. For the database that stores the execution records of cloud asset, only unidirectional transmission is provided. When the cloud asset agent is migrating from GOS to asset cloud, these records will be included in the definition file, otherwise, it will be not.

One of the most important goals of proposing cloud asset is improving the management efficiency of physical assets, and finally facilitating the workflow management in urban flood control. Different from the traditional production processes, the working scenarios in urban flood control are usually varied and unpredictable. As a result, the workflows change frequently, which not only requires assets could flexibly adapt to different workflows, but also expects assets could actively improve the workflow according to these scenarios. Besides, considering the emergency situations in urban flood control, the matching process of workflow with physical assets should also be done in a very short period of time.

In order to fulfil these requirements, cloud asset enabled workflow management is worked out. The process of executing a workflow based on cloud asset could be depicted in three steps. Firstly, domain experts define the workflows in specific situations, and indicate the requirements of cloud assets that would be involved. Secondly, each activity in the workflow searches for the qualified cloud assets automatically based on their actual working status. Thirdly, these selected cloud assets will be invoked through the internet, and actions could be taken according to the predefined parameters. Since every cloud asset is published as cloud service in the cloud, it could be found and invoked by different workflows. Meanwhile, the domain specific knowledge could also be easily transferred to the selected cloud asset as rules, so that it could easily adapt to new scenario and execute immediately after being invoked.

Besides, to actively improve the workflow from the asset side, data analytics based intelligence is adopted. In urban flood control, a huge amount of real-time data will be collected by various assets located in different places. Countless useful information will be hidden in these data. The techniques of data analytics provide ways to integrate these messy data, and mine knowledge from them. Workflows could then be improved simultaneously during execution through the analysis of these knowledge.


                     Fig. 6
                      presents the technical framework of cloud asset-enabled workflow management. A brief explanation of it will be given below.

Cloud asset exposes its services and properties over the cloud through virtualization, and stores its basic information in Cloud Asset Catalogue (CAC), which is the key component for the sharing of cloud assets. All the cloud assets are published and registered in CAC, so that they can be easily found and invoked by authorized users in the cloud.

The real-time data collected by various cloud assets will be stored in Cloud Data Storage, and managed by Database Management (DBM) module. Data analytics module is then responsible for mining useful information from these huge amount of real-time data, and extracting all the events occurred during the execution of cloud assets and the evolution of environment.

To facilitate the coordination between different components and agencies involved, event-driven and subscription/notification methods are adopted. Event engine keeps track of all the event generated by data analytics module and workflow engine, and maintains a subscription and notification list for them. All the interactions between workflow engine and the cloud asset are realized by sending massages through event engine.

The functions of the workflow engine mainly lies in four aspects: (1) Assistant users to create workflows according to the real life working scenarios; (2) Identify suitable cloud assets for activities in the workflow by querying CAC through sending messages over event engine; (3) Drive the execution of workflow onward according to events sent from event engine and the coordination of selected cloud assets; (4) Monitor the execution status of workflow and report key events to event engine.

Cloud Asset Adaptor serves as the access point of cloud asset, and provides unified communication protocol and interfaces between workflow engine and cloud asset. All the underlying connection and service invocation of cloud asset will be done by Cloud Asset Adaptor.

According to the concept of cloud asset and its technical details discussed above, this section will provide a demonstrative case aiming at:
                        
                           •
                           Verifying the feasibility of cloud asset and its technical architecture;

Illustrating its management and execution process;

Demonstrating the effectiveness of cloud asset during urban flood control.

In this case, several prototypes of cloud asset are built using LEGO models to simulate some common physical assets involved in urban flood control, including residential buildings, mobile pumps, emergency command vehicles, trucks, and relief materials like tents and sandbags. Besides, a management platform for cloud asset is also developed. JAVA is selected as the programming language, whose features like multithreading, remote method invocation, and reflection could well support these characteristics of cloud asset discussed in Section 4. In addition, the situation of a real urban flood control is reproduced by these models in the laboratory to simulate the working processes of cloud asset and verify its effectiveness.

In the following, this section will first explain how to build a cloud asset through our platform step by step, and then its execution process during urban flood control will be illustrated. After that, the benefits and shortcomings of cloud asset will be discussed.

All the physical assets involved in urban flood control could be equipped as cloud assets through our management platform in four basic steps (Fig. 7
                        ). Without loss of generality, the following will take mobile pump as an example to explain the detailed operation processes of building a cloud asset.
                           
                              Step 1: Hardware integration

First of all, from the aspect of hardware, mobile pump should be equipped with smart devices to become a smart pump. In this case, considering the laboratory demonstration environment, two smart devices are selected. One is High Frequency (HF) RFID tag that is used to identify the mobile pump and track its movement. The other is Ingenic Newton Integrated Chip (INIC), which is a cheap and small chip that integrates sensors (position, pressure and temperature sensor), communication module (Bluetooth and WIFI), and has a 1GHz CPU and 3GB storage spaces. It is the key enabler for mobile pump to sense the environment and communicate with others.
                           
                              Step 2: Software encapsulation

After that, the mobile pump could connect with GOS through Bluetooth, and can be encapsulated from the software aspect. Firstly, users should define the attributes of mobile pump, including its parameters like type, model, size, weight, color, and etc. And then its services should also be defined, which will be published in the cloud according to the functions and APIs provided by the pump.
                           
                              Step 3: Cloud asset configuration

Before using this well-defined cloud pump, it should be configured first. Two parts are included in this step. The first one is configuring its management information, including department, person in charge, maintenance period, and etc. The other one is configuring its working parameters, such as max flow, interval of voltage, max working temperature, and network related parameters.
                           
                              Step 4: Cloud asset monitoring

After all the above three steps are finished, this cloud pump could begin to work, and its working status and real-time events could be monitored through the management platform.

By far, a cloud pump is built successfully, and all its information is stored in an XML-based definition file in the cloud. The other assets could also be built as cloud assets in the same way, and then they could be used and invoked for urban flood control by all the authorized users through the cloud.

During urban flood, it is always a common situation that the lower floor of residential houses are flooded by excessive rains. Their furniture is immersed in the flood and human lives are threatened. Measures are then needed such as blocking water flow with sandbags, and pumping water out of these houses. To illustrate the working process of cloud asset, this situation has been reproduced in the laboratory with cloud asset models discussed above.

When flood occurs, cloud residential house could detect the real-time water level around it and report to the cloud. All the authorized agencies, like flood control and drought relief headquarters, drainage group, and municipal engineering administration, could monitor its real-time status through the cloud platform, as shown in Fig. 8
                        . Once the water level exceed the warning line, it could trigger the alarm in the cloud, and the predefined plan (workflow) will begin to execute. According to the specific requirements of the activities defined in the workflow, and the real-time status of all the related assets, appropriate assets will be selected. In this case, they are cloud sandbags and cloud pumps. Requests will then be sent to them through the cloud for their further actions. After that, these selected assets will be delivered to the flood area and start to work immediately after arrival. Corresponding managers, and the on-site operators, could login the cloud platform to monitor their execution status, and even configure their working parameters when necessary.

Together with the execution of these assets, the corresponding agents will also execute paralleled according to the real-time data collected. In this way, errors and exceptions will be found in advance by synchronized data analysis, and the comparison with rules set before. For example, when the temperature sensor of cloud pump detects an unusual high level, it will trigger the event of informing operators to check if the pump is making a blank run.

The mobility of cloud pump has also been tested during this case. In this case, two computers with GOS running on them are set as cloud clients (CC) that deployed in pump warehouse (PW) and flooding area (FA) respectively. Firstly, when cloud pump leaves the pump warehouse, the pump disconnects CC–PW. Its working status, configuration parameters, and working log will be recorded in its definition file, and uploaded to the cloud platform. Secondly, its cloud agent will begin to execute in the cloud according its previous working status and evolving models set before. Meanwhile, the cloud pump will keep working in real world, and records its working status temporarily in its own storage. Thirdly, when the pump is arrived at the flooding area, it connects with CC–FA, and requests CC–FA to download its definition file from the cloud. And then the corresponding agent will be generated according to that file and the current status of mobile pump. After that, the moving process is finished, and the cloud pump could continue to work under the control of the cloud platform through CC–FA.

@&#DISCUSSION@&#

The case discussed above first shows the building process of cloud asset, and then illustrates its execution procedural during urban flood. Besides, the intelligence and mobility of cloud asset has also been tested. From this case, several benefits of cloud asset can be recognized.

Firstly, cloud assets could be built easily and managed in an UPnP manner. Different assets, regardless of their types and models, could be built under the guidance of the management platform in several steps without having the professional knowledge about them. It could not only reduce the management difficulty, but also greatly increase the management efficiency of assets, especially for those newly-arrived assets.

Secondly, cloud asset could shorten the response time, which is of great importance for the success of urban flood control. When flood occurs, decisions can be made immediately by cloud services according to the real-time situations, and demands could be distributed to specific assets directly in near real time through the cloud platform.

Thirdly, by eliminating tedious manual works during every stage of asset management, cloud asset could decrease the possibilities of errors. Besides, cloud asset could detect possible asset down time in advance according to its execution record, so that timely maintenance and replacement could be made, which will further avoid the interruption of urban flood control.

Fourthly, cloud assets could be easily shared among agencies with their real-time status through the cloud. The opening and transparency of information makes it possible to make global optimal decisions for urban flood control. Moreover, the sharing of assets could also decrease the individual investment for physical assets.

However, there are also some limitations which has been shown up in the implementation of cloud asset. (1) Cost. When building the cloud pump models, the two smart devices attached in the LEGO model cost about 100 dollars in total (HF RFID tag: 0.4 dollars; INIC: 97 dollars). Although it could be neglected comparing with the cost of a real mobile pump, for these much cheaper assets, such as scupper valve, it will be a relatively big investment. (2) Privacy. In the demonstration case, the real-time status of all the cloud assets will be shared in the cloud without considering their privacy issues. It will be a great concern for asset managers to adopt this concept, and effective sharing mechanism should be developed afterward.

@&#CONCLUSIONS@&#

Numerous diverse physical assets are involved in urban flood control, and effective management of them is always of great importance. In order to manage these assets more efficiently and accurately under the scenario of urban flood control, this paper proposed the concept of “cloud asset”. By integrating with various technologies, from both hardware and software aspects, its conceptual framework was clearly defined, and the supportive management platform was developed. Besides, to support UPnP management of assets, and provide them intelligence and mobility, cloud asset agent model was carefully designed. Furthermore, a cloud-asset enabled workflow management was worked out to fit the dynamic and unpredictable workflows in urban flood control. A demonstrative case was also given to verify the effectiveness of the proposed concept.

The contributions of this paper can be concluded as follows. (1) This paper innovatively proposes the concept of cloud asset for urban flood control. It helps realize automatic real-time data collection and remote control of asset, and enables its visibility and traceability through an asset-centric solution, which is feasible and economical under the specific context of urban flood control. Besides, from the managerial point of view, this concept also shifts the management of physical asset from managing its physical status and functions to managing its capabilities and services in the cloud, which is much more flexible and efficient. (2) The technical framework of cloud asset and its management platform is proposed through the well integration of various technologies. It could not only be adopted by diverse assets through their whole lifecycle, but also realize the UPnP management of them. Besides, the framework is proposed independently of any platforms, so that it could be followed by practitioners easily to implement the concept into reality through various development environments. (3) A cloud asset enabled workflow management approach is proposed, in which cloud asset could be easily searched and invoked by diverse workflows. It is flexible enough to adapt to the complex environment of urban flood control, and make the sharing of assets between agencies possible.

In the future, this work could be further extended in three aspects. Firstly, to enable better sharing of cloud assets, and facilitate their automatic execution in digital world, an ontology system should be built for unified asset description. Secondly, considering the specific emergency situation in urban flood control, corresponding real-time data analytics tools and decision making models should be further explored to provide timely and accuracy decisions on both urban flood control and asset management processes. Thirdly, the concept should be taken into some real-life urban flood control cases to make a much detailed evaluation of our proposed concept. Furthermore, this research can also be extended for other assets, such as virtual asset like stock, knowledge, and human resources.

@&#ACKNOWLEDGEMENTS@&#

This research is supported by HKU Small Project Funding and the HKSAR ITC / LSCM R&D Centre through the Innovation and Technology Support Program (Project Reference.: ITP/045/13LP). Acknowledgements are also given to Zhejiang Provincial, Hangzhou Municipal and Lin’an City Governments for partial financial supports.

@&#REFERENCES@&#

