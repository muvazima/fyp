@&#MAIN-TITLE@&#Mining heart disease risk factors in clinical text with named entity recognition and distributional semantic models

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           NLP system to identify heart disease risk factors in diabetic patients over time.


                        
                        
                           
                           Employ named entity recognition, Bayesian statistics, and rule logic.


                        
                        
                           
                           Introduce distributional semantic model for characterizing contextual evidence.


                        
                        
                           
                           Distributional semantic model improves precision by 10.3% without use of lexicons.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Biomedical text mining

Clinical informatics

Translational research

Natural language processing

Named entity recognition

Distributional semantic models

Heart disease risk factors

Diabetes

@&#ABSTRACT@&#


               
               
                  We present the design, and analyze the performance of a multi-stage natural language processing system employing named entity recognition, Bayesian statistics, and rule logic to identify and characterize heart disease risk factor events in diabetic patients over time. The system was originally developed for the 2014 i2b2 Challenges in Natural Language in Clinical Data. The system’s strengths included a high level of accuracy for identifying named entities associated with heart disease risk factor events. The system’s primary weakness was due to inaccuracies when characterizing the attributes of some events. For example, determining the relative time of an event with respect to the record date, whether an event is attributable to the patient’s history or the patient’s family history, and differentiating between current and prior smoking status. We believe these inaccuracies were due in large part to the lack of an effective approach for integrating context into our event detection model. To address these inaccuracies, we explore the addition of a distributional semantic model for characterizing contextual evidence of heart disease risk factor events. Using this semantic model, we raise our initial 2014 i2b2 Challenges in Natural Language of Clinical data F1 score of 0.838 to 0.890 and increased precision by 10.3% without use of any lexicons that might bias our results.
               
            

@&#INTRODUCTION@&#

Diabetes Mellitus is a common disease with cardiovascular complications. Complications such as an ST elevation myocardial infarction (STEMI) are associated with mortality, significant morbidity, and healthcare spending. The ability to identify patients likely to have a significant cardiovascular event within 1–3years provides an opportunity for successful intervention. A significant challenge to developing models for predicting cardiac risk involves the identification of temporally related events and measurements in the unstructured text in electronic health records. The 2014 i2b2 Challenges in Natural Language Processing in Clinical Data track for identifying risk factors for heart disease over time was created to facilitate development of natural language processing systems to address this challenge [1]. The details of the i2b2 Natural Language Challenge are documented in the annotation guidelines [2], and are summarized in the following Annotation section. Teams were provided with 521 de-identified medical record note text containing 64,035 risk factors. For evaluation, risk factor instances were rolled up to the document level for a total of 16,167 distinct record/document risk factors.

Accurate identification of risk factors requires proper characterization of time, and whether a risk factor is attributable to the patient or a family member. For example, a mention of hypertension could be a past or current condition, and the condition could be attributable to either the patient or a patient’s family member. Capturing this information requires an effective approach for integrating contextual semantics within the event detection model. Distributional semantic models (DSM) can be used to quantify the semantic similarity between linguistic terms based on their distributional properties in large samples of text. The central assumption here is that the context surrounding a given word or phrase provides important information about its meaning [3–5]. DSMs provide a mechanism for representing terms, concepts, relations, or sentence meaning by using distributional statistics. The semantic properties of terms are captured in a multi-dimensional space by vectors that are constructed from large bodies of text by observing the distributional patterns of co-occurrence with their neighboring words. These vectors can then be used as measures of text similarity between words, phrases, concepts, relations, or snips of arbitrary text. Early work on use of distributional semantic modeling in EHRs (Electronic Health Records) has focused on providing vector-based representations of medical concepts, i.e., SNOMED [6], and for synonym recognition [7].

Given a set of medical records, the annotation task was to create a set of text annotations that track the progression of heart disease in diabetic patients. Multiple records were annotated for each patient, which provides a general timeline to be created from the set. Annotation tags and attributes were used to indicate the presence and progression of disease (diabetes, heart disease), associated risk factors (hypertension, hyperlipidemia, smoking status, obesity status, and family history), disease-related medications, and the time they were present in the patient’s medical history. Each disease and risk factor associated with this task was assigned its own set of indicators that is used to identify whether or not the disease or risk factor is present for that patient, and when it is present. Annotations are summarized in Table 1
                     .

Every tag except for SMOKER and FAMILY_HIST has a time attribute that is used to show when the indicator for each medical problem is known to have existed. These reflect when the indicator occurred/was active in relation to the date the medical record was written, i.e., document creation time (DCT): before DCT, during DCT, after DCT, not mentioned.

@&#METHODS@&#

We developed our own NLP pipeline for this challenge. The processing pipeline consisted of the following process:
                        
                           1.
                           Preprocessing and dimensional indexing for distributional statistics.

Risk factor named entity recognition.

Attribute and measurement extraction.

Contextual measurement via distributional semantic model.

Risk factor event classification.

Record level aggregation of risk factor classification.

XML-formatted EHR data and training annotations were first imported into a relational database. Individual patient records are parsed into sentences; and sentences are parsed into words, noun phrases and candidate named entities. An inverted index is constructed using a data warehousing style dimensional data model [8,9]. We have scaled a variation of this model to several hundred Gigabytes for chemical patent retrieval [10]. The grain of the index is the individual word with attributes for position, part-of-speech, phrase and entity membership. Dimensional indexing facilitates efficient OLAP style SQL queries for aggregating distributional statistics of candidate risk events. Data can be efficiently aggregated by word, phrase, entity, sentence, or document to construct distributional co-occurrence vector representations of words, phrases, entities, or sentences.

Heart disease risk factor event recognition consisted of training conditional random fields (CRF) based named entity recognition (NER) models [11], and subsequent execution of the NER models on test data to identify candidate instances of risk factor events. A CRF is a conditional sequence model, which represents the probability of a hidden state sequence given some observations. NER models were trained using the extensive set of features developed by Finkel et al. [12]. Example features include: capitalization, word text, prior word, part of speech, etc.

NER training files were generated for each Risk Factor listed in Table 1 using the i2b2 training data. Since the training data annotation boundaries were not consistent, we could not use the annotations directly to train a NER model without further processing. For example, “NITROGLYCERIN” and “NITROGLYCERIN 1/150 (0.4 MG)” are both annotated as the same nitrate medication from the training data. These annotations are automatically extracted from the training data and written to a text file. The text file is manually reviewed, and annotations like “NITROGLYCERIN 1/150 (0.4 MG)” are edited down to “NITROGLYCERIN.” This manual review process took approximately 1-person 1-day. Sample annotations are provided in Appendix A. A program was written to take these annotation files and convert them into word-classification-part of speech triplets for training NER classifiers. The NER process is listed below. Performance of our NER subsystem is listed in Table 2
                        . A sample NER training file is provided in Appendix B.
                           
                              1.
                              Distinct training data annotations are exported into a text files for each Risk Factor tag.

Tag files are manually inspected and edited down to specific noun phrases.

Software was written to generate two named entity training files: one for medications, and one for all other type tags, by recognizing words and phrases within the note text of the training data.

Two conditional random fields-based named entity recognizers are trained: one for medications, one for all other medical events. The named entity recognizers are subsequently used to identify candidate risk factor instances.

Regular expressions were developed to extract specific measurements for A1C, blood glucose, blood pressure, hyperlipidemia, LDL and cholesterol, obesity BMI and waist circumference, and Date. This process consisted of creating a list of training data examples for each risk event annotation that was accompanied by a measurement, and writing regular expressions to extract each measurement. Regular expressions were applied after a candidate event was recognized by the NER-based event recognition system described above. A list of the regular expressions used is provided in Appendix C.

Extracted risk factors for Medication, CAD, Diabetes, Hyperlipidemia, and Hypertension are assigned default times (DCT) based on each risk factor’s most likely assignment in the training data. For example, given a CAD mention like ‘MI’ what is the conditional probability that the event happened before, during, or after the record time? In a similar matter, smoker risk factors are assigned the most likely status, and obesity risk factors are assigned the most likely indicator.

Popular methods for corpus-based distributional measures of word semantic similarity include pointwise mutual information (PMI), latent semantic analysis (LSA), and higher order tensor models [13]. PMI measures the pointwise mutual information between two objects as the log ratio of the joint probability of two objects co-occurring relative to the probability of those objects occurring independently. PMI using information retrieval (PMI-IR) was suggested by Turney [14] as an unsupervised measure for the evaluation of the semantic similarity of words (Eq. (1)).
                           
                              (1)
                              
                                 PMI
                                 (
                                 w
                                 1
                                 ,
                                 w
                                 2
                                 )
                                 =
                                 log
                                 2
                                 
                                    
                                       
                                          
                                             
                                                p
                                                (
                                                w
                                                1
                                                ,
                                                w
                                                2
                                                )
                                             
                                             
                                                p
                                                (
                                                w
                                                1
                                                )
                                                p
                                                (
                                                w
                                                2
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Multiple evaluations have demonstrated that using PMI within multi-evidence models meets or exceed the performance of LSA and TSM (tensor space models) on semantic similarity benchmarks [15,16]. Due to its performance and efficiency within a DSM, we focused our efforts on developing distributional semantic similarity measurements using PMI. We captured distributional measurements from the i2b2 training data by running OLAP style SQL queries on our dimensional data model. To illustrate our approach, Tables 3 and 4
                        
                         show the non-normalized PMI of words for the terms Diabetes and CHF. The collection of semantically similar words (stemmed terms) for each disease can be used to infer the underlying concepts Diabetes and CHF respectively.

Mihalcea et al. [16] extended semantic similarity measurements to two arbitrary text segments. Given a measurement for the semantic similarity of two (bag of words) text segments and a measurement for term specificity (IDF), the semantic similarity of two text segments C1 and C2 can be defined using a model that combines the semantic similarities of each text segment in turn with respect to the other text segment. We extended the original bag-of-words text-to-text measurement to include phrases (named entities). Using PMI as the underlying measure of semantic similarity, we developed the following 2nd order PMI-based model for measuring the semantic similarity between concepts C1, C2. (Eq. (2)).
                           
                              (2)
                              
                                 SemSim
                                 (
                                 C
                                 1
                                 ,
                                 C
                                 2
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      w
                                                   
                                                
                                                ∈
                                                (
                                                W
                                                1
                                                
                                                   
                                                      ∩
                                                   
                                                   
                                                      W
                                                   
                                                
                                                2
                                                )
                                                (
                                                PMI
                                                (
                                                C
                                                1
                                                ,
                                                w
                                                )
                                                ∗
                                                idf
                                                (
                                                w
                                                )
                                                +
                                                (
                                                PMI
                                                (
                                                C
                                                2
                                                ,
                                                w
                                                )
                                                ∗
                                                idf
                                                (
                                                w
                                                )
                                                )
                                                )
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      w
                                                   
                                                
                                                ∈
                                                (
                                                W
                                                1
                                                ∩
                                                W
                                                2
                                                )
                                                (
                                                idf
                                                (
                                                w
                                                )
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

We applied our semantic similarity measurement (SemSim) to risk-attribute event instances identified in the training data by aggregating words within a ±4 word window risk-attribute start and end positions. This resulted in distributional semantic models for each risk-attribute listed in Table 5
                        . For example, models were created for MEDICATION_beforeDCT, MEDICATION_duringDCT, and MEDICATION_afterDCT, or SMOKING_current, SMOKING_never, etc. The highest SemSim measurement terms for smoking status of never, past, and current are provided in Tables 6–8
                        
                        
                        .

Risk factor specific rules were developed to assign risk factors to the patient or to the patient’s family history; override the default time, status, or indicator; qualify measurements as hypertensive, hyperlipidemia, high glucose, and high A1C; override smoking status, and determine obesity (Table 1). For example, if an extracted systolic blood pressure measurement was >140mmHg, the extracted risk factor was considered a legitimate heart risk factor. Otherwise the extracted risk factor is not tagged in the output data stream. One of the weakest components of the subsystem was determination of smoking status and family history.

The final stage of the system consisted of aggregating risk factor instances to the record (document) level, translating highly specific risk factor classifications to more general classifications, e.g., “antianginal” to “nitrate,” and generating risk factor tag specific XML output for evaluation. If more than one smoking status event was detected within an individual record, we assigned the most likely smoking status by calculating the prior likelihood of smoking status from the training data (Table 9
                        ).

@&#RESULTS@&#

Official results from the i2b2 NLP Challenge are shown in Table 10
                     . The results augmented by our SemSim distributional semantic model are shown in Table 11
                     . Most impressive is an increase in precision of 10.3% when using the semantic model to capture distributional context. These results can be contrasted with the top performing result from the official challenge which had an impressive micro- (macro-) precision of 0.8951 (0.8965), recall of 0.9625 (0.9611), and F1-measure of 0.9276 (0.9277) [17]. It is worthy to note that this team added extensive additional annotation information on top of the provided corpus.

The devil is of course in the details. We’ve identified 94 distinct classifications, i.e., medications permute across of type1, type 2, and time attributes. We did not consider type2 classifications for medications (see Table 1). 38% of our initial systems error is due to incorrect smoking status and family history assignment. The remaining classifications (87), contribute on average, 0.7% error each.

As previously discussed, the NER subsystem was very effective at identifying risk factor event candidate instances (Table 2). Exceptions of our initial system included OBESE|BMI(0.889), SMOKER|current (0.803), SMOKER|never (0.591), SMOKER|past (0.895). The system using the distributional semantic model was able to capture the context of risk events to improve risk attribute classification, and clearly improved the overall performance of the system. Precision increased by 10.3%. F1 score improved from 0.838 to 0.890.

The remaining, and most significant source of errors in the system were due to risk factor attribute assignment. To gain a better understanding to the source of these errors, we analyzed statistical distribution of risk factor attributes from the test data (Medications only include the most significant assignment). We find the assignment of time to be relatively ad hoc. For example, why would the most significant assignment of ACE inhibitor be “after DCT, before DCT “(58%), and calcium channel blocker be “after DCT” (0.53) when both drugs are prescribed to treat chronic conditions? Similarly, how could a patient be hypertensive “after DCT”? Getting a handle on these attribute assignments is fundamental to improving the performance of the system.

@&#CONCLUSIONS@&#

We presented the design and analysis of a multi-stage natural language processing system employing named entity recognition, Bayesian statistics, and rule logic for identifying heart disease risk factor events in diabetic patients over time. The most significant shortcoming of the system was due to inaccuracies characterizing the attributes of these events. To address these inaccuracies, we introduced a novel distributional semantic model to capture event context. Using our distributional semantic model, we were able to improve our F1 score from 0.838 to 0.890, and increase precision by 10.3% on the 2014 i2b2 Challenges in Natural Language of Clinical dataset without use of any lexicons that might bias our results. We believe there is significant potential for integrating distributional semantics in the form of vector space models for improving named entity and event accuracies in healthcare natural language processing applications. Future plans include construction of a much larger EHR dataset from our clinical data warehouse to gather more robust distributional statistics and to perform a more thorough evaluation.

The authors declare that they have no conflict of interest.

@&#ACKNOWLEDGMENTS@&#

This publication and project was supported by the National Center for Advancing Translational Sciences, National Institutes of Health, through Grant Number 8UL1TR000055. Its contents are solely the responsibility of the authors and do not necessarily represent the official views of the NIH.


                        
                           
                              
                                 
                                 
                                    
                                       Format: term, classification
                                       
                                    
                                    
                                       ASA, aspirin
                                    
                                    
                                       Ecotrin, aspirin
                                    
                                    
                                       Colfarit, aspirin
                                    
                                    
                                       Acetylsalicylic, aspirin
                                    
                                    
                                       Acetylsalicylic acid, aspirin
                                    
                                    
                                       aspirin, aspirin
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       PLAVIX, thienopyridine
                                    
                                    
                                       TSH, thienopyridine
                                    
                                    
                                       hTSH, thienopyridine
                                    
                                    
                                       thienopyridine, thienopyridine
                                    
                                    
                                       clopidogrel, thienopyridine
                                    
                                    
                                       ticlopidine, thienopyridine
                                    
                                    
                                       Ticlid, thienopyridine
                                    
                                    
                                       prasugrel, thienopyridine
                                    
                                    
                                       Effient, thienopyridine
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       ATENOLOL, beta blocker
                                    
                                    
                                       AMLODIPINE, beta blocker
                                    
                                    
                                       Sectral, beta blocker
                                    
                                    
                                       acebutolol, beta blocker
                                    
                                    
                                       Zebeta, beta blocker
                                    
                                    
                                       bisoprolol, beta blocker
                                    
                                    
                                       Brevibloc, beta blocker
                                    
                                    
                                       esmolol, beta blocker
                                    
                                    
                                       Inderal, beta blocker
                                    
                                    
                                       propranolol, beta blocker
                                    
                                    
                                       Tenormin, beta blocker
                                    
                                    
                                       atenolol, beta blocker
                                    
                                    
                                       Normodyne, beta blocker
                                    
                                    
                                       Trandate, beta blocker
                                    
                                    
                                       labetalol, beta blocker
                                    
                                    
                                       Coreg, beta blocker
                                    
                                    
                                       carvedilol, beta blocker
                                    
                                    
                                       Lopressor, beta blocker
                                    
                                    
                                       Toprol, beta blocker
                                    
                                    
                                       metoprolol, beta blocker
                                    
                                    
                                       beta blocker, beta blocker
                                    
                                 
                              
                           
                        
                     


                        
                           
                              
                                 
                                 
                                 
                                 
                                    
                                       Format: word – class – part of speech
                                       
                                    
                                    
                                       PO
                                       O
                                       NNP
                                    
                                    
                                       QD
                                       O
                                       NNP
                                    
                                    
                                       LIPITOR
                                       MEDICATIONS|statin
                                       NNP
                                    
                                    
                                       ATORVASTATIN
                                       MEDICATIONS|statin
                                       NNP
                                    
                                    
                                       10MG
                                       O
                                       NN
                                    
                                    
                                       1
                                       O
                                       CD
                                    
                                    
                                       Tablet
                                       O
                                       NNP
                                    
                                    
                                       -LRB-
                                       O
                                       -LRB-
                                    
                                    
                                       s
                                       O
                                       NNS
                                    
                                    
                                       -RRB-
                                       O
                                       -RRB-
                                    
                                    
                                       PO
                                       O
                                       NNP
                                    
                                    
                                       QD
                                       O
                                       NNP
                                    
                                    
                                       HCTZ
                                       MEDICATIONS|diuretic
                                       NNP
                                    
                                    
                                       -LRB-
                                       O
                                       -LRB-
                                    
                                    
                                       HYDROCHLOROTHIAZIDE
                                       MEDICATIONS|diuretic
                                       NNP
                                    
                                 
                              
                           
                        
                     


                        
                           
                              
                                 
                                 
                                    
                                       //A1C
                                    
                                    
                                       
                                          a1cRegexStr1 = “
                                             
                                                ⧹
                                             
                                          b(Hgb A1c|HgB
                                    
                                    
                                       A1c|HgbA1C|HBA1c|hgbaic|HgbA1c|HGBA1C|hgba1c|HBGA1c|A1Cs|A1C|Hgb|HGBA1C|HA1C|HbA1c|hemoglobin
                                    
                                    
                                       HbA1C|Hgb A1c|A1c|A1C|HgB|HgA1c|hemoglobin A1c|Hemoglobin A1c|HgbA1c|HBAIC|HBA1C|Hem A1C|HgB
                                    
                                    
                                       A1c|a1c|HbA1C|HgA1C|HgA1c|hemoglobin A1c) 
                                             
                                                ⧹
                                             
                                          b(:|,|-|=)?”
                                    
                                    
                                       + “(
                                             
                                                ⧹
                                             
                                          s+(([a-zA-Z]|-)+|([0-9]{1,2}/([0-9]{1,2}/)?[0-9]{2,4})))∗”
                                    
                                    
                                       + “(:|,|-|=)?”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          s∗” + “
                                             
                                                ⧹
                                             
                                          b(
                                             
                                                ⧹
                                             
                                          d+(
                                             
                                                ⧹
                                             
                                          .
                                             
                                                ⧹
                                             
                                          d+)?)s? 
                                             
                                                ⧹
                                             
                                          b”;
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       //Glucose
                                    
                                    
                                       
                                          glucoseRegexStr1 = “
                                             
                                                ⧹
                                             
                                          b(Glucose|GLUCOSE|BS|FINGER BLOOD GLUCOSE|FS|FSs|FS’s|GLU-
                                    
                                    
                                       POC|BG|BGs|BG’s|glucose|GLU|Fingerstick|fingerstick|blood sugars|blood sugar|FG) 
                                             
                                                ⧹
                                             
                                          b(:|,|-|=)?”
                                    
                                    
                                       + “(
                                             
                                                ⧹
                                             
                                          s+((([a-zA-Z
                                             
                                                ⧹
                                             
                                          (
                                             
                                                ⧹
                                             
                                          )]|-|∼)+)|([0-9]{1,2}/([0-9]{1,2}/)?[0-9]{2,4})))∗”
                                    
                                    
                                       + “(:|,|-|=|∼)?”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          s+” + “
                                             
                                                ⧹
                                             
                                          b(
                                             
                                                ⧹
                                             
                                          d+)(-(
                                             
                                                ⧹
                                             
                                          d+))?s? 
                                             
                                                ⧹
                                             
                                          b”;
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       //Blood pressure
                                    
                                    
                                       
                                          bpRegexStr2 =
                                    
                                    
                                       “
                                             
                                                ⧹
                                             
                                          b(?i)(Sys|Systolic|SBP|blood pressure|blood pressures|BP|Dias|Diastolic|DBP) 
                                             
                                                ⧹
                                             
                                          .?(?-i) 
                                             
                                                ⧹
                                             
                                          b”
                                    
                                    
                                       + “(
                                             
                                                ⧹
                                             
                                          s+(([a-zA-Z]|-)+|([0-9]{1,2}/([0-9]{1,2}/)?[0-9]{2,4})))∗”
                                    
                                    
                                       + “(:|,|-|=)?”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          s∗” + “
                                             
                                                ⧹
                                             
                                          b(
                                             
                                                ⧹
                                             
                                          d+)(-(
                                             
                                                ⧹
                                             
                                          d+))?s? 
                                             
                                                ⧹
                                             
                                          b”;
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       
                                          bpRegexStr3 = “
                                             
                                                ⧹
                                             
                                          b(
                                             
                                                ⧹
                                             
                                          d+)(-(
                                             
                                                ⧹
                                             
                                          d+))?s? 
                                             
                                                ⧹
                                             
                                          b”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          s+”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          b(?i)(Sys|sys|Systolic|SBP|blood pressure|blood pressures)(?-i) 
                                             
                                                ⧹
                                             
                                          b”;
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       //Hyperlipidemia
                                    
                                    
                                       
                                          hyperlipidemiaLDLRegexStr1 = “
                                             
                                                ⧹
                                             
                                          b(?i)(Cholesterol-LDL|LDL|LDL Cholesterol|LDL-Cholesterol)(?i-)
                                             
                                                ⧹
                                             
                                          b(:|,|-|=)?”
                                    
                                    
                                       + “(
                                             
                                                ⧹
                                             
                                          s+((([a-zA-Z
                                             
                                                ⧹
                                             
                                           (
                                             
                                                ⧹
                                             
                                          )]|-|∼)+)|([0-9]{1,2}/([0-9]{1,2}/)?[0-9]{2,4})))∗”
                                    
                                    
                                       + “(:|,|-|=|∼)?”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          s+” + “
                                             
                                                ⧹
                                             
                                          b(
                                             
                                                ⧹
                                             
                                          d+)(-(
                                             
                                                ⧹
                                             
                                          d+))?s? 
                                             
                                                ⧹
                                             
                                          b”;
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       //Cholesterol
                                    
                                    
                                       
                                          hyperlipidemiaCholRegexStr1 = “
                                             
                                                ⧹
                                             
                                          b(?i)(?!LDL Chol|LDL-Chol|LDL Cholesterol|LDL-Cholesterol)(Chol|Cholesterol)(?i-)
                                             
                                                ⧹
                                             
                                          b(:|,|-
                                    
                                    
                                       |=)?”
                                    
                                    
                                       + “(
                                             
                                                ⧹
                                             
                                          s+((([a-zA-Z
                                             
                                                ⧹
                                             
                                           (
                                             
                                                ⧹
                                             
                                          )]|-|∼)+)|([0-9]{1,2}/([0-9]{1,2}/)?[0-9]{2,4})))∗”
                                    
                                    
                                       + “(:|,|-|=|∼)?”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          s+” + “
                                             
                                                ⧹
                                             
                                          b(
                                             
                                                ⧹
                                             
                                          d+)(-(
                                             
                                                ⧹
                                             
                                          d+))?s? 
                                             
                                                ⧹
                                             
                                          b”;
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       /BMI
                                    
                                    
                                       
                                          bmiRegexStr1 = “
                                             
                                                ⧹
                                             
                                          b(?i)(BMI)(?i-)
                                             
                                                ⧹
                                             
                                          b(:|,|-|=)?”
                                    
                                    
                                       + “(
                                             
                                                ⧹
                                             
                                          s+((([a-zA-Z
                                             
                                                ⧹
                                             
                                           (
                                             
                                                ⧹
                                             
                                          )]|-|∼)+)|([0-9]{1,2}/([0-9]{1,2}/)?[0-9]{2,4})))∗”
                                    
                                    
                                       + “(:|,|-|=|∼)?”
                                    
                                    
                                       + “
                                             
                                                ⧹
                                             
                                          s+” + “
                                             
                                                ⧹
                                             
                                          b((
                                             
                                                ⧹
                                             
                                          d+)(
                                             
                                                ⧹
                                             
                                          .(
                                             
                                                ⧹
                                             
                                          d+)))?
                                             
                                                ⧹
                                             
                                          b”;
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       //Date
                                    
                                    
                                       
                                          dateRegex0 = “([0-9]{4})[/
                                             
                                                ⧹
                                             
                                          -]([0-9]{1,2})[/
                                             
                                                ⧹
                                             
                                          -]([0-9]{1,2})”; // year/month/day
                                    
                                    
                                       
                                          dateRegex1 = “([0-9]{1,2})[/
                                             
                                                ⧹
                                             
                                          -]([0-9]{4})”; // month/year
                                    
                                    
                                       
                                          dateRegex2 = “([0-9]{1,2})[/
                                             
                                                ⧹
                                             
                                          -]([0-9]{1,2})”; // month/day
                                    
                                    
                                       
                                          dateRegex3 = “([0-9]{1,2})[/
                                             
                                                ⧹
                                             
                                          -]([0-9]{1,2})[/
                                             
                                                ⧹
                                             
                                          -,]
                                             
                                                ⧹
                                             
                                          s∗([0-9]{1,4})”; // month/day/year
                                    
                                    
                                       
                                          dateRegex4 = “([ADFJMNOS] 
                                             
                                                ⧹
                                             
                                          w∗)
                                             
                                                ⧹
                                             
                                          s+([0-9]{0,2})(th|TH|nd|ND){0,1},{0,1}
                                             
                                                ⧹
                                             
                                          s+([0-9]{4})”;
                                    
                                    
                                       
                                          dateRegex5 = “([ADFJMNOS] 
                                             
                                                ⧹
                                             
                                          w∗)
                                             
                                                ⧹
                                             
                                          s+([0-9]{4})”;
                                    
                                    
                                       
                                          dateRegex6 = “([ADFJMNOS] 
                                             
                                                ⧹
                                             
                                          w∗)
                                             
                                                ⧹
                                             
                                          s+([0-9]{0,2})(th|TH|nd|ND){0,1},{0,1}”;
                                    
                                 
                              
                           
                        
                     

@&#REFERENCES@&#

