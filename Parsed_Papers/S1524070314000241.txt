@&#MAIN-TITLE@&#Adaptive CAD model (re-)construction with THB-splines

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Adaptive fitting with truncated hierarchical B-splines (THB-splines) is discussed.


                        
                        
                           
                           We show a multilevel approach to geometric (re-)construction of turbine blade parts.


                        
                        
                           
                           The integration of THB-splines into a commercial CAD environment is presented.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Truncated hierarchical B-splines

Adaptive refinement

CAD interfaces

Turbine blades

@&#ABSTRACT@&#


               
               
                  Computer Aided Design (CAD) software libraries rely on the tensor-product NURBS model as standard spline technology. However, in applications of industrial complexity, this mathematical model does not provide sufficient flexibility as an effective geometric modeling option. In particular, the multivariate tensor-product construction precludes the design of adaptive spline representations that support local refinements. Consequently, many patches and trimming operations are needed in challenging applications. The investigation of generalizations of tensor-product splines that support adaptive refinement has recently gained significant momentum due to the advent of Isogeometric Analysis (IgA) [2], where adaptivity is needed for performing local refinement in numerical simulations. Moreover, traditional CAD models containing many small (and possibly trimmed) patches are not directly usable for IgA. Truncated hierarchical B-splines (THB-splines) provide the possibility of introducing different levels of resolution in an adaptive framework, while simultaneously preserving the main properties of standard B-splines. We demonstrate that surface fitting schemes based on THB-spline representations may lead to significant improvements for the geometric (re-)construction of critical turbine blade parts. Furthermore, the local THB-spline evaluation in terms of B-spline patches can be properly combined with commercial geometric modeling kernels in order to convert the multilevel spline representation into an equivalent – namely, exact – CAD geometry. This software interface fully integrates the adaptive modeling tool into CAD systems that comply with the current NURBS standard. It also paves the way for the introduction of isogeometric simulations into complex real world applications.
               
            

@&#INTRODUCTION@&#

Computer Aided Design (CAD) software usually provide a graphical and interactive user interface that allows designers and engineers to shape and manipulate industrial models by using a set of processing operations associated to the geometric modeling kernel. The CAD standard related to spline representations relies on the B-spline technology and its non-uniform rational extension (NURBS). The key properties of the B-spline model meet the requirements of CAD applications. In particular, in virtue of the convex hull property, the parametric spline representation is manipulated through a simpler modeling tool (control net), which reflects the shape of the underlying geometry. Unfortunately, the extension of univariate B-splines to the multivariate setting is based on the tensor-product approach, thus excluding adaptive mesh refinements. The resulting uniform distribution of the degrees of freedom may also cause unwanted oscillations in the fitting of complex non-uniform data sets.

Interpolation or approximation of measured data is required in many industrial applications, as for example, instrument calibration, data analysis or reverse engineering. Automatic surface fitting of complex data with high precision is a non-trivial issue that should properly address many critical steps, see e.g., [32]. These include, for example, a satisfactory treatment of noisy and unevenly distributed point clouds, as well as the construction of a suitable parametrization. In addition, when considering a fitting algorithm based on tensor-product B-spline surfaces, the limit of representing solely rectangular regions naturally appears, while measured data usually cover more general shapes.

The integration of adaptive approximation schemes into an industrial geometric modeling environment can provide new and more flexible design capabilities. The same, and in some critical cases even better, accuracy can be obtained by significantly reducing the number of design parameters. Figs. 1 and 2
                     
                      show two adaptive models related to the reconstruction of turbine blade geometries for the modeling process of aero engines.

Approximation techniques based on different kinds of adaptive spline models are currently receiving particular attention – not only in computer aided geometric design, but also for the solution of partial differential equations in isogeometric analysis. To promote a deeper integration between CAD boundary representations and isogeometric simulations, one demanding challenge is also the automatic construction of (adaptive) solid models that are able to exactly preserve a given spline boundary representation [33]. Extensions of classical tensor-product B-splines that offer adequate local refinement include: hierarchical B-splines 
                     [8,16], T-splines 
                     [24,25], polynomial splines over hierarchical T-meshes (PHT-splines) 
                     [3,4] and LR-splines 
                     [1,5]. All of them can be applied to surface modeling and geometry reconstruction. Hierarchical B-splines were considered already in [9,14], T-splines have recently been used in [29–31], and applications of PHT-splines were explored in [4,28].

By exploiting an underlying tensor-product structure at different refinement levels, hierarchical B-splines inherit several desirable properties (linear independence, local support, non-negativity, completeness of the spline space), which are fundamental to define an effective spline representation for uniform and non-uniform refinement, for different degrees and smoothness as well as in the multivariate setting [11,18]. Its potential in isogeometric analysis has recently been demonstrated [20,27]. Additional results concerning the partition of unity property, approximation power and strong stability have been derived by considering the truncated basis for the hierarchical B-spline space (THB-splines) [12,13,15,26]. Generalizations of the truncated bases to wider classes of spline spaces and an extension to cover arbitrary topologies have also been presented [23,34].

The remaining three adaptive spline constructions:
                        
                           –
                           allow the modeling of objects with general topology as they support extraordinary vertices in the mesh with geometric continuity (T-splines, special PHT-splines [17]) and provide a powerful geometric modeling tool, also supported by commercial CAD tools (T-splines); this is currently not available for hierarchical splines;

do not always guarantee the linear independence and need scaling or rational normalization to achieve the partition of unity property of the basis functions (T-splines, LR-splines); the importance of these features in the context of isogeometric analysis motivated the study of restricted mesh configurations together with more involved refinement procedures (analysis suitable T-splines [22], Bressan’s class of LR splines [1]);

do not provide straightforward multivariate generalizations (T-splines, PHT-splines) and may require a case-by-case analysis for the construction of the basis depending on degrees and smoothness (in particular, PHT-splines have been mainly considered in the case of reduced smoothness, e.g., for 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          1
                                       
                                    
                                 
                               cubics).

This paper explores the use of the THB-spline approximation framework focusing on its successful integration with current CAD systems. The remainder of the paper consists of four main sections. The following section recalls the definition of THB-splines. Sections 3 and 4 present the adaptive surface fitting algorithm and related examples. The fifth section discusses the integration of THB-splines into a commercial CAD environment. Finally, Section 6 concludes the paper.

We recall the construction of a hierarchical spline space, focusing on truncated hierarchical B-splines (THB-splines), a recently introduced basis [12]. We present the construction in the bivariate case of bidegree 
                        
                           (
                           p
                           ,
                           p
                           )
                        
                      only, though we can define THB-splines in a general multivariate setting and consider different degrees in any dimension.

We consider adaptive refinement of a tensor-product B-spline surface of bidegree 
                           
                              p
                              =
                              (
                              p
                              ,
                              p
                              )
                           
                         that is defined on the domain 
                           
                              
                                 
                                    [
                                    0
                                    ,
                                    1
                                    ]
                                 
                                 
                                    2
                                 
                              
                              ⊂
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                        . To allow for adaptivity, we consider a nested sequence of 
                           
                              L
                              +
                              1
                           
                         B-spline spaces, defined by nested knot vectors. More precisely, the space at level 
                           
                              ℓ
                              =
                              0
                              ,
                              …
                              ,
                              L
                           
                         is defined with respect to two non-decreasing knot vectors
                           
                              
                                 0
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       0
                                    
                                    
                                       ℓ
                                    
                                 
                                 ⩽
                                 …
                                 ⩽
                                 
                                    
                                       u
                                    
                                    
                                       
                                          
                                             m
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 1
                                 ,
                                 
                                 0
                                 =
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                    
                                       ℓ
                                    
                                 
                                 ⩽
                                 …
                                 ⩽
                                 
                                    
                                       v
                                    
                                    
                                       
                                          
                                             n
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 1
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    m
                                 
                                 
                                    ℓ
                                 
                              
                           
                         and 
                           
                              
                                 
                                    n
                                 
                                 
                                    ℓ
                                 
                              
                           
                         denote the number of knots in the parameter directions u and v at level 
                           
                              ℓ
                           
                        . We require that the knots at level 
                           
                              ℓ
                              -
                              1
                           
                         are also present at level 
                           
                              ℓ
                           
                         at least with the same multiplicity.

The boundary knots 0 and 1 have multiplicity 
                           
                              p
                              +
                              1
                           
                        , but multiplicities of the inner knots do not exceed p. The non-empty Cartesian products of the knot intervals
                           
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                    
                                       ℓ
                                    
                                 
                                 )
                                 ×
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       j
                                    
                                    
                                       ℓ
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       j
                                       +
                                       1
                                    
                                    
                                       ℓ
                                    
                                 
                                 )
                                 ,
                              
                           
                        will be denoted as cells of level 
                        
                           
                              ℓ
                           
                        .

We define the knot-index sets of level 
                           
                              ℓ
                           
                        ,
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 {
                                 0
                                 ,
                                 …
                                 ,
                                 
                                    
                                       m
                                    
                                    
                                       ℓ
                                    
                                 
                                 }
                                 ,
                                 
                                 
                                    
                                       V
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 {
                                 0
                                 ,
                                 …
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       ℓ
                                    
                                 
                                 }
                                 ,
                              
                           
                        and 
                           
                              
                                 
                                    K
                                 
                                 
                                    ℓ
                                 
                              
                              =
                              
                                 
                                    U
                                 
                                 
                                    ℓ
                                 
                              
                              ×
                              
                                 
                                    V
                                 
                                 
                                    ℓ
                                 
                              
                           
                        .

Later, we will use the knot indices to identify the B-splines of level 
                           
                              ℓ
                              +
                              1
                           
                         that are obtained by refining a given B-spline of level 
                           
                              ℓ
                           
                        . In order to do so, we define a simple relation between the index sets that also takes into account the multiplicity of the knots: for any two indices 
                           
                              i
                              ∈
                              
                                 
                                    U
                                 
                                 
                                    ℓ
                                 
                              
                              ,
                              j
                              ∈
                              
                                 
                                    U
                                 
                                 
                                    k
                                 
                              
                           
                         (and similarly for indices from 
                           
                              
                                 
                                    V
                                 
                                 
                                    ℓ
                                 
                              
                              ,
                              
                                 
                                    V
                                 
                                 
                                    k
                                 
                              
                           
                        ), we say that i precedes j and denote this by 
                           
                              (
                              i
                              ,
                              ℓ
                              )
                              ≼
                              (
                              j
                              ,
                              k
                              )
                           
                        , if 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                              <
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                         or if 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                              =
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                         and one of the following conditions concerning the knot multiplicities and levels is satisfied:
                           
                              
                                 ℓ
                                 <
                                 k
                                 
                                 and
                                 
                                 
                                    max
                                 
                                 {
                                 r
                                 |
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       +
                                       r
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 }
                                 ⩾
                                 
                                    max
                                 
                                 {
                                 r
                                 |
                                 
                                    
                                       u
                                    
                                    
                                       j
                                       +
                                       r
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       j
                                    
                                    
                                       k
                                    
                                 
                                 }
                                 ,
                              
                           
                        or
                           
                              
                                 ℓ
                                 >
                                 k
                                 
                                 and
                                 
                                 
                                    max
                                 
                                 {
                                 r
                                 |
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       -
                                       r
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 }
                                 ⩽
                                 
                                    max
                                 
                                 {
                                 r
                                 |
                                 
                                    
                                       u
                                    
                                    
                                       j
                                       -
                                       r
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       j
                                    
                                    
                                       k
                                    
                                 
                                 }
                                 .
                              
                           
                        This definition is extended to the knot-index sets 
                           
                              
                                 
                                    K
                                 
                                 
                                    ℓ
                                 
                              
                           
                        . More precisely, 
                           
                              i
                              =
                              (
                              i
                              ,
                              
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              )
                              ∈
                              
                                 
                                    K
                                 
                                 
                                    ℓ
                                 
                              
                           
                         precedes 
                           
                              j
                              =
                              (
                              j
                              ,
                              
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              )
                              ∈
                              
                                 
                                    K
                                 
                                 
                                    k
                                 
                              
                           
                        , denoted by 
                           
                              (
                              i
                              ,
                              ℓ
                              )
                              ≼
                              (
                              j
                              ,
                              k
                              )
                           
                        , if 
                           
                              (
                              i
                              ,
                              ℓ
                              )
                              ≼
                              (
                              j
                              ,
                              k
                              )
                           
                         and 
                           
                              (
                              
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              ,
                              ℓ
                              )
                              ≼
                              (
                              
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              ,
                              k
                              )
                           
                        .

For each level 
                           
                              ℓ
                           
                         we consider the set of (tensor-product) B-splines of bidegree 
                           
                              p
                           
                         that are defined on the given knot vectors. The B-spline 
                           
                              
                                 
                                    β
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                           
                         with index 
                           
                              i
                              =
                              (
                              i
                              ,
                              
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                         (that corresponds to the two smallest knots in its support) is defined by the pair
                           
                              (1)
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       +
                                       p
                                       +
                                       1
                                    
                                    
                                       ℓ
                                    
                                 
                                 )
                                 ,
                                 
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       p
                                       +
                                       1
                                    
                                    
                                       ℓ
                                    
                                 
                                 )
                                 ,
                              
                           
                        of local knot vectors. The indices of all B-splines of level 
                           
                              ℓ
                           
                         form the set
                           
                              
                                 
                                    
                                       N
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 {
                                 0
                                 ,
                                 …
                                 ,
                                 
                                    
                                       m
                                    
                                    
                                       ℓ
                                    
                                 
                                 -
                                 p
                                 -
                                 1
                                 }
                                 ×
                                 {
                                 0
                                 ,
                                 …
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       ℓ
                                    
                                 
                                 -
                                 p
                                 -
                                 1
                                 }
                                 .
                              
                           
                        
                     

Due to the assumption concerning nested knot sequences, any B-spline of level 
                           
                              ℓ
                           
                         admits a representation as a unique linear combination of B-splines of any higher level k, the coefficients of which can be computed with the knot insertion algorithm. We define the refinement relation 
                        
                           
                         between indices 
                           
                              i
                              ∈
                              
                                 
                                    N
                                 
                                 
                                    ℓ
                                 
                              
                           
                         and 
                           
                              j
                              ∈
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                           
                         that identifies the non-zero (and even positive) coefficients in this representation.

More precisely, 
                           
                              (
                              i
                              ,
                              ℓ
                              )
                              
                              
                                 
                                    
                                 
                              
                              
                              (
                              j
                              ,
                              k
                              )
                           
                         if and only if the representation of 
                           
                              
                                 
                                    β
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                           
                         with respect to B-splines of level 
                           
                              k
                              >
                              ℓ
                           
                         has a positive coefficient for 
                           
                              
                                 
                                    β
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                        . We then say that the B-spline 
                           
                              
                                 
                                    β
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                           
                         
                        refines to the B-spline 
                           
                              
                                 
                                    β
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                        .

This relation can be characterized with the help of 
                           
                              ≼
                           
                        ,
                           
                              
                                 (
                                 i
                                 ,
                                 ℓ
                                 )
                                 
                                 
                                    
                                       
                                    
                                 
                                 
                                 (
                                 j
                                 ,
                                 k
                                 )
                                 ⇔
                                 (
                                 i
                                 ,
                                 ℓ
                                 )
                                 ≼
                                 (
                                 j
                                 ,
                                 k
                                 )
                                 
                                 and
                                 
                                 (
                                 j
                                 +
                                 p
                                 +
                                 1
                                 ,
                                 k
                                 )
                                 ≼
                                 (
                                 i
                                 +
                                 p
                                 +
                                 1
                                 ,
                                 ℓ
                                 )
                                 ,
                              
                           
                        where 
                           
                              1
                              =
                              (
                              1
                              ,
                              1
                              )
                           
                        . Clearly, 
                           
                              (
                              i
                              ,
                              ℓ
                              )
                              
                              
                                 
                                    
                                 
                              
                              
                              (
                              j
                              ,
                              k
                              )
                           
                         implies 
                           
                              supp
                              
                              
                                 
                                    β
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                              ⊇
                              
                              supp
                              
                              
                                 
                                    β
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                         but not vice versa, if multiple knots are present.

The construction of hierarchical splines goes back to Forsey and Bartels [8]. They proposed to perform local modifications of a B-spline surface by adding contributions of functions from the B-spline spaces of higher levels. Formally, the extension of the B-spline space is achieved by splitting each index set 
                           
                              
                                 
                                    N
                                 
                                 
                                    ℓ
                                 
                              
                           
                         of level 
                           
                              ℓ
                           
                         into
                           
                              (2)
                              
                                 
                                    
                                       N
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 
                                    
                                       P
                                    
                                    
                                       ℓ
                                    
                                 
                                 
                                 
                                    
                                       ∪
                                    
                                    
                                       ̇
                                    
                                 
                                 
                                 
                                    
                                       S
                                    
                                    
                                       ℓ
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    ∪
                                 
                                 
                                    ̇
                                 
                              
                           
                         denotes the disjoint union, i.e., the two sets on either side of the symbol have no members in common. The B-splines with indices from 
                           
                              
                                 
                                    P
                                 
                                 
                                    ℓ
                                 
                              
                           
                         are said to be passive, since we do not include them into our space, and the B-splines with indices from 
                           
                              
                                 
                                    S
                                 
                                 
                                    ℓ
                                 
                              
                           
                         have been selected. All functions of the coarsest level have been selected, 
                           
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 
                                    N
                                 
                                 
                                    0
                                 
                              
                           
                         and 
                           
                              
                                 
                                    P
                                 
                                 
                                    0
                                 
                              
                              =
                              ∅
                           
                        .

The hierarchical spline space is defined by
                           
                              
                                 H
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   ℓ
                                                   =
                                                   0
                                                
                                                
                                                   L
                                                
                                             
                                          
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   ∈
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                c
                                             
                                             
                                                i
                                             
                                             
                                                ℓ
                                             
                                          
                                          
                                          
                                             
                                                β
                                             
                                             
                                                i
                                             
                                             
                                                ℓ
                                             
                                          
                                          |
                                          
                                             
                                                c
                                             
                                             
                                                i
                                             
                                             
                                                ℓ
                                             
                                          
                                          ∈
                                          
                                             
                                                R
                                             
                                             
                                                3
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Based on the index sets 
                           
                              
                                 
                                    S
                                 
                                 
                                    ℓ
                                 
                              
                           
                         we identify the subdomains 
                        
                           
                              
                                 
                                    Ω
                                 
                                 
                                    ℓ
                                 
                              
                              ⊆
                              
                                 
                                    [
                                    0
                                    ,
                                    1
                                    ]
                                 
                                 
                                    2
                                 
                              
                           
                         of the parameter domain that correspond to the various levels of refinement,
                           
                              
                                 
                                    
                                       Ω
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 
                                    
                                       ∪
                                    
                                    
                                       i
                                       ∈
                                       
                                          
                                             S
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                 
                                 
                                 supp
                                 
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 .
                              
                           
                        The choice of 
                           
                              
                                 
                                    S
                                 
                                 
                                    ℓ
                                 
                              
                           
                         is subject to the first two index set constraints:
                        
                           
                              (i)
                              among all index sets 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                  defining the same subdomain 
                                    
                                       
                                          
                                             Ω
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                 , we always use the largest one:
                                    
                                       
                                          ∀
                                          i
                                          ∈
                                          
                                             
                                                N
                                             
                                             
                                                ℓ
                                             
                                          
                                          :
                                          supp
                                          
                                          
                                             
                                                β
                                             
                                             
                                                i
                                             
                                             
                                                ℓ
                                             
                                          
                                          ⊆
                                          
                                             
                                                Ω
                                             
                                             
                                                ℓ
                                             
                                          
                                          
                                          ⇒
                                          
                                          i
                                          ∈
                                          
                                             
                                                S
                                             
                                             
                                                ℓ
                                             
                                          
                                          ;
                                       
                                    
                                 
                              

the subdomains are nested, 
                                    
                                       
                                          
                                             Ω
                                          
                                          
                                             ℓ
                                          
                                       
                                       ⊇
                                       
                                          
                                             Ω
                                          
                                          
                                             ℓ
                                             +
                                             1
                                          
                                       
                                    
                                 :
                                    
                                       
                                          ∀
                                          i
                                          ∈
                                          
                                             
                                                N
                                             
                                             
                                                ℓ
                                             
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          
                                             
                                                S
                                             
                                             
                                                ℓ
                                                +
                                                1
                                             
                                          
                                          :
                                          (
                                          i
                                          ,
                                          ℓ
                                          )
                                          
                                          
                                             
                                                
                                             
                                          
                                          
                                          (
                                          j
                                          ,
                                          ℓ
                                          +
                                          1
                                          )
                                          
                                          ⇒
                                          
                                          i
                                          ∈
                                          
                                             
                                                S
                                             
                                             
                                                ℓ
                                             
                                          
                                          .
                                       
                                    
                                 
                              

The set of B-splines with indices from 
                           
                              
                                 
                                    ∪
                                 
                                 
                                    ℓ
                                    =
                                    0
                                 
                                 
                                    L
                                 
                              
                              
                                 
                                    S
                                 
                                 
                                    ℓ
                                 
                              
                           
                         may be linearly dependent.

A basis for the hierarchical space 
                           
                              H
                           
                         has been constructed by Kraft [16] (and reconsidered under weaker assumptions in [27]) by eliminating those B-splines that can be represented as linear combinations of selected B-splines of higher levels. More precisely, the index set 
                           
                              
                                 
                                    S
                                 
                                 
                                    ℓ
                                 
                              
                           
                         is split into two disjoint subsets,
                           
                              
                                 
                                    
                                       S
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 
                                    
                                       A
                                    
                                    
                                       ℓ
                                    
                                 
                                 
                                 
                                    
                                       ∪
                                    
                                    
                                       ̇
                                    
                                 
                                 
                                 
                                    
                                       R
                                    
                                    
                                       ℓ
                                    
                                 
                                 .
                              
                           
                        The functions with indices from 
                           
                              
                                 
                                    A
                                 
                                 
                                    ℓ
                                 
                              
                           
                         are called active, since we will keep them in the basis. The remaining functions are called refined, since they have been replaced by linear combinations of selected functions from higher levels. The subsets 
                           
                              
                                 
                                    A
                                 
                                 
                                    ℓ
                                 
                              
                           
                         and 
                           
                              
                                 
                                    R
                                 
                                 
                                    ℓ
                                 
                              
                           
                         are defined by the third index set constraint:
                        
                           
                              (iii)
                              the set 
                                    
                                       
                                          
                                             R
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                  contains exactly the indices of those functions that can be represented by the selected functions of the next higher level,
                                    
                                       
                                          ∀
                                          i
                                          ∈
                                          
                                             
                                                S
                                             
                                             
                                                ℓ
                                             
                                          
                                          :
                                          i
                                          ∈
                                          
                                             
                                                R
                                             
                                             
                                                ℓ
                                             
                                          
                                          ⇔
                                          
                                             ⋃
                                          
                                          
                                             
                                                
                                                   j
                                                   ∈
                                                   
                                                      
                                                         N
                                                      
                                                      
                                                         ℓ
                                                         +
                                                         1
                                                      
                                                   
                                                   |
                                                   (
                                                   i
                                                   ,
                                                   ℓ
                                                   )
                                                   
                                                   
                                                      
                                                         
                                                      
                                                   
                                                   
                                                   (
                                                   j
                                                   ,
                                                   ℓ
                                                   +
                                                   1
                                                   )
                                                
                                             
                                          
                                          
                                          ⊆
                                          
                                          
                                             
                                                S
                                             
                                             
                                                ℓ
                                                +
                                                1
                                             
                                          
                                          .
                                       
                                    
                                 
                              


                        Kraft’s basis of 
                           
                              H
                           
                         is obtained by collecting the active B-splines (i.e., with indices in 
                           
                              
                                 
                                    A
                                 
                                 
                                    ℓ
                                 
                              
                           
                        ) from all levels.

The truncated hierarchical B-splines (THB-splines) form another basis of the same hierarchical spline space but with improved properties, see [12]. The idea is to modify Kraft’s basis functions in order to obtain a basis that forms a partition of unity. Based on the nested nature of the spaces and the refinement properties of the B-spline basis, this is achieved by truncation of the active functions from a coarser level with respect to the selected functions from the finer levels. More precisely, in their representations with respect to higher levels, we remove the contributions of the selected functions. As a consequence, the functions in the resulting hierarchical basis have reduced supports, thereby also forming a basis with better sparsity properties.

We define the THB-basis and compare it with the earlier approaches by presenting and analyzing the evaluation algorithm.

The algorithm evaluates the value 
                           
                              f
                              (
                              u
                              ,
                              v
                              )
                           
                         of a function 
                           
                              f
                              ∈
                              H
                           
                        . Proceeding from coarse to fine levels it constructs the B-spline representation of f at level 
                           
                              ℓ
                           
                         from the previous one via knot insertion (except for 
                           
                              ℓ
                              =
                              0
                           
                        ) and modifies it according to the chosen representation. Finally, 
                           
                              f
                              (
                              u
                              ,
                              v
                              )
                           
                         is found with the help of standard B-spline evaluation at level L. In each step, it considers only the 
                           
                              
                                 
                                    (
                                    p
                                    +
                                    1
                                    )
                                 
                                 
                                    2
                                 
                              
                           
                         coefficients of those splines that take non-zero values at 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                        .

By choosing one of the two lines marked with 
                           
                              †
                           
                        , and similarly for 
                           
                              ‡
                           
                        , the algorithm performs the evaluation of the representation of f
                        
                           
                              •
                              with respect to the full system of selected B-splines (which was used in the definition of 
                                    
                                       H
                                    
                                 ),

with respect to the Kraft’s basis, and

with respect to the THB-splines:
                              

The evaluation algorithm for Kraft’s basis requires to modify the coefficients of level 
                           
                              ℓ
                           
                         by adding the coefficients of the active basis functions to them. In contrast, the THB evaluation proceeds by simply replacing them with the coefficients of the active basis functions. This is equivalent to the construction of the basis in [12].

A detailed analysis of algorithms for THB-splines has been presented in [15]. Fig. 3
                         shows an example of THB-splines defined on a hierarchical mesh consisting of three levels of detail.

Compared to earlier approaches, THB-splines possess the following advantageous properties.
                           
                              •
                              THB-splines form a non-negative partition of unity. This property makes them attractive for geometric modeling applications. The examples in Figs. 1 and 2 show the control meshes (which consist of all control points that are associated with active B-splines) of the various levels.

Compared to Kraft’s basis, THB-splines have the same or a smaller support. Thus, they improve the sparsity properties of Kraft’s basis.

Under reasonable assumptions on the given knot configuration, THB-splines are strongly stable with respect to the maximum norm, where the constants appearing in the stability inequalities are independent of the selection of the subdomains and of the number of levels [13].

THB-splines span the full space of piecewise polynomial functions with the smoothness specified by given knot configuration on the considered polynomial grid, provided that the subdomains satisfy certain geometric conditions. See [11] for the case of single knots and [18] for the general setting.

Surface fitting algorithms based on hierarchical B-spline methods were previously considered in [9,10,14]. More recently, a basic framework for approximation with THB-splines was also presented [12]. We extend the basic framework by integrating a smoothing term, which is essential for successful applications in problems of industrial complexity, and by considering different refinement strategies. The examples presented in Section 4 and 5 will show how the proposed hierarchical fitting scheme outperforms standard B-spline approximations, not only with respect to a reduced number of degrees of freedom, but also concerning the quality of the computed solution.

We consider a surface reconstruction method from measured data by computing a least-squares approximation
                           
                              (3)
                              
                                 s
                                 (
                                 u
                                 ,
                                 v
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          ℓ
                                          =
                                          0
                                       
                                       
                                          L
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                A
                                             
                                             
                                                ℓ
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       c
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 u
                                 ,
                                 v
                                 )
                                 ,
                                 
                                 (
                                 u
                                 ,
                                 v
                                 )
                                 ∈
                                 
                                    
                                       [
                                       0
                                       ,
                                       1
                                       ]
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where the basis functions 
                           
                              
                                 
                                    τ
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                           
                         are THB-splines. We consider given data
                           
                              
                                 x
                                 =
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       (
                                       1
                                       )
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       (
                                       2
                                       )
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       (
                                       3
                                       )
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             m
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       m
                                       ×
                                       3
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    i
                                    2
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    i
                                    3
                                 
                              
                              )
                           
                         are the Cartesian coordinates of the measured (or sampled) points with associated parameter values
                           
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 ,
                                 …
                                 ,
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       m
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       m
                                    
                                 
                                 )
                                 ∈
                                 
                                    
                                       [
                                       0
                                       ,
                                       1
                                       ]
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     


                        Fig. 4
                         shows a typical data set, generated by an optical scanning process, which contains points on a fillet of a turbine blade. In all our examples we used standard parameterization methods to generate the associated parameter values, see [6,7] based on a triangulation of the measured point data. Due to the shape of the fillet and the fact that our parameter domain is simply the unit square, we obtain a highly non-uniform distribution of the parameter values, see Fig. 4. As we shall see later, this fact makes it difficult to deal with these data when using standard tensor-product spline representations.

We seek the vector of coefficients (control points)
                           
                              
                                 c
                                 =
                                 
                                    
                                       (
                                       …
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             i
                                          
                                          
                                             ℓ
                                          
                                       
                                       ,
                                       …
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       3
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              n
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    ℓ
                                    =
                                    0
                                 
                                 
                                    L
                                 
                              
                              |
                              
                                 
                                    A
                                 
                                 
                                    ℓ
                                 
                              
                              |
                           
                         is the number of THB-splines from all levels, for the THB-spline representation (3) that minimizes the objective function
                           
                              
                                 F
                                 (
                                 c
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                 
                                 |
                                 |
                                 s
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       k
                                    
                                 
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 λ
                                 J
                                 (
                                 c
                                 )
                                 ,
                              
                           
                        where 
                           
                              J
                              (
                              c
                              )
                           
                         is the smoothing (or regularization) term and 
                           
                              λ
                           
                         is a positive weight that controls the influence of the smoothness (regularization) term. Enlarging the value of 
                           
                              λ
                           
                         increases the fairness of the approximating surface, while simultaneously increasing the approximation error.

Without regularization, the linear system obtained from the objective function would easily become singular, e.g., if the number of local degrees of freedom in a certain region of the surface exceeds the number of available data points in that region. In particular, we use the thin plate spline energy
                           
                              (4)
                              
                                 J
                                 (
                                 c
                                 )
                                 =
                                 
                                    
                                       
                                          ∫
                                          
                                          ∫
                                       
                                       
                                          
                                             
                                                [
                                                0
                                                ,
                                                1
                                                ]
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 |
                                 |
                                 
                                    
                                       ∂
                                    
                                    
                                       uu
                                    
                                 
                                 s
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 2
                                 |
                                 |
                                 
                                    
                                       ∂
                                    
                                    
                                       uv
                                    
                                 
                                 s
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 |
                                 |
                                 
                                    
                                       ∂
                                    
                                    
                                       vv
                                    
                                 
                                 s
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 d
                                 u
                                 
                                 d
                                 v
                                 ,
                              
                           
                        as regularization term. The symbols 
                           
                              
                                 
                                    ∂
                                 
                                 
                                    uu
                                 
                              
                              s
                           
                        , etc. denote the partial derivatives of the THB spline surface 
                           
                              s
                           
                        .

The objective function F is quadratic with respect to the unknown coefficients. The solution of the optimization problem is computed by solving the sparse linear system
                           
                              
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       T
                                    
                                 
                                 A
                                 +
                                 λ
                                 E
                                 )
                                 
                                    
                                       c
                                    
                                    
                                       (
                                       i
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       A
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       (
                                       i
                                       )
                                    
                                 
                                 
                                 (
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                                 )
                                 ,
                              
                           
                        for each of the three columns 
                           
                              
                                 
                                    c
                                 
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         of the vector of coefficients, where the k-th row of 
                           
                              A
                              =
                              
                                 
                                    (
                                    
                                       
                                          τ
                                       
                                       
                                          i
                                       
                                       
                                          ℓ
                                       
                                    
                                    (
                                    
                                       
                                          u
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          k
                                       
                                    
                                    )
                                    )
                                 
                                 
                                    k
                                    ,
                                    (
                                    i
                                    ,
                                    ℓ
                                    )
                                 
                              
                           
                         contains the values of the THB-splines at 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              )
                           
                         and the matrix E is contributed by the regularization term.

The matrix 
                           
                              
                                 
                                    A
                                 
                                 
                                    T
                                 
                              
                              A
                           
                         has the elements
                           
                              
                                 
                                    
                                       a
                                    
                                    
                                       (
                                       i
                                       ,
                                       ℓ
                                       )
                                       ,
                                       (
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       
                                          
                                             ℓ
                                          
                                          
                                             ′
                                          
                                       
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       
                                          
                                             ℓ
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 ,
                              
                           
                        
                        
                           
                              
                                 (
                                 ℓ
                                 ,
                                 
                                    
                                       ℓ
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 0
                                 ,
                                 …
                                 ,
                                 L
                                 ;
                                 
                                 i
                                 ∈
                                 
                                    
                                       A
                                    
                                    
                                       ℓ
                                    
                                 
                                 ;
                                 
                                 
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 
                                    
                                       A
                                    
                                    
                                       
                                          
                                             ℓ
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 )
                                 .
                              
                           
                        
                     

This matrix is similar to a mass matrix in numerical simulation. In that case, the evaluation points are the Gauss nodes of the elements. In our case, the evaluation points are the parameter values of the given data. In order to efficiently assemble the matrix 
                           
                              
                                 
                                    A
                                 
                                 
                                    T
                                 
                              
                              A
                           
                         (and similarly the right-hand side of the system) we proceed as follows. First, for each index k, we identify all THB-splines that contribute a non-zero value at 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              )
                           
                        ,
                           
                              (5)
                              
                                 
                                    
                                       
                                          ∪
                                       
                                       
                                          ℓ
                                          =
                                          0
                                       
                                       
                                          L
                                       
                                    
                                 
                                 {
                                 (
                                 i
                                 ,
                                 ℓ
                                 )
                                 
                                 |
                                 
                                 i
                                 ∈
                                 
                                    
                                       A
                                    
                                    
                                       ℓ
                                    
                                 
                                 
                                 and
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 
                                 ≠
                                 
                                 0
                                 }
                                 .
                              
                           
                        When computing this index set, we start with level 0 and increase the level until the indices of all 
                           
                              
                                 
                                    (
                                    p
                                    +
                                    1
                                    )
                                 
                                 
                                    2
                                 
                              
                           
                         B-splines of level 
                           
                              ℓ
                              +
                              1
                           
                         that do not vanish at this point belong to 
                           
                              
                                 
                                    P
                                 
                                 
                                    ℓ
                                    +
                                    1
                                 
                              
                           
                        , i.e., this set of indices correspond to B-splines at level 
                           
                              ℓ
                              +
                              1
                           
                         which are all passive.

We simplify the computation of this index set by considering the supports
                           1
                           The support of a (tensor-product) B-spline is an axis-aligned box in the parameter domain, while the support of a THB-splines can have a more complicated shape.
                        
                        
                           1
                         of the original B-splines 
                           
                              
                                 
                                    β
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                           
                        , which bound the supports of the THB-splines 
                           
                              
                                 
                                    τ
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                           
                        . The obtained set (5) is then a superset of the relevant indices.

Second, we evaluate all THB-splines with indices in this set at 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              )
                           
                        , and third, we create and add the contributions to the matrix elements 
                           
                              
                                 
                                    a
                                 
                                 
                                    (
                                    i
                                    ,
                                    ℓ
                                    )
                                    ,
                                    (
                                    
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          ℓ
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                              
                           
                         for all relevant index pairs.

The regularization term generates the matrix E with the elements
                           
                              
                                 
                                    
                                       e
                                    
                                    
                                       (
                                       i
                                       ,
                                       ℓ
                                       )
                                       ,
                                       (
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       
                                          
                                             ℓ
                                          
                                          
                                             ′
                                          
                                       
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∫
                                          
                                          ∫
                                       
                                       
                                          
                                             
                                                [
                                                0
                                                ,
                                                1
                                                ]
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       ∂
                                    
                                    
                                       uu
                                    
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 
                                 
                                    
                                       ∂
                                    
                                    
                                       uu
                                    
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       
                                          
                                             ℓ
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 +
                                 2
                                 
                                 
                                    
                                       ∂
                                    
                                    
                                       uv
                                    
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 
                                 
                                    
                                       ∂
                                    
                                    
                                       uv
                                    
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       
                                          
                                             ℓ
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 +
                                 
                                 
                                    
                                       ∂
                                    
                                    
                                       vv
                                    
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 
                                 
                                    
                                       ∂
                                    
                                    
                                       vv
                                    
                                 
                                 
                                    
                                       τ
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       
                                          
                                             ℓ
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 
                                 d
                                 u
                                 
                                 d
                                 v
                                 ,
                              
                           
                        which is similar to a stiffness matrix. It is assembled by using Gaussian quadrature on the polynomial pieces of the hierarchical spline functions.

We consider all cells (i.e., the Cartesian products of the knot spans) of level 0 and split them by repeatedly inserting the knots of the higher levels. The refinement stops when we arrive at a cell of level 
                           
                              ℓ
                           
                         such that the indices of all B-splines of the next level 
                           
                              ℓ
                              +
                              1
                           
                         that do not vanish on this cell belong to 
                           
                              
                                 
                                    P
                                 
                                 
                                    ℓ
                                    +
                                    1
                                 
                              
                           
                        . This cell then defines a polynomial piece of the hierarchical spline function. Simultaneously we collect the indices of the THB-splines that do not vanish on this cell in a list, similar to the assembly of the matrix A. We evaluate all THB-splines and their derivatives at the Gauss nodes of the cell and add the contributions to the matrix elements 
                           
                              
                                 
                                    e
                                 
                                 
                                    (
                                    i
                                    ,
                                    ℓ
                                    )
                                    ,
                                    (
                                    
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          ℓ
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                              
                           
                         for all relevant index pairs.

The regularized least-squares approximation is repeated until the error
                           
                              
                                 
                                    
                                       
                                          max
                                       
                                       
                                          i
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          m
                                       
                                    
                                 
                                 |
                                 |
                                 s
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        is below a fixed tolerance or a prescribed number of iterations is reached. After each step, the accuracy of the approximation result is improved by performing refinement in the critical regions of the surface, thus providing additional degrees of freedom and a higher resolution. A typical requirement in high-end applications – such as turbine blades – is that 90–95% of data points are approximated with an error below 
                           
                              σ
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    6
                                 
                              
                           
                        .

The procedure is initialized by choosing 
                           
                              
                                 
                                    A
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 
                                    N
                                 
                                 
                                    0
                                 
                              
                           
                         and 
                           
                              
                                 
                                    P
                                 
                                 
                                    ℓ
                                 
                              
                              =
                              
                                 
                                    N
                                 
                                 
                                    ℓ
                                 
                              
                           
                         for 
                           
                              ℓ
                              =
                              1
                              ,
                              …
                              ,
                              L
                           
                        , where L is the number of levels in the spline hierarchy.

We investigated two different refinement strategies.
                           
                              •
                              The absolute threshold (AT) approach: the points where the error exceeds a fixed threshold 
                                    
                                       σ
                                    
                                  are marked for refinement.

The relative threshold (RT) approach: a certain percentage of points with the largest errors is marked for refinement.

Both approaches select a set of indices that identify the points 
                           
                              
                                 
                                    x
                                 
                                 
                                    k
                                 
                              
                           
                         with associated parameter values 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              )
                           
                         where the THB-spline surface needs to be refined. For each index we first compute the current level of the associated point,
                           
                              
                                 
                                    max
                                 
                                 {
                                 ℓ
                                 |
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 ∈
                                 
                                    
                                       Ω
                                    
                                    
                                       ℓ
                                    
                                 
                                 }
                                 ,
                              
                           
                        and we identify the cell of level 
                           
                              ℓ
                           
                         that contains 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              )
                           
                        . This cell and a certain number of neighboring cells (determined by the value of an extension parameter, see Fig. 5
                        ) is then added to the subdomain 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    ℓ
                                    +
                                    1
                                 
                              
                           
                        , provided that 
                           
                              ℓ
                              +
                              1
                              ⩽
                              L
                           
                        . This is done by adding the indices of all B-splines of level 
                           
                              ℓ
                              +
                              1
                           
                         whose support is contained in this region to the index set 
                           
                              
                                 
                                    A
                                 
                                 
                                    ℓ
                                    +
                                    1
                                 
                              
                           
                         that identifies the active functions.

After modifying the index sets 
                           
                              
                                 
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          ℓ
                                       
                                    
                                    )
                                 
                                 
                                    ℓ
                                    =
                                    0
                                    ,
                                    …
                                    ,
                                    L
                                 
                              
                           
                        , however, the index set constraints (i–iii) need not be satisfied. The next section describes three algorithms that allow to restore the validity of the three constraints.

In order to implement the hierarchy of truncated B-splines, we use characteristic matrices already discussed in [15]. In contrast to the approach in [15], we omit the data structure describing the domain hierarchy. In fact, this data structure is redundant as the matrices implicitly contain the needed information. However, one needs to perform certain operations to maintain the validity of the hierarchy of the subdomains.

For each level 
                           
                              ℓ
                              =
                              0
                              ,
                              …
                              ,
                              L
                           
                         we define a characteristic matrix 
                           
                              
                                 
                                    M
                                 
                                 
                                    ℓ
                                 
                              
                           
                         to identify the B-spline basis, defined with respect to the two knot vectors (1) at level 
                           
                              ℓ
                           
                        . More precisely, an entry of a matrix 
                           
                              
                                 
                                    M
                                 
                                 
                                    ℓ
                                 
                              
                           
                         with an index 
                           
                              i
                           
                         corresponds to the function with the same index 
                           
                              i
                              ∈
                              
                                 
                                    N
                                 
                                 
                                    ℓ
                                 
                              
                           
                        .

In order to store the implicit information about the hierarchy, we describe the partition of 
                           
                              
                                 
                                    N
                                 
                                 
                                    ℓ
                                 
                              
                           
                         by choosing different entries 
                           
                              
                                 
                                    M
                                 
                                 
                                    i
                                 
                                 
                                    ℓ
                                 
                              
                           
                         of the matrix 
                           
                              
                                 
                                    M
                                 
                                 
                                    ℓ
                                 
                              
                           
                        :
                           
                              
                                 
                                    
                                       M
                                    
                                    
                                       i
                                    
                                    
                                       ℓ
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   i
                                                   ∈
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   1
                                                   ,
                                                
                                                
                                                   i
                                                   ∈
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   2
                                                   ,
                                                
                                                
                                                   i
                                                   ∈
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The characteristic matrix is stored using a sparse data structure, since the number of non-zero entries is generally small.

The matrices 
                           
                              
                                 
                                    M
                                 
                                 
                                    ℓ
                                 
                              
                           
                         represent a valid hierarchy of spaces and domains, provided that the partitions of 
                           
                              
                                 
                                    N
                                 
                                 
                                    ℓ
                                 
                              
                           
                         satisfy the index set constraints (i–iii) described in Section 2. Consequently, the basis for THB-spline space can easily be identified by only considering functions with indices 
                           
                              i
                              ∈
                              
                                 
                                    A
                                 
                                 
                                    ℓ
                                 
                              
                           
                         for each level 
                           
                              ℓ
                           
                        , i.e., with entry 1 in the characteristic matrix.

During the refinement procedure, the characteristic matrices are updated by changing the values of certain entries from 0 (passive) to 1 (active), wherever the enlargement of a subdomain involves adding the support of the corresponding non-active B-spline. Proceeding from fine to coarse level we then perform the three maintenance operations: closing, nesting and cleaning, in order to obtain index sets that again satisfy the constraints (i–iii):
                           
                              
                                 
                                 
                                    
                                       
                                          algorithm MAINTAIN (∗mat M, int L)
                                       
                                    
                                    
                                       
                                          
                                          ⧹⧹ M is the list of characteristic matrices
                                    
                                    
                                       
                                          
                                          ⧹⧹ L is the finest level
                                    
                                    
                                       
                                          
                                          
                                          CLOSE (M, L) ⧹⧹ closing
                                    
                                    
                                       
                                          
                                          
                                          for l from L-1 to 0 do {
                                    
                                    
                                       
                                          
                                          NEST (M, l) ⧹⧹ nesting
                                    
                                    
                                       
                                          
                                          CLOSE (M, l) ⧹⧹ closing
                                    
                                    
                                       
                                          
                                          CLEAN (M, l) ⧹⧹ cleaning
                                    
                                    
                                       
                                          
                                          }
                                    
                                    
                                       
                                          end
                                       
                                    
                                 
                              
                           
                        
                     

The closing operation – which is needed to satisfy the first index set constraint (i) – is performed by the algorithm CLOSE. For each passive function at level 
                           
                              ℓ
                           
                        , we check whether every cell of its support is covered by selected functions of the same level. If this is the case, then the status of that function is changed to active.
                           
                              
                                 
                                 
                                    
                                       
                                          algorithm CLOSE (∗mat M, int l)
                                       
                                    
                                    
                                       
                                          
                                          ⧹⧹ M is the list of characteristic matrices, l is the level
                                    
                                    
                                       
                                          
                                          
                                          for all i with M[l][i] = 0 do {
                                    
                                    
                                       
                                          
                                          M[l][i] = 1
                                       
                                    
                                    
                                       
                                          
                                          for all cells c
                                          
                                             
                                                
                                                ⊂
                                                supp
                                                
                                                   
                                                      β
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      ℓ
                                                   
                                                
                                             
                                           
                                          do {
                                    
                                    
                                       
                                          
                                          covered 
                                          
                                          =
                                          
                                          0
                                       
                                    
                                    
                                       
                                          
                                          for all j with 
                                          
                                          
                                             
                                                supp
                                                
                                                   
                                                      β
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      ℓ
                                                   
                                                
                                                ⊃
                                             
                                          
                                          c do {
                                    
                                    
                                       
                                          
                                          
                                          if M[l][j] >= 1 then {
                                    
                                    
                                       
                                          
                                          
                                          covered 
                                          
                                          =
                                          
                                          1
                                       
                                    
                                    
                                       
                                          
                                          
                                          break ⧹⧹ for all j
                                    
                                    
                                       
                                          } }
                                    
                                    
                                       
                                          
                                          if covered == 0 then {
                                    
                                    
                                       
                                          
                                          
                                          M[l][i] = 0
                                       
                                    
                                    
                                       
                                          
                                          
                                          break ⧹⧹ for all cells
                                    
                                    
                                       } } }
                                    
                                    
                                       
                                          end
                                       
                                    
                                 
                              
                           
                        
                     

Since the bidegree of the basis is 
                           
                              p
                           
                        , the support of the function contains at most 
                           
                              
                                 
                                    (
                                    p
                                    +
                                    1
                                    )
                                 
                                 
                                    2
                                 
                              
                           
                         cells of level 
                           
                              ℓ
                           
                        . The algorithm can be accelerated by considering only passive functions in the vicinity of functions that changed their status from passive to active since the last call of CLOSE for this level. In order to keep the presentation simple, we do not give further details.

The algorithm NEST maintains the second index set constraint (ii), i.e., the domain hierarchy. Any passive function of level 
                           
                              ℓ
                           
                         that refines only to selected functions of level 
                           
                              ℓ
                              +
                              1
                           
                         (according to the relation 
                           
                        ) changes its status to refined.

The cleaning is performed by the third algorithm CLEAN. Dealing with the proper selection of refined functions (iii), it is quite similar to NEST. Any active function of level 
                           
                              ℓ
                           
                         that refines only to selected functions of level 
                           
                              ℓ
                              +
                              1
                           
                         changes its status to refined.

These two algorithms are obtained by choosing either the three lines marked by 
                           
                              †
                           
                         or by 
                           
                              ‡
                           
                         below:
                           
                              
                                 
                                 
                                    
                                       
                                          †
                                          algorithm NEST (∗mat M, int l)
                                       
                                    
                                    
                                       
                                          ‡
                                          algorithm CLEAN (∗mat M, int l)
                                       
                                    
                                    
                                       
                                          ⧹⧹ M is the list of characteristic matrices, l is the level
                                    
                                    
                                       
                                          
                                          †
                                          for all i with M[l][i] == 0 do {
                                    
                                    
                                       
                                          
                                          ‡
                                          for all i with M[l][i] == 1 do {
                                    
                                    
                                       
                                          
                                          M[l][i] = 2
                                       
                                    
                                    
                                       
                                          
                                          for all j with (i,l) 
                                          
                                             
                                           
                                          (j,l
                                          
                                          +
                                          
                                          1) do {
                                    
                                    
                                       
                                          
                                          
                                          if M[l
                                          
                                          +
                                          
                                          1][j] == 0 then {
                                    
                                    
                                       
                                          
                                          
                                          †
                                          M[l][i] = 0
                                       
                                    
                                    
                                       
                                          
                                          
                                          ‡
                                          M[l][i] = 1
                                       
                                    
                                    
                                       
                                          
                                          
                                          break ⧹⧹ for all j
                                    
                                    
                                       } } }
                                    
                                    
                                       
                                          end
                                       
                                    
                                 
                              
                           
                        
                     

The number of B-splines of level 
                           
                              ℓ
                              +
                              1
                           
                         that a function refines to (according to the relation 
                           
                        ) depends on the knot configuration. For instance, in the case of single knots and dyadic refinement of the two knot vectors, we have to consider 
                           
                              
                                 
                                    (
                                    p
                                    +
                                    1
                                    )
                                 
                                 
                                    2
                                 
                              
                           
                         B-splines of level 
                           
                              ℓ
                              +
                              1
                           
                        . Again, both algorithms can be significantly accelerated by considering only functions in the vicinity of B-splines of level 
                           
                              ℓ
                              +
                              1
                           
                         that changed their status from passive to selected after their last call for this level.

Our tests were performed on several synthetic data sets – created by uniform sampling of analytical functions – and on more challenging industrial data sets related to turbine blade parts (see Figs. 1 and 2 and Section 5). All tests were initialized with a THB-spline basis of size 
                        
                           8
                           ×
                           8
                        
                      and bi-degree (3,3), resulting in curvature continuous surfaces as the standard case in demanding engineering applications.

The THB-splines and the adaptive fitting algorithm were implemented in C++. The presented tests were executed on PC running SUSE Linux Enterprise Desktop 11 (Intel XEON E31240 3.30GHz, 16GB RAM, 64bits).

The convergence speed and the resulting domain structure of the THB-spline fitting procedure strongly depends on the refinement strategy considered in the hierarchical approximation framework. In Section 3 we proposed two different approaches to identify the regions with higher errors: the absolute (AT) and the relative threshold (RT).

In Table 1
                         we compare the number of iterations and degrees of freedom of the absolute (AT) and the relative threshold (RT) refinement strategies for the 3 peak data set
                        
                           2
                           The data is computed by uniform sampling points of the function 
                                 
                                    f
                                    (
                                    x
                                    ,
                                    y
                                    )
                                    =
                                    1.5
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            (
                                                            10
                                                            x
                                                            -
                                                            3
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            (
                                                            10
                                                            y
                                                            -
                                                            3
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    +
                                    1.5
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            (
                                                            10
                                                            x
                                                            +
                                                            3
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            (
                                                            10
                                                            y
                                                            +
                                                            3
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    +
                                    1.5
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            (
                                                            10
                                                            x
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            (
                                                            10
                                                            y
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          -
                                          1
                                       
                                    
                                 
                               for 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                    ∈
                                    
                                       
                                          [
                                          -
                                          1
                                          ,
                                          1
                                          ]
                                       
                                       
                                          2
                                       
                                    
                                 
                              .
                        
                        
                           2
                         which was already considered in [12], see Fig. 6
                        . The data are contained in an axis-aligned box of size 
                           
                              2
                              ×
                              2
                              ×
                              0.65
                           
                        . We terminate the refinement procedure when at least 99% of the errors were below the threshold 
                           
                              σ
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    6
                                 
                              
                           
                         – thereby even exceeding the standard industrial precision requirements mentioned in the previous section – or when the number N of iterations reached 10. By setting the regularization parameter to 
                           
                              λ
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    9
                                 
                              
                           
                        , we obtain the number of iterations and degrees of freedom reported in Table 1. We may observe that, in general, even if both refinement strategies can achieve the same level of accuracy, the AT strategy requires less iterations. Furthermore, the choice of the optimal refinement percentage in case of the RT strategy is not easy and may depend both on the shape and the distribution of the data set.

In addition, as shown in Fig. 6, the RT strategy tends to create a more fractal-like domain structure. This fact has negative influence on the complexity of the final surface and the required number of tensor product B-spline patches needed to perform an exact export of THB-splines into a standard CAD format, as described later in Section 5.2. Also, the RT strategy does not lead to a substantially smaller number of control points.

The RT strategy has some advantages if one tries to find the optimal THB-spline surface for a given number of levels. In this situation, one would use a rather small tolerance, and the RT strategy concentrates on the refinement in the regions where the largest errors occur. In contrast, the AT refinement would quickly produce a large number of control points.

However, in all practical test cases with a given error threshold, AT performed better than the RT strategy. Consequently, we will only consider the absolute threshold refinement strategy in the remaining examples.

The regularization parameter assures that the solved system of equations is not singular even for high refinement levels. At the same time it smooths the resulting surface in case of noisy input data. Naturally, in case of data sets with sharp features, the smoothing effect is in contradiction to the required accuracy of the approximation. For these reasons, the choice of 
                           
                              λ
                           
                         is essential for generating accurate results and at the same time minimizing the number of required iterations.

The dependency of the approximation error and the condition number of the matrix on the regularization parameter 
                           
                              λ
                           
                         is discussed in Table 2
                        . Our tests show that in the two analyzed
                           3
                           In addition to the 3 peak data set, previously introduced, we consider the Rvachev data set, computed by uniform sampling of the function 
                                 
                                    f
                                    (
                                    x
                                    ,
                                    y
                                    )
                                    =
                                    
                                       
                                          (
                                          x
                                          +
                                          y
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            x
                                                            -
                                                            y
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                               for 
                                 
                                    [
                                    x
                                    ,
                                    y
                                    ]
                                    ∈
                                    
                                       
                                          [
                                          0
                                          ,
                                          1
                                          ]
                                       
                                       
                                          2
                                       
                                    
                                 
                              .
                        
                        
                           3
                         cases the regularization parameter should be smaller then 
                           
                              
                                 
                                    10
                                 
                                 
                                    -
                                    8
                                 
                              
                           
                         to reach the required accuracy (more than 99% data points with an error below the threshold 
                           
                              σ
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    6
                                 
                              
                           
                        ). For larger values of 
                           
                              λ
                           
                         the smoothing effect prevents the solution from capturing the fine details of the original surface even for high refinement levels. In general, the choice of 
                           
                              λ
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    9
                                 
                              
                           
                         provided a satisfactory behavior for all tested data sets. These include the industrial examples shown in Section 5.

The choice of the extension parameter (used in the refinement) may influence the accuracy of the approximation as well as the size of the corresponding THB-spline representation. By enlarging this parameter, the number of newly introduced degrees of freedom increases, thereby providing more flexibility in the neighborhood of the area with high error.


                        Table 3
                         compares the number of degrees of freedom and the approximation errors for different values of the extension parameter, again for the 3 peak data set. As expected, the optimal value of this parameter is 
                           
                              ⌈
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              ⌉
                           
                        . This corresponds to the smallest possible extension that is required to add at least one new basis function to the THB-spline basis at the next refinement level. For larger values of the extension parameter, we may observe that an increase of the number of coefficients does not always corresponds to significant improvements with respect to the accuracy of the approximation.

The accurate modeling and reconstruction of surfaces with sharp features and small details cause many difficulties for current CAD software. Furthermore, the enormous size of the resulting geometries has a negative influence on all post-processing steps. On the other hand the local refinement of THB-splines provides an effective tool for constructing the detailed structures, while simultaneously minimizing the size of the resulting geometry.


                        Table 4
                         and Fig. 8
                         compare the number of degrees of freedom for different number of iterations of the fitting procedure for the Rvachev data set. The growth of the size of the standard B-spline basis is exponential. Thus, the global refinement method reaches its limits after several refinement steps and the solving of the underlying system of equations becomes too expensive in terms of computational time and memory. In contrast to this, the growth of the THB-spline basis remains fairly moderate.

Each iteration of the presented adaptive fitting procedure consists of three steps:
                           
                              1.
                              the refinement of the THB-spline basis, i.e., adaptation and maintenance of the sets of active functions;

the assembly of the linear system;

the solution of the linear system.
                                    4
                                    We used the biconjugate gradient stabilized method solver (BiCGSTAB), which can deal with sparse matrix data structures from the Eigen library, eigen.tuxfamily.org. Clearly, the system is symmetric positive definite, and using a solver that exploits this property would also be an option.
                                 
                                 
                                    4
                                 
                              

In our current experimental implementation, the total computing time is dominated by the first two steps. To give an idea, in order to generate the THB-spline approximation of the fillet data set with 38,260 points (Fig. 1), where the number of degrees of freedom varies between 169 for 1 level and 20,553 for 7 levels after several iterations, the first two steps need a few seconds up to a few minutes, while the solver time is always less than a second.

We are currently exploring various possibilities to speed up these computations. For example, the B-spline representations of THB-splines is precomputed in order to speed up their evaluation. More precisely, each THB-spline is then represented by its B-spline coefficients at the coarsest possible level. This precomputation is performed by slightly modifying the THB-spline evaluation algorithm. Obviously, a natural way to further optimize the performance for data sets of high complexity relies on parallel computing techniques.

The process of converting a measured data set into a CAD object – often referred to as geometry acquisition and reconstruction – is a crucial part in certain industrial applications, for example, in analyzing manufacturing tolerances with respect to their aerodynamic and structural mechanical impact. The introduced adaptive fitting framework with THB-splines improves the required number of degrees of freedom and the overall stability of the reconstruction process while maintaining the accuracy of the standard fitting technique.

This leads to a dramatic performance enhancement in related industrial applications. This is illustrated in Section 5.1 where the reconstruction process related to a crucial part of an aircraft turbine blade is illustrated. Subsequently, Section 5.2 presents the export of THB-spline geometries into standard tensor-product B-splines, which provides a useful tool for integrating hierarchical spline representations into standard CAD software.

Industrial data sets are often generated by an optical measurement system producing a large amount of non-uniformly distributed points describing the shape of the object. A non-uniform sampling and a strongly varying shape of the data causes several problems during the fitting procedure with standard techniques. This limitation of the tensor-product structure can be eliminated by using the adaptive THB-splines fitting framework.

Therefore, we investigated the reconstruction of the fillet part of a turbine blade as one of the challenging geometrical parts of an aero engine. Fig. 4 shows the used point cloud which was parametrized by the technique described in [7]. The fully automatically reconstructed fillet geometry by using B-splines and THB-splines is shown in Fig. 9
                        . As the noisy reflection lines show, the tensor-product spline surface suffers from strong oscillations on its upper part, whereas the same region on the hierarchical spline surface is perfectly smooth. This results from the fact that, within the standard technique, no optimal number of degrees of freedom exists to avoid oscillations in the upper fillet part while generating an accurate fitting geometry on the lower fillet part.

Note that the problem of oscillations may not be solved with standard B-spline surfaces. Choosing larger values of the regularization parameter does not lead to an effective solution: the amplitude and frequency of the oscillations decreases, but simultaneously the approximation error increases, as the surface is pulled towards a linear (i.e., planar) shape. In our experience, the regularization should be used solely for ensuring the regularity of the linear system, but not for controlling the shape of the solution. For this reason, an adaptive scheme is needed to compute a flexible and accurate fitting by exploiting the possibility of identifying different levels of resolution. This demonstrates the superior behavior of the adaptive fitting framework with truncated hierarchical geometries in comparison with the use of standard tensor-product geometries.

Despite the advantages of THB-splines, the current CAD standard relies on tensor-product B-splines or, more generally, on tensor-product NURBS. Therefore, a procedure for exporting THB-spline geometries into the standard format is needed.

The hierarchical construction of THB-splines offers a natural way to perform this operation by computing the coefficients of the tensor-product representation directly from the control points of the original surface. To execute this conversion efficiently, we need to split the original geometry into several B-spline patches according to the different refinement levels of the THB-spline representation.

The algorithm EXPORT performs the conversion of a THB-spline geometry into several B-spline patches using certain splitting techniques, which are described later. The evaluation function EVALUATE_THB_SURFACE described in Section 2 can be modified to suit this operation by terminating the iteration at the level of interest. This modified evaluation is indicated as EVALUATE_THB_SURFACE∗ in the algorithm below, where we assume 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    L
                                    +
                                    1
                                 
                              
                              =
                              ∅
                           
                        .
                           
                              
                                 
                                 
                                    
                                       
                                          algorithm EXPORT (mat c, int L)
                                       
                                    
                                    
                                       
                                          ⧹⧹ c are the THB-spline coefficients
                                    
                                    
                                       
                                          ⧹⧹ L is the number of levels
                                    
                                    
                                       
                                          
                                          for l from 0 to L do {
                                    
                                    
                                       
                                          create the ring r 
                                          
                                             
                                                =
                                                
                                                
                                                   
                                                      Ω
                                                   
                                                   
                                                      ℓ
                                                   
                                                
                                                ⧹
                                                
                                                   
                                                      Ω
                                                   
                                                   
                                                      ℓ
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          create the list R of connected components of r
                                       
                                    
                                    
                                       
                                          
                                          for i from 1 to |R| do {
                                    
                                    
                                       
                                          
                                          
                                          boxes 
                                          
                                          =
                                          
                                          SPLIT_TO_BOXES (R[i])
                                       
                                    
                                    
                                       
                                          
                                          
                                          for j from 1 to |boxes| do {
                                    
                                    
                                       
                                          
                                          Compute the coefficients of the restriction of the THB-spline surface to the box boxes[j] using EVALUATE_{T}HB_SURFACE∗ and export the obtained tensor-product B-spline surface.
                                    
                                    
                                       } } }
                                    
                                    
                                       
                                          end
                                       
                                    
                                 
                              
                           
                        
                     

This algorithm relies on the SPLIT_TO_BOXES procedure that splits a connected component of one refinement level according to one of the following methodologies.
                           
                              1.
                              
                                 Smallest bounding box: by using the B-spline representation of the smallest axis aligned bounding box covering. the connected component R[i]. Its boundary curve is defined in the parameter domain of R[i] and used for trimming the tensor-product surface later.


                                 Rectangular partition: by using the B-spline representation of rectangular boxes completing the connected components R[i].

The first method leads to a small number of patches but increases the required memory storage, since one needs to store additional “phantom” control points in the trimmed areas and the trimming curves themselves. The second approach leads to an increased number of patches depending on the shape of the hierarchical domains. However, in this case the number of degrees of freedom is only increased by storing multiple copies of common control points between adjacent patches.

The domain structure of the THB-splines can be represented by a quadtree data structure which provides us naturally with the collection of boxes, necessary for the rectangular partition procedure, in its leaves. See [15] for a detailed information on this concept. To optimize the number of patches, we applied an additional step where adjacent areas of the same refinement level are joined together creating larger rectangular boxes. The list of boxes stored by the quadtree allows also to compute the smallest rectangular box that covers the connected components of 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    ℓ
                                 
                              
                              ⧹
                              
                                 
                                    Ω
                                 
                                 
                                    ℓ
                                    +
                                    1
                                 
                              
                           
                        , for 
                           
                              ℓ
                              =
                              0
                              ,
                              …
                              ,
                              L
                           
                        , required for the smallest bounding box procedure.

Finally, we use the capabilities of a CAD system, i.e., Parasolid™ by SIEMENS PLM Software [19], to bridge the gap between THB-splines and standard (commercial) applications. The geometric modeling kernel combines the geometric representations with a topological structure to handle trimmed entities and to build up large complex models based on several (connected) geometries. Therefore, Parasolid combines the generated B-spline patches into a single topological object referred to as a sheet without using any approximation, see Fig. 10
                        . This provides a straight-forward and geometrically exact integration of THB-splines into standard industrial processes and applications.


                        Fig. 10 presents an example. The THB-spline surface representing the fillet (a) with 475 control points can be split either into 36 patches with 1788 control points (b) or into 4 trimmed patches with 1021 control points (c,d).

@&#CONCLUSION@&#

In this paper we explored the potential benefits of using the recently introduced truncated hierarchical B-splines (THB-splines) in a least-squares approximation framework, focusing on their successful integration with the current mathematical technology of Computer Aided Design. After recalling the definition, the related algorithms and the properties of THB-splines, we presented an adaptive surface fitting framework and we identified two possible strategies for performing the refinement. The presentation also covered implementation aspects and a simple regularization technique.

Based on this approximation framework, we showed how to use THB-splines for demanding real-world applications, in particular, in the fitting part of the process used for reconstructing the geometry of core components of aero engines. (Further details of the entire process, that involves additional steps such as triangulation, paramaterization, and patch layout generation, are described in [21].) When compared to the existing tensor-product spline technology, the use of THB-splines significantly improves the quality of the resulting geometric shapes. Moreover, based on standard features of the geometric kernels of CAD systems, such as Parasolid™, we identified two possibilities that allow to export the resulting surfaces as standard CAD geometries/models.

In order to further exploit the successful CAD interface of the THB-spline framework here presented, future work will be devoted to algorithm and efficiency optimization of the related interconnected procedures. This will pave the way for using this new spline technology in further applications, e.g., for performing numerical simulations using the approach of isogeometric analysis. In particular, the use of adaptive generalizations of tensor-product splines (such as THB-splines) becomes mandatory when addressing three-dimensional problems, since the “curse of dimension” makes global refinement even more prohibitive. The truncation mechanism may also provide the possibility – non-trivial in an adaptive/hierarchical spline context – of developing refinement procedures that, by preserving suitable hierarchical domain configurations, may allow to consider explicit bounds for the number of basis functions acting on a single mesh element.

Additionally we have started to explore generalizations of the THB-spline framework to more general spaces of functions, which include box splines and spaces related to subdivision surfaces [34]. Also, recent results regarding the completeness of hierarchical spline spaces allow to generate simple B-spline bases for large classes of spline spaces over box partitions in any dimensions [18]. By relying on sparse representations of geometric objects and of functions defined on them, these spaces have the great potential of providing a viable multivariate approach for demanding applications.

@&#ACKNOWLEDGMENTS@&#

The authors were supported by the Projects EXAMPLE and INSIST (EC GA Nos. 324340, 289361), “Geometry+Simulation” (FWF NFN S117) and DREAMS (MIUR “Futuro in Ricerca” RBFR13FBI3).

@&#REFERENCES@&#

