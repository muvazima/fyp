@&#MAIN-TITLE@&#Instituting facts: Data structures and institutional order

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Develops a theory of the actability of data structures consistent with the language/action tradition and social ontology


                        
                        
                           
                           Uses the notion of business patterns and a pattern comic to make sense of the constitutive ‘mechanics’ of data structures


                        
                        
                           
                           Grounds the application of business patterns and pattern comics in material collected within an action research study


                        
                        
                           
                           Demonstrates the importance of this approach to the design of data structures in relation to institutional order


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Language/action approach

Social ontology

Institutional facts

Actability

Data structures

Business patterns

Pattern comics

@&#ABSTRACT@&#


               
               
                  The concept of the data structure is part of the accepted and relatively unexplored background of the information disciplines. As such, the data structure is treated largely as a technological artefact, helping to support but somewhat isolated from considerations of institutional order. This paper develops an alternative consideration of the data structure which focuses upon the constitutive capacity of such artefacts within institutional order. This viewpoint builds upon literature from the language/action tradition, the more recent work of John Searle on social ontology as well as the small amount of work which proposes the actability of data structures. To help provide some grip on the slippery notion of institutional order we consider it here in terms of the notion of business patterns. The term business pattern is used to refer to a coherent and repeating sequence of action involving humans, machines (including IT systems) and other artefacts (such as data structures) appropriate to some way of organising. The paper also describes a way of visualising either existing business patterns or envisaged business patterns through the pattern ‘language’ of pattern comics. We ground our approach using material gathered within a research study of a key routine enacted within a large manufacturing organisation. Within this routine a mismatch was experienced between what the data structures within the production IT system was telling production managers and what was experienced on the ground by production operators. We show how an actability worldview of data structures expressed in terms of business patterns offers a fruitful way of making sense of problem situations such as this. It also suggests important ways of thinking differently about the nature of design in relation to data structures.
               
            


                  
                     “Until I know this sure uncertainty, I'll entertain the offered fallacy.”
                     
                        William Shakespeare, The Comedy of Errors
                     
                  
               

@&#INTRODUCTION@&#

A data structure is a term which is used broadly to refer to some systematic form for organising data (Tsitchizris & Lochovsky, 1982). As a concept, a data structure is clearly central to the interests of the information disciplines (Information Systems, Information Science, Information Management, Computer Science), since much of the infrastructure of information technology, for instance, is taken up with the ‘mechanics’ of data structures—storing, retrieving and manipulating data structures. However, the concept of the data structure itself is treated within much of the research and practise of the information disciplines largely as a technological artefact, helping to support but somewhat isolated from considerations of institutional order. As such, this view of the data structure comprises an important part of the accepted and relatively unexplored background to the conduct of investigation and explanation in these disciplines. In turn, this relatively unchallenged worldview of the data structure influences the way in which ‘design’ is both contemplated and conducted in relation to such artefacts.

In recent work, we have begun to explore the constitutive capacity of data structures in forming and reforming institutional order (Beynon-Davies, 2015a; Beynon-Davies, 2015b). To do this we utilise the literature of the language/action tradition (Goldkuhl & Lyytinen, 1982), social ontology (Searle, 2006) as well as the actability or agency of data structures (Agerfalk, Goldkuhl, Fitzgerald, & Bannon, 2006). Our key contribution in the current paper is that we offer a way of making sense of the re-positioning of data structures in terms of institutional order through the intermediate construct of a business pattern and the design artefact of a pattern comic (Beynon-Davies, 2014). We shall demonstrate how this design theory (Gregor & Jones, 2007) and associated design artefact (Gregor & Hevner, 2013) provides a way of both making sense of the constitutive capacity of data structures within existing institutional ontology, but also facilitating the design and use of data structures in constituting new institutional orders.

To help provide some grip on the slippery notion of institutional order we consider it here in terms of the notion of patterns of organisation—business patterns. Our concept of a business pattern is built primarily upon the literature of organisational routines (Becker, 2004), business narrative (Pentland, 1999) and socio-technical systems (Bostrom & Heinen, 1977). We further argue that business patterns consist of three coupled layers of action, which we refer to as articulation, communication and coordination. This conceptualisation exploits both speech act theory (Searle, 1970) and Searle's social ontology (2006) and is used here as a way of making better sense of the ‘mechanics’ of data structures in the constitution of institutional order. To help unpack the nature of action which comprises a particular business pattern, we propose a form of visualisation known as a pattern comic (Beynon-Davies, 2013; Beynon-Davies, 2014). This way of visualising socio-technical action, we maintain, has merit as a way of illuminating the role that data structures play as key actors in the accomplishment of particular institutional orders.

Our general approach within this paper involves isolating something considered fundamental but which is taken as a given. That which is considered fundamental but given here is that of a list of identifiers comprising a data structure. We then attempt, using speech act theory (Searle, 1970) and the theory of social ontology (Searle, 2007) as key anchors, to reconstruct the relationship between such data structures and institutional order by examining the critical role that both lists and identifiers play in constituting institutional action. By means of this approach we demonstrate how this reframing of the data structure has a number of important consequences for the way in which we approach data structures within the information disciplines, not only in terms of explanation but also in terms of design.

To help demonstrate the actability of data structures we use the visualisation of pattern comics to make sense of one small example of a business pattern explored by the author within an action research study. We consider lists and identifiers as atomic elements of data structures relevant to this order of routine action, which are articulated in various ways by different institutional actors. Such articulation is used to communicate different intents and contents to multiple actors and through such communication to facilitate coordinated action. We use this case to demonstrate how the visualisation of business patterns through pattern comics particularly allows designers to explore the place of data structures within institutional order, as well as their potential as change agents within routine order.

The structure of the paper is as follows. We start with establishing the fundamental nature of the data structure, using a list of identifiers as a primitive instance of such form. We then frame the notion of institutional order or ontology by exploiting Searle's notion of constitutive rules as generators of institutional facts. This leads us to consider the data structure as a speech act—as a form (locutionary act) created with the intention to in-form (illocutionary act) in the hope of influencing some actor to per-form (perlocutionary act). This theorisation of the data structure sets the scene for our attempt to visualise the constitutive ‘mechanics’ of data structures. To do this we introduce the term business pattern to denote a socio-technical routine of action relevant to some delimited institutional domain. We further introduce the design artefact of a pattern comic to visualise three coupled dimensions of action important to making sense of the institutional ‘mechanics’ of data structures. Data structures as material forms have a number of specific characteristics which help explain their special status as actors within the constitution of institutional order. Bringing the actability of data structures into focus in this way leads to a different conception of what design means in relation to such artefacts. To demonstrate this, we consider the specific case of the re-design of the pattern of perpetual inventory checking employed within a large UK manufacturing organisation—the Royal Mint. We conclude with a summary of the lessons derived from our study as well as considering a number of limitations of our current work.

A data structure is both an abstraction and an instantiation. As an abstraction a data structure, such as a list, comprises a set of principles for both storing and accessing data. As an instantiation a data structure is given form. A specific instance of a list, such as a stock-location list, is used to represent things, and through such representation to help constitute institutional order. As an abstraction a data structure can be seen as a set of data elements, which in turn comprise a set of data items (Tsitchizris & Lochovsky, 1982). Hence, a list, as a data structure, is comprised of a set of data elements which we shall refer to as list-items. Each list-item will take the form of a binary relation (Frost, 1982) consisting of three data items in which the first and third data items are identifiers and the second data-item is some expressed relation between identifiers. For example, a ‘stock location list’ is likely to consist of list-items in which identifiers such as [26641] and [PL0102] are associated through the relation [LOCATED AT].

We choose to focus on the list and identifier to help ground the notion of a data structure because the ubiquity of such artefacts means that they are typically treated as mundane and accepted. As such, lists and identifiers are useful as sensebreaking devices — as ways of breaking-through entrenched and limiting conceptions embedded within the conventional worldview of the information disciplines. We deliberately focus upon the list rather than the file, table (relation), or record, because the term list has some useful connotations in everyday English usage. People inherently connote the creation of lists with action. They create shopping lists, picking lists, to-do lists, admission lists and check-lists. They are important to activities of blacklisting, whitelisting and shortlisting people. However, we would argue that other forms of data structure, such as files, tables and records, are constitutive of and help constitute institutional order, in much the same way as described for the list and the identifier.

If list-items, at least within the context of our paper, consist of a coupling of identifiers, we need to next define the concept of an identifier. The early work of Searle (1970), which draws in turn upon the work of Austin (1962) argues that the terms used within some act of communication fulfil one of two functions — they refer to or they predicate ‘things’. A term which refers enables actors to identify a thing while a term which predicates serves to describe a thing. The term thing here is used in an entirely neutral way to stand for anything that can be referred to or predicated. It may be a physical thing such a manufactured item or a production location. It may also be something which has a purely institutional status such as a stock count or stock movement.

Referring as a function enables the communicator of some message to specify one and only one thing to which an utterance applies, while also providing the means for an interpreter to identify the thing from the utterance. For Searle, language is used to refer in two major ways — through the use of an identifier or through some definite description. Identifiers are particularly useful within patterns of communicative action because they can refer to some instance of a thing without the need to actually describe it. They can also refer to this instance across many different communicative situations.

To help ground this notion, consider one narrow institutional domain which forms the context for our study, described in later sections. This consists of a number of inter-related patterns of action involved with managing the flow of production material through production units within a large manufacturing plant. Two key things of interest are important to this domain. The first thing is the stillage — a standardised container used to store and transport production material. The second thing is the production location. The manufacturing plant concerned is divided into 8 different production units with a maximum of 20 different production locations within each unit. Stillages are placed within such designated production locations and move between production locations as the material they contain gets transformed within manufacture.

Two identifiers are particularly significant within this institutional domain to refer to such things of interest — that of a stillage code and a production location code. For example, a particular stillage might be referred to with the code [26643] while a particular location might be referred to by the code [PL0102]. These identifiers are used in the construction of various lists, such as the following ‘stock location’ list:
                        
                           [26641 LOCATED AT PL0102]

[26643 LOCATED AT PL0102]

[24536 LOCATED AT PL0102].

Within philosophy the term ontology (Dale, 2002) is used to stand for a theory of reality, or more precisely theories which consider the nature of being or the kinds of things that have existence. For Searle (2005), institutional reality, order or ontology is an instance of social reality, order or ontology. But Searle is not attempting to separate the physical world from the social world. He is attempting to demonstrate that the social or institutional world (social ontology) arises from and builds upon the physical or material world (physical ontology) (Searle, 2010).

Physical ontology for Searle is constituted through brute facts, which are observer-independent. Within a brute fact the status of the thing referred to has an existence independent of institutions. Indeed, brute facts are independent even of the institution of language; although as we shall see, brute facts require the institution of language to be asserted (Searle, 1995). In contrast, social or institutional ontology is constituted through institutional facts, which are observer-dependent. Within an institutional fact the status of the thing depends upon a collective attitude or acceptance by the actors concerned that the thing has a certain function. Therefore, institutional facts are matters of culture and convention. They exist only within the context of human institutions.

Institutions, such as manufacturing companies, clearly have to deal with both brute facts and institutional facts. Indeed, many things of significance to such organisations need to be referred to and described not only by brute facts but also by institutional facts. As we shall see, Searle also argues that even though institutional facts are observer-dependent or ontologically subjective they can be analysed or understood in an epistemically objective manner.

Consider the ontology of stillages in this regard. Stillages are clearly physical things and as such have an existence independent of the institution. In other words, they can be described in terms of brute facts such as a stillage is a steel box being approximately 1m in depth, height and width. These brute facts can be confirmed by any observer of such things. From this one might be tempted to say that the function of a stillage is determined purely by its physical structure, and hence that any facts made about stillages are necessarily brute facts.

But what is the function of a stillage? A stillage may be a physical structure but these physical structures are assigned a particular status within the institution concerned. A stillage is used to store various stages of finished product – ‘stock’ – within the context of the manufacturing plant. Hence, within the context of this institution a stillage is assigned a certain status through collective acceptance by actors of the function that this thing serves.

This process of collective assignment of some function to some things Searle refers to as a status function. Status functions are constituted through rules of the general form:


                     X (some things) counts as Y (some other things) in C (some contexts).

Such rules are referred to by Searle as constitutive rules, where the term constitutive is used in that sense adopted in the work of Giddens (1984). Giddens' constitutive cycle was introduced as a means of addressing the intellectual division between an action perspective on the nature of institutions and a structural perspective on the nature of institutions (Walsham & Han, 1991). Giddens believes that these two perspectives on institution can be brought together through the idea of structuration. On the one hand, the structure of social institutions is created by human action. Through human inter-action, the social structure of institutions is reproduced but may also change. On the other hand, humans utilise institutional structure as a resource in interpreting their own and other people's action. This means that institutions act as a constraint on human action. This cyclical process of structuration is the process through which the patterned order we consider as institution is constituted and re-constituted.

Hence we might frame the constitutive rule in the case of a stillage as being:


                     A stillage (X) counts as a unit of stock (Y) within the manufacturing plant (C).

For Searle then, the notion of institutional order is built in terms of constitutive rules such as this which serve to generate institutional facts — ‘an institution is any system of constitutive rules… Once an institution becomes established it then provides a structure within which we can create institutional facts’ (Searle, 2005). Within this paper we wish to make the case for treating data structures as key actors which help constitute such institutional facts and in doing so help create and recreate notions of institutional order. Treated purely as a material artefact, as a form, a data structure can be considered a brute fact, or more accurately a series of brute facts. For instance, as a sequence of perhaps written letters or numbers a particular identifier as data item within the larger data element of a list-item is observer-independent. But the identifier is also an institutional artefact in the sense that it is a crucial component element of institutional facts generated by institutions. As such the identifier acts in the capacity of what Searle calls a status indicator. This is because ‘we impose intentionality on entities that are not intrinsically intentional. A status indicator is a representational device that allows an entity to represent something beyond its physical features’ (Searle, 2006).

The language-action tradition, approach, viewpoint or perspective refers to the adoption or translation of a series of ideas from the philosophy of language, particularly the work of Austin, some of the early work of Searle and possibly some of the work of Habermas, into the information disciplines (Goldkuhl & Lyytinen, 1982; Lyytinen, 1985; Winograd & Flores, 1986; Lyytinen & Hirscheim, 1988; Weigand, 2003; Te'eni, 2006). This tradition focuses upon the use of communicative action by actors to do things. A data structure from this viewpoint is regarded as an act of communication — a ‘speech act’. More precisely a data structure can be considered a locutionary act, an illocutionary act and in terms of a perlocutionary act.


                     Austin (1962) would refer to the act of creating a list-item as a locutionary act. Searle (1970) distinguishes between two aspects of such a locutionary act: the act of physically creating some form (an utterance act) and the act of using such form to refer to or predicate something (a propositional act). Consider the notion of a list-item in such terms. The material form of a list-item such as [26643 LOCATED AT PL0102] constitutes an utterance act — in this case a sequence of characters. However, each utterance within a list also corresponds to a propositional act because the symbols comprising the utterance are used to refer to things or to describe things. The use of this list-item as a propositional act relies upon the status of the symbols 26643 and PL0102 as identifiers. The relation LOCATED AT serves to describe the existential association between these two identifiers within this particular institutional context.

But each speech act is not only an utterance act and a propositional act it is also an illocutionary act. In other words, a list-item is typically created with the idea of communicating intent between one actor and others within some institutional context. Hence, a list-item such as [26643 LOCATED AT PL0102] is likely to have been created by a particular actor such as a production clerk with a particular intent in mind — to assert her belief that a stillage with this identifier is located at this particular production location in her production unit.

In its original form speech act theory focuses purely upon the pragmatic nature of language. It says little about the notion of institutional order except in assuming that speech acts necessarily are enacted within some institutional context. However, speech act theory does suggest that every illocutionary act has an effect which Searle, following Austin, refers to as a perlocutionary act. As well as an illocutionary act producing in the receiver an understanding of the utterance, such utterances are also normally intended to produce some effect on the subsequent behaviour of the receiver. Hence, by making an assertion an actor may convince or persuade another actor that a given stillage can be found at the indicated location (Searle & Vanderveken, 1985) and cause that actor to retrieve the thing identified.

To help unpack better the position of data structures within institutional order we do the following things in the next couple of sections. Firstly, we introduce a way of visualising the constitutive ‘mechanics’ of data structures using the notion of a business pattern and the associated design artefact, which we refer to as a pattern comic. Secondly, we apply such visualisation to making sense of the role of data structures within a particular institutional order — namely perpetual inventory checking. The current section introduces the context for our action research study and grounds it in the notion of business patterns. The next section explains the design artefact of a pattern comic and illustrates its use in unpacking the problem situation at the heart of the current business pattern of perpetual inventory checking. This sets the scene for describing our use of the design theory of business patterns and the design artefacts of pattern comics in the re-constitution of a new institutional order for this area of routine work.

The term perpetual inventory checking (PI checking for short) is used to refer to that institutional domain which comprised the context for a small piece of action research undertaken by the author. The essence of action research is encapsulated in its name (Avison, Lau, Myers, & Nielsen, 1999): it operates under the dual imperative of action and research, of practise and theory (McKay & Marshall, 2001). Action research seeks to generate new knowledge through engagement with ‘real-life’ problem situations. As Baskerville and Myers (2004) state, ‘unlike other research methods, where the researcher seeks to study organisational phenomena but not to change them, the action researcher is concerned to create organisational change and simultaneously to study the process’.


                     McKay and Marshall (2001) suggest that what makes action research different from mere consultancy is the overlaying of a problem-solving cycle with a research cycle. A conceptual framework or theory is generated and investigated within the relevant literature. A project of research is then planned and steps are taken to implement approaches suggested by the theory. The results of any intervention are monitored and evaluated in terms of the efficacy or otherwise of the suggested theory. Lessons from systematic evaluation are used to amend the theory and to plan and design further investigation. Sein, Henfridsson, Purao, Rossi, and Lindgren (2011) propose a particular model of action research suitable for design science research ‘which simultaneously aims at building innovative IT [design] artefacts in an organisational context and learning from the intervention while addressing a problematic situation’.

In terms of the notion of a problem-solving cycle this study involved participation in a design workshop at a large manufacturing facility, the Royal Mint. This organisation exports both mass-market and specialist tooled products to a number of countries world-wide. The workshop was established with the intended purpose of identifying problems with a current socio-technical system for checking stock at production locations and the re-design of this system to remove or reduce anomalies. As part of the workshop, four observation sessions of actual PI checking were conducted on the factory floor in various production units of the Royal Mint. Ten interviews of roughly 1h in length were also conducted with key stakeholders including production unit managers, production clerks, production operators and managers within engineering, finance and production planning. Our research cycle was overlaid upon this problem-solving cycle with the intention of building representations of the problem situation in terms of business patterns and through such modelling to help inform the design of a new institutional order for this situation. As such, our study can be seen to adhere to two principles proposed in the idea of Action Design Research (Sein et al., 2011), namely, doing practise — inspired research and developing theory-ingrained artefacts. Within this study, we used the design artefacts of pattern comics as a means of intervening productively with a particular problem situation, which we take as exemplifying a wider class of problem. Such design artefacts were also used to test the wider design theory of business patterns both in terms of making sense of the existing problematic but also in formulating design intentions.

The problem situation under investigation can be explained in the following terms. The manufacturing plant currently has to shut down operation for a few days twice a year in order to perform a stock check. This is mandated as part of the audit process for the company which sets a target of 99% stock location accuracy for the organisation. The process of checking inventory on a weekly basis was introduced two years prior to the time of the study into the plant, largely at the behest of the finance department, in an attempt to directly improve stock accuracy at locations. As a subsidiary goal it was hoped that if increased stock location accuracy (to a level such as 95%) could be proven through this checking then one of the two annual stock checks might be dropped, saving the organisation approximately £400,000 sterling each year. However, the results of PI checks prior to the workshop varied around 70% as measured across production units. It was hoped that the workshop would not only be able to identify reasons for this disparity, but also to suggest an improved process which might achieve the greater than 95% accuracy required.

Our first task within this study was to attempt to unpack PI checking as a business pattern, and through this exercise to develop a grounded conception of the notion of institutional order in this case. The idea of a business pattern draws upon the literature of pattern ‘languages’, on the nature of the organisational routine, on the importance of business narrative and of conceiving of particular ways of organising work as socio-technical systems.

The idea of a patterning of things is clearly central to many disciplines. For instance, the American architect Christopher Alexander (1964) proposed that architectural design is based on a number of archetypal patterns which encapsulate fundamental principles of building design. This idea has had much influence within other disciplines such as software engineering where design patterns are proposed as general solutions to programming problems (Hay, 1996). A pattern is anything which repeats across more than one situation. The things that repeat within a business pattern are various types of action undertaken by not only humans but also by ‘machines’ (such as IT systems) and somewhat by other artefacts (such as data structures). We therefore see business patterns as enacted routines of socio-technical action (Emery & Trist, 1960).

Within the Organisation Science literature, there is a developing consensus about three core features of routine action within organisations (Feldman & Pentland, 2003). An organisational routine is seen as a repetitive pattern (1) of inter-dependent actions (2) involving multiple actors (3) (Pentland & Feldman, 2008). We propose that a business pattern expands upon the notion of actors, action and patterning in terms of routines. Following Abell (2004), we propose that any business pattern is made up of the following standard elements:
                        
                           •
                           A finite set of actors, which may be individual or collective. They may be humans or institutions, artefacts or even ‘machines’.

A finite set of descriptive states relevant to some a domain of socio-technical organisation.

A weak order in time expressed on the set of states. This defines the chronology of states for the domain.

A binary causal relation between some pairs of states. The relations will run from earlier states to later states in the chronology. These ordered pairs can be considered events within the business pattern.

A finite set of actions that transform some elements of the states of the world. The actions transform earlier to later states in the chronology of the business pattern. Actions are partitioned into acts of articulation of data structures, the communication of intent which results from such articulation and the coordinated activity which results from such communication.

A mapping of the set of actions onto the set of actors. This will show which actor(s) performs which action.

Two features of a business pattern deserve further explanation — the partition of the set of actors into humans, machines and other artefacts and the partition of the set of actions into actions of articulation, communication and coordination. Firstly, the partition of the set of actors is proposed to better account for the nature of socio-technical action. Real patterns of routine action within some domain of organisation are almost never carried out by humans alone. To reflect the socio-technical nature of such routines we need to account for the actions of (Beynon-Davies, 2012) not only ‘machines’ such as computer systems but also other artefacts such as data structures (Pentland, Feldman, Becker, & Liu, 2012). Secondly, the partition of actions is proposed to better account for the relationship between representation, communication and coordinated performance in any constructive conceptualisation of the accomplishment of organising. This partition therefore defines a business pattern as a complex of three types of coupled action which for convenience we refer to as articulation, communication and coordination.

Perpetual inventory checking is a classic instance of a business pattern. It involves human actors at various production locations including a director of operations, a stock controller, many different production clerks and production operators such as forklift truck drivers. It also involves ‘machine’ actors such as the production IT system and data structures such as perpetual inventory counts. These actors take inter-dependent action, meaning that one actor's action is coordinated with that of others. The action is also repetitive action in that it takes place at different times in different production locations at least once per working week, continuously throughout the year. It is also recognisable in that performance of this routine action is enacted in ways that have to be accounted for within the work of production units.

Interestingly, this business pattern lacks any consistent representation within the Royal Mint. The operation of this business pattern is not specified in any central document. To access the notion of this socio-technical routine we had to observe people taking particular actions as well as asking people performing the routine on a weekly basis what they believe this routine constitutes as a pattern of action. What we got is a recounting of actions — a narrative consisting of a set of actions that embodies coherence and purpose for participating actors (Abell, 2004). This narrative clearly provides a resource which actors themselves use to account for and direct their own action (Feldman & Pentland, 2003).

Such narratives of socio-technical action clearly involve a number of different types of action. For instance, perpetual inventory checking can be seen to involve physical acts of locating stillages at defined locations across various production units within the Royal Mint. It also involves acts of communication between actors such as production clerks and the stock controller within the plant. There is also a substantial amount of articulation of data structures going on within this routine; particularly recording disparities between what stock the production IT system says should be at a production location and what is actually checked as being at this location.

Within the case of perpetual inventory checking much critical inter-action is between humans and machines. Decisions relating to the sample stock to be checked are made within the inter-active space created between the stock controller and the production IT system. As such, at least within this domain, the production IT system and potentially even stillages, make sense as critical actors within the accomplishment of this routine.

We use the term pattern comic to denote a structured visualisation of some business pattern. The typical elements of a pattern comic are illustrated in Fig. 1
                     . The finite set of action-states for the domain in question is visualised as a finite collection of comic cells, each cell describing one state of action within the overall pattern. The chronology of states is expressed by connecting cells with a dotted arrow to indicate events of transition between one state of a pattern and another.

Human actors are represented by named mannequins or stick-men within comic cells. Machine actors such as IT systems and other artefacts such as whiteboards are represented by appropriate icons. Actions are represented within a comic cell by a directed arc in which the actor enacting the appropriate action is placed at the foot of the arrow. Such action-arrows are also annotated to indicate not only the type of action undertaken but also the transformation resulting from a particular action. Hence, each comic cell expresses the action responsible for transforming earlier to later states in terms of the pattern of action.

Pattern comics are used to help represent the constituent elements of a business pattern and as such can be used to make sense of the constitutive ‘mechanics’ of data structures. To demonstrate this, we describe here its application to the business pattern of perpetual inventory checking. As mentioned in the previous section, this organisation had introduced a weekly routine of checking stock at locations across production units with the deliberate aim, in the words of the head of production planning, ‘of improving stock location accuracy’. This routine involves production clerks and a central stock controller communicating about variances between the locations of stock as reported by the production IT system and the location of stock observed by production clerks on the shop-floor.

As a business pattern, perpetual inventory checking can be expressed as a conventional written narrative in the following terms. The pattern begins with the stock controller from the planning department first deciding on the scheduling of the perpetual inventory (PI) check. Theoretically this can be scheduled any time during the working week but normally it's conducted at the same time every week for a particular production unit. The stock controller then runs an enquiry of the production IT system, inputting the parameters of stock he wishes to examine. It takes him some minutes to decide upon the stock to be checked, compiling a PI count sheet in the process.

The stock controller then sends an email to the relevant production clerk at the production unit indicating the time at which the PI count should begin and the start and end code numbers of stock to be checked. The production clerk then typically prints a report from the production IT system known as a stock location enquiry (STLQ) report within the range of lot numbers indicated.

The production clerk then goes on the factory floor and checks the stock. This means typically reading the stillage lot numbers off the label attached to each stillage and annotating her printed STLQ report as a record of the check having been made.

After completion of the check, an email is then sent by the production clerk back to the stock controller reporting variances - either that the stock is accurate at location or that stock at location is below or above the stock level indicated. The stock controller is then supposed to compile a composite report and in association with the relevant production clerks attempt to track variances. If variances cannot be located within a time-frame of a couple of days, then a request has to be made via email to the director of operations for authorisation such that the stock controller may write-off the ‘mis-located’ stock.


                     Fig. 2
                      visualises what we refer to as the articulation domain for perpetual inventory checking as a pattern comic. Within this domain workers are manipulating artefacts, such as lists, as locutionary acts. The articulation domain is therefore best expressed as that domain in which actors manipulate data structures (Tsitchizris & Lochovsky, 1982). Five key data structures are articulated in various ways within the pattern described above and as illustrated in this figure: a perpetual inventory (PI) count, a stock location enquiry (STLQ), a check result, a list of variances and a write-off list. Each cell within this pattern comic is numbered merely for ease of reference in the description that follows.

This visualised pattern illustrates the way in which data structures, such as lists, are manipulated by actors: how they are created or removed from existence; how they are updated or read by particular actors. For instance, within Fig. 2, many new instances of lists are created by particular actors to be read by other actors. What is interesting is that the structure of the content of each of these manipulated lists is much the same in each case. In essence, they consist of a series of list-items detailing stock at particular locations, such as [26643 LOCATED AT PL0102]. Each list-item within the relevant list represents an institutional fact held important to certain groups of actors within this institution, enabling them to coordinate their joint action.

To better understand the place of data structures within this particular institutional order we need to unpack the role of such data structures as illocutionary acts. For this we need a visualisation of what we refer to as the communication pattern associated with the particular articulation pattern. In other words, we need to make sense of the articulation of a particular data structure not only in terms of its propositional content but also its intent or illocutionary point. Within Fig. 3
                      the key acts of articulation from Fig. 2 are re-oriented vertically. Alongside each act we have drawn a comic cell which illustrates what the likely intent of the articulation is in each case. We have also indicated how a given act of articulation is ‘coupled’ to one or more given acts of communication within this particular institutional order. The idea of coupling is taken from the work of Dourish (2004) and we use it here to refer to the communicative affordances associated with the articulation of data structures. Actors use the manipulation of data structures within the articulation domain with the intention of affording communication between themselves and others. This means that the state of the articulation domain at any one time serves to communicate collective intentions.

The first act of articulation (cell 1 in Fig. 2) involves creating a perpetual inventory (PI) count. This list, as we have seen, is produced once per working week and issued by the stock controller to a production clerk working on a particular production unit. This list is clearly a ‘check-list’. In the case of the PI count each list-item here acts as an order or directive (Searle, 1975). Directives as speech acts are attempts by some communicator of a message of defined propositional content to get some interpreter to do something. It is the responsibility of the production clerk here to check the correspondence between the institutional ‘world’, as expressed by each list-item, and the physical world it refers to, namely, a particular stillage located within the identified production location.

The second act of articulation (cell 2 in Fig. 2) involves conducting a stock location enquiry (STLQ). Various human actors within the manufacturing plant produce such lists from the production IT system (a machine actor) at various points within a working week. In particular, following receipt of a PI count a given production clerk will produce an STLQ for the stock at the locations indicated by the PI count. This list in terms of content is likely to look much the same as the PI count. However, the intent of each list-item here is different. This list can be interpreted as a set of assertions by the production IT system that the institutional reality here (stock at a particular location) is as recorded in these list-items. In other words, the intention of this list is to describe the institutional ‘world’ in this case. Assertives are meant to make the ‘word’ match the ‘world’ (Searle, 1975).

The final list articulated in Fig. 2 (cell 6) is the write-off list. Again, the propositional content of this list is the same as the STLQ report and the PI count but the intention is different. Each list-item within this list acts as a declarative. Declaratives (Searle, 1975) are communicative acts that aim to change the institutional reality through the communication itself. In other words, declaratives are unique as illocutionary acts in having both a world-to-word and a word-to-world fit. Declaring a particular stillage as being ‘written-off’ makes this the case to the institutional order.

The typical material of speech act theory is clearly speech. Speech acts are also considered as isolated utterances between two actors, although there is typically a background assumption that a particular speech act is likely to be part of a larger conversation or dialogue (Searle, 1991). What is interesting is that there are relatively few references within the extant literature associated with Searle to the idea of treating data structures as speech acts, and these are never elaborated upon in any detail. Hence, the language/action tradition makes an intellectual leap in treating data structures as speech acts. Much of this literature also tends to assume that the only thing that changes between a spoken sentence and a data structure is the mode of delivery (the utterance). Like Agerfalk and a small number of others (Agerfalk, 2004; Agerfalk & Eriksson, 2004; March & Allen, 2014), within this section we want to challenge this background assumption. We shall argue that data structures not only differ from the spoken word in terms of delivery mode — the very materiality of data structures helps explain their special status within the constitution of institutional order. The subtle differences between what an utterance act means in relation to data structures as compared to speech have important implications in terms of the agency or actability associated with data structures.

In terms of acts of speech, it makes sense to talk of a speaker and hearer of some spoken message. In terms of a data structure, it makes more sense to refer to the writer and reader or perhaps creator and user of a data structure. Both an act of speech and an act of creating a data structure are likely to be embodied acts (Mingers, 2001), meaning that an actor uses one or more parts of her effector apparatus in making the spoken sentence or the data structure. In the case of the spoken sentence the actor primarily uses her larynx to manipulate sound. In the case of the data structure the actor creates or forms an artefact from some material, typically using further artefacts, such as pen and whiteboard or a digital computer, in the production of the data structure itself.

This difference in the terminology of actors is clearly related to a difference between the material from which data structures are formed as compared to the material of speech. Speech is composed of sound waves which degrade in air. Hence, the life of an act of speech is a short one and inherently bound to a specific performance of situated action between two or more actors — all of whom are co-present. A data structure, in comparison, is designed to persist beyond its' act of creation. Such an artefact is ‘disembodied’ and has a ‘life’ over and above the actors who produce and consume it.

Within acts of speech it makes sense only to think of one actor sending or ‘creating’ a series of sound waves and another actor (or a limited number of co-present actors) receiving or ‘reading’ such vibrations in air. A data structure is likewise initially created once by a certain actor. However, a data structure must also be deliberately disposed of or deleted once by some actor. There must be a deliberate act of ‘forgetting’ as well as ‘remembering’ in the case of data structures. Within its intervening ‘life’ the data structure may be read and possibly updated a number of times and these acts may be undertaken by a multitude of different actors. Therefore, any one data structure in terms of its life-history is better considered not as an individual act but as an institutional ‘conversation’ or ‘dialogue’ between some defined collection of actors.

The purpose of creating a data structure is to enable communication across time and space. The elements of a list as ‘utterance’ persist beyond their act of production (Derrida, 1971). The very persistence of a list-item enables it to fulfil a purpose subtly different from speech: that of referring to or predicating things across time and space to multiple actors. This means that the creator of a data structure is likely to be remote in time and space from the consumer of this data structure.

These properties of a data structure lead us to break with not only the conventional view but also the typical view of the data structure espoused in much of the language/action literature. Much of this literature still inherently assumes that only humans act in relation to data structures. In other words, humans have agency but data structures do not. Following Cooren (2004) and others (Agerfalk, 2004; Agerfalk et al., 2006) we feel it important to think through some of the consequences of applying speech act theory to the idea of data structures — namely, to think of data structures as having a certain agency or actability. If data structures do not act, what is the point of such artefacts? In other words, if a data structure cannot inform one or more actors independently from the creator of such a data structure, what is the purpose of having data structures?

The pattern comic in Fig. 3 attempts to illustrate this actability or agency of data structures as it applies to various lists used within the business pattern of PI checking. Within the communication domain of such a pattern it is not human actors that primarily inform other actors — it is a series of data structures which act in this capacity (actually in place of human actors). Within Fig. 3 it is the lists that act as key communicative actors within this domain. For instance, the PI count as a list, as we have seen, serves to direct the checking of stock by production clerks.

Within this section we want to move from considering the explanatory advantages of viewing data structures as key actors within institutional order to some of the design advantages of taking this alternative worldview.

As mentioned previously, the Royal Mint was actually experiencing problems with the pattern of action described in a previous section. The main problem was that such perpetual inventory checks were consistently under-reporting stock by as much as 30% as compared to that reported by the central production IT system used at the plant. In interviews with a number of organisational actors, particularly with production clerks, production operators (such as forklift truck drivers) and production unit managers, most appeared convinced that this disparity was an illusion. According to them, most stock didn't just disappear from production locations: the production IT system merely recorded it as missing. One production unit manager summed this up by saying that ‘The accuracy of stock within production units is generally good, but accuracy by locations across units is generally bad’. This echoed and confirmed a developing problematisation of the current system of checking stock within the institution itself. It led many to question the institutional order that was founded upon the use of lists and which supported a particular notion of stock location and its accuracy.

It became evident within such interviews that the Royal Mint, like many institutions, implicitly adopt a worldview of the data structure which is prevalent within the information disciplines — for this reason we refer to it here as the conventional worldview of the data structure. Most current conceptions of the data structure either explicitly or implicitly utilise a view of reality consistent with that evident in the work of Bunge (Wyssusek, 2006), in which reality (including institutional reality) is considered an organised collection of objective and observable things of interest. The conventional viewpoint also tends to adopt a related Fregean view of ‘language’ (Lyytinen, 1985), which proposes that statements in some formal language, such as those encapsulated in a set of data structures, correspond to objective facts about some real-world domain.

In the conventional view of a data structure such as a list, the items within the list represent propositions about the ‘things’ in some real-world domain. The institutional reality is also assumed to be observer-independent, meaning that it is the same for all actors. Hence, in terms of our case, a list-item which relates a given identifier for a stillage with a given identifier for a stock location serves as a proposition about these ‘things’ within the Royal Mint. Within formal logic list-items as propositions may take only one of two values, namely, true or false. In the area of databases any list-item written with concrete arguments is assumed to be true. Another way of saying this is that lists of this form are manipulated using only two operators: assert and retract (Gallaire & Minker, 1978). We either assert the truth of a given proposition by writing a list-item to the list or we retract a given proposition by deleting the corresponding list-item from the list. This implies that the state of a list as a data structure at any given time consists of true statements about the real-world domain it represents — in this case the location of stock within various production units and locations. This so-called correspondence view of truth implies that there is a necessary separation between institutional reality and data structures and also that a list-item as representation is taken to correspond to some real-world thing, or more likely a set of things important to some institutional reality.

Now consider the notion of stock location accuracy from this worldview. Given the necessary separation between institutional reality and data structures then notions of accuracy have to be dealt with as issues of correspondence. This is frequently expressed in the database literature through the process of consistency. Data structures have to be kept consistent as representations of the reality they represent. This means that, in the case of the manufacturing plant, continuous assertions and retractions have to be made to the list of stillage locations within the production IT system to keep it consistent with the movement of production material through production locations. The introduction of PI checking can be seen to be a direct result of this worldview. This process of articulating various data structures within this pattern of routine action was deliberately introduced to improve the consistency of the production database as a representation of its reality. But PI checking is interesting because although it is a pattern of action designed to confirm stock location accuracy, in practise, as we have seen, it is a pattern which continually declares a substantial degree of stock location inaccuracy.

Since the conventional view of the data structure sees it merely as representation, a design solution to the problem situation described above must involve improving in some way the consistency of the representation — the linkage between the data structure and the things it represents. One way of doing this would be to improve the tracking of stillages through the production plant, making sure that the location of stillages recorded within the database is updated more regularly and automatically. Hence, a number of organisational actors proposed that all stillages should be tagged with radio frequency identification (RFID) tags. By installing appropriate monitoring equipment and of course a relevant feed to the production IT system this, it was felt, would probably eradicate the current levels of inconsistency recorded through PI checking.

However, interestingly, the Royal Mint had conducted a pilot study of the use of RFID tagging previously and had concluded that it was not only an expensive solution but impractical because stillages are metal bins containing metal products. This means that stillages act as Faraday cages, which has the effect of causing electro-magnetic disturbance to radio communications demanded of RFID technology. Hence, installing RFID would likely increase rather than reduce the number of stock location ‘errors’ in the system.

Now consider this institutional breakdown from an actability world view. From this viewpoint the various lists generated by PI checking, as we have seen, would be treated as collections of communicative acts — each created by different actors with different intentions. Hence, the focus would be on considering PI checking as a routine of communicative competence. As we have done within our account in previous sections, the language/action view would direct us to consider not only what is communicated within the routine of action, but which actors communicate with which other actors and with what intent?

The aim of such analysis would be to improve communication by considering the uses made of communication. In working through this problem situation with a number of actors from the Royal Mint a consensus emerged that the current system of PI checking seemed to be a waste of everyone's time, because it was conceived as a routine of communication without consequences. One of the production clerks echoed a general sentiment when she stated, ‘I don't know why I have to do this every week; it's never been explained to me’. Even one of the production operation managers felt that ‘we have lost faith in what PI checking tells us’. Various lists were produced in this routine which confirmed variance or error, but the routine did not enable effective communication with actors on the floor of the manufacturing plant that would be able to address such variance or error in a timely fashion.

Applying Searle's notion of social ontology to this case extends this questioning beyond the notion of communicative competence to that of the constitution and re-constitution of institutional order. Thinking of data structures as institutional facts focuses upon the place of representation not only within communication but also in relation to perlocutionary action. The key questions from this viewpoint are not only how are data structures important to communication but why are we communicating? In other words, how is communication related to the continued and effective performance of work by multiple actors?

In making sense of the routine of perpetual inventory checking it became apparent that a key problem appeared to be that data supplied by doing PI checking had little influence on work practises performed upon the shop-floor. Because of the poor timeliness of reports back from planning, production workers such as production clerks and production unit managers could do little to address under-counting or over-counting of stock — making it particularly difficult to track ‘rogue’ stillages in this regard. One of the production unit managers questioned why production clerks did the checks — ‘The clerks just do the checks, but they don't feel any responsibility for the data’. Suggestions began to emerge that if data could be used immediately on the ground to make decisions on actions to be taken, then many stock variances could be immediately resolved, leading to consequent improvements in stock location accuracy.

To address the situation described in the previous section a new data structure known as a stock flow board was co-created in a further design workshop between the author and representatives of various production units (see Fig. 4
                     ). The stock flow board, as a data structure, effectively consists of a wall-mounted white board on which a series of named elements are clearly demarcated. It also includes an area for hanging two critical paper reports: a stock location enquiry (STLQ) report printed from the production IT system and a summary sheet used for recording stock location accuracy over a monthly period by production operators. Such boards are placed at each production location (identified by a barcode) within a production unit.

The pattern comic illustrated in Fig. 5
                      visualises the articulation domain relevant to the stock flow board. This comprises part of the new, designed, institutional order for the domain in question. Within the pattern of action visualised, key actors within production locations, such as machine operators and forklift drivers (collectively referred to here as production operators), are given responsibility for articulating certain elements within the stock flow board and other related data structures on a periodic basis throughout their working shift.

The two most critical events represented upon this pattern comic involve a comparison of stock at production location as indicated by an STLQ list and stock actually observed by production operators at location. Any disparity between such figures is attempted to be resolved immediately upon the shop-floor by the production workers themselves, and any action taken recorded upon the stock flow board. The articulation of this simple data structure allows production workers themselves to take action quickly to trace missing stock and address issues at source.

Once, at the end of the night shift, the production clerk for the production unit prints off a STLQ report which details so-called stock flow for the production location. From this report, which is pinned to the stock flow board, the production clerk updates the work in progress (WIP) figure and the percentage of stock still remaining to be processed after 24h (>24%) on the shop-floor. The percentage flow rate of stock is determined from these figures and written on the stock flow board. To the right of these figures a visual sign (up or down arrow) is then drawn by the production clerk to express satisfaction or not with current performance. A down arrow would be added to indicate a reduction in the flow rate from the previous day and an up arrow to record an improvement. If the flow rate observed is less than 90%, then this arrow is drawn in red ink: if flow rate is greater than or equal to 90% then blue ink is used.

The production clerk then transcribes the actual amount of stock at the location (Floor) and the indicated amount of stock according to the IT system at the location (Computer) from the board to a paper-sheet recording the shift results per month. When back in the production office the clerk would use these figures to update a stock graph.

At the start and end of a shift, the production operator working at the location would perform a stock check and update the floor and computer figures on the stock flow board, indicating the date and time at which this check was made. These two figures are then used to calculate the current ‘book to floor’ stock accuracy as a percentage and this is written on the stock flow board. If a variance is found between the production IT system count and floor count then a resolution action is raised. If the anomaly can be rectified by the production unit themselves, perhaps by moving stillages, then this is recorded on the board sheet. If the anomaly cannot be resolved then a stock issue is raised and escalated to production planning. The production team leader has to sign off any actions raised by ticking the team leader box against the action.

Once a week, the production clerk performs a stock check. Also, once a week, the cumulative stock graph will be inspected and a cumulated record of the week's data produced and sent as an email to the finance department. The finance department will then be expected to collate this data across production units and report back to each unit their stock accuracy as compared against other units.


                     Fig. 6
                      attempts to visualise part of the coupling between articulation, communication and coordination within the new institutional order. In particular, it demonstrates the coupling between certain acts of articulation with this data structure and the communication afforded by such articulation. Hence, the writing of some description in an action line upon the stock flow board asserts to actors within a production shift that a stock anomaly needs to be resolved. This serves to help workers decide on the scheduling of their own work. In particular, the production operator responsible for a particular production location will be directed by this entry. If the stock issue can be resolved then the production operator will update the completion data item upon the respective action line. This serves to assert her belief that the anomaly has been resolved. However, it is the responsibility of the shift team leader to authorise completion of a stock action. Hence, this is only declared to be the case to the rest of the team when he or she signs off the action by updating the T/L data item upon the stock flow board.

To take just one example from the illustration in Fig. 6: a production worker needs to signal to other actors within work that he has been unsuccessful in resolving a particular stock anomaly. To do this he updates the T2 (tier 2) data item of the relevant action line upon the stock flow board. This articulation serves to signal a collective intention, namely, the need to escalate the resolution of this anomaly to a higher layer of management. In Searle's (1975) terms, the articulation of this particular data structure creates an assertion — a statement of belief that something is the case by a particular actor. The team leader treats this assertion as a signal to escalate action. Such escalation is enacted by filling out a stock issue card which he hands over to the production clerk of the particular production unit. This is likely, in turn, to direct her to perform a more comprehensive stock check across the entire production unit.

The author revisited the manufacturing facility some three months after the design of this new data structure and its associated institutional order. At that time the new routine had been implemented in one production unit. A series of short interviews were held with key organisational actors. Operation of the new way of working was also observed on the shop-floor at a number of stock locations.

In talking to operating staff they apparently felt that the few minutes per day taken to update the stock flow board easy to achieve and there is evidence that staff on the shop-floor proactively take action themselves to make sure the counts in their location hit target. The production unit manager in charge of the new way of working commented that: ‘The visibility of the board is the critical thing… everyone can see it and no one wants to be shown up…’ After some initial resistance to changes in work practise on the part of certain production workers at other production units, this new way of working began to be rolled-out across the organisation in subsequent months.

A few months after the initial evaluation further interviews with organisational actors established that the routine is now being enacted by all production units and that operation of the new way of working has had a beneficial impact upon stock location accuracy. The Director of Operations reiterated that ‘a continual problem with the old perpetual inventory checking was that stock accuracy at production locations consistently showed at less than 70%’. The production manager in charge of the production unit that first introduced this new way of working had this to say: ‘The new process was initially implemented in one section of production in a matter of a few weeks with little expenditure…Since introduction of this new way of working stock accuracy is reporting consistently at 100% across production locations in my section…’ A year or so after the initial implementation the Head of Engineering confirmed to the researcher that the … ‘system is still working well and embedded at the Mint with massively improved results, with the WIP [work-in-progress] stock regularly 100% including the last 3 major stock checks’.

Even more recently, the head of finance at the Royal Mint produced the following summary list of held benefits arising from the introduction of this new way of organising perpetual inventory checking:
                        
                           •
                           Stock take variances have reduced

Confidence in system stock levels has increased

Business exposure has reduced

Behaviours have changed with regard to stock monitoring

Stock take value impact has also reduced

The organisation is now able to focus its efforts on areas not subjected to PI counts

The plant is considering the possibility of only conducting one year-end stock take (rather than two six-monthly stock takes) saving hundreds of thousands of pounds sterling per annum.

@&#CONCLUSION@&#

We began the paper with a quote from Shakespeare's The Comedy of Errors — ‘Until I know this sure uncertainty, I'll entertain the offered fallacy.’ The original institutional order of perpetual inventory checking is aptly described in such terms. Within this institution, various data structures were created and manipulated around the notion of stock and its location. The ‘facts’ were instituted through this process as an attempt to improve stock location accuracy. In actuality, the process continuously institutionalised stock location inaccuracy. But the manufacturing plant continued to operate effectively for a number of years with this fallacy until it knew for sure the uncertainty inherent in this process.

Within the paper we have attempted to highlight the importance that the sense made of data structures has upon our positioning of such data structures within the constitution of institutional order. From the conventional viewpoint, data structures are separate representations of an unquestioned and objective institutional reality. From the language/action viewpoint data structures are important communicative practises. From the social ontology perspective, data structures must be considered critical actors within the constitution of institutional order (Beynon-Davies, 2015a; Beynon-Davies, 2015b).

These differing viewpoints lead to a completely different conception of the nature of the ‘problem’ evident within an institutional domain such as PI checking. Each worldview also leads to a different emphasis within design, which consequently is likely to produce different ‘solutions’ in terms of attempts to re-constitute the institutional order.

The original institutional order, as we have described it, obviously takes the position that the production IT system and its associated database serves to generate a series of institutional facts, some of which assert the location of stock within production units. These facts act as statements about how the world should be as far as stock location accuracy is concerned within this domain. PI checking was originally introduced into the plant as a workaround to an evident breakdown in the institutional order declared through the production IT system. Obvious variances between what the IT system communicated about the state of the ‘world’ and what organisational actors asserted to be the case were addressed in weekly cycles of checking, reporting and acts of resolving variances. Through related actions involved with the making of several lists the institutional order was continuously re-established.

Within this case we have an example of a routine which was designed with the purpose of confirming to aspects of management the accuracy of stock at production locations. However, this routine continuously reflected poor accuracy back to management leading to a consistent lack of trust in the data structures which served to institutionalise the notion of stock location. The key conclusion arrived at by management was that production people were not managing stock effectively, particularly the accurate recording of stock and stock movements. In contrast, production people believed that stock was not disappearing on the factory floor and hence that the IT system must be recording stock incorrectly.

The drawing of pattern comics for the pattern of perpetual inventory checking helped us conduct a close analysis of this routine from both a language/action perspective and a social ontology view. This soon identified that this way of organising inventory checking would never be a system for recording stock accuracy — it would always be a system for identifying stock inaccuracy by location. This was because the way in which this ‘book to floor’ system was designed meant that it would never catch up with continuous stock movement on the ground. Also, the data fed back to production units was not timely enough for them to take corrective action, exacerbating apparent stock location inaccuracies. Hence, the routine could never be used as a way of improving the management of stock and as a direct consequence of improving stock location accuracy. Fixes such as investments in the technologies of stock monitoring might improve the recording of stock and hence reduce variance, but it would do little to improve the management of stock within production units by production operators.

In discussing the success of the new routine for PI checking introduced across the Royal Mint with production unit managers they suggested that the key to such success lies not in the process of checking itself but in the changes to the responsibilities of particular actors initiated by this new way of working. One shift manager involved in the re-design of work commented that: ‘In my opinion I think the key thing we did was placing the ownership of stock at production locations in the hands of production operators working at these production locations’. Perhaps more importantly, expecting these production operators themselves to account for their stock to not only their team leaders but all other actors on the shop-floor appears to have had a radical effect on stock location ‘accuracy’. This seems to have encouraged not only better communication but also better management of the movement of such stock by production operators. For instance, there appears to be evidence of production operators proactively moving and rearranging stock now according to ‘first in first out’ principles. This makes it quicker and easier for them personally to resolve stock anomalies on the ground. One production manager summed this up when he said that ‘it was about the people and ownership of the transactions that you pointed out early on in the process’.

We do not assume here that the perspective offered by the work of John Searle offers the last word in accounting for the nature of the data structure in terms of its place within the constitution of institutional order. Besides the fact that data structures have some unique features as communicative artefacts, the conceptual edifice which Searle has constructed is clearly not without its critics.


                     Habermas (1991), for instance, applauds Searle's conceptualisation of the mechanics of speech acts but questions the notion that a speech act involves simply the linear transmission of intentions from one actor to another. Habermas sees speech acts necessarily as joint action — as attempts to establish mutual understanding between actors. For Habermas, communicative action is ‘that form of social interaction in which the plans of action of different actors are coordinated through an exchange of communicative acts, that is, through use of language (or corresponding non-verbal expressions) oriented towards reaching understanding’. Hence, rather than portraying PI checking as a pattern of messages involving the transmission of intent, Habermas would focus on the way such action is used to establish mutual understanding about things held to be of significance to actors.


                     Derrida (1971) also has criticised Austin's original idea of an illocutionary act. He argues that any speech event is framed by a ‘structure of absence’ (the words that are left unsaid due to contextual constraints) and by ‘iterability’ (the constraints on what can be said, given by what is said in the past). Hence, the ways in which facts are instituted is not only a matter of ontology, it is also a matter of deontology. Searle (2005), himself, has acknowledged in his recent work that the status in his functions carry with them not only ontological assumptions but also assumptions about both positive power (rights, permissions, authorisations etc.) and negative power (obligations, duties, responsibilities). It is probably no accident, for instance, that the focus upon ‘ownership’ of data and the consequent responsibilities reliant on such ‘ownership’ proved such an important catalyst to institutional change within the case described in this paper.

Finally, and related to the issue of power, Searle has been criticised for focusing on a notion of an institution purely as a coordination mechanism which relies upon the collective agreement of participants in the institution. In many institutional situations people may not agree with institutional practises but follow them because they are coerced or compelled to do so (Sanchez-Cuenca, 2007). Hence, within our case, production clerks undertook a weekly routine of action, with little understanding, enthusiasm or commitment, but merely because they were compelled to do so by management.

One of our key aims within this paper has been to demonstrate, through consideration of a case, how the ontological positioning of data structures is of critical importance to the information disciplines. Rather than treating data structures as accepted and unexamined background, we need to unpack more clearly the critical place of the data structure within contemporary institutional life. The focus of the current paper has been on explaining how data structures help constitute intra-institutional order. We have used Searle's notion of social ontology as a useful way of constructing a more sophisticated accounting of the relationship between data structures and institutions (Beynon-Davies, 2015b). But in doing this we have tried to take what we see to be the next logical step. We have tried to strengthen the case for considering data structures as material actors in the constitution of institutional order. We have found the notion of a business pattern and the associated design artefact of a pattern comic extremely useful for unpacking the ‘mechanics’ of data structures as institutional actors.

We acknowledge that other readings are possible and indeed desirable of institutional situations such as the one described in this paper. However, what is hopefully clear is that any such reading of the data structure must provide better theorisation of not only how data structures constitute intra-institutional order but how such constitutive processes work within the inter-institutional sphere. To take the example of the identifier, much discussed in the current paper, various instances of this artefact are crucial for constituting not only the actions of particular people working within particular institutions, they are also critical in the constitution of action between institutions (Eriksson & Agerfalk, 2010; Agerfalk & Eriksson, 2011). This suggests that much more work needs to be conducted into the ways in which identifiers for persons, places, events and products (to name just a few things important to the constitution of our contemporary ontologies) institute facts.

@&#ACKNOWLEDGEMENTS@&#

I would like to thank the Royal Mint for allowing me access to the routine of action described in this paper. My thanks especially go to Dr. Tony Baker for facilitating this particular research study. I would also like to thank a series of reviewers of various versions of this paper which contributed greatly to helping me better reframe its presentation. A paper describing the use of the design artefact of pattern comics within information modelling was presented at the European Conference on Information Systems 2013, Utrecht. A more detailed paper describing the broader use of this design artefact was presented at the European Conference on Information Systems 2014, Tel Aviv.

@&#REFERENCES@&#

