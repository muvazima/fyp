@&#MAIN-TITLE@&#Public facility location using dispersion, population, and equity criteria

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Population, Dispersion and Equity Criteria in public facility location.


                        
                        
                           
                           Generation of good, implementable solutions for a location problem.


                        
                        
                           
                           Modeling a problem from the viewpoint of an OR/MS practitioner.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Location

OR in societal problem analysis

Health care

Public policy

@&#ABSTRACT@&#


               
               
                  From a practical perspective, the paper demonstrates that the appropriate use of dispersion, population, and equity criteria can lead to fairly good solutions with respect to the p-median objective. The only stipulation is that the decision maker verifies (through simple constraint checks) that the chosen locations meet the dispersion, population, and equity criteria. An empirical investigation is conducted to obtain appropriate values for these parameters. From a location science perspective, a new location model that accounts for equity and efficiency simultaneously is studied and analyzed. Specifically, the p-maxian problem with side constraints on dispersion, population, and equity is developed, its NP-completeness established, and valid inequalities and bounds derived. Computational tests show encouraging results.
               
            

@&#INTRODUCTION@&#

In the OR/MS literature, several researchers have developed models and solution methodologies for locating public facilities such as emergency vehicles, libraries, hospitals, and fire stations. The focus usually is on minimizing a single objective function, but there also has been a focus on obtaining efficient solutions satisficing several objectives. The objectives used are usually some function of the response time; typical functions are the average response time and the maximum response time. There are many review articles for location theory and application papers. These include those by Daskin (2008), ReVelle and Eiselt (2005), Hale and Maberg (2003), Avella, Benati, Martinez, and Dalby (1998), Owen and Daskin (1998), and Brandeau and Chiu (1989). For a good review of recent trends specifically in the context of public facility location modeling, see Serra and Marianov (2004). Despite the impressive list of citations in these papers, there is a significant gap between model development and analysis and usage of these models to make actual locational decisions. There are, of course, some notable exceptions. Dell et al. (2009) discuss location of new schools combined with closing of existing schools as a strategy to improve transportation access to school children in Chile. Their work is helping shape the school access debate in the Chilean Education Ministry. Antunes (1999) developed a model for locating waste management facilities in Portugal. The model he developed was a variant of existing location models and provided a good starting point for policy makers in Portugal. Mehrez, Sinuany-Stern, Arad-Geva, and Binyamin (1996) discussed the location of a hospital in a rural area of Israel. They tried various models though none fit exactly to the specifications of the problem at hand. Finally, they ended up using a screening method to suggest alternatives. A well documented success story is Larson’s Hypercube queuing model which is used by several police departments to suggest locations and deployment strategies for vehicles (Larson, 1974). Another successful application of public facility locational analysis is due to Eaton, Daskin, Simmons, Bulloch, and Jansma (1985) who employed the Maximal Covering Location problem due to Church and ReVelle (1974) to deploy ambulances in Austin, Texas.

We now focus on practical public facility location studies to motivate our work. The paper by Price and Turcotte (1986) discusses their work as consultants for locating a blood bank in Quebec City. They adopted an intuitive approach, using a simplistic gravity location model to make a comparison between the five sites that they had shortlisted. The reasons that they cited for not using a scientific approach were the lack of data availability and time for the analysis. The work of Carson and Batta (1990) is a good example of a failed locational project. They adopted a scientific approach, which led to an interesting model for locating a campus ambulance but required considerable effort in terms of data collection. Despite the fact that the model was empirically validated, the results were not implemented because of a change of administration and reluctance on part of the students to wait in the cold for so few calls. The project suffered from its inability to capture “political” constraints and from the “vanishing advocate” phenomenon discussed in Larson and Odoni (1981). In a recent talk (Berman & Krass, 2010) the median problem with unreliable facilities was presented. An interesting result of the analysis was that the facilities tend to colocate (or draw together) when the reliability level drops. At the same time, facilities tend to be dispersed when in less populated areas. The authors examined empirical data of hospital locations in the City of Toronto, Canada, and found that both dispersion and population criteria are present when unreliable public facilities are in question.

In this paper, we attempt to answer the following question in the context of the p-median problem on a network: How bad can a locational choice be provided that the decision makers use dispersion, population, and equity criteria. Six other papers that the authors are aware of which address similar questions are: (1) Larson and Stevenson (1972), who performed calculations with spatially homogeneous demands which suggest that the mean travel time resulting from totally random distribution of facilities in the region served is only reduced by 25% when the facilities are optimally located; (2) Larson and Odoni (1981), who performed calculations to show that ignoring the size of a city block in computing travel distances induces an average error of no greater than 1/3 the size of the block; (3) Batta and Leifer (1988), who demonstrated that restricting facility location to demand points and barrier vertices gives good results for the p-median problem on a Manhattan plane both with and without travel barriers; (4) Love and Walker (1994), who show that using a combination of norms yields an accurate approximation to actual road distances under a variety of circumstances; and (5) Francis, Lowe, and Tamir (2004) who study the loss in accuracy when demand points are aggregated so as to make the problem more computationally tractable, and provide a summary of the work of several researchers in this area; and finally (6) Burkey, Bhadury, and Eiselt (2012) who demonstrated that actual locations of hospitals in four states in the US yielded median and equity values very close to the optimal p-median value and equity value implied by the optimal p-median solution, respectively. This last paper provides the motivation for our study by suggesting that typical criteria used by decision makers in practice may in fact yield optimal solutions that would be suggested by traditional median based location models.

This paper makes two types of contributions. The first is practical (intended for policy makers with little knowledge or belief in quantitative solution methods for public facility location problems) and the second is methodological (intended for location scientists desiring the development and analysis of a location model which simultaneously accounts for efficiency and equity).

Practical aspects: From a practical perspective, the main aim of this paper is to demonstrate that appropriate use of dispersion, population, and equity criteria can lead to fairly good solutions with respect to the p-median objective. Thus a decision-maker who has little knowledge or belief in quantitative solution methods can select the location of the p facilities in any manner they wish. The only stipulation is that they verify (through simple constraint checks) that the chosen locations meet the dispersion, population, and equity criteria. To facilitate this, an empirical investigation is conducted to obtain appropriate parameter values for these criteria.

Methodological aspects: The methodological contributions result from the worst-case analysis used to validate the practical approach. Specifically, the p-maxian problem with side constraints on dispersion, population, and equity is formulated and analyzed. After demonstration that the model when location is restricted to a finite set is NP-complete, valid inequalities are developed and used to improve its solvability. Effort is also devoted to the development of bounds. Thus a location problem that accounts for efficiency and equity simultaneously is studied and analyzed, resulting in the identification of parameter values that decision makers can then use to generate good quality solutions.

Lastly, some comments are in order regarding the choice of the three criteria that we focus on in our analysis, and a limitation of our study. The dispersion and population criteria are proxies for measures of efficiency, that are typically focused on minimizing the costs of providing the service. On the other hand, the equity criterion accounts for fairness of the service, and addresses an important consideration that arises often in the location of public facilities. The importance of examining the tradeoffs between efficiency and equity objectives in public facility location has been well established in both theory and practice dating back to McAllister (1976), and more recently by Burkey et al. (2012) specifically in the context of hospital locations. The main aim of this paper is to demonstrate that appropriate use of dispersion, population, and equity criteria can lead to fairly good solutions with respect to a widely used efficiency measure in the location literature, namely the p-median objective. We are not attempting to establish that these three criteria are the three most important criteria in a given location problem. Clearly, other criteria (such as a covering criterion) may be relevant in a given context, and it would be interesting to study the quality of solutions generated by the proposed criteria with respect to such criteria. We suggest this as a future area of study.

The rest of this paper is organized as follows. Notations are introduced in Section 2, and in Section 3, we develop formulations to study the worst-case performance of location problems that employ the population, dispersion, and equity criteria with respect to the median performance measure. In Section 4, we discuss our computational results and present a sensitivity analysis with respect to a range of values of the parameters used in these three criteria. In Section 5, we present our conclusions.

Consider a network G
                     =(N,
                     L) in which N is the set of nodes and L is the set of links. Let ∣N∣=
                     n and the elements of N be labeled 1,2,…,
                     n. Let l(i,
                     j) denote the length of a link (i,
                     j)∈
                     L and d(x,
                     y) denote the length of a shortest length path between two points x and y in G. On any link (i,
                     j) we define a node k breakpoint as a point x
                     
                        k
                      such that d(x
                     
                        k
                     ,
                     k) through node i and node j are exactly equal. Note that a link may have at most (n
                     −2) breakpoints. The total arrival rate of calls into the system is λ, with the arrival from node i being λ
                     
                        i
                     . Thus the relative frequency of calls from node i is w
                     
                        i
                     
                     =
                     λ
                     
                        i
                     /λ. There are p facilities to be located on the network. Facility locations can be made at nodes and at any point along a link, and facilities are assumed to be of infinitesimal size. Response units are housed in these facilities.

There is a natural tendency to favor choices that spread or disperse emergency facilities in the geographical region that they service. To capture this dispersion criterion mathematically, we assume that the distance between any pair of facilities in a candidate solution is greater than or equal to a threshold λ, or d(x
                     
                        i
                     ,
                     x
                     
                        k
                     )⩾
                     λ for i, k
                     =1,…,
                     p, i
                     ≠
                     k. Dispersion alone is probably not the only criterion that decision makers would use when making public facility location decisions. If the population is not evenly distributed, decision makers are likely to assign more facilities to heavily populated areas. To capture this population criterion, we assume that the distance of the closest facility to a population center is less than or equal to a threshold, where the threshold itself is inversely proportional to the population center’s weight. Mathematically, if β
                     
                        s
                      is the distance of the closest facility to a node s, then we impose the constraint β
                     
                        s
                     
                     ⩽
                     A/w
                     
                        s
                     , where A is a factor of proportionality. A high value of A implies that the decision makers are not too concerned by choosing locations that do not account for population variations in the geographical region. A low value of A implies much concern for population variations in facility location decisions. A third criterion that is often relevant in the context of public facility location is fair or equitable access to the facilities, where decision makers have to ensure that no demand point is beyond an established threshold distance (B) from its closest facility. This is especially true in contexts that involve emergency response (see, for example, the Oklahoma City Fire Department Fire Station Location Study, 2006). Mathematically, we impose the constraint β
                     
                        s
                     
                     ⩽
                     B, where β
                     
                        s
                      is as defined earlier. For a discussion of the use of these criteria in the context of undesirable facility location, see Murray, Church, Gerrard, and Tsui (1999).

@&#ANALYSIS@&#

The objective of the p-median model is to locate p facilities so as to minimize the average travel time to a call, under the assumptions that (i) a call is always answered by a response unit at the closest facility, and (ii) such a response is always available for service, i.e., it is not busy servicing another call. Obviously, the model is applicable in the situation when λ
                     →0 or when the number of response units available at each facility are large.

We know from Hakimi (1964) that an optimum solution to the p-median model can be found among the nodes of the network. Therefore, the optimum p-median value can be written as
                        
                           (1)
                           
                              f
                              =
                              
                                 
                                    
                                       min
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             p
                                          
                                       
                                       ∈
                                       N
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       ∈
                                       N
                                    
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    s
                                 
                              
                              
                              min
                              [
                              d
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              s
                              )
                              ,
                              …
                              ,
                              d
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              ,
                              s
                              )
                              ]
                              .
                           
                        
                     By definition, the worst-case value is
                        
                           (2)
                           
                              g
                              =
                              
                                 
                                    
                                       max
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             p
                                          
                                       
                                       ∈
                                       G
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       ∈
                                       N
                                    
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    s
                                 
                              
                              
                              min
                              [
                              d
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              s
                              )
                              ,
                              …
                              ,
                              d
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              ,
                              s
                              )
                              ]
                              .
                           
                        
                     
                  

Other than to compute how inefficient a solution can be in terms of the p-median objective, there are several other inherent applications of a solution to (2). For example, the optimization problem on the right side of Eq. (2) is referred to in the literature as the p-maxian problem (see, e.g., Erkut, Baptie, & Hohenbalken, 1990; Erkut & Neuman, 1989), and this has applications in the location of obnoxious facilities. Church and Garfinkel (1978) show that the p-maxian is equivalent to the 1-maxian problem and propose a method to solve it. Minieka (1983) and Ting (1984) provides more efficient methods for solving this problem. All these methods take advantage of the fact that the search for the 1-maxian can be restricted to a finite set of points. For more recent work in this area, see the paper by Cheng and Kang (2010), who study the p-maxian on an interval graph.

Recall from the introduction that our objective is to study how bad the p-median value can be for certain parameter values for the dispersion, population and equity criteria. In other words, we would like to demonstrate that appropriate use of dispersion, population, and equity criteria can in fact lead to fairly good solutions with respect to the p-median objective. With that as our goal, the problem of interest can then be formulated as:
                        
                           (3)
                           
                              (
                              P
                              )
                              
                              Maximize
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       ∈
                                       N
                                    
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    s
                                 
                              
                              
                              
                                 
                                    β
                                 
                                 
                                    s
                                 
                              
                           
                        
                     Subject to the constraints:
                        
                           (4)
                           
                              d
                              (
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    l
                                 
                              
                              )
                              ⩾
                              λ
                              
                              for
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              p
                              -
                              1
                              ,
                              
                              l
                              =
                              j
                              +
                              1
                              ,
                              …
                              ,
                              p
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    Min
                                 
                                 
                                    j
                                 
                              
                              {
                              d
                              (
                              s
                              ,
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              )
                              }
                              ⩾
                              
                                 
                                    β
                                 
                                 
                                    s
                                 
                              
                              
                              for
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              p
                              ,
                              
                              s
                              ∈
                              N
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    Min
                                 
                                 
                                    j
                                 
                              
                              {
                              d
                              (
                              s
                              ,
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              )
                              }
                              ⩽
                              A
                              /
                              
                                 
                                    w
                                 
                                 
                                    s
                                 
                              
                              
                              for
                              
                              s
                              ∈
                              N
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              ∈
                              G
                              
                              for
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              p
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    β
                                 
                                 
                                    s
                                 
                              
                              ⩽
                              B
                              
                              for
                              
                              s
                              ∈
                              N
                           
                        
                     The objective function (3) is to maximize the weighted travel distance from nodes to their closest facility. Constraint (4) ensures that distances between facilities are at least λ. Constraint (5) ensures that the distance between a node and its closest facility is computed correctly. Constraint (6) ensures that the distance between a node and its closest facility is less than or equal to a threshold, where the threshold itself is inversely proportional to the node’s weight. Constraint (7) says that a facility must be located on the network itself. Finally, constraint (8) ensures that there is a facility within distance B of each demand node.

The above formulation belongs to a class of problems referred to in the literature as network location problems with distance constraints. One of the earliest reference to this class of problems is Toregas and ReVelle (1972). Other relevant papers are those by Church and Meadows (1979), Church (1984), and an early survey of related articles by Moon and Chaudhry (1984). More recently, Berman and Huang (2008) studied the minimum weighted covering problem in such a context, and establish that even checking for the feasibility of a given solution with respect to the distance parameters is NP hard, and developed heuristics for solving the problem. Network location problems with distance constraints are typically very hard to solve, and efficient procedures are usually possible for only the simplest cases. This is due to the non-convexity of the solution space that the distance constraints introduce. Convexity is retained, however, for a class of problems with upper bounded constraints and when the underlying network structure is a tree. This enables the development of efficient procedures such as in Dearing, Francis, and Lowe (1976), Francis, Lowe, and Ratliff (1978). Erkut, Francis, and Lowe (1988) develop a methodology that could be used to convert a continuous tree network location problem with distance constraints to mathematical programming problems. Erkut, Francis, and Tamir (1992) use this methodology in the context of distance constrained multifacility minimax location problems on tree networks. All these articles deal with the location of ‘desirable’ facilities, for which the distance between facilities and demand points is, in some sense, minimized. Another class of problems, that is relevant to our problem, is the location of obnoxious facilities. These problems attempt to maximize the distance between facilities and demand points, which is the objective of our problem. These are also referred to as multifacility maxisum problems by Erkut and Neuman (1989). Kuby (1987) and Erkut et al. (1988) consider discrete versions of this problem. A recent review article by Farahani, Seifi, and Asgari (2010) covers multiple criteria facility location problems in general, and includes a good discussion of obnoxious facility location.

Problem (P) is hard to solve, especially since the location of facilities is unrestricted. Our approach will be to restrict location to a finite set of sites, and use this to derive a valid upper bound on the optimal value of (P). We will start, however, by analyzing the complexity of (P) for a few simple cases.

The first case that we consider is the 1-maxian with distance constraints. Constraint set (4) is not relevant in this case. Along a link, the 1-maxian achieves a maximum at either of the end points of the link or at one of the finitely many break points along the link. Since feasibility of a break point with respect to the distance constraints can be easily verified, the optimal solution can be determined by a straightforward procedure, whose order is polynomial in the number of links and vertices of the underlying graph.

The next simple case is when the underlying network structure is a chain. In this case, problem (P) can be reformulated as a linear program. This is possible because all distances can be computed with respect to a common reference point, which could be either end of the chain. The decision variables can be defined as x
                        
                           i
                        , i
                        =1,…,
                        p, where x
                        
                           i
                         is the distance of facility i from the reference point. Constraint (4) in (P) can then be written as ∣x
                        
                           i
                        
                        −
                        x
                        
                           j
                        ∣⩾
                        λ for all i, j
                        =1,…,
                        p, i
                        ≠
                        j. Constraint (5) can be written as ∣d
                        
                           s
                        
                        −
                        x
                        
                           i
                        ∣⩾
                        β
                        
                           s
                         for i
                        =1,…,
                        p, s
                        ∈
                        N, where d
                        
                           s
                         is distance of node s from the reference point. Thus, (P) can be solved in polynomial time on a chain network, as the number of variables and constraints in the resulting linear program are polynomial.

The above argument holds even in the case of a tree network (not necessarily a chain), as long as the facility locations are restricted to lie on a path. The tree network can be represented on a rectangular coordinate system and the distances can be computed correctly. This is illustrated in Fig. 1
                         in which facility location is restricted to be on the path 1−2−5. Using node 1 as the origin, the distances between facilities and nodes can be computed correctly. This, however, is not possible if we allow location at any point on the tree. Then the distance between x
                        
                           i
                         on link 1−3 and x
                        
                           j
                         on 2−4 cannot be computed correctly for the given rectangular coordinate transformation. For any given rectangular coordinate transformation, there will exist at least one pair of such links for which the distance cannot be computed correctly.

Nevertheless, for a specific assignment of facilities to links on the network, the optimal locations of the facilities on the respective links can be found by formulating a linear program. The decision variables can be defined as x
                        
                           i
                        , i
                        =1,…,
                        p, where x
                        
                           i
                         is the distance of facility i from either of the two end nodes of the link to which facility i is assigned. The number of such linear programs is, however, exponential in n and p. Therefore, this is not a computationally feasible approach.

We now consider the case of a general network. As in the case of a tree network, the optimal locations of facilities can be determined by solving a linear program for a given assignment of facilities to links. As an example, consider the network shown in Fig. 2
                        . Assume that facilities 1 and 2 are to be located on the network, on links 1−2 and 1−3 respectively. Let x
                        1 and x
                        2 represent the distances of facilities 1 and 2 from nodes 2 and 3 respectively. Then, the distance between facilities 1 and 2 can be written as
                           
                              
                                 d
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 Min
                                 
                                    
                                       
                                          2
                                          +
                                          
                                             
                                                x
                                             
                                             
                                                1
                                             
                                          
                                          +
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          7
                                          -
                                          
                                             
                                                x
                                             
                                             
                                                1
                                             
                                          
                                          -
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        Such a constraint can be incorporated within a linear program and thus the problem is solvable polynomially for a given assignment of facilities to links. As mentioned earlier, such an approach is not computationally feasible, since there are an exponential number of possible assignments of facilities to links.

It may be possible, however, to develop efficient procedures to solve (P) on a general network for certain values of the parameters λ, A and B. For example, Problem (P) for large values of A and B and relatively small values of λ, reduces to the p-maxian (which is equivalent to the 1-maxian), and can therefore be solved polynomially. It is not clear, however, that the problem is polynomially solvable for general values of A, B, and λ. In fact there is considerable evidence that leads us to conjecture that problem (P) is NP-complete. For example, for a certain version of the p-maxian problem where the objective is to maximize the sum of the distances between facilities and demand points and the distances between the facilities, Hansen and Moon (1988) have shown that when location is restricted to a discrete set of points the problem is strongly NP-complete; and Tamir (1991) proved NP-completeness for the more general case of unrestricted location.

We now consider a discrete version of problem (P), where location is restricted to a finite set of sites. We first note that the discrete version could essentially solve the unrestricted version of the problem, if it can be shown that the solution to the unrestricted location could be restricted to a Finite Dominating Set (FDS) of locations. In fact, the identification of FDSs has been studied extensively in the literature - see for example, the definition of Network Intersection Point Set or NIPS (Church & Meadows, 1979), the Cicle Intersect Point Set or CIPS that was defined in the context of planar location poblems (Church, 1984), and the Multiple Constraint Distance Intersect Point Set or MIPS (Berman & Huang, 2008). Since the size of the FDS could be exponentially large, especially in the presence of dispersion constraints (Berman & Huang, 2008), other forms of discretization have been considered in the literature – for example, Kuby, Lim, and Upchurch (2005) consider the added node dispersion problem for dispersing additional discrete sites along arcs of the network, and Schobel, Hamacher, Liebers, and Wagner (2009) consider the continuous stop location problem as a discrete location problem by identifying a finite dominating set. Although the discrete version of the problem is hard to solve (as established by the NP-completeness result a little later), we can at least formulate it in a concise manner unlike the unrestricted version. We propose several equivalent formulations for the discrete location problem, examine their features, and suggest a way to discretize locations that helps us develop an upper bound for the problem of interest.

Let Z represent the set of sites available for facility location. Furthermore, let d
                        
                           ij
                         denote the length of a shortest distance path between sites i and j, and α
                        
                           j
                         be a 0–1 decision variable so that α
                        
                           j
                        
                        =1 if a facility is at site j and 0 otherwise, for j
                        =1,…,
                        z. Let the sites be labeled 1,…,
                        z. We define the index sets H
                        
                           s
                        
                        ={j:d
                        
                           sj
                        
                        ⩽
                        min(A/w
                        
                           s
                        ,
                        B),
                        j
                        =1,…,
                        z}, s
                        =1,…,
                        n. Each set H
                        
                           s
                         contains the indices j of the possible locations which are within acceptable distance (i.e., minimum between A/w
                        
                           s
                         and B) of node s. With this notation in place, the problem (P) can be reformulated as the following bilinear programming problem:
                           
                              (9)
                              
                                 (
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             Z
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 )
                                 
                                 Maximize
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          s
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       s
                                    
                                 
                                 
                                 
                                    
                                       β
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        Subject to the constraints:
                           
                              (10)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          z
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 p
                              
                           
                        
                        
                           
                              (11)
                              
                                 (
                                 1
                                 -
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 
                                 
                                    
                                       α
                                    
                                    
                                       l
                                    
                                 
                                 )
                                 
                                 M
                                 +
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 
                                 
                                    
                                       α
                                    
                                    
                                       l
                                    
                                 
                                 
                                 
                                    
                                       d
                                    
                                    
                                       jl
                                    
                                 
                                 ⩾
                                 λ
                                 
                                 for
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 z
                                 -
                                 1
                                 ,
                                 
                                 l
                                 =
                                 j
                                 +
                                 1
                                 ,
                                 …
                                 ,
                                 z
                              
                           
                        
                        
                           
                              (12)
                              
                                 (
                                 1
                                 -
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 
                                 
                                    
                                       D
                                    
                                    
                                       s
                                    
                                 
                                 +
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 
                                 
                                    
                                       d
                                    
                                    
                                       sj
                                    
                                 
                                 ⩾
                                 
                                    
                                       β
                                    
                                    
                                       s
                                    
                                 
                                 
                                 for
                                 
                                 s
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 ,
                                 
                                 j
                                 ∈
                                 
                                    
                                       H
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                H
                                             
                                             
                                                s
                                             
                                          
                                       
                                    
                                 
                                 α
                                 [
                                 j
                                 ]
                                 ⩾
                                 1
                                 ,
                                 
                                 for
                                 
                                 s
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 0
                                 
                                 or
                                 
                                 1
                                 
                                 for
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 z
                              
                           
                        The decision variables in the above formulation are the α
                        
                           j
                        ’s which are binary variables (14): α
                        
                           j
                        
                        =1 indicates that a facility is located at site j and α
                        
                           j
                        
                        =0 otherwise. Constraint (10) ensures that only p facilities are located among the z sites. Constraints (11)–(13) are analogous to constraints (4)–(6), respectively. Constraints (11) and (12) are big-M constraints. The role of the constraints (12) is to calculate the distance β
                        
                           s
                         between a node s and the closest open facility. Since a facility must be opened within an acceptable distance (i.e., at most equal to the minimum of A/[w[s] and B) of any node s, we have a number ∣H
                        
                           s
                        ∣(and not ∣Z∣) of constraints of form (12) for each node s. Indeed, H
                        
                           s
                         is the set of sites that are within min(A/w[s],
                        B) from s and constraint (13) ensures that at least one facility will be opened at one of the sites j
                        ∈
                        H
                        
                           s
                        . The values of the positive constants M and D
                        
                           s
                         must be chosen such that they do not exclude any admissible solution. From a computational perspective, it is important to set them equal to the smallest possible value allowing for the above objective to be attained. Assigning a very large value (say 105) to M and D
                        
                           s
                         would produce a valid (integer) model. However, its continuous relaxation would be very loose and would likely generate an excessive number of branching and increase the computational time. It is straightforward to see that λ and min(A/w
                        
                           s
                        ,
                        B) are the smallest values that M and D
                        
                           s
                         can respectively take to guard us from rejecting any admissible solution.
                           Theorem 1
                           
                              Problem 
                              
                                 
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    )
                                 
                               
                              is NP-complete.
                           

We show the above when the set Z is restricted to the set of demand nodes N. This can be shown by reducing a known NP-complete problem (in this case the dominating set problem) to the given problem. The decision version of the dominating set problem can be stated as follows: Given a graph G
                              =(N,
                              L), and a positive integer K
                              ⩽∣N∣, is there a dominating set of size K for G, i.e., a subset N′⊆
                              N with ∣N′∣=
                              K such that for all i
                              ∈
                              N
                              −
                              N′ there is a j
                              ∈
                              N′ for which (i,
                              j)∈
                              L? Let G′=(N,
                              L) be derived from G such that l(i,
                              j)=1 for (i,
                              j)∈
                              L, and w
                              
                                 s
                              
                              =1 for all s
                              ∈
                              N. Consider the problem P
                              
                                 N
                               over G′ with the parameters (A, B and λ) all set to unity, and p
                              =
                              K. It is easy to verify that the graph G has a dominating set of size K if and only if the solution to P
                              
                                 N
                               over G′ is equal to n
                              −
                              K.□

If the set N′ is required to be both a dominating and independent set of size K (which is also NP-complete), then letting A
                        =1,B
                        =1 and λ
                        =2 in the solution of P
                        
                           N
                         over G′ will also yield the same result.

We introduce the following notations: M
                        
                           jl
                        
                        ∈
                        R
                        +, j
                        =1,…,(z
                        −1), l
                        =
                        j
                        +1,…,
                        z is a positive parameter, d
                        
                           jl
                         is the known distance between the potential facility sites j and l. We can now rewrite the nonlinear constraint (11) in a linear form.
                           Proposition 1
                           
                              Let 
                              
                                 
                                    
                                       
                                          M
                                       
                                       
                                          jl
                                       
                                    
                                    =
                                    max
                                    
                                       
                                          
                                             λ
                                             ,
                                             
                                                
                                                   λ
                                                   +
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         jl
                                                      
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              . The linear constraint
                              
                                 
                                    (15)
                                    
                                       
                                          
                                             M
                                          
                                          
                                             jl
                                          
                                       
                                       (
                                       2
                                       -
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       -
                                       
                                          
                                             α
                                          
                                          
                                             l
                                          
                                       
                                       )
                                       +
                                       (
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       +
                                       
                                          
                                             α
                                          
                                          
                                             l
                                          
                                       
                                       -
                                       1
                                       )
                                       
                                          
                                             d
                                          
                                          
                                             jl
                                          
                                       
                                       ⩾
                                       λ
                                       .
                                    
                                 
                              is equivalent to
                                 
                                    (16)
                                    
                                       (
                                       1
                                       -
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       
                                       
                                          
                                             α
                                          
                                          
                                             l
                                          
                                       
                                       )
                                       
                                       λ
                                       +
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       
                                       
                                          
                                             α
                                          
                                          
                                             l
                                          
                                       
                                       
                                       
                                          
                                             d
                                          
                                          
                                             jl
                                          
                                       
                                       ⩾
                                       λ
                                       .
                                    
                                 
                              Constraint (16) is obtained by setting M in (11) to its smallest admissible value λ.

The goal is to find the smallest value for M
                              
                                 jl
                               that does not exclude any feasible solution for (16). Each pair (α
                              
                                 j
                              ,α
                              
                                 l
                              ) of binary decision variables in (15) and (16) can take values {(1,1); (1,0); (0,1); (0,0)}: (1,1) does not impose any restriction on M
                              
                                 jl
                              . However, setting (α
                              
                                 j
                              ,α
                              
                                 l
                              ) to (0,1) or (1,0) in (15) requires M
                              
                                 jl
                              
                              ⩾
                              λ. Similarly, (0,0) imposes that 
                                 
                                    
                                       
                                          M
                                       
                                       
                                          jl
                                       
                                    
                                    ⩾
                                    
                                       
                                          λ
                                          +
                                          
                                             
                                                d
                                             
                                             
                                                jl
                                             
                                          
                                       
                                       
                                          2
                                       
                                    
                                 
                              . This provides the result that we set out to prove.□

Consider two locations j and l such that d
                        
                           jl
                        
                        >
                        λ. Setting M
                        
                           jl
                        
                        =
                        λ would implicitly force the opening of at least one facility at sites j or at l. Indeed, the option of not opening any facility (α
                        
                           j
                        ,
                        α
                        
                           l
                        )=(0,0) at j and l results into inequality (15) being rewritten as 2M
                        
                           jl
                        
                        −
                        d
                        
                           jl
                        
                        ⩾
                        λ which is violated if d
                        
                           jl
                        
                        >
                        λ and M
                        
                           jl
                        
                        =
                        λ. Clearly, this would cut a feasible solution (which could be optimal) and alter the feasible set defined by (16).

The reformulation of the bilinear problem 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              )
                           
                         as the mixed-integer programming (MIP) problem 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              )
                           
                         is a direct consequence of Proposition 1:
                           
                              
                                 (
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             Z
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 )
                                 
                                 Maximize
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          s
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       s
                                    
                                 
                                 
                                 
                                    
                                       β
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        Subject to the constraints:


                        (10), (12)–(14)
                        
                           
                              (17)
                              
                                 
                                    
                                       M
                                    
                                    
                                       jl
                                    
                                 
                                 (
                                 2
                                 -
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 -
                                 
                                    
                                       α
                                    
                                    
                                       l
                                    
                                 
                                 )
                                 +
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       j
                                    
                                 
                                 +
                                 
                                    
                                       α
                                    
                                    
                                       l
                                    
                                 
                                 -
                                 1
                                 )
                                 
                                    
                                       d
                                    
                                    
                                       jl
                                    
                                 
                                 ⩾
                                 λ
                                 ,
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 (
                                 z
                                 -
                                 1
                                 )
                                 ,
                                 
                                 l
                                 =
                                 j
                                 +
                                 1
                                 ,
                                 …
                                 ,
                                 z
                              
                           
                        We shall now derive another MIP formulation 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              )
                           
                         equivalent to 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              )
                           
                         and 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              )
                           
                        . We call the tuple set T
                        2 the set of interdicted joint facility locations and define it as:
                           
                              
                                 
                                    
                                       T
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          (
                                          j
                                          ,
                                          l
                                          )
                                          :
                                          
                                             
                                                d
                                             
                                             
                                                jl
                                             
                                          
                                          <
                                          λ
                                          ,
                                          
                                          j
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          (
                                          z
                                          -
                                          1
                                          )
                                          ,
                                          
                                          l
                                          =
                                          j
                                          +
                                          1
                                          ,
                                          …
                                          ,
                                          z
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Clearly each tuple (j,
                        l)∈
                        T
                        2 refers to a pair of locations where two facilities are not allowed to operate concurrently.


                        Proposition 2 can now be derived.
                           Proposition 2
                           
                              The inequalities
                              
                                 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             jl
                                          
                                       
                                       (
                                       2
                                       -
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       -
                                       
                                          
                                             α
                                          
                                          
                                             l
                                          
                                       
                                       )
                                       +
                                       (
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       +
                                       
                                          
                                             α
                                          
                                          
                                             l
                                          
                                       
                                       -
                                       1
                                       )
                                       
                                          
                                             d
                                          
                                          
                                             jl
                                          
                                       
                                       ⩾
                                       λ
                                       ,
                                       
                                       j
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       (
                                       z
                                       -
                                       1
                                       )
                                       ,
                                       
                                       l
                                       =
                                       j
                                       +
                                       1
                                       ,
                                       …
                                       ,
                                       z
                                    
                                 
                              can be subsumed by the set of ∣T
                              2∣cover inequalities
                                 
                                    (18)
                                    
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       +
                                       
                                          
                                             α
                                          
                                          
                                             l
                                          
                                       
                                       ⩽
                                       1
                                       ,
                                       (
                                       j
                                       ,
                                       l
                                       )
                                       ∈
                                       
                                          
                                             T
                                          
                                          
                                             2
                                          
                                       
                                       .
                                    
                                 
                              
                           

It is evident that the set of constraints (18) prevents from opening (α
                        
                           j
                        
                        =1,
                        α
                        
                           l
                        
                        =1) a facility at both locations j and l if the distance separating them is not at least equal to λ.

It follows from Proposition 2 that the MIP problem 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              )
                           
                         is equivalent to problem 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              )
                           
                        
                        
                           
                              
                                 (
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             Z
                                          
                                          
                                             3
                                          
                                       
                                    
                                 
                                 )
                                 
                                 Maximize
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          s
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       s
                                    
                                 
                                 
                                 
                                    
                                       β
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        Subject to the constraints:


                        (10), (12)–(14), and (18)
                     

We can strengthen the formulation of problem 
                           
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              )
                           
                         through the introduction of valid cover inequalities. Let T
                        
                           k
                         denote the set of k-length tuples (v
                        1,…,
                        v
                        
                           k
                        ) defined as:
                           
                              
                                 
                                    
                                       T
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          (
                                          
                                             
                                                v
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                v
                                             
                                             
                                                k
                                             
                                          
                                          )
                                          :
                                          
                                             
                                                d
                                             
                                             
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      t
                                                   
                                                
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      
                                                         
                                                            t
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          <
                                          λ
                                          ,
                                          
                                          t
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          (
                                          k
                                          -
                                          1
                                          )
                                          ,
                                          
                                          
                                             
                                                t
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                          t
                                          +
                                          1
                                          ,
                                          …
                                          ,
                                          k
                                       
                                    
                                 
                                 .
                              
                           
                        The set T
                        
                           k
                         contains the indices of the groups of k facilities among which at most one can be opened. We construct all the sets T
                        
                           k
                         for k
                        =3,…,(z
                        −
                        p
                        −1). If the set T
                        
                           k
                         is non-empty for k
                        ⩾
                        z
                        −
                        p
                        −1, then the problem is infeasible. Clearly, the larger the value of k, the smaller the cardinality of the set T
                        
                           k
                        . It is therefore straightforward that:
                           Proposition 3
                           
                              The inequalities
                              
                                 
                                    (19)
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                                ∈
                                                
                                                   
                                                      T
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             α
                                          
                                          
                                             j
                                          
                                       
                                       ⩽
                                       1
                                       ,
                                       k
                                       =
                                       3
                                       ,
                                       …
                                       ,
                                       (
                                       z
                                       -
                                       p
                                       -
                                       1
                                       )
                                       .
                                    
                                 
                              are valid for 
                                 
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                3
                                             
                                          
                                       
                                    
                                    )
                                 
                              .

Our focus is to develop a method to obtain a good upper bound for (P). A good upper bound suffices, since our motive is in determining how bad things can get. We attempt to do this by establishing a relationship between the optimal values of (P) and (P
                        
                           Z
                        ). We assume for now that we have chosen a finite set of candidate sites Z; later we will develop a sensible choice for the set Z. An upper bound on (P) can be obtained based on the following theorem:
                           Theorem 2
                           
                              Let δ
                              
                                 Z
                              
                              
                              =
                              
                              max
                              
                                 x∈G
                              
                              [min(d(x,1),
                              …
                              ,
                              
                              d(x,
                              
                              z))] be the maximum distance from a point on the network to its closest facility site in the set Z and let ν
                              
                                 λ,A,B
                              
                              (P) denote the optimum objective function value of a problem P when a distance standard λ, a proportionality standard A, and an equity standard B are used. Then, 
                              
                                 
                                    
                                       
                                          ν
                                       
                                       
                                          λ
                                          ,
                                          A
                                          ,
                                          B
                                       
                                    
                                    (
                                    P
                                    )
                                    ⩽
                                    
                                       
                                          ν
                                       
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                A
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                B
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          Z
                                       
                                       
                                          L
                                       
                                    
                                    )
                                    +
                                    
                                       
                                          δ
                                       
                                       
                                          Z
                                       
                                    
                                 
                              
                              , where λ′
                              =
                              
                              max[0,
                              
                              λ
                              −
                              2
                              
                              δ
                              
                                 Z
                              
                              ] and A′
                              =
                              
                              A
                              
                              +
                              
                              w
                              
                                 s
                              
                              δ
                              
                                 Z
                               
                              and B′
                              =
                              
                              B
                              
                              +
                              
                              δ
                              
                                 Z
                               
                              are defined for each node s.
                           

Let 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               be the facility locations on the network corresponding to an optimal solution to (P). Associated with 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              , let 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               be the closest sites (in terms of distance) chosen from the set Z, respectively. The points 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               certainly satisfy the distance constraints (10) and (12) but the points 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               may not when the same standards λ,A,B is used. However, the points 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               will satisfy the constraints when a distance standard of λ′=
                              max[0,
                              λ
                              −2
                              δ
                              
                                 Z
                              ], a proportionality standard A′=
                              A
                              +
                              w
                              
                                 s
                              
                              δ
                              
                                 Z
                               and an equity standard B′=
                              B
                              +
                              δ
                              
                                 Z
                               for each node s is used; the 2 in the expression max[0,
                              λ
                              −2
                              δ
                              
                                 Z
                              ] stems from the fact that two facilities may be reassigned to sites in a manner that makes both of them move δ
                              
                                 Z
                               units towards one another. Similarly, the constraint β
                              
                                 s
                              
                              ⩽
                              A/w
                              
                                 s
                               needs to be modified to β
                              
                                 s
                              
                              ⩽
                              A′/w
                              
                                 s
                              , and β
                              
                                 s
                              
                              ⩽
                              B needs to be modified to β
                              
                                 s
                              
                              ⩽
                              B′ since a facility that was closest to a node s could have moved δ
                              
                                 Z
                               units away. Let V denote the objective function value at the points 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              . Then V
                              ⩾
                              ν
                              
                                 λ,A,B
                              (P)−
                              δ
                              
                                 Z
                              , since the maximum reduction in the objective function value is δ
                              
                                 Z
                              , due to the fact that the nodes can each move closer to their nearest facility by at most δ
                              
                                 Z
                               and that 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          s
                                          ∈
                                          N
                                       
                                    
                                    
                                       
                                          w
                                       
                                       
                                          s
                                       
                                    
                                    =
                                    1
                                 
                               by assumption. Also, 
                                 
                                    
                                       
                                          ν
                                       
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                A
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                B
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          Z
                                       
                                       
                                          L
                                       
                                    
                                    )
                                    ⩾
                                    V
                                 
                              , since the points 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          p
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               are feasible to 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          Z
                                       
                                       
                                          L
                                       
                                    
                                 
                               when distance standard λ′, proportionality standard A′, and equity standard B′ are used. Combining these two inequalities yields 
                                 
                                    
                                       
                                          ν
                                       
                                       
                                          λ
                                          ,
                                          A
                                          ,
                                          B
                                       
                                    
                                    (
                                    P
                                    )
                                    ⩽
                                    
                                       
                                          ν
                                       
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                A
                                             
                                             
                                                ′
                                             
                                          
                                          ,
                                          
                                             
                                                B
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          Z
                                       
                                       
                                          L
                                       
                                    
                                    )
                                    +
                                    
                                       
                                          δ
                                       
                                       
                                          Z
                                       
                                    
                                 
                              . The theorem follows.□

Clearly, it is desirable to keep δ
                        
                           Z
                         small in relation to the value of ν
                        
                           λ,A,B
                        (P). For a chosen value of δ
                        
                           Z
                        , the sites can be chosen in the following manner: select 
                           
                              max
                              [
                              ⌊
                              
                                 
                                    
                                       
                                          l
                                       
                                       
                                          ij
                                       
                                    
                                 
                                 
                                    2
                                    
                                       
                                          δ
                                       
                                       
                                          Z
                                       
                                    
                                 
                              
                              ⌋
                              ,
                              1
                              ]
                           
                         sites at equally spaced intervals on the interior of a link (i,
                        j), where l
                        
                           ij
                         is the length of a link (i,
                        j), and by having nodes as sites. For example, a link (i,
                        j) of length 20 and a δ
                        
                           Z
                         value of 3 is handled by choosing 
                           
                              max
                              [
                              ⌊
                              
                                 
                                    20
                                 
                                 
                                    6
                                 
                              
                              ⌋
                              ,
                              1
                              ]
                              =
                              3
                           
                         sites at points on link (i,
                        j) that are 5, 10, and 15 units away from node i, respectively. (There is a possibility of having some unnecessary sites if links of length less than 2
                        δ
                        
                           Z
                         exist. Such links have one site at the center of the link. It is a simple matter to check if every point on such a link (i,
                        j) is within δ
                        
                           Z
                         distance of a site on another link — this can be done by checking if the length of a shortest path from the midpoint of link (i,
                        j) to the nearest site on an adjacent link is less than or equal to δ
                        
                           Z
                        . If such a check is affirmative, the site is removed from consideration.) What remains then is to obtain 
                           
                              
                                 
                                    ν
                                 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          A
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                              )
                           
                        , using which an upper bound can be obtained on ν
                        
                           λ,A,B
                        (P) based on the result from Theorem 2.

Some observations are now made regarding the choice of δ
                        
                           Z
                        . The smaller δ
                        
                           Z
                         is, the better the approximation thus resulting in a tighter upper bound. Ideally, δ
                        
                           Z
                         should be as small as possible, but this results in a harder problem to solve since there will be a large number of sites. As can be seen from the formulation 
                           
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                           
                        , there are order 
                           
                              O
                              (
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         number of constraints. Therefore, as z increases, the problem quickly becomes harder to solve. The largest value of δ
                        
                           Z
                         that can be chosen is given by δ
                        
                           Z
                        
                        =
                        max
                        (i,j)
                        l
                        
                           ij
                        /2 and results in Z
                        =
                        N. When δ
                        
                           Z
                         is chosen this way, the value of 
                           
                              
                                 
                                    ν
                                 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          A
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    P
                                 
                                 
                                    N
                                 
                              
                              )
                           
                         which represents an upper bound on ν
                        
                           λ,A,B
                        (P
                        
                           N
                        ), tells us how bad the p-median objective could be if locations are restricted to the set of nodes.

We present our results based on three different data sets. The first one is a transportation network in the county of Albany, New York (NY). The second one is a transportation network from the South-East (SE) US that has been used in a disaster preparedness study (Rawls & Turnquist, 2010). The last set of results are based on a number of randomly generated networks (RAN) of different sizes and weights on nodes. Each problem instance was modeled with AMPL and solved with the CPLEX 12.4 solver on a 64-bit Dell Precision T5400 Workstation with Quad Core Xeon Processor X5460 3.16gigahertz CPU, and 4×2gigabyte of RAM. All problem instances were solved to optimality in less than 11second.

Before proceeding with a discussion of the results, some last comments are in order regarding the choice of δ
                     
                        Z
                     . Recall, that the maximum value of δ
                     
                        Z
                     , say 
                        
                           
                              
                                 δ
                              
                              
                                 Z
                              
                              
                                 max
                              
                           
                        
                     , is determined by the length of the longest link on the network and is therefore fixed for a given network. Also, this value of δ
                     
                        Z
                      results in the set of sites, Z, restricted to the set of nodes (N).

Also, the values of the parameters A, λ and B are varied based on base starting values A
                     
                        p
                     , B
                     
                        p
                      and λ
                     
                        p
                      as implied by the p-median solution. Successive values of A, B, and λ are obtained using increments of 10% of A
                     
                        p
                     , B
                     
                        p
                      and λ
                     
                        p
                      in both directions of the base values, representing tighter constraints on one side of the base values and looser constraints on the other. Also, preliminary analysis was conducted for a range of values of δ
                     
                        Z
                     , the largest value for which the set Z of potential sites essentially reduces to the set N, the set of nodes. Clearly, the tightest bounds on the objective function (when location is unrestricted on the network) are obtained for the smallest value of δ
                     
                        Z
                      which results in a fairly large number of potential sites over which the problem is solved. Our findings showed that the upper bounds are fairly loose even for the smallest value of δ
                     
                        Z
                      suggesting that the worst case values when location is unrestricted could be quite bad relative to the p median solution. Moreover, as discussed in the Introduction section, in actual practice it is quite common that location choices are not unrestricted but instead limited to a discrete set of locations which are often the set of demand points (see for example, the study by Carling, Han, & Hakansson (2012)). As such, in our computational study, we limited our analysis to locations that are restricted to the set of demand nodes.

The county of Albany in NY state divides into ten townships with highly variant population densities and relative locations as shown in Fig. 3
                        . Only the major roadways have been considered in constructing the network — these are shown in the figure as links connecting nodes and the numbers alongside the links represent the lengths. Consideration of only major road segments is quite typical when studying public facility location problems, e.g., see the recent paper by Erdemir et al. (2008) for locating aeromedical bases in the State of New Mexico. The population densities of the nodes are shown in Table 1
                        .

We solve problems with 3, 5, and 7 facilities on this network, and results are presented in Fig. 4
                        . The Y-axis on the figure shows the % deviation of the worst-case median value from the optimal p-median value, while the X-axis shows the parameter values. The middle value on the X-axis, as shown in the figure as (ABL6) corresponds to the parameter values as implied by the p-median solution. The rest of the values on the X-axis represent successive 10% changes from this base value.

For tighter values of the parameters (represented in the figure by (ALB1) through (ALB5)), the problem becomes infeasible. For the other values of the parameters, as seen in the graph, the worst case p-median value is very stable and does not change much at all. In fact, for both the 3 and 7 facility case, the deviation from the p-median solution is zero, and about 26% for the 5 facility case. For each computed worst case median solution, we also assessed the deviation with respect to the equity measure from its value as implied by the p-median solution, and that was 0 for the 3 and 7 facility case, and improved by about 15% in the 5 facility case. These results, we suspect, are somewhat sensitive to the particular features of this network which has an extreme variation in the population densities across the nodes – roughly 80% of the entire population of the network is contained in three nodes of the network. As such, the parameter values implied by the p-median solution seem to place rather tight bounds on the corresponding criteria, thus not allowing for too many feasible solutions.

This network was used in a disaster preparedness study by Rawls and Turnquist (2010) and consists of 30 nodes with cities and towns along the gulf from Texas to Florida as shown in Fig. 5
                        . We solve problems with 3, 5, 7, and 10 facilities on this network, and results are presented in Fig. 6
                        . As in the previous figure for the NY network, the Y-axis on this figure again shows the % deviation of the worst-case median value from the optimal p-median value, while the X-axis shows the parameter values.

The results indicate that the deviation from the p-median is again quite low (about 20–40%) and relatively stable especially for the 10 and 15 facility cases. For the 3 and 5 facility cases, the deviation is slightly higher, but under 80% for the base values of the parameters, and around 80–100% for higher values. The deviation with respect to the equity measure from its value as implied by the p-median solution is generally negative or around 0 for parameter values close to the base values. This suggests that the equity values are not as sensitive to variations in parameter values as the median values. This is consistent with the findings in Burkey et al. (2012) where they determined that actual locations of hospitals in four states in the US yielded median and equity values very close to the optimal p-median value and equity value implied by the optimal p-median solution, respectively.

A number of tests were also conducted using randomly generated problem instances. Three network sizes were generated comprising of 50 nodes, with the number of edges being 125, 175, and 230. For each of these three networks, 4 sets of weights were generated ranging from somewhat uniformly populated nodes (w
                        1) to nodes that differed considerably in their population densities (w
                        4). For each such problem, 5 random instances were generated and results were averaged over the 5 instances. The experiment thus involved solving a total of 180 problems instances (3 network sizes×4 sets of weights×5 problem instances×3 number of facilities=180).

The results show that the base parameter values (as implied by the p median solution) when location is restricted to nodes yield solutions that are in the worst case within 100% of the optimal p-median solution, with even lower deviations for the specific cases of p
                        =3 and p
                        =5 (see Table 2
                        ). Table 3
                         shows the deviations of the worst case solutions in terms of the equity criteria relative to equity values implied by the p median solution. It is evident that the equity values are mostly about the same as those implied by the p-median solution or marginally better. These results again confirm the findings in Burkey et al. (2012), suggesting that the parameter values as implied by the p-median solution do seem to capture the criteria used by decision makers in practice.

The results presented above for the three categories of networks demonstrate that by imposing constraints based on dispersion, population, and equity criteria, the quality of solutions obtained with respect to the p-median objective is quite reasonable, when location is restricted to the nodes of the networks. The deviation from the optimal p-median values seems to increase with the size of the network and the number of facilities to be located – this is evident in comparing the results of the larger SE US network with those of the New York network, and also in examining the results for the randomly generated networks. We also observe that the deviation is larger for networks where there is considerable variation in population densities among the nodes. This is something that perhaps would not be encountered typically in practice, since location strategies would typically account for such variation by allocating a larger number of facilities to the more populated areas. We also note that the equity values that result from the worst case p-median solution are generally better than those implied by the optimal p-median solution, which is a reflection of the implicit tradeoffs between efficiency and equity criteria that are likely to be present. This would suggest that better solutions with respect to the p-median objective may be found for tighter values of the equity parameters, and something that may be worthwhile to investigate in future studies. In summary, the results demonstrate that appropriately chosen parameter values for the dispersion, population, and equity criteria can lead to fairly good solutions with respect to the p-median objective.

Finally, we provide some results that illustrate the effectiveness of the parameters in eliminating poor solutions from consideration. In Figs. 7–10
                        
                        
                        
                        , we illustrate for a particular instance of the NY data set, the effect of varying the population and dispersion parameter values on the set of feasible solutions. The parameter values are plotted on the X-axis, starting with A
                        
                           p
                         and λ
                        
                           p
                         as A1L1, and the successive values A2L2 through A9L9 representing 10% successive relaxations on the starting values which were established based on the p median solution. Fig. 7 shows that a number of the poor solutions are indeed eliminated at tighter values of A and λ, and the parameters are indeed quite effective in eliminating the worst solutions for a range of values. Figs. 8–10 show solutions that are infeasible with respect to the population parameter alone, the dispersion parameter alone, and both, respectively. We can see from these graphs, that the dispersion parameter is not as effective as the population parameter in eliminating poor solutions – as shown by Figs. 9 and 10, almost all solutions eliminated by the dispersion parameter are also eliminated by the population parameter. This suggests that with a proper choice of the population parameter, solutions are naturally well dispersed and automatically satisfy the dispersion parameter.

@&#CONCLUSIONS@&#

In conclusion, our analysis suggests that when location is restricted to nodes, parameters based on the population, dispersion, and equity criteria seem effective in eliminating most of the poor solutions. Prescriptions derived in this manner based on the p-median solution may serve as a useful prescriptive aid for decision makers to help generate/assess a number of good quality solutions that they can choose from. In the context of larger problem instances, if the p median itself is hard to solve, a question arises as to how good values for the parameters can be generated? Preliminary testing using the NY and SE networks with parameter values implied by solutions that are within a specified small% (25%) of the p-median solution suggests that the worst case median value is often close to the optimal p-median value, and within 100% in almost all cases. This suggests the use of a heuristic to get a good solution based on which the parameter values can be derived. For example, one option is to use values based on a solution found using a heuristic such as the 1-opt interchange (Rosing & Hodgson, 2002; Rosing & ReVelle, 1997; Teitz & Bart, 1968). If the objective is to actually generate a set of solutions to present to the DMs for consideration, we could employ a modification of the Teitz and Bart heuristic to generate, say, the k best solutions starting with the best heursitic solution that would satisfy the parameters. The modification would be to consider the swap in the 1-opt interchange on the basis of two conditions, (1) that the new solution satisfies the parameters, and (2) the new solution results in the smallest increase with respect to the p-median value. It would be interesting to assess the average and worst solution among the generated solutions relative to the p-median. Another area for future research would be to extend the analysis in this paper to locations on a plane.

@&#REFERENCES@&#

