@&#MAIN-TITLE@&#An interactive evolutionary multi-objective optimization algorithm with a limited number of decision maker calls

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Interactive evolutionary algorithm for handling many objective optimization problems.


                        
                        
                           
                           Incorporates decision maker preferences in intermediate steps of the algorithm.


                        
                        
                           
                           Polyhedral cones and sets are used to modify domination and perform a focussed search.


                        
                        
                           
                           Successfully handles optimization problems up to five objectives.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Evolutionary multi-objective optimization

Multiple criteria decision-making

Interactive multi-objective optimization

@&#ABSTRACT@&#


               
               
                  This paper presents a preference-based method to handle optimization problems with multiple objectives. With an increase in the number of objectives the computational cost in solving a multi-objective optimization problem rises exponentially, and it becomes increasingly difficult for evolutionary multi-objective techniques to produce the entire Pareto-optimal front. In this paper, an evolutionary multi-objective procedure is combined with preference information from the decision maker during the intermediate stages of the algorithm leading to the most preferred point. The proposed approach is different from the existing approaches, as it tries to find the most preferred point with a limited budget of decision maker calls. In this paper, we incorporate the idea into a progressively interactive technique based on polyhedral cones. The idea is also tested on another progressively interactive approach based on value functions. Results are provided on two to five-objective unconstrained as well as constrained test problems.
               
            

@&#INTRODUCTION@&#

The evolutionary multi-objective optimization (EMO) algorithms have demonstrated their ability in solving complicated multiple objective problems (Deb, 2001; Coello, VanVeldhuizen, & Lamont, 2002). They have been successful in handling two to three objective test problems, but thereafter, the deterioration in performance becomes noticeable (Deb, Thiele, Laumanns, & Zitzler, 2005; Deb & Saxena, 2006; Knowles & Corne, 2007) both in terms of convergence
                        1
                        In evolutionary multi-objective optimization, convergence refers to the proximity of the solutions to the Pareto-optimal frontier.
                     
                     
                        1
                      and diversity
                        2
                        In evolutionary multi-objective optimization, diversity refers to the spread of solutions approximating the Pareto-optimal frontier.
                     
                     
                        2
                      (Deb, 2001). The deterioration in performance while solving problems with larger number of objectives is primarily due to stagnation in search as the Pareto-dominance looses its discriminatory potential in higher dimensions. Moreover, the requirement of an exponentially increasing population size to explore the Pareto-optimal front leads to a huge computational expense. Difficulty in visualization of the objective space further leads to additional challenges related to performance evaluation of the algorithm as well as decision making. These difficulties are inherent to an optimization problem with a larger number of objectives, and efficient procedures are required. In this paper, we introduce a methodology, which can be integrated with any evolutionary multi-objective optimization algorithm allowing it to effectively handle problems with multiple objectives.

The EMO algorithms aim for well spread solutions close to the Pareto-optimal front for two to three objective problems. The decision maker (DM) is expected to choose the most suitable point from an array of approximately Pareto-optimal points found by the EMO algorithm. However, in this paper we propose to integrate the DM with the optimization run of an EMO algorithm in a way such that the preferences of the DM can be incorporated into the intermediate generations of the algorithm. Such an integration leads to progress towards the most preferred point.
                        3
                        The most preferred point is the point on the Pareto-optimal front which gives maximum utility/satisfaction to the DM when compared with other points on the front.
                     
                     
                        3
                      This point is of course unknown at the start of the optimization run and the proposed algorithm tries to get as close to this point as possible, based on the preference information provided by the DM. Such a procedure, where a DM is involved in the intermediate generations of an EMO algorithm, is called a progressively interactive EMO approach (PI-EMO) (Deb, Sinha, Korhonen, & Wallenius, 2010; Branke, Greco, Slowinski, & Zielniewicz, 2009). A progressively interactive approach is a DM-oriented approach, which allows the DM to guide the algorithm towards the most preferred point. The working of such an approach can be observed from Fig. 1
                      for a two-objective maximization problem. The advantage associated with seeking the most preferred point, instead of the entire Pareto-optimal front, is that it saves us from the intricacies involved in exploring the entire multi-dimensional front.

This paper proposes a simple scheme, which could be integrated into any progressively interactive EMO algorithm to approach the most preferred point in limited number of interactions with the decision maker. The budget of DM calls
                        4
                        A DM call is an event where the algorithm seeks preference information from the DM.
                     
                     
                        4
                      is taken as input at the start of the optimization run, and then the decision maker is invited to provide preference statements whenever required. The concept is integrated with a progressively interactive EMO approach based on polyhedral cones (PI-EMO-PC) (Sinha, Deb, Korhonen, & Wallenius, 2010), which is elaborately discussed in the paper. The scheme of limited budget of DM calls is generic, and is also demonstrated on another progressively interactive EMO approach based on value functions (PI-EMO-VF) (Deb et al., 2010). Results are provided for three unconstrained and two constrained test problems having two to five objectives.

A multi-objective optimization problem inherently consists of two tasks, namely, search and decision making. These two tasks can be combined in various ways to generate procedures, which can be classified into three broad categories, i.e. apriori approach, aposteriori approach and interactive approach. In this section, we provide a review for the methods falling in each of these categories. Discussion about preference-based methods can also be found in the review papers by Rachmawati and Srinivasan, 2006 and Branke, 2008.

In the apriori approach, preferences are elicited before the start of the algorithm; then the optimization task is executed by incorporating the preference information, and the most preferred solution is identified. Biased niching based EMO (Branke & Deb, 2004), the reference direction based EMO (Deb & Kumar, 2007), reference point-based EMO approaches (Deb, Sundar, Uday, & Chaudhuri, 2006; Thiele, Miettinen, Korhonen, & Molina, 2009), and the light beam approach based EMO (Deb & Kumar, 2007) represent some of the efforts in the direction of utilizing preference information before the start of an EMO algorithm. Once the information is available in the form of a reference direction or reference point, the algorithm finds the most-preferred point without any further interaction with the DM. Deb et al., 2006 used the concept of the reference point, but did not apply an Achievement Scalarizing Function; they rather used a weighted Euclidean distance to rank population members. In a later study, Thiele et al., 2009 implemented a similar idea using the Achievement Scalarizing Function. Another simple algorithm based on this approach is to modify dominance based on ranks obtained for a few alternatives from the DM. Such an approach was used by Greenwood, Hu, and D’Ambrosio, 1996 in their study. Tiwari, Wiecek, and Fadel, 2008 used pre-determined preference cones in an evolutionary algorithm to converge to a part of the Pareto-optimal frontier. They considered two objective test problems in their study.

Information in an apriori approach is elicited towards the beginning, therefore, the solution obtained after executing the algorithm is usually not the best solution and may not even be close to the most preferred solution. The preference structure of the DM at the beginning might be different from the preference structure at the Pareto-optimal front. Therefore, the approach is highly error prone, as even slight deviations in providing preference information at the beginning may lead to entirely different solutions.

Most of the evolutionary multi-objective algorithms (Deb, Agrawal, Pratap, & Meyarivan, 2002; Zitzler, Laumanns, & Thiele, 2001) which aim to find the entire frontier, are classic examples of the aposteriori approach. In such methods, the decision making aspect is ignored and the entire Pareto-optimal frontier is generated before incorporating the DM. However, as already mentioned, there are enormous difficulties in finding the entire Pareto-optimal front for a problem having a large number of objectives. Choosing the most preferred solution from this front makes the problem even more challenging.

Realizing the various difficulties associated with the above two approaches, in recent years there has been interest towards development of interactive EMO algorithms, particularly for problems having a large number of objectives. A variety of interactive methods have been presented in the literature, but our focus is on progressively interactive techniques. As already mentioned, progressively interactive methods converge towards a particular region of the frontier by incorporating preferences obtained from the DM in the dominated regions of the objective space. Preference elicitation is performed during the course of optimization such that a progress towards the most preferred point is made. Some of the recent work in the direction of progressively interactive techniques are Phelps and Koksalan, 2003, Fowler et al., 2009, Jaszkiewicz, 2007, Branke et al., 2009, Koksalan and Karahan, 2010, Deb et al., 2010. Next, we briefly highlight the salient features of these studies.


                     Phelps and Koksalan, 2003 periodically accept preferences from the DM and construct a linearly weighted sum of objectives, which is optimized in the subsequent generations using an evolutionary algorithm. Fowler et al., 2009 send a few solutions to the DM for ranking, and construct a convex preference cone, which is used to rank the members not considered by the DM. The study assumes a quasi-concave preference structure for the DM, and presents the results on multi-dimensional knapsack problems. Jaszkiewicz, 2007 also uses linear value functions, however, his strategy is to select a set of compatible linear value functions from randomly generated linear value functions. The selected value functions are then used within the EMO algorithm to explore the preferred regions on the frontier. In fact, many algorithms use linear value functions, but they have limitations in handling problems where the most preferred point lies on a non-convex part of the Pareto-optimal front. Branke et al., 2009 implemented the GRIP (Figueira, Greco, & Slowinski, 2009) methodology, where the preference information from the DM is used to construct all possible additive value functions conforming to the preferences. This guides the search of the EMO algorithm towards interesting regions of the frontier. They extended the idea in a later study (Branke, Greco, Slowinski, & Zielniewicz, 2010). In their approach, the DM is frequently invited to provide preferences, and the implementation has been done on two-objective test problems. It has not been demonstrated in the study, whether the method scales efficiently when handling higher number of objectives. A study by Koksalan and Karahan, 2010 defines a territory around preferred solutions elicited from the DM, and generates more solutions around them, obtaining a denser coverage of the interesting regions. Interaction with the DM is again performed, and based on this idea the algorithm gets close to the most preferred point. Some other studies, which utilize preference statements in an EMO interactively, are Kaliszewski, Miroforidis, and Podkopaev, 2011, Said et al., 2010. Kaliszewski et al., 2011 have developed a decision support scheme which could be used with an EMO. It operates by defining upper and lower bounds for solutions, and the process continues until the bounds are tight. Said, Bechikh, and Ghedira, 2010 use a variant of the Pareto-dominance criterion, which has the ability to create a strict partial order. This helps in guiding the search towards the preferred parts of the Pareto optimal frontier. The DM’s preferences are elicited as a set of aspiration levels.

In a recent study (Deb et al., 2010), the authors have proposed a progressively interactive EMO method, which uses implicitly defined value functions (PI-EMO-VF). In this approach the information from the DM is elicited and used to construct a polynomial value function. At different stages of the algorithm, the implicitly constructed value function maps the preference information provided by the DM, and is subsequently used for making decisions. Another recently suggested methodology (Sinha et al., 2010) eliminates the process of constructing a value function by using polyhedral cones. This method uses preference information from the DM in the form of the best point from a given set. This information is used to formulate a polyhedral cone, which is used to modify the domination criterion, and drive the EMO procedure towards the region of interest.

Most of the progressively interactive methods follow a similar framework. In this section, we describe a general framework for such methods, and discuss what makes these methods different. Flowchart in Fig. 2
                      shows the steps followed by a progressively interactive approach.

For most of the progressively interactive methods, an initial set of solutions is generated either randomly or using evolutionary search with a standard domination criterion. Once an initial set of solutions is available, DM preferences are elicited on a selected set of solutions to construct a domination criterion, which helps an evolutionary algorithm perform a focussed search in the region of interest. The DM preferences are elicited alternately with the evolutionary search until the termination criterion is met. The algorithms usually produce a single most preferred point as the final outcome. Each step in the approach can be performed in different ways, for example, preference information can be accepted in terms of best point from a given set, or rank ordering a set of points, or pairwise comparisons of given pairs. Similarly, domination condition can be constructed in various ways for example in the context of this paper it may be a polyhedral-based domination criterion or a value function-based domination criterion. Other things which make algorithms different are, how long the evolutionary search is performed and when are the preferences elicited. Therefore, the existing approaches differ from each other in one or more of the following ways:
                        
                           1.
                           How are the preference statements elicited?

When are the preference statements elicited?

How are the preference statements converted into an effective domination criterion?

The main focus of this paper is to tackle point 2 from the above list in an effective manner, so that a limited number of DM calls can be efficiently utilized. Now, we provide a brief description how a fixed budget DM call scheme can be implemented for multi-objective problems, and then show its working on a specific progressively interactive approach in the next section.

The proposed fixed budget scheme requires the ideal point 
                        
                           
                              
                                 I
                              
                              
                                 →
                              
                           
                        
                      to start. The ideal point is determined by maximizing each of the objectives individually. An individual maximization of the objectives gives at most M points 
                        
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                              
                                 →
                              
                           
                           ,
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                              
                                 →
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       M
                                    
                                 
                              
                              
                                 →
                              
                           
                        
                     . A two-objective case has been shown in Fig. 3
                      where maximization of the objectives gives 2 points 
                        
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                              
                                 →
                              
                           
                        
                      and 
                        
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                              
                                 →
                              
                           
                        
                     . Once the ideal point is known, the initial random population is created. The point 
                        
                           (
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       ib
                                    
                                 
                              
                              
                                 →
                              
                           
                           )
                        
                      closest 
                        5
                        Euclidean distance from the ideal point is computed in the objective space for each of the randomly generated points. The point with the shortest Euclidean distance is denoted as 
                              
                                 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             ib
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                              
                           .
                     
                     
                        5
                      to the ideal point 
                        
                           (
                           
                              
                                 I
                              
                              
                                 →
                              
                           
                           )
                        
                      is chosen and its distance from the ideal point is denoted as 
                        
                           
                              
                                 D
                              
                              
                                 I
                              
                           
                           =
                           |
                           
                              
                                 I
                              
                              
                                 →
                              
                           
                           -
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       ib
                                    
                                 
                              
                              
                                 →
                              
                           
                           |
                        
                     . 
                        
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                              
                                 →
                              
                           
                           =
                           
                              
                                 I
                              
                              
                                 →
                              
                           
                           -
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       ib
                                    
                                 
                              
                              
                                 →
                              
                           
                        
                      denotes the vector from 
                        
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       ib
                                    
                                 
                              
                              
                                 →
                              
                           
                        
                      to 
                        
                           
                              
                                 I
                              
                              
                                 →
                              
                           
                        
                     . This distance D
                     
                        I
                      is divided into 
                        
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                           =
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                              
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                              
                           
                        
                      equal parts (step-size). This is done to make sure that the preference information from the DM is elicited only after fixed progress has been made. The distance traversed is measured by projecting the progress of one of the points (discussed later) from the population on the vector 
                        
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                              
                                 →
                              
                           
                        
                     .

Thereafter, an evolutionary search is alternated with decision making instances, until the termination criterion is met. This simple mechanism ensures that the decision maker is invited only after a significant progress is made, and also guarantees that the search would terminate in less than or equal to the maximum allowed number of DM calls. It is also possible to implement the scheme by using a variable step-size instead of keeping it fixed. It might be interesting to study the performance of the scheme with larger step-sizes in the beginning and smaller step sizes in the end. In this paper, we perform the study with a fixed step-size, and then show the advantages of variable step-size towards the end.

When the above scheme is integrated with a standard EMO algorithm (such as NSGA-II (Deb et al., 2002), SPEA-II (Zitzler et al., 2001) and others), and the domination criterion is based on the preferences of the decision maker, the approach leads to the most preferred solution in a fixed budget of DM calls. In this paper, we incorporate the fixed budget scheme in a progressively interactive approach based on polyhedral cones. The approach approximates the preferred region of the decision maker by utilizing the preference statements of the decision maker without requiring any significant parameter to be set, apart from the standard parameters used in evolutionary algorithms. The steps involved in the algorithm are discussed in detail in the next section. Later, we also test the fixed budget scheme on the value function-based approach and compare the performance with the polyhedral cone-based approach.

In this section, we propose a progressively interactive EMO algorithm (PI-EMO-PC)
                        6
                        For an earlier version, see Sinha et al., 2010, where there is no mechanism to control the number of interactions with the DM.
                     
                     
                        6
                      which uses the notion of polyhedral cones and sets to converge towards the most preferred point of an M objective problem. Though the polyhedral cones and sets provide only an approximation of the preferred region, they are sufficient to guide an EMO algorithm towards the most preferred point by eliciting preference information from the DM at various stages of the algorithm. Before discussing the step-wise procedure for the algorithm, we introduce some concepts used in the paper.

A cone is a nonempty set 
                           
                              C
                              ⊂
                              
                                 
                                    R
                                 
                                 
                                    M
                                 
                              
                           
                         for which c
                        ∈ 
                        C
                        ⇒
                        λc
                        ∈
                        C where λ
                        >0. A cone is convex if c
                        (1), c
                        (2)
                        ∈
                        C
                        ⇒
                        c
                        (1)
                        +
                        c
                        (2)
                        ∈
                        C. In the following definitions we define a polyhedral cone and a polyhedral set.
                           Definition 1
                           
                              Polyhedral cone: If 
                                 
                                    A
                                    ∈
                                    
                                       
                                          R
                                       
                                       
                                          L
                                          ×
                                          M
                                       
                                    
                                 
                               is a matrix, then a polyhedral cone 
                                 
                                    C
                                    (
                                    A
                                    )
                                    ⊂
                                    
                                       
                                          R
                                       
                                       
                                          M
                                       
                                    
                                 
                               determined by A is defined as:
                                 
                                    (1)
                                    
                                       C
                                       (
                                       A
                                       )
                                       ≔
                                       {
                                       c
                                       ∈
                                       
                                          
                                             R
                                          
                                          
                                             M
                                          
                                       
                                       :
                                       Ac
                                       ⩾
                                       0
                                       }
                                    
                                 
                              
                           


                              Polyhedral set: If 
                                 
                                    A
                                    ∈
                                    
                                       
                                          R
                                       
                                       
                                          L
                                          ×
                                          M
                                       
                                    
                                 
                               is a matrix, and 
                                 
                                    b
                                    ∈
                                    
                                       
                                          R
                                       
                                       
                                          L
                                       
                                    
                                 
                               is a vector, then a polyhedral set 
                                 
                                    C
                                    (
                                    A
                                    ,
                                    b
                                    )
                                    ⊂
                                    
                                       
                                          R
                                       
                                       
                                          M
                                       
                                    
                                 
                               determined by A and b is defined as:
                                 
                                    (2)
                                    
                                       C
                                       (
                                       A
                                       ,
                                       b
                                       )
                                       ≔
                                       {
                                       c
                                       ∈
                                       
                                          
                                             R
                                          
                                          
                                             M
                                          
                                       
                                       :
                                       Ac
                                       ⩾
                                       b
                                       }
                                    
                                 
                              
                           

A polyhedral cone is a special kind of cone which is defined by a solution set of a homogeneous system of linear inequalities. In M dimensions polyhedral cones may be constructed with any finite number of bounding hyperplanes. However, in the context of this paper we consider only polyhedral cones constructed with M different hyperplanes in M dimensions. A polyhedral set is an intersection of a finite number of halfspaces and is always convex.

In evolutionary algorithms, at any generation we have a population of non-dominated solutions. If one of the solutions is known to be the best in the population, we utilize it to create a polyhedral cone and set. Since we aim to produce a single point on the Pareto-front, close to the most preferred point, we require two important features in the preference-based approach. The first feature being identification of a proper search direction, and the second feature being, identification of the preferred region. These two features are important for a preference-based approach to converge to one of the preferred points on the Pareto-optimal front. In the proposed approach, we use a polyhedral cone at each DM call, and choose a search direction based on the cone to perform a local search (LS). A preferred region is also determined for subsequent exploration by EMO.

Now, we discuss our PI-EMO-PC procedure in the form of a sequence of steps, integrated with the fixed budget scheme:
                           
                              
                                 Step 0:
                              Determine the ideal point 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             →
                                          
                                       
                                    
                                  by maximizing each of the objectives individually using any single-objective optimization algorithm.

Initialize a population Par
                                 0, and set population iteration counter t
                                 =0. Initialize archive set
                                    7
                                    The initial size of the archive (A) is 0. The maximum size the archive can have is ∣A∣
                                          max
                                       , a subjectively determined parameter.
                                 
                                 
                                    7
                                  
                                 A. Determine the point closest 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   ib
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       )
                                    
                                  to the ideal point 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             →
                                          
                                       
                                    
                                  and find the vector 
                                    
                                       
                                          
                                             
                                                
                                                   D
                                                
                                                
                                                   I
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       =
                                       
                                          
                                             I
                                          
                                          
                                             →
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   ib
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                 . Store the distance 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             I
                                          
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   D
                                                
                                                
                                                   I
                                                
                                             
                                          
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   DM
                                                
                                             
                                          
                                       
                                    
                                 , where T
                                 
                                    DM
                                  is the maximum number of DM calls.

Increment the counter as t
                                 ←
                                 t
                                 +1 and execute the EMO algorithm generation with the usual Pareto-domination criterion. The best member 
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   cb
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                  in the current population is the one closest to the ideal point which dominates 
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   ib
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                 . All the feasible non-dominated solutions found at the end of the generation are added to the archive A.

If projected distance of 
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   cb
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   ib
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                  on 
                                    
                                       
                                          
                                             
                                                
                                                   D
                                                
                                                
                                                   I
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                  is less than d
                                 
                                    I
                                  then go to Step 2; otherwise store the function evaluations required during the improvement as f
                                 
                                    I
                                 . Initialize c as 1 and call the DM to choose the best solution 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             best
                                          
                                       
                                    
                                 , from the archive A
                                 
                                    t
                                  using VIMDA (Korhonen & Karaivanova, 1999). Here c refers to the DM call. Choose the end points
                                    8
                                    In a maximization problem, end points in a set of non-dominated solutions are those members, which have maximum value for one of the objectives. However, it may not be trivial. Refer Section 4.3 for further details.
                                 
                                 
                                    8
                                  from the non-dominated front of the current parent population Par
                                 
                                    t
                                  as rest of the solutions. This makes the chosen number of points for polyhedral cone construction as η
                                 =
                                 M
                                 +1.

Construct the sides of the polyhedral cone from the chosen set of η
                                 =
                                 M
                                 +1 points, described in Section 4.3. Set the function evaluation counter f
                                 =0.

An offspring population, Off
                                 
                                    t
                                 , is created from the parent population, Par
                                 
                                    t
                                 , by executing an iteration of the EMO algorithm. Parent selection in the EMO algorithm is performed using modified domination criterion (discussed in Section 4.5), and then crossover-mutation operators are used to generate the offsprings. Increment the function evaluation counter f by number of function evaluations done in this step. Update the archive by including the offspring population into it and then removing the dominated solutions from the archive. If the archive size exceeds ∣A∣
                                    max
                                 , k-mean clustering is used to keep the diverse set of ∣A∣
                                    max
                                  clusters; rest of the solutions are deleted.

From parent population, Par
                                 
                                    t
                                 , and offspring population, Off
                                 
                                    t
                                 , a new population, Par
                                 
                                    t+1, is determined, using modified domination criterion and EMO algorithm’s diversity preserving operator. The iteration counter is incremented as t
                                 ←
                                 t
                                 +1 and the algorithm moves to Step 5 if f is less than f
                                 
                                    I
                                 ; otherwise proceed to Step 7.

Increment c by 1 and call the DM to choose the best solution 
                                    
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                          
                                          
                                             best
                                          
                                       
                                    
                                 , from the archive A
                                 
                                    t
                                 . The previous best solution chosen by the DM is stored as 
                                    
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                             -
                                             1
                                          
                                          
                                             best
                                          
                                       
                                    
                                 . The polyhedral cone is constructed and the search direction is determined. Projected distance of vector 
                                    
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                          
                                          
                                             best
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                             -
                                             1
                                          
                                          
                                             best
                                          
                                       
                                    
                                  on 
                                    
                                       
                                          
                                             
                                                
                                                   D
                                                
                                                
                                                   I
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                  is computed and stored as d
                                 
                                    A
                                 .

If the projected distance d
                                 
                                    A
                                  is less than d
                                 
                                    I
                                 , a local search is performed with 
                                    
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                          
                                          
                                             best
                                          
                                       
                                    
                                  as the reference point along the search direction. The best solution, 
                                    
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                          
                                          
                                             best
                                          
                                       
                                    
                                 , chosen by the DM is updated at each iteration of the local search. The local search is stopped if 
                                    
                                       |
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                          
                                          
                                             best
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             c
                                             -
                                             1
                                          
                                          
                                             best
                                          
                                       
                                       |
                                       >
                                       
                                          
                                             d
                                          
                                          
                                             I
                                          
                                       
                                    
                                 , the function evaluation counter is reset as f
                                 =0, and the algorithm proceeds to Step 5. If local search is unable to produce better solutions, then the algorithm is terminated and the current best solution is chosen as the final outcome.

The PI-EMO-PC algorithm requires the parameters ∣A∣
                           max
                         and T
                        
                           DM
                         in addition to the EMO algorithm’s parameters to be specified.

While solving a problem it will often occur that not the entire budget of DM calls is utilized, i.e. c
                        <
                        T
                        
                           DM
                         at the end of the algorithm. In this case we recommend to move back to 
                           
                              
                                 
                                    A
                                 
                                 
                                    α
                                 
                                 
                                    best
                                 
                              
                           
                        , where 
                           
                              α
                              =
                              c
                              -
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   DM
                                                
                                             
                                             -
                                             c
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        , update 
                           
                              
                                 
                                    d
                                 
                                 
                                    I
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          d
                                       
                                       
                                          I
                                       
                                    
                                 
                                 
                                    2
                                 
                              
                           
                         and start the algorithm from that point again. To implement fine-tuning, it is necessary to store the population members and the archive set at the end of each local search, i.e. Step 8 of the algorithm above. The stored parent population and the archive set are used to start the fine-tuning algorithm with a smaller d
                        
                           I
                         value.

The above fine-tuning procedure can also be utilized if the DM is unhappy with the final solution. In that case the DM specifies 
                           
                              
                                 
                                    T
                                 
                                 
                                    DM
                                 
                                 
                                    ′
                                 
                              
                           
                         and the algorithm moves back to 
                           
                              
                                 
                                    A
                                 
                                 
                                    α
                                 
                                 
                                    best
                                 
                              
                           
                         where 
                           
                              α
                              =
                              c
                              -
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   DM
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                         and d
                        
                           I
                         is updated as 
                           
                              
                                 
                                    d
                                 
                                 
                                    I
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          d
                                       
                                       
                                          I
                                       
                                    
                                 
                                 
                                    2
                                 
                              
                           
                        .

At an instance of a DM call, the DM is provided with the archive set from which the best point is chosen. The chosen point forms the apex of the polyhedral cone in M-dimensional space, and we require M additional points to construct the complete cone. The end points of the non-dominated part of the parent population at that instant are chosen as the remaining points for constructing the bounding hyperplanes of the polyhedral cone. In most of the cases, the number of end points will be equal to M, and including the apex we will have M
                        +1 points for constructing the polyhedral cone. However, there could be a few anomalies, where the total number of points is not equal to M
                        +1; we handle such cases later in this sub-section.

Choosing a set of M
                        −1 points from the set of M end points and the apex gives us one of the bounding hyperplanes for the polyhedral cone. By considering all possible combinations, we are able to construct M different bounding hyperplanes for the polyhedral cone. All the chosen points are non-dominated with respect to each other, therefore if we choose any of the M bounding hyperplanes, then one of the two normals to that plane has non-negative components. This property is important when we decide the search direction for local search in the next sub-section.

For instance, Figs. 4 and 5
                        
                         show the polyhedral cones in two and three dimensions. The equation of each hyperplane can be written as 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              =
                              0
                              ,
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        . If a given point 
                           
                              
                                 
                                    f
                                 
                                 
                                    (
                                    0
                                    )
                                 
                              
                              =
                              (
                              
                                 
                                    f
                                 
                                 
                                    1
                                 
                                 
                                    (
                                    0
                                    )
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    f
                                 
                                 
                                    M
                                 
                                 
                                    (
                                    0
                                    )
                                 
                              
                              )
                           
                         in the objective space has 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              
                                 
                                    f
                                 
                                 
                                    (
                                    0
                                    )
                                 
                              
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              >
                              0
                              ∀
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        , then the point lies inside the polyhedral cone; otherwise it lies outside. In Fig. 4, the shaded region has 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              <
                              0
                              
                              for
                              
                              at
                              
                              least
                              
                              one
                              
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                         and the unshaded region has 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              >
                              0
                              
                              ∀
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        . Similarly, in Fig. 5, the unshaded polyhedral cone represents 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              >
                              0
                              
                              ∀
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        .

There could be a scenario, where we do not have M
                        +1 points to construct the polyhedral cone. Such a scenario could occur under two circumstances. Firstly, if the DM chooses an end point along a particular objective as the best point, and secondly, if there is an end point which is common along two or more objectives. To tackle such a situation, we propose the creation of artificial points in order to construct the polyhedral cone. If the DM chooses an end point (say 
                           
                              
                                 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             1
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                       ,
                                       …
                                       
                                          
                                             f
                                          
                                          
                                             M
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        ) along a particular objective i as the best point, then we create an artificial point as 
                           
                              
                                 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             1
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                       ,
                                       …
                                       
                                          
                                             f
                                          
                                          
                                             M
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                 
                              
                              -
                              (
                              
                                 
                                    δ
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    δ
                                 
                                 
                                    i
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    δ
                                 
                                 
                                    M
                                 
                              
                              )
                           
                        , with δ
                        
                           i
                        
                        =0 and δ
                        
                           j≠i
                        
                        =10−5. The created artificial point is chosen as the new end point. If a single point happens to be the end point for two or more objectives, then for each of the objectives we create an artificial point as an end point using a similar strategy.

A different scenario could be that we have more than one end-point corresponding to a particular objective. This would rarely happen, but under such a situation one of those points is chosen randomly as the end point corresponding to that objective.

Once the polyhedral cone is determined, it provides an idea for a search direction. The non-negative normal unit vectors 
                           
                              (
                              
                                 
                                    
                                       
                                          V
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    ^
                                 
                              
                              )
                           
                         of all the M hyperplanes can be summed up to get a search direction 
                           
                              
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             →
                                          
                                       
                                       =
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             ^
                                          
                                       
                                    
                                 
                              
                           
                        . 
                           
                              
                                 
                                    W
                                 
                                 
                                    ^
                                 
                              
                           
                         is the unit vector along 
                           
                              
                                 
                                    W
                                 
                                 
                                    →
                                 
                              
                           
                         and W
                        
                           i
                         ∀i
                        ∈{1,…,
                        M} represent the components of the vector 
                           
                              
                                 
                                    W
                                 
                                 
                                    →
                                 
                              
                           
                        . Since all the unit vectors are non-negative, therefore the final search direction would not lead to deterioration in any of the objectives. This direction has been used to determine if the optimization process should be terminated or not. To implement this idea we perform a single-objective search along the identified direction.

We solve the following Achievement Scalarizing Function (ASF) problem (Wierzbicki, 1980) for the best point from the archive 
                           
                              (
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    c
                                 
                                 
                                    best
                                 
                              
                              )
                           
                        . In the following equation, 
                           
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    c
                                 
                                 
                                    best
                                 
                              
                           
                        :
                           
                              (3)
                              
                                 
                                    
                                       
                                       
                                          
                                             Maximize
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               min
                                                            
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            
                                                               M
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  f
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            (
                                                            x
                                                            )
                                                            -
                                                            
                                                               
                                                                  z
                                                               
                                                               
                                                                  i
                                                               
                                                               
                                                                  b
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  W
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             +
                                             ρ
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      M
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   (
                                                   x
                                                   )
                                                   -
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         b
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                             .
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             subject
                                             
                                             to
                                             
                                             x
                                             ∈
                                             S
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        In the above formulation, 
                           
                              S
                           
                         denotes the feasible decision variable space of the original problem. The second term has a small constant ρ (=10−10 is suggested), which prevents the method from converging to a weakly Pareto-optimal point. The sequential quadratic programming (SQP) optimization method is used to solve the above problem and the intermediate solutions in the objective space (z
                        (i), i
                        =1,2,…) are recorded. If at any intermediate point, 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   z
                                                
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         →
                                                      
                                                   
                                                
                                                
                                                   c
                                                   -
                                                   1
                                                
                                                
                                                   best
                                                
                                             
                                          
                                       
                                    
                                    ·
                                    
                                       
                                          
                                             
                                                D
                                             
                                             
                                                I
                                             
                                          
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    
                                       
                                          D
                                       
                                       
                                          I
                                       
                                    
                                 
                              
                           
                         is larger than d
                        
                           I
                        , the Achievement Scalarizing Function optimization is stopped and we continue with the EMO algorithm. In this case, we replace 
                           
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    c
                                 
                                 
                                    best
                                 
                              
                           
                         with z
                        (i) in the archive set, and update the archive set A
                        
                           t
                        , by deleting the dominated members. 
                           
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    c
                                 
                                 
                                    best
                                 
                              
                           
                         replaces the member closest to it in the parent population Par
                        
                           t
                        . Fig. 6
                         depicts this scenario. On the other hand, if at the end of the SQP run, the final SQP solution (say, z
                        
                           T
                        ) does not meet the criterion 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   z
                                                
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         →
                                                      
                                                   
                                                
                                                
                                                   c
                                                   -
                                                   1
                                                
                                                
                                                   best
                                                
                                             
                                          
                                       
                                    
                                    ·
                                    
                                       
                                          
                                             
                                                D
                                             
                                             
                                                →
                                             
                                          
                                       
                                       
                                          I
                                       
                                    
                                 
                                 
                                    
                                       
                                          D
                                       
                                       
                                          I
                                       
                                    
                                 
                              
                              >
                              
                                 
                                    d
                                 
                                 
                                    I
                                 
                              
                           
                        , we terminate the EMO algorithm and declare z
                        
                           T
                         as the final preferred solution. This situation indicates that local search is unable to find any solution in the search space along the search direction, which can further improve the best solution obtained so far. Hence, we can terminate the optimization. Fig. 7
                         shows such a situation, warranting a termination of the PI-EMO procedure.

The polyhedral set, obtained as a result of the constructed polyhedral cone, has been used to modify the domination criterion in order to emphasize and create preferred solutions. The polyhedral set from the most recent decision-making interaction is given by 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              0
                              
                              ∀
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        . The bounding hyperplanes of the polyhedral set are used to eliminate regions, and focus the search entirely on the region preferred by the DM. The ith hyperplane of the polyhedral set divides the region into two half-spaces, 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              0
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              <
                              0
                           
                        . The region represented by 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              <
                              0
                           
                         is assumed to be less preferred over region represented by 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              0
                           
                        . Therefore, the intersection of the regions represented by 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              0
                              
                              ∀
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                         gives the preferred region in which we perform a focused search after interaction with the DM. Based on this idea we develop a modified domination criterion in this sub-section.

Once the polyhedral set is known, any two feasible solutions, x
                        (1) and x
                        (2), are compared with their corresponding objective function values, f
                        (1) and f
                        (2), by using the following modified domination criterion:
                           
                              1.
                              If 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                          
                                             ⊤
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             (
                                             1
                                             )
                                          
                                       
                                       +
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       ≥
                                       0
                                    
                                  and 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                          
                                             ⊤
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             (
                                             2
                                             )
                                          
                                       
                                       +
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       ⩾
                                       0
                                       
                                       ∀
                                       i
                                       ∈
                                       {
                                       1
                                       ,
                                       …
                                       ,
                                       M
                                       }
                                    
                                 , then the two points are compared based on the usual Pareto-domination principle.

If 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                          
                                             ⊤
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             (
                                             1
                                             )
                                          
                                       
                                       +
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       <
                                       0
                                    
                                  and 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                          
                                             ⊤
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             (
                                             2
                                             )
                                          
                                       
                                       +
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       <
                                       0
                                       
                                       for
                                       
                                       at
                                       
                                       least
                                       
                                       one
                                       
                                       i
                                       ∈
                                       {
                                       1
                                       ,
                                       …
                                       ,
                                       M
                                       }
                                    
                                 , then the two points are compared based on the usual Pareto-domination criterion.

If 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                          
                                             ⊤
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             (
                                             1
                                             )
                                          
                                       
                                       +
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       ≥
                                       0
                                       ∀
                                       i
                                       ∈
                                       {
                                       1
                                       ,
                                       …
                                       ,
                                       M
                                       }
                                    
                                 , and 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                          
                                             ⊤
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             (
                                             2
                                             )
                                          
                                       
                                       +
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       <
                                       0
                                       
                                       for
                                       
                                       at
                                       
                                       least
                                       
                                       one
                                       
                                       i
                                       ∈
                                       {
                                       1
                                       ,
                                       …
                                       ,
                                       M
                                       }
                                    
                                 , then the former dominates the latter.


                        Fig. 8
                         illustrates the region dominated by two points A and B. The set formed by the linear equations has been shown. Point A lies in the region in which 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              <
                              0
                              
                              for
                              
                              at
                              
                              least
                              
                              one
                              
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        . The region dominated by point A is shaded. This dominated area is identical to that which can be obtained using the usual Pareto-domination criterion. However, point B lies in the region 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              >
                              0
                              
                              ∀
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        . For this point, the dominated region is different from that which would be obtained using the usual Pareto-domination criterion. In addition to the usual region of dominance, the dominated region includes all points which have 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    ⊤
                                 
                              
                              f
                              +
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              <
                              0
                              
                              for
                              
                              at
                              
                              least
                              
                              one
                              
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        .

The constrained handling mechanism as defined in Deb et al., 2002 is used. When two solutions under consideration for a domination check are feasible, then the above modified domination criterion is used. If one point is feasible and the other is infeasible, then the feasible solution is considered to be dominating the infeasible solution. If both points are infeasible, then the one having smaller overall constraint violation is declared to be dominating the solution with higher overall constraint violation.

The PI-EMO-PC procedure has been implemented on the NSGA-II algorithm. However, it is possible to integrate the procedure with any other EMO algorithm. Firstly a few generations of the algorithm, as discussed in the steps above, are performed according to the usual NSGA-II algorithm (Deb et al., 2002) and the archive set is maintained. Thereafter, the NSGA-II algorithm is modified by using the modified domination criterion (discussed in Section 4.5) in the elite-preserving operator and tournament selection for creating the offspring population. The NSGA-II recombination operator (SBX) has been used in this study without any modification. The crowding distance operator of NSGA-II is not used in this implementation because of its poor performance (Deb, Mohan, & Mishra, 2003) in higher dimensions. It has been replaced with k-mean clustering for maintaining diversity among solutions of the same non-dominated front.

An archive A is maintained which contains all the non-dominated members found in the current as well as the previous iterations of the optimization run. Archiving makes sure that most of the non-dominated solutions that are generated at the intermediate steps of the algorithm are never lost, even if the DM makes an error while providing preference information at a particular DM call.

For local search (discussed in Section 4.4), the SQP code of KNITRO (Byrd, Nocedal, & Waltz, 2006) software has been used in this paper to solve the single objective optimization problem. The SQP algorithm is terminated either when 
                        
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                z
                                             
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      →
                                                   
                                                
                                             
                                             
                                                c
                                                -
                                                1
                                             
                                             
                                                best
                                             
                                          
                                       
                                    
                                 
                                 ·
                                 
                                    
                                       
                                          
                                             D
                                          
                                          
                                             I
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                           
                           >
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                        
                      or when the Karush–Kuhn–Tucker (KKT) error measure is less than or equal to 10−6. If the local search terminates due to the KKT measure, then the overall PI-EMO-PC algorithm gets terminated.

As already discussed, we need to find out the ideal point before the start of the algorithm. We use the parent centric crossover (PCX) based single-objective algorithm (Sinha, Srinivasan, & Deb, 2006) for the single-objective optimization. The algorithm is executed for a maximum of 2000 function evaluations for each of the objectives ignoring all the other objectives, but keeping the constraints. These function evaluations are counted separately from the function evaluations required to solve the problem. While presenting the results later on, we assume that the ideal points are given. One could use any single objective optimization algorithm (Powell, 2006; Hansen & Ostermeier, 2001) to find an approximation to the ideal point. If the number of function evaluations is very high, then the ideal point can be replaced with an aspiration point elicited from the DM.

@&#RESULTS@&#

In this section, we present the results of the PI-EMO-PC procedure on two, three, and five-objective unconstrained as well as constrained test problems. ZDT1, DTLZ2, DTLZ8 and DTLZ9 test problems are adapted to create maximization problems. For all the runs in this study we have used the following parameter values.
                        
                           1.
                           Number of DM calls: T
                              
                                 DM
                              
                              =10, 20.

Crossover Prob.=0.9, Distribution Index (SBX operator) =15.

Mutation Prob.=0.1, Distribution Index (Polynomial Mutation)=20.

Population size: N
                              =10M, where M is the number of objectives.

Maximum Archive Size: A
                              
                                 max
                              
                              =10N, where N is the population size.

After presenting the results obtained with this setting, we perform a parametric study with T
                     
                        DM
                      and ∣A∣
                        max
                      in a later section.

In this section, we consider 5 different test problems given in Table 1
                     , which offer different kinds of difficulties to the algorithm. The test-set consists of unconstrained as well as constrained test problems, with number of objectives from 2 to 5. In order to evaluate our methodology, we resort to a value function emulating a consistent DM. A value function representing a consistent and rational DM has a fixed most preferred point, and optimizing this value function always leads to the same point on the frontier. No information from the value function is used in the algorithm other than deciding the best solution from the given set. Since the most preferred point z
                     ∗ is known for the chosen value function, it allows us to compare the solution obtained from PI-EMO-PC with z
                     ∗.

Problem 1 is a modified formulation of the ZDT1 test problem and has 30 variables. This problem is modified to have a non-convex Pareto front. This test problem assesses the algorithm’s ability in handling problems with a non-convex Pareto front.

The contours of the value function for this problem are shown in Fig. 9
                         along with the most preferred point corresponding to the value function.


                        Table 2
                         shows best, median and worst accuracy and the number of overall function evaluations recorded from 21 runs. The overall function evaluations consist of the function evaluations used by the evolutionary approach, and the function evaluations used by the local search. The accuracy measure shown in Table 2 is computed based on Euclidean distance of the obtained solution from the exact most preferred point (z
                        ∗). As expected, when the budget of calls is increased from 10 to 20, the accuracy increases. It should be noted that the accuracy and the number of function evaluations given in Table 2 may not correspond to the same run. The accuracy can be best for one of the 21 runs and the number of function evaluations may be best for some other run. Table 2 indicates that the proposed PI-EMO-PC procedure is able to find a solution close to the exact most preferred solution (see Fig. 10
                        ).

The DTLZ2 test problem (Deb et al., 2005) is a scalable test problem where all points in the objective space have positive coordinates and are bounded by two spherical surfaces. In this paper, we maximize each of the objectives of the DTLZ2 test problem, therefore the outer spherical surface becomes the Pareto-optimal front.

The PI-EMO-PC is executed 21 times with different initial population each time. In Table 3
                        , the accuracy achieved and the number of overall function evaluations required by the algorithm are given. Once again the results have been presented for two different values of the budget (T
                        
                           DM
                        ) of DM calls. The accuracy achieved suggests that the obtained points are in proximity to the most preferred point z
                        ∗. Fig. 11
                         shows the population at the final generation of a typical PI-EMO-PC run.

Now, we consider a three-objective constrained test problem. The chosen test problem is DTLZ8 (Deb et al., 2005) which is scalable to any number of objectives. As suggested in Deb et al., 2005, we choose the number of variables as 30 (n
                        =10M) for three objectives. The original problem is a minimization problem, but have converted it into a maximization problem.

The PI-EMO-PC is executed 21 times with random initial population and the results are presented in Table 4
                        . Fig. 12
                         shows the final population members at the final generation of a typical PI-EMO-PC run.

Next, we evaluate the performance of the algorithm on a five-objective test problem. The chosen test problem is a five-objective version of the DTLZ2 problem described before. Once again the search space is defined by two spherical surfaces, with the outer surface being the Pareto-optimal front. The results are presented in Table 5
                        .

For this test problem we have shown a convergence plot in Fig. 13
                         for one of the runs. The maximum budget of DM calls, T
                        
                           DM
                        , was fixed as 10 for the run. Since the most preferred point is already known for the test problem, we evaluate the convergence properties of the algorithm by calculating the Euclidean distance between the best point chosen by the DM (at a particular call) and the most preferred point. It can be seen from the plot that the algorithm improves uniformly from one DM call to another and gets close to the most preferred point. The algorithm run gains an approximate improvement of d
                        
                           I
                         from one DM call to another, and the fine-tuning gains an approximate improvement of d
                        
                           I
                        /2 from one DM call to another.

We now consider the DTLZ9 (Deb et al., 2005) test problem which is scalable to any number of objectives. We consider a five-objective (M
                        =5) version of the test problem with the number of variables equal to 50. Once again the original test problem is a minimization problem, but we have converted it into a maximization problem.


                        Table 6
                         provides the results obtained from multiple runs of the PI-EMO-PC procedure. Fig. 14
                         shows the final population members at the final generation of a typical PI-EMO-PC run. Since the first four objectives are expected to be equal on the frontier, we plot the figure with f
                        1 against f
                        5. The other objectives provide a similar plot when represented against f
                        5.

For all the test problems, the best, median and worst results suggest that the algorithm is able to approximate the most preferred point with a high accuracy. The obtained accuracy is found to increase with an increase in the budget of decision maker calls.

In order to test the sensitivity of the algorithm to the location of the most preferred point on different parts of the frontier, we randomly choose a most preferred point (say z) on the frontier and construct a value function as 
                           
                              V
                              (
                              f
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          M
                                       
                                    
                                    
                                       
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          
                                             
                                                a
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        . For a given z, we choose 
                           
                              a
                              =
                              z
                              +
                              0.1
                              ×
                              
                                 
                                    p
                                 
                                 
                                    ˆ
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    p
                                 
                                 
                                    ˆ
                                 
                              
                           
                         is a unit vector perpendicular to the Pareto-optimal front at point z. The obtained value function is a distance-based function and not a true value function, as it might assign a higher value to a dominated point. However, the property of this function is that it assumes a maximum at the point z. If only non-dominated points are given for ranking, it serves the purpose of a value function and ranks them in the order of their proximity to the most preferred point. For each test problem we generate 100 random most preferred points, and their corresponding value functions. We execute the PI-EMO-PC algorithm for each of the most preferred points, and report the accuracy distribution in Fig. 15
                        . From the distribution we observe that the algorithm is able to converge close to the most preferred point, irrespective of the location of the most preferred point on the Pareto-optimal front.

The algorithm uses two important parameters, T
                     
                        DM
                     , which is the maximum number of times a DM will be available to provide preference information, and ∣A∣
                        max
                     , which is the maximum archive size. The other parameters used in the algorithm are the usual parameters associated with an evolutionary algorithm, namely, population size, crossover probability, mutation probability, crossover index and mutation index. A parametric study has been done using T
                     
                        DM
                      and ∣A∣
                        max
                      while the other usual EMO parameters have been kept fixed. Results for T
                     
                        DM
                     
                     =10 and T
                     
                        DM
                     
                     =20 have already been presented, but in this section the algorithm is evaluated for higher values of T
                     
                        DM
                     . The effect of maintaining a small or a large archive has also been studied and the results are reported.

The effect of T
                     
                        DM
                      has been studied by considering five different values: 10, 20, 30, 40 and 50. The parameter ∣A∣
                        max
                      has been kept fixed at 10N. The PI-EMO-PC procedure has been run 21 times with different initial random populations and the best, median and worst performance measures have been presented. Figs. 16 and 17
                     
                      show the accuracy and the number of function evaluations when T
                     
                        DM
                      is increased from 10 to 50 for five-objective modified DTLZ2 and DTLZ9 test problems respectively. The accuracy is represented as the Euclidean distance between the solution obtained through PI-EMO-PC algorithm and the most preferred point. The smaller the Euclidean distance, the higher is the accuracy. It can be observed from the two figures that an increase in preference information in terms of number of DM calls leads to improvement in accuracy. The function evaluations are found to be higher for higher DM calls, which can be attributed to two causes. Firstly, higher number of local searches are performed at the intermediate steps of the algorithmic run leading to higher local search function evaluations. Secondly, the algorithm moves in a zig-zag path with small steps towards the most preferred point making the overall search path longer. In case of low DM calls the algorithm still moves in a zig-zag path but in larger steps.


                     Fig. 18
                      shows the change in accuracy with an increase in the maximum archive size. As the maximum archive size increases there is a sharp increase in accuracy as well. However, beyond the maximum archive size of 10N, there is no significant improvement with further increase in the maximum archive size.

The number of function evaluations required for two and three-objective problems is much less than what would be required if an EMO algorithm were used to generate the frontier with a similar accuracy. In five dimensions, an EMO algorithm (including NSGA-II) will fail (Deb et al., 2005) to produce a solution with a similar accuracy. In order to confirm this, we have performed a comparison of the proposed preference-based approach against an EMO algorithm (NSGA-II), which does not involve any DM interaction and uses the usual Pareto-domination criterion. The non-dominated solutions obtained by the EMO approach are taken and the distance from the point closest to the most preferred point is reported as the accuracy of the approach. Of course having a set of non-dominated solutions has its own advantages, however, here we would like to draw a comparison as to how close can an EMO algorithm get to the most preferred point. One could claim that increasing the population size of the algorithm could provide a better accuracy, but on the other hand it leads to a higher number of function evaluations. In this simulation, we have chosen different number of generations and population sizes for each problem. Based on a few experiments appropriate population sizes and number of generations were chosen to ensure that the EMO algorithm has converged. The comparison results are presented in Table 7
                     . From Table 7, one could readily observe the deterioration in accuracy with increasing number of dimensions. Moreover, the accuracy in the case of NSGA-II has been achieved only after a high number of function evaluations. On the other hand, the proposed preference-based approach is able to achieve a higher accuracy with much fewer function evaluations for most of the problems. Most of the EMO algorithms require a high population size to generate the entire frontier, which leads to high function evaluations. However, PI-EMO-PC approach requires a much smaller population size, as it performs a focused search and generates a single point on the Pareto-optimal frontier. Therefore, integration of preference information within an EMO algorithm is a viable way to handle such problems. The preference information helps in a number of ways, such as reducing the computational expense, leading to an enhanced accuracy and rendering these problems solvable.

In this section, we evaluate the proposed fixed budget of DM calls scheme on the PI-EMO-VF approach (Deb et al., 2010; Sinha, Deb, Korhonen, & Wallenius, 2010). The PI-EMO-VF approach is modified, such that it stores all the non-dominated members in the archive. A single point from the archive is chosen by the DM during any DM call, and a value function is constructed with this information. We implement the fixed budget scheme, and also incorporate fine tuning in the PI-EMO-VF approach. In other words, we replace the polyhedral cones in the algorithm described in this paper with value functions, and evaluate the performance. The median results obtained by the value function based approach are reported in Table 8
                     , and a comparison has been drawn against PI-EMO-PC. It can be observed that both methods perform similarly under similar settings.

In this section, we perform a study for variable step-size, where we compare the fixed step-size against other possibilities, i.e. reducing step-size and increasing step-size. For reducing step-size we consider two scenarios, a linearly reducing step-size and an exponentially reducing step-size. Similarly, for increasing step-size we consider two scenarios, a linearly increasing step-size and an exponentially increasing step-size. If the estimated distance to be traversed is D
                     
                        I
                     , then the individual steps (d
                     
                        i
                     ) taken by the algorithm should sum up to D
                     
                        I
                     , as shown in the following equation.
                        
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       
                                          
                                             T
                                          
                                          
                                             DM
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    D
                                 
                                 
                                    I
                                 
                              
                           
                        
                     In case of fixed step-size, 
                        
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                              
                           
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                           =
                           
                              
                                 D
                              
                              
                                 I
                              
                           
                        
                      which gives 
                        
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                           =
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                              
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                              
                           
                        
                     . In case of linearly reducing step-size we have 
                        
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                              
                           
                           (
                           
                              
                                 T
                              
                              
                                 DM
                              
                           
                           -
                           i
                           +
                           1
                           )
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                           =
                           
                              
                                 D
                              
                              
                                 I
                              
                           
                        
                     , which gives 
                        
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           =
                           (
                           
                              
                                 T
                              
                              
                                 DM
                              
                           
                           -
                           i
                           +
                           1
                           )
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                           =
                           (
                           
                              
                                 T
                              
                              
                                 DM
                              
                           
                           -
                           i
                           +
                           1
                           )
                           
                              
                                 2
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                              
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                                 (
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                                 +
                                 1
                                 )
                              
                           
                        
                     . Similarly, in case of exponentially reducing step size we have 
                        
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                              
                           
                           
                              
                                 2
                              
                              
                                 (
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                                 -
                                 i
                                 )
                              
                           
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                           =
                           
                              
                                 D
                              
                              
                                 I
                              
                           
                        
                     , which gives 
                        
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 2
                              
                              
                                 (
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                                 -
                                 i
                                 )
                              
                           
                           
                              
                                 d
                              
                              
                                 I
                              
                           
                           =
                           
                              
                                 2
                              
                              
                                 (
                                 
                                    
                                       T
                                    
                                    
                                       DM
                                    
                                 
                                 -
                                 i
                                 )
                              
                           
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       I
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       
                                          
                                             T
                                          
                                          
                                             DM
                                          
                                       
                                    
                                 
                                 
                                    
                                       2
                                    
                                    
                                       (
                                       
                                          
                                             T
                                          
                                          
                                             DM
                                          
                                       
                                       -
                                       i
                                       )
                                    
                                 
                              
                           
                        
                     . The step-sizes for the increasing case may be computed in a similar manner. Next, we provide the results in Table 9
                      for the variable step-size study performed on all the test problems. The table provides the median accuracy obtained for all the test problems. It can be observed that exponentially decreasing step-size performs the best followed by linearly decreasing step-size. Increasing step-size approach performs the worst, which could be understood intuitively. Decreasing step-size takes larger steps in the beginning and smaller steps towards the end, which means that the DM is called fewer times when the algorithm is far away from the frontier, and more frequent calls are made when the algorithm approaches the frontier. This makes it perform the best when compared with other cases. For brevity, we skip the table for number of function evaluations, as they were found to be of similar magnitude for all the step-size cases for the respective test problems.

In this section, we aim to assess the importance of individual components in the algorithm, like the fine-tuning strategy, storing all solutions in an archive, and choice of fixed step-size. To assess the accuracy advantage because of a particular component, we execute the PI-EMO-PC approach by using all the components, and then compare the accuracy by eliminating one of the components. That is, in order to assess the importance of fine-tuning we execute the algorithm without fine-tuning and then record the accuracy loss. Similarly, in order to assess the importance of storage of solutions in an archive, we execute the algorithm without an archive and measure the accuracy loss. For assessing the importance of step-size, we execute the algorithm with a random step-size and once again record the loss in accuracy. For obtaining a random step-size, we choose a step-size randomly between 0 and 2d
                     
                        I
                     , such that the expected step-size is equal to d
                     
                        I
                     . The accuracy loss has been presented in terms of percentage as follows:
                        
                           
                              Accuracy
                              
                              Loss
                              =
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          c
                                       
                                    
                                    -
                                    
                                       
                                          A
                                       
                                       
                                          c
                                       
                                       
                                          (
                                          -
                                          1
                                          )
                                       
                                    
                                 
                                 
                                    
                                       
                                          A
                                       
                                       
                                          c
                                       
                                    
                                 
                              
                              ×
                              100
                           
                        
                     In the above equation, A
                     
                        c
                      represents the accuracy obtained from PI-EMO-PC executed with all the components, and 
                        
                           
                              
                                 A
                              
                              
                                 c
                              
                              
                                 (
                                 -
                                 1
                                 )
                              
                           
                        
                      represents the accuracy of PI-EMO-PC approach without one particular component. The results have been presented in Table 10
                     . It can be observed that step-size and storing solutions in an archive have a large contribution towards accuracy. Fine-tuning leads to a relatively small contribution towards accuracy.

The proposed fixed budget scheme is generic and applicable to all kinds of multi-objective problems, irrespective of the kind of Pareto-frontier. The algorithm begins with an ideal point and computes the step-size between two DM calls based on the distance of the ideal point from the initial population members. The scheme assumes the ideal point as the target point and computes the step-sizes based on distance from it. In this way we are always over-estimating the distance of the actual most preferred point from the initial population members. If the Pareto-front is convex, the over-estimation might not be large, however, if the Pareto-front is concave, we might be highly overestimating the distance of the most preferred point. In cases with high overestimation, the algorithm will terminate with few DM calls and then the fine-tuning step will be used to utilize the remaining DM calls. In the current version of the algorithm, the fine-tuning is performed by retreating away from the frontier and then restarting the search with smaller step-sizes. In future work, we would like to improve the fine-tuning step by allowing a search on the Pareto-optimal frontier, instead of retreating away from the frontier. In the proposed approach, we fix the step-size between two DM calls, however, this might not always be a good strategy as suggested by our variable step-size study. The algorithm involves a local search step for which we are currently using an SQP-based algorithm. One could replace the SQP-based algorithm with any other fast black-box algorithm (for example; a greedy genetic algorithm).

@&#CONCLUSIONS@&#

In this paper, a progressively interactive EMO algorithm has been proposed which uses the idea of polyhedral cones and polyhedral sets to move towards the most preferred point. Before the start of the optimization the DM is expected to provide information about the maximum number of times she will be available to provide preference information. This is called the budget of DM calls, and the algorithm tries to find the most preferred point within this budget by accepting preference information in the intermediate steps of the algorithm. Preference information is accepted in terms of the best member from the given archive set. Eliciting preferences progressively provides the algorithm information to focus the search on a specific area of the search space. The algorithm has been rendered self-adaptive such that it makes a decision when to switch to a local search and when to elicit preference information from the DM. It brings the DM and the algorithm together, providing more control to the DM over the optimization process. The procedure successfully handles two to five-objective constrained and unconstrained test problems. A parametric study has been done for the parameters, maximum number of DM calls, and maximum archive size. It has been shown that the budget of DM calls is critical in defining the accuracy of the optimization, with higher values leading to better accuracy. The performance of the algorithm shows that such progressively interactive techniques are capable of handling optimization problems with a relatively large number of objectives efficiently.

@&#ACKNOWLEDGMENTS@&#

The authors thank the Academy of Finland (Grants: 133387 and 253583), Wallenberg Foundation and Liikesivistysrahasto for supporting this study.

@&#REFERENCES@&#

