@&#MAIN-TITLE@&#Incorporating improved refinement techniques for a grid-based geometrically-adaptive hexahedral mesh generation algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A set of improved 27-refinement templates is proposed to improve the mesh quality.


                        
                        
                           
                           8-Refinement based mesh generation algorithm is put forward.


                        
                        
                           
                           The date structure and procedures for realization of the algorithm are presented.


                        
                        
                           
                           A buffer layer is inserted on the concave domains to resolve propagation problems.


                        
                        
                           
                           Several examples demonstrate the effectiveness and robustness of the algorithm.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Hexahedral mesh generation

Conformal refinement

8-Refinement templates

Grid-based method

Mesh quality

27-Refinement templates

@&#ABSTRACT@&#


               
               
                  This paper presents a density control based adaptive hexahedral mesh generation algorithm for three dimensional models. To improve the mesh quality of hexahedral elements, a set of improved 27-refinement templates is proposed and the refinement modes of these templates are given. A set of effective refinement templates for 8-refinement based mesh generation algorithm is employed. The corresponding date structure and the procedures for realization of the algorithm are also presented. A buffer layer is inserted on the concave domains to resolve the propagation problems. Finally, the effectiveness and robustness of the algorithm are demonstrated by using several examples.
               
            

@&#INTRODUCTION@&#

With the development of computer technology and numerical method, numerical simulation methods such as finite element method, finite volume method, and finite difference method play more and more important roles in the fields of science research and engineering applications. Mesh generation is the key technique in the preprocessing part of numerical analysis software, and its task is to discretize the solid model into a ‘mesh’ composed of a number of elements. The efficiency and accuracy of numerical analysis and the reliability of software computation are strongly dependent on the density and quality of mesh model. In three-dimensional numerical analysis, tetrahedron, hexahedron and a combination of them are usually used. Hexahedral element meshes have been proved to be superior to tetrahedral element meshes in terms of analysis accuracy, amount of meshes, distortion resistance and regeneration times [1]. This turns hexahedra an attractive choice for the numerical analysis of three-dimensional problems.

Due to the characteristics of finite element mesh, the quality of deformed mesh has a great effect on the accuracy of numerical analysis. It is crucial to improve the mesh quality. The quality of finite element mesh not only includes the quality of a single element mesh but also the quality of the whole element mesh. A main index of presenting the whole element mesh quality is the reasonable distribution of mesh density. In general, mesh density distribution depends on many factors, such as the geometry of solid models, the topology requirement from an adjacent mesh, field variables distribution, and user’s specification. Although user could manually guide the mesh generation according to experience, this manual density control way is tedious and very approximate, especially when the geometry of a solid model is very complex. Thus adaptive mesh generation techniques are very important. Generally, an effective adaptive mesh generation can give a reasonable mesh density distribution corresponding to the geometric features of engineering problems to be analyzed, enhance the analysis result accuracy and minimize the computational cost at the same time.

In particular, in bulk metal plastic forming analysis, as severe local stress and deformation concentration frequently occurs due to the gradual contact of deforming material with dies, the mesh elements are often distorted and the regeneration process is needed frequently. In addition, in the areas with non-uniform deformation and stress concentration, mesh elements should be meshed adaptively and with reasonable local refinement. Therefore, a sound mesh generation is necessary and it can significantly improve the accuracy and efficiency of the analysis. Up to now, many researches have been done in developing the automatic hexahedral mesh generation algorithms [2–6]. There are mainly four typical approaches proposed for all-hexahedral mesh generation, including mapping/sweeping method [7,8], plastering method [9,10], whisker-weaving method [11–13] and the grid-based method [14,15]. The grid-based method is relatively simple to implement and easy to realize the local refinement. Recently, with the development of the adaptive techniques of mesh generation, grid-based method is modified by many researchers and used widely in the mesh [16–19]. Unfortunately, there are no demonstrated methods for creating grid-based, good-quality, reasonably density distributed hexahedral meshes, especially when the local mesh refinement is required.

One basic requirement of mesh generation algorithm is mesh conformity. At present, the conformal refinement templates are widely used to realize the conformity of hexahedral meshes. The representative is the octree-based refinement templates proposed by Schneiders [20] as shown in Fig. 1
                     , where the black points represent the refinement nodes. This set of refinement templates are named as all refinement, face refinement, edge refinement and node refinement, respectively. It can realize the local conformal refinement of hexahedral mesh elements. Many researchers such as Su et al. [21], Zhang and Bajaj [22], Ito et al. [23], et al. put forward the similar or improved refinement templates on the basis of the Schneiders’ templates. The all refinement template in Fig. 1a subdivides a hexahedral element into 27 similar sub-elements. In this paper, this kind of template is called as 27-refinement and the corresponding set of templates is called as 27-refinement templates. The 27-refinement templates based mesh generation algorithm is referred to as 27-refinement method hereafter. At present, the 27-refinement templates which many researchers adopted either produce much more new elements and nodes after once refinement, or simplify the templates and at the same time reduce the quality of sub-elements. Although the 27-refinement templates can realize the mesh transition, the transition is not smooth from dense meshes to sparse meshes. When the mesh elements within the transition areas are used for finite interpolation calculation, this unsmooth transition of the mesh density will cause a large difference among elements of stiffness matrix and mass matrix, and thereby increase the errors of numerical calculation. Moreover, the 27-refinement templates only can realize the refinement of the mesh whose element size ratio is multiples of 3, but cannot perform the mesh refinement flexibly according to various refinement requirements. Schneiders and Aachen [24] proposed another set of quadtree based templates which include all refinement, face refinement and edge refinement, as shown in Fig. 2
                     . The all refinement template in Fig. 2a subdivides a hexahedral element into 8 similar sub-elements. In this paper, this kind of template is called as 8-refinement and the corresponding set of templates is called as 8-refinement templates. The 8-refinement templates based mesh generation algorithm is referred to as 8-refinement method hereafter. Fig. 2a and b shows the all refinement template and face refinement template, respectively. The face refinement can only be applied when four elements on the same plane and adjacent to one node. The edge refinement can be realized according to the template shown in Fig. 2c. Since the 8-refinement templates can realize gradual and conformal transition from dense meshes to sparse meshes, it is more favorable for the finite element calculation.

Aiming at solving the above problems of local refinement and mesh quality, this paper principally studies the density control based adaptive generation algorithm of three-dimensional hexahedral meshes. In order to improve the mesh quality of hexahedral element, this paper proposes a set of improved 27-refinement templates to perform local mesh refinement efficiently without creating any hanging nodes. At the same time, a set of effective 8-refinement templates is employed to ensure the hexahedral mesh transition gradually and conformably. A buffer layer is inserted on the transition refinement domains that contain concave corners to resolve the propagation problem. By using the 8-refinement method and the improved 27-refinement method, the local refinement of all-hexahedral meshes can be easily realized according to the different density requirement of users.

The authors of this paper proposed an improved grid-based method for generating all hexahedral element mesh in the domain of a three-dimensional solid model [25]. It is based on the conventional grid-based method and geometry-adaptive technique to generate uniformly sized or locally refined hexahedral meshes. Fig. 3
                      shows the mesh generation process for a mechanical CAD model. There are five major steps. The first step is the construction of a solid model (Fig. 3a) and the boundary identification (Fig. 3b). Secondly, an initial refined grid structure which completely encompasses the solid model is generated (Fig. 3c). Thirdly, the core mesh is generated through removing all the elements in the exterior of the solid model (Fig. 3d). The fourth step is to magnify the core mesh through a surface node projection process using the closest position approach (Fig. 3e). Finally, the mesh quality such as topology and shape is improved by using corresponding optimization techniques (Fig. 3f).

The Scaled Jacobian of the Jacobian matrix is selected to measure the quality of hexahedra during the mesh generation [26,27]. Since a hexahedron has eight nodes, the minimum of the eight Scaled Jacobian values, Jmin
                     , is used to check and evaluate its quality. Positive Scaled Jacobian is considered as the minimal quality permitted for a finite element mesh. The hexahedron whose Scaled Jacobian value is greater than about 0.2 represents geometrically well-shaped element [28]. While the Scaled Jacobian of a hexahedron is above 0.5, it is considered as a very excellent resulting mesh.

The conformity of the finite element mesh is the basic requirement of mesh generation algorithm. In order to ensure the conformity of the finite element mesh, this paper inserted the conformal refinement templates into the element-based refinement field to realize the conformal transition.

The 27-refinement templates are the most widely used templates for hexahedral element mesh refinement. As in Ref. [29], the authors of this paper proposed a set of 27-refinement templates as shown in Fig. 4
                     , where the black points represent refinement nodes. Comparing with the templates proposed by Schneiders in Fig. 1, this set of templates change the face refinement and edge refinement, and add two new corner templates. The advantage of it is that the numbers of the new elements and nodes are decreased evidently after refining once and the propagation problem is under control. Table 1
                      shows the number of elements after using the templates proposed by Schneiders in Fig. 1 and the templates proposed by authors in Fig. 4 one time. The disadvantage of it is that, although the quality of the new elements produced by the templates fulfills the requirements of finite element analysis, the quality of individual sub-elements is not very high. For this reason, this paper proposed an improved 27-refinement templates by optimizing the positions of the new nodes in these templates and keeping the subdivision mode unchanged.


                     Fig. 5
                      shows the improved 27-refinement templates proposed in this paper and gives the detailed view of each template. The detailed view of the node refinement template is not given here because it is not used usually in the practical process of mesh generation. Fig. 6
                      compares the quality of the sub-elements produced from a hexahedron by using the templates in Fig. 4 and the improved templates in Fig. 5. It can be seen from the figure that the quality of some sub-elements is improved obviously and the quality of some sub-elements is unchanged by using the improved templates in Fig. 5. All the Jmin
                      of the sub-elements exceed 0.5 after improvement. The improved elements can ensure the accuracy of finite elements analysis.

At present, the 27-refinement templates are widely used by many researchers. The templates can ensure the conformity of the hexahedral element meshes. However, it produces much more new elements and nodes after once refinement. This case increases the degree of freedom of the finite element analysis. Moreover, the transition from dense meshes to sparse meshes is in a hurry or not smooth. This situation will increase the errors of numerical calculation result. A set of 8-refinement templates as shown in Fig. 7
                         is thus adopted in this paper to resolve the above problems.

A hexahedron has six faces and each face of the five templates in Fig. 7 has a corresponding face subdivision mode as shown in Fig. 8
                        . If a quadrangle face is divided into 4 sub-quadrangles, it is defined as 4-subdivision face (Fig. 8a). If a quadrangle face is divided into 3 sub-quadrangles, it is defined as 3-subdivision face (Fig. 8b). When the quadrangle face is divided into 2 sub-quadrangles, it is defined as 2-subdivision face (Fig. 8c), and the face without any division is called the initial face (Fig. 8d). The templates of Fig. 7b–d need to be used in pairs of elements. But for the element that lies on the boundary of the solid model, the templates in Fig. 7b–d can be applied alone. These three templates all have 3-subdivision faces. When the 3-subdivision faces of two refining elements are combined in the mode as shown in Fig. 8e, this mode of combination is called as face to face combination, here simplified as FTF. When the 3-subdivision faces of two refining elements are combined in the mode as shown in Fig. 8f, this mode of combination is called as back to back combination, here simplified as BTB.


                        Table 2
                         shows the applications of the templates in Fig. 7 based on the nodes attribute of a hexahedron in the refinement field. The solid circle nodes represent the refinement node and the hollow square nodes represent the sub-refinement node. Firstly, according to the elements refinement attribute, the elements can be classified into five types: namely, zero refinement element, all refinement element, face refinement element, edge refinement element and transition refinement element. Then, according to the refinement attribute of the eight nodes in each element, the corresponding refinement template for each element is determined. The second row in Table 2 shows the case of zero-refinement element which has no node need to be refined. The third row in Table 2 shows the case of all-refinement element in which all of eight nodes need to be refined. In this case, the all refinement template in Fig. 7a is used. The element will be divided into 8 sub-elements after once refinement with the all refinement template. The fourth row in Table 2 shows the case of face-refinement element in which four nodes on the same face need to be refined. Correspondingly, the face refinement template in Fig. 7b is used. The element will be divided into 6 sub-elements after once refinement with the face refinement template. It should be noticed that the face-refinement template need to be used in pairs of elements and its application mode is shown at Row 4/Column 4 in Table 2.

The fifth row in Table 2 shows the case of the edge-refinement element in which two nodes on the same edge need to be refined. In accordance with different situations, the templates in Fig. 7c–e are used respectively. When the template in Fig. 7c is used once, the hexahedral element will be divided into 4 sub-elements. The template in Fig. 7d will produces 3 sub-elements and the template in Fig. 7e will produces 2 sub-elements after once refinement. The templates in Fig. 7c and d also need to be used in pairs of elements and their application mode is shown at Row 5/Column 4 in Table 2. The sixth row in Table 2 shows the refinement case of transition refinement element. After the all refinement element, face refinement element and edge refinement element are refined, some new refinement nodes will be produced due to the specialty of templates, especially for the templates which are used in pairs, such as the face refinement element and edge refinement element. These newly produced nodes are called as sub-refinement nodes. Therefore, some elements that contain sub-refinement nodes also need to be refined. According to the sub-refinement nodes which the transition elements contain, the templates in Fig. 7c and d are used, and the application mode is shown at Row 6/Column 4 in Table 2.

When the templates are applied one time, the different template will generate different number of new elements and nodes. Table 3
                         lists the number of new elements and nodes after using each template shown in Fig. 7 one time.

One hexahedron has eight vertices, so there are totally 256 (28) configurations according to the permutation and combination of node refinement attribute. Due to the symmetry, there are totally 22 necessary templates [17], but not all the templates can be decomposed into hexahedra. Fig. 7 gives five templates for the adaptive hexahedral element mesh refinement. However, in the initial refinement field, there are more than five refinement modes. So the initial refinement field must be converted according to the above five refinement modes, until every element can match to a corresponding refinement mode in Fig. 7. Taking a hexahedron as example, Table 4
                         lists the adjustment rule of the element refining attribute in the initial refinement field. The first column in Table 4 is the number of the nodes to be refined (from 0 to 8). The second column shows the schematic diagrams of the node-refinement modes in the initial refinement field, where the circle-marked nodes represent the nodes to be refined in the initial refinement field. The third column shows the converted node-refinement modes, where the triangle-marked nodes are the converted nodes to be refined. And the last column shows the corresponding node-refinement modes after the conversion, where all of the circle nodes represent a new refinement field. Through the conversion, every element in the refinement field is assigned a corresponding refinement template in Fig. 7.

This section introduces the procedure of the local field refinement with 8-refinement method by using a simple example shown in Fig. 9
                        .
                           
                              (1)
                              Supplement refinement elements.

Because the face refinement element and the edge refinement element need to be used in pairs, the number of the elements along each direction should be even. This paper supposes that each refinement element has no less than three face-adjacent refinement elements which are adjacent to one node. As shown in Fig. 9a, the grey element E is to be refined and the face-adjacent elements e1, e2, e3 which are node adjacent, are also defined as the refinement element according to the refinement criterion stated above.
                           
                              (2)
                              Adjust refinement field.

The element refinement field generated in step (1) is converted according to the rules in Table 4. And a new element refinement field in which every element can find a corresponding refinement template in Fig. 7 is generated.
                           
                              (3)
                              Classify the refinement elements and complete the first level refinement.

According to the refinement element attribute in Table 2, the elements are classified into three types: all refinement element, face refinement element and edge refinement element, as shown in Fig. 9b. Then the refinement elements are refined in the sequence of all refinement element, face refinement element and edge refinement element. This process is called as the first level refinement. Fig. 9c shows the resulting mesh after refining the all refinement elements. E1 in Fig. 9d is a set of face refinement elements which consists of four face-adjacent elements and the template in Fig. 7b is used to refine them with FTF combination mode. By the same means, E2 and E3 are refined too. From Fig. 9d we can see that E12 is a set of edge refinement elements which is face-adjacent to E1 and E2. The upper surfaces of E12 coincide with the 2-subdivision faces of E1 and the right surfaces of E12 coincide with the 3-subdivision faces of E2. Therefore, E12 corresponds with the template in Fig. 7d and it can be refined in the combination mode of FTF as C21 in Table 2. E23 is a set of edge refinement elements which is face-adjacent to E2 and E3. The upper surfaces of E23 coincide with the 2-subdivision faces of E3 and the left surfaces of E23 coincide with the 2-subdivision faces of E2. Therefore, E23 corresponds with the template in Fig. 7e and it can be refined with this template. E13 is a set of edge refinement elements which is face-adjacent to E1 and E3. The left surfaces of E13 coincide with the 3-subdivision faces of E1 and the right surfaces of E13 coincide with the 3-subdivision faces of E3. Therefore, E13 corresponds with the template in Fig. 7c and it can be refined in the combination mode of FTF as C11 in Table 2.
                           
                              (4)
                              Complete the second level refinement.

The last step is to refine the transition elements. It is also called as the second level refinement. As seen in Fig. 9e, the elements of e4, e5, e6 and e7 do not need to be refined at first. When the first level refinement is finished, it produces some refinement nodes which correspond to the circle dots in Fig. 9e and some sub-refinement nodes which correspond to the square dots in Fig. 9e. The elements containing these refinement nodes and sub-refinement nodes are named as the transition elements. They need to be refined according to the nodes attribute. Since e4 in Fig. 9e contains two collinear refinement nodes and two collinear sub-refinement nodes, it corresponds with the template in Fig. 7d and it can be refined in the combination mode of FTF as D21 in Table 2. In the same way, e5 is refined too. Since e6 in Fig. 9e contains three coplanar refinement nodes, it corresponds with the template in Fig. 7e and it can be refined in the combination mode of FTF as D11 in Table 2. Similarly, e7 is also refined according the same way as e6.


                        Fig. 10
                         shows the flow chart of the procedure of the local field refinement using 8-refinement method.

The description in Fig. 9 is the process of convex domains refinement. While the solid model contains concave domains as shown in Fig. 11
                        a where the shaded area A needs to be refined, there are two ways to resolve this situation. One is to complete the refinement areas with the elements shown in areas B which are not in the initial refinement field. In this way, all the refinement elements can be refined with the templates in Fig. 7 and the resulting mesh is showed in Fig. 11b. As can be seen from the figure, the old refinement region is propagated and the number of nodes and elements of the resulting mesh is increased accordingly. The resulting mesh does not follow the actual refinement field well. The second one is to insert a buffer layer of elements in the transition elements mesh after the first level refinement. Fig. 11c shows the resulting mesh after the first level refinement and there are no-admissible templates in Fig. 7 for the transition elements in the concave domains. The shaded areas in Fig. 11d show that the inserted buffer layer is prepared for the second level refinement. Therefore, only templates in Fig. 7c and d are used. Fig. 11e shows the final mesh after the second level refinement.

The idea of inserting a buffer layer comes from Schneiders’ paper [30] in which the local refinement of concave domains was treated using the templates in Fig. 1. The refinement field propagation problem is resolved well by inserting a buffer layer, but the mesh quality is lower than the first method. For this reason, this paper combined both methods together in order to try to obtain the best solution. For the local refinement containing concave domains, if the supplemental elements to be refined are quite more, then the insertion of a buffer layer is adopted, otherwise, a buffer layer is not inserted and refine the concave domains according to the way of convex domains.

The mesh quality in transition zone from the coarse mesh to the refined mesh should be good or smooth enough to fulfill the finite element analysis. The mesh qualities of face refinement template proposed by Schneiders in Fig. 2b and adopted in this paper in Fig. 7b are compared. The Scaled Jacobian of the Jacobian matrix is used to measure the element quality generated by each template, and the minimum Scaled Jacobian of the element, Jmin
                        , is shown in Table 5
                        .

The second column and the third column in Table 5 are Jmin
                         of the sub-elements produced by the face refinement template showed in Fig. 2b and in Fig. 7b, respectively. From the table we can see that, the face refinement template proposed by Schneiders produces 7 sub-elements after once refinement, the best quality of sub-element is No.3 and its Jmin
                         is 1.0, the worst quality of sub-element is No.5 and its Jmin
                         is 0.4. The template adopted in this paper produces 6 sub-elements after once refinement, the maximum of Jmin
                         is 1.0 and the minimum of Jmin
                         is 0.707107. The quality of face refinement template proposed by Schneiders is still acceptable, but lower than the template adopted in this paper. This shows that the template in Fig. 7 not only has fewer elements but also has better quality.

According to the algorithm presented above, this paper developed a hexahedral element automatic generation software based on the 8-refinement method and 27-refinement method using object-oriented programming and the C++ language. The algorithm has been tested using many three-dimensional solid models in various fields and the results demonstrated its effectiveness and flexibility. Here, three typical examples are given.


                     Fig. 12
                      is the generated hexahedral mesh of the mechanical model showed in Fig. 3a by using the 8-refinement method. Its refinement field is mainly determined by its surface curvatures and local thickness. The jagged core mesh showed in Fig. 3d was generated by using the 27-refinement method and it includes 5068 elements. While the jagged core mesh showed in Fig. 12a was generated by using the 8-refinement method and it includes 3648 elements. Table 6
                      compares the quality of the jagged core mesh in Figs. 3d and 12a obtained respectively by the three refinement templates: 27-refinement templates in Fig. 4, improved 27-refinement templates in Fig. 5 and 8-refinement templates in Fig. 7. The first row in Table 6 shows the range of Jmin
                      and the first column shows the adopted different refinement templates.

The contents in Table 6 represent the percentage of number of elements in a certain range of Jmin
                      to the total numbers of the elements of the mesh. From the table, we can see that there are 10.9% elements whose Jmin
                      is lower than 0.5 for the mesh generated by using the 27-refinement templates in Fig. 4, while using the improved 27-refinement templates in Fig. 5, the Jmin
                      of all the elements is higher than 0.5. It shows that the mesh quality is raised by using the improved 27-refinement templates in Fig. 5. The Jmin
                      of all the elements generated by using the 8-refinement templates in Fig. 7 is higher than 0.7. Therefore, the mesh quality obtained by using the 8-refinement templates is higher than that generated by using the improved 27-refinement templates.

Grid-based method can generate well-shaped hexahedral elements in the interior of the solid models but poor quality elements at the boundary of the solid models. Thus, the mesh quality will decline after matching the core mesh to the solid model. Fig. 3f shows the final mesh generated with the improved 27-refinement templates in Fig. 5. It includes 8988 elements and the minimum of Jmin
                      is 0.259164. Fig. 12b shows the final mesh generated with the 8-refinement templates in Fig. 7. It includes 7414 elements and the minimum of Jmin
                      is 0.519307. Therefore, the 8-refinement method not only generates fewer elements but also has better quality than the 27-refinement method. Fig. 13
                      compares the mesh quality in Fig. 3f and in Fig. 12b. Compared with the 27-refinement method, the ratio of number of the elements whose Jmin
                      is between 0.9 and 1.0 to the total number of the elements of solid model increases from 43.81% to 66.35% after using the 8-refinement method. Thus, the 8-refinement method is more satisfied with the requirement of finite element analysis.


                     Fig. 14
                      presents a forging die of flange yoke meshed by using the 27-refinement method and 8-refinement method, respectively. Its refinement field is mainly determined by its surface curvatures and geometry features. Fig. 14a and b are the jagged core meshes generated with the 27-refinement templates and 8-refinement templates, respectively. The number of the jagged core mesh elements is 11,012 for the 27-refinement templates, while the number is 3820 for the 8-refinement templates. Table 7
                      compares the quality of the jagged core mesh in Fig. 14a and b respectively obtained by the three refinement templates: 27-refinement templates in Fig. 4, improved 27-refinement templates in Fig. 5 and 8-refinement templates in Fig. 7. From the table, we can see that there are 8.99% of elements whose Jmin
                      is lower than 0.5 for the 27-refinement templates in Fig. 4. The Jmin
                      of all the elements are between 0.5 and 1.0 using the improved 27-refinement templates in Fig. 5. This indicates that the quality of mesh generated by using the improved 27-refinement templates in Fig. 5 is raised. While for the mesh generated by using the 8-refinement templates in Fig. 7, the Jmin
                      of all the elements is between 0.6 and 1.0. Therefore, the mesh quality obtained by using 8-refinement templates is higher than that obtained by using improved 27-refinement templates.


                     Fig. 14c is the final mesh generated by using the 27-refinement method. As can be seen from the figure, it is in a hurry from the dense meshes to sparse meshes and the volume ratio is large in the transition zone. Fig. 14d is the final mesh generated by using the 8-refinement method. It transits gradually from the dense meshes to sparse meshes and the volume ratio is small in the transition zone. This situation is favorable for the finite element calculation. Fig. 15
                      compares the quality of the meshes in Fig. 14c and Fig. 14d. Compared with the 27-refinement method, the ratio of number of the elements whose Jmin
                      is between 0.7 and 1.0 to the total number of the elements of solid model increases from 73.08% to 90.16% after using the 8-refinement method. This example also shows that the 8-refinement method is more satisfied with the requirement of finite element analysis.


                     Fig. 16
                      shows a linkage meshed by using the 27-refinement method and 8-refinement method, respectively. Its refinement field is mainly determined by its surface curvatures and local thickness. Fig. 16a and b is the jagged core mesh generated by using the 27-refinement templates and 8-refinement templates, respectively. The number of the jagged core mesh elements is 3770 for the 27-refinement templates, while the number is 990 for the 8-refinement templates. The quality comparison of the jagged cored meshes obtained by the three refinement templates is shown in Table 8
                     . From the table, we can see that there are 0.58% elements whose Jmin
                      is lower than 0.5 for the 27-refinement templates in Fig. 4, while the Jmin
                      of all the elements is higher than 0.5 for the improved 27-refinement templates in Fig. 5. Compared with the improved 27-refinement templates, the Jmin
                      of all the elements is between 0.7 and 1.0 for the 8-refinement templates. Therefore, this example also indicates that the mesh quality obtained by using 8-refinement templates is higher than that obtained by using improved 27-refinement templates. Fig. 16c is the final mesh generated with the 27-refinement method after matching the jagged core mesh and improving the mesh quality. It includes 7760 elements and the minimum of Jmin
                      is 0.231265. Fig. 16d is the final mesh generated with the 8-refinement method. It includes 2830 elements and the minimum of Jmin
                      is 0.495519. It shows that the 8-refinement method not only generates fewer elements but also has better quality than the 27-refinement method.

@&#CONCLUSIONS@&#

This paper presented a density control based algorithm for local refinement of hexahedral meshes by using 8-refinement method and 27-refinement method. The efficiency and robustness of the algorithms were evaluated by the resulting meshes of three models. The following main conclusions are drawn.
                        
                           1.
                           A set of improved 27-refinement templates was designed for local refinement of hexahedral meshes. By using the improved 27-refinement templates, the mesh quality of new produced sub-elements are improved obviously and the requirement of finite element analysis are better met.

A set of effective 8-refinement templates was adopted to realize the conformal, local refinement of all-hexahedral meshes. The gradual and conformal transition from dense meshes to sparse meshes can be ensured and that will help to fulfill the requirement of the finite element calculation. The insertion of a buffer layer for concave domains resolves the propagation problem and decreases the numbers of new produced sub-elements and new nodes.

The size ratio of mesh elements generated using the local refinement algorithm based on 8-refinement method is 2
                                 n
                              :1 (n
                              =1, 2, 3…). While the size ratio of mesh elements generated using the local refinement algorithm based on 27-refinement method is 3
                                 n
                              :1 (n
                              =1, 2, 3…). Therefore, by combining the local refinement algorithm based on 8-refinement method with 27-refinement method, we can get mesh elements whose size ratio is n:1, n can be given the value of 2
                                 m
                              , 3
                                 m
                               or 6
                                 m
                               (m
                              =1, 2, 3…). The combination method will make the refinement more flexible and make the transition more conformable.

@&#ACKNOWLEDGEMENT@&#

This research work is supported by National Natural Science Foundation of China (No. 50875155).

@&#REFERENCES@&#

