@&#MAIN-TITLE@&#Heuristics for multi-attribute vehicle routing problems: A survey and synthesis

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We identify, classify, and analyze 15 multi-attribute vehicle routing problems.


                        
                        
                           
                           We analyze in detail 64 of the most efficient heuristics for these problems.


                        
                        
                           
                           We identify winning strategies for designing effective heuristics for MAVRP’s.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Vehicle routing

Multi-attribute problems

Heuristics

Meta-heuristics

Survey

Analysis

@&#ABSTRACT@&#


               
               
                  The attributes of vehicle routing problems are additional characteristics or constraints that aim to better take into account the specificities of real applications. The variants thus formed are supported by a well-developed literature, including a large variety of heuristics. This article first reviews the main classes of attributes, providing a survey of heuristics and meta-heuristics for Multi-Attribute Vehicle Routing Problems (MAVRP). It then takes a closer look at the concepts of 64 remarkable meta-heuristics, selected objectively for their outstanding performance on 15 classic MAVRP with different attributes. This cross-analysis leads to the identification of “winning strategies” in designing effective heuristics for MAVRP. This is an important step in the development of general and efficient solution methods for dealing with the large range of vehicle routing variants.
               
            

@&#INTRODUCTION@&#

Vehicle routing problems have been the subject of intensive research for more than 50years, due to their great scientific interest as difficult combinatorial optimization problems and their importance in many application fields, including transportation, logistics, communications, manufacturing, military and relief systems, and so on. The “traditional” Capacitated Vehicle Routing Problem (CVRP) involves designing least cost delivery routes to service a geographically-dispersed customer set, while respecting vehicle-capacity constraints. This NP-hard optimization problem combines the characteristics of a Bin Packing Problem aiming to assign loads to capacitated vehicles, and a Traveling Salesman Problem (TSP) that aims to find the best route for each vehicle, i.e., the least costly sequence of visits for the customers assigned to it.

The extremely broad range of actual applications where routing issues are found leads to the definition of many VRP variants with additional characteristics and constraints, that we call attributes, aiming to capture a higher level of system detail or decision choices, including but not limited to richer system structures (e.g., several depots, vehicle fleets, and commodities), customer requirements (e.g., multi-period visits and within-period time windows), vehicle operation rules (e.g., load placement, route restrictions on total distance or time, and driver work rules), and decision context (e.g., traffic congestion and planning over extended time horizons). These attributes complement the traditional CVRP formulations and lead to a variety of Multi-Attribute Vehicle Routing Problems (MAVRPs), making up a vast research, development, and literature domain. The dimensions of most problem instances of interest hinders the applicability of exact methods, while the few software systems presented as general heuristic solvers are increasingly challenged by the growing variety of attributes. Finally, some MAVRPs combining multiple attributes together, the so-called rich VRPs, may be especially difficult to solve because of the compound, and possibly antagonist, decisions they involve.

Thousands of heuristics, meta-heuristics, and solution concepts tailored to some specific MAVRPs have been proposed in the literature. The vehicle routing domain, vast and difficult to classify, has been historically articulated around several streams of research dedicated to a number of major attributes. Such diverse research lines would be justified if the nature of the various problem settings would call for radically different solution approaches. Yet, MAVRPs naturally share many common features, and most heuristic strategies developed for specific problems can be applied to a broader range of VRP variants. The identification of such fundamental design elements for MAVRP metaheuristics is of primary interest to progress toward more generalist and efficient VRP algorithms, thus providing the means to quickly address various application cases and rich VRP settings without extensive problem-tailored algorithmic developments.

To respond to these challenges, we introduce a unifying synthesis and analysis of MAVRP solution methods, providing the means to identify the main concepts of successful heuristics and metaheuristics. The analysis is based on two main ideas. On the one hand, we analyze from a general perspective detached from the particular characteristics of the attributes. On the other hand, we adopt a synthetic approach to deal with the abundance of contributions. Thus, in particular, the scope of the analysis is limited to settings with complete and exact data, demands on nodes (no arc-routing settings), and a single objective.

We identify, classify, and analyze fifteen notable MAVRPs, which have been the object of a consistent body of well-acknowledged research resulting in a considerable number of heuristic methods and a number of common benchmark sets of test instances. We use a simple method-oriented classification, rather than an application-oriented one. Thus, attributes are discerned relatively to their impact on the resolution approaches rather than relatively to the real-life constraint or objective it originates from. Three to five of the most efficient heuristics are then selected, w.r.t. solution quality, for each of these MAVRP variants with different kinds of attributes. The resulting sixty-four methods are analyzed in detail, resulting in the identification of broad concepts and main algorithmic-design principles, an objective synthesis of “winning strategies”, perspectives and major research challenges.

The article unfolds in three main parts. Section 2 recalls the “traditional” CVRP and reviews the fundamental elements of heuristics developed to address it. Most of these elements are also found in the next sections when analysing heuristics for multi-attribute problems. Section 3 introduces an attribute-classification system and presents the selected MAVRPs and the corresponding subset of selected high-performance heuristics, thus providing the necessary material for our unifying analysis of state-of-the-art MAVRP heuristics in Section 4. Section 5 concludes with a discussion of a number of challenges for the field and possible research perspectives.

The CVRP was introduced in the seminal article by Dantzig and Ramser (1959) under the name “Truck Dispatching Problem”. It was only several years later, following the publication of the article by Christofides (1976), that the current name of the problem became widespread. Like many previous articles, we define the CVRP as follows.

Let 
                        
                           G
                           =
                           (
                           V
                           ,
                           E
                           )
                        
                      be a complete undirected graph with 
                        
                           |
                           V
                           |
                           =
                           n
                           +
                           1
                        
                      nodes. The node 
                        
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           ∈
                           V
                        
                      represents a depot, where a fleet of m identical vehicles is based, and where the product to be distributed is stored. An unlimited fleet can be modeled with a large m. The other nodes 
                        
                           
                              
                                 v
                              
                              
                                 i
                              
                           
                           ∈
                           V
                           ⧹
                           {
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           }
                        
                     , for i
                     ∈{1, …, n}, represent the customers, characterized by demands for non-negative amounts of product q
                     
                        i
                     . Edges 
                        
                           (
                           i
                           ,
                           j
                           )
                           ∈
                           E
                        
                      represent the possibility of traveling directly from a node (customer or depot) 
                        
                           
                              
                                 v
                              
                              
                                 i
                              
                           
                           ∈
                           V
                        
                      to a different node 
                        
                           
                              
                                 v
                              
                              
                                 j
                              
                           
                           ∈
                           V
                        
                      for a transportation cost of c
                     
                        ij
                     . The CVRP aims to find m or less vehicle routes, i.e. sequences of deliveries to customers, to visit each customer one time exactly while minimizing the total travel distance. The sum of demands should not exceed on any route a value Q assimilated to the vehicle capacity.

Additional limitations on route duration are frequently considered, leading to a close variant called “duration-constrained VRP (DVRP)”. Each customer i is associated with a service time τ
                     
                        i
                     , each edge (i,j) with a travel time t
                     
                        ij
                      and the sum of service and travel times on any route is bounded by a maximum duration T. Most classic benchmark instances from the literature consider t
                     
                        ij
                     
                     =
                     c
                     
                        ij
                      for any 
                        
                           (
                           i
                           ,
                           j
                           )
                           ∈
                           E
                        
                     .

The CVRP has been the subject of intensive research since the 1960s. Numerous exact methods, heuristics, and metaheuristics have been presented in the literature, as illustrated by various surveys (see Baldacci et al., 2007; Cordeau et al., 2007; Gendreau et al., 2008b; Eksioglu et al., 2009; Potvin, 2009 and Laporte, 2009, for the most recent) and books (Golden and Assad, 1988; Toth and Vigo, 2002a; Golden et al., 2008). Only relatively small CVRPs can currently be consistently solved to optimality. The largest symmetric instances solved by Fukasawa et al. (2006) and Baldacci et al. (2008b) have a maximum of 135 customers. Some exact methods for asymmetric problems have been introduced in Fischetti et al. (1994) and Pessoa et al. (2008). Because of this, heuristics and metaheuristics constitute a very active research domain in the literature. These approaches for the classic CVRP are surveyed in the following, discerning some main categories of methods: constructive heuristics, local improvement heuristics, metaheuristics, hybrid methods, and parallel and cooperative metaheuristics.

Mainly proposed between the 1960s and the 1980s, a large number of heuristics attempted to produce solutions constructively. One key characteristic of these heuristics is that they operate in a greedy manner, producing a set of definitive decisions (e.g., customer insertion or the merging of two routes) that cannot be reversed afterwards.

The savings method of Clarke and Wright (1964) is the best-known example of a constructive heuristic. Starting from an initial solution s
                        0 in which each customer is served by a different route, the heuristic searches for and merges two route extremities i and j, maximizing the distance saved s
                        
                           ij
                        
                        =
                        c
                        
                           i0
                        +
                        c
                        0j
                        
                        −
                        c
                        
                           ij
                        , under the condition that the merged route is feasible. The original method has been revised and improved several times, notably by Gaskell (1967) and Yellow (1970) who parametrized the original equation to give more, or less, importance to the distance to the depot (s
                        
                           ij
                        
                        =
                        c
                        
                           i0
                        +
                        c
                        0j
                        
                        −
                        λc
                        
                           ij
                         with λ
                        ⩾0), thus correcting a flaw in the original method, which produced routes with a high “circular” tendency. Mole and Jameson (1976) and Solomon (1987) further generalize these constructive procedures, considering customer insertions into the routes and using additional parameters and simple local-improvement procedures.

Another constructive heuristic, called “sweep” (Gillett and Miller, 1974), is remarkable in its simplicity. The approach explores the customers circularly, in increasing polar angle around the depot. Each customer is successively inserted in this order at the end of the current route. If this insertion is infeasible because of the route constraints, then a new route is initiated. At the end of this construction phase, Gillett and Miller (1974) proposed to apply a λ
                        −
                        opt improvement heuristic (see Section 2.2) to post-optimize each route separately.

Other heuristics perform the assignment and sequencing in two separate phases. The “route-first cluster-second” approach (Newton and Thomas, 1974; Bodin and Berman, 1979; Beasley, 1983) first constructs a giant circuit that visits all customers, like a TSP solution. This giant tour is then cut into several routes from the depot. The segmentation problem can be solved exactly as a shortest path problem in an acyclic graph.

Proposed by Fisher and Jaikumar (1981), the “cluster-first route-second” approach, first creates customer clusters, and then optimizes the order of visits for each cluster as a TSP subproblem. The creation of the clusters is performed by solving a Generalized Assignment Problem (GAP) for the customers, around m locations chosen to represent zones with a high customer density. A linear estimate of the route costs is used as the objective function of the GAP. This approach is strongly linked to the visual solution approach of human planners. In addition, the priority given to the assignment allows capacity constraints to be better dealt with for highly constrained problems presenting few feasible solutions. This specificity is significant in the CVRP literature where most constructive heuristics manage the capacity constraints as a by-product of a policy exclusively dedicated to the geometrical creation of routes.

The heuristics presented in this section are generally capable of producing solutions that are within 10% or 15% of the optimum in a very short time. A detailed review of these methods can be found in Laporte and Semet (2002). Today, constructive methods are still used to produce initial solutions for a wide range of heuristics, and have been adapted to many MAVRPs. Furthermore, certain metaheuristics (e.g., GRASP or Ant Colony Optimization) rely on iteratively calling on constructive heuristics, biased by information gathered during the global search, to create new solutions.

Sequence-based combinatorial optimization problems lend themselves well to the application of local search (LS) improvement heuristics (see Aarts and Lenstra, 2003 for a comprehensive introduction). Based on an initial solution s, a local search heuristic explores a neighborhood 
                        
                           
                              N
                              (
                              s
                              )
                           
                        , generally defined by perturbations (moves) on s, in order to find an improving solution s′ that replaces s for a new iteration of the heuristic. The local search stops at a solution 
                           
                              
                                 
                                    s
                                 
                                 
                                    ¯
                                 
                              
                           
                         when no improving solution can be found in 
                           
                              N
                              (
                              
                                 
                                    s
                                 
                                 
                                    ¯
                                 
                              
                              )
                           
                        . This solution is a local optimum of the problem and the neighborhood used. The set of solutions – or states characterizing solutions – linked by neighborhood relationships is usually called search space, while the succession of states reached in the course of the method constitutes a search trajectory in the graph thus formed. Many neighborhoods have been defined in the VRP literature. For the sake of brevity, we will only describe those which are still frequently used and named as such in the current literature.

A first category, coming directly from the TSP literature, relies on arc exchanges to optimize separately the routes. In the terminology of Lin (1965), a neighborhood of the type λ
                        −
                        opt contains the set of solutions obtained by deleting and reinserting λ arcs. The neighborhood size is 
                           
                              |
                              
                                 
                                    N
                                 
                                 
                                    λ
                                    -
                                    opt
                                 
                              
                              |
                              =
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    λ
                                 
                              
                              )
                           
                        . The most commonly used neighborhoods in the literature include 2-opt and 3-opt, as well as Or-exchange (Or, 1976). The latter neighborhood involves relocating sequences of visits of bounded length, and constitutes a subset of 3-opt of size O(n
                        2). Examples of the 2-opt and Or-exchange moves are illustrated in Fig. 1
                        . Noteworthy is also the GENI insertion operator (Gendreau et al., 1992), which effectively evaluates combined customer insertions in a route with restricted 3-opt or 4-opt optimization.

Other CVRP local-search neighborhoods allow several routes to be improved simultaneously, generally by exchanging arcs or moving visits between the sequences. Among the most commonly used neighborhoods of this type, the insert neighborhood (also called shift neighborhood in Osman, 1993) consists of moving a visit from one route to another, while a swap (also called 1-interchange) exchanges 2 visits between their respective routes. The 2-opt
                        ∗ neighborhood (Potvin and Rousseau, 1995) is based on the deletion and reinsertion of two arc pairs from two different routes. This neighborhood, which can also be assimilated to an exchange of “route ends”, is sometimes called crossover neighborhood, and is illustrated in Fig. 2
                        . The three previously mentioned neighborhoods contain O(n
                        2) solutions.

Finally, the CROSS-exchange neighborhood (Taillard et al., 1997) exchanges two (one being potentially empty) customer sequences s
                        1 and s
                        2, thus generalizing the three neighborhoods introduced previously, insert, swap, and 2-opt
                        ∗. The customer sequences s
                        1 and s
                        2 can eventually be reversed in this process to produce a slightly larger neighborhood, called I-CROSS in Bräysy (2003). The CROSS and I-CROSS neighborhoods are of size O(n
                        4) and would be costly to evaluate exhaustively. In practice, the size of the exchanged sequences is often limited by a value L
                        
                           max
                        , so that the size of the neighborhood becomes 
                           
                              O
                              
                                 
                                    
                                       
                                          
                                             L
                                          
                                          
                                             max
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             n
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        . CROSS and I-CROSS are themselves special cases of λ-interchanges moves (Osman, 1993), which involve exchanging any (potentially non-consecutive) set of less than λ customers between two routes.

Even the evaluation of quadratically sized neighborhoods can be impracticable for certain large problems. Thus, further neighborhood pruning procedures are frequent in the literature. A common method, called granular search, requires computing for each node v
                        
                           i
                         a list Γ(v
                        
                           i
                        ) of spatially related neighbors, and only considering moves that involve v
                        
                           i
                         and v
                        
                           j
                        
                        ∈
                        Γ(v
                        
                           i
                        ) (Gendreau et al., 1992; Johnson and McGeoch, 1997; Toth and Vigo, 2003). Another type of limitation, introduced early in the TSP literature by Christofides and Eilon (1972), Lin and Kernighan (1973), and generalized for the CVRP by Irnich et al. (2006) under the name of sequential search, is based on the observation that all profitable λ-opt can be broken down into a list of arc exchanges (ϕ
                        1, …, ϕ
                        
                           λ
                        ) with gains (g
                        1, …, g
                        
                           λ
                        ), such that all subsets of k
                        ⩽
                        λ first arc exchanges have a positive partial gain 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    k
                                 
                              
                              
                                 
                                    g
                                 
                                 
                                    i
                                 
                              
                           
                        . This observation allows to rapidly eliminate a lot of unpromising neighbor solutions.

Of critical concern is the efficient serial evaluation of moves, route feasibility and costs, which represents the bottleneck of most local searches. Several techniques can lead to CPU-time reductions. The management of judicious variables on subsequences of visits (e.g., partial demands or distances), in particular, can lead to incremental move evaluations in amortized O(1) time. Memory structures may also be used to store route evaluations or move evaluations within tables or hashtables. Similar approaches are frequently used to efficiently address various MAVRPs (c.f. Section 4).

Large neighborhoods, with an exponential number of solutions, have also been widely studied and used in the literature. The procedure of Lin and Kernighan (1973) is a remarkably effective method for optimizing a TSP sequence. Like the ejection chains strategy developed by Glover (1992), Glover (1996) and extensively applied to the CVRP by Rego (2001), this procedure attempts to find a cycle that alternates existing and non-existing arcs in the current solution, so that the solution obtained by replacing existing arcs in a cycle with the non-existing arcs is feasible and improving. Such a method can be viewed as an incomplete investigation of a λ-opt neighborhood with large λ values. Closely related to the previous concepts, the cyclical transfers of Thompson and Psaraftis (1993) explore a large neighborhood obtained by moving k customers within b routes. The search for an improving neighbor solution is formulated as a negative-cost cycle detection problem in an auxiliary graph. Although NP-hard, this latter subproblem can be solved effectively by means of heuristics.

Other ruin-and-recreate neighborhoods (Shaw, 1998) operate deletions and reinsertions of customer visits within customer sequences. Methods of this kind vary in the nature of their destruction and reconstruction operators, and may exploit heuristic methods, constraint programming, or integer programming for reconstruction. Finally, generalizing the work of Sarvanov and Doroshko (1981) for the TSP, De Franceschi et al. (2006) and Toth (2008) propose neighborhoods based on fixing some customers and re-assigning unfixed customers between fixed ones, which are explored by solving an integer-programming model. Other large neighborhoods and exploration techniques are reviewed in Ahuja et al. (2002) and Pisinger and Ropke (2010). Additional literature reviews on local-search methods for the VRP can be found in Van Breedam (1995), Thompson and Psaraftis (1993), Kindervater and Savelsbergh (1997)Laporte and Semet (2002), Bräysy and Gendreau (2005a) and Funke et al. (2005). Local search constitutes an essential building block of metaheuristics for the CVRP, described in the next section.

The term “metaheuristic” was first coined by Glover (1986) to designate a broad class of heuristic methods that continue the search beyond the first encountered local optimum. A somewhat crude but telling definition characterizes metaheuristics as heuristics guiding other heuristics.

Metaheuristics constitute a core research domain in combinatorial optimization as illustrated by many literature reviews (e.g., Osman and Laporte, 1996; Blum and Roli, 2003; Gendreau and Potvin, 2005) and books (e.g., Corne et al., 1999; Glover and Kochenberger, 2003; Dréo et al., 2003; Gendreau and Potvin, 2010). The CVRP is a testing ground particularly appreciated for such methods, as illustrated by the reviews of Gendreau et al. (2002), Cordeau et al. (2005), Gendreau et al. (2008b), Laporte (2009) and Potvin (2009). We distinguish between so-called neighborhood-centered methods, which generally proceed by iteratively exploring the neighborhoods of a single incumbent solution, population-based strategies evolving a set of solutions by generating one of several “new” solutions out of combinations of existing ones, and approaches that either combine elements of different metaheuristics, the so-called hybrids, or harness the exploration capabilities of several solution methods exploiting their interaction, the parallel and cooperative search methods.


                           Simulated Annealing (SA) (Kirkpatrick et al., 1983; Černý, 1985) overcomes the limitation of local-improvement heuristics, the rapid attraction to a local optimum, by accepting solution-deterioration moves with a probability governed by a statistical process, the so-called temperature parameter. The higher the temperature, the more likely it is to accept a deteriorating move. Temperature evolves dynamically during the search relatively to a cooling scheme, first favoring a vast exploration and frequent degradations, then gradually accepting fewer and fewer degradations to intensify the search for good-quality solutions. For the CVRP, efficient deterministic “Record-to-Record” (R-to-R) variants (Dueck, 1993; Li et al., 2005) accept any neighbor solution which is not much worse than the incumbent solution, and prevent degradations that are too significant relatively to the best-found solution s
                           ∗, subject to re-starting the search from s
                           ∗.


                           Tabu search (Glover, 1986; Glover, 1989; Glover, 1990; Glover and Laguna, 1998) associates a search trajectory centered on the choice the best (possibly non-improving) neighbor of the incumbent solution, with learning capabilities, generally represented as short-, medium- and long-term memories on solution elements, which replace or significantly complement the randomization used in other metaheuristics. This decision process is enhanced by two mechanisms, the first aiming to avoid cycling and relying on short-term memories to reject solutions that contain recently examined tabu elements, the second accepting solutions that fulfil some aspiration criteria such as “the best solution in value or containing a given solution element”. Of central importance are the medium- and long-term memories used to manage significant trajectory-inflecting procedures known as intensification, e.g., focusing the search around elite solutions while promoting high-quality elements, and diversification, e.g., moving the search to an under-explored area of the search space, promoting infrequent elements, and so on. The challenge of balancing diversification and intensification is still a key research question in the literature.

Tabu search led to very effective CVRP metaheuristics, including TABUROUTE (Gendreau et al., 1994), Adaptive Memory (AM) variants (Taillard, 1993; Rochat and Taillard, 1995; Tarantilis, 2005), and the Unified Tabu Search (UTS) (Cordeau et al., 1997; Cordeau et al., 2001). In TABUROUTE and UTS, diversification and intensification occur through penalties (incentives, respectively) on frequently (rarely) encountered solution elements, while AM approaches regularly redirect the search to a region around a new solution built out of promising fragments from a memory.

Concepts from tabu search have inspired other metaheuristics. Long-term memories for penalizing frequent solution elements can also be viewed as a basis of Guided Local Search (Voudouris and Tsang, 1999), applied by Kilby et al. (1999), Tarantilis et al. (2007), Kytöjoki et al. (2007), and Zachariadis and Kiranoudis (2010a) to the CVRP. In this case, modifying the search space by means of penalties is a primary tool for escaping from local optima. Similarly, aspiration criteria take a preponderant role in the Attribute Based Hill Climber (ABHC) method (Whittley and Smith, 2004; Derigs and Kaiser, 2007).


                           Variable Neighborhood Search (VNS) (Mladenović and Hansen, 1997; Hansen et al., 2010) exploits the fact that a local optimum is defined for a given neighborhood. Thus, changing the nature of the neighborhood during the search, or at least some of its parameters, provides the means for further solution improvements. The order of neighborhood evaluations and the solution acceptance criteria can be either deterministic or probabilistic. For the CVRP, additional solution perturbation mechanisms and long-term memories inspired from tabu search are sometimes employed (Kytöjoki et al., 2007; Fleszar et al., 2009; Chen et al., 2010). Metaheuristic hybrids (see Section 2.3.3) based on VNS are thus frequent.

In the same spirit, the Adaptive Large Neighborhood Search (ALNS) by Pisinger and Ropke (2007) exploits the benefits of varied neighborhoods based on ruin-and-recreate moves (Shaw, 1998). The frequency of use of these neighborhoods is adapted throughout the search relatively to their past performance. Finally, the Iterated Local Search (ILS) (see Lourenço et al., 2010 for a recent review) applies successively a local-improvement phase, which ends up in a local optima, and a perturbation phase to escape from the local optima. Scaling appropriately the strength of the perturbation operator is a crucial point of the method. Prins (2009a) provides a simple and efficient application of ILS to the CVRP, where several solutions are iteratively produced from the same incumbent solution by means of improvement and perturbation mechanisms, the best one being selected for the next iteration.

Population-based methods are often inspired from natural mechanisms. Genetic Algorithms (GA) and Evolutionary Algorithms (EA) were introduced during the late 1950s, and developed in their current form in Holland (1975). These algorithms interpret genetic laws and natural selection to evolve a population of individuals assimilated to solutions, through elitist selection, crossover, and mutation operators. With EA, it is also common to simultaneously make the search strategies (e.g., operator parameters) evolve with the solutions. Traditional GA and EA have a tendency to progress too slowly, however, and have thus been enhanced with various mechanisms, such as local search, which is also sometimes called an “education operator”. The algorithms thus obtained are sometimes called “genetic local searches” (Mühlenbein et al., 1988) or “memetic algorithms” (Moscato, 1989; Moscato and Cotta, 2010).

Some of these enhanced genetic methods performed remarkably well on classical CVRP benchmark instances (Prins, 2004; Alba and Dorronsoro, 2006; Marinakis et al., 2006; Nagata et al., 2010; Vidal et al., 2012). We refer to Potvin (2009) for a thorough coverage of the field. It is noteworthy that many successful genetic algorithms for the CVRP use a giant-tour solution representation without trip delimiters (Prins, 2004), along with clustering procedures (Beasley, 1983) to optimally Split a tour into routes. This strategy, based on route-first cluster-second constructive procedures, reduces the number of alternative solutions (there are less giant tours than VRP solutions) and enables to use simple crossover operators for permutations. In addition, an adequate management or promotion of population diversity appears to be of critical importance (Prins, 2004; Sörensen and Sevaux, 2006; Vidal et al., 2012).

The Path Relinking (PR) and Scatter Search (SS) metaheuristics (Glover, 1977; Resende et al., 2010) are other population methods based on solutions recombinations. These methods promote strategic recombination over randomization, and differ essentially from the GA-type of methods in the manner in which solutions are crossed and in the size of the solution pool, which is generally smaller. Recombinations in PR involve an initial solution s
                           
                              DEP
                            and a guiding solution s
                           
                              GD
                           , both selected from an elite solution population. Characteristics of s
                           
                              GD
                            are progressively inserted in s
                           
                              DEP
                            in order to create a trajectory connecting these two solutions, potentially containing new improving solutions. On the other hand, the recombinations operators used in SS can involve more than two solutions. Path relinking was applied to the CVRP by Ho and Gendreau (2006).


                           Ant Colony Optimization (ACO) approaches (Dorigo and Stützle, 2004) were inspired by the social behavior of ants foraging for food and are for now the swarm-type of method most used in optimization. ACO was applied to the CVRP by Bullnheimer et al. (1999), Bell and Mc Mullen (2004), Doerner et al. (2004), Reimann et al. (2004) and Yu et al. (2009), among others. The individual behavior of ants is embodied by constructive heuristics, exploiting informations on the search history (i.e., pheromones). Other swarm-inspired methods were proposed for the CVRP by Marinakis and Marinaki (2011) (bee colonies) and Marinakis and Marinaki (2010) (particle swarms). All these methods exploit some form of learning, as are neural networks (Ghaziri, 1996; Vakhutinsky and Golden, 1994; Créput and Koukam, 2008), and artificial immune systems (Masutti, 2008), to name a few. These algorithms are often combined with local-improvement procedures, thus complicating the task to estimate the proper impact of collective intelligence paradigms on the search performance.

Hybrid metaheuristics blend concepts from various solution methodologies, metaheuristic classes most often, to take advantage of their respective strengths. The blending may take the form of a juxtaposition of methods (e.g., two algorithms called on consecutively) or an indissociable inclusion of elements from one method into a fully-functional different metaheuristic (e.g., tabu search-inspired memories in VNS). Hybrids may exclusively combine metaheuristic concepts, or also involve algorithmic ideas and modules from mathematical programming, constraint programming, tree-search procedures, and so on.

Although much effort has been recently put into properly defining the scope of hybrid metaheuristics (Raidl et al., 2010; Blum et al., 2011), the term remains very general and covers very different strategies. One can indeed argue that metaheuristics, described as heuristics guiding other heuristics, are hybrid in nature. This shows the shortcomings of a too-encompassing definition or, even, of trying to find a precise definition. Within the scope of this paper, we identify hybridisation as a strong concept in metaheuristic design, rather than a well-defined class of methods, aiming to take advantage of the synergy among different solution-method ideas to explore a broad variety of solution strategies, often yielding superior results.

A large variety of hybrid methods has thus been proposed for the CVRP. Several approaches involve combined neighborhood-centered search concepts, such as SA+tabu (Osman, 1993), GRASP+ILS (Prins, 2009a), ILS+VND (Chen et al., 2010), tabu+ILS (Cordeau and Maischberger, 2012), among others. Hybridization schemes of this kind are frequent in recent local search-based methods, which are frequently enriched with restart procedures (a main characteristic of GRASP), probabilistic acceptance of deteriorating moves (a main characteristic of SA), variable neighborhoods (VNS), or long-term memories and penalties on solutions attributes (GLS).

Population- and neighborhood-search hybrids are also widespread. The wide majority of population-based approaches for the CVRP actually integrates some kind of local-search components, and can be characterized as hybrid. Furthermore, two of the three most efficient current CVRP metaheuristics (Nagata and Bräysy, 2009; Vidal et al., 2012) combine GA and LS. Other advanced hybridization schemes involve combined GA+tabu (Perboli et al., 2008), or combined population-based concepts such as GA+PSO (Marinakis and Marinaki, 2010) and PR+PSO (Marinakis et al., 2010).

Finally, a number of metaheuristics for the CVRP integrate integer or constraint programming components to recombine promising elements of solutions into complete solutions (Rochat and Taillard, 1995; Tarantilis, 2005; Alvarenga et al., 2007; Groër et al., 2011), or to explore large neighborhoods based on ruin-and-recreate (Shaw, 1998; De Franceschi et al., 2006; Salari et al., 2010). One actually observes a trend towards proposing matheuristics for VRP, combining metaheuristic and mathematical programming components, and explicitly using the model formulation in defining elements of the method (Doerner and Schmid, 2010).

Parallel metaheuristics (Toulouse et al., 1996; Alba, 2005; Crainic and Toulouse, 2010) are concerned with the efficient exploitation of simultaneous work (often on several processors) to solve a given problem instance, and have proved of great interest for routing problems (Crainic, 2008).

Several types of parallelism may be distinguished according to how parallelism is obtained, how communications among the tasks are defined, as well as how the global search is conducted. In the most straightforward classification, low-level parallelism involves decomposing parts of the algorithm into independent tasks, thus providing the means to exploit parallel resources without changing the general behavior of the method. To be efficient, such a strategy must target the computationally expensive “bottleneck” procedures, which most frequently are the evaluation of moves in neighborhood-centered methods, and crossover, selection, and evaluation in population-based ones. To our knowledge, although many papers are concerned with the development of such strategies for metaheuristics in general, few studies on low-level procedures have been directly focused on the CVRP. A notable exception is the recent work of Schulz (2011), considering the efficient solving of CVRPs on Graphic Processing Units (GPU). In this case, the change in hardware has direct implications on the resolution methodology.

In contrast, metaheuristics based on high-level parallelism either partition the set of decisions, leading to problem decompositions, or conduct multiple concurrent searches on one or several search spaces. The simplest method of the latter kind, noted as parallel independent multi-search, involves to gather the best final solution of a set of methods not linked by any communication or information exchange. This parallel implementation of the multi-start strategy can offer very interesting performances for the CVRP. Yet, to fully profit from parallelism, more advanced cooperation schemes integrate mechanisms to share information during the course of the methods and, in the most advanced settings, to create new information out of the exchanged data. Thus, the nature of the information shared, the frequency of the communications, and the scope (utilization) of the received information are the main characteristics of cooperation strategies.

For the CVRP, as for most combinatorial optimization cases, the most efficient parallel metaheuristics are built on asynchronous communications, triggered individually by the cooperating algorithms, and often taking the form of exchanges of solutions or elements of solutions. Most multi-search strategies are based on either adaptive (Rochat and Taillard, 1995; Badeau et al., 1997) or central memory (Rego, 2001; Groër et al., 2011; Cordeau and Maischberger, 2012; Jin et al., 2012) principles. The former gathers promising solution fragments and constructs new solutions out of such fragments. Tabu searches improve these new solutions, and return the best found solutions to the memory. In central memory-based cooperation, participating solution methods, which may be metaheuristics, exact algorithms, or any other method, exchange solutions and, possibly, various other data, through a common data repository (the “central memory”). Thus, all information is always available on request to any of the cooperating processes and, moreover, can be used to generate new relevant information, e.g., new solutions, performance measures on solution components, promising areas of the search space, and so on. Currently, tabu search threads cooperate in most central-memory methods proposed for the CVRP, while Groër et al. (2011) also added integer programming solvers.

Other parallel strategies arose in the field of evolutionary computation. According to fine-grained parallel ideas, individuals are arrayed according to some geometrical form (a two-dimensional toroidal grid in Alba and Dorronsoro, 2006) and interact only with the (four, in this case) individuals directly connected to. This sets up a diffusion mechanism of good individual characteristics throughout the population. The most usual forms of GA cooperation follow a coarse-grained strategy, where populations evolve separately and cooperate through migrations of elite solutions (e.g., Dorronsoro et al., 2007).


                           Doerner et al. (2006) performed extensive sensitivity analyses on several cooperative ACO metaheuristics that communicate synchronously through exchanges of solutions, ants, or pheromones. Experiments reproduce the results obtained for the parallel strategies for other metaheuristics, and show that parallel methods tend to outperform sequential ones, that sharing populations of elite solutions is more relevant than solely broadcasting the global best solution, and that episodic re-initializations of pheromone matrices contribute towards a better search. Furthermore, exploiting the spatial decomposition of Reimann et al. (2004) in a parallel context leads to increased speed-ups.

Two main sets of instances have been widely used in the literature to compare the performance of heuristics in the last 30years of research on the CVRP. The 14 benchmark instances of Christofides et al. (1979) include between 50 and 199 customers, which are spatially randomly distributed for the first 10 instances, and otherwise clustered. The 20 large-scale instances (pr01-pr20) of Golden et al. (1998), include between 200 and 483 customers and present geometric symmetries. Comparisons of VRP approaches are often based on the quality of the solutions in presence of similar computational effort. Nowadays, many metaheuristics reach systematically the best known solution (BKS) on almost all instances from Christofides et al. (1979). A comparison of state-of-the-art metaheuristics based on this benchmark tends to be less statistically significant, as only slight differences on 3 or 4 instances are now reported. To state the best performing methods, we therefore rely on the larger scale instances of Golden et al. (1998), for which the results of well-performing approaches remain significantly different.

We start by emphasizing a number of good practices for reporting results and establishing a fair comparison between CVRP heuristics. We also refer to Barr et al. (1995) for further discussions and insights. A performance report must contain at least an estimate of the solution quality and CPU time of the proposed method, as well as the computing environment: programming language, processor, operating system, compiler and compiler options. Any performance analysis should be presented with a minimum of statistical information. As such, for non-deterministic algorithms, the average solution quality and CPU time on several runs for each problem instance should be reported, as well as the standard deviation to assess both quality and robustness. For deterministic algorithms, we suggest either to use a large-enough set of instances, or shuffle the customer indices to perform several different runs. A heuristic must also not require any other information than the problem instance. Using exterior knowledge, e.g., an optimal solution to trigger termination, or some best known characteristics as a starting point (fleet size for example in presence of a fleet minimization objective), is not a fair practice.

The most standard search-effort measure in the CVRP literature considers the total CPU time, and thus not only the time to reach the best solution. Other conventions should be clearly stated. The factors of Dongarra (2011) are commonly used to assess the relative speed of two processors by scaling the CPU time of two algorithms run on different machines. These factors must be used with caution however, mostly to compare order of magnitudes, since differences in operating systems, compilers, and memory organization have a huge impact on the measures. The best alternative remains to compare on the same computer whenever possible. Reporting the best solutions of the method on K runs may also provide valuable insights on the potential of solution improvement. In that case, K must be specified, and the computation effort of the assimilated multi-start method is the CPU time for all runs. Similarly, the effort of a parallel method is evaluated as the sum of the CPU times on all threads and processors. The communication overhead, approximated as the difference between the real wall-clock time and the CPU time should also be reported.


                        Table 1
                         provides a brief comparative analysis of the performance of the best CVRP heuristics on the instances of Golden et al. (1998). The solution quality is measured as the average Gap (%) to the current Best Known Solutions (BKS) in the literature for each instance. The CPU time is indicated in column “T”. The scaled computational effort 
                           
                              
                                 
                                    T
                                 
                                 
                                    #
                                 
                              
                              =
                              
                                 
                                    n
                                 
                                 
                                    runs
                                 
                              
                              ×
                              
                                 
                                    n
                                 
                                 
                                    cpu
                                 
                              
                              ×
                              T
                              ×
                              f
                              (
                              cpu
                              )
                           
                         is also reported, where 
                           
                              f
                              (
                              cpu
                              )
                           
                         stands for the CPU speed factor relatively to a Pentium IV 3.0GHz (Dongarra, 2011). We insist on the fact that these scaled times provide only rough estimates of the computation effort.

For the sake of brevity, we restricted the comparison to methods providing detailed results on all 20 instances, and with an average Gap smaller than 2%. Algorithm performances are also presented graphically in Fig. 3
                         relatively to the dual objective of solution quality and scaled computational effort.

As shown in Table 1, many current state-of-the-art methods exploit neighborhood-centered searches such as local-improvement heuristics, record-to-record, or tabu search. The best performances are achieved, however, by hybrid methods combining neighborhood-centered search with collective intelligence and population concepts (MB07, NB09, VCGLR11), and by parallel cooperative methods based on tabu search and solution-recombination procedures (T05, JCL11, JCL12, GGW11). Fourteen algorithms produce solutions that are very close to the BKS, with deviations of less than 1%. Seven methods (VCGLR11s, VCGLR11f, MB07s, P09, T05, GGW10, MB07f) constitute a dominating set with regards to the bi-objective of quality and computational efficiency. The metaheuristics of GGW11, ZK10, JCL10, P09, CM11, LGW05 and P04, in particular, stand out by their simplicity and still produce results of remarkable quality. Some other early neighborhood-centered metaheuristics, such as Golden et al. (1998) and Toth and Vigo (2003), are also noteworthy for the same reasons, yielding average gaps of 3–4% with older and slower computing environments. Finally, even larger instances including thousands of customers have been tackled by LGW05, MB07, as well as Kytöjoki et al. (2007), thus filling the need for quick methods for large CVRPs.

In light of the methods presented in this section, the “traditional” CVRP is remarkably well addressed heuristically, at least for the classic benchmark instances, and several metaheuristic frameworks seem adequate to lead to high-quality solutions. The problem remains still an interesting testing ground for many studies aimed towards more efficient local search methods, new metaheuristic concepts, hybrid and cooperative methods.

In addition, the literature shows that more emphasis has been put in recent years on VRPs with additional attributes, for which applications are still very challenging. In fact, although many of the methods presented in this section can be rapidly adapted to these VRP extensions, very few general-purpose methods are able to handle the wide range of MAVRPs, and particular method targeting individual cases were generally proposed. The objective of the following sections is to present and classify the main MAVRP attributes, and analyze the concepts of successful heuristics, as a first step on the path toward the development of agile methods able to handle a greater variety of VRP variants.

Most VRP attributes directly derive from the requirements of real applications. They are the subject of a vast amount of studies, grouping several thousands of articles. Several classification systems for VRP attributes have been proposed. Bodin (1975) and Bodin and Golden (1981) inventoried about a dozen attributes of VRP related to service times. With the same outlook, Ronen (1988) proposed a similar taxonomy centered on practical problem characteristics, and discussed the challenges of the solution methods. Desrochers et al. (1990) introduced a more complete classification system, as well as a four-field notation inspired by Graham et al. (1979). This notation served as a support for the creation of a management system for algorithms and models, based on inference mechanisms for selecting or producing appropriate solution methods (Desrochers et al., 1999). Eksioglu et al. (2009) provided the most complete taxonomy of the MAVRP literature, integrating most common variants as well as several general observations on the nature of the articles. This taxonomy was accompanied by bibliometric data, illustrating the growth in the number of articles, the main authors, subjects, and journals. In addition to the previously listed taxonomies, other papers proposed thematic literature reviews of routing problems (Assad, 1988; Desrosiers et al., 1995; Bräysy et al., 2008a; Bräysy et al., 2008b; Andersson et al., 2010). The annotated bibliographies by Laporte and Osman (1995) and Gendreau et al. (2008b) are also noteworthy, providing pointers towards hundreds of articles dealing with MAVRPs and other related problems.

Unlike scheduling, however, where the classification system of Graham et al. (1979) is still used and updated, none of the previously-listed classification systems has been used on a large scale in the vehicle routing literature. This is probably connected to the large variety of attributes, which makes all exhaustive taxonomies extremely difficult. In addition, most of the previous classifications are application-oriented, based on the actual origin of the different types of constraints (related to, e.g., particular vehicle, network, driver or customers requirements). Moreover, even though these classification systems permitted the organization of the different attributes and contributions, few hints were given as to what heuristic concepts to privilege for the different types of attributes. Thus, the objective of the next section is to fill this gap with a new classification which, even though rather simple, emphasizes the relationships between problem attributes and recent heuristics.

To analyze the concepts of MAVRP heuristics, we distinguish three main classes of attributes, relative to their impact on three aspects of the problem that must imperatively be dealt with by solvers: the Assignment of customers and routes to resources (ASSIGN), the Sequence choices (SEQ), and the Evaluation of fixed sequences (EVAL). This simple classification is intimately connected with the resolution methodologies, as dealing with these three problem aspects leads to a complete solution method. Please note that an attribute may impact several aspects of the problem, and thus possibly appear in several categories.

ASSIGN attributes impact the assignment of limited resources, e.g., vehicles, vehicle types, depots, and service periods over a planning horizon, to customer services and routes. Most common ASSIGN attributes include multiple depots, heterogeneous fleets, multiple periods, split deliveries, site dependencies, inventory, location and profits collection. Furthermore, two main sub-families of ASSIGN attributes may be distinguished. Some variants of the VRP, e.g., multiple depot or heterogeneous VRP, are concerned with the assignment of resources to routes. In these settings, an entire route can potentially be re-assigned. In other cases, such as the VRP with multiple periods (PVRP) or inventory routing, the assignment issues are performed on resources to customers, and re-assigning a full route is likely to be infeasible due to the independent assignment constraints.

SEQ attributes directly impact the nature and structure of the routes. In a backhaul setting, for example, the route is a compound of two sequences of linehaul and backhaul services, respectively. In presence of multiple trips or intermediate facilities, the routes pass several times at depots, while in the generalized VRP, groups of customers are defined, and only one visit per group is performed. In truck-and-trailer problems, the routes involve sections with and without trailer. Finally, some other SEQ attributes are related to specificities of the graph, e.g., routing on a tree or a shoreline, and dramatically impact the structure of the routes and the required sequencing methods.

Finally, EVAL attributes impact a large variety of evaluations and constraint checks that must be performed once the route contents and orders are chosen, including the optimization of the remaining variables, such as service times for problems with time characteristics, idle-time and break placement, speed choices, or the explicit consideration of product placement in trucks. The literature is extremely rich on attributes of this kind, some of the most common being time windows, time-dependent route durations or costs, loading constraints, open routes, and working regulations. The wide majority of EVAL attributes are inherent to separate routes, and thus the evaluations of routes can still be performed independently in the related VRP variants. However, there are also some linking EVAL attributes, such as synchronization, which link together the fixed-route evaluations, and result in very challenging problems.

Separating attributes among the three previously described categories allows to emphasize relationships between problems, and also estimate the solution method adjustments necessary to deal with them. For example, an EVAL attribute may be managed by an existing algorithm completed with appropriate sequence evaluation methods, while maintaining the resource assignment and sequence creation procedures. In a similar manner, an ASSIGN attribute may be tackled with new assignment procedures without impacting the route evaluations.


                        Table 2
                         gathers attributes frequently encountered in the literature, displaying for each either a recent survey, or a paper proposing a solid literature review. Fourteen of these attributes, marked in boldface, were selected to serve as support to our study on MAVRP heuristics, relatively to two main criteria: (1) the resulting VRP variant is the subject of a significant literature, including exact and heuristic methods, and is possibly mentioned in specialized literature reviews; and (2) benchmark instances are available for comparisons between methods. The first criterion illustrates the importance of the variant in the domain, while the second guarantees that some remarkably efficient algorithms can be objectively selected. The 14 resulting variants are now briefly reviewed in Sections 3.2, 3.3 and 3.4. In each case, we describe the respective MAVRP, the size of instances currently solvable with exact methods, the current classic benchmark instances, and a selection of well performing heuristics in terms of average solution quality. Note that “pure” versions of MAVRP with one attribute are studied, since otherwise the number of combinations of attributes is exponential, and since pure variants are covered by a wider literature.

The multi-depot VRP (MDVRP) deals with a number of depots d
                           >1. Each vehicle is assigned to a single depot, which is generally both the origin and the destination of the vehicle’s route. Some variants, called “non-fixed” problems, relax this latter requirement. Furthermore, in the classical MDVRP, no limit on supply at depots is considered. Recent elements of literature review can be found in Ombuki-Berman and Hanshar (2009) and Vidal et al. (2012). The best exact method (Baldacci and Mingozzi, 2009) can solve problem instances up to 75 customers, as well as a few instances with up to 199 customers. When considering metaheuristics, the best solutions on the classic instances presented in Cordeau et al. (1997) were produced by the ALNS of Pisinger and Ropke (2007), the fuzzy logic-guided hybrid GA of Lau et al. (2010), the ILS and set covering approach of Subramanian (2012), the Hybrid Genetic Search with Advanced Diversity Control (HGSADC) of Vidal et al. (2012), and the parallel UTS of Cordeau and Maischberger (2012).

Customers are assigned to vehicle types with different characteristics: capacity, maximum route times, fixed costs, and variable costs in terms of the distance. When the number of vehicles is not constrained, the problem is usually referred to as the Vehicle Fleet Mix Problem (VFMP), otherwise the more difficult version is called Heterogeneous VRP (HVRP) (see Baldacci et al., 2008a for a review). The exact algorithm of Baldacci and Mingozzi (2009) solves most problem instances with 75 customers or less, as well as some instances with 100 customers. The state-of-the-art metaheuristics, evaluated on the HVRP instances of Taillard (1999) and Li et al. (2007a), are of various kinds: tabu search (Brandão, 2011), hybrid GA (Prins, 2009b), or ILS and VNS (Penna et al., 2011) with set covering phases (Subramanian et al., 2012).

A time dimension is introduced in the Periodic VRP (PVRP) as route planning is to be performed over a horizon of several periods. Each customer requires a total number of services according to some acceptable combinations of visit periods called patterns. The assignment of customer visits is thus subject to compatibility constraints with the patterns. The PVRP is reviewed in Francis et al. (2008). Exact methods (Baldacci et al., 2011a) are able to solve some instances with up to 100 customers and 6 time periods. Benchmark instances for PVRP metaheuristics are gathered in Cordeau et al. (1997). Several efficient neighborhood-centered searches have been designed, such as UTS (Cordeau et al., 1997; Cordeau et al., 2001) and its parallel extension (Cordeau and Maischberger, 2012), the VNS of Hemmelmayr et al. (2009), and the hybrid record-to-record and integer programming matheuristic of Gulczynski et al. (2011). The population-based approach of Alegre et al. (2007), dedicated to large temporal horizons, focuses on assignment optimization, while using constructive methods to create routes. Also, the HGSADC of Vidal et al. (2012) produces the current best solutions by combining the GA search breadth with efficient LS, relaxations schemes, and diversity management procedures.

The PVRP has led to several other notable problem extensions (Groër et al., 2008; Gulczynski et al., 2011). The issue of service consistency, i.e., visiting regular customers on each period at similar time and with the same driver, has received a notable attention. Recent methods dealing with this attribute are based on record-to-record travel (Groër et al., 2008), tabu search (Tarantilis et al., 2012), and ALNS (Kovacs et al., 2012). All these methods optimize a template of visits to frequent customers, which remains the same on every day, in which some additional non-frequent deliveries are inserted.

Customer demands can be satisfied by several vehicles, each moving a partial load. This variant is called VRP with split deliveries (VRPSD), as reviewed in Gulczynski et al. (2008) and Archetti and Speranza (2012). Instances with up to 50 customers (Belenguer et al., 2000; Lee et al., 2006) can be exactly solved. Recent metaheuristics have been evaluated with two different fleet-size policies on the benchmark instances of Archetti et al. (2006), Belenguer et al. (2000) and Chen et al. (2007). In the first setting, the fleet size is unlimited, and state-of-the-art methods rely on hybrid GA with giant-tour representation (Boudia et al., 2007), Attribute Based Hill Climber (ABHC) (Derigs et al., 2009), and integer programming optimization with tabu search (Archetti et al., 2008). In the second setting, a solution with minimum number of vehicles is imposed, and the best performances are achieved by the scatter search of Mota et al. (2007) and the tabu search with vocabulary building of Aleman and Hill (2010).

For several customers, service is optional but rewarded with a prize. Hence, customers must be implicitly distributed among two subsets, following whether their service is omitted or performed. Several objectives were dealt with in the literature, notably the optimization of a weighted sum of route lengths and prizes (Dell’Amico et al., 1995), or the maximization of the prizes under a route length constraint, usually called the team orienteering problem (see the review of Feillet et al., 2005 and Vansteenwegen et al., 2010). Exact methods can solve instances with up to 100 customers (Boussier et al., 2006). Most efficient metaheuristics, evaluated on the instance set of Chao et al. (1996), rely on population concepts. Ke et al. (2008) proposed a hybrid ACO method with a local search. Souffriau et al. (2010) introduced a path relinking method, in which elements of the solution set undergo an ageing process. Bouly et al. (2009) introduced a hybrid GA based on giant-tour solution representation, which is hybridized later on with PSO in Dang et al. (2011). Finally, Archetti et al. (2006) proposed a hybrid tabu search and VNS.

Customers are separated into two groups: delivery customers (i.e., linehaul customers) and pickup customers (i.e., backhaul customers). All routes mixing both groups of customers must serve all linehaul customers before the first backhaul customer, thus leading to different route structures. We refer to Toth and Vigo (2002b) and Parragh et al. (2008a) for detailed reviews on the VRPB. Instances of maximum 100 customers were solved exactly by Toth and Vigo (1997) and Mingozzi et al. (1999). The best metaheuristics, on the instance sets of Goetschalckx and Jacobs-Blecha (1989), include the ALNS of Ropke and Pisinger (2006a); the tabu search of Brandão (2006), which, as Zachariadis and Kiranoudis (2012), uses long-term memories to direct the search toward inadequately exploited characteristics; and finally the ACO of Gajpal and Abad (2009), which concurrently evolves two ant families to work on assignment and sequences.

Each service is characterized by a pair of locations designating the pickup and delivery spots. All pickups must be made before the deliveries. This type of problem is dealt with in numerous literature reviews as a one-to-one Pickup and Delivery Problem (PDP) (Desaulniers et al., 2002; Berbeglia et al., 2007; Cordeau et al., 2008; Berbeglia et al., 2010) or simply as VRP with Pickup and Deliveries (VRPPD) (Parragh et al., 2008a; Parragh et al., 2008b). This problem is often coupled with time-window constraints. Ropke et al. (2007) solved exactly instances involving up to 96 requests. The classic benchmark instances have been introduced in Li and Lim (2001). Efficient neighborhood-centered metaheuristics have been proposed, including the ALNS of Ropke and Pisinger (2006b) and the two-phase method of Bent and Van Hentenryck (2006), which combines simulated annealing (SA) to reduce the number of routes with large neighborhood search (LNS) to optimize the distance. These methods were recently outperformed by the memetic algorithm of Nagata and Kobayashi (2011), which exploits a well-designed crossover focused on transmitting parent characteristics without introducing too many new arcs in the offspring. For problem variants arising from the domain of transportation on demand, the so-called dial-a-ride problems, UTS (Cordeau and Laporte, 2003) and the VNS of Parragh et al. (2010) produce solutions of good quality.

During its tour, a vehicle can reach several times the depot to load or unload. By doing so, the global constraints on the routes, such as the maximum duration, are still considered. The exact method of Mingozzi et al. (2012) can solve some instances of multi-trip VRP (MTVRP) with up to 120 customers. Three algorithms produce on average the largest number of feasible solutions, or the solutions with least amount of infeasibility on the classic instances of Taillard et al. (1996). The original tabu search and adaptive memory approach of Taillard (1993) remain still competitive. In addition, good results have been obtained with the adaptive memory-based search of Olivera and Viera (2007), and by Alonso et al. (2008), who generalized UTS to a PVRP with multiple trips and vehicle-customer compatibility constraints.

The VRP with time windows (VRPTW) is certainty the most extensively studied VRP variant to date. Time windows are associated to customer visits and depot, each arc being characterized by a route duration. Waiting time is allowed upon an early arrival to a customer, while a late arrival is forbidden. Recent literature reviews can be found in Bräysy and Gendreau (2005b,a) and Gendreau and Tarantilis (2010). The classic VRPTW instances were introduced in Solomon (1987) and Gehring and Homberger (1999). Most efficient exact methods (Kallehauge et al., 2006; Jepsen et al., 2008; Baldacci et al., 2011b) can solve most instances with up to 100 customers, and a few instances with up to 1000 customers. However, exact resolution is highly dependent upon the characteristics of the instance and the width of time windows. Actual state-of-the-art VRPTW metaheuristics are of various kinds. The guided EA of Repoussis et al. (2009) combines evolution, ruin-and-recreate mutations, and guided local search. Prescott-Gagnon et al. (2009) proposed a LNS combined with branch-and-price for solution reconstruction. The HGA proposed by Nagata et al. (2010) uses a particularly effective crossover operator. This latter method, as well as the path relinking of Hashimoto and Yagiura (2008) and HGSADC of Vidal et al. (2013), apply time-constraint relaxations during the search to benefit from infeasible solutions in the search space.

In practical settings, when facing network congestion especially, travel times on an arc depend on the departure date, leading to a Time-Dependent VRP (TDVRP). This problem is frequently combined with time-window constraints, and a First-In, First-Out (FIFO) property for the travel times is frequently assumed, meaning that a vehicle starting earlier arrives at its destination earlier. Specialized literature reviews were conducted by Malandraki and Daskin (1992), Ichoua et al. (2003) and Fleischmann et al. (2004). Among the particularly efficient heuristics, the adaptive memory search of Ichoua et al. (2003) manages a population of good-quality routes, which are recombined and improved by tabu search. The ILS of Hashimoto et al. (2008) draws its strength from a temporary relaxation of the problem combined with efficient neighborhood evaluation procedures. Balseiro et al. (2011) proposed a cooperative ACO, hybridized with local searches and ejection chains, which rely on two ant colonies to perform respectively fleet-size and distance minimization. The classic benchmark instances originate from Ichoua et al. (2003) and Balseiro et al. (2011).

Several other time attributes on routes have been introduced in the literature, such as speed choices, waiting-time constraints, and multiple time windows, time-dependent service costs, or the minimization of the average time to reach customers, also called cumulative VRP (CCVRP). All these variants require determining the service times to customers for the routes produced during the search in order to evaluate their cost and feasibility. The resulting sub-problems, called optimal start time problems or timing problems, are reviewed in Hashimoto et al. (2010), and in Vidal et al. (2011) within a multidisciplinary unifying framework. Some ILS heuristics allowed to address effectively MAVRP with general or convex piecewise linear service costs as a function of service times (Ibaraki et al., 2005; Ibaraki et al., 2008), and with flexible travel time (Hashimoto et al., 2006). These three heuristics are based on remarkably efficient move evaluations for the problems considered. For the CCVRP, Ngueveu et al. (2010) and Ribeiro and Laporte (2012) successfully extended the hybrid GA with giant tour representation of (Prins, 2004), and the ALNS of Pisinger and Ropke (2007), respectively.

Regulations related to long-distance transportation impose complex rules for driving time and driver breaks. Combining the VRP with break scheduling leads to difficult route feasibility checks. The recent literature on this subject is mainly oriented on the laws in the United States and the European Union. When considering a fixed sequence of visits, the break scheduling sub-problem can be solved exactly in O(n
                           2) for the laws of the U.S. (Goel and Kok, 2012). For the E.U. laws, the complexity of the resulting problem has not yet been determined (Goel, 2010). Most metaheuristics have been compared on the benchmark instances of Goel (2009) with E.U. regulations. Since routes are costly to evaluate, neighborhood-centered approaches are usually preferred. Both Goel and Kok (2012) and Prescott-Gagnon et al. (2010) rely on LNS, the latter method using integer programming for visit reinsertions. Rancourt et al. (2013) designed a tabu search to address the U.S. regulations with multiple time windows. Finally, Goel and Vidal (2012) proposed an efficient hybrid genetic algorithm to address a wide range of regulations.

Less-than-truckload routing activities are the source of a large range of constraints related to the 2D and 3D packing of objects (2L-CVRP and 3L-CVRP), and their effective loading and unloading. These attribute lead to intricate problems that mix both multi-capacity bin-packing and VRP. Classic 2L-CVRP and 3L-CVRP benchmark instances have been proposed in Gendreau et al. (2008a) and Gendreau et al. (2006). The most effective heuristics for the 2L-CVRP include the ACO of Fuellerer et al. (2009), and the GRASPxELS of Duhamel et al. (2011) which solves a problem relaxation as a project scheduling problem with resource constraints, and yields the current best solution quality. For the 3L-CVRP, the best current methods are based on tabu search combined with advanced packing heuristics (Bortfeldt, 2012; Zhu et al., 2012). Other lines of research consider the explicit placement of different products in different compartments, and the transportation of hazardous material, with additional constraints related to product incompatibility and spacing (Iori and Martello, 2010).

Related to the invoicing practices of road transportation suppliers, the last return to the depot is not counted towards the transportation costs in the Open VRP (OVRP). This variant has been reviewed by Li et al. (2007b). Currently, the exact method of Letchford et al. (2006) can solve problems with up to 100 customers. The OVRP is very similar to the “traditional” CVRP from the point of view of a heuristic approach, and a lot of effective methods are adaptations of metaheuristics originally intended for the CVRP. These approaches have been tested on the classic CVRP instances of Christofides et al. (1979) and Golden et al. (1998), in which the tour-length limits, when applicable, have been reduced by 10%. Among the best methods, we find the tabu search with route-evaluations memories of Zachariadis and Kiranoudis (2010b), and the VNS of Fleszar et al. (2009). High performance was also achieved by the hybrid EA of Repoussis et al. (2010) and the ILS-VNS and integer programming hybrid of Subramanian (2012).

In the previous sections, champion methods were identified for 14 different MAVRPs and for the classic CVRP. All together, these approaches constitute a set of 64 successful algorithms for 15 different MAVRP, which are “anatomized” in the following. The analysis we develop is backed by quantitative observations on the frequency of appearance of elements of methodology in the successful approaches. One drawback of quantitative evaluations is that they favor seminal widespread approaches over single path breaking papers. Thus, detailed discussions on alternative strategies, even when represented a single time among the 64 methods, are presented to complete the analysis.


                     Table 3
                      first surveys the main metaheuristic frameworks used in the 64 algorithms. These methods are visibly of various natures, neighborhood- and population-based methods tending to be equally represented, contrasting with claims (frequent in the literature) for a best metaheuristic type. As such, different metaheuristic frameworks may lead to state-of-the-art algorithms for some variants when cleverly designed and complemented by adequate diversification and intensification strategies.

To better understand which elements of methodology make these particular applications a success, we examine in detail 19 selected characteristics, presented in Table 4
                     . Tables 5 and 6
                     
                      then provide a summary of our analysis, each line being associated to a method, and each of the 19 columns (3–21) corresponding to a feature that is potentially present. An X sign where line i meets column j indicates that method i relies on concept j. The rest of this section details how these features are used in the 64 state-of-the-art metaheuristics under consideration.

Metaheuristics are generally described relatively to the concept of search space, that is, a set of solutions, or more generally a set of states describing solutions, in which the method evolves. Basing the search-space definition on solutions is appropriate for the CVRP. For many MAVRPs, however, defining a complete solution goes beyond route description, as additional decisions related to attributes must be specified. Many metaheuristics are then designed to explore a search space made of indirect representations of solutions, containing, for example, only the route information, on which an efficient decoder algorithm can be applied to extract one or several complete solutions. This widely applied methodology is in itself a structural problem decomposition.

In the heuristics surveyed, 12/64 methods rely explicitly on indirect solution representations and decoders. The resulting search spaces may then be smaller and more prone to lead to high quality solutions. A well-known example is the representation of Prins (2004) as a giant tour without trip delimiters, used in many of the selected GAs (Boudia et al., 2007; Prins, 2009b; Ngueveu et al., 2010), and in the GRASP+ELS of Duhamel et al. (2011). In this case, the optimal insertion of depot visits in the tour can be solved in a quadratic number of route evaluations with a shortest path-based Split procedure. In Alegre et al. (2007), solutions are characterized exclusively by decisions on assignments to time periods. The role of the decoder is assumed by a VRP algorithm (a quick constructive method in this case) that creates the routes for each period separately. Other decoding methods can be found in the literature. For example, Salhi and Petch (2007) rely on an abstract solution representation in the form of circular sectors. Decoding is performed by means of a cluster-first route-second heuristic that relies on the sectors for the clustering phase. Finally, multiple structurally different search spaces, relying on different (representations, decoder) pairs, may efficiently reduce the risks of getting trapped in a local optimum.

Another main characteristic of the search space comes from the potential use of infeasible solutions. Since the early literature on tabu search with the strategic oscillation concept (Glover, 1986; Glover and Hao, 2011), studies report that a controlled exploitation of infeasible solutions may enhance the search, by allowing it to transition more easily between structurally different feasible solutions. Furthermore, the use of infeasible solutions may contribute toward improving the robustness of the method, which is less dependent upon the availability of a feasible initial solution (finding a feasible solution is often in itself a NP-hard problem).

About half of the selected MAVRP heuristics (31/64) rely on penalized infeasible solutions in the search space, which violate either the route constraints (load, duration, or time windows), the fleet size limit, or do not service all customers. Moreover, iteratively decrementing the fleet size limit while relaxing route constraints provides the means to address the “fleet size minimization” objective without relying on complex route elimination procedures. Elements of sensitivity analyses on the role of infeasible solutions in the context of PVRP and MDVRP can be found in Vidal et al. (2012). In the methods surveyed, relaxations of route constraints are usually privileged over fleet-size relaxations, as it can be difficult to progress from a solution with too many routes to a feasible solution.

With the exception of some methods that use exclusively large neighborhoods, and the GA of Lau et al. (2010) which appears to rely exclusively on crossover and random mutation, all mentioned MAVRP heuristics are based on at least one type of enumerable neighborhood using the arc exchanges described in Section 2.2. The size of these enumerable neighborhoods is usually O(n
                        2) in practice. Exponentially large neighborhoods are also frequently used (20/64). Besides ruin-and-recreate neighborhoods or perturbation mechanisms that are well represented in recent methods, cyclic transfers or ejection chains are also used (Ibaraki et al., 2005), as well as variants of the Sarvanov-Doroshko IP refinement heuristic (Gulczynski et al., 2011). Finally, 29/64 methods combine solutions, or fragments of solutions, into new solutions, thus transmitting good sequence elements as the evolutionary, genetic, scatter search and path relinking algorithms do. Not only GA and EA use these mechanisms. Consider for example the adaptive memory approaches of Taillard et al. (1996), Ichoua et al. (2003) and Olivera and Viera (2007), which operate recombinations of solution fragments, and the set covering based approach of Groër et al. (2011) involving recombinations of routes issued from multiple solutions.

Almost all the methods surveyed (60/64) rely on multiple neighborhoods, either successively, or in a compound way. The successive exploration of multiple neighborhoods makes the basis of the VNS methodology, and is recognized as an important success factor for metaheuristics in general, especially on complex problems with multiple constraints and characteristics such as MAVRPs. The methods of Archetti et al. (2006) and Parragh et al. (2010) push very far the concept of neighborhood variation by exploiting structurally-different, enumerative and large, neighborhoods. Other VNS for MAVRPs may gradually increase the size of the enumerative neighborhoods by varying the number of arcs to be exchanged (Hemmelmayr et al., 2009), but, strictly speaking, do not involve structural neighborhood differences.

Searching efficiently these neighborhoods is critical for performance, as it generally makes for the biggest part of the computation effort. Therefore, many techniques aim at pruning the neighborhoods (26/64 algorithms), or at enumerating them more efficiently. Move restrictions based on customer neighborhood lists (granular search) are frequently used (Ibaraki et al., 2005; Mester and Bräysy, 2007; Olivera and Viera, 2007; Hashimoto and Yagiura, 2008; Vidal et al., 2012), as well as neighborhood limitation strategies based on recently modified solution features (Nagata and Bräysy, 2008; Nagata and Bräysy, 2009; Nagata et al., 2010; Nagata and Kobayashi, 2011). In presence of EVAL attributes, re-optimization information developed on subsequence of successive customers can increase the efficiency of neighbor evaluations (Kindervater and Savelsbergh, 1997; Cordeau and Laporte, 2003; Nagata et al., 2010; Vidal et al., 2013). Lower bounds, multi-phase (feasibility-first or cost-first for example) or approximate evaluations of neighbors can be used to reduce complexity (Ichoua et al., 2003; Bortfeldt, 2012).

Memories of previous computations, aimed at reducing computational redundancy without changing the method behavior, are also frequently used. Although such procedures may be viewed as a matter of algorithmic engineering, and thus not necessarily mentioned, they are critical to reach a good performance, especially on problems for which route evaluations are costly such as the 2L- or 3L-CVRP, or the VRP with break scheduling. Most common memories of this kind are dedicated to manage move informations (Cordeau and Laporte, 2003; Alegre et al., 2007; Zachariadis and Kiranoudis, 2010a; Vidal et al., 2012) and route evaluations (Duhamel et al., 2011). Addressing all the attributes of the problem with well-designed neighborhood-centered searches is, and should remain, a primary concern when addressing complex MAVRPs.

The inclusion of random components in the various algorithm choices, mentioned explicitly in 56/64 methods, is a dominant characteristic of search trajectories. Randomisation is a prerequisite of asymptotic convergence properties of metaheuristics such as SA or GA. In practice, however, it is mostly used as a simple and efficient way to avoid cyclic behavior and increase the diversity of solutions. Only a few current methods for MAVRPs are deterministic. For example, although tabu search has been first built on deterministic arguments (Glover, 1986), recent applications involve random diversification operations, or tabu lists whose size vary probabilistically. Adding random noise to the objective function, as in Pisinger and Ropke (2007), is another way to exploit randomization to diversify the search.

The amount of change from one solution to the next is also characteristic of the methods. In neighborhood-centered methods, successive solutions tend to be in close proximity, sharing many common elements. This kind of trajectory can be qualified as continuous, unlike the trajectories of most population-based metaheuristics with crossovers, which are discontinuous, and display a “jumpy” behavior between successive solutions. Finally, mixed trajectories, combining continuous search and jumps, aim to profit from both kinds of exploration.

We identified 42/64 methods that use mostly a continuous trajectory, and 35/64 methods that often use discontinuous trajectories. Twelve algorithms use mixed trajectories, with large continuous search phases as well as regular jumps. These are neighborhood-centered metaheuristics that include mechanisms to change abruptly the search region by “jumping” to an elite solution (e.g., Archetti et al., 2006; Groër et al., 2011), during GRASP restarts (Duhamel et al., 2011), or when complete solutions are reconstituted from fragments or separate routes (Taillard et al., 1996; Ichoua et al., 2003; Olivera and Viera, 2007). Note that, ruin-and-recreate LNS and perturbation moves were included among the continuous class. Our main motivation is that the effective amount of arcs that are actually changed from one LNS iteration to the next can remain rather small, and such moves are generally operated to improve a single incumbent solution.

The judicious acquisition, management, and exploitation of knowledge on the problem and on the past search history is a complex task that belongs to the core of metaheuristics. Glover (1986) described three types of memories in the case of tabu search: short-term memories (e.g., tabu lists), which allow the search to be influenced locally in order to evade local optima, and medium- and long-term memories (e.g., memories on solutions elements), which are used to direct the overall exploration of the search space. These kind of memories have since been developed into various forms, and exploited for many means in other metaheuristics, including those surveyed for MAVRPs.

In particular, 28/64 of the selected metaheuristics bring into play populations as memories to manage promising or good-quality solutions, solution representations, routes, or solutions fragments. This is naturally the case for GA-based methods, path relinking, and scatter search, as well as metaheuristics relying on adaptive (Taillard et al., 1996; Ichoua et al., 2003; Olivera and Viera, 2007) or central memory cooperation (Groër et al., 2011; Cordeau and Maischberger, 2012). The populations of solution elements are used as the support for recombination procedures, including through set covering formulations, yielding new incumbent solutions.

Usually, a mix of diverse and high-quality elements is stored, thus aiming to find a balance between exploring new solution elements and focusing on champion features. Maintaining both diversity and elitism simultaneously in a population is a difficult task, as the aggressive local-improvement procedures, used in most efficient metaheuristics, tend to strongly drive the population towards a few local optima, resulting in premature convergence. Population-diversity management has thus been shown to be a key success factor in achieving good performance for MAVRPs (Prins, 2004; Goel and Vidal, 2012; Vidal et al., 2012). It is especially critical in addressing rich VRPs combining several attributes, as finding new high-quality solutions on such intricate problems seems to require a good diversity of solution elements.

Half of the above-mentioned methods operate diversity management procedures, relying usually on a distance metric between individuals for both measuring diversity and driving the population management. For MAVRPs, this metric is usually based on solution differences in the objective space (Prins, 2004; Ngueveu et al., 2010) or similarities in the route sequences (Prins, 2009b; Vidal et al., 2012), or are designed specifically for the attributes considered (those of the ASSIGN category especially, e.g., Alegre et al., 2007, Vidal et al., 2012). Diversity can then be controlled by different means. Lau et al. (2010) rely on fuzzy logic to adapt search parameters relatively to population diversity and quality measures. Prins (2004), as well as several other recent genetic algorithms with population management (Sörensen and Sevaux, 2006), impose distance constraints for acceptance in the population. Souffriau et al. (2010) implement ageing concepts to discard too “old” solutions from the pool. Finally, HGSADC (Vidal et al., 2012) does not consider diversity as a constraint, but as an integral part of the objective that competes with solution quality during individual evaluations. Empirical studies show that the latter mechanism leads to a higher solution diversity and quality.

Population management parameters are not the only ones to be adapted throughout the search. Parameter adaptation tends to be widespread in the methods analyzed (30/64) to drive the infeasibility penalties (Cordeau et al., 1997; Vidal et al., 2012), mutation or crossover rates (Repoussis et al., 2009; Lau et al., 2010), or other algorithm strategies such as the frequency of use of operators and neighborhoods (Ropke and Pisinger, 2006a; Pisinger and Ropke, 2007). Evolving search parameters directly within the genetic material of individuals is a common practice in EAs, while general metaheuristics adaptation is a main focus of hyper-heuristics (Burke et al., 2010).

More advanced forms of guidance, aiming to explicitly collect, analyze, and exploit knowledge on the past search to orient the future trajectories, are used in 29/64 methods. In MAVRP metaheuristics, the information is usually built as statistics on solution features, arcs, sets of arcs, routes, or problem specific attributes. The search context, e.g., the value of the incumbent solution and, eventually, the evolution of the value of the best solution (overall or for the current phase of the search), the value of particular counters resulting from the search history, and so on, is also part of the knowledge which is built.

This body of information, once collected and analyzed, serves as support for guidance actions. The purpose of such actions is generally to either intensify the search, by focusing on promising solution features, or diversify it towards under-explored areas of the search space. Various methods are used in the methods surveyed to undertake such intensification and diversification actions, such as, penalties or incentives on solution attributes (see Cordeau and Laporte, 2003; Derigs et al., 2009; Repoussis et al., 2009; Repoussis et al., 2010 among others), “jumps” toward elite solutions or new solutions recombined from elite elements (Taillard et al., 1996; Ichoua et al., 2003; Brandão, 2006; Olivera and Viera, 2007), target solutions in path relinking (Hashimoto et al., 2008; Souffriau et al., 2010), neighborhood choices governed by pheromone matrices (Ke et al., 2008; Fuellerer et al., 2009; Balseiro et al., 2011), or history-based ruin-and-recreate operators (Ropke and Pisinger, 2006a; Pisinger and Ropke, 2007; Ribeiro and Laporte, 2012). Guidance actions may be undertaken continuously, as part of the fundamental search pattern of the metaheuristic (e.g., path relinking or TABUROUTE and UTS incorporating dynamically adjusted penalties on solution stagnation or infeasibility elements), or discreetly through a purposeful move.

Balancing intensification and diversification is particularly important for MAVRPs, where many problem features may be exploited in order to drive the search more efficiently. It is thus well-known that statistically frequent features of high-quality solutions are more likely to appear in the global optimum, thus explaining partly the recent success for MAVRP of population-based metaheuristics (Jones, 1995), which favor the apparition and transmission of good solution elements, called building blocks in Holland (1975). Similarly, concepts of identification and combination of statistically promising solution attributes appeared with tabu search under the name of vocabulary building (Glover and Laguna, 1998; Aleman and Hill, 2010). Problem knowledge can thus be exploited in many ways in MAVRPs to intensify the search around relevant solution elements. Much of this same information can also be used for diversification, as it does, and should not play second violin. Indeed, MAVRP search spaces, sometimes metaphorically described as globally convex “big valleys” (Boese, 1995; Kubiak, 2007), remain nonetheless rugged and some near-optimal solutions may be substantially different from the global optimum. Thus, diversification procedures play a critical role in search efficiency.

Finally, among the papers surveyed, many sensitivity analyses on parameters seek a good balance between intensification and diversification, though modifications of diversity management, tabu lists, temperature controls in SA, pheromone matrices, thresholds choices in R-to-R, neighborhood choices in LNS or VNS, and so on. However, due to the balance that must be established, such parameters are subject to correlations, and advanced calibration methods, meta-calibration (De Landgraaf et al., 2007) or other statistical methods (Nannen and Eiben, 2007) that address all parameters together may be necessary.

The metaheuristics surveyed rely to a large extent (39/64) on hybridization. By decreasing order of appearance, we report genetic algorithms and ACO methods combined with local search, sometimes using large neighborhoods; tabu search methods combined with diversification operators based on solution recombinations (Ichoua et al., 2003; Olivera and Viera, 2007); and hybrid neighborhood-centered methods combining SA and LNS (Gajpal and Abad, 2009), tabu search and VNS (Archetti et al., 2006), or ILS with VNS (Penna et al., 2011). Nine hybrid matheuristics involve mathematical programming components. These components are used to handle attributes of the problem, such as loading constraints (Fuellerer et al., 2009) or split deliveries (Archetti et al., 2008). In other cases, exact methods are used to search large neighborhoods (Bent and Van Hentenryck, 2006; Prescott-Gagnon et al., 2010; Gulczynski et al., 2011), or recombine solution elements (Groër et al., 2011).

With the exception of multi-start methods which can be considered as a straightforward form of parallelism, 6/64 efficient methods relying on advanced parallelism and cooperation mechanisms were identified. Most such methods involve neighborhood-centered heuristics, tabu search in particular, that communicate through an adaptive memory of elements of solutions (Ichoua et al., 2003) or through a central memory of complete solutions (Groër et al., 2011; Cordeau and Maischberger, 2012). Integer programming solvers are used in Groër et al. (2011) to recreate solutions from the routes present in memory. In Balseiro et al. (2011), cooperation is based on pheromone exchanges between two ant colonies which simultaneously optimize travel times and fleet size.

It should finally be mentioned that more advanced cooperative metaheuristics are emerging for rich MAVRPs. In particular, Le Bouthillier and Crainic (2005a) introduced an advanced cooperative method for the VRPTW based on central memory. The method was complemented in Le Bouthillier and Crainic (2005b) with advanced guidance features. It served then as a building block of the Integrative Cooperative Search (ICS) framework (Crainic et al., 2009; Lahrichi et al., 2012), which relies on a structural problem decomposition among several such central memories. Each central memory involves several partial solvers that cooperate to produce partial solutions of the sub-problems, while integrators take on the role of reconstituting complete solutions from partial solutions picked in the partial memories. A global search coordinator is in charge of guiding the overall search as well as modifying the parameters and procedures.

MAVRPs lend themselves well to various decomposition approaches, centered on assignments or geometry (Ostertag, 2008; Bent and Van Hentenryck, 2010), temporal aspects (Bent and Van Hentenryck, 2010), or on solution attribute subsets (Crainic et al., 2009; Lahrichi et al., 2012). Among the methods analyzed, Ichoua et al. (2003), Fuellerer et al. (2009) and Vidal et al. (2013) separate temporarily the routes of an elite solution using geometrical arguments, the different customer sets corresponding to sub-problems that are solved separately. Such decompositions thus makes it possible to improve the assignments of an elite solution in a view of intensification. Structural problem decompositions, involving successive or simultaneous solutions of sub-problems presenting less attributes, are also used. Alegre et al. (2007) apply to the PVRP a scatter search to optimize the assignment to periods, while a simple CVRP heuristic is repeatedly used for route creation. Decompositions become essential to handle rich MAVRPs but, in this context, the sequential approaches that independently solve problem characteristics consecutively are not sufficient to attain high-quality solutions. A clever management of the successive decompositions, sub-problem resolutions, and full solution reconstructions becomes thus essential.

This unifying survey and synthesis responds to the considerable challenge related to the abundance of VRP variants and to the relatively few general classifications and analyses of these problems and solution methods. The survey underlines that, while few general and efficient metaheuristics were proposed in the literature for this important class of problems, MAVRPs naturally share many common features, and most heuristic strategies developed for specific problems can be applied to a broader range of VRP variants. Hence, we conducted this analysis from a general perspective detached from the particular characteristics of the VRP attributes, and adopted a synthetic approach providing the means to cope with the abundance of contributions. We analyzed in detail sixty-four successful metaheuristics for fifteen well-studied MAVRPs, identifying the main concepts and algorithmic-design principles, and highlighting the winning strategies of many efficient metaheuristics for a wide variety of variants.

When considering state-of-the-art methods, we observed recurrent notions such as mix, variability, hybridisation, cooperation, diversity, multiplicity, as well as balance, equilibrium, trade-off. It appears that most successful metaheuristics are not determined by a single factor but are the result of a good balance between several elements of methodology: the use of different search spaces, variable neighborhoods, mixed continuous and discontinuous search, short-, medium- and long-term memories, trade-off between diversification and intensification, cooperation and collective intelligence, hybridisation, and so on. In brief, in cooperation and diversity lies strength. The performance of those methods indicates that each element plays an important role. On the one hand, long-term memories, jumps, recombinations and, generally, advanced guidance mechanisms providing diversification and, when relevant, population-diversity management methods have the potential to make the search progress in the general “big rugged valley” of MAVRPs. On the other hand, short and medium-term memories and well-designed solution-improvement methods provide the aggressive search capabilities to complete the refinement of solutions.

We also observed that a clever implementation of algorithms is a necessary condition to yield competitive and scalable methods. neighborhood-pruning procedures (granularity, sequential searches) or memories on already evaluated routes, route segments, and moves, are necessary in many cases. Furthermore, one may notice that many algorithms rely on randomization and dedicate most of their computing time to evaluating various potential choices, without taking much advantage of history and already performed computations that may in many cases be profitably used. More intelligent guidance schemes have thus the potential to lead to performance improvements.

The research avenues for developing efficient MAVRP heuristics are numerous. We conclude the paper by summing up some open research questions.

In the previous sections, we identified a number of search-space, neighborhoods, and trajectory choices leading to successful MAVRP metaheuristics. One may then ask to what extent these choices should depend upon the variant of the problem, and whether it is possible to identify desirable search spaces and neighborhoods for some broad MAVRP classes. Of a similar nature are studies related to the definition of population-diversity metrics (e.g., what type of distance for MAVRPs) and management methods, and whether it should it be dependent upon the particular problem setting. Designing adequate and general neighborhood pruning procedures for MAVRPs is another important issue of similar nature, which may also be stated in terms of making current mechanisms, e.g., granular and sequential search, efficiently applicable to a large variety of attributes and problem settings. Such algorithmic developments and proof-of-concept studies make up a very challenging research area.

The integration of diversification and the appropriate balance between intensification and diversification are critical factors for efficient MAVRP metaheuristics. This area is closely related to the development of advanced mechanisms to extract knowledge out of the explored search-space areas and to globally guide the metaheuristics. Links to the fields of hyper-heuristics and landscape analysis should also be more thoroughly explored.

As this survey illustrates, a number of metaheuristic families, tabu search, adaptive large neighborhood search, and hybrid genetic algorithms, in particular, are widely acknowledged for their performance on a variety of MAVRPs. Given how differently these metaheuristics define and explore the search space, they are very likely to lead to extremely effective hybrid algorithms and parallel cooperative methods. This is an extremely rich and promising research field, particularly given the trend toward problem settings including a continuously increasing number of attributes and solution methods capable of addressing these attributes simultaneously.

To conclude, more general-purpose solvers, capable of handling a wide range of MAVRPs, are necessary to efficiently address practical routing applications in a timely manner. Many research questions have been answered by personalizing algorithms for each particular variant and by case-by-case improvements. However, solving generically (e.g., using a single solver and parameter set) a wide range of MAVRPs requires a better understanding of the problem foundations and the methods. This unifying survey and synthesis is a step toward reaching these goals.

@&#ACKNOWLEDGMENTS@&#

We thank the referees for their detailed comments, which significantly contributed to enhance the quality of this paper. Partial funding for this project has been provided by the Champagne-Ardenne Regional Council, France, the Natural Sciences and Engineering Council of Canada (NSERC), through its Industrial Research Chair and Discovery Grant programs, by our partners CN, Rona, Alimentation Couche-Tard, la Fédération des producteurs de lait du Québec, the Ministry of Transportation of Québec, and by the Fonds québécois de la recherche sur la nature et les technologies (FQRNT) through its Team Research Project program.

@&#REFERENCES@&#

