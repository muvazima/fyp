@&#MAIN-TITLE@&#Geodesic voting for the automatic extraction of tree structures. Methods and applications

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Geodesic voting is a new concept in image segmentation by one click on source point.


                        
                        
                           
                           Geodesic density is defined as the number of geodesic paths passing through a point.


                        
                        
                           
                           The metric is chosen in order to have many geodesics passing through relevant features.


                        
                        
                           
                           The method is generic and can be applied to different modalities for blood vessels, etc.


                        
                        
                           
                           Very efficient for vascular tree segmentation with precise boundary and centerline.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Geodesic voting

Fast Marching

Level set

Minimal paths

Tree structure segmentation

@&#ABSTRACT@&#


               
               
                  This paper presents new methods to segment thin tree structures, which are, for example present in microglia extensions and cardiac or neuronal blood vessels. Many authors have used minimal cost paths, or geodesics relative to a local weighting potential P, to find a vessel pathway between two end points. We utilize a set of such geodesic paths to find a tubular tree structure by seeking minimal interaction. We introduce a new idea that we call geodesic voting or geodesic density. The approach consists of computing geodesics from a set of end points scattered in the image which flow toward a given source point. The target structure corresponds to image points with a high geodesic density. The “Geodesic density” is defined at each pixel of the image as the number of geodesics that pass over this pixel. The potential P is defined in such way that it takes low values along the tree structure, therefore geodesics will migrate toward this structure thereby yielding a high geodesic density. We further adapt these methods to segment complex tree structures in a noisy medium and apply them to segment microglia extensions from confocal microscope images as well as vessels.
               
            

@&#INTRODUCTION@&#

In this paper we present novel methods for the segmentation of tree structures. These methods are based on minimal paths and can be applied to extract numerous structures such as microglia extensions, neurovascular structures, blood vessels, and pulmonary trees. Following our main motivation, we will present applications of our methods to microglia extensions and vessel segmentation. Recent developments in imaging such as fluorescent probes and reporters combined with two photon microscopy have brought new fields of investigation in neuroscience. Researchers may now follow in vivo dynamic movements of cells in 3D. Such approaches revealed that microglia, a subtype of glial cells, are particularly motile in the Central Nervous System (CNS). Beside their highly mobile processes, microglia are the primary inflammatory effector cells in the brain and are consequently involved in most CNS diseases. Understanding the logic of microglia motility might eventually provide an efficient tool to detect early symptoms of diseases such as Alzheimer’s or multiple lateral sclerosis. Although much work is devoted to the segmentation of vascular trees in medical images, only a few attempts have been made to extract microglia extensions and those have been restricted to the main branches [1,2]. Since the microglia extensions are very thin, the centerlines of the extensions are sufficient to characterize the structure and the motion of the microglia. As opposed to vascular tree segmentation, microglia segmentation is much more difficult due to very thin branches and noise. While there are some studies dedicated to the segmentation of microglia structures, there are many studies dedicated to the extraction of vascular or airway trees. For a review of such methods see [3–8]. Among the approaches used to segment such tree structures, we consider three models, classified according to their method for extracting the tubular aspect of the tree: centerline based models; surface models; and 4D curve models. The first category focuses on directly extracting the centerlines of the tubular tree [9,10]. After extracting the centerlines a second process can be used to segment the lumen of the tree, see [11]. The second category directly extracts the surface of the vessel. These approaches includes explicit and implicit surface models. The former use a parametric representation of the tubular structure [12]. These models are not adapted to the segmentation of complex tree structures, while the latter implicit methods can evolve the surface through complex shape changes including changes in topology [13,14]. However, initialization must be performed carefully to obtain an accurate segmentation.

Minimal path techniques are extensively used for centerline extraction of tubular tree structures. These approaches are robust to the presence of local perturbations due to stenosed branches of the tree or imaging artifacts where the local image information might be insufficient to guide the shape evolution process. Several minimal path techniques have been proposed to deal with this problem [15–18]. These techniques involve designing a metric from the image in such way that the tubular structures correspond to geodesic paths according to this metric [19]. Solving the problem from the practical point of view consists of a front propagation from a source point within a vessel, which moves faster along the branches of the vascular tree. These methods require the user to supply a starting point (propagation source) and end points. Each end point results in an extracted minimal path back to the source point. The points located along this minimal path are very likely to be located on the vessel of interest. A small amount of work has been devoted to reduce the need for user intervention of the user in the segmentation of tree structure to the initialization of the propagation from a single point. The authors of [20] defined a stopping criterion based on a “medialness” measure; the propagation is stopped when “medialness” drops below a given threshold. This method might suffer from the same problem as region growing since the medialness measure might drop below the given threshold in the presence of lesions or other local image artifacts. Wink et al. [16] proposed stopping the propagation when the geodesic distance reaches a certain value. However, this method is limited to the segmentation of a single vessel and the definition of the threshold of the geodesic distance is not straightforward. The authors of [21] proposed stopping the propagation according to a criterion based on certain geometric properties of the region covered by the front. In [17], assuming the total length of the tree structure to be visited is roughly given, the stopping criterion is based on the Euclidean length of the minimal path.

In this paper, we present new methods to extract tree structures without using any a priori information and using only a single user provided point on the tree structure. The methods are generic, they can be used to extract any type of tree structure in 2D as well as in 3D. While a first short version of our methods was presented in conferences [22–25], we provide a more complete view here and compare our methods with each other as well as with other competing methods. The approach is based on a completely new concept, namely, geodesic voting. It consists of computing geodesics from a given source point to a set of end points scattered throughout the image. The target structure corresponds to image points with a high geodesic density. The geodesic density is defined at each pixel of the image as the number of geodesics that pass over this pixel. Since the potential exhibits low values along the tree structure, geodesics will preferably migrate toward this structure and thereby yield a high geodesic density. We introduce different approaches to segment complex tree structures in noisy media environments and apply them to segment Microglia extensions from confocal microscope images as well as vessels in medical images.

In Section 2 we present the tools needed in Section 3 in order to define and study the geodesic voting method. In Section 4, we also propose a variety of possible ways to obtain both the centerline and the boundary of the vascular tree with our framework. In Section 5 we evaluate the method on 2D real data from different bio-medical images and show results for 3D data as well.

@&#BACKGROUND@&#

The minimal path theory for the extraction of contours from the image is inspired by Fermat’s principle in geometrical optics: the light trajectory y(s) between points x
                        0
                        =
                        y(0) and x
                        1
                        =
                        y(L) minimizes the optical distance (travel time or time for the light from source x
                        0 to reach x
                        1). Here s is the arc-length and L is the length of the trajectory which follows the curve y(s) that minimizes the travel time τ:
                           
                              (1)
                              
                                 τ
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 =
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       L
                                    
                                 
                                 
                                    
                                       d
                                       s
                                    
                                    
                                       c
                                       (
                                       y
                                       (
                                       s
                                       )
                                       )
                                    
                                 
                              
                           
                        where propagation speed c is a function depending on the medium of the propagation. In homogenous media the function c is a constant, so the trajectories correspond to straight lines. In a medium with two regions, see [19], the function c takes two values: c
                        1 in the first region and c
                        2 in the second region. The trajectory, in this case, corresponds usually to two line segments, each segment passing through one region, the breakpoint geometry satisfying Snell’s law. We are interested here in the case of a medium with a continuously varying velocity c.

In the context of image segmentation Cohen and Kimmel proposed in [19] a deformable model based on the optical distance (1). The model is formulated as finding a geodesic for a weighted distance:
                           
                              (2)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          y
                                       
                                    
                                 
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       L
                                    
                                 
                                 (
                                 w
                                 +
                                 P
                                 (
                                 y
                                 (
                                 s
                                 )
                                 )
                                 )
                                 d
                                 s
                              
                           
                        the minimum is considered over all curves y(s) traced on the image domain Ω that link the two end points, that is, y(0)=
                        x
                        0 and y(L)=
                        x
                        1. The constant w, penalizing the Euclidean length, imposes regularity on the curve. Function P(x)>0 defined for all x on the image domain Ω, is a potential cost function computed from the image data, it takes lower values near the edges or the features. For instance, P(x)=
                        I(x) attracts the paths towards dark lines while P(x)=
                        g(∥∇I∥) attracts paths towards edges, where I is the image intensity and g is a decreasing function.

To compute the solution associated to the source x
                        0 of this problem, [19] proposed a Hamiltonian approach: Find the geodesic weighted distance U to x
                        0 that solves the eikonal equation
                           
                              (3)
                              
                                 ‖
                                 ∇
                                 U
                                 (
                                 x
                                 )
                                 ‖
                                 =
                                 w
                                 +
                                 P
                                 (
                                 x
                                 )
                                 
                                 ∀
                                 x
                                 ∈
                                 Ω
                              
                           
                        
                     

The path y is subsequently computed by back-propagation from the end point x
                        1 by solving the Ordinary Differential Equation (ODE)
                           
                              (4)
                              
                                 
                                    
                                       y
                                    
                                    
                                       ′
                                    
                                 
                                 (
                                 s
                                 )
                                 =
                                 -
                                 ∇
                                 U
                                 (
                                 y
                                 )
                              
                           
                        Note that the propagation speed c in Eq. (2) corresponds to the inverse of the potential P and that the value U(x) corresponds to the minimum value of τ(x
                        0,
                        x) with respect to the set of the paths that connect x to x
                        0.

The only stable schemes that solve the eikonal equation compute a viscosity solution [26]. The first work that used the viscosity solution for this kind of problems was [27]. An iterative numerical scheme to solve eikonal equation was proposed in [28–30]. In such iterative scheme, at least complexity O(mn
                        2) is needed, where n is the total number of grid points and m is the number of iterations that permit an estimation of the solution. In the next section, we present the Fast Marching algorithm introduced in [31] to solve this problem in complexity O(n
                        log(n)). Some other schemes based on different tricks can lead to O(n).

The idea behind the Fast Marching algorithm is to propagate the wave in only one direction, starting with the smaller values of the action map U and progressing to the larger values using the upwind property of the scheme. Therefore, the Fast Marching method requires only one pass on the image starting from the sources (where U
                        =0) in the upwind direction. We briefly recall the principle of the Fast Marching method, for details see [31–33]. The grid points are partitioned into three dynamic sets: trial points, alive points and far points. Alive points are the grid points for which a value U has been computed and will not be changed any more, while Far points are those for which there is no estimate of U yet. Trial points are points that are not alive, and that have at least one neighbor that is alive, in order to get an estimate of U from the discrete version of Eq. (3). The trial points correspond to a dynamic boundary that separates far points and alive points. At the beginning, the starting point x
                        0 is alive with value U(x
                        0)=0, and its neighbors are trial. Then, at each step, the trial point with the minimum value of the action map U is moved to the set of alive points, and its neighbors are updated. To reduce the computing time, the trial points are stocked in a data structure referred to as min-heap (this data structure is described in [31,32]). The complexity to change the value of one element of the min-heap is O(log(n)). Hence, the total complexity for Fast Marching to reach the n grid points as alive is O(n
                        log(n)). The Dijkstra algorithm, which is also used to find a minimal cost path on a graph, has the same complexity as the Fast Marching algorithm. However, the Dijkstra algorithm leads to metrication error and is not consistent, as opposed to the Fast Marching algorithm which converges toward the unique viscosity solution of Eq. (3) (see [33]).

With the Fast Marching method we can extract the minimal path between two points by backtracking from the end point to the source point. Here, the aim is to extract a tree with just one point chosen by the user. Cohen et al. proposed in [21] a method to extract a tree structure from one point selected by the user. However, this method uses a priori information about the length of the tree. In [34], we proposed a method that makes use of Harris points [35]. This may be difficult in the case of complex images, for example in MRI with different organs that can each have Harris points or for very noisy data. In the following sections, a method is proposed for the segmentation of tree structures from only one given point without having any a priori information about the tree to extract. The method uses a new concept we introduce, and consists in computing the geodesic density from a set of geodesics extracted on the image domain.

Assume you are looking for a tree structure for which a potential cost function has been defined which has lower values on this tree structure. First we provide a starting point x
                        0 inside the tree structure and we propagate a front in the whole image with the Fast Marching method, obtaining the minimal action U. We will discuss later about the choice of this starting point, see Section 3.3.

Then assume you consider an end point anywhere in the image. Backtracking the minimal path from the end point you will reach the tree structure somewhere and stay on it till the start point is reached. So a part of the minimal path lies on some branches of the tree structure. The idea of this approach is to consider a large number of end points 
                           
                              
                                 
                                    {
                                    
                                       
                                          x
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                                 
                                    k
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                           
                         on the image domain, and analyze the set of minimal paths y
                        
                           k
                         obtained. For this we consider a voting scheme along the minimal paths. This scheme accumulates votes at each image pixel in the following manner: when backtracking each path, you add 1 each time you pass over a pixel. At the end of this process, pixels on the tree structure will have a high vote since many paths will pass over it. On the contrary, pixels in the background will generally have a low vote since very few paths will pass over them. The result of this voting scheme is what we can call the geodesic density. The tree structure corresponds to the points with high geodesic density.

The set of end points for which you consider the geodesics can be defined through different choices. This could be all pixels in the image domain, random points, scattered points according to some criterion, or simply the set of points on the boundary of the image domain. This choice will be discussed later. The geodesic paths 
                           
                              
                                 
                                    {
                                    
                                       
                                          y
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                                 
                                    k
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                           
                         from the set of end points 
                           
                              
                                 
                                    {
                                    
                                       
                                          x
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                                 
                                    k
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                           
                         are extracted by solving the ODE (4) for each point x
                        
                           k
                        .

We define the voting score or the geodesic density at each pixel p of the image by
                           
                              (5)
                              
                                 μ
                                 (
                                 p
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                 
                                 
                                    
                                       δ
                                    
                                    
                                       p
                                    
                                 
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       k
                                    
                                 
                                 )
                              
                           
                        where the function δ
                        
                           p
                        (y) returns 1 if the path y crosses the pixel p, else 0. We illustrate this on a simple synthetic tree structure in Fig. 1
                        .

Here 
                           
                              
                                 
                                    {
                                    
                                       
                                          x
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                                 
                                    k
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                           
                         are the pixels on the boundary of the image domain. One can see that since in this example the background is constant albeit noisy, the paths follow almost straight lines to reach the closest point of the tree structure, and then follow the tree till it reaches the source point. From the practical point of view, the vote is made when tracing a path, as we add 1 to each pixel that is passed over. We can see that the result of the vote gives a small value in the background and much larger values on the tree. We can also see that all paths reaching the same area of the tree will then follow the same trajectory until they end at the source point x
                        0. This means that along part of the branch the vote is constant, and when two branches meet and merge, the votes of the two branches add up to give the vote of the new branch. This process goes on till the source x
                        0 which has a vote of N by definition, which is the sum of all the votes of the branches. This can be seen in Fig. 1d for the two red parts of the tree, which correspond to higher values of the vote. This property can also be used to detect junctions since they correspond to discontinuities of the geodesic voting. Once the geodesic voting is made, the tree structure is obtained by a simple thresholding. As shown in Fig. 1d, the contrast between the background and the tree is very large and the threshold can be chosen easily, as will be explained in Section 5.1.

We can see in Fig. 1 that the geodesic voting extracts perfectly the synthetic tree structure by just giving a starting point. Illustrations of the geodesic voting for tree structure in real images, such as vessels in 2D or 3D images, and microglia in confocal microscope images will be found in Section 5.

So far, the geodesic voting method uses only the image domain boundary, which has the advantage that the score map has high contrast, facilitating the segmentation of the tree structure by thresholding. However, for complex tree structures the image border may not be sufficient for segmentation. Let us consider a synthetic image representing a tree structure like deer antlers (see Fig. 2
                        ). As seen in Fig. 2, minimal paths are attracted by the closest point on the tree structure, and it may happen that parts of the tree are never reached by the minimal paths, like the inside branches in the figure. Therefore some pixels have a void vote – e.g. they had zero geodesic density – although they may be on the tree structure as we can see in the Fig. 2c. We call the regions with null values of the score map, shading zones and the segmentation problem related to these regions a shading zones problem. In the following sections, different strategies to deal with shading zones problem are presented. Some solutions are based on changing the source points while others are based on the set of end points.

We observed that changing the source point in the tree structure can partially solve shading problems. In Fig. 3
                        b and c we took two different source points s
                        1 on the leaf f
                        1 and s
                        2 on the leaf f
                        2. With the source point s
                        1 it was possible to extract the leaf f
                        1 from the score map 
                           
                              
                                 
                                    S
                                 
                                 
                                    1
                                 
                              
                           
                         but not the leaf f
                        2, whereas with the source point s
                        2 it was possible to extract the leaf f
                        2 but not the f
                        1, see Fig. 3d and e. Hence, we propose to compute a score based on the sum of geodesic voting using different source points.

Subsequently, we define the global score map as the sum of all score maps:
                           
                              (6)
                              
                                 μ
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                s
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        where N
                        
                           s
                         is the number of source points s
                        
                           i
                         used and 
                           
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                           
                         is the voting score map associated to source s
                        
                           i
                        . We should use a set of sources {s
                        
                           i
                        } that is sparse to be not too big to avoid both large computation time and smoothing of the global voting result. If there are too many source points, smoothing may remove the property of the voting scheme to enhance the tree structure and threshold it easily. The set {s
                        
                           i
                        } should be also distributed all over the image domain in order to avoid the shading problem.

Naturally, we can use for the set of sources {s
                        
                           i
                        }, points we expect to be junctions or extremities of the tree structure. Furthermore, as proposed in [34], the junctions and the extremities of the tree correspond to the corner points, using the detector of Harris points. In Fig. 3, we used the Harris points detected (green points in Fig. 3a) as source points. We remark that in Fig. 3f the sum of the score maps from different source points allowed to segment all leafs. Of course, we can use any other set of source points satisfying the requirement above. Another example could be the set obtained from an adaptive meshing like the one defined in the next Section 3.4 for a different approach.

In this section, we present another approach to deal with shading zone problems using only one source point. This method consists in extracting minimal paths from a larger set of endpoints, such as the border and inside the image, to compute a voting score map. One could use all pixels of the image as an endpoint to extract a path, however this method is expensive in computing time and the complete voting may be smoothed too much to find the tree structure.

In this section we propose to use an anisotropic meshing of the image points to run the geodesic voting. The mesh is dense on the tree structure and sparse outside. Hence, the score map has high contrast, allowing a good segmentation of the tree structure. The method used to build automatically such adaptive meshing is based on a farthest point strategy for adding iteratively mesh points that are adaptively distributed on the image [36]. This process is based on the Fast Marching propagation according to a potential that will give preference to add mesh points likely to be around the tree structure.

In the following, we describe how this method works. Firstly, we have a point s
                        1 with an associated distance map U
                        1 computed with the Fast Marching method. Let us assume that, after k
                        −1 iterations a set of points S
                        
                           k
                        
                        ={s
                        1,…,
                        s
                        
                           k
                        } and their associated distance map U
                        
                           k
                         are computed. We construct then the set S
                        
                           k+1
                        ={s
                        
                           k+1}∪
                        S
                        
                           k
                        , where s
                        
                           k+1 is the farthest point of the image with respect to the set S
                        
                           k
                        , according to geodesic weighted distance. The distance map U
                        
                           k+1 is defined by the relation 
                           
                              
                                 
                                    U
                                 
                                 
                                    k
                                    +
                                    1
                                 
                              
                              =
                              min
                              (
                              
                                 
                                    U
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    U
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                 
                              
                              )
                           
                        , where 
                           
                              
                                 
                                    U
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                 
                              
                           
                         is the distance map computed from s
                        
                           k+1. The distribution of the points on the image with farthest points process is stopped for example when the desired number of points N is reached.

The number of iterations needed to obtain N farthest points is exactly N. This is because at each iteration exactly one point is added to the set of farthest points.

Note that, as mentioned in [36] the whole process of the propagation of the N farthest points required less than O(n
                        log(n)2) where n is the total number of pixels in the domain. This is because the definition of the distance map U
                        
                           k+1 associated to the set S
                        
                           k+1, which allows us to restrict the computation of the distance 
                           
                              
                                 
                                    U
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                 
                              
                           
                         on the set 
                           
                              {
                              x
                              ,
                              
                                 
                                    U
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                 
                              
                              (
                              x
                              )
                              ⩽
                              
                                 
                                    U
                                 
                                 
                                    k
                                 
                              
                              (
                              x
                              )
                              }
                           
                         and the size of this set is about 1/k of the whole domain.

The farthest points added at each iteration correspond to the maximal values of the geodesic distance. Therefore, the resulting meshing is dense in regions with smaller value for the propagation speed 
                           
                              F
                           
                        , and sparse in regions with higher values of 
                           
                              F
                           
                        . The speed function is computed from the potential P defined in Section 2.1. The speed function 
                           
                              F
                              >
                              0
                           
                         computed from the image takes the smallest values on the tree structure and the largest outside. Therefore, the meshing is likely to be dense on the tree structure and sparse outside, see Fig. 4
                        . Hence, as shown in Fig. 4, the geodesic voting obtained from this set of end points has high contrast and allows a complete and easier segmentation of the tree structure.


                        Fig. 5
                         illustrates the effect of the position of the source point on the geodesic density. It shows that the three different source points allow us to segment the same tree structure.

Note that we can also use the set of points obtained with adaptive meshing for the multi-propagation method presented in the previous Section 3.3. There we used as example the set of Harris points.

In the previous sections, we have proposed geodesic voting methods to extract tree structures. In Section 3.2 the problem of shading zones was pointed out and addressed in order to complete the segmentation results. The segmentation by geodesic voting from the border gives a high contrast geodesic density and demands less computing time. However, there is the problem of shading zones as we have explained in Section 3.2. In this section, we will compare these methods on the synthetic example of Fig. 4. The methods are implemented in C++/Matlab: the Fast Marching is implemented in C++, the computation of the paths and the geodesic voting are implemented in Matlab. The experiments presented in this work were achieved with a 1.73GHz PC. Table 1
                         compares the proposed solutions according to the computing time and a rate of branch detection on the synthetic “deer antlers” of Fig. 4. We defined the rate of branch detection as the number of the branches that are present both in the tree after segmentation with a given geodesic voting method, and the manually segmented tree divided by the total number of branches present in the manually segmented tree.

Regarding the computing time and the rate of branch detection, the adaptive voting gives the best results. Note that in this synthetic example, we were able to segment all the branches even using only a uniform grid of the image. For the adaptive voting or a uniform grid 900 points was the minimum number required to segment all branches. However, in Section 5 we will show using a real medical image that for the same number of end points, the adaptive voting allows us to segment all branches of the tree whereas with a uniform grid some tree branches were missed.

Geodesic voting method gives a good approximation of the localization of the tree branches, but it does not allow to extract the tubular aspect of the tree. Here, we propose two different methods to use the geodesic voting method in order to segment the boundary of the tubular structure.

The geodesic voting method described in the previous section gives a good approximation of the localization of each branch of the tree. In this section we introduce a constraint that ensures that the segmented tree approximates well the centerlines of the tree and we adapt the geodesic voting method to segment the walls of the tubular tree structure. The idea is to perform the geodesic voting with a potential that integrates an extra-dimension used to measure the distance from the centerline to the walls of the vessels.

The authors of [37] introduced a method to segment a tubular shape by finding a geodesic in a space augmented with the radius dimension in order to find both a centerline and the local radius of the tubular shape. As shown in Fig. 6
                           a, a 2D centerline curve and its local radius can be represented as a curve in 2D+radius space. The extension of the minimal path extraction model (2) to the case of a potential with an extra dimension is achieved by minimizing the following energy
                              
                                 (7)
                                 
                                    
                                       
                                          
                                             min
                                          
                                          
                                             c
                                             ,
                                             r
                                          
                                       
                                    
                                    
                                       ∫
                                       
                                          0
                                       
                                       
                                          L
                                       
                                    
                                    (
                                    ω
                                    +
                                    
                                       
                                          P
                                       
                                       
                                          ∼
                                       
                                    
                                    (
                                    c
                                    (
                                    s
                                    )
                                    ,
                                    r
                                    (
                                    s
                                    )
                                    )
                                    )
                                    d
                                    s
                                 
                              
                           The minimization of this energy allows for simultaneous approximation of the minimal path and the radii of the spheres tangents to the boundary of the tube with centers located along the minimal path. The computation of the path is achieved with the framework presented in Section 2. The radii are considered as an extra spatial dimension: for a 2D image the propagation with Fast Marching is done in 3D, for 3D images the Fast Marching is performed in 4D, see [32].

The potential function proposed by [37] is adapted to the task of finding centerline and boundary as a minimal path. This potential is defined by 
                              
                                 
                                    
                                       P
                                    
                                    
                                       ∼
                                    
                                 
                                 :
                                 (
                                 x
                                 ,
                                 r
                                 )
                                 ∈
                                 Ω
                                 ×
                                 [
                                 0
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       max
                                    
                                 
                                 ]
                                 →
                                 
                                    
                                       P
                                    
                                    
                                       ∼
                                    
                                 
                                 (
                                 x
                                 ,
                                 r
                                 )
                              
                           .

It incorporates the full set of image values within the sphere of center x and radii r and it is designed in such a way that the whole sphere lies inside the desired object and is as large as possible so that it is tangential to the boundary of the object.

The following potential was used:
                              
                                 (8)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          ∼
                                       
                                    
                                    (
                                    x
                                    ,
                                    r
                                    )
                                    =
                                    ω
                                    +
                                    
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                r
                                             
                                             
                                                β
                                             
                                          
                                       
                                    
                                    
                                       
                                          (
                                          m
                                          (
                                          x
                                          ,
                                          r
                                          )
                                          -
                                          
                                             
                                                m
                                             
                                             
                                                0
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                r
                                             
                                             
                                                β
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      2
                                                   
                                                
                                                (
                                                x
                                                ,
                                                r
                                                )
                                                -
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           where m and σ
                           2 are the mean and the variance respectively of the sphere and are defined by:
                              
                                 
                                    m
                                    (
                                    x
                                    ,
                                    r
                                    )
                                    =
                                    
                                       
                                          
                                             ∫
                                             
                                                B
                                                (
                                                x
                                                ,
                                                r
                                                )
                                             
                                          
                                          I
                                          (
                                          s
                                          )
                                          d
                                          s
                                       
                                       
                                          
                                             ∫
                                             
                                                B
                                                (
                                                x
                                                ,
                                                r
                                                )
                                             
                                          
                                          d
                                          s
                                       
                                    
                                    
                                    and
                                    
                                    
                                       
                                          σ
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    x
                                    ,
                                    r
                                    )
                                    =
                                    
                                       
                                          
                                             ∫
                                             
                                                B
                                                (
                                                x
                                                ,
                                                r
                                                )
                                             
                                          
                                          
                                             
                                                (
                                                I
                                                (
                                                s
                                                )
                                                -
                                                m
                                                (
                                                s
                                                ,
                                                r
                                                )
                                                )
                                             
                                             
                                                2
                                             
                                          
                                          d
                                          s
                                       
                                       
                                          
                                             ∫
                                             
                                                B
                                                (
                                                x
                                                ,
                                                r
                                                )
                                             
                                          
                                          d
                                          s
                                       
                                    
                                 
                              
                           where m
                           0 and 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       0
                                    
                                    
                                       2
                                    
                                 
                              
                            represent the mean and the variance of the starting point; β is a real positive constant. This potential was studied in [37] for β
                           =2. However, optimal results can be obtained with β
                           <2. This potential satisfies the conditions described above. Other choices for the potential are presented and discussed in [37].


                           Fig. 6b and c, we illustrate the augmented space method to obtain a 3D (2D+radius) path between 2 points that represents both a centerline and the border of the region.

We now extend our geodesic voting method to this type of space+radius geodesics. Using the potential 
                              
                                 
                                    
                                       P
                                    
                                    
                                       ∼
                                    
                                 
                              
                            and a set of end points (x
                           
                              k
                           ,
                           r
                           
                              k
                           ) (uniform grid) in the domain, we extract a set of geodesics y
                           
                              k
                            from which we compute the geodesic density (x,
                           r)→
                           μ(x,
                           r) given by Eq. (5). In this case the geodesic voting map is a function of the spatial dimension and also of the radii of the spheres. There are many ways to use this (2D+radius) geodesic density, or (3D+radius) for 3D images, in order to extract the tree structure.

Here we focus on the following spatial densities:
                              
                                 (9)
                                 
                                    
                                       
                                          
                                             
                                                μ
                                             
                                             
                                                ̃
                                             
                                          
                                       
                                       
                                          s
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             r
                                             =
                                             0
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   max
                                                
                                             
                                          
                                       
                                    
                                    μ
                                    (
                                    x
                                    ,
                                    r
                                    )
                                    ,
                                    
                                    
                                       
                                          
                                             
                                                μ
                                             
                                             
                                                ̃
                                             
                                          
                                       
                                       
                                          m
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    
                                       
                                          
                                             max
                                          
                                          
                                             r
                                             ∈
                                             [
                                             0
                                             ,
                                             
                                                
                                                   r
                                                
                                                
                                                   max
                                                
                                             
                                             ]
                                          
                                       
                                    
                                    μ
                                    (
                                    x
                                    ,
                                    r
                                    )
                                 
                              
                           The thresholded density, μ
                           
                              m
                            or μ
                           
                              s
                           , approximates the centerlines of the tree. To get the distance from the centerlines to the walls vessels, we compute the radii, for each point x with 
                              
                                 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       m
                                    
                                 
                                 (
                                 x
                                 )
                                 >
                                 threshold
                              
                           , by evaluating 
                              
                                 
                                    
                                       r
                                    
                                    
                                       ̃
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 arg
                                 
                                    
                                       max
                                    
                                    
                                       r
                                       ∈
                                       [
                                       0
                                       ,
                                       
                                          
                                             r
                                          
                                          
                                             max
                                          
                                       
                                       ]
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    
                                       ̃
                                    
                                 
                                 (
                                 x
                                 ,
                                 r
                                 )
                              
                           . The maps 
                              
                                 {
                                 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       m
                                    
                                 
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       ̃
                                    
                                 
                                 }
                              
                            or 
                              
                                 {
                                 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       ̃
                                    
                                 
                                 }
                              
                            allow to extract vessel walls and the centerlines.


                           Fig. 7
                            illustrates the steps of the GVR method for the segmentation of the tubular aspect of the tree. We can see the efficiency of the method to obtain a segmented tree that is centered in the structure, as well as the precise boundary of the vascular tree. Fig. 8
                            compares the original geodesic voting described in Section 3, and the results obtained with this new approach. The new geodesic voting method with an extra dimension (2D+radius) gives the best results in terms of the overlap ratio O given by Eq. (15).

Here we present a second approach to extract the walls of the vessels using the original geodesic voting method. A shape prior constraint is constructed from the geodesic voting tree to constrain the evolution of a level set active contour in order to extract the walls of the tree. A Bayesian approach is used to introduce this prior into the level set formulation. The model is formulated as a minimization problem of a global energy composed of two terms. One is a region based level set energy and the second one is the prior term.

The first term corresponds to the region based energy proposed by Chan and Vese [38]. This energy is a piece-wise constant approximation of the Mumford and Shah functional [39]:
                              
                                 (10)
                                 
                                    V
                                    (
                                    ϕ
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    =
                                    
                                       ∫
                                       
                                          Ω
                                       
                                    
                                    (
                                    
                                       
                                          λ
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          (
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                          -
                                          
                                             
                                                c
                                             
                                             
                                                1
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          H
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    +
                                    
                                       
                                          λ
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          (
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                          -
                                          
                                             
                                                c
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    1
                                    -
                                    
                                       
                                          H
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    )
                                    +
                                    μ
                                    
                                       
                                          δ
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    |
                                    ∇
                                    ϕ
                                    |
                                    +
                                    ν
                                    
                                       
                                          H
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    )
                                    d
                                    x
                                    ,
                                 
                              
                           where Ω is the image domain; u
                           0 is a given image function; λ
                           1,λ
                           2,ν, and μ are positive parameters; c
                           1 and c
                           2 are two scalar constants used to separate the image into two regions of constant image intensities. The two last terms in the equation introduce regularization constraints, where H
                           
                              ∊
                            and δ
                           
                              ∊
                            are respectively the regularized Heaviside and Dirac functions, in this work they are approximated by:
                              
                                 (11)
                                 
                                    
                                       
                                          H
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    τ
                                    )
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          
                                             1
                                             +
                                             
                                                
                                                   2
                                                
                                                
                                                   π
                                                
                                             
                                             arctan
                                             
                                                
                                                   
                                                      
                                                         
                                                            τ
                                                         
                                                         
                                                            ∊
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ;
                                    
                                    
                                       
                                          δ
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    τ
                                    )
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          π
                                       
                                    
                                    
                                       
                                          ∊
                                       
                                       
                                          
                                             
                                                ∊
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                τ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

While the Chan and Vese energy constraint introduces regularization to smooth the deformation ϕ and to deal with noise, it does not introduce a bias towards the target structure. Bayesian models were proposed in the literature to incorporate prior knowledge about the target structure to constrain the evolution of the level set [40]. Recent improvements of this approach were proposed for example in [41].

Assuming 
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       ̃
                                    
                                 
                              
                            is the signed distance to the known prior shape, we minimize:
                              
                                 (12)
                                 
                                    
                                       
                                          E
                                       
                                       
                                          b
                                       
                                    
                                    (
                                    ϕ
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    =
                                    V
                                    (
                                    ϕ
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    +
                                    γ
                                    
                                       ∫
                                       
                                          Ω
                                       
                                    
                                    
                                       
                                          
                                             
                                                (
                                                ϕ
                                                -
                                                
                                                   
                                                      ϕ
                                                   
                                                   
                                                      ̃
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          δ
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    d
                                    x
                                 
                              
                           where the factor term δ
                           
                              ∊
                            allows us to restrict the shape prior within the region of interest. Details about this method are given in [42].

In order to minimize this energy we make alternate minimization with respect to (c
                           1,
                           c
                           2) and ϕ. For ϕ constant, we deduce the values of c
                           1 and c
                           2:
                              
                                 (13)
                                 
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    =
                                    
                                       
                                          
                                             ∫
                                             
                                                Ω
                                             
                                          
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                          
                                             
                                                H
                                             
                                             
                                                ∊
                                             
                                          
                                          (
                                          ϕ
                                          )
                                          d
                                          x
                                       
                                       
                                          
                                             ∫
                                             
                                                Ω
                                             
                                          
                                          
                                             
                                                H
                                             
                                             
                                                ∊
                                             
                                          
                                          (
                                          ϕ
                                          )
                                          d
                                          x
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    =
                                    
                                       
                                          
                                             ∫
                                             
                                                Ω
                                             
                                          
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                          (
                                          1
                                          -
                                          
                                             
                                                H
                                             
                                             
                                                ∊
                                             
                                          
                                          (
                                          ϕ
                                          )
                                          )
                                          d
                                          x
                                       
                                       
                                          
                                             ∫
                                             
                                                Ω
                                             
                                          
                                          (
                                          1
                                          -
                                          
                                             
                                                H
                                             
                                             
                                                ∊
                                             
                                          
                                          (
                                          ϕ
                                          )
                                          )
                                          d
                                          x
                                       
                                    
                                 
                              
                           As usual, for (c
                           1,
                           c
                           2) constant, minimization with respect to ϕ is made using an artificial parameter t in the Euler–Lagrange formulation for (12):
                              
                                 (14)
                                 
                                    
                                       
                                          ∂
                                          ϕ
                                       
                                       
                                          ∂
                                          t
                                       
                                    
                                    =
                                    
                                       
                                          
                                             μ
                                             div
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∇
                                                            ϕ
                                                         
                                                         
                                                            |
                                                            ∇
                                                            ϕ
                                                            |
                                                         
                                                      
                                                   
                                                
                                             
                                             -
                                             ν
                                             -
                                             
                                                
                                                   λ
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   λ
                                                
                                                
                                                   2
                                                
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          δ
                                       
                                       
                                          ∊
                                       
                                    
                                    (
                                    ϕ
                                    )
                                    +
                                    
                                       
                                          γ
                                       
                                       
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             2
                                             (
                                             ϕ
                                             -
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   ̃
                                                
                                             
                                             )
                                             
                                                
                                                   δ
                                                
                                                
                                                   ∊
                                                
                                             
                                             (
                                             ϕ
                                             )
                                             +
                                             
                                                
                                                   (
                                                   ϕ
                                                   -
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         ̃
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                             
                                                
                                                   ∂
                                                   
                                                      
                                                         δ
                                                      
                                                      
                                                         ∊
                                                      
                                                   
                                                
                                                
                                                   ∂
                                                   ϕ
                                                
                                             
                                             (
                                             ϕ
                                             )
                                          
                                       
                                    
                                    in
                                    
                                    Ω
                                    ×
                                    
                                       
                                          R
                                       
                                       
                                          +
                                       
                                    
                                    ;
                                    
                                    ϕ
                                    (
                                    x
                                    ,
                                    0
                                    )
                                    =
                                    
                                       
                                          ϕ
                                       
                                       
                                          0
                                       
                                    
                                    (
                                    x
                                    )
                                    
                                    in
                                    
                                    Ω
                                    ;
                                    
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ∊
                                             
                                          
                                          (
                                          ϕ
                                          )
                                       
                                       
                                          |
                                          ∇
                                          ϕ
                                          |
                                       
                                    
                                    
                                       
                                          ∂
                                          ϕ
                                       
                                       
                                          ∂
                                          n
                                       
                                    
                                    =
                                    0
                                    
                                    on
                                    
                                    ∂
                                    Ω
                                 
                              
                           The estimation of the solution of the model (12) can be summarized in the following steps:
                              
                                 •
                                 initialize ϕ
                                    =
                                    ϕ
                                    0, n
                                    =0;

compute c
                                    1(ϕ
                                    
                                       n
                                    ) and c
                                    2(ϕ
                                    
                                       n
                                    ) by the relations (13);

compute ϕ
                                    
                                       n+1 by solving the PDE (14) with respect to ϕ;

update periodically the level set ϕ
                                    
                                       n
                                     by a signed distance;

repeat these three steps until convergence (ϕ
                                    
                                       n
                                     is stationary).

The geodesic voting method described in Section 3 gives a good approximation of the localization of each branch of the tree. The idea is to use the geodesic voting method to construct the shape prior that constrains the evolution of the level set propagation. After thresholding the geodesic density μ defined by Eq. (5) we get an approximation of the target tree structure as explained in Section 3. However this geodesic density does not allow to extract the tubular aspect of the tree. Indeed the thresholded geodesic density gives only an approximation of the centerlines of the tree structure. Our aim here is to use this rough tree skeleton to build a prior that constrains the evolution of level set active contour in order to extract the boundary of the tree.

From now on we call the voting tree, the tree structure obtained after thresholding the geodesic density. To construct the shape prior from the voting tree, a tubular tree with uniform width containing the target tree structure is obtained by morphological dilation of the voting tree. We use the largest radius of the tubular structure, obtained from the target image. It does not have to be precise, it is sufficient to inspect the target tree visually and to give an approximate value. The prior that we use to constrain the level set method corresponds to the signed distance from the boundary 
                              
                                 S
                              
                            of the tubular tree obtained after dilation, which we denote 
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       ̃
                                    
                                 
                              
                           .

The segmentation of vessels with this approach is achieved in two steps: (1) the geodesic voting tree is extracted using the original geodesic voting method (2) the walls of the vessels are extracted by minimization of the functional E
                           
                              b
                            of Eq. (12). Fig. 9
                            illustrates the segmentation process.

@&#RESULTS AND DISCUSSION@&#

In Section 3.5, we compared the geodesic voting methods on synthetic images. Here, we applied these methods on real data: MIP (maximum intensity projection) of 3D Magnetic Resonance Angiography MRA images of blood vessels, confocal microscope images of microglia extensions, and digital images of retinal blood vessels. In Section 5.2, we compare these methods in terms of the following evaluations measures: Hausdorff distance, overlap ratio (or Dice measure), and branch detection rate. The latter measure was defined in Section 3.5. In Section 4, we extended the geodesic voting method to segment vessels walls and apply it to real data in Section 5.3.

Moreover, we will compare our approach with the edge based level set method [43], the Chan and Vese method [38], and the fuzzy connectedness method [44]. In Section 5.4 we apply our approach to simulated 3D data of carotid bifurcation lumina created by adding Gaussian noise to datasets provided by the MICCAI challenge [45].

Let us define first overlap measures for two binary images defining regions A, the manual segmentation, and B, the segmentation result obtained by the geodesic voting method. The overlap ratio (or dice similarity), sensitivity, and specificity respectively are defined by the relations:
                        
                           (15)
                           
                              O
                              (
                              A
                              ,
                              B
                              )
                              =
                              
                                 
                                    2
                                    |
                                    A
                                    ∩
                                    B
                                    |
                                 
                                 
                                    |
                                    A
                                    |
                                    +
                                    |
                                    B
                                    |
                                 
                              
                              ,
                              
                              S
                              (
                              A
                              ,
                              B
                              )
                              =
                              
                                 
                                    |
                                    A
                                    ∩
                                    B
                                    |
                                 
                                 
                                    |
                                    A
                                    |
                                 
                              
                              ,
                              
                              P
                              (
                              A
                              ,
                              B
                              )
                              =
                              
                                 
                                    |
                                    A
                                    ∩
                                    B
                                    |
                                 
                                 
                                    |
                                    B
                                    |
                                 
                              
                           
                        
                     where ∣A∣ and ∣B∣ are respectively the number of the foreground voxels in the image A and B. ∣A
                     ∩
                     B∣ is the number of voxels in the shared regions (intersection of the foreground of the two images). The Hausdorff distance between A and B is defined by
                        
                           (16)
                           
                              H
                              (
                              A
                              ,
                              B
                              )
                              =
                              
                                 max
                              
                              {
                              
                                 
                                    
                                       sup
                                    
                                    
                                       x
                                       ∈
                                       A
                                    
                                 
                              
                              
                                 
                                    
                                       inf
                                    
                                    
                                       y
                                       ∈
                                       B
                                    
                                 
                              
                              d
                              (
                              x
                              ,
                              y
                              )
                              ,
                              
                              
                                 
                                    
                                       sup
                                    
                                    
                                       y
                                       ∈
                                       B
                                    
                                 
                              
                              
                                 
                                    
                                       inf
                                    
                                    
                                       x
                                       ∈
                                       A
                                    
                                 
                              
                              d
                              (
                              x
                              ,
                              y
                              )
                              }
                           
                        
                     where d is the Euclidean distance in 
                        
                           
                              
                                 R
                              
                              
                                 n
                              
                           
                        
                     , n
                     =2 for 2D image and n
                     =3 for 3D image.

In Section 3.5, we used for all experiments the following value to threshold the geodesic density:
                           
                              (17)
                              
                                 Th
                                 =
                                 
                                    
                                       
                                          max
                                       
                                       (
                                       geodesic density
                                       )
                                    
                                    
                                       100
                                    
                                 
                              
                           
                        as threshold to extract the tree structure using the voting maps. Fig. 10
                         shows the effect of the threshold on the overlap ratio, defined by Eq. (15), for the tree of Fig. 4. We can see that the threshold can be chosen in a large range that contains the threshold Th, given by Eq. (17). Although the geodesic voting segmentation fits perfectly the localization of the tree structure, see Fig. 4, the overlap ratio that measures the overlap of the geodesic voting segmentation and the manual segmentation of the tree is relatively low. This is due to the fact that the manual segmentation of the tree is a tubular structure whereas segmentation by geodesic voting finds a thinner structure inside the tree. This threshold can be improved for a given application. Indeed, we can compute manually values of the threshold from a data set composed from a significant number of images and compute statistics to define the optimal threshold. This optimal threshold can be used to segment any other image from the same application context.

The aim of this section is to compare the geodesic voting methods presented in Sections 3.1 and 3.4 on real data. The use of the multi-propagation method, presented in Section 3.3, for vessel segmentation on real data required manual intervention of the user to remove the Harris points that do not correspond to true characteristics points of tree-junctions and extremities. Therefore, we have chosen not to include this method in the following experiments. The difference between these methods is the localization of the end points used to perform the geodesic voting.

In Fig. 11
                        , we present experiments on a MIP image of a 3D MRA image using different choices of end points to perform the geodesic voting. In the first experiment we performed the geodesic voting with endpoints on the border of the image, in the second experiment we used a uniform sub-grid of the image with half image pixels, and in the third and the fourth experiments we performed the adaptive geodesic voting with 103 and 5×103 farthest points, respectively (method presented in Section 3.4). In Table 2
                        , we compare the results of these experiments to the manual segmentation of the tree structure in terms of Hausdorff distance, rate of branch detection as defined above, and overlap ratio. The best results were obtained with adaptive voting, with 103 and 5×103 farthest points, even though the number of points used in the geodesic voting from a uniform grid (2562 points) were superior to the number of points used in the adaptive voting. As mentioned earlier, the large number of points has a smoothing effect that make the voting less efficient.

In Fig. 12
                        , we illustrate the application of the adaptive geodesic method to the segmentation of microglia extensions from confocal microscopy images. The numerical results obtained were satisfying in terms of computation time and coherence with the visual aspect of the cells. We kept in the result panel (c) only density values greater than the threshold Th (given by Eq. (17)). In panel (c), the blue circle shows the false detection marked by an expert. This part of the extension belongs to another cell that is not present in the image. We will discuss the problem of multiple trees in the same image in Section 5.3.


                        Figs. 11 and 12 show the potential application of the geodesic voting method to different image modalities. In these experiments, four MR angiography images and 10 microglia images were used. We show here one example of each, more results are presented in the paper [23]. In the next section we will apply the geodesic voting method to segment vessels from a larger dataset (12 retinal images).

In this section, we will compare on the one hand the geodesic voting methods GVR (method with radius presented in Section 4.1) and GVP (method with prior presented in Section 4.2) for vessel segmentation from retinal images on the DRIVE data (Digital Retinal Images for Vessel Extraction) [46]. On the other hand we will compare GVR and GVP with other approaches used for vessels segmentation.

The DRIVE data were acquired using a Canon CR5 non-mydriatic 3CCD camera with a 45° field of view (FOV). Each image was captured using 8 bits per color plane at 768 by 584 pixels. The FOV of each image is circular with a diameter of approximately 540 pixels. For this database, the images have been cropped around the FOV. The DRIVE data is composed of 40 images from different subjects for which manual segmentations are also provided.

Considering the complexity of the retinal images and the properties of our algorithm, we have cropped 12 different images from the 40 images available and evaluated our method on them. Note that the retinal vessels in each image do not correspond to a tree structure. Some images may contain several disconnected trees or networks. Note that when the image contains more than one tree structure, the geodesic voting method tends to create connections between them. This can be seen in Fig. 12c. These connections may not make sense anatomically, therefore a preprocessing or postprocessing step is necessary to get an accurate segmentation. For a completely automated application, this problem may be solved by using the selection step proposed (for a different method) in [47] to remove paths that are unlikely to belong to the microglia extensions. This is out of focus of this paper to propose precise automatic pre- or post-processing to deal with all kind of situations. Therefore, it was more illustrative to choose images that contain tree structures and then crop the image in such way that the cropped image contains only one tree structure. We were able to extract 12 tree structures from 12 different images in the DRIVE data. The size of the cropped image depends on the size of the tree in the original image and in average corresponds to 100 pixels in high and 50 pixels in width.

For the GVR method, the augmented potential 
                           
                              
                                 
                                    P
                                 
                                 
                                    ∼
                                 
                              
                           
                         used is described in Section 4.1. After performing the geodesic voting with the potential P
                        
                           r
                         given by Eq. (8) we compute the map 
                           
                              {
                              
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    m
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    ̃
                                 
                              
                              }
                           
                        . The starting point was chosen as a junction of the tree, r
                        max
                        =4, λ
                        1
                        =
                        λ
                        2
                        =10, w
                        =0.01 and β
                        =0.3. As the end points were chosen as a uniform grid, the spatial starting point can be chosen anywhere within the tree. However, the starting radii should be chosen carefully to get an optimal segmentation. In our experiments on DRIVE data we obtained good estimation of these parameters by testing different values following the study presented in [37]. These parameters can be optimized and automated for a given class of images.

For the GVP method, we have used the following potential P(x)=
                        I(x)3 to run the geodesic voting segmentation, where I is the grayscale intensity of the image. Fig. 9 shows results obtained using this potential. The value of γ, the weight on the prior, was chosen empirically and used for all the experiments presented in the paper. We showed in [42] that this value can be chosen in a large range with the same efficiency.

In the Figs. 13 and 14
                        
                         (results obtained with the GVR and GVP), the source point used to perform the geodesic voting was chosen empirically on the junction of the tree that is connected to the largest number of branches. This allows us to segment the largest number of branches in the presence of small branches with weak contrast. Note that the quality of the images provided by DRIVE are not very good and sometimes it is hard to set optimal sphere radii for the GVR initialization. When it is not possible to give a precise radius we underestimate the value of the radius whenever possible, indeed we measure the radii of the spheres in pixels and their diameters are odd numbers. Concerning the end points, we have used the same number for each method: 1200 farthest points (generated by the process described in Section 3.4) for the GVP method, and a uniform grid of the augmented potential for the GVR method. The threshold for the geodesic density was defined from the first five images as the mean value of all the threshold values manually selected for these five image. Then this mean threshold was used for all the 12 images. We have used two different values for the mean threshold: one value for the GVP method and the other for the GVR method.

In Table 3
                        , we compare the GVR and GVP results for vessel segmentation on the DRIVE database in terms of the following evaluation measures: Dice, specificity, and sensitivity. We found that the GVR and GVP gave similar results. However, the two methods have different characteristics. The GVR is a sphere-based approach: the radii of spheres tangential to the vessels are estimated along the centerlines. GVP is not sphere-based; it fits better the boundary of the vessels in the images due to the characteristics of the level set propagation. However, the GVP depends heavily on the initial tree used as prior for the level set evolution. The threshold and the number of farthest points were fixed for all the data; in some cases small branches with weak contrast were therefore missed. Also, the initial tree estimated in the first step of the GVP may not align with the centerlines of the tree, see Fig. 8b. This first step allows to construct the prior for the GVP to estimate the boundary vessels in the second step. In contrast, the GVR estimates simultaneously the centerlines and the vessel walls.

In the sequel, we compare the performance of GVR and GVP methods with the edge and region based level set methods and the fuzzy connectedness method in the segmentation of vessels.


                        Fig. 15
                         shows the results obtained with the fuzzy connectedness method [44]. The segmentation of the tree is obtained by thresholding the fuzzy connectedness map. For a small threshold the method does not allow to extract all the branches of the tree, and when the threshold is increased the propagation leaks outside of the tree. The same problems were observed with the edge based level set method [43] when we increased the number of iterations, see Fig. 16
                        . Figs. 17
                         and 7f compare the results obtained with all these approaches. The shape prior allows us to constrain the propagation inside the tubular tree. Fig. 17 shows that the propagation without shape constraints (γ
                        =0 in Eq. (12)) can leak outside of the tree structure.

Our methods (GVP and GVR) give the best results: they succeed in segmenting more tree branches without leaking outside of the tree structures.

In this section we evaluate the geodesic voting method on simulated 3D data and show an example of the segmentation of the airway from a CT image.

The simulated 3D data were created by adding Gaussian noise to binary images of carotid bifurcation lumina provided by the MICCAI challenge [45] with different values for the noise variance: 
                           
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              =
                              
                                 
                                    k
                                 
                                 
                                    100
                                 
                              
                              ,
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              9
                           
                        . Although these simulated data may not represent all the characteristics of real images, they provide an accurate ground truth for a first validation of segmentation algorithms. Note that at least for computed tomography images, the noise was found to be Gaussian [48].


                        Fig. 18
                         shows results obtained with the GVP method with σ
                        =5 and with the noise variance v
                        1
                        =0.01. Fig. 19
                         compares the manual segmentation with GVP results with different values of σ and using nine different levels of noise. For all experiments we used the same number of end points and the same threshold to segment the geodesic density. The geodesic voting tree is dilated to 8×8×1mm to construct the prior to constrain the level set evolution. The dice measure goes below 0.72 when the level of noise exceeds 0.045. Fig. 19 shows also that among the three values of σ
                        =5, 6, 7 for the GVP model, σ
                        =5 allows the model to be more robust to noise. It shows also that σ can be chosen in a large range when the noise variance does not exceeds 0.045. The threshold for the 3D data was set to the value Th (given by Eq. (17)) to segment all the synthetic data.

For optimal performance, the whole structure of the tree has to be covered with end points to deal with the shading zone problem, described in Section 3.2, and to limit the intervention of the user in the segmentation process. The number of end points increases in 3D. Consequently, the computation time increases. Furthermore, the selection of end points can be improved for a particular application using a prior for the localization of the tree. The prior can then guide the selection of an optimal number of end points in the image. For example in CT images, the airway lumen is dark, therefore end points may be generated only on the dark region of the image.

Authors do not pretend that the current implementation of the geodesic voting method, and the current choice of potentials, is able to correctly segment all real medical images in 3D. The purpose of this evaluation is only to show that the method can be extended to 3D, but also to capture the thickness of the tree branches, provided that a potential adapted to the given image type is found. The optimization of the potential may need further investigation.

@&#CONCLUSION@&#

In this paper we have presented a completely new approach for the segmentation of tree structures based on geodesic voting. This approach is adapted to automatically segment tree structures from a single point provided by the user with no further a priori information required about the tree. By contrast, other methods described in the literature for the segmentation of tree structures are not fully automatic and require prior information about the tree to be segmented. We have combined this approach with an added fourth dimension (space+radius) or with Chan–Vese level sets using priors in order to obtain both the centerlines and boundaries of the tree. We have applied our geodesic voting approach to segment different tree structures from a variety of bio-medical images. Finally, we have evaluated our approach on retinal 2D images, and have shown segmentation results on other biomedical images, included simulated noisy 3D data. The results were satisfying in terms of the rate of branch detection, the Hausdorff distance from the ground truth, and the overlap measures defined in Section 3.5.

@&#REFERENCES@&#

