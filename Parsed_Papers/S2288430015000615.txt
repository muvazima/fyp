@&#MAIN-TITLE@&#Programming of adaptive repair process chains using repair features and function blocks

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           Definition of adaptive repair process chains as cascaded control loops.


                        
                        
                           
                           Introduction of repair features as a bridge between measurement input and analytical CAD data for manufacturing.


                        
                        
                           
                           Dynamic determination and adjustment of repair features and CAx repair process chain execution based on function blocks.


                        
                        
                           
                           Use case study of repairing worn-out turbine blades with repair features and function blocks.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

CAx

Flexible process chain

Adaptive

Function blocks

Manufacturing

Turbomachinery

Repair

@&#ABSTRACT@&#


               
               
                  The current trends of product customization and repair of high value parts with individual defects demand automation and a high degree of flexibility of the involved manufacturing process chains. To determine the corresponding requirements this paper gives an overview of manufacturing process chains by distinguishing between horizontal and vertical process chains. The established way of modeling and programming processes with CAx systems and existing approaches is shown. Furthermore, the different types of possible adaptions of a manufacturing process chain are shown and considered as a cascaded control loop. Following this it is discussed which key requirements of repair process chains are unresolved by existing approaches. To overcome the deficits this paper introduces repair features which comprise the idea of geometric features and defines analytical auxiliary geometries based on the measurement input data. This meets challenges normally caused by working directly on reconstructed geometries in the form of triangulated surfaces which are prone to artifacts. Embedded into function blocks, this allows the use of traditional approaches for manufacturing process chains to be applied to adaptive repair process chains.
               
            

@&#INTRODUCTION@&#

Flexibility in manufacturing processes is becoming a key objective in today׳s economic environment with current trends like mass-customization and cyber-physical systems. These trends and the rise of novel near-net-shape production technologies lead to new requirements on manufacturing process chains. Introducing flexibility into manufacturing process chains results in higher complexity as production steps will typically depend on dynamic decisions based on influences such as measurement data or process parameters. Therefore, tools for complexity management will have to be put in place to support the user in modeling and executing process chains.

A prominent example are repair process chains in the maintenance, repair and overhaul sector in the aerospace and energy industries. Due to the use of expensive super alloys repair processes are a cost-efficient alternative to the production of new parts and are put in place whenever possible. The need for maintenance results from the superposition of the three factors mechanical and thermal load as well as erosion. Furthermore, individual damage patterns and deformations will occur at the rotating turbine components [1–3]. The repair process chains in use consist of several steps like milling, laser cladding or grinding. Each process has to be adapted individually to the repair case, the result defines the input for the next step. Complex dependencies are a consequence of this approach and have to be mastered.

In the past several companies have developed different strategies to satisfy the need for this kind of repair process chains. A common practice is to manually identify the damages and adjust the computer-aided design (CAD) accordingly. These adjustments may include (i) transformations to equalize a part distortion, (ii) adding of auxiliary geometries such as planes to allow planning of the computer-aided manufacturing (CAM). Another commonly used approach to implement an adaptive repair process chain is to develop custom-tailored software systems for each kind of part and type of damage.

Obviously, both approaches need a substantial amount of manual preparation and are thus far from optimal in terms of cost. To overcome this situation an approach is required which can capture the required repair process knowledge and is able to support automated execution of the repair processes. This results in new challenges for process planning and manufacturing. Today׳s CAx systems and approaches are not able to fulfill these demands. Therefore, this paper introduces repair features which can be used as a basis for planning and programming of repair process chains. Furthermore, this paper shows how the benefit of repair features can be leveraged by the use of function blocks to program adaptive repair process chains, as well as how they can be set up with function blocks.

Having introduced repair features this approach can combine the commonly used way of process planning and programming with the new requirements for handling of adaptive repair process chains. Furthermore, it has the potential to be easily adopted by the industry as the established way of programming manufacturing process chains through CAD/CAM can still be integrated into the presented approach.

Flexibility in manufacturing has long been a subject of research. In the last 90 years it has been treated from economic, organizational and technical viewpoints. Although it is not possible to make a clear-cut distinction between these concepts, this paper places emphasis on the technical aspect and focuses on the role of CAx software systems in this context.

In an attempt to sum up previous works and to create a common terminology, Browne et al. [4] introduced a classification which defines eight types of manufacturing flexibility: (i) Machine flexibility, the ease of making the changes required to produce a given set of part types. (ii) Process flexibility, the ability to produce a given set of part types, each possibly using different materials, in several ways. (iii) Product flexibility, the ability to changeover to produce a new set of products very economically and quickly. (iv) Routing flexibility, the ability to handle breakdowns and to continue producing the given set of part types. (v) Volume flexibility, the ability to operate a flexible manufacturing system profitably at different production volumes. (vi) Expansion flexibility, the ability of expanding a system as needed in a modular way. (vii) Operation flexibility, the ability to interchange the ordering of several operations for each part type. (viii) Production flexibility, the universe of part types that the flexible manufacturing system can produce.

As Sethi [5] pointed out, CAx technologies in conjunction with CNC machining centers are a prerequisite for achieving any of these flexibilities but especially for machine, operation and product flexibility. Sethi rejected the idea of computer flexibility as an own category, arguing that computer technology underlies all the categories defined by Browne. With the advance of computer and communication technologies and their widespread distribution within the manufacturing industry branches, it has become increasingly clear that these technologies have a significant influence on manufacturing flexibility. The classification of Kusiak [6] takes this development into account and considered computer flexibility as an own category. In this paper methods to describe and model flexibility in the CAD/CAM domain along repair process chains are discussed. In order to do this a distinction between horizontal and vertical process chains is made [7], see 
                        Fig. 1
                        .

A horizontal process chain is a series of manufacturing processes needed to produce a work piece. A typical horizontal process chain in the processing of formed sheet parts contains cutting, forming and joining [7]. Another example is the repair manufacturing process chain of worn turbine blades through additive laser cladding and re-contouring [8,2,9].

A vertical process chain describes, in contrast to horizontal one, the way from the idea to the product and contains other types of processes [7]. Typically, a series of steps is needed to plan and execute a single manufacturing process which involves personnel, machine tools, tools, fixtures. Often vertical process chains deal with geometric modeling (CAD), tool path planning (CAM), post processing and the manufacturing process itself (e.g. milling, grinding) [10].

Flexibility in the vertical process chain can take several forms which all have to be supported by the different software systems in use. The geometry of the workpiece might change, making every produced part unique (product flexibility). Examples are repair processes on parts which have acquired their current geometry through wear, parts being produced by a casting or forging process and thus have varying stock or unique tools and dies. The manufacturing process can be replaced by another technology, for example punching by laser cutting or milling by grinding (process flexibility). Process flexibility also means changes in process strategy which may be necessary after a change of workpiece material or the machine tool. Finally, the machine tool may be a subject to change, for example by changing the fixture, tool holder or axes setup (machine flexibility). Product flexibility will make demands on the CAD system, process flexibility on the CAM system and machine flexibility on the CAM system, post processor and CNC machine tool controller.

Operation flexibility and routing flexibility are the key capabilities for a flexible horizontal manufacturing process chain. Operation flexibility can mean a reordering of the manufacturing steps needed, adding, removing or substituting manufacturing steps. It has to be supported by CAPP software. Routing flexibility can today be observed in highly flexible manufacturing plants which allow products to be dynamically routed to alternative machine tools or assembly devices if necessary due to downtimes or high loads.

As mentioned, these flexibilities make high demands on CAx systems to handle, organize and plan manufacturing processes. This paper describes a novel approach to master the resulting complexity and exploit the potential of flexibility in repair processes by combining repair features and function blocks.

The term “adaptive machining” describes machining processes with variable input states, which produce defined and consistent output states [11]. To realize an adaptive machining process a complex process chain is necessary, in which every single process contains its own CAx process chain to generate the required data. An interesting approach to this requirement is the feature modeling technique. “By features we mean the generic shapes or characteristics of a product with which engineers can associate certain attributes and knowledge useful for reasoning about that product” [12]. Features consisting of a geometric and semantic part are used to describe the workpiece requirements and functions in a 3D CAD model [13]. The required basic structure of a feature is shown Fig. 2
                        : it corresponds to a certain form element (syntax), has a technical meaning (semantic) and relationships between the syntactic and semantic elements exist [13]. The geometric and semantic part are also based on knowledge which is indispensable for the planning and realization e.g. of an adaptive machining process. In this context the knowledge can be distinguished between an explicit and an implicit form. Explicit knowledge can be verbalized and communicated via language, such as text documents and databases. In this form it has the properties of being writable, questionable, arguable, transportable and can be understood by logical reasoning [14]. In contrast, implicit knowledge is based on the experience and capability of an individual person e.g. CAM planner and is often not fully communicated. However, implicit knowledge is indispensable for accomplishing activities in the product life cycle or CAx process chain [14]. Feature technology is a tool which is suitable to transport and document data, information and knowledge. The CAx process chain becomes transparent and unnecessary workload can be reduced. These are key aspects in the adaptive repair of turbine blades, since the associated CAx process chain needs a large amount of input and the output has to be handled consistently. Today the main application field is the use of feature technology in form of “prismatic design feature” or “user defined feature” to design 3D CAD models since these are supported by commercial 3D CAD systems.

There are already several existing approaches to model, program and plan manufacturing process chains.

In industry commercial CAx systems are commonly used to program manufacturing process chains [13]. One example for such a CAx system is Siemens PLM NX [15]. In those systems CAD entities are referenced and process parameters for a manufacturing process step are specified within operations. These in turn can be chained together in a linear or hierarchical order. Furthermore, in some systems it is possible to use rules or scripting to allow flexible programming of tool paths.

Another possibility to program adaptive manufacturing process chains is the development and usage of specially customized software. However, due to the high setup-costs this approach can only be economically used for high-volume parts or product families with a similar manufacturing process chain. Within the Fraunhofer Cluster of Innovation “TurPro” (Integrative Production Technology for Energy-efficient Turbomachinery) [9] an example of such a specialized implementation was developed and analyzed.

Computer-aided process planning (CAPP) deals with finding a selection and sequence of manufacturing processes and possibly the determination of values for the corresponding process parameters to manufacture the desired product according to the specification. Many existing approaches are based on the existence of geometric features [19,20]. It is possible to use CAPP to handle adaptive manufacturing process chains by executing it on the current input data, respectively.

Furthermore, declarative approaches have been proposed with the idea to specify only the desired result and not the exact sequence and parameters. A prominent example in this category is STEP-NC [21]. It contains all the information for manufacture, through the description of machining entities, working steps, workplan, tools, machining strategies, etc. [22]. STEP-NC was demonstrated to be capable of implementing a closed-loop adaption of the CAx process chain by feeding back measurement results [23], as well as implementing an machine control adaption [24].

An emerging approach to program adaptive manufacturing processes is based on function blocks (IEC 61499) [25]. It was originally designed for distributed industrial-process measurement and control systems but is also applicable to the integration of manufacturing process planning, scheduling and execution [26]. A basic function block encapsulates internal algorithms, variables and an execution control chart as shown Fig. 3
                        . The latter defines the logic of how to react to a specific event in its current internal state. Upon receiving an input event and corresponding data, the execution control chart runs one or more of the algorithms on the data. In turn, it may send output events and data to activate potentially connected function blocks. In order to allow modeling of reoccurring logic, and communication with hardware, IEC 61499 specifies other types of function blocks as well. However, all of them share the event and data interface mechanism. For example there are composite function blocks which contain and hide a circuit of other function blocks. They comprise their functionality by redirecting the input events and data to the sub-function blocks, see Fig. 4
                        .

The goal of this paper is to show how adaptive manufacturing processes and process chains for repair applications can be handled programmatically. Therefore, it is shown which influences affect repair process chains and how they can be handled within the existing approaches.

Tutsch describes a vertical manufacturing process chain as a sequence of quality control loops [27]. Each control loop is responsible to adapt one manufacturing process of the process chain according to the desired quality of the result. This approach focuses on detecting problematic characteristics of the product. The findings are stored in a company-wide database which can be used for future product design and manual optimization of process parameters. However, this view as a sequence of quality control loops does not consider adapting the process chain itself, e.g. by changing of CAM operations.

Therefore, this paper introduces a new view on vertical adaptive process chains. They can be considered as a cascaded control loop as shown in Fig. 5
                     . In such a control loop the outer loops calculate the set points for the inner loops (in this case “setup adaption” and “online adaption”). The reaction time of the inner loops to feedback is less than the one of the outer loops. For example, changes in a CAD model require the most engineering efforts because of challenges like finding correct references for the measurement and designing auxiliary geometries. In Fig. 5 each arrow represents a closed loop control and thus a potential source of flexibility. Adaptions in the inner loops need to be applicable very fast and thus run on the machine tool controller, e.g. laser power adaptions on feed rate drops. Hence, this paper distinguishes between online and offline adaptions. Online adaptions run on the machine tool controller while offline adaptions are handled outside of the process-related components, e.g. by CAx systems. Online adaptions are already in use today [8] and can be applied with less effort than offline adaptions, since their underlying dependencies are limited to input generated during process execution. In contrast, offline adaptions are often applied manually [27] or by very specialized software with restricted repair cases [11].

The existing approaches to handle adaptive manufacturing process chains mentioned previously are not capable of implementing an adaptive repair process chain completely (except for the customized software approach which is not generally applicable because of its specialized character and the high implementation costs). The reasons are (i) Generic CAx systems do not support every process technology and are limited in working together with 3rd-party applications. Especially, the support for generative processes are uncommon amongst them, while those play a key role in repair processes. (ii) Declarative approaches like STEP-NC may be able to express all the required information about adaptive repair process chains but are also limited to that functionality. Execution management still needs to be done by another component, e.g. the machine control. This leaves the need for an higher instance controlling the whole adaptive repair process chain. (iii) The function block approach is promising but so far has only been used to implement machine controls or has been used to perform CAPP tasks. (iv) CAPP itself only addresses the process planning and finding of the process parameters. It too does not deal with execution control. Furthermore, CAPP needs features as a starting point.

Thus, this paper introduces repair features to allow the application of existing approaches in the domain of adaptive repair process chains by providing the required CAD data based on the nominal model and measurement data. To implement the control loop for selecting and fitting of the repair features based on the measurement input this paper proposes the use of function blocks. Function blocks are also used to handle the implementation of the whole adaptive manufacturing process chain as it may be required to execute multiple loops.

The selection and use of production information for repair processes depends strongly on the worker׳s experience [28,29] , leading to the quality of manufacturing results being bound to the people working on it. Hence, a method is required which supports experience-based working and at the same time can be standardized. The latter is an important key aspect for having adaptive manufacturing process chains [30] and will be detailed in the next section.

In conventional CAM planning processes the 3D CAD model (nominal model) serves as the key input data. However, in repair applications the actual geometry of the part may no longer correspond to the nominal model within certain tolerances. For example deformations of a turbine blade during operation can be caused by thermal influences. Hence, the CAD model itself is of limited suitability for the tool path generation for the repair processes. Using the unchanged CAD model nevertheless as a basis for CAM, the result would be an undefined material removal which in turn can lead to an unusable workpiece.

To overcome this problem one commonly used approach is to measure the real workpiece geometry and create a triangulated 3D part in STL format [31]. Although, the measured data is suitable for describing the worn-out area and adapting tool paths (e.g. for the re-contouring process), it is not well-suited for generating the tool paths in the first place. As investigations within the research projects TurPro and AdaM by Fraunhofer Institute for Production Technology (IPT) [9,32] have shown, this is because of insufficient data quality especially in the worn-out areas, uncontinuous surfaces resulting in oscillating surface normals and missing of significant geometry information such as edge locations. These causes lead to inaccurate or defective tool paths. Therefore, an approach is needed, which can leverage measurement data to adapt machining surfaces and provides appropriate CAD data quality for CAM planning at the same time.

As shown previously, the existing approaches are not well-suited to handle repair process chains since measured data is not directly taken into account and cannot be used as a basis for CAM process planning. Therefore, this chapter introduces repair features in combination with function blocks to allow the use of existing approaches for repair process chains while introducing adaption through measurement at the same time.

From a general point of view, repair features are application features defined for adaptive repair cases. They are always comprised of a form feature and semantic features, specified by the repair process chain for a part group like turbine blades. The particular aspect of the semantic component is that in addition to e.g. process parameters and tool information for different production technologies also a model of the adaptive repair process chain is included. This enables the user to check the compatibility of the chosen or defined repair feature and the used process chain during process planning. If one condition is not fulfilled, the input parameters need to be changed or another model of the repair process chain needs to be selected. Furthermore, the semantic feature can be expanded in a very flexible way and thus used for different repair process chains. Another characteristic of the repair feature is the different use of the form feature component. According to the VDI 2218 [19] definition, form features are used to simplify design processes of CAD models. In contrast, form features of repair features will be used to geometrically define the repair case. Consequently, the geometry of a repair feature marks the surface or volume on which the repair process chain defined in the semantic part of the feature is based. Hence, the form feature component does not permanently become a part of the CAD model. It can be regarded as an assembly component which modifies the already existing geometry by means of the repair process chain.

Shah describes manufacturing features to link manufacturing processes to a collection of related geometric elements, such as holes, slots and pockets [12]. However, unlike manufacturing features, repair features refer to virtual part regions. These regions enclose the respective damage (or a specific aspect of it) but are not necessarily related to any geometrical aspect of the nominal CAD model. Furthermore, manufacturing features do not contain any information about a complete process chain but only define information for a single manufacturing process

Selecting a repair feature based on the measurement input and the nominal CAD model allows classifying damages on worn-out parts in a standardized way. This in turn allows the application of standardized repair scenarios which is essential for industries were manufacturing process chains have to be certified. Additionally, repair features provide CAD like geometries by only adjusting its simple geometry elements to the damaged part. This step involves positioning, resizing and adjustment of parameters according to the measurement data, e.g. point clouds. Hence, repair features enable conventional CAM programming to be applied to metrology data containing jitter and measurement errors. Like manufacturing features, repair features are based on the ideas of the feature technology which allow extendable experience-based manufacturing for example by shape component, process description, technological methods [29].

Furthermore, in contrast to existing manufacturing features, repair features shall provide the following: (i) Geometric Flexibility, the repair feature must be flexible. This way its position, dimensions and parameters can be adjusted to the damaged area. (ii) Classification, by defining the position, size and parameters of a fitted repair feature the severity of the damage can be determined. Based on this it can be decided if the part is repairable or scrap, e.g. in cases where damages are too big and the integrity of important structures might have been affected. (iii) Auxiliary Geometries, providing a suitable shape geometry for planning of the repair process chain by taking the measurement methods, manufacturing technologies and CAM technologies into account. (iv) Meta Information, the repair feature must provide extended meta information to the repair process chain. This can include required manufacturing process technologies, limitations or other information not contained in the nominal CAD data. For example, the definition of minimal and maximal angles between adjacent surfaces to ensure the manufacturability.

Starting point for the development of a repair feature is the analysis of multiple worn-out parts of the same part family. This way damage patterns can be determined and classified which in turn leads to simplified geometries representing the patterns. For each damage category and its simplified geometry the intended repair process chain is modeled as a CAx process chain. This step might be automatically done or partially supported by CAPP, e.g. by adaptive process planning [33]. However, in any case it is important to determine the meta information of the repair feature like required manufacturing processes, process parameters and limitations on flexibility. It might be necessary to iteratively improve the simplified geometries in order to successfully support all intended scenarios. This ensures repair feature geometries which are independent of the process know-how and experience from the CAM planner.


                        Fig. 6
                         shows an example of a repair feature. It defines a set of surfaces based on which tool paths can be generated. Furthermore, meta information like allowed minimum and maximum angles and the fillet radius between the surfaces are attached to it. These are indicated in the figure by the angle 135° and the radius R2. This feature will be explained in more detail and used in the case study in the next chapter.

Of course the definition of a repair feature potentially may require a lot of experience in the involved manufacturing processes as well as the properties of the part. However, having defined a repair feature will ease the application of repair processes and might even allow full automation by managing the repair features in a feature library. Having such self-organizing manufacturing process chains enable current trends such as the high-tech strategy of the German government, Industrie 4.0 
                        [34]. This refers to the idea of devices connected to the internet or other networks (cyber physical systems) can communicate to each other in order to achieve a higher degree of automatization in manufacturing [34,35].

Having introduced repair features themselves, it is still undefined how they can be used to program adaptive repair process chains. Obviously, there are two key questions to be answered in this regard: (i) Which method allows for modeling of adaptive repair process chains and supports execution of the logic? Instances of such a method could be stored in a repair feature, thus fulfilling the requirements described in the last section. (ii) How can a repair feature automatically be selected based on and adapted to the repair case? A solution which answers this question, combined with the method of (i), would allow to automatically repair parts based on the measurement data in a few steps: First, the measurement data needs to analyzed and based on the result, repair features are selected as defined in the previous section. Subsequently, the remaining repair features are adjusted according to the damage and validated to check if no constraint is violated. Repair features not passing all checks are not taken into account for further processing. In the next step, the modeled adaptive repair process chains referred to in the repair feature are parameterized with the nominal model of the part, the measurement data and the chosen parameters of the adjusted repair feature. In the last pre-manufacturing step, the programmed repair process chains can be simulated and checked for any errors. Finally, the chosen modeled repair process chain can be executed on the part to be repaired.

An example of an horizontal manufacturing process chain for turning the starting material into the finished product is shown in Fig. 7
                         which is based on Groover׳s definition of a manufacturing process [36]. To do this it applies either the operation sequence 
                           (
                           A
                           ,
                           C
                           ,
                           D
                           )
                         or 
                           (
                           B
                           ,
                           D
                           )
                        . This is a realistic use case as there are typically multiple alternatives to manufacture one part [37,38]. Generally, the result r of manufacturing process i can be expressed as a function of a number j of process parameters p
                        
                           j
                         and of the result of its preceding manufacturing processes 
                           
                              
                                 r
                              
                              
                                 i
                                 −
                                 1
                              
                           
                         
                        [39]: 
                           
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 m
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       i
                                       −
                                       1
                                    
                                 
                                 )
                              
                           
                        Since a repair process chain is a manufacturing process chain for repairing parts with a more or less undefined form of the start material, this view is equally valid in the area of repairs. Based on this intermediate conclusion, using function blocks as the solution to both tasks mentioned at the beginning of this section is proposed.

There are multiple reasons for this proposition: (i) As shown in Fig. 7, repair process chains are very similar to the concept of a function block circuit. In this analogy each manufacturing process can be represented by a function block as each one turns the input into a corresponding output. Furthermore, process parameters are equal to the internal variables or can be passed by data from one function block to the next. (ii) IEC 61499 allows to model in hierarchy levels by means of composite function blocks. Not only does this concept enable one to reuse some parts of the model. It also can be seen as an equivalent of each manufacturing process in an horizontal process chain requiring a vertical one for tasks like CAM and PP, as defined in Section 2. (iii) Function blocks provide a standardized way of modeling and programming distributed systems as described previously. (iv) Therefore, they are a good match to the way adaptive repair process chains are handled today which involves potentially different and specialized software systems for each manufacturing step. Each software system can be encapsulated by function blocks in the way as shown in Fig. 8
                         
                        [40]. (v) A valid circuit of function blocks, as a form of domain-specific modeling, can be executed directly. However, a runtime is required which acts as an interpreter for the process chain supplied by the models [41]. (vi) IEC 61499 is easy to learn and intuitive after a short start-up period [42]. (vii) It is possible for process chains programmed by function blocks to integrate human interaction. This can be done by leveraging the runtime environment which waits at certain points of the model or by using specialized function blocks which for example show a dialog to the user.

A function block can react differently based on its internal variables and the input data. Therefore, it is not only able to adjust to the current requirements but also influence the subsequent function blocks by sending out the corresponding event and data. Consequently, by using function blocks it is possible to integrate feedback loops and thus adaptivity into repair process chains. Thus iterating to an acceptable result is possible by using methods of the previously introduced cascaded control loop. Furthermore, approaches proposed in literature for handling online and offline adaptive manufacturing processes can easily be integrated, especially those itself based on function blocks.

As function blocks allow to encapsulate any logic directly, or combine several steps to the desired functionality respectively, selecting the optimal repair feature is possible. This can be done in different ways but it is important to ensure that only repair features are considered if they are designed for the current part. Furthermore, it must only be applied if it can be fitted to the damage while keeping every parameter in the allowed range. If multiple repair features meet these criteria, the one should be selected which keeps the material needed to be removed during the repair to a minimum. This step may require an experienced engineering or developer to implement the desired logic. But once the selection algorithm has been implemented within a basic function block or by a function block net, it can be used for multiple parts to be repaired.

Having chosen and fitted a repair feature based on the available meta information of the repair feature and possibly existing approaches like CAPP, the repair process chain can be determined. As described above by representing it within a connected function block net, the result is executable and can integrate different CAx systems and machine tools. It can even contain function blocks selecting further repair features and starting the adaptive repair process chain over again.

To verify the proposed approach of using repair features combined with function blocks for execution control, a case study was performed by Fraunhofer IPT. The use case is based on experience acquired in the projects Cluster of Innovation “TurPro” [11] for tip repair of gas-turbine blades and the Innovation Cluster “AdaM” (Adaptive Production for Resource Efficiency in Energy Generation and Mobility) [32] for adaptive repair processes.

Within the projects the requirements for modeling and programming of adaptive manufacturing process chains for turbine were defined and the blade repair is based on measurement data. This repair process chain is shown in Fig. 9
                      and comprises machine-integrated laser scanning for geometry data acquisition, blade milling for creating even surfaces to allow the laser metal deposition for material build-up and re-contouring by adaptive milling.

The implementation of the CAx process chain is based on the software platform called “CAx-Framework”, developed by Fraunhofer IPT within the Fraunhofer Cluster of Innovation “TurPro” [43], CAM modules created in the projects and on the established CAx system Siemens PLM NX [15].

In Fig. 10
                      the repair process chain is shown in more detail up to the blade milling step. The first sub-figure (a) depicts a model of the damaged turbine blade. The leading edge of this model can be seen in a closed-up with the focus on the worn out area in sub-figure (b). The previously mentioned repair feature has been fitted based on the measured data and the meta information. The angle between its inclined surfaces is controlled by rule-based parameters which takes constraints of the milling process into account and ensures an optimal starting point for a high quality laser surface cladding result. Sub-figure (c) shows a simplified tool path for milling, calculated based on the repair feature. The simulated result of this milling process [44,13] is visualized in the last sub-figure (d). This prepared turbine blade will then be used in the next repair process steps, laser material deposition [45,8] and re-contouring (milling).

The simplified model of the use case is shown in Fig. 11
                     . As a starting mechanism for the event-driven function block system an user-defined operation within Siemens PLM NX is used: whenever the user-defined operation is generated an initial event is sent to the connected function blocks. In this use case, the NX geometry loader function block is triggered and the turbine blade data is loaded from the NX CAD assembly [18]. The next function block which will be activated and analyzes the worn areas of the turbine blade by using the point cloud from a measurement step. Subsequently, the information about the worn-out areas are sent to the next function block for selecting the appropriate repair feature from a technology database. As mentioned previously, the two function blocks may need to be customized to the specific part and damage type. However, once both function blocks are defined for a damage, like a worn-out leading edge, it might be used for most other turbine blades as well.

The selected adaptive repair process chain from the technology database is parameterized and an event is sent to it to execute it. Associated with the event, all the required data is provided. In this use case the milling function block encapsulated NX milling functionality and the laser cladding function block was designed to use the CAM module created within TurPro. The result was then passed on to the next function block for further processing.

This process chain was able to successfully restore the original contour and thus repairing the airfoil. Hence, this use case showed that adaptive repair process chains can be programmed by using repair features and function blocks as proposed.

@&#CONCLUSION@&#

Repair features in combination with function blocks allow established approaches for modeling and programming being applied to adaptive repair process chains. This is because having geometry features is an established starting point for many CAx planning processes. Furthermore, the introduction of repair features provides a way to generate high-quality machining tool paths since they are not directly calculated based on the measured surfaces but on the nominal CAD model and analytical auxiliary geometries. By maintaining a library of repair features workers can save manual work by having a standardized way to handle repair processes. This approach is especially valuable in industries required to comply with compulsory quality requirements. Only in the case of new damage types or completely new parts having to be repaired it might be necessary to define new repair features.

The authors declare no conflict of interest associated with this manuscript.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank the state government of North Rhine Westphalia and the Fraunhofer Gesellschaft für angewandte Forschung e.V., who provided the financial support of the work presented here in the innovation clusters “Turpro” and “AdaM” (contract number 332-8.04.09.02.02/11-57448 and PRO/0042).

@&#REFERENCES@&#

