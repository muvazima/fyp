@&#MAIN-TITLE@&#Solving a bi-objective Transportation Location Routing Problem by metaheuristic algorithms

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A mathematical formulation for the problem is proposed.


                        
                        
                           
                           A new representation to reduce computational effort is presented.


                        
                        
                           
                           Local search and evolutionary based solution algorithms are implemented.


                        
                        
                           
                           Our implementation of Local Search based algorithms is outperformed by our implementation of Evolutionary based algorithms.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Multiple objective programming

Transportation Location Routing Problem

Logistics

Metaheuristics

@&#ABSTRACT@&#


               
               
                  In this work we consider a Transportation Location Routing Problem (TLRP) that can be seen as an extension of the two stage Location Routing Problem, in which the first stage corresponds to a transportation problem with truck capacity. Two objectives are considered in this research, reduction of distribution cost and balance of workloads for drivers in the routing stage. Here, we present a mathematical formulation for the bi-objective TLRP and propose a new representation for the TLRP based on priorities. This representation lets us manage the problem easily and reduces the computational effort, plus, it is suitable to be used with both local search based and evolutionary approaches. In order to demonstrate its efficiency, it was implemented in two metaheuristic solution algorithms based on the Scatter Tabu Search Procedure for Non-Linear Multiobjective Optimization (SSPMO) and on the Non-dominated Sorting Genetic Algorithm II (NSGA-II) strategies. Computational experiments showed efficient results in solution quality and computing time.
               
            

@&#INTRODUCTION@&#

Distribution systems in Supply Chain Management comprise all operations related to the transportation of final products from plants to clients, considering all intermediate steps, such as the ones relating to warehouses and distribution centers.

The location of distribution facilities and the distribution of products from these facilities to clients are two key components of a distribution system (Tunzun & Burke, 1999). The problem, which combines the facility location and the vehicle routing decisions, is known in operations research context as the Location Routing Problem (LRP). Both, the facility location (FLP) and the Vehicle Routing Problem (VRP) are in general, NP-Hard (Cornuejols, Fischer, & Nemheuser, 1977; Karp, 1972, as cited in Tunzun & Burke, 1999). Therefore, the integration of both problems (LRP) is even more complex (Garey & Johnson, 1979; Megiddo & Supowit, 1984; Shen, 2007).

Efforts to solve FLP and VRP separately have proven to generate sub-optimal results (Prins, Prodhon, & Wolfler Calvo, 2006; Salhi & Rand, 1989). The fact is that the location of facilities in a supply chain, strategic level, and the vehicle routing decisions, tactical level, interact. Both are part of the supply chain system, and different designs of facility location affect the routing arrangement. It is necessary to view the problem holistically. An overall solution for both problems is required.

This research focuses on strategic and operational issues of a soft drinks’ distribution industry. There exists several production plants and a group of clients located in cities. These clients (hotels, restaurants, mini-markets, and others) demand a fixed and stable amount of products. Due to traffic regulations, trucks from plants cannot arrive at clients locations in the cities. City Distribution Centers (CDCs) on the city’s outskirts are required. The organization needs to determine the quantity and location of these logistic platforms, the number of trucks from each plant to each City Distribution Center (CDC) and the sequence to visit clients for product delivery. This problem can be seen as an extension of the two stage Location Routing Problem, in which the first stage corresponds to a transportation problem and the second one to a routing stage.

Distribution costs have a significant impact on the overall costs of an organization (Toth & Vigo, 2002; Srivastava & Benton, 1990). Therefore, in their strategic and operational decisions, organizations have to take into account the objective of minimizing the overall distribution system’s cost. Because of this, most efforts have focused in dealing with cost minimization.

However, in a complex industry system, other stakeholders are required to be taken into account in processes design and decision making. For instance, issues such as work equity and fairness might be considered in order to generate balanced workloads for employees (Kritikos & Ioannou, 2010). In this work, we considered a balance objective in order to even up the work load of the transportation staff in the routing stage.

In order to tackle the problem addressed in this work, an extension for the two stage Location Routing Problem is considered, which could be seen as the integration of three sub-problems: the location of the CDC (FLP), the transportation of product from plants to CDCs (transportation problem with truck capacity) and the design of the vehicle routes to visit clients for each CDC (VRP). We call this problem a Transportation–Location-Routing Problem (TLRP). Additionally, two objectives are considered in the problem definition, minimize the total operation cost of the system and maintain balance in vehicle (city freighters) operators’ workload.

At least within the reviewed literature, multiple objectives in a TLRP have never been analyzed.

This paper is organized as follows, in Section 2 a brief discussion about previous related works is presented, the problem description and its mathematical formulation are comprised in Section 3. The solution approach description is given in Section 4, while the generation of data instances and computational results are presented in Section 5. In Section 6 some concluding remarks are offered.

@&#LITERATURE REVIEW@&#

The first efforts of LRP studies date back to 1970s and early 1980s. One of the first authors to analyze a LRP was Watson-Gandy and Dohrn in 1973 (Min, Jayaraman, & Srivastava, 1998), and ever since, several efforts have been done in this field. For detailed information about development, classification and applications for the LRP see Nagy and Salhi (2007) and Min et al. (1998).

In recent years, the emphasis in LRP studies has been in the design and implementation of metaheuristic, such as Tabu Search (TS) (Albareda-Sambola, Díaz, & Fernández, 2001, 2005; Caballero, González, Guerrero, Molina, & Paralera, 2007; Lin & Kwok, 2006; Melechovský, Prins, & Wolfler Calvo, 2005; Tunzun & Burke, 1999; Wang, Sun, & Fang, 2005), Simulated Annealing (Wu, Low, & Bai, 2002), Particle Swarm Optimization (PSO) (Peng & Bai, 2006), clustering analysis (Barreto, Ferreira, Paixão, & Sousa Santos, 2007), multiple ant colony optimization algorithm (MACO) (Ting & Chen, 2013), variable neighborhood search (VNS) (Jarboui, Derbel, Hanafi, & Mladenović, 2013), and some hybrids metaheuristics, such as an hybrid PSO with Path Relinking (Marinakis & Marinaki, 2008), an algorithm combining Simulated Annealing with an Ant Colony System (Bouhafs, Hajjam, & Koukam, 2006), a GRASP algorithm complemented by Path Relinking (Prins et al., 2006) and a heuristic including Lagrangian relaxation and granular TS (Prins, Prodhon, Ruiz, Soriano, & Wolfler Calvo, 2007). Even though there exists several studies in the LRP field, most of them are focused on the single stage single objective LRP.

Related to multiple stages LRP studies, only few works are found: Ambrosino & Scutellà, 2005; Boccia, Crainic, Sforza, & Sterle, 2010; Contardo, Hemmelmayr, & Crainic, 2012; Lashine, Fattouh, & Issa, 2006. Ambrosino and Scutellà (2005) designed a model for a four layer LRP. Obtaining optimum solution for one instance, after a limit processing time of 25hours for small instances and some days for large instances. Lashine et al. (2006) presented a model for a two stage LRP. The authors solved the model with a Lagrangian relaxation in the demands constraints, divided the problem into a location/allocation module and a routing module, obtaining good results for small instances but with computational time growing rapidly. Boccia et al. (2010) proposed a TS for solving a two echelon LRP, they decomposed the problem in four subproblems, one capacitated FLP and one multi-depot VRP for each echelon. Subproblems are solved sequentially and iteratively and then combined to generate a global solution. For comparison purposes, they considered for small instances, mathematical model results (within 2hours limit) and for medium and large instances, a decomposition approach, sequentially solving a two echelon FLP and two MDVRP (one for each echelon), they could only obtained exact results for 19 out of 63 small instances. Contardo et al. (2012) considered a two-echelon capacitated LRP, they obtained lower bounds for the problem with the design and implementation of a two-index vehicle-flow formulation and several families of valid inequalities embedded into a branch-and-cut (B&C) solver. They also proposed an adaptive large neighborhood search (ALNS) capable of obtaining good upper bounds for the problem. The ALNS outperfomed previous heuristics for the two echelon capacitated VRP (single-sourcing). Lower bounds obtained with B&C lie no further than 2.77% on average below the best solution found by the ALNS which, according to Contardo et al. (2012) validates the robustness of both approaches.

Within the literature reviewed only two works that considered a multiple objective approach for the single stage LRP were found. One considered multiple objectives in a global problem (Caballero et al., 2007), while the other only in some sections of the problem (Lin & Kwok, 2006). And one work considering multiples objective in a multiples stage LRP Samanlioglu (2013).

Based on TS, Caballero et al. (2007) designed a multiobjective metaheuristic using an adaptative memory procedure (MOAMP) for the resolution of multiobjective combinatorial problems (MOCO). The authors analized the problem of determining the location of two incineration plants to dispose of solid animal waste, and to design routes to serve clients in the region of Andalusia, contrasting economic and social objectives.

On the other hand, Lin and Kwok (2006), considered the objective of minimizing total cost with a workload balance criteria in a single stage capacitated LRP. The authors applied TS and simulated annealing on real data and simulated data, while using two versions for the solution algorithm about the way routes are assignment to vehicles.

Lately, Samanlioglu (2013) proposed a mathematical model for a three objective (one economic and two social criteria) two stage LRP, for an industrial hazardous waste management system in a region of Turkey. They used a lexicographic weighted Tchebycheff formulation to obtain 16 different representative Pareto optimal solutions.

After an extensive literature review, no publications that consider multiple objective approaches for a TLRP, as the one proposed here, were found. Considering this situation, we proposed a mathematical model and a new representation for the problem, based on priorities, implemented in two solution algorithms based on metaheuristic approaches, in order to obtain good solutions for the multiobjective TLRP.

The TLRP considers a set of clients with known demands. The client’s product demands must be supplied from a set of plants. Each client i has a known demand hi
                      and each plant k can supply a maximum of ak
                      units of product. In addition, plants cannot deliver products directly to clients, motivating that, CDCs, operating as intermediate points, are required, to receive products from plants and to distribute products to clients. This is a classic situation for city logistics problems, where large vehicles, that transport final goods from plants, are not able to reach clients located in the cities. Instead, vehicles arrive and unload their products in a CDC, usually located in cities periphery or some accessible places inside the city.

Potential CDC sites correspond to places where there is a CDC facility or a place where a CDC can be built. Each CDC j has an associated fixed opening/operating cost gj
                      and a limited operative capacity bj
                     . Also, in general, not all the potential sites are required as CDC in order to be able to operate. Fig. 1
                      displays an example of a solution to the problem.

The problem can be seen as two distribution stages linked through a FLP. The first stage, also called transportation stage of the TLRP, corresponds to the distribution of products from the plants to the open distribution centers. The second stage, the routing stage, is the one that comprises of the distribution of products from the distribution centers to clients. Each stage has its own characteristics which are presented next.

First stage characteristics:
                        
                           –
                           There are p plants to process the products.

Only one type of product is considered.

Each plant k can supply a maximum of ak
                               units of product

There exists a set of m potential sites in which CDCs may be located. Each potential site has associated a capacity bj
                               expressed in units of product, and a fixed cost, gj
                              , for opening and operating a CDC in that location.

The finished goods must be transported from the plants to a set of open CDCs. The transportation in this stage is performed by trucks. Each truck has a capacity R, expressed in product units, and a cost dkj
                              , associated with the transportation of product from plant k to CDC j.

Second stage characteristics:
                        
                           –
                           There is a set of n clients, and each client i has a demand hi
                               of product units.

From each CDC in operation, products are sent by vehicles to clients, in order to fulfill their demands. The delivery is performed by routes. Vehicles must leave a CDC, visit the clients on its route, and return to its departing CDC.

Each vehicle has a limited load of Q units of product.

There exists a cost cij
                               and a travel time τij
                               which are related to the distances between CDC and client, or between client and client.

The travel distance of each route cannot exceed a fixed value T.

Two objectives are considered in this research: the minimization of the economic costs and the generation of a well balance set of routes. The economic costs include transportation costs from plants to CDCs and from them to clients, and fixed and operational costs for open CDCs. The balance is defined in relation to the traveled distance.

We proposed the following mathematical model for our bi-objective TLRP.


                     Sets and parameters.
                     
                        
                           
                              
                              
                              
                                 
                                    
                                       p
                                    
                                    Number of plants
                                 
                                 
                                    
                                       m
                                    
                                    Number of potential sites for CDC location
                                 
                                 
                                    
                                       n
                                    
                                    Number of clients.
                                 
                                 
                                    
                                       K
                                       ={1,2,…,
                                       p}
                                    Set of indexes for plants
                                 
                                 
                                    
                                       J
                                       ={1,2,…,
                                       m}
                                    Set of indexes for CDCs
                                 
                                 
                                    
                                       I
                                       ={m
                                       +1,
                                       m
                                       +2,…,
                                       m
                                       +
                                       n}
                                    Set of indexes for clients
                                 
                                 
                                    
                                       ak
                                       
                                    
                                    Production capacity in plant k
                                    
                                 
                                 
                                    
                                       dkj
                                       
                                    
                                    Cost of sending one truck from plant k to CDC j
                                    
                                 
                                 
                                    
                                       R
                                    
                                    Truck capacity, plants-CDCs transportation stage
                                 
                                 
                                    
                                       gj
                                       
                                    
                                    Fixed cost for opening and operate CDC j
                                    
                                 
                                 
                                    
                                       bj
                                       
                                    
                                    CDC j capacity
                                 
                                 
                                    
                                       hi
                                       
                                    
                                    Demand of client i
                                    
                                 
                                 
                                    
                                       cij
                                       
                                    
                                    Cost of visiting client/CDC j right after client/CDC i in the route stage
                                 
                                 
                                    
                                       Q
                                    
                                    Vehicles capacity on the route stage
                                 
                                 
                                    
                                       τij
                                       
                                    
                                    Traveling distance from client/CDC i to client/CDC j
                                    
                                 
                                 
                                    
                                       T
                                    
                                    Maximum possible total traveling distance of a vehicle in the route stage
                                 
                                 
                                    
                                       
                                    
                                 
                                 
                                    
                                       Variables
                                    
                                 
                                 
                                    
                                       vkj
                                       
                                    
                                    Amount of product sent from plant k to CDC j
                                    
                                 
                                 
                                    
                                       wkj
                                       
                                    
                                    Number of trucks sent from plant k to CDC j
                                    
                                 
                                 
                                    
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   y
                                                
                                                
                                                   j
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               ,
                                                            
                                                            
                                                               if CDC
                                                               
                                                               j
                                                               
                                                               is open
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                               ,
                                                            
                                                            
                                                               otherwise
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   z
                                                
                                                
                                                   ij
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               ,
                                                            
                                                            
                                                               if client
                                                               
                                                               i
                                                               
                                                               is assigned to CDC
                                                               
                                                               j
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                               ,
                                                            
                                                            
                                                               otherwise
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   0
                                                   i
                                                
                                                
                                                   (
                                                   j
                                                   )
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               ,
                                                            
                                                            
                                                               if client
                                                               
                                                               i
                                                               
                                                               is the first client in any route of CDC
                                                               
                                                               j
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                               ,
                                                            
                                                            
                                                               otherwise
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                   0
                                                
                                                
                                                   (
                                                   j
                                                   )
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               ,
                                                            
                                                            
                                                               if client
                                                               
                                                               i
                                                               
                                                               is the last client in any route of CDC
                                                               
                                                               j
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                               ,
                                                            
                                                            
                                                               otherwise
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   il
                                                
                                                
                                                   (
                                                   j
                                                   )
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               ,
                                                            
                                                            
                                                               if client
                                                               
                                                               l
                                                               
                                                               is visited just after client
                                                               
                                                               i
                                                               
                                                               in any route of CDC
                                                               
                                                               j
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                               ,
                                                            
                                                            
                                                               otherwise
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                    
                                 
                                 
                                    
                                       ui
                                       
                                    
                                    Variables used to prevent exceeding the vehicles capacity and for sub-tour elimination. It represents the load of the vehicle after visiting client i
                                    
                                 
                                 
                                    
                                       ei
                                       
                                    
                                    Variables to prevent exceeding the maximum distance constraint. It represents the distance traveled by the vehicle after visiting client i
                                    
                                 
                                 
                                    
                                       L
                                       min
                                    
                                    Length of the shortest route
                                 
                                 
                                    
                                       L
                                       max
                                    
                                    Length of the longest route
                                 
                              
                           
                        
                     
                  

Objective Functions:
                        
                           1.
                           Economic objective


                     
                        
                           2.
                           Route balance objective.

Constraints:
                        
                           (1)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    v
                                 
                                 
                                    kj
                                 
                              
                              ⩽
                              
                                 
                                    a
                                 
                                 
                                    k
                                 
                              
                              
                              ∀
                              
                              k
                              ∈
                              K
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    w
                                 
                                 
                                    kj
                                 
                              
                              ⩾
                              
                                 
                                    
                                       
                                          v
                                       
                                       
                                          kj
                                       
                                    
                                 
                                 
                                    R
                                 
                              
                              
                              ∀
                              
                              k
                              ∈
                              K
                              ,
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    v
                                 
                                 
                                    kj
                                 
                              
                              ⩽
                              
                                 
                                    b
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    v
                                 
                                 
                                    kj
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       i
                                       ∈
                                       I
                                    
                                 
                              
                              
                                 
                                    h
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    ij
                                 
                              
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    ij
                                 
                              
                              =
                              1
                              
                              ∀
                              
                              i
                              ∈
                              I
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       i
                                       ∈
                                       I
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    0
                                    i
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       i
                                       ∈
                                       I
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    0
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (7.1)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             
                                                ∀
                                                i
                                                ∈
                                                I
                                                ∪
                                                {
                                                0
                                                }
                                             
                                             
                                                i
                                                ≠
                                                l
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    il
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              =
                              
                                 
                                    z
                                 
                                 
                                    lj
                                 
                              
                              
                              ∀
                              
                              l
                              ∈
                              I
                              ,
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (7.2)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             
                                                ∀
                                                l
                                                ∈
                                                I
                                                ∪
                                                {
                                                0
                                                }
                                             
                                             
                                                l
                                                ≠
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    il
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              =
                              
                                 
                                    z
                                 
                                 
                                    ij
                                 
                              
                              
                              ∀
                              
                              i
                              ∈
                              I
                              ,
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (8.1)
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    u
                                 
                                 
                                    l
                                 
                              
                              +
                              Q
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    il
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              ⩽
                              Q
                              -
                              
                                 
                                    h
                                 
                                 
                                    l
                                 
                              
                              
                              ∀
                              
                              i
                              ,
                              l
                              ∈
                              I
                              ,
                              i
                              ≠
                              l
                           
                        
                     
                     
                        
                           (8.2)
                           
                              
                                 
                                    h
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              Q
                              
                              ∀
                              
                              i
                              ∈
                              I
                           
                        
                     
                     
                        
                           (9.1)
                           
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    e
                                 
                                 
                                    l
                                 
                              
                              +
                              (
                              T
                              +
                              
                                 
                                    τ
                                 
                                 
                                    il
                                 
                              
                              )
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    il
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              +
                              (
                              T
                              -
                              
                                 
                                    τ
                                 
                                 
                                    li
                                 
                              
                              )
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    li
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              ⩽
                              T
                              
                              ∀
                              
                              i
                              ,
                              l
                              ∈
                              I
                              ,
                              i
                              ≠
                              l
                           
                        
                     
                     
                        
                           (9.2)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    τ
                                 
                                 
                                    ji
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    0
                                    i
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              ⩽
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              T
                              +
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              (
                              
                                 
                                    τ
                                 
                                 
                                    ji
                                 
                              
                              -
                              T
                              )
                              
                                 
                                    x
                                 
                                 
                                    0
                                    i
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              
                              ∀
                              
                              i
                              ∈
                              I
                           
                        
                     
                     
                        
                           (9.3)
                           
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              T
                              -
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    τ
                                 
                                 
                                    ij
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    0
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              
                              ∀
                              
                              i
                              ∈
                              I
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    L
                                 
                                 
                                    max
                                 
                              
                              ⩾
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              +
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    τ
                                 
                                 
                                    ij
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    0
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              
                              ∀
                              
                              i
                              ∈
                              I
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    L
                                 
                                 
                                    min
                                 
                              
                              ⩽
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              +
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       ∀
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              (
                              
                                 
                                    τ
                                 
                                 
                                    ij
                                 
                              
                              -
                              T
                              )
                              
                                 
                                    x
                                 
                                 
                                    i
                                    0
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              +
                              T
                              
                              ∀
                              
                              i
                              ∈
                              I
                           
                        
                     
                     
                        
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              0
                              ;
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              0
                              
                              ∀
                              
                              i
                              ∈
                              I
                           
                        
                     
                     
                        
                           
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    z
                                 
                                 
                                    ij
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ;
                              
                                 
                                    x
                                 
                                 
                                    0
                                    i
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ;
                              
                                 
                                    x
                                 
                                 
                                    i
                                    0
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              
                              ∀
                              
                              i
                              ∈
                              I
                              ,
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           
                              
                                 
                                    v
                                 
                                 
                                    kj
                                 
                              
                              ⩾
                              0
                              ;
                              
                                 
                                    w
                                 
                                 
                                    kj
                                 
                              
                              ∈
                              
                                 
                                    Z
                                 
                                 
                                    +
                                 
                              
                              
                              ∀
                              
                              k
                              ∈
                              K
                              ,
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           
                              
                                 
                                    x
                                 
                                 
                                    il
                                 
                                 
                                    (
                                    j
                                    )
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              
                              ∀
                              
                              i
                              ,
                              l
                              ∈
                              I
                              ,
                              i
                              ≠
                              l
                              ,
                              
                              ∀
                              
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           
                              
                                 
                                    L
                                 
                                 
                                    max
                                 
                              
                              ⩾
                              0
                              ;
                              
                              
                                 
                                    L
                                 
                                 
                                    min
                                 
                              
                              ⩾
                              0
                           
                        
                     Constraints (1) ensure not to exceed plants capacity. Set of constraints (2) links the amount of products sent from each plant to each CDC with the capacity of the trucks. The amount of products sent to each CDC must not exceed its capacity (3), and if yj
                     
                     =0 no product is sent to CDC j. The amount of product sent to each CDC must be the same as the sum of the demands of all the clients assigned to each CDC (4). Constraints (5) ensure that each client is assigned to a single CDC.

The number of vehicles that leave a CDC must be equal to the number of vehicles returning to that CDC (6).

Constraint sets (7.1) and (7.2) impose, first, that each client must be visited immediately after exactly one CDC or after another client, and that exactly one client or CDC must be visited immediately after, respectively. Second, these constraints enable the construction of routes only between clients assigned to the same CDC.

In order to prevent exceeding vehicle capacities and avoid the generation of sub-tours, constraint sets (8.1) and (8.2) are included. These constraints follow the same idea of those obtained from the classical sub-tour elimination constraints of the Travelling Salesman Problem (Miller, Tucker, & Zemlin, 1960). They promote the formation of open paths with clients from which the sum of demands is not higher than Q.

Inclusion of constraints (9.1)–(9.3) it is necessary to ensure variable ei
                      to take the actual value of the distance traveled by the vehicle after visiting client i. These constraints are required to determine the value of objective function f
                     2. In constraint set (9.1) the variable el
                      represents the length of the route until client l. Constraint set (9.2) forces variable ei
                      to take the value of τji
                      when client i is the first in a route of CDC j, while constraint set (9.3) prevents exceeding the maximum length limit T.

Constraints (10) are required to determine the longest route in the route stage. When client i is the last in a route of CDC j, variable 
                        
                           
                              
                                 x
                              
                              
                                 i
                                 0
                              
                              
                                 (
                                 j
                                 )
                              
                           
                        
                      takes the value of 1. For other clients in the same route, the values of 
                        
                           
                              
                                 e
                              
                              
                                 i
                              
                           
                           +
                           
                              
                                 ∑
                              
                              
                                 ∀
                                 j
                                 ∈
                                 J
                              
                           
                           
                              
                                 τ
                              
                              
                                 ij
                              
                           
                           
                              
                                 x
                              
                              
                                 i
                                 0
                              
                              
                                 (
                                 j
                                 )
                              
                           
                        
                      will be always lower than the one for the last client. Given this, the longest route will be the one with the greatest value of ei
                     
                     +
                     τij
                     .

Constraints (11) are required to determine the shortest route in the routing stage. When client i is not the last in a route, the variables 
                        
                           
                              
                                 x
                              
                              
                                 i
                                 0
                              
                              
                                 (
                                 j
                                 )
                              
                           
                        
                      are always zero, as a result the expression ei
                     
                     +
                     T is greater than the duration of any route. If client i is the last in a route of CDC j, then 
                        
                           
                              
                                 x
                              
                              
                                 i
                                 0
                              
                              
                                 (
                                 j
                                 )
                              
                           
                           =
                           1
                        
                     , having as a result 
                        
                           
                              
                                 L
                              
                              
                                 min
                              
                           
                           ⩽
                           
                              
                                 e
                              
                              
                                 i
                              
                           
                           +
                           
                              
                                 τ
                              
                              
                                 ij
                              
                           
                        
                     .

Note that, objective that minimizes f
                     2
                     =
                     L
                     max
                     −
                     L
                     min forces L
                     max to take the lower possible value (duration of the longest route) and L
                     min takes greatest possible value (duration of the shortest route).

Constraints (12) define the type of variables used.

The model was validated as described in Section 5. We observed that even for the smallest instances, the solver consumes a lot of time. Therefore, in order to solve the problem we designed two heuristic procedures that are explained next.

We have designed two solution algorithms, one based on the Scatter Tabu Search Procedure for Non-Linear Multiobjective Optimization (SSPMO) (Molina, Laguna, Martí, & Caballero, 2007) and the other based on the Non-dominated Sorting Genetic Algorithm II (NSGA-II) (Deb, Agrawal, Pratab, & Meyunivan, 2002).

With the purpose of efficiently managing the complexity of the search space, we have introduced a new representation for the problem which will be explained below. Using it, each generated solution will be considered feasible; infeasibility will be managed by introducing a penalty function to be minimized as a third objective (f
                     3).

This representation can be easily implemented on local search or evolutionary methods. Due to every generated solution is treated as feasible, all classical movements used in local search are easily performed, moreover, this simplifies the design of evolutionary operators such as crossover or mutation, whose design and implementation are usually complicated for VRPs.

The representation proposed for this problem consists of the:
                           
                              –
                              Priorities for the plants.

Priorities for the potential CDC locations.

Priorities and CDC assignment for each client.

Priorities are numbers in a range, where the lowest number is highest in priority. These priorities are used in a solution construction. To avoid ties, the range used in each case is fixed as 10 times the number of plants, CDCs or clients as applicable. As a result, priorities for plants are integers in the range [0,10p], priorities for CDCs locations are integers generated in [0,10m], and priorities for clients are integers generated in [0,10n]. Clients are assigned to CDCs randomly in the integers’ range [1,
                        m] which determines the set of open CDCs. This assignment varies along the procedure. When the sum of the demands of clients assigned to a CDC exceeds its capacity (infeasible solution), the value of difference between these two is added to the third objective (penalty function).

Then, the construction of routes for each open CDC, with all clients assigned to it, is performed by following the priority order of clients without exceeding the capacity of the vehicles and length of the tour constraints. Also, the amount of products/trucks to be sent from plants to satisfy the demand of product of each CDC (computed using the assignment of clients to CDC) is determined by considering priorities of CDCs and plants. Plants in higher priorities serve CDCs in higher priorities, in a sequential scheme. Jumps in the priority order are only allowed when trying to serve a CDC with fewer trucks, if it is possible.

With this representation, every solution generated is treated as feasible (although adding a penalty to be minimized, to non-feasible solutions), which makes it suitable for being used in local search methods. Neighborhoods are generated by changing the value of some elements priorities, or by changing assignments of clients to CDCs without the need of performing specialized vehicle routing problem movements or further complicated analysis.

This representation can be easily implemented in evolutionary methods. Given that any combination of two solutions is feasible, it does not require any specific recombination or mutation operators.

Because of its easiness to generate seeds, this representation for the TLRP was used as the foundation of the constructive algorithm for initial solutions in both methods, the one following the strategy of SSPMO (based on local searches) and the one based in NSGA-II (with an evolutionary approach).

The SSPMO strategy was proposed by Molina et al. (2007) as a solution method for solving non-linear multiobjective problems. SSPMO consist of a Scatter/Tabu Search hybrid that includes two different phases: 1. Generation of an initial set of efficient points through various TS and 2. Combination of solutions and updating of set of efficient points via a Scatter Search (SS) (Molina et al., 2007). Basically, it is a SS for multiobjective problems that uses TS as a seeding and solution improvement method. A basic template is presented in Fig. 2
                        .

For the initial solutions population constructive algorithm the priority-based representation, explained before, was used. Fig. 3
                            presents a pseudo-code of the constructive algorithm, considering the sets, parameters and variables as defined in Section 3.

For illustrative purposes, let us consider the following example. Tables in Fig. 4
                            contain data corresponding to plants, CDCs capacities and clients’ demands. The example consists of 3 plants, 4 potential locations for CDC and 12 clients. The vehicle capacity is taken equal to 200 units.

Considering the defined ranges for priorities’ generation, the following ranges are obtained: [0,30] for the plants, [0,40] for CDC locations and [0,120] for clients. Assignments of clients to CDCs are in the range [1,4]. Within these ranges, random priority values were generated (Fig. 5
                           ).

With these values, the second stage of the problem was constructed. For instance, in Fig. 6
                           , second stage results for CDCs 1 and 2, are presented.

First, clients assigned to CDC 1 were ordered according to priorities and are served from this CDC using this order. When the current vehicle is full, a new vehicle is required. The clients assigned to this CDC determine its total demand (290 units), that could exceed its total capacity (557 in this case). The excess of demand is added to a penalization function to be minimized together with the other objective functions, as previously mentioned. The same process is followed to construct routes for the rest of the CDCs. Note that, in CDC 3 the aggregated demand of its clients is higher than its capacity and it generates a penalty, as can be seen in Fig. 7
                           .

In the first stage, priorities on plants are used to serve CDCs, according to the CDCs’ demands and priorities. First, the open CDC with highest priority is selected. In this example CDC 4, with a required demand of 124 units, has the highest priority. Following plants priorities, CDC 4 is served by the higher priority plant with available capacity to supply its complete demand. In this case, plant 2 has the highest priority and enough capacity, which means that plant 2, serves CDC 4. A supply of 332 units remains in plant 2. Because the whole demand of product for CDC 4 has been satisfied, the next in priority open CDC is selected (this is CDC 2, with a required demand of 210 units). Plant 2 is still able to supply the whole demand of CDC 2, and as a consequence, CDC 2 is served from Plant 2 who now has a remaining supply of 122. Next in priority, and still open, is CDC 3, with a demand of 287 units. Because it exceeds plant 2 remaining supply, following priority order, a plant with enough capacity to fulfill CDC 3 demand is selected. Plant 1, which is the next in priority, has not enough capacity (228 units) to serve CDC 3 products’ requirement; because of this, Plant 3 (with a capacity of 684) is selected. Plant 3 remaining supply is 397 units after serving CDC 3. The last in priority CDC 1, with a demand of 290 units, is open. Plant 3 serves CDC 1 because it is the plant with higher priority and has enough products to meet CDC 1 demand and neither plant 2 nor plant 1 have enough supply to serve CDC 1. Now, the first problem stage is completed. Fig. 8
                            summarizes this process:

This procedure results in the construction of a first solution for the problem, which will be used as an initial solution in the process of generating the first approximation of the efficient solution set.

In order to obtain a first approximation of 
                              
                                 
                                    
                                       E
                                    
                                    
                                       ^
                                    
                                 
                              
                           , four linked Tabu Searches are performed. First, a TS is performed considering only the economic objective. Then, taking as initial solution the best solution found for the economic cost, a TS is performed to improve the route balance objective. With this last TS best solution found, a TS is carried out to reduce the penalty due to infeasibility. Once this TS has ended, the best solution found is taken as input for another TS, performed to improve the economic objective again. At this point, three solutions that approximate the best solutions to the single objective problems are obtained as well as some other estimated efficient solutions found during the multiple searches.

Then, several Tabu Searches were launched, using a global criterion method with the goal of minimizing a function that measures the distance to the ideal point, using the L∞
                            metric:
                              
                                 
                                    
                                       
                                          L
                                       
                                       
                                          ∞
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    
                                       
                                          
                                             Max
                                          
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             3
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   fi
                                                
                                             
                                             
                                                
                                                   fi
                                                   (
                                                   x
                                                   )
                                                   -
                                                   
                                                      
                                                         fi
                                                      
                                                      
                                                         min
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         fi
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         fi
                                                      
                                                      
                                                         min
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

The ideal point f
                           min is composed with the best values for each objective. Similarly, the anti-ideal point f
                           max is composed with the worst values for each objective. These two values are approximated with the minimum and maximum values obtained in the previous step, respectively. Also, a randomly generated set of weights wfi
                            (i
                           =1,2,3) is considered in each search.

The neighborhoods in the TS procedures are generated using the following movements in the order presented, the maximum amount of neighborhoods generated for each type of movement is included in parenthesis.
                              
                                 (a)
                                 Reassign to a randomly selected CDC, a randomly selected customer (n).

Reassign to randomly selected CDCs, two randomly selected customers (2n).

Change a client’s priority order, equivalent to changing a client’s position in routing stage (n).

Change the priority order of two clients, equivalent to change the position of two clients in routing stage (2n).

Change the priority order of a random number of clients (max. 5), equivalent to change the position of a maximum of 5 clients in the routing stage (2n).

Change the priority order of a CDC (m).

Reassign all clients to different CDCs (m).

Change the priority order of plants (p).

In the local searches, a first improvement criterion was considered, having in mind that every local search has its own and different objective function, for solutions’ evaluation purposes. The current solution is updated with the first neighbor that improves the objective value (first improvement local search), or, alternatively, with the best non-improving neighbor. The displaced solution becomes tabu active for TabuTenure iterations. Every time an improving neighbor is found, local search set restarts from movement (a)

TabuTenure: Fixed tabu tenure is considered throughout the duration of the algorithm. A visited point is considered tabu for 50 iterations, as used in the original algorithm and recommended by authors of SSPMO.

Aspiration criteria: There is no aspiration criterion. In SSPMO, the tabu attributes are both the objective functions in the problem and the L
                           ∞ compromise functions. Therefore, if there is an improvement in any of the currently-known best solutions, this point cannot be tabu.

The reference set (RefSet) was formed with the best solution in 
                              
                                 
                                    
                                       E
                                    
                                    
                                       ^
                                    
                                 
                              
                            for each objective (3 solutions) plus b
                           −3 more solutions (considering Molina et al. (2007) suggestions, a value of b
                           =5 was used) in 
                              
                                 
                                    
                                       E
                                    
                                    
                                       ^
                                    
                                 
                              
                            RefSet, specifically those that maximize the distance between them and those solutions already in RefSet. The inclusion of solutions to the RefSet is done sequentially, and every time that RefSet is updated the distance measure is updated as well. The distance measure is a normalized L
                           ∞ metric:
                              
                                 
                                    
                                       
                                          L
                                       
                                       
                                          ∞
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    
                                       
                                          
                                             Max
                                          
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             3
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   fi
                                                
                                             
                                             
                                                
                                                   fi
                                                   (
                                                   x
                                                   )
                                                   -
                                                   fi
                                                   (
                                                   RefSetpoint
                                                   )
                                                
                                                
                                                   
                                                      
                                                         fi
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         fi
                                                      
                                                      
                                                         min
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

In this step, a list of solutions that has been included in RefSet was kept to prevent the selection of those solutions in further iterations, this list is called TabuRefSet.

In the method for combining solutions, new trial solutions were created from each pair of solutions in reference set. Each new solution was formed by the random combination of characteristics from both reference solutions. These characteristics are: plants priority order, potential CDC sites, priority order, clients’ priority order, and the assignment of clients to potential CDC site.

Each new trial solution was improved with TS. Here, the objective function evaluated in the search for an improved solution is the L∞
                            metric, with wf
                           
                           1
                           =
                           wf
                           
                           2
                           =
                           wf
                           
                           3
                           =1. 
                              
                                 
                                    
                                       f
                                    
                                    
                                       1
                                    
                                    
                                       min
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       f
                                    
                                    
                                       2
                                    
                                    
                                       min
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       f
                                    
                                    
                                       3
                                    
                                    
                                       min
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       f
                                    
                                    
                                       1
                                    
                                    
                                       max
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       f
                                    
                                    
                                       2
                                    
                                    
                                       max
                                    
                                 
                              
                           , and 
                              
                                 
                                    
                                       f
                                    
                                    
                                       3
                                    
                                    
                                       max
                                    
                                 
                              
                            values are calculated considering only the values of the reference points whose combination resulted in the trial point that is being improved. The value of the weights (wf
                           
                           1, wf
                           
                           2, wf
                           
                           3) is justified because it makes the search focus on the compromise area that is wanted to be explored.

The procedure evaluates the possibility to include in 
                              
                                 
                                    
                                       E
                                    
                                    
                                       ^
                                    
                                 
                              
                            every solution generated during the improvement phase, and the required updates to 
                              
                                 
                                    
                                       E
                                    
                                    
                                       ^
                                    
                                 
                              
                            are performed.

In order to update RefSet, when all pairs of solutions in RefSet have been combined, the best solutions of each objective are selected (three solutions). For the remaining b
                           −3 solutions the procedure is as follows:

For each solution 
                              
                                 x
                                 ∈
                                 
                                    
                                       E
                                    
                                    
                                       ^
                                    
                                 
                                 ⧹
                                 TabuRefSet
                              
                            a normalized L∞
                            distance is calculated. Doing so, all distances are values between 0 and 1. The value of minimum normalized distance 
                              
                                 
                                    
                                       L
                                    
                                    
                                       ∞
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 x
                                 )
                              
                            is obtained and it is used as the probability that x is declared as eligible as a reference solution. Then, a random number is generated and if it is less than value 
                              
                                 
                                    
                                       L
                                    
                                    
                                       ∞
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 x
                                 )
                              
                           , then x is included in the RefSet. Therefore, the larger the minimum distance between candidate solution x and solutions in TabuRefSet is, the better the chance for x for being eligible as a reference solution.

The mean value of 
                              
                                 
                                    
                                       L
                                    
                                    
                                       ∞
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 x
                                 )
                              
                            (MVL) for eligible solutions is computed, and if it is less than MeanDist (a parameter defined a priori) the procedure stops and the current 
                              
                                 
                                    
                                       E
                                    
                                    
                                       ^
                                    
                                 
                              
                            is the final output.

If MVL>MeanDist, b
                           −3 solutions with the largest minimum distance to TabuRefSet are sequentially selected from the eligible solutions. At this point, the distance to TabuRefSet is a concern, and not the one to RefSet, since the idea is to move away from areas that have been explored in the past, preventing combinations between solutions close to former reference points. Every solution included in RefSet is also included in TabuRefSet and the distance measure to TabuRefSet is updated after each selection.

The NSGA-II strategy was proposed by Deb et al. (2002), and it is basically a genetic algorithm with special characteristics in the selection phase. In NSGA-II, prior selection, every solution is Pareto ranked by a fast sorting procedure. In addition, a crowding distance value, based on a density estimator, is obtained for each of them. Then, selection is performed using the value of the Pareto ranking and using the crowding distance to discriminate within a rank. A basic template for the NSGA-II is presented in Fig. 9
                        , for more information see Deb et al. (2002).

Several modifications to the basic NSGA-II algorithm were considered, as attempts to reduce the typical intrinsic randomness of genetic methods, and to offer a fair comparison between the two solution algorithms here are proposed.

As in the solution algorithm based in SSPMO, the priorities-based representation was used here for solution construction, following the procedure presented in Fig. 3.

Instead of the classic mutation operator in NSGA-II, a TS procedure with short term memory was implemented. Neighborhoods were generated by a set of changes in the assignment of clients to CDCs and a set of changes in the priority orders of clients, CDCs and plants, as described in Section 4.2.2.

The crossover operator used, is just like the method for combining solutions described in Section 4.2.4 for the algorithm based in SSPMO.

The stopping criterion considered is a fixed number of iterations without changes in the efficient frontier estimation.

Main SSPMO’s and NSGA-II’s parameters were set to match the values recommended by their authors. The remaining parameters were set by experimentation.

To the best of our knowledge, there are no available benchmark instances to test our model. For this reason, an instance generator was built using ideas from Albareda-Sambola et al. (2001) and Tunzun and Burke (1999).

The generated instances were named “sp_tlhn”. First two characters “sp” denotes the dimension of the instance. We considered the generation of small instances S1 (3, 4, 12) which corresponds to 3 plants, 4 potential sites for CDCs and 12 clients; medium size instances, M1 (3, 5, 30); and big instances G1 (5, 10, 50).

The next three “_tl” characters identify a particular configuration of the location set for plants, potential CDCs and clients. Thus _l1 corresponds to a first configuration, _l2 to a second one, and _l3 to the third location set configuration. Locations of plants, potential CDCs and clients were randomly generated in a 1000×1000 matrix; and the ceiling of the Euclidean distances were taken as travel costs. This included the cost of sending one truck from plant k to CDC j, dkj
                         and the cost for visiting client j right after client i in the route stage, cij
                         considering τij
                        
                        =
                        cij
                        .

Characters “hn” are related to demand values. Three different sets of demand values d1, d2, and d3 were considered for each location set configuration. A demand for each client, hi
                        , was generated from a uniform distribution [100,1000].

Additionally, to generate assorted instances, for each size-location configuration-demand set instance, variations for several of the TLRP parameters were considered. In particular, variations were considered in the following parameters:

Trucks capacity (R): The size of the truck was determined using the aggregated demand, assuring that more than one truck was required for at least one plant. Having w as the number of trucks wanted in the first stage, the aggregated demand was multiplied by the relation [1/w]. w was considered to be the quantity of plants plus one or plus two.

CDC j capacity (bj
                        ): It represents the ratio between the aggregated demand and the capacity of all the potential CDCs. Two values were considered, 1.5 and 3. Plants capacities were determined the same way, considering a single value of 1.5.

Vehicles capacity (Q): The capacity was obtained as a proportion of the capacity of the trucks in the plants-CDCs stage. Two parameters were considered, 0.75 and 0.85.

Maximum total traveling distance in route stage (T): This parameter value was obtained as a function of the further distance between a client and a CDC (dm). T takes values of 2.5
                        dm or 4
                        dm.

This resulted in a set of 16 instances variations for each size-location configuration-demand set instance. Giving a total of 144 instances for S1 and M1, and a total of 48 instances for G1 (only _l1 location configuration was considered for instances G1). Instances are available for download from http://dl.dropboxusercontent.com/u/69530482/Instancias.zip.

To find the exact efficient frontier, firstly we calculated the optimal solutions to the mono objective versions of the model (1)–(6), (7.1), (7.2), (8.1), (8.2), (9.1)–(9.3), (10)–(12) considering each objective separately. The remaining points in the efficient frontier were obtained by applying the weighted sum method to the multiobjective model (1)–(6), (7.1), (7.2), (8.1), (8.2), (9.1)–(9.3), (10)–(12). Both objectives were normalized using the information obtained when each objective was solved separately, and aggregated into a single objective function

min f
                        3
                        =
                        λf
                        1
                        +(1−
                        λ)f
                        2. Parameter λ varies with step of 0.05.

It is well known that the weighted sum method is not capable of finding non-supported points (Steuer, 1986). To overcome this problem, the epsilon constraint method was additionally applied to each instance, defining the balancing objective (f
                        2) as a constraint for the model. To start this procedure, f
                        2 is bounded with the maximum value found for it (f
                        2
                        ⩽max
                        f
                        2). The max
                        f
                        2 value is obtained from the weighted sum method to ensure the solution is efficient. Once a solution with that constraint is found, a new bound (f
                        2
                        −
                        ε) is applied, with ε
                        =1. This procedure continues until the minimum value for f
                        2 is reached.

The exact efficient frontiers for set of instances S1 were obtained and are available on request. Due to excessive computational time, no exact efficient frontiers for instances M1 or G1 are considered in the experimental results.

For experimental results evaluation purposes, when we make reference to SSPMO or NSGA-II we are referring to our implementations for these algorithms. A single run was implemented for each algorithm.

In order to compare the efficiency of the solution approaches proposed in this paper, we applied five performance measures: quantity of non-dominated points, computational time, size of the space covered (SSC), distance to the kth nearest efficient point (k-distance) and coverage of two sets measure (C(X′,X″)) (Zitzler & Thiele, 1999; Zitzler, Laumanns, & Thiele, 2001).

The quantity of non-dominated points’ measures is the ability of each method to find efficient points. Table 1
                         summarizes results for small instances S1, including the exact frontier obtained as explained in Section 5.2. In addition, computational time spent on finding an efficient frontier for each method is presented. For illustrative purposes, small instances S1 were grouped in 9 groups of 16 instances each. As can be seen, algorithm based in SSPMO (SSPMO) was better than the one based in NSGA-II (NSGA-II) for finding non-dominated solutions, and had worst computational time. Also, the reduction of time when applying SSPMO or NSGA-II was significant, when comparing with the exact method.


                        Tables 2 and 3
                        
                         presents the quantity of non-dominated points and computational time for instances M1 and G1 respectively. As previously mentioned, these instances were solved using only SSPMO and NSGA-II due to the excessive computational time required for obtained an exact efficient frontier. In both cases, NSGA-II was able to obtain a greater amount of non-dominated points in less computational time. In instances G1 the amount of points obtained was almost twice the amount obtained with SSPMO.

The SSC measures the space covered by the dominated points (Zitzler & Thiele, 1999). The results of the SSC measure, for instances S1 (Table 4
                        ), tell us that SSPMO was able to generate a better coverage than NSGA-II, but this situation changed when the size of the instances increased. Instances M1 (Table 5
                        ) NSGA-II turns out to be better in the SSC measure than SSPMO, and this superiority is more evident in instances G1’s (Table 6
                        ) results.

The k-distance metric was used to estimate the density of points in each efficient frontier, (see Zitzler et al., 2001), and it corresponds to the distance between the kth nearest efficient points. Table 7
                         shows the average k-distance value of all points on the efficient frontiers for each set of instances S1, with k
                        =3. As can be seen in this set of instances, SSPMO gave better results in this measure than NSGA-II. In bigger instances, M1 and G1 (see Tables 8 and 9
                        
                        , respectively) NSGA-II was superior to SSPMO for the average k-distance measure.

The C(X′,
                        X″) measure presented here is an adaptation of the coverage of two sets measure presented by Zitzler and Thiele (1999), where only strict domination is considered. Here, a value of C(X′,
                        X″) equal to 1 means that all points in the estimated efficient frontier X″ are strictly dominated by points in the estimated efficient frontier X′. For instance S1 (Table 10
                        ), SSPMO was able to generate points that dominate almost 39% of the ones generated by NSGA-II. When compared with the exact frontier, SSPMO was able to generate more than 22% equal points, better than the 12% that NSGA-II generated. For sets of instances M1 and G1 (Tables 11 and 12
                        
                        , respectively), the two sets average values were similar. NSGA-II resulted superior dominating more than 36% of the estimated frontier’s points obtained with SSPMO, while SSPMO was superior only in 28.3% of the points obtained with NSGA-II.

@&#CONCLUSIONS@&#

In this work a bi-objective TLRP was addressed. A mathematical model for the bi-objective TLRP and a new representation, based on priorities, for solving the model heuristically were proposed. This representation is able to manage both stages of the problem and their connection, while reducing the computational complexity of a standard representation. Every solution generated is treated as feasible, but penalized if CDC capacity is exceeded. This made viable an easy design and implementation of neighborhoods, and gives it suitability for its implementation on local search methods. Moreover, with this representation, all classical VRP and n-opt movements can be performed. Treating each solution as feasible also simplifies the implementation of combination and mutation operators, because every combination of solution is feasible, and information contained in priorities is intuitive and easy to manage. Therefore, this representation is useful when used in evolutionary methods.

In order to demonstrate these facts, the new representation of the problem was implemented in two heuristic approaches, a local search based method (SSPMO) and an evolutionary method (NSGA-II). The implementation of the priorities-based representation in SSPMO resulted in a competitive algorithm, as can be seen when comparing SSPMO results with the exact solution and NSGA-II. Comparing with the exact approach, SSPMO achieved high quality results while reducing a lot the computational time. By comparing with NSGA-II, SSPMO was the best solution algorithm for small instances, but when the size of the instances increased, NSGA-II offered a better estimation of the efficient frontier.

@&#ACKNOWLEDGEMENTS@&#

The authors wish to express their gratitude to the referees for their valuable and helpful comments, which have improved the quality of the paper. This work was partially supported by the Mexican National Council of Science and Technology (Grant 61903), by Tecnológico de Monterrey Research Fund CAT128, and research projects of the Andalusian Regional Government and the Spanish Ministry of Education and Science. These supports are gratefully acknowledged.

@&#REFERENCES@&#

