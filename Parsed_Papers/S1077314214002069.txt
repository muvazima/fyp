@&#MAIN-TITLE@&#Scene shape estimation from multiple partly cloudy days

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Cloud shadows provide geometric constraints on the shape of an outdoor scene.


                        
                        
                           
                           Video from several partly cloudy days is sufficient to estimate scene geometry.


                        
                        
                           
                           We estimate metric world-point locations for pixels in a calibrated camera.


                        
                        
                           
                           We estimate metric world-point locations for pixels in a calibrated camera network.


                        
                        
                           
                           We can estimate relative 2D world-point locations without any camera calibration.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Shape estimation

Outdoor cameras

Distributed smart cameras

Correspondence estimation

@&#ABSTRACT@&#


               
               
                  Clouds are a cue for estimating weak correspondences in outdoor cameras. These correspondences encode the uncertain spatio-temporal relationships between pixels both within individual cameras and across networks of cameras. Using this generalized notion of correspondence, we present methods for estimating the geometry of an outdoor scene from: (1) a single calibrated camera, (2) a network of calibrated cameras, and (3) a collection of arbitrary, uncalibrated cameras. Our methods do not require camera motion nor overlapping fields of view, and use simple geometric constraints based on appearance changes caused by cloud shadows. We define these geometric constraints, describe new algorithms for estimating shape given videos from multiple partly cloud days, and evaluate these algorithms on real and synthetic scenes.
               
            

@&#INTRODUCTION@&#

Knowledge of the 3D geometry of a scene can be useful for many applications in outdoor camera networks, including video surveillance [1–3], weather estimation [4–6], and environmental monitoring [7,8]. However, standard approaches to estimating scene geometry that rely on camera motion [9] or controlled lighting [10] are not possible for images obtained from static outdoor cameras. In this domain, most approaches consider photometric cues from changes in the sun position [11,12] to provide estimates of surface orientation or geometric cues based on cloud motion [13] to give direct constraints on scene shape. In this work, which extends our previous work [14], we focus on the cloud cue and generalize the problem setting to incorporate constraints provided by multiple days (with independent cloud motion directions) and multiple cameras. This eliminates the ambiguity inherent in only having a single cloud motion direction, enables partial shape estimation with unknown camera calibration, and the recovery of the relative scene layout in an uncalibrated camera network.

We assume that the dominant appearance variation in the scene is due to the shadows cast by moving clouds. Since the cameras are static, each pixel has an intensity time series that reflects the pattern of clouds that passed between the sun and the imaged scene point. As clouds translate due to cloud motion, nearby world locations that are inline with the wind will have a related, but temporally offset, intensity time series. We use signal processing methods to estimate this temporal delay and use the set of temporal delays between all pixels in the scene, or across a network of cameras, as the only image measurements input to our shape estimation algorithms. We define a geometric relationship between the scene shape, these temporal delays and the known cloud motion. Fig. 1
                      provides an overview of our approach.

We focus on three problem settings for estimating scene geometry: a fully calibrated camera, a fully calibrated camera network, and an uncalibrated and general imaging model, which is suitable for uncalibrated cameras or networks of uncalibrated cameras. In all cases, we take as input video from a static camera (or set of cameras) observing a fixed-geometry scene. In the first two problem settings, we derive linear least-squares formulations that allow us to quickly solve for a full 3D scene model, with known metric scale. In the third setting, only a 2D scene layout reconstruction is possible, due to the ambiguity introduced by the orthographic lighting of the sun.

@&#RELATED WORK@&#

The wide availability of outdoor video, whether from the vast network of outdoor webcams [7] or the multitude of security cameras, has motivated researchers to explore using these cameras for applications in environmental and behavioral monitoring. Notable applications include making phenological observations of trees [15], grasses [16], weeds [8], algae [17], clouds [18], and the impact of transportation infrastructure changes on urban cycling rates [19]. To fully utilize the imagery from such cameras, it is important to account for potentially confounding factors, such as the camera calibration, scene geometry, or local environmental conditions. Devising automatic methods to solve for these factors, across a broad range of scenes, is challenging because physical access to the camera is often not feasible. One promising direction is the use of natural cues, such as sun motion or clouds, to help estimate these properties.

Obtaining an estimate of the geolocation, geo-orientation, and field of view of a camera are important for placing pixels in geometric context. Jacobs et al. [20,21] use coarse changes in scene appearance due to sun motion and weather condition to estimate camera geolocation. More detailed estimates of geolocation are possible by reasoning about the sun and its impact on scene appearance [22–28]. Jacobs et al. [29] and Lalonde et al. [30] use expected sky appearance as a cue for camera calibration. Jacobs et al. [31] use cloud motion as a cue for estimating camera orientation and field of view. In addition to geometric calibration issues, Kim et al. [32] estimate the radiometric calibration of an outdoor camera given a sequence of images where the illumination is changing. Such calibration eases the challenge of translating pixel intensities to real-world units.

Several cues and approaches have been proposed for estimating shape information from video of an outdoor scene captured by a static camera. These techniques all rely on strong assumptions about the scene, including clear sky conditions [23,12,11,33] or constant albedo [12,11]. The most commonly used cues are based on appearance changes due to sun motion, such as photometric changes [12,11] and cast shadows geometry [33]. Sunkavalli et al. [34] define a video decomposition suited for outdoor scenes. An important feature of this model is explicitly accounting for surface orientation, sun motion, and cast shadows. Essential to such methods is either a clear sky, or a method for filtering out cloudy conditions. Unlike our approach, these methods are currently restricted to estimating surface normals [12,11], which would be challenging to convert into depth estimates in a general outdoor environment, or only provide depth estimates around shadow casters [33]. An additional limitation of all of these techniques is that the scale of the scene is ambiguous.

Methods that use moving cloud shadows to estimate scene geometry [13,35] provide direct constraints on scene depth. This previous work introduces the delay-based constraint, which relates the distance between pairs of pixels to the rate of cloud motion and time of transit (i.e., “distance equals rate times time”). In the case where the video framerate and cloud velocity is known, this constraint provides a metric estimate of the scene geometry. Our work extends this line of research in several directions. For the case of a single calibrated camera, we show how to extend the depth-from-delay cue to incorporate constraints from multiple days. We show how this overcomes the inherent ambiguity in the constraints for a single day and show how additional days increase the robustness to various types of errors. In addition, we show how the need for camera calibration can be eliminated. For the case of an uncalibrated camera, or camera network, we solve for a 2D scene layout by incorporating multiple days of data.

The problem of estimating local weather conditions using outdoor cameras has drawn significant attention recently. Early work in this area by Narasimhan and Nayar [36,37] showed the promise of explicitly reasoning about how atmospheric changes can be detected and compensated for. Jacobs et al. [38] show empirically that weather causes significant changes in the principal component coefficients of outdoor scenes. Shen and Tan [6] propose a method for simultaneously estimating surface normals and local weather conditions. Islam et al. [39] and Laffont and Hays [40] propose user-in-the-loop methods for constructing large databases of weather-annotated imagery. Jacobs et al. [41] use outdoor videos to estimate a 2D projection of the cloud layer passing over a scene. Murdock et al. [42] solve for a 2D cloud layer at a continental scale using a network of outdoor webcams. The techniques we propose for estimating scene geometry could serve as a useful pre-processing step for estimating local weather conditions.

Clouds and their shadows provide strong cues on the geometry of outdoor scenes. Clouds cast shadows on the ground, and the motion of these shadows, when the clouds are driven by the wind, provide geometric constraints on the underlying scene geometry. In this section, we begin by defining a model of cloud shadow formation that is a reasonable approximation for many outdoor scenes. We then formalize the relationship between cloud motion, sun direction, and scene geometry and define inherent ambiguities in using cloud shadows for scene geometry estimation. Finally, we describe our framework for estimating the geometry of a scene given a set of videos from partly cloud days.

The brightness, 
                           
                              I
                              (
                              p
                              ,
                              t
                              ,
                              d
                              )
                           
                        , of a pixel, p, at particular time/frame, t, in a video captured on day, d, is a function of static scene geometry, time-varying lighting conditions, and camera properties, such as the focal length, location, and orientation. We define a simple image formation model:
                           
                              (1)
                              
                                 I
                                 (
                                 p
                                 ,
                                 t
                                 ,
                                 d
                                 )
                                 ≈
                                 
                                    
                                       ρ
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 p
                                 ,
                                 d
                                 )
                                 S
                                 (
                                 p
                                 ,
                                 t
                                 ,
                                 d
                                 )
                                 +
                                 
                                    
                                       ρ
                                    
                                    
                                       0
                                    
                                 
                                 (
                                 p
                                 ,
                                 d
                                 )
                              
                           
                        This model assumes that the albedo terms, 
                           
                              
                                 
                                    ρ
                                 
                                 
                                    0
                                 
                              
                              (
                              p
                              ,
                              d
                              )
                           
                         and 
                           
                              
                                 
                                    ρ
                                 
                                 
                                    1
                                 
                              
                              (
                              p
                              ,
                              d
                              )
                           
                        , are constant per pixel for each video, but that there exists a time-varying cloud shadow term, 
                           
                              S
                              (
                              p
                              ,
                              t
                              ,
                              d
                              )
                              ∈
                              R
                           
                        , which depends on both the direction of the sun, the cloud motion, and the light attenuation due to passing clouds. In this model, we assume that appearance variations over short periods of time, i.e., in a single video, are due only to sunlight attenuation caused by moving cloud shadows.

The cloud-shadow term has interesting geometric properties that both hinder and aid the ability to estimate scene geometry. Let 
                           
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                           
                         be the 3D location of the point imaged by pixel p, and the cloud attenuation mask, 
                           
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              ,
                              t
                              ,
                              d
                              )
                           
                        , be the source of the time-varying cloud shadow term, 
                           
                              S
                              (
                              p
                              ,
                              t
                              ,
                              d
                              )
                           
                        . Assuming that the sun is an orthographic light source, all points along the sun direction, 
                           
                              
                                 
                                    
                                       
                                          L
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    d
                                 
                              
                           
                        , will be similarly attenuated by the same set of clouds. In other words, 
                           
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              ,
                              t
                              ,
                              d
                              )
                              ≈
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              +
                              λ
                              
                                 
                                    
                                       
                                          L
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    d
                                 
                              
                              ,
                              t
                              ,
                              d
                              )
                           
                         which implies that there is a family of pixels that are similarly attenuated at the same time. This ‘sun-direction ambiguity’ implies that without camera calibration information, it is only possible to estimate a 2D scene layout, relative to the sun direction.

The key property that allows for scene structure estimation is the translational motion of clouds, which causes the cloud-shadow term to have a particular form. Pairs of nearby 3D points that are directly in-line with the cloud motion often have very similar patterns of intensity changes, just temporally offset, due to the motion of clouds. That is, 
                           
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                              (
                              x
                              ,
                              t
                              ,
                              d
                              )
                              ≈
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                              (
                              x
                              +
                              w
                              Δ
                              t
                              ,
                              t
                              +
                              Δ
                              t
                              ,
                              d
                              )
                           
                         where w is the cloud velocity. In the direction orthogonal to the cloud velocity, points are affected by a different set of clouds, but, in general, the time series of attenuation of nearby points are still very similar.

We now formulate a constraint that describes the relationship between distance, rate (cloud velocity), and time [13]. Given two 3D points, 
                           
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    q
                                 
                              
                           
                        , directly in line with the cloud motion vector, 
                           
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                           
                        , we define the following relation:
                           
                              (2)
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       p
                                    
                                 
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       q
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       λ
                                    
                                    
                                       dqp
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    λ
                                 
                                 
                                    dqp
                                 
                              
                           
                         describes the time for the wind to move from 
                           
                              
                                 
                                    x
                                 
                                 
                                    q
                                 
                              
                           
                         to 
                           
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                           
                        . For another point, 
                           
                              
                                 
                                    x
                                 
                                 
                                    r
                                 
                              
                           
                        , not directly in line with 
                           
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    q
                                 
                              
                           
                        , this relation will not hold. However, we can define the following relation:
                           
                              (3)
                              
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       p
                                    
                                 
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       r
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       λ
                                    
                                    
                                       drp
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                              
                           
                        which projects the displacement onto the wind direction vector. For a matrix of world points, 
                           
                              X
                              =
                              [
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    N
                                 
                              
                              ]
                           
                        , we can generalize to the following set of constraints:
                           
                              
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 XH
                                 =
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                              
                           
                        where 
                           
                              H
                              =
                              
                                 
                                    R
                                 
                                 
                                    N
                                    ×
                                    K
                                 
                              
                           
                         is a matrix with elements in 
                           
                              {
                              0
                              ,
                              -
                              1
                              ,
                              1
                              }
                           
                         such that XH computes differences between pairs of columns of X (to represent the left-hand side of (3)), and 
                           
                              
                                 
                                    Λ
                                 
                                 
                                    d
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    1
                                    ×
                                    K
                                 
                              
                           
                         is a matrix of temporal delays. The value of K represents the number of pairs of pixels; in the simplest case, 
                           
                              K
                              =
                              
                                 
                                    N
                                    (
                                    N
                                    -
                                    1
                                    )
                                 
                                 
                                    2
                                 
                              
                           
                        , where all possible pairs of pixels are considered. It is also possible, as demonstrated in Section 4.1 to estimate a single globally consistent set of delays in advance, and 
                           
                              K
                              =
                              N
                              -
                              1
                           
                        . Fig. 2
                         provides a visual depiction of these constraints, and further shows how there is a fundamental ambiguity when only one wind direction is available. Refer to A for an alternate derivation of (3).

In the following section, we introduce our framework for estimating the scene geometry, X, given temporal delay estimates, 
                           
                              {
                              
                                 
                                    Λ
                                 
                                 
                                    d
                                 
                              
                              }
                           
                        , and known wind directions, 
                           
                              {
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                              }
                           
                        , from multiple days.

Given a set of videos recorded by a stationary imaging system on multiple partly cloudy days with linearly independent cloud motion directions, we translate the constraints defined in the previous section into a reconstruction error based framework for estimating scene geometry. Given the temporal delays, 
                           
                              
                                 
                                    Λ
                                 
                                 
                                    d
                                 
                              
                           
                        , for a collection of timesteps, 
                           
                              {
                              d
                              }
                           
                        , we define an objective function that relates the delays, 
                           
                              {
                              
                                 
                                    Λ
                                 
                                 
                                    d
                                 
                              
                              }
                           
                        , and wind velocity, 
                           
                              {
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                              }
                           
                        , at each timestep, with the 3D layout of the scene, X:
                           
                              (4)
                              
                                 f
                                 (
                                 X
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 XH
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

In the remainder of this work, we show how to use this framework to solve for shape in three specific scenarios, and present results on real and synthetic datasets. In each case, we begin by estimating the temporal delays, 
                           
                              
                                 
                                    Λ
                                 
                                 
                                    d
                                 
                              
                           
                        , for each video and converting this into a minimal set of temporal delays. We then obtain estimates of the cloud motion vectors, 
                           
                              {
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                              }
                           
                        , using one of several strategies. Given this information, we then estimate the scene geometry using one of three methods: (1) a linear, single-camera method that requires a calibrated camera, (2) a linear, multi-camera method that requires a calibrated camera network, or (3) a nonlinear method that makes almost no assumptions on the imaging system.

Our methods require an estimate of the temporal delays and cloud motion direction for each video. In this section, we detail our techniques for extracting these cloud motion features, starting with our approach for estimating the temporal delay between a pair of pixels. We then describe several approaches for obtaining an estimate of the cloud motion, including a method which uses the estimated delays.

On each day, 
                           
                              d
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              D
                              }
                           
                        , we assume the motion of the clouds is dominated by a single wind velocity vector, 
                           
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                              =
                              
                                 
                                    [
                                    
                                       
                                          u
                                       
                                       
                                          d
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          d
                                       
                                    
                                    ,
                                    0
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                        , where the third coordinate is zero as it is assumed the wind is traveling parallel to the ground. This means there is a fixed temporal delay for each pair of pixels. For each video, we compute the temporal delay between all pairs of pixels, 
                           
                              
                                 
                                    Λ
                                 
                                 
                                    d
                                 
                              
                           
                        , by comparing the pixel intensity time series for each pair using a two-stage process that improves upon a previous method [13]. The first stage measures delay using pairwise cross correlation to obtain an initial, integer estimate of 
                           
                              
                                 
                                    λ
                                 
                                 
                                    drp
                                 
                              
                           
                         and correlation, 
                           
                              
                                 
                                    ρ
                                 
                                 
                                    drp
                                 
                              
                           
                        . For sub-frame accuracy, this estimate is refined by locally optimizing correlation, as a function of delay,
                           
                              
                                 
                                    
                                       argmax
                                    
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             drp
                                          
                                       
                                    
                                 
                                 
                                 corr
                                 (
                                 I
                                 (
                                 p
                                 ,
                                 t
                                 ,
                                 d
                                 )
                                 ,
                                 I
                                 (
                                 r
                                 ,
                                 t
                                 +
                                 
                                    
                                       λ
                                    
                                    
                                       drp
                                    
                                 
                                 ,
                                 d
                                 )
                                 )
                              
                           
                        while constraining the solution to be within one frame of our original integer estimate.


                        Fig. 3
                         shows the estimated delays, 
                           
                              
                                 
                                    λ
                                 
                                 
                                    drp
                                 
                              
                           
                        , and the delay-corrected correlation, 
                           
                              
                                 
                                    
                                       
                                          ρ
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    drp
                                 
                              
                           
                        , for an individual pixel (marked in red
                           1
                           For interpretation of colour in Fig. 3, the reader is referred to the web version of this article.
                        
                        
                           1
                        ) compared to all other pixels in the scene from a typical outdoor video. In this scene, the isocontours of the delay are largely horizontal, except for near objects; this is because the wind is blowing almost directly toward the camera. The values of 
                           
                              
                                 
                                    
                                       
                                          ρ
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    drp
                                 
                              
                           
                         decrease as the distance increases away from the line defined by the direction of the wind.

For a set of N pixels, there are 
                           
                              N
                              (
                              N
                              -
                              1
                              )
                              /
                              2
                           
                         unique temporal delay estimates. However, due to the transitive relationship between temporal delays these are not linearly independent. In the noise-free case, there are only 
                           
                              N
                              -
                              1
                           
                         independent temporal delays. We convert the full set of temporal delay estimates into a minimal set of delays using linear least squares. We refer to this minimal set as the global delay. This significantly reduces the computational cost of the subsequent methods, but is not explicitly required.

The exact velocity of the clouds is generally not available and must be estimated. There are multiple possible methods for estimating the cloud motion that are useful in different situations. First, given the approximate location and time that an image was captured, the cloud motion can be estimated by querying a nearby weather station for the ground wind velocity. When available, these estimates are often very close to the true cloud motion. In practice, the errors are typically independent, so additional days of data can be used to minimize the variance. Second, when a collocated calibrated camera that sees a substantial portion of the sky is available, the cloud motion direction can be estimated using existing video-based methods [31]. This gives the cloud motion direction(s), and, if the cloud height can be estimated, the cloud velocity.

We introduce an alternative method which directly estimates the cloud motion for a video using only the estimated temporal delays. If the camera observes a sufficient portion of the ground plane, and it is possible to rectify the image [43], an affine, or metric, estimate of the cloud velocities can be obtained using the following process: (1) rectify the image, (2) identify the rectified point locations, 
                           
                              
                                 
                                    X
                                 
                                 
                                    ∼
                                 
                              
                           
                        , and temporal delays, 
                           
                              
                                 
                                    Λ
                                 
                                 
                                    d
                                 
                              
                           
                        , for a set of points on the ground plane, and (3) estimate the cloud motion velocity by minimizing the following optimization problem, derived from (3):
                           
                              
                                 
                                    
                                       
                                          argmin
                                       
                                       
                                          
                                             
                                                w
                                             
                                             
                                                d
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                p
                                             
                                          
                                          ,
                                          
                                             
                                                x
                                             
                                             
                                                r
                                             
                                          
                                          )
                                          ∈
                                          
                                             
                                                X
                                             
                                             
                                                ∼
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      d
                                                   
                                                   
                                                      T
                                                   
                                                
                                             
                                             
                                                ‖
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      d
                                                   
                                                
                                                ‖
                                             
                                          
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                p
                                             
                                          
                                          -
                                          
                                             
                                                x
                                             
                                             
                                                r
                                             
                                          
                                          )
                                          -
                                          ‖
                                          
                                             
                                                w
                                             
                                             
                                                d
                                             
                                          
                                          ‖
                                          
                                             
                                                λ
                                             
                                             
                                                drp
                                             
                                          
                                       
                                    
                                 
                              
                           
                        Intuitively, 
                           
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          d
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    ‖
                                    
                                       
                                          w
                                       
                                       
                                          d
                                       
                                    
                                    ‖
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              -
                              
                                 
                                    x
                                 
                                 
                                    r
                                 
                              
                              )
                           
                         corresponds to the “distance” along the wind direction and 
                           
                              ‖
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                              ‖
                              
                                 
                                    λ
                                 
                                 
                                    drp
                                 
                              
                           
                         the “rate”×“time”. We use this approach for the experimental evaluation.

Our goal is to estimate the shape of an outdoor scene given a collection of short (e.g., 20min) videos of the scene captured by a static outdoor camera or camera network. In this section, we show how the framework introduced in Section 3.3 can be applied in three different scenarios.

In the simplest scenario, with a calibrated projective camera, the 3D world-rays, 
                           
                              {
                              
                                 
                                    r
                                 
                                 
                                    p
                                 
                              
                              }
                           
                        , that correspond to each pixel are known. Therefore, the camera-relative scene geometry is 
                           
                              X
                              =
                              RZ
                           
                         where 
                           
                              R
                              =
                              [
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    r
                                 
                                 
                                    n
                                 
                              
                              ]
                           
                         is the matrix of pixel rays, and Z is a diagonal matrix of depths, z. Starting from (4), this problem setting results in a linear least-squares problem of the following form:
                           
                              
                                 f
                                 (
                                 z
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 RZH
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       
                                          
                                             R
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       d
                                    
                                 
                                 H
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       Q
                                    
                                    
                                       d
                                    
                                 
                                 -
                                 
                                    
                                       V
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        that can be further simplified as follows:
                           
                              
                                 f
                                 (
                                 z
                                 )
                                 =
                                 Tr
                                 
                                    
                                       (
                                       
                                          
                                             z
                                          
                                          
                                             T
                                          
                                       
                                       Q
                                       -
                                       V
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 Q
                                 -
                                 V
                                 )
                                 
                                    
                                       ∂
                                       f
                                    
                                    
                                       ∂
                                       z
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 Q
                                 -
                                 V
                                 )
                                 
                                    
                                       Q
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       ★
                                    
                                 
                                 =
                                 
                                    
                                       VQ
                                    
                                    
                                       †
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    
                                       
                                          R
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    d
                                 
                              
                           
                         is a diagonal matrix with the elements of 
                           
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                                 
                                    T
                                 
                              
                              R
                           
                         along the diagonal, 
                           
                              Q
                              =
                              [
                              
                                 
                                    Q
                                 
                                 
                                    1
                                 
                              
                              …
                              
                                 
                                    Q
                                 
                                 
                                    D
                                 
                              
                              ]
                           
                        , and 
                           
                              V
                              =
                              [
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                              …
                              
                                 
                                    V
                                 
                                 
                                    D
                                 
                              
                              ]
                           
                        . To address the “sun-direction ambiguity”, the pixel rays are projected along the corresponding sun direction onto the horizontal plane that passes through the image center [13]. This simple approach allows the equations above to remain unchanged, except for replacing the pixel rays with their ground-plane projections. Specifically, we use 
                           
                              r
                              =
                              r
                              -
                              
                                 
                                    
                                       
                                          sr
                                       
                                       
                                          v
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          v
                                       
                                    
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    s
                                 
                                 
                                    v
                                 
                              
                           
                         and 
                           
                              
                                 
                                    r
                                 
                                 
                                    v
                                 
                              
                           
                         are the vertical components of the pixel ray and the sun vector.

In the case of a known camera calibration, the only unknowns are the depths along the pixels rays. Therefore, even for a 3D scene, there are only N unknowns. The measured temporal delays give a set of 
                           
                              N
                              -
                              1
                           
                         independent constraints, which is insufficient to solve for an unambiguous scene model. See Fig. 2 for a visual representation of this fundamental ambiguity. We can overcome this by adding constraints from a day with an independent wind direction vector. Ideally, the other wind vector would be orthogonal, but it suffices for it to not be in the same or opposite direction. Two days of data provide 
                           
                              2
                              (
                              N
                              -
                              1
                              )
                           
                         constraints, which results in a solution that is much less sensitive to errors in temporal delays. However, for a small numbers of days, the solution is very sensitive to errors in the cloud motion estimates. These observations are demonstrated with numerical simulations described in Section 6.

Our method for estimating temporal delay generates a confidence term, the correlation of the signal after the temporal delay is removed. We can use this to select a subset of pixel pairs to include in the final optimization, or to merely weight the final constraint pairs. To include this, we reformulate the original objective function (4) as follows:
                           
                              (5)
                              
                                 f
                                 (
                                 X
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          T
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 XHC
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 C
                                 
                                    
                                       ‖
                                    
                                    
                                       F
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where we add a diagonal weight matrix C with entries equal to 
                           
                              exp
                              
                                 
                                    
                                       -
                                       
                                          
                                             
                                                
                                                   (
                                                   1
                                                   -
                                                   
                                                      
                                                         ρ
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                         to account for the differing confidences of delay estimates for certain pairs of pixels. We find that 
                           
                              σ
                              =
                              .
                              05
                           
                         works reasonably well for the scenes used in the experiments. Updating the solution method above, and those in the following sections, to include these weights is straightforward.

We can now generalize the formulation proposed in the previous section to support a network of projective cameras. Again, starting from (4), we derive a linear least-squares problem as follows:
                           
                              
                                 f
                                 (
                                 z
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 RZ
                                 +
                                 T
                                 )
                                 H
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       
                                          
                                             R
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       d
                                    
                                 
                                 H
                                 +
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 TH
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       Q
                                    
                                    
                                       d
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where each column of T is the camera center of the ray whose direction is defined by the corresponding column of R, and 
                           
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                           
                         must be defined in a common world coordinate system. This can be further simplified as follows:
                           
                              
                                 f
                                 (
                                 z
                                 )
                                 =
                                 Tr
                                 
                                    
                                       (
                                       
                                          
                                             z
                                          
                                          
                                             T
                                          
                                       
                                       Q
                                       -
                                       
                                          
                                             V
                                          
                                          
                                             ^
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 Q
                                 -
                                 
                                    
                                       V
                                    
                                    
                                       ^
                                    
                                 
                                 )
                                 
                                    
                                       ∂
                                       f
                                    
                                    
                                       ∂
                                       z
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       z
                                    
                                    
                                       T
                                    
                                 
                                 Q
                                 -
                                 
                                    
                                       V
                                    
                                    
                                       ^
                                    
                                 
                                 )
                                 
                                    
                                       Q
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       ★
                                    
                                 
                                 =
                                 
                                    
                                       V
                                    
                                    
                                       ^
                                    
                                 
                                 
                                    
                                       Q
                                    
                                    
                                       †
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    V
                                 
                                 
                                    ^
                                 
                              
                              =
                              [
                              
                                 
                                    
                                       
                                          V
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    1
                                 
                              
                              …
                              
                                 
                                    
                                       
                                          V
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    D
                                 
                              
                              ]
                           
                        . Given the optimal depth estimates, 
                           
                              
                                 
                                    z
                                 
                                 
                                    ★
                                 
                              
                           
                        , we now have an estimate of the world location of each point as 
                           
                              
                                 
                                    RZ
                                 
                                 
                                    ★
                                 
                              
                              +
                              T
                           
                        .

Here, we consider a general case in which we only know that the camera (or cameras) are static. We assume that each pixel has an arbitrary and unknown location and orientation, as in the raxel imaging model [44]. This scenario subsumes a variety of scenarios, including an individual projective camera with unknown calibration or a network of such cameras.

Despite the general nature of this imaging system, it is possible to solve for the partial scene geometry, X, (where X is now a 2D, ground-plane projection, along the sun direction, of the full 3D model) without any need for calibration by optimizing the following objective function:
                           
                              
                                 f
                                 (
                                 X
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 XH
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        We fix one of the point locations to be the origin, and minimize this using nonlinear optimization with the following gradient:
                           
                              
                                 
                                    
                                       ∂
                                       f
                                    
                                    
                                       ∂
                                       X
                                    
                                 
                                 =
                                 2
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          =
                                          1
                                       
                                       
                                          D
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 XH
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    
                                       Λ
                                    
                                    
                                       d
                                    
                                 
                                 )
                                 
                                    
                                       H
                                    
                                    
                                       T
                                    
                                 
                              
                           
                        
                     

For the uncalibrated general imaging case, there are 
                           
                              3
                              N
                           
                         unknowns in the full 3D scene model. N unknown parameters are eliminated by projecting all points along the corresponding sun vector onto the ground plane. Additionally, two more are eliminated by fixing the origin at one of our pixels, which leaves 
                           
                              2
                              (
                              N
                              -
                              1
                              )
                           
                         unknowns. Therefore, the 2D scene layout of the scene can be estimated using constraints from (at least) two days with independent cloud motions. Adding additional days will likely reduce the error, but not enable the recovery of scene height or the absolute position.

@&#RESULTS@&#

We evaluate our proposed methods on a variety of real and synthetic datasets.

To evaluate the sensitivity of our methods to errors, we perform experiments using a known 3D model. We use the Hills scene, introduced in [41], containing a landscape with a small number of hills. Fig. 4
                         shows an illustrative scene image along with a false-color image that represents the 3D geometry of the scene, with the red, blue and green channels, respectively, representing the x, y and z coordinates of the imaged point location. For reference, the most distant point in the scene is approximately 10km from the camera. In these experiments, we assume that the camera is calibrated and use the approach described in 5.1 to estimate the scene geometry. In all cases, we randomly generate cloud motions and compute the temporal delay directly without rendering the scene. Cloud motion was selected so that it takes, on average, 60 frames of video for a cloud to pass through the scene. This results in a set of 
                           
                              N
                              -
                              1
                           
                         constraints for each virtual video.

Our first experiment measures the effect of errors in the temporal delay calculation. We introduce varying amounts of independent, zero-mean, Gaussian error into the temporal delay estimates and evaluate how this influences the resulting scene structure estimates. As depicted in Fig. 5
                        , zero error results in perfect reconstructions. As the error increases, the reconstruction quality degrades approximately linearly, but adding additional days of data reduces the impact of errors in the temporal delay estimates.

In our second experiment, we follow the same approach and investigate the importance of having accurate estimates of the cloud motion direction. Again, we introduce varying amounts of independent, zero-mean, Gaussian error. As seen in Fig. 6
                        , errors in the wind direction have a larger impact on the final reconstructions than errors in the temporal delays. For a small number of days, relatively small angular errors leads to relatively large errors in the scene geometry estimates. This issue is mitigated when using more days. For example, when the cloud motion direction error is small (
                           
                              σ
                              =
                              2
                              °
                           
                        ), the error in the depth estimates is approximately 
                           
                              4
                              %
                           
                         of the scene scale. As the cloud motion error increases, we need an additional 14days of data to obtain the same relative depth error.

To facilitate the evaluation of our methods in a multi-camera setting we constructed the Houses dataset, containing images captured from a synthetic network of cameras with known calibration and scene geometry. To construct our simulated camera network, we used POV-Ray,
                           2
                           
                              www.povray.org.
                        
                        
                           2
                         an open source ray-tracing package, to generate a 3D scene containing a neighborhood of houses. Fourteen cameras with varying directions and fields of view were placed throughout the scene. Fig. 7
                         shows an overhead view of the scene annotated with the location and view frustum of each of the cameras. One thousand frames, at a resolution of 
                           
                              800
                              ×
                              600
                           
                        , were rendered from each camera on ten different days, totaling 140K images. We generate clouds by adding a texture to a translating plane using a process similar to Perlin noise. For each day, the cloud layer and cloud velocities were randomly chosen. An image from each camera in the network is shown in Fig. 8
                         along with the corresponding depth map.

As a pre-processing step, we ignore sky pixels and filter out pixels whose time series have low variance. Intuitively, pixels with low variance are permanently in shadow and not affected by the attenuation of the clouds. From the remaining set of pixels for each camera, we select two hundred landmark pixels using low variance sampling and estimate temporal delays amongst these landmarks for all pairs of cameras on each day. Fig. 9
                        
                         shows example delay estimates for different camera and day combinations. The landmark pixels for each camera are colored according to the camera’s estimated global delay (as described in Section 4.1).

We evaluate our shape estimation methods for both calibrated and uncalibrated camera networks using the computed temporal delays. Fig. 11
                         shows a top-down view of the resulting camera-network point clouds versus ground truth. Comparing the estimated 2D layout from our calibrated method with ground truth we achieve mean absolute deviation (MAD) of 5.21m and root-mean-square error (RMSE) of 8.14m. For reference, our scene is approximately 900m across diagonally. Similarly, with unknown calibration we achieve MAD of 8.85m and RMSE of 11.61m. Even in the uncalibrated setting, our algorithms are able to recover the relative layout of the cameras in the scene.

We further investigate the robustness of our calibrated camera algorithm to errors in the temporal delay estimates. For each trial, we add independent, zero-mean, Gaussian random noise to each temporal delay. Fig. 10 shows that reconstructions obtained when cameras share information are lower than when they do not. We find that the reconstruction error increases linearly as we increase the standard deviation of the noise.

Finally, we use the estimated delays from each camera and day combination to evaluate our method for estimating the cloud motion (Section 4.2). For each camera, we annotate a region on the ground plane, rectify the image, and use the delays and rectified point locations as the only input to our method. Fig. 12
                         shows the results of this experiment for all cameras on each day. When compared with the ground truth cloud velocity, we achieve an average absolute angular difference of 
                           
                              5.28
                              °
                           
                        .

In addition to the experiments on synthetic data presented above, we perform an extensive evaluation of both our calibrated and uncalibrated methods on real videos from several static outdoor webcams, including two from the LOST dataset [1]. For each scene we have videos captured at noon, each approximately 30min long at 1Hz, on several different days.


                           Fig. 13
                            shows the results of a case study of the proposed methods. We investigate the most challenging problem setting, when the location of each camera is unknown and calibration information is not available. Temporal delays are computed for each frame and pixels for which a sufficient number of accurate temporal delay estimates cannot be obtained are filtered. The cloud velocities are estimated using a planar region on the ground near the camera (Section 4.2). We then solve for shape using the unconstrained imaging model (Section 5.3). This model only provides an estimate of the 2D ground layout, which we represent as a false-color image for each dimension. Important features of the scene geometry can be captured using this approach. For example, in Fig. 13, the model captures the planar region of the airport and the depth discontinuities in the building scene. We show the resulting 2D layout as scatter plots in Fig. 14
                           . Geometric features, such as the shed in the foreground of the airport scene, can be seen clearly in these plots.

Here we present qualitative and quantitative results using our calibrated method (Section 5.1). We calibrate each camera using either ProjectLive3D [45] or by applying standard methods which leverage orthogonal vanishing points [46]. We use between five and ten days of video for each camera as input to our methods. For the results presented here, we estimate temporal delays and filter out pixels with low delay-corrected correlation (
                              
                                 
                                    
                                       ρ
                                    
                                    
                                       ˆ
                                    
                                 
                                 <
                                 .
                                 4
                              
                           ). In all cases, we estimate the wind velocity for each video using a manually annotated region on the ground plane (Section 4.2).


                           Fig. 15
                            shows the results for a camera located in Corvallis, Oregon, including the ground truth depth map from Google Earth, the estimated wind directions, and depth map estimated using our method. We achieve a MAD of 6.53m and RMSE of 12.37m when compared to ground truth, calculated using the final set of filtered pixels for which we estimate shape. For reference, the building is about 165m away from the camera. These performance numbers demonstrate the validity of our methods, however, are somewhat misleading as there are several noticeable inconsistencies in the ground-truth depth map, including numerous tents in the foreground and many artifacts on and around the building.

We present qualitative results on four more cameras in Fig. 16
                           . For each scene, our estimated depth map captures the natural structure of the scene.

@&#CONCLUSION@&#

We presented new methods for estimating the geometry of an outdoor scene using geometric assumptions on natural scene variations due to cloud motion. The cloud motion cue does not require any camera motion or manual scene manipulation and is therefore suitable for a wide variety of settings, including outdoor webcams. The estimated scene geometry information, whether full 3D or 2D scene layout, could be used in many applications, including environmental monitoring and video surveillance. In this work, we focus on the constraints provided by multiple cloud motion directions and multiple cameras. In addition, we address shape estimation for general uncalibrated camera networks, which has not been previously addressed. We evaluate the effectiveness of all approaches on real and synthetic scenes. An important area for future work is incorporating constraints provided by other shape estimation cues.

@&#ACKNOWLEDGMENT@&#

We gratefully acknowledge the support of DARPA CSSG 
                  D11AP00255.

We propose an alternative derivation for the fundamental constraint (3) which relates positions, 
                        
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                        
                     , wind velocity, 
                        
                           
                              
                                 w
                              
                              
                                 d
                              
                           
                        
                     , and sun direction, 
                        
                           
                              
                                 s
                              
                              
                                 d
                              
                           
                        
                     . We begin by rearranging terms in (3) as follows:
                        
                           (6)
                           
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                                 
                                    T
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              -
                              (
                              
                                 
                                    x
                                 
                                 
                                    r
                                 
                              
                              +
                              
                                 
                                    λ
                                 
                                 
                                    drp
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                              )
                              )
                              =
                              0
                           
                        
                     This highlights that the constraint implies that the difference between the position of 
                        
                           
                              
                                 x
                              
                              
                                 p
                              
                           
                        
                      and the wind-adjusted location of 
                        
                           
                              
                                 x
                              
                              
                                 r
                              
                           
                        
                      is in a plane with surface normal 
                        
                           
                              
                                 w
                              
                              
                                 d
                              
                           
                        
                     . Next, we extend this derivation to account for the sun-direction ambiguity (described in 3.1) by changing the surface normal of the plane
                        
                           
                              
                                 
                                    (
                                    (
                                    
                                       
                                          
                                             
                                                w
                                             
                                             
                                                →
                                             
                                          
                                       
                                       
                                          d
                                       
                                    
                                    ×
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                    )
                                    ×
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                →
                                             
                                          
                                       
                                       
                                          d
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              -
                              (
                              
                                 
                                    x
                                 
                                 
                                    r
                                 
                              
                              +
                              
                                 
                                    λ
                                 
                                 
                                    drp
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    d
                                 
                              
                              )
                              )
                              =
                              0
                           
                        
                     because 
                        
                           (
                           (
                           
                              
                                 
                                    
                                       w
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 d
                              
                           
                           ×
                           
                              
                                 u
                              
                              
                                 →
                              
                           
                           )
                           ×
                           
                              
                                 
                                    
                                       s
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 d
                              
                           
                           )
                        
                      defines a plane that is “perpendicular to both the wind direction and the sun direction”. This alternative derivation is visualized in Fig. A.1
                     .

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cviu.2014.10.002.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

