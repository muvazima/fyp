@&#MAIN-TITLE@&#On the complexity of project scheduling to minimize exposed time

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Minimizing exposed time with unlimited renewable resources is shown to be NP-hard.


                        
                        
                           
                           Minimizing exposed time with a single renewable resource is shown to be NP-hard.


                        
                        
                           
                           Polynomial time algorithms are provided with restrictions on the costs.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Complexity theory

Project scheduling

Secret project

NP-complete

Polynomial algorithm

@&#ABSTRACT@&#


               
               
                  We consider project scheduling where the project manager’s objective is to minimize the time from when an adversary discovers the project until the completion of the project. We analyze the complexity of the problem identifying both polynomially solvable and NP-hard versions of the problem. The complexity of the problem is seen to be dependent on the nature of renewable resource constraints, precedence constraints, and the ability to crash activities in the project.
               
            

@&#INTRODUCTION@&#


                     Pinker, Szmerekovsky, and Tilson (2013) (here after PST2013) introduced problem STEALTH where a project manager schedules a project to minimize the exposed time, i.e. the time from when an adversary initiates a response to the project until project completion. Theorem 1 in PST2013 establishes that the version of STEALTH they study is strongly NP-hard even for a simplified case. In this paper we expand the problem of STEALTH to include the potential for a single renewable resource and provide a detailed analysis of the complexity of PST2013 including both polynomially solvable and NP-hard cases.

Problem STEALTH is motivated by the competitive environment in which most projects are managed. Project scheduling in a competitive environment is considered in a small number of papers in the operations literature. Averbakh and Lebedev (2005) examine the problem of scheduling activities when two firms compete to perform the same project, and the payoff depends on the difference in activity completion time relative to the competitor. In (Averbakh, 2010) efficient algorithms for finding Nash equilibrium activity sequences are derived when two competing firms work on the same set of activities but only the first firm to complete an activity receives a reward or in the case of simultaneous completion either a dominant firm receives the reward or the reward is shared equally. Brown, Carlyle, Royset, and Wood (2005) discuss the problem of project interdiction. They model interaction between two adversaries as a leader–follower game. The leader seeks to maximally delay a project managed by the follower. The leader selects which project activities are interfered with subject to leader resource constraints. The follower, aware of which activities will be interdicted, decides how to “crash” the schedule subject to his own budget constraints. Brown et al. (2005) show that the leader does not always choose to interdict activities on the critical path. The authors also provide a detailed computational complexity analysis for the problem. In a follow on work, Brown, Carlyle, Harney, Skroch, and Wood (2009) look specifically at the interdiction of a nuclear weapons development project. Using data from (Harney, Brown, Carlyle, Skroch, & Wood, 2006) they develop and solve the interdiction model from the point of view of the leader, identifying which project tasks should be interdicted to cause maximal delay in the project completion.

As Brown et al. (2009) acknowledge, interdiction is limited by available resources such as “money, labor, and diplomatic goodwill.” Interdiction is also limited by the project information available. However, a key assumption in all the above mentioned papers is that the project is scheduled to be completed as quickly as possible and the interdictor can freely choose the point in time to interdict. To our knowledge, other than PST2013 who introduced problem STEALTH, we are the first to consider the complexity of scheduling with the exposed time objective.

Section 2 discusses the formulation of problem STEALTH along with the relevant notation. Section 3 provides detailed results concerning the complexity of problem STEALTH. Section 4 concludes the paper.

A full discussion of STEALTH along with the MILP formulation can be found in PST2013. In this section we briefly review the problem and introduce the notation. We consider a project manager managing a project 
                        
                           P
                        
                      with n
                     +1 activities labeled 0 through n. Activities labeled 0 and n are “dummy” activities, the former corresponding to the project’s start, and the latter to the project’s completion. Let s be an (n
                     +1)-dimensional vector, with si
                     , representing the starting time of project activity i, and d be an (n
                     +1)-dimensional vector, with di
                     , representing activity i’s duration.

PST2013 allows for generalized precedence relations: “finish-to-start” precedence constraints between activities, as well as the “start-to-start”, “finish-to-finish”, and “start-to-finish” constraints with the corresponding lead or lag times (Elmaghraby & Kamburowski, 1992). Here we limit our discussion to the classical “finish-to-start” precedence constraints that can be written as
                           
                              (1)
                              
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       i
                                    
                                 
                                 ⩽
                                 
                                    
                                       s
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        for all (i,
                        j)∈
                        E where E is a binary relation on the set of activities.

We assume that every task requires the services of a single renewable resource, similar to a processor. A total of m
                        ∈[1,…,∞] renewable resources can be available at any particular time. The results in this paper deal with the cases where m
                        ⩾
                        n
                        −1, i.e. renewable resources do not constrain the project, and m
                        =1, which implies that activities can only be executed in series. When m
                        =1 the problem is more like scheduling precedence constrained activities on a single machine than it is like scheduling in a traditional project environment. However, the scenario of a single bottleneck resource can occur in project environments and has been studied by Kavadias and Loch (2003) and Coolen, Wei, Talla Nobibon, and Leus (2012) for new product development (NPD) organizations and research and development (R&D) projects. Note, the version of STEALTH in PST2013 did not include renewable resources, but we include them in our analysis to show their impact on the complexity of the scheduling problem.

We assume the project manager has a non-renewable resource available to him, with a budget b. Following PST2013 we assume that the duration of activities in the project can be shortened (crashed) – from a nominal value of 
                           
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         to duration 
                           
                              
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         for activity i. Since 0 and n are “dummy” activities, 
                           
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    n
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                 
                                 
                                    n
                                 
                              
                              =
                              0
                           
                        . The reduction in duration of non-dummy activities requires expenditure of the non-renewable resource. We define γi
                         as the amount of the non-renewable resource required to reduce the duration of activity i by one time unit.

When an activity is initiated, we assume that it is observed by the adversary. Very generally, if s is the activity initiation schedule for project 
                           
                              P
                           
                         the project will be detected by some time t determined by s. To represent this relationship each activity i is assigned a non-negative detection weight wi
                        . The detection weight model combines two phenomena: the ease with which the activity can be detected, and the probability (from the point of view of an adversary) that the activity is related to a “nefarious” objective. We assume that the adversary will act when his belief that the project is nefarious is strong enough. To represent the idea that combinations of activities indicate project intention we define F(t,
                        s,
                        w) to be the likelihood the adversary will act to counter the project at time t given the activity start times s and activity detection weights w. In this paper we use the form introduced in PST2013:
                           
                              (2)
                              
                                 F
                                 (
                                 t
                                 ,
                                 s
                                 ,
                                 w
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                   ,
                                                
                                                
                                                   if
                                                   
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         i
                                                         ,s
                                                         .
                                                         t
                                                         .
                                                         
                                                            
                                                               s
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ⩽
                                                         t
                                                      
                                                   
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   >
                                                   υ
                                                   ,
                                                   
                                                   where
                                                   
                                                   0
                                                   ⩽
                                                   υ
                                                   ⩽
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

With this functional form, there is some threshold of suspicion that once reached will cause the adversary to act. The threshold υ is project specific and partly reflects the costs to the adversary of interfering with the project.

In PST2013 the project manager is also allowed to invest in deception as follows: similar to project crashing, the project manager can reduce the detection weight for activity i from a nominal value of 
                           
                              
                                 
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         to 
                           
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              
                                 
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         through expenditure of the same non-renewable resource used for crashing. The expenditure associated with deception is proportional to the amount by which the detection weight is reduced. We define αi
                         as the amount of the non-renewable resource required per unit reduction in the detection weight.

The project manager’s problem is as follows: given a project completion due date τ, non-renewable resource constraint, renewable resource constraint, and a detection threshold, the objective is to complete the project by the due date while minimizing the exposed time, i.e. if TD
                         is the detection time, then minimize sn
                        
                        −
                        TD
                         by selecting the starting times s, durations d, and detection weights w for project activities. A full discussion of STEALTH along with the MILP formulation can be found in PST2013. As mentioned previously we include renewable resources in our analysis which are not considered in PST2013. For a variety of special cases of STEALTH we can derive specialized solution algorithms for this problem. In Section 3 we present the results of a computational complexity analysis of different special cases of the problem.

In this section we analyze the time complexity of problem STEALTH. A version of STEALTH is defined by four parameters: the number of processors, the type of precedence constraints, the type of crashing allowed, and the type of deception allowed. Table 1
                      indicates the parameter values for the special cases of STEALTH which we consider.

We denote the special case of STEALTH under consideration by listing the parameter values in parenthesis. For example, the version of STEALTH with a single-processor, precedence constraints, crashing allowed, and deception allowed is denoted as STEALTH(
                        
                           m
                           =
                           1
                           ,
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           ⩾
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           ⩾
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                        
                     ). Our complexity results are summarized in Table 2
                     .

We now provide a brief discussion of the complexity results. A complete proof for each result can be found in Section 3.1 for cases with m
                     =∞ or Section 3.2 for cases with m
                     =1.

STEALTH(
                        
                           m
                           =
                           ∞
                           ,
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                        
                     ) is very similar to basic project scheduling to satisfy precedence constraints with the only exception being that the objective is to minimize the exposed time. Indeed, Proposition 1 of PST2013 establishes that the well known late-start schedule which can be found in O(n
                     2) time is optimal for STEALTH(
                        
                           m
                           =
                           ∞
                           ,
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                        
                     ). Further, Proposition 1 in this work asserts that given any schedule for the activity start and finish times (such as the late-start schedule), a corresponding optimal allocation of the non-renewable resources to the activities for deception can be obtained in O(n
                     log
                     n) time. Hence, the more general STEALTH(
                        
                           m
                           =
                           ∞
                           ,
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           ⩾
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                        
                     ) which allows deception can also be solved in O(n
                     2) time. However, more general problems which allow crashing are significantly harder to solve with respect to time complexity.

By providing a reduction from the PRECEDENCE CONSTRAINED KNAPSACK problem we prove that STEALTH(
                        
                           m
                           =
                           ∞
                           ,
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           ⩾
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                        
                     ) is NP-hard in the strong sense. It follows that STEALTH(
                        
                           m
                           =
                           ∞
                           ,
                           no
                           
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           ⩾
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                        
                     ) is NP-hard in the ordinary sense by the corresponding reduction from the traditional KNAPSACK problem. Only when all activities are taken to have the same detection weight do we obtain a polynomial time solution when crashing is allowed. Specifically, in Theorem 2 we provide an O(n
                     3
                     log
                     n) time algorithm for solving STEALTH(
                        
                           m
                           =
                           ∞
                           ,
                           no
                           
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           ⩾
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                           =
                           ω
                        
                     ).

For versions of STEALTH where all activities must be performed on a single processor the problem appears to be much harder. Even with no precedence constraints, no crashing, and no deception we show that STEALTH
                        
                           (
                           m
                           =
                           1
                           ,
                           no
                           
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                           )
                        
                      is NP-hard in the ordinary sense by an equivalence with the 0–1 KNAPSACK problem. Similarly, when precedence constraints are allowed we show STEALTH
                        
                           (
                           m
                           =
                           1
                           ,
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                           )
                        
                      to be NP-hard in the strong sense by an equivalence with the PRECEDENCE CONSTRAINED KNAPSACK problem. Only when either the activity durations are all the same or the detection weights are all the same do we obtain polynomial algorithms for the problem with a single processor. We show that STEALTH
                        
                           (
                           m
                           =
                           1
                           ,
                           no
                           
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                           =
                           ω
                           )
                        
                      and STEALTH
                        
                           (
                           m
                           =
                           1
                           ,
                           no
                           
                           prec
                           ,
                           
                              
                                 δ
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 δ
                              
                              
                                 ̲
                              
                           
                           =
                           δ
                           ,
                           
                              
                                 ω
                              
                              
                                 ¯
                              
                           
                           =
                           
                              
                                 ω
                              
                              
                                 ̲
                              
                           
                           )
                        
                      can each be solved in O(n
                     log
                     n) time by a simple sorting algorithm.

First we establish the set of unlimited renewable resource problems that can be solved in polynomial time. To that end we make use of Proposition 1 which identifies for a fixed project schedule, including fixed decisions about activity crashing, the complexity of finding the optimal deception strategy and associated maximum time until detection.
                           Proposition 1
                           
                              The time complexity of determining the optimal deception strategy and expected maximum time until detection for a given schedule s and deception resource budget b is O(n
                              
                              log
                              
                              n).

Without loss of generality let 
                                 
                                    o
                                    :
                                    
                                    Z
                                    →
                                    Z
                                 
                               be the ordering of activities such that so
                              
                              (
                              
                                 i
                              
                              )
                              <
                              so
                              
                              (
                              
                                 j
                              
                              ) for i
                              <
                              j. Note that the detection occurs at the start of some activity. Specifically, the detection occurs at the start of the last (lth) activity in the ordering o such that there is a feasible choice of detection weights which satisfies:
                                 
                                    (3)
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                l
                                                -
                                                1
                                             
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             o
                                             (
                                             i
                                             )
                                          
                                       
                                       <
                                       υ
                                    
                                 
                              Hence, the problem of minimizing the exposed time is equivalent to maximizing l with respect to (3). It follows that a binary search over the n possible values for l can find the minimum of the exposed time by evaluating O(log
                              n) start times for feasibility with respect to (3). To evaluate the feasibility of a particular start time t with respect to (3) we introduce another ordering on the set of activities: 
                                 
                                    ϕ
                                    :
                                    Z
                                    →
                                    Z
                                 
                               such that ϕ(i)⩽
                              ϕ(j) if αi
                              
                              ⩽
                              αj
                              . The activity detection weights of activities with si
                              
                              <
                              t are reduced from 
                                 
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                               to 
                                 
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                ̲
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                               in the order of ascending values of ϕ until the total reduction of 
                                 
                                    max
                                    
                                       
                                          
                                             0
                                             ,
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   ,
                                                   
                                                   s
                                                   .
                                                   t
                                                   .
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ⩽
                                                   t
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         ω
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             υ
                                          
                                       
                                    
                                 
                               is reached, the budget b is expended, or all activities reach their minimum weight. If the total reduction 
                                 
                                    max
                                    
                                       
                                          
                                             0
                                             ,
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   ,
                                                   
                                                   s
                                                   .
                                                   t
                                                   .
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ⩽
                                                   t
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         ω
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             υ
                                          
                                       
                                    
                                 
                               is achieved then the start time t is determined to be feasible. Otherwise it is determined to be infeasible. There are multiple sorting algorithms that can be used for ordering activities using a single sorting criteria like ϕ, for example QUICKSORT (Hoare, 1962) has time complexity of O(n
                              log
                              n). Once the ordering ϕ has been determined it takes O(n) time to determine feasibility with respect to (3). Note that the ordering ϕ need be found only once in O(n
                              log
                              n) time and then used in O(n) time to determine feasibility O(log
                              n) times. Hence, the overall complexity for determining the maximum expected time until detection is O(n
                              log
                              n).□

We will also make use of Proposition 1 from PST2013 which we restate using the current notation:
                           Proposition 2
                           PST2013


                           
                              The late-start schedule with respect to τ is an optimal solution to STEALTH
                              
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                              .

We are now ready to establish the complexity of STEALTH for cases with m
                        =∞.
                           Theorem 1
                           
                              Problem STEALTH
                              
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               
                              is solvable in O(n2) polynomial time.

The optimal solution to STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               can be obtained by first applying Proposition 2 (PST2013) to observe that with no crashing being allowed there exists an optimal solution which uses the unique late-start schedule. Hence, the schedule can be fixed for STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               to the late-start schedule without affecting optimality. With the schedule fixed Proposition 1 can be applied with its corresponding algorithm to determine the optimal detection weights respecting the budget and providing the optimal solution. The time complexity of creating the late-start schedule is O(n
                              2) and the complexity of determining the detection weights is O(n
                              log
                              n). Thus the overall time complexity of the problem is O(n
                              2).□


                              Problem STEALTH
                              
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    =
                                    ω
                                    )
                                 
                               
                              is solvable in O(n3
                              
                              
                              log
                              
                              n) time.

From Proposition 2 we know that the optimal schedule will be a late-start schedule using the optimal crashing times for the activities. However, without precedence constraints and with an unlimited number of resources the late-start schedule results in all activities completing at the same time. Hence, activity completion times can be fixed at any feasible project completion time, τ for example, and the problem then becomes one of crashing activities so as to delay their start times and consequently the project exposed time. Since each activity has the same detection weight ω detection will occur when the 
                                 
                                    ⌊
                                    υ
                                    /
                                    ω
                                    ⌋
                                    +
                                    1
                                 
                               activity starts. The problem can be viewed as a partitioning problem where the optimization task is to find a set S of activities to crash so that the exposed time 
                                 
                                    τ
                                    -
                                    
                                       
                                          T
                                       
                                       
                                          D
                                       
                                    
                                    =
                                    
                                       
                                          max
                                       
                                       
                                          i
                                          ∈
                                          S
                                       
                                    
                                    
                                       
                                          d
                                       
                                       
                                          i
                                       
                                    
                                 
                               is minimized, while satisfying the budget constraint. Using T as an estimate for the optimal exposed time we can initially set T using the late start schedule with respect to τ which corresponds to the exposed time when no crashing is used and then successively decrease it in a stepwise fashion until a minimal value of T is achieved. For a given value of T it is straightforward to determine if a feasible schedule exists for which the exposed time is T by just identifying the 
                                 
                                    n
                                    -
                                    ⌊
                                    υ
                                    /
                                    ω
                                    ⌋
                                 
                               cheapest activities i to crash so that di
                              
                              ⩽
                              T. Similarly, to improve on a given value of T we must determine 
                                 
                                    n
                                    -
                                    ⌊
                                    υ
                                    /
                                    ω
                                    ⌋
                                 
                               activities that can be feasibly crashed to start after time T. If no such set of activities exists then we have found the optimal T.

This approach leads to the following algorithm for solving STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    =
                                    ω
                                    )
                                 
                              :
                                 
                                    
                                       Step 1: Set the initial interval for T
                                       =
                                       τ
                                       −
                                       TD as Tmin
                                       ⩽
                                       T
                                       ⩽
                                       Tmax. The maximum value of T, Tmax, is the uncrashed duration of the activity with 
                                          
                                             m
                                             =
                                             n
                                             -
                                             ⌊
                                             υ
                                             /
                                             ω
                                             ⌋
                                          
                                        shortest uncrashed duration. The minimum value of T, Tmin, is the minimum duration of the activity with 
                                          
                                             m
                                             =
                                             n
                                             -
                                             ⌊
                                             υ
                                             /
                                             ω
                                             ⌋
                                          
                                        shortest fully crashed duration.
                                          
                                             •
                                             Let 
                                                   
                                                      o
                                                      :
                                                      
                                                      Z
                                                      →
                                                      Z
                                                   
                                                 be the ordering of activities such that 
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            o
                                                            (
                                                            j
                                                            )
                                                         
                                                      
                                                      ⩽
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            o
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                 for j<k. 
                                                   
                                                      Tmax
                                                      =
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            o
                                                            (
                                                            m
                                                            )
                                                         
                                                      
                                                   
                                                . If b
                                                =0, then T
                                                =
                                                Tmax, exit.

Let 
                                                   
                                                      φ
                                                      :
                                                      
                                                      Z
                                                      →
                                                      Z
                                                   
                                                 be the ordering of activities such that 
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            φ
                                                            (
                                                            j
                                                            )
                                                         
                                                      
                                                      ⩽
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            φ
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                 for j<k. 
                                                   
                                                      Tmin
                                                      =
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            φ
                                                            (
                                                            m
                                                            )
                                                         
                                                      
                                                   
                                                .


                                       Step 2: Narrow down the interval Tmin
                                       ⩽
                                       T
                                       <
                                       Tmax.
                                          
                                             •
                                             Identify activity φ(m′) such that 
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            φ
                                                            (
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            -
                                                            1
                                                            )
                                                         
                                                      
                                                      <
                                                      Tmax
                                                      ⩽
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            φ
                                                            (
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                .

Identify activity 
                                                   
                                                      o
                                                      (
                                                      
                                                         
                                                            m
                                                         
                                                         
                                                            ″
                                                         
                                                      
                                                      )
                                                   
                                                 such that 
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            o
                                                            (
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  ″
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      <
                                                      Tmin
                                                      ⩽
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            o
                                                            (
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  ″
                                                               
                                                            
                                                            +
                                                            1
                                                            )
                                                         
                                                      
                                                   
                                                .

Create a combined list of durations 
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            φ
                                                            (
                                                            1
                                                            )
                                                         
                                                      
                                                      ,
                                                      …
                                                      ,
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            φ
                                                            (
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            -
                                                            1
                                                            )
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            o
                                                            (
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  ″
                                                               
                                                            
                                                            +
                                                            1
                                                            )
                                                         
                                                      
                                                      …
                                                      ,
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            o
                                                            (
                                                            m
                                                            )
                                                         
                                                      
                                                      }
                                                   
                                                 that corresponds to points where the activities that need to be crashed and/or can be crashed change.

Sort the list of durations.

Search for a pair of consecutive durations in the list, so that reducing the time below the smaller duration is infeasible, while reducing the time to the larger duration costs less than b. Set Tmin as the smaller duration, and Tmax as the larger one of the pair. This step uses subroutine 1.


                                       Step 3: Find T.
                                          
                                             •
                                             
                                                
                                                   
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      =
                                                      max
                                                      
                                                         
                                                            
                                                               Tmax
                                                               -
                                                               
                                                                  
                                                                     b
                                                                     -
                                                                     C
                                                                     (
                                                                     Tmax
                                                                     )
                                                                  
                                                                  
                                                                     γ
                                                                     (
                                                                     Tmax
                                                                     )
                                                                  
                                                               
                                                               ,
                                                               
                                                                  
                                                                     max
                                                                  
                                                                  
                                                                     i
                                                                     ∈
                                                                     S
                                                                     (
                                                                     Tmax
                                                                     )
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        
                                                                           δ
                                                                        
                                                                        
                                                                           i
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     ̲
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                 and 
                                                   
                                                      T
                                                      =
                                                      Tmax
                                                   
                                                , this step uses Subroutine 2.

While 
                                                   
                                                      Tmin
                                                      <
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      <
                                                      T
                                                   
                                                .
                                                   
                                                      •
                                                      
                                                         T
                                                         =
                                                         T′.


                                                         
                                                            
                                                               
                                                                  
                                                                     T
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               =
                                                               max
                                                               
                                                                  
                                                                     
                                                                        T
                                                                        -
                                                                        
                                                                           
                                                                              b
                                                                              -
                                                                              C
                                                                              (
                                                                              T
                                                                              )
                                                                           
                                                                           
                                                                              γ
                                                                              (
                                                                              T
                                                                              )
                                                                           
                                                                        
                                                                        ,
                                                                        
                                                                           
                                                                              max
                                                                           
                                                                           
                                                                              i
                                                                              ∈
                                                                              S
                                                                              (
                                                                              T
                                                                              )
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    δ
                                                                                 
                                                                                 
                                                                                    i
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              ̲
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         , this step uses Subroutine 2.


                                       End
                                    


                                       Subroutine 1: determine C(T), the cost of reducing exposed time to T
                                       
                                          
                                             •
                                             Let 
                                                   
                                                      Ω
                                                      (
                                                      T
                                                      )
                                                      =
                                                      {
                                                      i
                                                      |
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ⩽
                                                      T
                                                      }
                                                   
                                                .

For each activity i
                                                ∈
                                                Ω(T) calculate 
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      (
                                                      T
                                                      )
                                                      =
                                                      max
                                                      {
                                                      (
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      -
                                                      T
                                                      )
                                                      
                                                         
                                                            γ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      0
                                                      }
                                                   
                                                , the cost of reducing activity i ’s duration to 
                                                   
                                                      min
                                                      {
                                                      T
                                                      ,
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      }
                                                   
                                                .

Then out of the set of activities Ω(T), select the set S(T) of m activities that have the lowest values of ci
                                                (T). Calculate C(T)=∑
                                                
                                                   i∈S(T)ci
                                                (T).


                                       End
                                    


                                       Subroutine 2: determine C(T), the cost of reducing exposed time to T, as well as, γ(T), approximate per unit time cost of further reduction in the exposed time. Note that the true per unit time cost of further reduction may be lower than γ(T).
                                          
                                             •
                                             Call Subroutine 1 to determine C(T), and S(T).

Out of the set S(T) identify subset S′(T) of activities such that 
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      <
                                                      T
                                                   
                                                .


                                                
                                                   
                                                      γ
                                                      (
                                                      T
                                                      )
                                                      =
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            ∈
                                                            (
                                                            S
                                                            (
                                                            T
                                                            )
                                                            -
                                                            
                                                               
                                                                  S
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            (
                                                            T
                                                            )
                                                            )
                                                         
                                                      
                                                      
                                                         
                                                            γ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                .


                                       End
                                    


                                       Subroutine 1 uses a sorting algorithm to identify the set S(T), so its time complexity is O(n
                                       log
                                       n) and it is executed only once as an initialization step.


                                       Subroutine 2 uses Subroutine 1 plus an additional step taking O(n) time to identify the subset S′(T), so its complexity is O(n
                                       log
                                       n).


                                       Step 1 is executed only once as an initialization step. It can be executed in O(n
                                       log
                                       n) time using a sorting algorithm.


                                       Step 2 is executed only once as an initialization step. It involves a sorting (O(n
                                       log
                                       n)) done once, and a search (e.g. binary O(log
                                       n)), and uses Subroutine 1 within the search. So the time complexity of Step 2 is O(n
                                       (log
                                       n)2).

The time complexity of Step 3 depends on the time complexity of Subroutine 2 and on the number of times the while loop is executed. The number of times the while loop is executed depends on the number of times the composition of the set S(T) changes as T is reduced from Tmax to a value at or above Tmin. Tmax and Tmin bracket the values of T in such a way that the set Ω(T) of activities eligible to be considered for crashing does not change. What can change is the set S(T) consisting of m activities that have the lowest values of ci
                              (T). As T decreases, the value of the crashing cost for individual activity i increases linearly from 0 to 
                                 
                                    (
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ̲
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    
                                       
                                          γ
                                       
                                       
                                          i
                                       
                                    
                                 
                               on the interval 
                                 
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                               to 
                                 
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ̲
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                              . When 
                                 
                                    T
                                    >
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                              , the crashing cost is zero. So, on the interval of T from Tmin to Tmax the cost function ci
                              (T) is linear with either the slope of 0 or −γi
                               for all i
                              ∈
                              Ω(T). Let’s consider two activities j and k in Ω(Tmax) with γj
                              
                              <
                              γk
                              . Assume that there is a value Tjk
                              
                              ∈[Tmin,
                              Tmax], such that cj
                              (Tjk
                              )=
                              ck
                              (Tjk
                              ). That implies that on the interval (Tjk
                              ,
                              Tmax] the cost of crashing k to T is lower, while on the interval 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Tmin
                                                      ,
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            jk
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                               the cost of crashing j to T is lower. So if S(Tmax) includes k, but does not include j, then as T is reduced below Tjk
                              , activity j will replace activity k in the set S(T).

If m
                              >1 then it is possible for activity k to re-enter the set S(T) on the interval 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Tmin
                                                      ,
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            jk
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              . To see how that could happen consider another activity z in S(Tmax). Assume that γk
                              
                              <
                              γz
                              , and that there exists a value 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          kz
                                       
                                    
                                    ∈
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Tmin
                                                      ,
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            jk
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              , such that cz
                              (Tkz
                              )=
                              ck
                              (Tkz
                              ). That implies that the cost of crashing z is lower on the interval 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            kz
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            jk
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              , while on the interval 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Tmin
                                                      ,
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            kz
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                               the cost of crashing k is lower, so k would replace z in the set S(T) on the interval 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Tmin
                                                      ,
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            kz
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              .

Assuming all activities in Ω(Tmax) are ordered with 
                                 
                                    ω
                                    :
                                    
                                    Z
                                    →
                                    Z
                                 
                               such that 
                                 
                                    
                                       
                                          γ
                                       
                                       
                                          ω
                                          (
                                          j
                                          )
                                       
                                    
                                    ⩽
                                    
                                       
                                          γ
                                       
                                       
                                          ω
                                          (
                                          k
                                          )
                                       
                                    
                                 
                               for j
                              <
                              k, activity ω(k) may be replaced in the set S(T) with activity ω(j) as T is decreased from Tmax towards Tmin. The number of such possible replacements is O(n
                              2), so Step 3’s overall time complexity is O(n
                              3
                              log
                              n) and Step 3 determines the time complexity of the algorithm. □

Next we specify the types of STEALTH problems for which there are no known polynomial time algorithms. We prove this by reducing known NP-Hard problems to the relevant versions of STEALTH.
                           Theorem 3
                           
                              STEALTH(
                                 
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                 
                              ) is NP-Hard in the strong sense and STEALTH(
                                 
                                    m
                                    =
                                    ∞
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                 
                              ) is NP-Hard in the ordinary sense.

The decision version of STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               where the goal is to determine for a given time 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          ‾
                                       
                                    
                                 
                               if there is a feasible schedule with detection time 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          D
                                       
                                    
                                    ⩾
                                    
                                       
                                          T
                                       
                                       
                                          ‾
                                       
                                    
                                 
                               is stated as follows: given project network G(V,
                              E), parameters 
                                 
                                    b
                                    ,
                                    
                                    τ
                                    ,
                                    
                                    υ
                                    ,
                                    
                                    γ
                                    ,
                                    
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                 
                              , and 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          ‾
                                       
                                    
                                 
                               is there a schedule of starting times, s, and durations, d, such that 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          D
                                       
                                    
                                    ⩾
                                    
                                       
                                          T
                                       
                                       
                                          ‾
                                       
                                    
                                 
                              ? Next we show that there exists a polynomial time transformation between the decision version of problem STEALTH and a known strongly NP-complete problem PRECEDENCE-CONSTRAINED KNAPSACK (PCK). Therefore if we were able to solve problem STEALTH in polynomial time, we would be able to solve problem PCK in polynomial time.

The PCK is stated as follows (Garey & Johnson, 1979): given an acyclic directed graph H(A,
                              F), a value γ(a)∈
                              Z
                              + and a weight ω(a)∈
                              Z
                              + for each a
                              ∈
                              A, and constants B and C is there a subset 
                                 
                                    
                                       
                                          A
                                       
                                       
                                          ′
                                       
                                    
                                    ⊆
                                    A
                                 
                               such that 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          a
                                          ∈
                                          
                                             
                                                A
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    γ
                                    (
                                    a
                                    )
                                    ⩽
                                    B
                                    ,
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          a
                                          ∈
                                          
                                             
                                                A
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    ω
                                    (
                                    a
                                    )
                                    ⩾
                                    C
                                 
                              , and if a
                              2
                              ∈
                              A′ and (a
                              1,
                              a
                              2)∈
                              F then a
                              1
                              ∈
                              A′?

To transform the PCK into STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               for each a
                              ∈
                              A we create one activity ia
                              
                              ∈
                              V. The duration of each activity ia
                               is 1 unit and it can be reduced to 0 units at the cost of γ(a) – thus we set the values of 
                                 
                                    
                                       
                                          γ
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                a
                                             
                                          
                                       
                                    
                                    =
                                    γ
                                    (
                                    a
                                    )
                                    ,
                                    
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                a
                                             
                                          
                                       
                                    
                                    =
                                    1
                                 
                               and 
                                 
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ̲
                                             
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                a
                                             
                                          
                                       
                                    
                                    =
                                    0
                                 
                              . We set the values of 
                                 
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                a
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                ̲
                                             
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                a
                                             
                                          
                                       
                                    
                                    =
                                    ω
                                    (
                                    a
                                    )
                                 
                              . We set 
                                 
                                    τ
                                    =
                                    
                                       
                                          T
                                       
                                       
                                          ‾
                                       
                                    
                                    =
                                    |
                                    A
                                    |
                                 
                              , b
                              =
                              B and 
                                 
                                    υ
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          V
                                       
                                    
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    C
                                 
                              . For each arc (a
                              1,
                              a
                              2)∈
                              F, we create an arc 
                                 
                                    (
                                    
                                       
                                          i
                                       
                                       
                                          
                                             
                                                a
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          
                                             
                                                a
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    )
                                    ∈
                                    E
                                 
                              .

Suppose there exists a feasible schedule with 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          D
                                       
                                    
                                    ⩽
                                    
                                       
                                          T
                                       
                                       
                                          ‾
                                       
                                    
                                 
                              . Let V′ be the set of activities for this schedule that are initiated after TD
                              . Since 
                                 
                                    τ
                                    =
                                    
                                       
                                          T
                                       
                                       
                                          ‾
                                       
                                    
                                 
                               each activity i
                              ∈
                              V′ must complete in 0 time. That is to say that the full cost 
                                 
                                    
                                       
                                          γ
                                       
                                       
                                          i
                                       
                                    
                                    (
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ̲
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          γ
                                       
                                       
                                          i
                                       
                                    
                                 
                               must be paid in crashing each activity 
                                 
                                    i
                                    ∈
                                    
                                       
                                          V
                                       
                                       
                                          ′
                                       
                                    
                                 
                              , and since constraints of the STEALTH problem are satisfied 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    
                                       
                                          γ
                                       
                                       
                                          i
                                       
                                    
                                    ⩽
                                    b
                                 
                              . Further, since detection occurs at time TD
                               it must be that the sum of detection weights of all activities in the set (V
                              −
                              V′) is no more than υ, which implies that activities in V′ have combined detection weight of at least 
                                 
                                    C
                                    :
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    
                                       
                                          w
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          V
                                       
                                    
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          (
                                          V
                                          -
                                          
                                             
                                                V
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    ⩾
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          V
                                       
                                    
                                    
                                       
                                          
                                             
                                                ω
                                             
                                             
                                                i
                                             
                                          
                                       
                                       
                                          ¯
                                       
                                    
                                    -
                                    υ
                                    =
                                    C
                                 
                              . It follows that a “YES” solution to STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               provides a “YES” solution to PCK, with V′ transformed to A′.

To see that a “NO” response to STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    default
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               provides a “NO” response to PCK observe that when the solution for PCK is “YES” with set A′ the reverse transformation of A′ to V′ provides a “YES” for STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                              . Hence, the solution to STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               cannot be a “NO” if the solution for PCK is a “YES”.

For the case of no precedence constraints the above reductions provide a reduction to STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               of the traditional KNAPSACK problem without precedence constraints and vice versa. Hence we can conclude that STEALTH
                                 
                                    (
                                    m
                                    =
                                    ∞
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    ⩾
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               is NP-hard in the ordinary sense.□□


                        
                           Theorem 4
                           
                              Problems STEALTH
                              
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    =
                                    ω
                                    )
                                 
                               
                              and STEALTH
                              
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    =
                                    δ
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               
                              are solvable in O(n
                              
                              log
                              
                              n) time.

For STEALTH
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    =
                                    ω
                                    )
                                 
                               neither activity crashing, nor detection weight reduction is possible, and all activities contribute equally to the probability of detection. Without any loss of generality assume that the due date τ is set to 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                              . Minimizing the exposed time sn
                              -TD
                               is equivalent to selecting 
                                 
                                    ⌊
                                    υ
                                    /
                                    ω
                                    ⌋
                                 
                               activities of the longest duration and starting them one after another in arbitrary order. Hence, time complexity of the problem is determined by a sorting algorithm. STEALTH
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    =
                                    δ
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               is similarly easy. To maximize time to detection, activities should be initiated in the order of ascending detection weights. □


                              STEALTH
                              
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               
                              is NP-Hard in the ordinary sense and STEALTH
                              
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               
                              is NP-Hard in the strong sense.

For STEALTH
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               the budget constraint becomes irrelevant since neither the detection weights nor the duration of activities can be changed. Precedence constraints (1) are irrelevant as well. The problem of selecting which activities are to be completed prior to and which ones after the detection, can be re-written as the 0–1 KNAPSACK problem:
                                 
                                    (4)
                                    
                                       
                                          
                                             
                                                min
                                             
                                             
                                                z
                                                ,
                                                T
                                             
                                          
                                       
                                       
                                       T
                                       =
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   δ
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       1
                                       -
                                       
                                          
                                             z
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                              
                                 
                                    (5)
                                    
                                       s.t.
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ω
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             z
                                          
                                          
                                             i
                                          
                                       
                                       ⩽
                                       υ
                                    
                                 
                              
                           

An arbitrary activity i with zi
                               equal to 0 is then scheduled to end at due date τ. Other activities with zj
                               equal to 0 are scheduled to precede it, and activities with zj
                               equal to 1 to precede them. Hence, a solution to 0–1 KNAPSACK provides a solution to STEALTH
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                              . Similarly, an instance of 0–1 KNAPSACK can be solved by solving an instance of STEALTH
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               where the resource budget is the knapsack capacity and where each item corresponds to an activity with the detection weight equal to the space requirement and the duration equal to the value of the item. Since the 0–1 KNAPSACK problem is known to be NP-hard in the ordinary sense the equivalent STEALTH
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    no
                                    
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               is also NP-hard in the ordinary sense. Further, by adding precedence relationships we obtain the equivalence between STEALTH
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    prec
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          δ
                                       
                                       
                                          ̲
                                       
                                    
                                    ,
                                    
                                       
                                          ω
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    
                                       
                                          ω
                                       
                                       
                                          ̲
                                       
                                    
                                    )
                                 
                               and the PCK problem which is known to be NP-hard in the strong sense. □

The equivalence of STEALTH
                           
                              (
                              m
                              =
                              1
                              ,
                              prec
                              ,
                              
                                 
                                    δ
                                 
                                 
                                    ¯
                                 
                              
                              =
                              
                                 
                                    δ
                                 
                                 
                                    ̲
                                 
                              
                              ,
                              
                                 
                                    ω
                                 
                                 
                                    ¯
                                 
                              
                              =
                              
                                 
                                    ω
                                 
                                 
                                    ̲
                                 
                              
                              )
                           
                         and PCK allows for numerous results based on specific types of precedence graphs. For example, Johnson and Niemi (1983) show how dynamic programming techniques can be used to construct a pseudopolynomial time optimization algorithm for a special case of the PCK problem, when precedence constraints form an out-tree. A recent pegging approach for the PCK problem can be found in (You & Yamada, 2007) and a review of other methods for the PCK problem can be found in (Kolliopoulos & Steiner, 2007). Martello and Toth (1990) provide an extensive review of algorithms for the 0–1 KNAPSACK problem.

@&#CONCLUSION@&#

In this paper we have characterized the computational complexity of the scheduling problem STEALTH. We have shown that the problem with precedence constraints, deception, and no crashing can be solved in O(n
                     2) time but problems with crashing are significantly harder to solve with respect to time complexity. Specifically, we have shown that with precedence constraints even the problem with no deception is NP-hard in the strong sense and even when there are no precedence constraints the problem remains NP-hard in the ordinary sense with crashing. Only when all activities are taken to have the same detection weight do we obtain a polynomial time solution when crashing is allowed.

For cases of STEALTH where all activities must be performed on a single processor the problem appears to be much harder. Even with no precedence constraints, no crashing, and no deception we show the problem to be NP-hard in the ordinary sense. Similarly, under precedence constraints we have shown the problem to be NP-hard in the strong sense. Only when either the activity durations are all the same or the detection weights are all the same do we obtain polynomial algorithms for the problem with a single processor.

Many opportunities exist for continuing to explore the complexity of STEALTH. First, a number of cases of STEALTH remain candidates for being possible maximal open (all harder cases are known to be strongly NP-hard) and/or minimal open (all easier cases are known to be polynomially solvable). We identify these in Table 3
                     . Second, though a mixed integer linear program exists for STEALTH no specialized algorithms have yet been designed for either the general case or any of the special cases which are NP-hard. Third, the notions of crashing and deception we have used assume a linear relationship between resource usage and time or detection weight. Exploring the complexity of solving a model with a more general mode-based approach to the relationship between time and deception would be of interest. Fourth, alternative forms of the likelihood function F(t,
                     s,
                     w) defined in (2) could also have interesting implications on the problem’s complexity and applicability to practical scenarios.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to thank the editor and referees for their constructive comments that have greatly improved the quality of the paper.

@&#REFERENCES@&#

