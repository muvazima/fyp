@&#MAIN-TITLE@&#A self-adaptive Gaussian mixture model

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Dynamic learning-rate adaptation to cope with fast illumination changes.


                        
                        
                           
                           Embedded global illumination change factor into GMM and shadow removal formulation.


                        
                        
                           
                           MDGKT as pre-processing to reduce noise in the temporal, spatial and spectral domains.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Background subtraction

Gaussian mixture model

Shadow removal

Illumination sadden change

Object detection

@&#ABSTRACT@&#


               
               
                  Most background modeling techniques use a single leaning rate of adaptation that is inadequate for real scenes because the background model is unable to effectively deal with both slow and sudden illumination changes. This paper presents an algorithm based on a self-adaptive Gaussian mixture to model the background of a scene imaged by a static video camera. Such background modeling is used in conjunction with foreground detection to find objects of interest that do not belong to the background. The model uses a dynamic learning rate with adaptation to global illumination to cope with sudden variations of scene illumination. The algorithm performance is benchmarked using the video sequences created for the Background Models Challenge (BMC) [1]. Experimental results are compared with the performance of other algorithms benchmarked with the BMC dataset, and demonstrate comparable detection rates.
               
            

@&#INTRODUCTION@&#

Detecting object motion is a fundamental task in video sequence analysis that is relevant to a wide range of applications, including video monitoring and surveillance of traffic and pedestrians, as well as other visual tracking tasks, such as gesture recognition for the human–machine interface. Visual surveillance and monitoring systems employ static CCTV (Closed-Circuit Television) cameras and object detection is performed using background modeling to separate moving objects from a nominally static background. A background model can be built by recording the value of image pixels that are un-changed over a reasonable period of time. Object detection then proceeds by detecting foreground pixels by comparison with the appropriate background values using background subtraction. However, this simple change detection approach is based on the assumption that the changing value of a pixel is only associated with object(s) moving through the scene. This is a false assumption, and it is necessary to be able to account for the effect of a host of other ‘disturbances’ to the background – pixel noise, illumination changes (both local or global), changing weather conditions (for outdoor scenes), and visual artifacts such as shadows and reflections. A robust system should be independent of the scene, and capable of dealing with movement through cluttered areas, objects overlapping in the visual field, gradual illumination changes (e.g. time of day, evening and night), sudden illumination changes (e.g. switching a light on or off, clouds moving in front of the sun), camera automatic gain control (e.g. camera white balance and auto-iris compensation, which are often applied to optimally map the amount of received light to the digitizer’s dynamic range), moving background (e.g. camera vibration, swaying trees, snow and rain), slow-moving objects, cast shadows and the reflection of objects from strongly-reflecting surfaces (e.g. a window).

A widely-used method for estimating a reliable background image that can cope with these variable environmental conditions is based on Gaussian Mixture Models (GMM). The standard GMM [7] uses a single adaptation or learning rate that is a compromise between the different rates of illumination change that may occur in the scene. As a result, it needs to be tuned to the rate of variation in global illumination common in outdoor scenes. However, such scenes are subject to varying rates, associated with the diurnal cycle (long term) and local weather conditions (e.g. density of cloud cover (medium term) and cloud motion (short term), when the sun suddenly appears (or disappears) from behind an occluding cloud). If the pixel intensities of the scene background remain static for many image frames, the model variance becomes small and a sudden (short term) change in global illumination can then turn the entire frame into foreground. Alternatively, a low learning rate produces a model with a wide variance that will have a low sensitivity of detection. So, a single learning rate results in a trade-off in detection accuracy: for a high learning rate, the model updates too quickly, and slow-moving objects are absorbed into the background model, resulting in a high false negative detection rate. A low learning rate will fail to adapt to sudden illumination changes, and the detector is swamped, resulting in a high false positive rate.

This paper presents an improved GMM algorithm that is less sensitive to sudden changes in the global illumination compared to the GMM presented in the paper [2,8–10,16,40]. It employs a spatio-temporal Gaussian smoothing algorithm and a self-adaptive GMM for background modeling. Foreground detection is improved by the integration of shadow and highlight suppression. The main contributions of this paper are: (1) dynamic learning-rate adaptation to cope with fast illumination changes; (2) embedding a global illumination change factor into the GMM and shadow removal formulation; (3) a multi-dimensional Gaussian kernel density transform as a pre-processor to reduce noise in the temporal, spatial and spectral domains. Extensive experimental results using the dataset of the Background Modeling Challenge [1] are used to evaluate the performance of the algorithm and present a comparative performance with other algorithms from the BMC [1].

The paper is organized as follows: a literature review is given in Section 2; a description of the new algorithm is given in Section 3; extensive experimental results and quantitative evaluation using the BMC dataset are presented in Section 4; Section 5 concludes the paper.

@&#LITERATURE REVIEW@&#

The core of most background subtraction algorithms is a statistical model of each background pixel and recent surveys [3–6,45–50] describe the variety and range of alternative approaches to building the model. The simplest is a time-averaged background image of the scene that is devoid of intruding objects [43], but this requires a large memory and a training period where foreground objects are absent, to ensure stationary foreground objects are not included in the background. In many situations a ‘pure’ background is not always possible and can always be changed under critical situations, for example, objects being introduced or disappearing from the scene, slow-moving or stationary objects. To address the requirement for robustness and adaptation, many background modeling methods have been developed. A single Gaussian model was used in real time tracking of the human body [7]. However, individual pixel values can often have a complex distribution and more elaborate models are needed.

GMMs were originally proposed in the paper by Friedman and Russel [8] to cope with slow-moving objects, though the standard formulation uses the update method proposed by Stauffer and Grimson [9,10]. In this approach each pixel is temporally modeled as a mixture of two or more Gaussians and is updated for each new image frame. The stability of the Gaussian distribution is evaluated to estimate if they are the result of a more stable background process or a short-term foreground process. Each pixel is classified to be background if the distribution that represents it is stable and above a threshold. The algorithm operates on assumptions that the background is visible more frequently than the foreground and that the model has a relatively narrow variance, and is able to cope reliably with slow lighting changes, repetitive motions from clutter, and long-term scene changes, but this method does not cope with sudden changes of illumination.

The GMM approach has been adapted and extended by many researchers. Power and Schoonees [11] used hysteresis thresholding, introducing a faster and more logical application of the fundamental approximation of Stauffer and Grimson [10]. Other authors have improved the speed and adaptation rate of the model by updating the standard formulation [12–15]. Zivkovic and van der Heijden [2,16] adaptively select the number of Gaussians used to model each pixel, employing a recursive computation to update the model parameters. Greggio et al. [17] proposed a self-adaptive GMM for real-time background subtraction, learning an initial description mixture from the first video frame. Martel-Brisson and Zaccarin [18] have extended the method to deal with shadows using a novel statistical model that copes with highly saturated scenes subject to complex, time-varying illumination, suppressing false detection in regions where shadows cannot be detected. Shah et al. [42] propsed an Illumination invariant background model using GMM and SURF featutres to quickly adapt local parameters. Yoshinaga et al. [40] applied a GMM to a local difference pattern. However, these methods remain unsatisfactory for the following reasons: (i) the temporal and spatial constraints of pixel dependencies are not addressed by these pixel-based algorithms; (ii) the algorithms are computed in RGB space, but these color components are not independent and so using a simplification of the covariance by a 3×3 identity matrix is not accurate and results in more false positive and false negative detections [3]; (iii) an established model with sufficiently small variance is unnecessarily duplicated; and (iv) the proportion of time over which a pixel will observe the background is assumed constant, but in reality it fluctuates constantly depending on the number of objects and their movement patterns [12].

Many alternatives have also been proposed to the GMM approach, including the following: an eigenbackground algorithm combined with a statistical illumination model [19]; block-based one-class SVM background classifier [41]; saliency detection [39]; low-rank matrix factorization with iteratively re-weighted least squares (IRLS) [44]; self-organizing artificial neural networks [20,21]; adaptive patch-based background modeling [22]; scale-invariant local ternary pattern operator and pattern kernel density estimation [23], to cope with illumination variation in the feature space; statistical modeling of the illumination effects [24]; incorporation of spatial relations of pixel pairs [25]; color and gradient information [26,27]; and non-parametric density estimations [28–30]. However, there are also drawbacks for these methods. The assumption of [19] is that the foreground is only a small part of the entire image. The method used in [41,39,44] assumes that no foreground objects exist in the first n frames, in order to initialize the model. These assumptions may not always hold. The foreground can be lost as part of illumination compensation and it is difficult to adapt to sudden illumination changes. The method proposed in [20,21] has problems coping with slow and fast motions in the scene. In [22,25] shadows tend to be classified as part of foreground, whilst [24] assumed that the background changes are mainly caused by illumination effects, ignoring the effect of intruding objects.


                     Table 1
                      summarizes the methodological basis of these background subtraction algorithms.

The algorithm we have developed combines a pixel-level and frame-level process based on the recursive Gaussian mixture model proposed by Zivkovic and van der Heijden [2,16] and a multi-dimensional Gaussian kernel density transform (MDGKT) [35] for image smoothing. We refer to the Zivkovic–Heijden GMM as ZHG throughout paper. The main advantages of the ZHG method are that it is a recursive algorithm that estimates the parameters of the mixture and simultaneously selects the number of components for each pixel, and hence is suitable for online (real-time) operation.

A common challenge for many GMM algorithms occurs when moving objects become stationary, a frequent occurrence in urban traffic, and they are ‘absorbed’ into the background model. When they finally move there is a lag in detection, resulting in poor segmentation that will complicate the task of subsequent tracking processes. We address this transient stop-start behavior with a new self-adaptive GMM algorithm (SAG) that remembers the original background, invoking this model and reacting faster when the traffic begins to move. The background learning module computes a measure of global illumination change using the Median of Quotient (MofQ) to adapt more quickly to sudden illumination changes.


                     Fig. 1
                      presents a flow diagram of our algorithm – SAG combined with MDGKT (SAM) that is comprised of two modules. The first module learns the background through the following steps: first, image noise is suppressed using a spatio-temporal filter (MDGKT); next, a global illumination changing factor (g) is computed by the MofQ applied to the smoothed image; this is followed by the self-adaptive GMM (SAG) background learning process. The second module detects foreground objects moving against the background, suppressing shadows and reflection highlights and filling holes in the binary silhouette using a morphological operator. This measure of MofQ is also used in the foreground detection module to enable the shadow and highlight detection steps to be similarly adaptive.

An illumination-invariant change detection model attempts to identify changes to the level of illumination over time. A trivial approach to change detection simply subtracts the intensities of two sequential video frames, pixel-by-pixel. The main disadvantage of this simple method is its sensitivity to noise. Withagen, Schutte, and Groen in [31] compared eight methods for estimating the global intensity level that give an accurate non-iterative estimate of the apparent gain factor. The best performance was found using the MofQ, both with and without outlier removal.

Statistical outlier removal is based on the observation that the majority of the pixels depict the same scene in both images. The average μi
                         and standard deviation σi
                         of the pixel-wise ratio qi
                        
                        =
                        ic
                        
                        ,
                        
                           i
                        /ir
                        
                        ,
                        
                           i
                         between the two images; pixels for which |qi
                        
                        −
                        μi
                        |<
                        Toutlierσi
                         holds are labeled as outliers. Different values of Toutlier
                         have not been evaluated, but should be of only minor influence as long as it is chosen such that there are sufficient pixels for a statistically accurate estimate, as the remaining are unlikely to be outliers. We use Toutlier
                        
                        =1 in our experiments.

The MofQ global illumination change factor g is defined as
                           
                              (1)
                              
                                 g
                                 =
                                 
                                    
                                       median
                                    
                                    
                                       s
                                       ∈
                                       S
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      c
                                                      ,
                                                      s
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      r
                                                      ,
                                                      s
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        for all pixels s in set S (the image) except the outliers, between the current image ic
                         and a reference image ir
                        . The value of g is used in the computation of the Mahalanobis distance (Eq. (10)) for computing the best background model and to scale the computation of brightness and chromaticity distortion for shadow and highlight detection (Eqs. (13) and (14)).

If an image is represented as a two-dimensional matrix of p-dimensional vectors, in the case of gray-levels p
                        =1, for color images p
                        =3, and for multi-spectral images p
                        >3. This representation covers both the spatial domain and the spectral domain [32–34] and for algorithms that analyse image sequences, there is also the temporal domain.

Smoothing across multiple domains helps to reduce the sensitivity of the background learning to noise in the video sequence data. Spatio-temporal smoothing is applied to each spectral component using a multivariate kernel defined as the product of two radially symmetric kernels and the Euclidean metric allows a single bandwidth parameter for each domain [32,34]:
                           
                              (2)
                              
                                 
                                    
                                       K
                                    
                                    
                                       
                                          
                                             h
                                          
                                          
                                             t
                                          
                                       
                                       ,
                                       
                                          
                                             h
                                          
                                          
                                             s
                                          
                                       
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       L
                                    
                                    
                                       
                                          
                                             h
                                          
                                          
                                             s
                                          
                                       
                                       
                                          
                                             h
                                          
                                          
                                             t
                                          
                                       
                                    
                                 
                                 k
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  s
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  h
                                                               
                                                               
                                                                  s
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 k
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  t
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  h
                                                               
                                                               
                                                                  t
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where xs
                         is the spatial part and xt
                         is the temporal part of the feature vector x. k(x) is a common kernel profile used in both spatial and temporal domains (we have used the Gaussian kernel for our experiments), hs
                         and ht
                         are the kernel bandwidths, and L is the corresponding normalization constant. In order to improve stability and robustness of the ZHG, this Multi-Dimensional Gaussian Kernel density Transform (MDGKT) is used as a pre-processor that only requires a pair of bandwidth parameters (hs
                        ,
                        ht
                        ) to control the size of the kernel, thus determining the resolution and time interval of the ZHG.

This section describes a self-adaptive GMM (SAG) based on [2] that is computed for each pixel in the image. ZHG is effective in modeling a multiple-modal background distribution and the model is updated to adapt to rapid changes of the global illumination level. Assuming an adaptation period T (for instance, 100 frames), let x
                        (
                        
                           t
                        
                        ) be the value of a pixel at time t, so XT
                        
                        ={x
                        (
                        
                           t
                        
                        ),
                        x
                        (
                        
                           t
                        
                        −1),…,
                        x
                        (
                        
                           t
                        
                        −
                        
                           T
                        
                        )}. For each new sample we update the model and re-estimate the density. These samples may contain values that belong to both the background (BG) and foreground (FG) object. Therefore, the estimated density is denoted as 
                           
                              
                                 
                                    p
                                 
                                 
                                    ˆ
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    (
                                    t
                                    )
                                 
                              
                              |
                              
                                 
                                    X
                                 
                                 
                                    T
                                 
                              
                              ,
                              BG
                              +
                              FG
                              )
                           
                         
                        [2]. Using a GMM with a maximum of K components (normally between 3 and 7, and in our case, set to a value 4):
                           
                              (3)
                              
                                 
                                    
                                       p
                                    
                                    
                                       ˆ
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 |
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 BG
                                 +
                                 FG
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          m
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       m
                                    
                                 
                                 ·
                                 η
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                (
                                                t
                                                )
                                             
                                          
                                          ;
                                          
                                          
                                             
                                                μ
                                             
                                             
                                                m
                                             
                                          
                                          ,
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                m
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 η
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                (
                                                t
                                                )
                                             
                                          
                                          ;
                                          
                                          
                                             
                                                μ
                                             
                                             
                                                m
                                             
                                          
                                          ,
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                m
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             i
                                             ,
                                             t
                                          
                                       
                                    
                                    
                                       
                                          
                                             (
                                             2
                                             π
                                             )
                                          
                                          
                                             d
                                             /
                                             2
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         i
                                                         ,
                                                         t
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             1
                                             /
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             1
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                             
                                             -
                                             
                                                
                                                   μ
                                                
                                                
                                                   i
                                                   ,
                                                   t
                                                
                                             
                                             )
                                          
                                          
                                             T
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ,
                                             t
                                          
                                          
                                             -
                                             1
                                          
                                       
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             (
                                             t
                                             )
                                          
                                       
                                       -
                                       
                                          
                                             μ
                                          
                                          
                                             i
                                             ,
                                             t
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        where μm
                         is the estimated mean value, ∑
                           m
                         is the estimated covariance matrix, and wm
                         are non-negative estimated mixing weights, normalized (i.e. sum to 1) for the mth GMM at time t. For computational reasons (easily invertible), an assumption is made that each channel of the color space is independent of the others, so ∑
                           m
                         is a diagonal matrix. A further assumption is that the red, green and blue pixel values are independent and have the same variance [9]. The covariance matrix is assumed to be of the form ∑
                           m
                        
                        =
                        σmI, where I is a 3×3 identity matrix and allows us to avoid a costly matrix inversion at the expense of some accuracy. In our method, we used a diagonal matrix to get higher accuracy of foreground segmentation results.

A new algorithm has been developed by incorporating a modified adaptive schedule into the recursive ZHG learning procedure, introducing the factor g (global illumination change) between the learnt background and the current input image, with a counter cm
                         for each Gaussian component in the mixture model. The factor g keeps track of how the global illumination changes whilst the counter cm
                         records how many data points have contributed to the parameter estimation of that Gaussian. Each time the parameters are updated, a learning rate βm
                         is re-calculated based on the basic learning rate α and the value of the current accumulative counter, cm
                        . Given a new data sample x
                        (
                        
                           t
                        
                        ) at time t the recursive update equations are:
                           
                              (5)
                              
                                 
                                    
                                       w
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 (
                                 1
                                 -
                                 α
                                 )
                                 
                                    
                                       w
                                    
                                    
                                       m
                                    
                                 
                                 +
                                 α
                                 
                                    
                                       
                                          
                                             
                                                o
                                             
                                             
                                                m
                                             
                                             
                                                (
                                                t
                                                )
                                             
                                          
                                          +
                                          
                                             
                                                c
                                             
                                             
                                                T
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       β
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 α
                                 (
                                 l
                                 +
                                 
                                    
                                       c
                                    
                                    
                                       m
                                    
                                 
                                 )
                                 /
                                 
                                    
                                       c
                                    
                                    
                                       m
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 
                                    
                                       μ
                                    
                                    
                                       m
                                    
                                 
                                 +
                                 
                                    
                                       o
                                    
                                    
                                       m
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 (
                                 
                                    
                                       β
                                    
                                    
                                       m
                                    
                                 
                                 /
                                 
                                    
                                       w
                                    
                                    
                                       m
                                    
                                 
                                 )
                                 
                                    
                                       δ
                                    
                                    
                                       m
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       m
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       σ
                                    
                                    
                                       m
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       o
                                    
                                    
                                       m
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 (
                                 
                                    
                                       β
                                    
                                    
                                       m
                                    
                                 
                                 /
                                 
                                    
                                       w
                                    
                                    
                                       m
                                    
                                 
                                 )
                                 
                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                m
                                             
                                             
                                                T
                                             
                                          
                                          
                                             
                                                δ
                                             
                                             
                                                m
                                             
                                          
                                          -
                                          
                                             
                                                σ
                                             
                                             
                                                m
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       c
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 
                                    
                                       c
                                    
                                    
                                       m
                                    
                                 
                                 +
                                 1
                              
                           
                        where l is a constant, x
                        (
                        
                           t
                        
                        )
                        =[x
                        1,
                        x
                        2,
                        x
                        3]
                           T
                        , μm
                        
                        =[μ
                        1,
                        μ
                        2,
                        μ
                        3]
                           T
                        , δm
                        
                        =
                        x
                        (
                        
                           t
                        
                        )
                        −
                        μm
                         for a 3-channel color image. Instead of the time interval T, a constant α
                        =1/T defines an exponentially decaying envelope that is used to limit the influence of the old data. cT
                         is a negative prior evidence weight [2,16], which means that the model is accepted to exist only if there is enough evidence from the data. This will suppress the components that are not supported by the data and ensures that components with negative weights are discarded. cm
                         is a counter that is increased when the Gaussian parameters are updated. If the Gaussian is re-assigned, the counter is reset to 1 since the old Gaussian has perished and a new one is initiated [14]. For a new sample the ownership 
                           
                              
                                 
                                    o
                                 
                                 
                                    m
                                 
                                 
                                    (
                                    t
                                    )
                                 
                              
                           
                         is set to 1 for the “close” component with the largest wm
                         and the others are set to zero. A “close” sample to a component corresponds to a Mahalanobis distance (MD) from the component that is less than a threshold distance, dc
                        . The squared MD from the mth component is calculated as:
                           
                              (10)
                              
                                 
                                    
                                       D
                                    
                                    
                                       m
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             δ
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       m
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          
                                             δ
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       m
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    m
                                 
                              
                              =
                              g
                              ·
                              
                                 
                                    x
                                 
                                 
                                    (
                                    t
                                    )
                                 
                              
                              -
                              
                                 
                                    μ
                                 
                                 
                                    m
                                 
                              
                           
                        . If there are no “close” components a new component is generated with wm
                        
                        +1
                        =
                        α; μm
                        
                        +1
                        =
                        x
                        (
                        
                           t
                        
                        ); σm
                        
                        +1
                        =
                        σ
                        0; cm
                        
                        +1
                        =1, where σ
                        0 is an appropriately initialised variance value. If the maximum number of components K is reached the component with the smallest wm
                         is discarded. After each weight update in Eq. (5), the weights are renormalized such that ∑∀
                        
                           kwk
                        
                        =1.

The algorithm uses an on-line clustering computation that can be updated on a frame-by-frame basis in real time. Usually, intruding foreground objects will be represented by additional clusters with small weights wm
                        . Therefore, the background model can be approximated by the M largest clusters:
                           
                              (11)
                              
                                 
                                    
                                       p
                                    
                                    
                                       ˆ
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 |
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 ,
                                 BG
                                 )
                                 ∼
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          m
                                          =
                                          1
                                       
                                       
                                          M
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       m
                                    
                                 
                                 ·
                                 η
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                (
                                                t
                                                )
                                             
                                          
                                          ;
                                          
                                          
                                             
                                                μ
                                             
                                             
                                                m
                                             
                                          
                                          ,
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                m
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Re-ordering the components in descending value of the weight, wm
                        ,we have
                           
                              (12)
                              
                                 M
                                 =
                                 arg
                                 
                                    
                                       min
                                    
                                    
                                       b
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   b
                                                
                                             
                                          
                                          
                                             
                                                w
                                             
                                             
                                                i
                                             
                                          
                                          >
                                          (
                                          1
                                          -
                                          
                                             
                                                c
                                             
                                             
                                                f
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        where cf
                         is a measure of the maximum portion of the data that should be accounted for by the foreground objects without influencing the background model, and b is the number of Gaussian background models that satisfy the condition. The algorithm is summarized in the Appendix A.

This approach results in three significant advantages: (i) if an object is allowed to become part of the background, it does not destroy the existing background model. The original background values remain in the GMM if the object remains static for long enough, and its weight becomes larger than cf
                        . If the object then moves, the distribution describing the previous background still exists with the same estimated mean and variance; (ii) from the dynamic learning rate update Eq. (6), it can be seen that if the background changes quickly, the value of cm
                         will become smaller and the new learning rate βm
                         will increase, so the background model will update quickly. The model will quickly achieve a good estimation of the mean and variance. Maintaining a dynamic learning rate for each Gaussian component will improve convergence and approximation of a smaller data cluster. Otherwise, if the background is stable, as more data samples are included in its parameter estimation, βm
                         will approach the basic learning rate α, while still maintaining the same temporal adaptability, because the weights update Eq. (5) still uses the basic learning rate; and (iii) from formula (10), we can see that the MD calculation will compensate for the global illumination change, making the MD insensitive to sudden illumination changes [35].

A challenge in video analysis is the identification of shadows that objects cast as they move through the scene. It is desirable to discriminate between objects and their shadows and to identify the type of features that could be utilized for shadow detection. The GMM is susceptible to both global and local illumination changes, such as shadows and highlight reflections that can cause the failure of consequent processes, e.g. tracking and classification, because they change according to object pose, camera viewpoint and the location of the illumination source. Methods for detection of shadows and highlights typically employ spectral, spatial and temporal features, individually or in combination. For example, gray intensity or color information [36] or region-level spatial information [28]. The shadow removal algorithm used in this paper is based on the algorithm proposed by Horprasert et al. [37]. Extensive experiments for shadow removal in 5 color spaces are reported in [32]. The experimental results show that the method proposed by Horprasert is very stable in RGB color space and this has been modified to cope with sudden changes in the global illumination by including the MofQ factor g.

The distorting effect of shadow and highlight in RGB space is decomposed into two components, a brightness and chromaticity distortion, and computes an adjustment to re-estimate the chromaticity according the brightness variation. The ith pixel’s brightness distortion Bi
                         is a scalar value that brings the observed color closer to the expected chromaticity line. For the ith pixel value of Ii
                        
                        =[IRi
                        ,
                        IGi
                        ,
                        IBi
                        ]
                           T
                         in RGB space, the estimated mean is Ei
                        
                        =[μRi
                        ,
                        μGi
                        ,
                        μBi
                        ]
                           T
                        . The color channels are re-balanced by scaling the color values using the pixel standard deviation 
                           
                              
                                 
                                    σ
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    
                                       [
                                       
                                          
                                             σ
                                          
                                          
                                             Ri
                                          
                                       
                                       ,
                                    
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             Gi
                                          
                                       
                                       ,
                                    
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             Bi
                                          
                                       
                                    
                                 
                              
                              ]
                           
                        , then the distortion of the brightness Bi
                         and chromaticity CDi
                         are computed as:
                           
                              (13)
                              
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       g
                                       
                                          
                                             
                                                
                                                   
                                                      I
                                                   
                                                   
                                                      Ri
                                                   
                                                
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      Ri
                                                   
                                                
                                                /
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      Ri
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                
                                                   
                                                      I
                                                   
                                                   
                                                      Gi
                                                   
                                                
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      Gi
                                                   
                                                
                                                /
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      Gi
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                
                                                   
                                                      I
                                                   
                                                   
                                                      Bi
                                                   
                                                
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      Bi
                                                   
                                                
                                                /
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      Bi
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         μ
                                                      
                                                      
                                                         Ri
                                                      
                                                   
                                                   /
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         Ri
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         μ
                                                      
                                                      
                                                         Gi
                                                      
                                                   
                                                   /
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         Gi
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         μ
                                                      
                                                      
                                                         Bi
                                                      
                                                   
                                                   /
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         Bi
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       CD
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             (
                                             
                                                
                                                   gI
                                                
                                                
                                                   Ri
                                                
                                             
                                             -
                                             
                                                
                                                   B
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   μ
                                                
                                                
                                                   Ri
                                                
                                             
                                             )
                                             /
                                             
                                                
                                                   σ
                                                
                                                
                                                   Ri
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             (
                                             
                                                
                                                   gI
                                                
                                                
                                                   Gi
                                                
                                             
                                             -
                                             
                                                
                                                   B
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   μ
                                                
                                                
                                                   Gi
                                                
                                             
                                             )
                                             /
                                             
                                                
                                                   σ
                                                
                                                
                                                   Ri
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             (
                                             
                                                
                                                   gI
                                                
                                                
                                                   Bi
                                                
                                             
                                             -
                                             
                                                
                                                   B
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   μ
                                                
                                                
                                                   Bi
                                                
                                             
                                             )
                                             /
                                             
                                                
                                                   σ
                                                
                                                
                                                   Ri
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                     

A foreground pixel is then classified according to the following:
                           
                              (15)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   shadow
                                                
                                                
                                                   
                                                      
                                                         CD
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   <
                                                   
                                                      
                                                         γ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                
                                                   and
                                                
                                                
                                                   
                                                      
                                                         γ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   <
                                                   
                                                      
                                                         B
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   <
                                                   1
                                                
                                             
                                             
                                                
                                                   highlight
                                                
                                                
                                                   
                                                      
                                                         CD
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   <
                                                   
                                                      
                                                         γ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                
                                                   and
                                                
                                                
                                                   
                                                      
                                                         B
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   >
                                                   
                                                      
                                                         γ
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where γ
                        1 (0<
                        γ
                        1
                        ⩽1) is a threshold to distinguish between chromaticity values of the GMM-learnt background and the current image frame. If there is a case where a pixel from a moving object in the current image contains a very low RGB value, then this dark pixel will always be misclassified as a shadow, because the value of the dark pixel is close to the origin in RGB space and all chromaticity lines in RGB space meet at the origin. Thus a dark color point is always considered to be close or similar to any chromaticity line. We introduce the threshold γ
                        2 (0<
                        γ
                        2
                        <1) to overcome this problem. Similarly, a threshold γ
                        3 (γ
                        3
                        >1) is applied to the normalized brightness distortion, in order to detect highlights.

The SAG algorithm has been evaluated on the image sequences provided in the BMC dataset [1,38]. This dataset comprises a set of synthetic video sequences and a set of real video sequences. The synthetic sequences are generated by computer graphics with an image size of 640
                        ×
                        480. The sequences are partitioned into training (learning) and testing (evaluation) sets. For the training sets (labeled as x11 and x21), two scenes are presented: a street and a rotary (roundabout), each organized as an initial 250 frames without objects, then 1250 frames with moving objects. For the evaluation set (labeled x12 and x22), the sequences are organized as: 500 frames without an event, 500 frames with an event (for example, the sun rising), and finally 500 frames without the event. The first digit identifies sequences simulated under different weather conditions and with added image (white) noise. Details of the sequence categories are listed in Table 2
                        . They are labeled with a 3-digit identifier that provides a key to the purpose of each sequence: the third digit distinguishes a training sequence (1) or an evaluation sequence (2). The second digit indicates a street (1) or a rotary (2) scenario. All sequences are approximately 1500 image frames in length. Fig. 2
                         plots the global illumination change factor g for all the sequences, where it can be seen that only four (312, 322, 412, 422) exhibit any variation over the sequence. Fig. 3
                         shows the temporal variation of the mean RGB value of a single pixel from sequences 512 and 422. The white ‘X’ in (a) and black ‘X’ in (b) indicate the sample location of the pixel in an area where no intruding object appears. The variation of the mean value of the R, G and B components over the sequence (approx. 1500 frames) is given in (c), which clearly shows the change in global illumination over frames 500–1000 for video 422 and the more varied change associated with the windy conditions in video 512.

The real videos are taken from the challenge scenarios and have an image size of 320
                        ×
                        240. The scenarios, type of objects to be detected, recording rate and frame length are listed in Table 3
                        . Fig. 4
                         illustrates how the global illumination change factor affects the input image. Fig. 4(a) shows a single frame from video 005. Fig. 4(b) shows the results of the image in Fig. 4(a) divided by factor g.

To evaluate the effectiveness of the self-adaptive GMM (SAG) and the multi-dimensional Gaussian kernel density transform (MDGKT), we compare its performance from three sets of results with the original ZHG algorithm, the SAG algorithm, and the SAM algorithm, applied to the BMC dataset. For the GMM background subtraction algorithms, the following settings are used for all the synthetic image sequences: the number of Gaussians is set to 4, 
                           
                              
                                 
                                    σ
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                11
                                                ,
                                             
                                             
                                                11
                                                ,
                                             
                                             
                                                11
                                             
                                          
                                       
                                    
                                 
                              
                           
                        , the temporal filter bandwidth is ht
                        
                        =3, cT
                        
                        =0.05, l
                        =1 and cf
                        
                        =0.0005 to measure the maximum portion of the data that should be accounted for by the foreground objects without influencing the background model [16]. The thresholds for shadow and highlight detection are γ
                        1
                        =1, γ
                        3
                        =1.2. The values for the other parameters were required to be changed between sequences to give an optimum detection performance. The values used for the Mahalanobis distance threshold (dc
                        ), threshold γ
                        2,the basic learning rate (α), and the window size of spatial filter (hs
                        ) are listed in Table 4
                        .


                        Table 4 indicates that for good quality videos (i.e. 1xx – no added noise, no sudden illumination changes), MDGKT is un-neccesary for foreground segmentation. In more challenging weather conditions the learning rate, Mahalanobis distance threshold and shadow removal threshold needed to be increased and higher noise levels required a larger window size for the spatial filter in MDGKT to effectively suppress the noise. All the real video sequences used the same set of parameter values, which were those used for the 2xx synthetic sequences (i.e. row two in Table 4).

@&#RESULTS AND ANALYSIS@&#

Six pixel-based performance metrics are provided by the BMC benchmark dataset evaluation tool [38]: precision (PRE), recall (REC), F-measure (FM), PSNR for both learning and evaluation sequences, and two additional measures, the D-Score (DS), and structural similarity (SSIM). Precision (also called the positive predictive value) is the fraction of detected pixels that belong to the object (by comparison with the ground truth), while recall (also known as sensitivity) is associated with the fraction of pixels missed. Both precision and recall are therefore based on an understanding and measure of relevance. In segmentation terms, a low recall would indicate that the algorithm over-segmented the image, while a low precision indicates an under-segmented result. The F-measure considers both the recall and the precision and can be interpreted as a weighted average of the recall and the precision: a higher score is better. A high PSNR generally indicates high quality. In the evaluation phase, D-score and SSIM have also been employed. A good D-score tends to 0. SSIM is a method for measuring the similarity between two images. SSIM considers image degradation as a perceived change in structural information. Structural information is the idea that the pixels have strong inter-dependencies, especially when they are spatially close. These dependencies carry important information about the structure of the objects in the visual scene. The resultant SSIM index is a decimal value between −1 and 1, and value 1 is only reachable in the case of two identical sets of data.


                        Tables 5 and 6
                        
                         present the performance metrics for the ZHG, SAG and SAM algorithms applied to the synthetic video sequences (training and test set). Since we do not need to train our algorithm with a long video sequence, we have presented detection results on both the training and the test datasets. Table 5 shows that SAM outperforms the both ZHG and SAG, except for sequence 521, in terms of F-score and PSNR. Table 6 shows that SAM outperforms the other two methods, except for sequences 312, 322, 412 and 422 for the F-score and PSNR.

To give a qualitative understanding of the performance of the algorithm, some background subtraction results of sample images are shown in Fig. 5
                        . Note that the results shown are pixel-based results without the application of the morphological post-processing step.


                        Table 7
                         shows the results of averaging the four measurements for both the synthetic datasets (10 training and 10 test sequences) and confirms that SAM is the best of these three algorithms for background subtraction. The results indicate that applying image pre-smoothing used in SAM is a beneficial component in our methodology, except in the case of sequences 411 and 412; these are subject to conditions of heavy fog (which could have the effect of ‘smoothing’ the image), where it might be expected that further smoothing would produce less tangible improvements. We have also presented results from four of the five published algorithms from the ACCV 2012 Workshops for comparison (only these four give results for the synthetic video sequences). Our method performs well for the testing phase dataset in terms of F-measure and PSNR, and is the third best for the evaluation phase. For the noiseless sequences (112, 212, 122 and 222), SAM gave the best score.

The real video sequences are subject to frequent illumination and dynamic background changes. Fig. 6
                         shows the variation of the global illumination change factor g over these sequences. Examples of shadow detection and suppression are given in Fig. 7
                        . The quantitative results of SAM and ZHG can be compared in Table 8
                        . Table 9
                         list the overall comparison of results (mean of each measurement) for the seven algorithms applied to real data. Fig. 8
                         shows examples of foreground detection using SAM and ZHG and shows that SAM is more robust in detecting foreground objects against both illumination and dynamic background changes, even with a low recording frame rate (e.g. video003 is 7fps). The SAM algorithm comes third out of the other algorithms presented at the ACCV 2012 workshop. However, it does not suffer from the problems identified in [40] associated with a uniformily-textured background. As determined below, our approach seems better suited to an online implementation compared to the method detailed in [44].

The algorithm was implemented in Matlab. For the SAG algorithm (i.e. excluding MDGKT and the morphological operator) the average processing rate for the real video sequences was 8.3 frames per second using an image size of 320
                        ×
                        240 on a Intel dual core 3.0GHz Pentium PC under Windows 7. A C++ implementation could certainly be made to operate at camera frame rates of 25 or 30fps, as C++ is typically 10 times faster than Matlab code in our background subtraction experiments excluding morphological operation.

We note that the assessment methodology used by the BMC does not address all the performance needs of a background detection algorithm. The quality of foreground detection will impact on the performance of subsequent tracking, where single frame detection drop-out can cause the tracking algorithm to fail. The problem of short-term illumination changes (that SAM is intended to address) may not be adequately represented in the summary (average) statistics over a long image sequence, and hence the associated benefits are less visible.

@&#CONCLUSIONS AND FUTURE WORK@&#

We have proposed a new online, self-adaptive Gaussian mixture model and improved shadow removal algorithm to deal with sudden illumination changes. The algorithm has a dynamically adaptive learning rate and models global illumination changes of the background frame-by-frame. At the cost of only one additional parameter per Gaussian, this modification dramatically improves the convergence and accuracy of background subtraction whilst maintaining the same temporal adaptability. This is achieved by incorporating a modified adaptive schedule (a counter keeping track of the number of pixels that have contributed to a Gaussian component in temporal space) into a recursive filter. Comprehensive analysis of experimental results through statistical evaluation performance metrics obtained using annotated ground truth from BMC shows that our method leads to a significantly better performance than others.

We believe that no perfect system exists. For instance, the F-measure values of synthetic sequences 412 and 422, and real videos 005 and 008 for SAM are still low. Background modeling and subtraction in itself is application-oriented. Some of these problems cannot be solved simultaneously because of the differing needs associated with the semantic interpretation of the moving foreground and background. In this paper we have only discussed the basic pixel-level processes and frame-level global illumination changes, including additional MDGKT pre-processing operations, but excluding other checks, such as ghost removal. Furthermore, we intend to combine low level and high level processes in order to identify vehicles that are stationary for long periods, e.g. at traffic lights.

The segment of pseudocode for the SAG algorithm:
                        
                           
                              
                              
                                 
                                    // pseudo-code of SAG algorithm
                                 
                                 
                                    threshold initialization: cT
                                       , c0
                                       , α, cf
                                       , dc
                                       ;
                                 
                                 
                                    initial background;
                                 
                                 
                                    for (f
                                       =0; f
                                       <TotalFrameNumber; f++)
                                 
                                 
                                    {
                                 
                                 
                                    
                                       
                                       input frame(f);
                                 
                                 
                                    
                                       
                                       // calculate global illumination factor g between modeled background and current frame
                                 
                                 
                                    
                                       
                                       calculate g;
                                 
                                 
                                    
                                       
                                       for (i
                                       =0; i
                                       <TotalPixelNumber; i++)
                                 
                                 
                                    
                                       
                                       {
                                 
                                 
                                    
                                       
                                       
                                       BelongModel
                                       =false;
                                 
                                 
                                    
                                       
                                       
                                       BelongBackground
                                       =false;
                                 
                                 
                                    
                                       
                                       
                                       TotalWeight
                                       =0;
                                 
                                 
                                    
                                       
                                       input pixel(i)
                                 
                                 
                                    
                                       
                                       for (m
                                       =0; m
                                       <ModelNumber; m++)
                                 
                                 
                                    
                                       
                                       
                                       if not BelongModel
                                    
                                 
                                 
                                    
                                       
                                       
                                       {
                                 
                                 
                                    
                                       
                                       
                                       calculate MD
                                    
                                 
                                 
                                    
                                       
                                       
                                       if (TotalWeight
                                       <1−
                                       cf
                                       ) and (MD<
                                       dc
                                       )
                                 
                                 
                                    
                                       
                                       
                                       
                                       { BelongBackground
                                       =true; }
                                 
                                 
                                    
                                       
                                       
                                       If (MD
                                       <
                                       dc
                                       )
                                 
                                 
                                    
                                       
                                       
                                       {
                                 
                                 
                                    
                                       
                                       
                                       
                                       
                                       BelongModel
                                       =true;
                                 
                                 
                                    
                                       
                                       
                                       
                                       Update wm
                                       , βm
                                       , μm
                                       , σm
                                       , cm
                                       ;
                                 
                                 
                                    
                                       
                                       
                                       
                                       
                                       TotalWeight
                                       =
                                       TotalWeight
                                       +
                                       wm
                                       
                                    
                                 
                                 
                                    
                                       
                                       
                                       }
                                 
                                 
                                    
                                       
                                       }
                                 
                                 
                                    
                                       if not BelongModel
                                    
                                 
                                 
                                    
                                       
                                       { 
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   m
                                                   +
                                                   !
                                                
                                             
                                             =
                                             α
                                             ;
                                          
                                        
                                       μm
                                       
                                       +1
                                       =
                                       x
                                       (
                                       
                                          t
                                       
                                       ); σm
                                       
                                       +1
                                       =
                                       σ
                                       0; cm
                                       
                                       +1
                                       =1;}
                                 
                                 
                                    
                                       // foreground segmentation
                                 
                                 
                                    
                                       if not BelongBackground
                                    
                                 
                                 
                                    
                                       pixel(i)∊foreground;
                                 
                                 
                                    
                                       }
                                 
                                 
                                    
                                       update background;
                                 
                                 
                                    
                                       output foreground;
                                 
                                 
                                    }
                                 
                              
                           
                        
                     
                  

@&#REFERENCES@&#

