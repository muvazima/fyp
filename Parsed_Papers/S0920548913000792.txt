@&#MAIN-TITLE@&#Mobility management solution for IPv6-based vehicular networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The architecture based on vehicle domains is proposed.


                        
                        
                           
                           Based on the architecture, the address configuration algorithm is proposed.


                        
                        
                           
                           Based on the address configuration algorithm, the routing algorithm is proposed.


                        
                        
                           
                           Based on the routing algorithm, the management algorithm is proposed.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

IPv6

Vehicular network

Vehicular domain

Routing

Mobility management

@&#ABSTRACT@&#


               
               
                  This paper proposes a mobility management solution for IPv6-based vehicular networks. First, the architecture based on vehicle domains is proposed in order to reduce the mobility handover frequency and delay. Based on the architecture, a distributed address configuration algorithm is proposed. Based on the address configuration algorithm, a vehicle can establish a routing path reaching the nearest AP (Access point) and achieve the multi-hop communication with the Internet through the routing path. Finally, based on the routing algorithm, the mobility management solution is proposed. The data results show that the solution shortens the mobility handover delay and lowers the packet loss.
               
            

@&#INTRODUCTION@&#

As a new type of vehicle communication network, vehicular networks achieve multi-hop wireless communication between vehicles and between vehicles and roadside infrastructures. With the development of vehicular networks and the emergence of a variety of new applications, it is urgent to connect vehicular networks to the IPv6-based Internet in order to meet the increasing service demands [1,2].

As a special type of mobile ad hoc network, a vehicular network has its own characteristics, such as high speed, a large number of nodes and a large coverage area, etc. [2,3]. The IPv6-based Internet has many advantages, such as mobility support, abundant address resources and good scalability, etc. [4]. Therefore, the IPv6-based vehicular networks become the ideal solution for satisfying the service demands [1,2].

IEEE 1609 Working Group proposes the framework for the IPv6-based vehicular networks. Due to the differences between the architecture of the IPv6 network and the one of the vehicular network, this framework has the following limitations on achieving address configuration, routing and mobility management:
                        
                           1)
                           In the address configuration, this framework does not support DAD.

In the routing, the framework does not support multi-hop communication.

During the mobility handover process, a vehicle must acquire a new care-of address. Since a vehicle moves in high speed, the frequent change of a vehicle's care-of address increases the packet loss rate and reduces the communication quality.

In order to overcome these limitations, this paper proposes a mobility management solution which is based on address configuration and routing algorithm, and it has the following contributions:
                        
                           1)
                           The architecture based on vehicle domains is proposed in order to reduce the mobility handover frequency and delay.

Based on the architecture, a distributed address configuration algorithm is proposed. In the algorithm, a vehicle acquires a unique IPv6 address from a neighbor node without DAD.

Based on the architecture and address configuration algorithm, a vehicle can establish a routing path reaching the nearest AP and achieve the multi-hop communication with the Internet through the routing path.

Based on the address configuration algorithm and routing algorithm, the intra-VD (Vehicular domain) mobility management algorithm and inter-VD mobility management algorithm are proposed. During the mobility process, a vehicle is always identified by its home address, so the algorithm does not perform the care-of address configuration. Moreover, the handover process in the network layer (L3) is performed before the one in the link layer (L2), so both the handover delay and packet loss rate are reduced. Particularly, during the inter-VD handover is performed, a vehicle can receive data packets from the same AP. As a result, the packet loss rate is significantly reduced.

The remainder of the paper is organized as follows. In Section 2, the related work is discussed. The address configuration algorithm is discussed in Section 3, the routing algorithm is presented in Section 4, and the mobility management algorithm is discussed in Section 5. The proposed solution is analyzed and evaluated in Section 6 and the paper concludes with a summary in Section 7.

@&#RELATED WORK@&#

IEEE 1609 Working Group proposes the framework for IPv6-based vehicular networks. Due to the differences between the IPv6 network architecture and the vehicular network one, this framework has some limitations on achieving address configuration, routing and mobility management. Since the mobility management solution is based on address configuration and routing algorithm, the related works on address configuration, routing and mobility management are discussed respectively.

The IPv6 address configuration address protocols, such as the stateful protocol [5] and the stateless protocol [6], can configure a node with a unique address in the absence of intervention. However, the stateful address configuration protocol is based on the server/client mode and the stateless address configuration is based on DAD, so both of them incur long delay and are unsuitable for vehicular networks with high speed.

At present, some address configuration schemes are proposed.

In [7], a new node acquires an address from a proxy node which has the address space for assignment. Since the transmission of control messages used for address configuration is controlled within two-hop scope, the address configuration delay is reduced. If a proxy node's address space runs out, it broadcasts an address recovery message in the network. The proxy node receiving the message also broadcasts an address recovery message in the network. If the address of a node receiving the message is within the recovery address space, then it returns a response message to show its normal state. It can be seen that during one address recovery process almost each proxy node broadcasts a message so a lot of network resources are consumed.

In [8], a node acquires a unique address based on its location information without DAD, so the address configuration performance is improved substantially. In the hierarchical and low-power IPv6-address configuration scheme based on the cluster-tree architecture [9], the generation algorithm of a cluster is proposed, the cluster-tree architecture is presented, and the layered IPv6 address structure is also created. In the scheme, DAD for a cluster member's address is performed in the corresponding cluster, and the address configuration for cluster members in different clusters is carried out at the same time, so the address configuration cost is reduced and the delay is shortened.

The proxy-based address configuration scheme [10] adopts the random ID and time stamp to identify a new node. If multiple nodes with the same ID and time stamp send an address request message to a proxy node simultaneously, then the proxy node is unable to distinguish between these nodes and to properly perform the address configuration. In the scheme, NS (Neighbor Solicitation) and NA (Neighbor Advertisement) are used to perform the communication between a new node and a proxy node while REQ and REP are employed to achieve the communication between a proxy node and a gateway node. Therefore, a proxy node has to store the mapping between different kinds of messages, so the address configuration performance is potentially reduced.

In the tree-based dynamic address auto-configuration protocol—T-DAAP [11], the network is organized in the tree topology and includes three kinds of nodes: normal node, leader node, and root node. A normal node acts as a relay. A leader node has a disjoint free address pool and is responsible for assigning an address for a new node. Only one root node is included in the network, and it stores the information on all leader nodes in the network. In this way, a leader node can acquire the status of other leader nodes through the root node. The root node is also responsible for address reclamation and network merging, so it becomes the bottleneck of the entire system.

In [12], an AP is equipped with a DHCP server and can assign an address for a vehicle, but it does not record the address assignment states. All the address assignment states are managed by a BS (Balanced Server) which is also responsible for reclaiming the address resources released by parking vehicles. A BA (Border Access point) is employed for reclaiming the address resources released by vehicles moving out of the serving area. Then, a BS/BA returns the reclaimed address resources to the corresponding APs. An AP has an address recovery buffer. If the buffer of an AP is full, then the AP cannot reuse the recovered address resources. As a result, the address resource loss is incurred. If an AP's buffer is empty, the AP requests the address space from a BS. In the situation, the address configuration is performed through a central server, so the address configuration delay is prolonged.

Yuh-Shyan Chena et al. [13] propose an address scheme for vehicular networks. When a vehicle is going to leave the serving area, it passes its IP address to an intermediate vehicle that remains in the serving area in order to extend the address lifetime. During the extended address lifetime, a vehicle which is entering the serving area can acquire the address through multi-hop relays from the intermediate vehicle. If a leaving vehicle is unable to communicate with an intermediate vehicle in the serving area, then an entering vehicle acquires an address from the remote DHCP servers. In this situation, the address configuration delay is prolonged. Moreover, a vehicle broadcasts a message within multi-hop scope according to TTL (Time to live), so the address configuration delay is potentially increased.

In [14], each node maintains an address space. If a node moves out of the network, its address space is reclaimed. However, when a node leaves or fails without alerting, the address space loss can be caused. In this situation, the scheme employs the periodic-flooding query mechanism to reclaim the address space, so the address configuration performance is weakened. In the location-based address configuration scheme [15], a node gets its location information by GPS (Global positioning system) and then it acquires an address based on the location information. A node performs DAD to ensure the uniqueness of its address, so the address configuration delay is increased.

This paper proposes a distributed address configuration algorithm where a vehicle acquires a unique IPv6 address from a neighbor node without DAD.

In [16], a routing scheme based on location information is proposed. In the algorithm, a network is divided into multiple grids according to location coordinates. Each node's address includes its location coordinate. When one node wants to communicate with another node, it launches the routing establishment process according to the location coordinate of the destination node.

Movement prediction-based routing (MOPR) [17] uses link stability metrics to predict the link lifetime and route lifetime. It assumes that each vehicle can acquire neighbor vehicles' information such as speed, location, and direction, and can use this information to predict the connection interval. However, this protocol does not support mobility handover.

In [18], the proposed position-based routing protocol relies upon the extraction of a static street map from an external service such as GIS (geographic information systems) to construct a spatial model for routing. It has some recovery strategies to route packets. The greedy perimeter coordinator routing algorithm—GPCR [19] takes advantage of the fact that city streets form a natural planar graph. In this way, a restricted greedy algorithm can be followed as long as the nodes are on the street. In GPCR, the routing decisions are taken only at street junctions.

In [20], a source node establishes multiple disjoint routing paths reaching a destination node through one routing discovery process, and then ranks the multiple routing paths based on the link cost. The routing path with the minimum link cost is the primary path. If the primary path fails, then the second optimal routing path is selected to continue routing the data. The scheme effectively reduces the frequency of reestablishing the failed routing paths, but maintaining multiple disjoint routing paths increases the network resource consumption and degrades the network performance.

The connectivity-aware routing protocol—CAR [21] is a position-based routing that maintains routes between source and destination pairs. CAR predicts the positions of destination nodes to improve the routing performance. It can repair routes as nodes' positions change. W. Sun et al. [22] propose a routing protocol that uses digital map and position information of each vehicle to discover a network route with the best stability. This protocol divides the map into grids, and uses the mobility characteristics to determine the route stability. A vehicle sends a RREQ message to the destination grid to launch the routing establishment process. When a vehicle is moving towards the destination the broken routes can be restored. However, during repairing the broken routes, the packet loss is increased.

Based on the proposed address configuration, this paper proposes a multi-hop routing algorithm in order to reduce the packet loss rate.

At present, IETF (Internet engineering task force) has proposed various IP-based mobility management protocols, such as MIPv6 [23] and PMIPv6 [24], in order to provide communication continuity when a node moves between different IP domains. However, most of these protocols are unsuitable for vehicular networks because of considerable packet loss and long delay [3]. In the situation, researchers have proposed some mobility handover schemes for vehicular networks.

Gerla, M et al. [2] have discussed the development trend of vehicular networks in the future, and have addressed the key issues of mobility management for vehicular networks. In addition, Gerla, M et al. [2] have also analyzed the reasons why the existing technology cannot solve these key issues.

In [25], the proposed scheme reduces both the mobility handover cost and tunnel establishment cost, but it depends on Dispatch types to determine source or destination of a packet. As a result, intermediate nodes forwarding a packet have to identify all Dispatch types in order to determine the next hop, so the mobility handover delay is increased and the network scalability is also limited. Moreover, a header structure is added between the adaptation layer and IP layer, and also increases the transmission delay.

Sensor Proxy Mobile IPv6—SPMIPv6 [26] presents the network architecture and message formats for the mobility handover process, and also evaluates the mobility handover cost and energy consumption. The analytical results show that SPMIPv6 reduces the energy consumption significantly. In [27], the mobility handover process is achieved in the link layer, so the mobility handover delay and cost are reduced. Mieso K. Denko et al. [28] propose a mobility management scheme for integrating MANETs into the Internet using multiple MGs (Mobile gateways) and FAs (Foreign agents). The scheme extends AODV (Ad hoc on demand distance vector) and MIP to achieve the integration, and the simulation results show that the use of multiple MGs and the hybrid gate discovery mechanism enhance the network performance.

The protocol [29] provides the localized mobility management in mesh networks, and it achieves the low mobility handover delay through the multi-path routing. However, this solution requires some special signaling costs when it deals with mobile terminals, so the delay is prolonged to some extent.

Chiu K et al. [30] propose a cross-layer fast handover scheme where the physical layer information is shared with the link layer in order to reduce the handover delay in vehicular networks. This scheme operates based on WiMAX mobile multi-hop relay technique that allows inter-vehicle communications to access the Internet via a relay vehicle. However, the scheme does not discuss the IP mobility.

The scheme [31] uses an iMAG (intermediate-mobile access gateway) to perform the mobility handover for vehicular networks. iMAG must be geographically located between the home domain and foreign domain, so the scheme cannot support a global mobility management. In addition, iMAG needs to store the information on all road-side units, and maintaining the information on road-side units consumes a lot of network resources.

Prakash et al. [32] propose a vehicle-assisted cross-layer handover scheme to help relay packets of a handover vehicle. In [33], vehicular clusters are employed so that cluster heads are in charge of IP mobility for other vehicles. Xiaonan Wang et al. [34] propose a mobility handover scheme for IPv6-based vehicular networks. The scheme adopts the tunnel technology to achieve the mobility handover. During the mobility handover process, a vehicle can keep the connection with its current associated AP, so the packet loss rate is reduced. However, the tunnel increases the mobility handover cost and delay to some extent.

Mun-Suk Kim et al. [35] enhance PFMIPv6 and propose an enhanced PFMIPv6 (ePFMIPv6) for vehicular networks. In ePFMIPv6, the serving MAG (Mobile access gateway) pre-establishes a tunnel with multiple candidate MAGs. In this way, when the serving MAG performs the mobility handover, the packets can be forwarded to the next MAG. ePFMIPv6 shortens the mobility handover delay and lowers the packet loss to some extent, but it increases mobility handover cost.

This paper proposes a mobility management solution where a vehicle does not need a care-of address in order to shorten the handover delay and lower the packet loss.

The mobility management solution is based on the address configuration and routing, but the existing schemes only discuss one issue. Therefore, this paper proposes a complete mobility management solution where the issues of the address configuration and routing are also addressed.

A vehicular network is made up of ARs (Access routers), APs (Access points) and vehicles. The communication range of an AP is more than the one of a vehicle. An AR is connected to the Internet backbone and an AP is connected to two ARs. The area enclosed by APs connected to an AR is called a VD (Vehicular Domain), so an AP belongs to two VDs. A vehicle has the routing and forwarding function and achieves the communication with the IPv6 Internet through the nearest AP, as shown in Fig. 1
                        .

During the mobility process, a vehicle is always identified by its home address without care-of address configuration.

Based on the proposed architecture, vehicular networks adopt the following IPv6 address structure, as shown in Table 1
                           .

In Table 1, an IPv6 address is made up of three parts. The first part is VD ID which is the global routing prefix and uniquely identifies a VD. In one VD, both the VD IDs of all APs and the VD IDs of the addresses acquired from the VD are the same, and the value is equal to the VD ID of the AR in the VD. The second part is i-bit AP ID which uniquely identifies an AP. The AP IDs of the addresses acquired from one AP are identical, and the value is equal to the AP ID of the AP. The third part is j-bit vehicle ID which uniquely identifies a vehicle. The IPv6 address of an AP or an AR is preset, both the AP ID and vehicle ID of an AR are zero, and the vehicle ID of an AP is zero.

Taking the generality into account, this scheme sets i to 4 and j to 28, as shown in Fig. 1.

In this scheme, an AP or a vehicle periodically broadcasts a DSRC message—Basic Safety Message [36].

After a vehicle starts, it checks its neighbor nodes. If there is an AP within X's one-hop scope, then the vehicle acquires a home IPv6 address from the AP. Otherwise, the vehicle obtains a home IPv6 address from a neighbor vehicle. These two address configuration processes are discussed respectively as follows.


                           
                              
                                 •
                                 A vehicle X acquires an address from an AP AP1

If an AP AP1 is within a vehicle X's one-hop scope, then X acquires a home IPv6 address from AP1 according to the following process:
                                       
                                          1)
                                          X sends a Req_addr message to AP1.

AP1 selects the VD with the maximum size of unallocated address space, encapsulates the address space [L, U] (L and U are positive integers, and L
                                             <
                                             U) from the unallocated address space into a Res_addr message, and then sends the Res_addr message to X.

After X receives the Res_addr message, it sets the vehicle ID to L. X combines the vehicle ID with the VD ID and AP ID of AP1 to form a globally unique IPv6 address, and at the same time it also acquires the address space [L
                                             +1, U] for assignment. Then X returns an Ack_addr message to AP1.

After AP1 receives the Ack_addr message, it marks the address space [L, U] as the assigned state, as shown in Fig. 2 (a) and (c).

A vehicle Y acquires an address from a neighbor vehicle X

It is assumed that X's address space is [L
                                    +1, U](L
                                    +1<
                                    U). Y acquires an address from X according to the following process:
                                       
                                          1)
                                          Y sends a Req_addr message to X.

X encapsulates the half of the address space 
                                                
                                                   
                                                      
                                                         
                                                            L
                                                            +
                                                            1
                                                            +
                                                            U
                                                         
                                                         2
                                                      
                                                   
                                                   U
                                                
                                              into a Res_addr message and sends the message to Y. Then, X changes the address space into 
                                                
                                                   
                                                      L
                                                      +
                                                      1
                                                      ,
                                                      
                                                         
                                                            
                                                               L
                                                               +
                                                               1
                                                               +
                                                               U
                                                            
                                                            2
                                                         
                                                      
                                                      −
                                                      1
                                                   
                                                
                                             .

After Y receives the Res_Addr message, it sets the vehicle ID to 
                                                
                                                   
                                                      
                                                         L
                                                         +
                                                         1
                                                         +
                                                         U
                                                      
                                                      2
                                                   
                                                
                                             . Then, Y combines the vehicle ID with X's VD ID and AP ID to form a globally unique address, and at the same time it acquires the address space 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               L
                                                               +
                                                               1
                                                               +
                                                               U
                                                            
                                                            2
                                                         
                                                      
                                                      +
                                                      1
                                                      ,
                                                      U
                                                   
                                                
                                              for assignment, as shown in Fig. 2 (b) and (c).

After a vehicle acquires an IPv6 address, the payload of a DSRC message it broadcasts includes the IPv6 address of the nearest AP and the hops from the AP.

In one VD VD1, a vehicle establishes a routing path reaching the nearest AP through the following process:
                        
                           1)
                           If there is an AP within a vehicle's one-hop scope, then the vehicle marks the AP as the nearest AP and sets the hops from the nearest AP to 1.

If there is not an AP within a vehicle's one-hop scope, then the vehicle checks the DSRC messages from its neighbor vehicles. If there are multiple neighbor vehicles with the minimum hops, then the vehicle selects the neighbor vehicle with the maximum link time as its father node, sets the father node's nearest AP as its nearest AP and stores the hops from the nearest AP (namely, the father node's hops plus 1).

Repeat step 2) until all vehicles in VD1 acquire the nearest AP and store the hops from the nearest AP, as shown in Fig. 3
                              .

In the scheme, a vehicle has one father node and multiple child nodes. Since a vehicle moves with high speed and the topology changes frequently, a vehicle only records its father node's information in order to ensure the routing accuracy.

In step 2), the link duration time T
                        ij
                      between the vehicles V
                        i
                      and V
                        j
                      is estimated according to formula (1) 
                     [37] where the coordinate of V
                        i
                     /V
                        j
                      is (xi
                     , yi
                     )/(xj
                     , yj
                     ), the speed of V
                        i
                     /V
                        j
                      is vi
                     /vj
                     , the mobile angle of V
                        i
                     /V
                        j
                      is θi
                     /θj
                      (0≤
                     θi
                     , θj
                     
                     <2π), and the transmission range of V
                        i
                     /V
                        j
                      is r.
                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          T
                                          ij
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            a
                                                            2
                                                         
                                                         +
                                                         
                                                            c
                                                            2
                                                         
                                                      
                                                   
                                                   
                                                      r
                                                      2
                                                   
                                                   −
                                                   
                                                      
                                                         
                                                            ad
                                                            −
                                                            bc
                                                         
                                                      
                                                      2
                                                   
                                                
                                             
                                             −
                                             
                                                
                                                   ab
                                                   +
                                                   cd
                                                
                                             
                                          
                                          
                                             
                                                a
                                                2
                                             
                                             +
                                             
                                                c
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       where
                                    
                                 
                                 
                                    
                                       a
                                       =
                                       
                                          v
                                          i
                                       
                                       cos
                                       θ
                                       
                                          ‐
                                          i
                                          
                                       
                                       
                                          v
                                          j
                                       
                                       cos
                                       θ
                                       
                                          
                                          j
                                          
                                       
                                    
                                 
                                 
                                    
                                       b
                                       =
                                       x
                                       
                                          ‐
                                          i
                                          
                                       
                                       
                                          x
                                          j
                                       
                                    
                                 
                                 
                                    
                                       c
                                       =
                                       
                                          v
                                          i
                                       
                                       sin
                                       θ
                                       
                                          ‐
                                          i
                                          
                                       
                                       
                                          v
                                          j
                                       
                                       sin
                                       θ
                                       
                                          
                                          j
                                          
                                       
                                    
                                 
                                 
                                    
                                       d
                                       =
                                       y
                                       
                                          ‐
                                          i
                                          
                                       
                                       
                                          y
                                          j
                                       
                                       .
                                    
                                 
                              
                           
                        
                     
                  

After a vehicle X in the VD VD1 acquires the nearest AP AP1, it requests the AR AR1 in VD1 to establish the associate relationship with AP1, as shown in Fig. 3. In this way, X can communicate with an IPv6 node according to the following process:
                        
                           1)
                           X sends a packet to its father node Y.

After Y receives the packet, it also forwards the packet to its father node. In this way, the packet finally reaches AP1.

AP1 forwards the packet to AR1 which routes the packet to the destination IPv6 node.

The returned packet destined for X first reaches AR1 which forwards the packet to AP1 according to the associate relationship. Then, AP1 forwards the packet to its neighbor vehicles in VD1.

If the neighbor vehicle receiving the packet detects that its hops from the nearest AP is not less than the one of the vehicle forwarding the packet (or the one of X if it is X's neighbor node), then it abandons the packet. Otherwise, the neighbor vehicle forwards the packet to its neighbor vehicles.

Repeat step 5) until the packet reaches X, as shown in Fig. 3.

Since X only receives the packet forwarded by its father node, the duplicate reception of one packet is avoided.

It is assumed that vehicles X and Y are in the VD VD1 where the AR is AR1, Y is X's neighbor vehicle, X's hops from the nearest AP AP1 is d1, and Y's hops from the nearest AP AP2 is d2. If X detects that inequality (2) is true, then it selects Y as its father node. In inequality (2), D is the route update threshold and a constant. In the scheme, D is set to 2.
                           
                              (2)
                              
                                 
                                    d
                                    1
                                    −
                                    d
                                    2
                                    ≥
                                    D
                                    .
                                 
                              
                           
                        
                     

If Y's nearest AP is different X's one, then X performs the following operations:
                           
                              1)
                              X sends an Update message to AR1, and the payload of the message is the IPv6 address of AP2 in VD1.

The Update message reaches AR1 through AP1. After AR1 receives the Update message, it updates X's associate AP with AP2 and returns an Update_Ack message to X through AP1.

After X receives the Update_Ack message, it marks Y as its father node and updates the nearest AP and the hops from the nearest AP, as shown in Figs. 3 and 4
                                 .

At the time T1, X's nearest AP is AP1, as shown in Fig. 3. At the time T2, X's nearest AP is AP2, as shown in Fig. 4.

In general, the communication range R of an AP is more than the one r of a vehicle, as shown in Fig. 6.

It is assumed that vehicles X and Y are located in the VD VD1, Y is X's father node, Y's father node is the AP AP1 which belongs to both VD1 and the VD VD2, the AR in VD1 is AR1, the AR in VD2 is AR2, and X acquires its home address in the VD where the AR is HAR. When X enters the communication range of AP1, it launches the following operations:
                           
                              1)
                              X sends AP1 an Update message whose destination address is the IPv6 address of AP1 in VD1.

The Update message reaches AP1 through Y. According to the destination address of the message, AP1 can determine that both X and Y are located in VD1, so it sends an Update message to HAR and AR2 respectively and the message payload is X's address and AR2's address.

After HAR receives the Update message, it updates X's associate relationship and then returns an Update_Ack message to AP1. After AR2 receives the Update message, it establishes X's associate relationship with AP1 and then returns the Update_Ack message to AP1.

AP1 receives the Update_Ack messages from both HAR and AR2. If AP1 is within X's one-hop scope, it sends X an Update_Ack message whose payload is its address in VD2 and goes to step 6). Otherwise, AP1 waits and stores the packets destined for X.

After AP1 detects that it is within X's one-hop scope, it sends X an Update_Ack message and forwards the stored packets destined for X to X.

After X receives the Update_Ack message, it updates the nearest AP's IPv6 address and the hops from the nearest AP, as shown in Fig. 5
                                 .

@&#PERFORMANCE EVALUATION@&#

@&#ANALYSIS@&#

The communication range of a vehicle is r, the VD VD1 is the area enclosed by the APs AP1 and AP2, the length of VD1 is k
                        ⋅
                        r(k
                        ≥2), AP2 belongs to both VD1 and the VD VD2, and the AR in VD2 is AR2, as shown in Fig. 6
                        .

Based on Fig. 4(b), the delay T
                           
                              VD
                            of a vehicle performing the intra-VD handover in VD1 is shown in formula (3) where t
                           
                              Update
                           /t
                           
                              Update
                              _
                              Ack
                            is the delay of transmitting an Update/Update_Ack message between two neighbor vehicles, D
                           
                              AP
                              −
                              AR
                            is the distance between AP1/AP2 and AR1, and T
                           
                              L2 is the mobility handover delay in the link layer.
                              
                                 (3)
                                 
                                    
                                       
                                          
                                             
                                                T
                                                VD
                                             
                                             =
                                             
                                                T
                                                
                                                   L
                                                   3
                                                   −
                                                   VD
                                                
                                             
                                             +
                                             
                                                T
                                                
                                                   L
                                                   2
                                                
                                             
                                          
                                       
                                       
                                          
                                             where
                                          
                                       
                                       
                                          
                                             
                                                T
                                                
                                                   L
                                                   3
                                                   −
                                                   VD
                                                
                                             
                                             =
                                             
                                                t
                                                Update
                                             
                                             ⋅
                                             
                                                
                                                   k
                                                   /
                                                   2
                                                
                                             
                                             +
                                             
                                                t
                                                
                                                   Update
                                                   _
                                                   Ack
                                                
                                             
                                             ⋅
                                             
                                                
                                                   k
                                                   /
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   
                                                      t
                                                      Update
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         Update
                                                         _
                                                         Ack
                                                      
                                                   
                                                
                                             
                                             ⋅
                                             
                                                D
                                                
                                                   AP
                                                   −
                                                   AR
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        

Based on Fig. 5(b), when a vehicle moves from VD1 to VD2, the inter-VD mobility handover delay T
                           
                              VDs
                            is shown in formula (4). D
                           
                              AP
                              −
                              HAR
                            is the distance between AP1/AP2 and the AR HAR where the vehicle acquires a home IPv6 address.
                              
                                 (4)
                                 
                                    
                                       
                                          
                                             
                                                T
                                                VDs
                                             
                                             =
                                             
                                                T
                                                
                                                   L
                                                   3
                                                   −
                                                   VDs
                                                
                                             
                                             +
                                             
                                                T
                                                
                                                   L
                                                   2
                                                
                                             
                                          
                                       
                                       
                                          
                                             where
                                          
                                       
                                       
                                          
                                             
                                                T
                                                
                                                   L
                                                   3
                                                   −
                                                   VDs
                                                
                                             
                                             =
                                             2
                                             ⋅
                                             
                                                t
                                                Update
                                             
                                             +
                                             
                                                t
                                                
                                                   Update
                                                   _
                                                   Ack
                                                
                                             
                                             +
                                             max
                                             
                                                
                                                   
                                                      
                                                         
                                                            t
                                                            Update
                                                         
                                                         +
                                                         
                                                            t
                                                            
                                                               Update
                                                               _
                                                               Ack
                                                            
                                                         
                                                      
                                                   
                                                   ⋅
                                                   
                                                      D
                                                      
                                                         AP
                                                         −
                                                         AR
                                                      
                                                   
                                                   ,
                                                   
                                                   
                                                      
                                                         
                                                            t
                                                            Update
                                                         
                                                         +
                                                         
                                                            t
                                                            
                                                               Update
                                                               _
                                                               Ack
                                                            
                                                         
                                                      
                                                   
                                                   ⋅
                                                   
                                                      D
                                                      
                                                         AP
                                                         −
                                                         HAR
                                                      
                                                   
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        

Since AP1/AP2 achieves the communication with HAR through AR1/AR2, D
                           
                              AP
                              −
                              HAR
                            is more than D
                           
                              AP
                              −
                              AR
                           . Therefore, T
                           
                              L3−
                              VDs
                            can be simplified into formula (5).
                              
                                 (5)
                                 
                                    
                                       
                                          
                                             
                                                T
                                                
                                                   L
                                                   3
                                                   −
                                                   VDs
                                                
                                             
                                             =
                                             2
                                             ⋅
                                             
                                                t
                                                Update
                                             
                                             +
                                             
                                                t
                                                
                                                   Update
                                                   _
                                                   Ack
                                                
                                             
                                             +
                                             
                                                
                                                   
                                                      t
                                                      Update
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         Update
                                                         _
                                                         Ack
                                                      
                                                   
                                                
                                             
                                             ⋅
                                             
                                                D
                                                
                                                   AP
                                                   −
                                                   HAR
                                                
                                             
                                          
                                       
                                       
                                          
                                             where
                                          
                                       
                                       
                                          
                                             
                                                D
                                                
                                                   AP
                                                   −
                                                   HAR
                                                
                                             
                                             ≥
                                             2
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        

In a road whose size is X miles, the total mobility handover delay T
                           
                              Total
                            is shown in formula (6).
                              
                                 (6)
                                 
                                    
                                       
                                          
                                             
                                                T
                                                Total
                                             
                                             =
                                             
                                                X
                                                
                                                   k
                                                   ⋅
                                                   r
                                                
                                             
                                             
                                                
                                                   
                                                      T
                                                      VD
                                                   
                                                   +
                                                   
                                                      T
                                                      VDs
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             where
                                          
                                       
                                       
                                          
                                             
                                                T
                                                VD
                                             
                                             ≤
                                             
                                                T
                                                VDs
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        

The main goal of this scheme is to reduce the handover frequency and decrease the handover delay. Therefore, from formula (6) it can be seen that T
                           
                              Total
                            has the optimal value when k is equal to 4.

In [38,39], it has been demonstrated that it is a reasonable assumption that vehicle is distributed in Poisson. Therefore, in Fig. 6 vehicles are distributed in Poisson, and ρ is the vehicle density measured in vehicles per meter (vpm). When k is equal to 4, the length of the routing path from a vehicle to the nearest AP is 2. It is assumed that the horizontal ordinate of an AP is 0. Then, for a vehicle which is located at the horizontal ordinate x in [0, 2r], p1(x) represents the probability of the vehicle communicating directly with the nearest AP, and p2(x) means the probability of the vehicle communicating with the nearest AP through a neighbor vehicle which is directly connected to the AP. Based on [40], p1(x) and p2(x) are shown in formulas (7) and (8) where g
                           
                              AP
                           (x) is the probability of a vehicle and an AP separated by a distance x directly communicating, and g
                           
                              v
                           (x) is the probability of two vehicles separated by a distance x directly communicating.
                              
                                 (7)
                                 
                                    
                                       
                                          p
                                          1
                                       
                                       
                                          x
                                       
                                       =
                                       
                                          g
                                          AP
                                       
                                       
                                          x
                                       
                                    
                                 
                              
                           
                           
                              
                                 (8)
                                 
                                    
                                       
                                          p
                                          2
                                       
                                       
                                          x
                                       
                                       =
                                       1
                                       −
                                       
                                          e
                                          
                                             −
                                             
                                                
                                                   
                                                      ∫
                                                      0
                                                      
                                                         2
                                                         r
                                                      
                                                   
                                                   
                                                      
                                                         g
                                                         v
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      x
                                                      −
                                                      y
                                                   
                                                
                                             
                                             ρ
                                             
                                                p
                                                1
                                             
                                             
                                                y
                                             
                                             dy
                                          
                                       
                                       .
                                    
                                 
                              
                           
                        

In the intra-VD mobility management process, the handover in the network layer (L3) is performed before the one in the link layer (L2), that is, during the handover process in L3 a vehicle can still receive the packets from the original AP. Therefore, the packet loss rate P
                           
                              VD
                            is shown in formula (9). In the inter-VD mobility management process, a vehicle can receive the packets from the same AP. Therefore, the packet loss rate P
                           
                              VDs
                            is shown in formula (10) where v is the average speed of a vehicle.
                              
                                 (9)
                                 
                                    
                                       
                                          P
                                          VD
                                       
                                       =
                                       
                                          
                                             
                                                T
                                                
                                                   L
                                                   2
                                                
                                             
                                             /
                                             
                                                
                                                   2
                                                   r
                                                   /
                                                   v
                                                
                                             
                                          
                                       
                                       ⋅
                                       
                                          p
                                          2
                                       
                                       
                                          x
                                       
                                       ;
                                       
                                       r
                                       <
                                       x
                                       ≤
                                       2
                                       r
                                    
                                 
                              
                           
                           
                              
                                 (10)
                                 
                                    
                                       
                                          P
                                          VDs
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               R
                                                               −
                                                               r
                                                            
                                                         
                                                         /
                                                         v
                                                         −
                                                         
                                                            T
                                                            VDs
                                                         
                                                      
                                                   
                                                   /
                                                   
                                                      
                                                         4
                                                         r
                                                         /
                                                         v
                                                         )
                                                      
                                                   
                                                   ⋅
                                                   
                                                      p
                                                      2
                                                   
                                                   
                                                      x
                                                   
                                                   ;
                                                   
                                                   
                                                      
                                                         R
                                                         −
                                                         r
                                                      
                                                   
                                                   /
                                                   v
                                                   >
                                                   
                                                      T
                                                      VDs
                                                   
                                                   
                                                   and
                                                   
                                                   r
                                                   <
                                                   x
                                                   ≤
                                                   R
                                                
                                             
                                             
                                                
                                                   0
                                                   ;
                                                   
                                                   
                                                      
                                                         R
                                                         −
                                                         r
                                                      
                                                   
                                                   /
                                                   v
                                                   ≤
                                                   
                                                      T
                                                      VDs
                                                   
                                                
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           
                        

Based on the mathematical methods [40], g
                           
                              AP
                           (x) and g
                           
                              v
                           (x) can be calculated according to formulas (11) and (12). In this way, P
                           
                              VD
                            and P
                           
                              VDs
                            can be calculated.
                              
                                 (11)
                                 
                                    
                                       
                                          g
                                          AP
                                       
                                       
                                          x
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   1
                                                   ;
                                                   
                                                   x
                                                   ≤
                                                   r
                                                
                                             
                                             
                                                
                                                   0
                                                   ;
                                                   
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (12)
                                 
                                    
                                       
                                          g
                                          v
                                       
                                       
                                          x
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   1
                                                   ;
                                                   
                                                   x
                                                   ≤
                                                   r
                                                
                                             
                                             
                                                
                                                   0
                                                   ;
                                                   
                                                   otherwise
                                                
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           
                        


                        NS-2 is used as the simulation environment, and according to reference [41] the simulation parameters are shown in Table 2
                        .

When the communication range of a vehicle is 250m, the mobility handover delay and packet loss rate based on speed are shown in Figs. 7 and 8
                        
                        .

From Figs. 7 and 8, it can be seen that the simulation data verify the theoretical analysis results.

With the increase in the speed, the frequency of a vehicle performing the intra-VD/inter-VD mobility handover increases and the link stability weakens, so both the network traffic and the packet loss rate grow. Since the retransmission of the lost packets incurs the extra delay, there is a slight increment in the delay, as shown in Fig. 7. The packet loss rate of the proposed scheme is simulated in two situations. In the first situation, if a vehicle is beyond the nearest AP's one-hop scope after the handover process in L3 ends, then the AP stores the packets destined for the vehicle. After the vehicle is located within the AP's one-hop scope, the AP forwards the packets to the vehicle. In the second situation, the nearest AP does not store the packets destined for the vehicle. From Fig. 8, it can be seen that in the first situation the packet loss rate is significantly reduced.

When the average speed is 10m/s, the mobility handover delay and packet loss rate based on communication range are shown in Figs. 9 and 10
                        
                        .

From Figs. 9 and 10, it can be seen that the simulation data verify the theoretical analysis results.

With the increase in the communication range, the frequency of a vehicle performing the intra-VD/inter-VD mobility management decreases, so the network traffic reduces and the network performance improves. As a result, the packet loss rate reduces and the additional delay caused by the retransmission of the lost packets also decreases, so there is a slight decrement in the delay, as shown in Figs. 9 and 10. In Fig. 10, the packet loss rate of the proposed scheme is simulated in two situations, and it can be seen that in the first situation the packet loss rate is significantly reduced.

We compare the proposed scheme with the standard framework [1] with Proxy Mobile IPv6. When the communication range of a vehicle is 250m, the mobility handover delay and packet loss rate comparison based on speed are shown in Figs. 11 and 12
                        
                        .

With the increase in the speed, the frequency of a vehicle performing the intra-VD/inter-VD mobility management increases and the link stability weakens, so both the network traffic and the packet loss rate grow. The retransmission of the lost packets incurs the extra delay, so the handover delays in both the proposed scheme and the standard framework increase, as shown in Figs. 11 and 12.

In the proposed scheme, when the speed increases, the frequency of a vehicle performing the inter-VD handover grows. Since the delay of the inter-VD mobility handover is more than the one of the intra-VD mobility handover, the average delay increases. In the standard framework, during the mobility handover process, a vehicle has to be configured with a care-of address, so the delay is more than the one in the proposed scheme. Moreover, when the speed increases, the frequency of performing the mobility handover also grows. As a result, a vehicle's care-of address frequently changes, so the packet loss rates increase and the extra delay caused by the retransmission of lost packets also grows. Therefore, the packet loss rate is more than the one in the proposed scheme, as shown in Figs. 11 and 12.

When the average speed is 10m/s, the mobility handover delay and packet loss rate based on communication range are shown in Figs. 13 and 14
                        
                        .

With the increase in the communication range, the frequency of a vehicle performing the intra-VD/inter-VD mobility handover decreases, so the network traffic reduces and the network performance improves. As a result, the packet loss rate reduces and the additional delay caused by the retransmission of the lost packets also decreases, so there is a slight decrement in the delay, as shown in Figs. 13 and 14. In the standard framework, during the mobility handover process, a vehicle has to be configured with a care-of address, so the delay is more than the one in the proposed scheme. Moreover, the change of a vehicle's care-of address can cause the packet loss, so the packet loss is more than the one in the proposed scheme.

@&#CONCLUSION@&#

In order to overcome the limitations in the standard framework, this paper proposes a mobility management solution which is based on address configuration and routing algorithm. From the perspectives of both theory and simulation, the performance of the proposed scheme is analyzed and evaluated, and the data results show that the protocol shortens the mobility handover delay and lowers the packet loss.

@&#ACKNOWLEDGMENTS@&#

This work is supported by National Natural Science Foundation of China (61202440).

@&#REFERENCES@&#

