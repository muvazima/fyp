@&#MAIN-TITLE@&#Branch-and-price-and-cut for the multiple traveling repairman problem with distance constraints

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Introduced a new TRP variant that considers multiple vehicles and distance constraint.


                        
                        
                           
                           Designed a tailored branch-and-price-and-cut algorithm for the problem.


                        
                        
                           
                           Proposed a bounded bi-directional label-setting algorithm for the pricing subproblem.


                        
                        
                           
                           Identified the best branch-and-price-and-cut implementation by extensive experiments.


                        
                        
                           
                           Produced benchmark results for future researchers of the problem.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Branch-and-price

Branch-and-price-and-cut

Traveling repairmen problem

Distance constraint

@&#ABSTRACT@&#


               
               
                  In this paper, we extend the multiple traveling repairman problem by considering a limitation on the total distance that a vehicle can travel; the resulting problem is called the multiple traveling repairmen problem with distance constraints (MTRPD). In the MTRPD, a fleet of identical vehicles is dispatched to serve a set of customers. Each vehicle that starts from and ends at the depot is not allowed to travel a distance longer than a predetermined limit and each customer must be visited exactly once. The objective is to minimize the total waiting time of all customers after the vehicles leave the depot. To optimally solve the MTRPD, we propose a new exact branch-and-price-and-cut algorithm, where the column generation pricing subproblem is a resource-constrained elementary shortest-path problem with cumulative costs. An ad hoc label-setting algorithm armed with bidirectional search strategy is developed to solve the pricing subproblem. Computational results show the effectiveness of the proposed method. The optimal solutions to 179 out of 180 test instances are reported in this paper. Our computational results serve as benchmarks for future researchers on the problem.
               
            

@&#INTRODUCTION@&#

The traveling repairman problem (TRP) has been extensively studied by a large number of researchers (e.g., Afrati, Cosmadakis, Papadimitrious, Papageorgiou, & Papakostantinou (1986), García, Jodrá, & Tejel (2002), and Salehipour, Sörensen, Goos, & Bräysy (2011)); this problem is also termed the minimum latency problem (Arora & Karakostas, 2003; Archer, Levin, & Williamson, 2008; Blum et al., 1994), the traveling deliveryman problem (Fischetti, Laporte, & Martello, 1993; Méndez-Díaz, Zabala, & Lucena, 2008; Minieka, 1989) and the cumulative traveling salesman problem (Bianco, Mingozzi, & Ricciardelli, 1993). The TRP is defined on a complete graph G
                     =(V, E), where V
                     ={0,1,…,
                     n,
                     n
                     +1} is the vertex set and E
                     ={(i, j): i, j
                     ∈
                     V, i
                     ≠
                     j, i
                     ≠
                     n
                     +1, j
                     ≠0} is the edge set. Vertices 0 and n
                     +1 represent the exit from and the entrance to the depot, respectively. We denote the vertices representing the set of n customers by V
                     
                        C
                     
                     ={1,…,
                     n}. The repairman (henceforth referred to as vehicle) is assumed to travel at a constant speed. Each edge (i, j) has a non-negative length d
                     
                        i,j
                      and requires a non-negative traversing time t
                     
                        i,j
                     , which is symmetric, i.e., t
                     
                        i,j
                     
                     =
                     t
                     
                        j,i
                     , and satisfies the triangle inequality rule. The objective of the TRP is to find a Hamiltonian tour on G, starting from vertex 0 and ending at vertex n
                     +1, which minimizes 
                        
                           
                              
                                 ∑
                              
                              
                                 i
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       C
                                    
                                 
                              
                           
                           
                           
                              
                                 l
                              
                              
                                 i
                              
                           
                        
                     , where l
                     
                        i
                      denotes the waiting time of customer i after the vehicle leaves vertex 0. A direct generalization of the TRP is the multiple traveling repairman problem (MTRP) that considers K identical vehicles (Fakcharoenphol, Harrelson, & Rao, 2007). Applications of the TRP and MTRP can be found in routing pizza deliverymen, routing automated guided vehicles through cells in a flexible manufacturing system or scheduling machines to minimize mean flow time for jobs (Fischetti et al., 1993).

This paper studies an extension of the MTRP by involving a distance constraint that the route length (or duration) of each vehicle cannot exceed a predetermined limit L. This type of constraint usually stems from regulations on working hours for workers or arises in the home delivery of perishable products. We call the resulting problem the multiple traveling repairman problem with distance constraints (MTRPD) whose objective is to find K routes such that each vertex is visited exactly once, the distance constraint is respected and the total waiting time of all customers is minimized. Examples of other vehicle routing models that incorporate the distance constraint can be found in Laporte, Nobert, and Desrochers (1985), Li, Simchi-Levi, and Desrochers (1992), and Erera, Morales, and Savelsbergh (2010).

The MTRP can be viewed as a variant of the multiple traveling salesman problem (m-TSP) (Bektas, 2006; Svestka & Huckfeldt, 1973). Although many researchers have studied the TRP, the literature on the MTRP is surprisingly limited. The only prior study we can find in existing literature is Fakcharoenphol et al. (2007). They presented a polynomial-time 8.497γ-approximation algorithm for the MTRP, where γ denotes the best polynomial-time approximation factor possible for the k minimum spanning tree (k-MST) problem (Arora & Karakostas, 2006).

Apart from the MTRPD, there exist several other extensions of the MTRP in the literature. Bennett and Gazis (1972) introduced a school bus routing problem (SBRP) in which a fleet of school buses is dispatched to take pupils from pick-up points to school. Each bus has a fixed capacity and each pick-up point has a given demand, represented by the number of pupils. The objective of this problem is to minimize the weighted sum of the total bus travel time and the total pupil travel time. Li and Fu (2002) described a case study of routing school bus for Hong Kong kindergartens. They formulated the problem as a multi-objective combinatorial optimization problem with four types of objectives, which are prioritized in the following order: (1) minimize the total number of buses required; (2) minimize the total travel time spent by all pupils; (3) minimize the total bus travel time; and (4) balance the loads and travel times among all buses. For an overview of the SBRP, we refer the reader to Park and Kim (2010).

In the SBRP, it is obvious that the demand at each pick-up point must be integer. When the vertex demand is allowed to be a real number, the resulting problem is called the cumulative vehicle routing problem (CumVRP) (Kara, Kara, & Yetiş, 2008; Ngueveu, Prins, & Wolfler Calvo, 2010; Ribeiro & Laporte, 2012). The CumVRP is the same as the classical capacitated vehicle routing problem (CVRP) (Toth & Vigo, 2002) except that the cost of traversing an edge is the product of length and flow of the edge. It has been shown that the MTRP is a special case of the delivery formulation of the CumVRP; we refer the reader to Kara et al. (2008) for details of the proof. The CumVRP can be further regarded as a special case of the weighted vehicle routing problem (WVRP) proposed by Zhang, Tang, Pan, and Yuan (2010). The total cost to be minimized in the WVRP consists of three components: (1) the fixed cost of dispatching a vehicle; (2) the cost per unit travel distance; and (3) the constant surcharge per unit weight per unit distance. Later, the WVRP was extended to include multiple depots by Zhang, Tang, and Fung (2011).

When the surcharge per unit weight per unit distance is a function of the vehicle weight, the WVRP is generalized to the vehicle routing problem with toll-by-weight scheme (VRPTBW) (Shen, Qin, & Lim, 2009; Zhang, Qin, Zhu, & Lim, 2012). To date, over twenty-five Chinese provinces have implemented the toll-by-weight schemes, all of which are monotonically increasing functions of the vehicle weight. Denoting by the decision variable w
                     
                        i,j
                      the weight of the vehicle traversing edge (i, j) and assuming the surcharge per unit distance is calculated based on a toll function f(w
                     
                        i,j
                     ), the objective of the VRPTBW is to minimize 
                        
                           
                              
                                 ∑
                              
                              
                                 i
                                 ∈
                                 V
                              
                           
                           
                              
                                 ∑
                              
                              
                                 j
                                 ∈
                                 V
                              
                           
                           
                           
                              
                                 d
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           f
                           (
                           
                              
                                 w
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           )
                        
                     . Consider the case where the toll function has the following form:
                        
                           
                              f
                              (
                              
                                 
                                    w
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                0
                                             
                                             
                                                if
                                                
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                =
                                                0
                                             
                                          
                                          
                                             
                                                α
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                +
                                                β
                                             
                                             
                                                if
                                                
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                >
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where α and β are non-negative parameters. If α
                     =0 and β
                     =1, then VRPTBW reduces to the classical CVRP problem. If α
                     =1 and β
                     =0, then VRPTBW reduces to the CumVRP. If α
                     >0 and β
                     =0, then 
                        
                           
                              
                                 ∑
                              
                              
                                 i
                                 ∈
                                 V
                              
                           
                           
                              
                                 ∑
                              
                              
                                 j
                                 ∈
                                 V
                              
                           
                           
                           
                              
                                 d
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           f
                           (
                           
                              
                                 w
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           )
                        
                      can be written as 
                        
                           
                              
                                 ∑
                              
                              
                                 i
                                 ∈
                                 V
                              
                           
                           
                              
                                 ∑
                              
                              
                                 j
                                 ∈
                                 V
                              
                           
                           
                           α
                           
                              
                                 d
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           
                              
                                 w
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                        
                     , which is actually the third cost component of the WVRP (Zhang et al., 2010).

The workover rig routing problem (WRRP) introduced by Aloise et al. (2006) is another variant of the MTRP. In the WRRP, a set of onshore oil wells needs maintenance service from a fleet of heterogeneous workover rigs. For each well, its production loss equals the product of the production loss rate and the time at which its required service is completed. The objective of this problem is to find a route for each workover rig such that the total production loss of the wells over a finite horizon is minimized. In recent years, the WRRP has also been studied by several other researchers, such as Pacheco, Ribeiro, and Mauri (2010), Ribeiro, Laporte, and Mauri (2012), and Ribeiro, Desaulniers, and Desrosiers (2012).

After reviewing prior studies with regard to the MTRP and its variants, we find that almost all relative articles except Ribeiro, Desaulniers, et al. (2012) proposed near-optimal algorithms, such as approximation algorithm (Fakcharoenphol et al., 2007), heuristics (Bennett & Gazis, 1972; Li & Fu, 2002), scatter search algorithms (Zhang et al., 2010, 2011), simulated annealing algorithm (Shen et al., 2009) and variable neighborhood search (Aloise et al., 2006). In Ribeiro, Desaulniers, et al. (2012), the authors proposed a branch-and-price-and-cut algorithm for the WRRP, where their column generation pricing subproblem was solved by a mono-directional label-setting algorithm.

In this paper, we provide an exact branch-and-price-and-cut algorithm for the MTRPD. The pricing subproblem of the MTRPD is called the resource-constrained elementary shortest path problem with cumulative costs. Although label-setting algorithms have been successfully applied to similar pricing subproblems in several previous articles, e.g., Ribeiro, Desaulniers, et al. (2012) and Ioachim et al. (1998), our work is the first attempt to develop bounded bidirectional label-setting algorithm for solving it. To the best of our knowledge, branch-and-price-and-cut method is the most successful exact algorithm for the vehicle routing models (Baldacci, Christofides, & Mingozzi, 2008; Fukasawa et al., 2006), such as the vehicle routing problem with time windows (VRPTW) (Desaulniers, Lessard, & Hadjar, 2008; Jepsen, Petersen, Spoorendonk, & Pisinger, 2008), the split delivery VRPTW (Archetti, Bouchard, & Desaulniers, 2011; Desaulniers, 2010), the capacitated location-routing problem (Contardo, Cordeau, & Gendron, 2011), the heterogeneous fleet vehicle routing problem (Pessoa, Uchoa, & de Aragão, 2009) and the pickup and delivery problem with time windows (Ropke & Cordeau, 2009).

The remainder of the paper is structured as follows. Section 2 presents an arc-flow formulation and a set-covering formulation for the MTRPD. This is followed in Section 3 with a description of column generation, consisting of the pricing subproblem, the label-setting algorithm for solving the pricing subproblem and three acceleration strategies. Subsequently, we present other main components of the branch-and-price-and-cut algorithm in Section 4. Our experimental results are given in Section 5, and we conclude our paper in Section 6 with some closing remarks.

The arc-flow formulation of the MTRPD uses two types of decision variables: a binary decision variable x
                     
                        i,j,k
                      that equals 1 if vehicle k directly travels from vertex i to vertex j, and 0 otherwise; and a non-negative variable y
                     
                        i,k
                      that represents the time at which vehicle k arrives at vertex i. We denote by V
                     +(i)={j
                     ∈
                     V∣(i, j)∈
                     E} and V
                     −(i)={j
                     ∈
                     V∣(j, i)∈
                     E} the immediate successors and predecessors of vertex i in G. Letting F be the set of K vehicles and M be a sufficiently large positive number, the arc-flow formulation is given as:
                        
                           (1)
                           
                              z
                              =
                              min
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       F
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             C
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    i
                                    ,
                                    k
                                 
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              s
                              .
                              t
                              .
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       F
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             +
                                          
                                       
                                       (
                                       i
                                       )
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                 
                              
                              =
                              1
                              ,
                              
                              ∀
                              i
                              ∈
                              
                                 
                                    V
                                 
                                 
                                    C
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             +
                                          
                                       
                                       (
                                       0
                                       )
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    0
                                    ,
                                    j
                                    ,
                                    k
                                 
                              
                              =
                              1
                              ,
                              
                              ∀
                              k
                              ∈
                              F
                           
                        
                     
                     
                        
                           (4)
                           
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             +
                                          
                                       
                                       (
                                       i
                                       )
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             -
                                          
                                       
                                       (
                                       i
                                       )
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    j
                                    ,
                                    i
                                    ,
                                    k
                                 
                              
                              ,
                              
                              ∀
                              k
                              ∈
                              F
                              ,
                              
                              i
                              ∈
                              
                                 
                                    V
                                 
                                 
                                    C
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             -
                                          
                                       
                                       (
                                       n
                                       +
                                       1
                                       )
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    n
                                    +
                                    1
                                    ,
                                    k
                                 
                              
                              =
                              1
                              ,
                              
                              ∀
                              k
                              ∈
                              F
                           
                        
                     
                     
                        
                           (6)
                           
                              
                              
                                 
                                    y
                                 
                                 
                                    j
                                    ,
                                    k
                                 
                              
                              ⩾
                              
                                 
                                    y
                                 
                                 
                                    i
                                    ,
                                    k
                                 
                              
                              +
                              
                                 
                                    t
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              +
                              M
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                 
                              
                              -
                              1
                              )
                              ,
                              
                              ∀
                              k
                              ∈
                              F
                              ,
                              
                              (
                              i
                              ,
                              j
                              )
                              ∈
                              E
                           
                        
                     
                     
                        
                           (7)
                           
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       F
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                       ∈
                                       E
                                       :
                                       i
                                       ∈
                                       V
                                       ⧹
                                       S
                                       ,
                                       j
                                       ∈
                                       S
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                 
                              
                              ⩾
                              1
                              ,
                              
                              ∀
                              S
                              ⊂
                              
                                 
                                    V
                                 
                                 
                                    C
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                              0
                              ⩽
                              
                                 
                                    y
                                 
                                 
                                    i
                                    ,
                                    k
                                 
                              
                              ⩽
                              L
                              ,
                              
                              ∀
                              k
                              ∈
                              F
                              ,
                              
                              i
                              ∈
                              V
                           
                        
                     
                     
                        
                           
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                    ,
                                    k
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ,
                              
                              ∀
                              k
                              ∈
                              F
                              ,
                              
                              (
                              i
                              ,
                              j
                              )
                              ∈
                              E
                           
                        
                     The objective function (1) aims at minimizing the total waiting time of all customers. Constraints (2) ensure that each customer must be visited exactly once. Constraints (3) and (5) guarantee that each vehicle starts from vertex 0 and ends at vertex n
                     +1. Constraints (4) are the flow conservation constraints. The relationship between the arrival times at two consecutive vertices visited by the same vehicle should satisfy Constraints (6) and each arrival time is restricted within interval [0, L] by Constraints (8). Constraints (7) are subtour elimination (SE) cuts that are redundant but can tighten the linear relaxation of the formulation. If we remove Constraints (7), the remaining formulation can be directly handled by some commercial integer programming solvers, e.g., ILOG CPLEX.

After conducting some preliminary experiments, we find that the size of the instances optimally solved by CPLEX is quite limited. To achieve optimal solutions for instances of practical size, we reformulate the problem as a set-covering model through Dantzig–Wolfe decomposition and develop an exact branch-and-price-and-cut algorithm to solve it. Let Ω be the set of all feasible routes for the vehicles. A route r
                     ∈
                     Ω can be written as r
                     =(v
                     0,
                     v
                     1,…,
                     v
                     ∣r∣,
                     v
                     ∣r∣+1), where ∣r∣ is the number of vertices covered by route r, v
                     0
                     =0 and v
                     ∣r∣+1
                     =
                     n
                     +1. The cost of route r is known in advance by:
                        
                           
                              
                                 
                                    c
                                 
                                 
                                    r
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       |
                                       r
                                       |
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       0
                                    
                                    
                                       j
                                       =
                                       i
                                       -
                                       1
                                    
                                 
                              
                              
                                 
                                    t
                                 
                                 
                                    j
                                    ,
                                    j
                                    +
                                    1
                                 
                              
                           
                        
                     We denote by parameters a
                     
                        i,r
                      and b
                     
                        i,j, r
                      the number of times route r visits customer i
                     ∈
                     V
                     
                        C
                      and the number of times route r traverses edge (i, j), respectively. In our problem, each customer can be visited exactly once, so parameters a
                     
                        i,r
                      and b
                     
                        i,j, r
                      must be binary. If the routes containing cycles are allowed, these parameters can take integers greater than one. Moreover, for each route r
                     ∈
                     Ω we define a binary variable θ
                     
                        r
                      which takes one if this route is selected in the solution, and zero otherwise. Obviously, each θ
                     
                        r
                      corresponds to a column a
                     
                        r
                     
                     =(a
                     1,r
                     ,…,
                     a
                     
                        n,r
                     ). For the sake of brevity, we further define θ to be a vector variable that contains all θ
                     
                        r
                     . With the above notations, the set-covering formulation is as follows:
                        
                           (9)
                           
                              z
                              =
                              min
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       r
                                       ∈
                                       Ω
                                    
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    r
                                 
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              s
                              .
                              t
                              .
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       r
                                       ∈
                                       Ω
                                    
                                 
                              
                              
                                 
                                    a
                                 
                                 
                                    i
                                    ,
                                    r
                                 
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                              ⩾
                              1
                              ,
                              
                              ∀
                              i
                              ∈
                              
                                 
                                    V
                                 
                                 
                                    C
                                 
                              
                           
                        
                     
                     
                        
                           (11)
                           
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       r
                                       ∈
                                       Ω
                                    
                                 
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                              ⩽
                              K
                           
                        
                     
                     
                        
                           (12)
                           
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ,
                              
                              ∀
                              r
                              ∈
                              Ω
                           
                        
                     The objective function (9) minimizes the total cost of the selected routes. Constrains (10) ensure that every customer is visited at least once, which enlarges the feasible region of the original problem by allowing each customer to be visited more than once. However, the optimal solutions of the modified problem must be the same as those of the original problem if the triangle inequality rule is satisfied. In other words, the optimal solutions of the set-covering formulation would not visit any customer more than once. Since only K vehicles are available, Constraint (11) applies. Like Constraints (7) in the arc-flow formulation, we can also incorporate the SE cuts to tighten the set-covering formulation, which has the following form:
                        
                           (13)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                       ∈
                                       E
                                       :
                                       i
                                       ∈
                                       V
                                       ⧹
                                       S
                                       ,
                                       j
                                       ∈
                                       S
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       r
                                       ∈
                                       Ω
                                    
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    i
                                    ,
                                    j
                                    ,
                                    r
                                 
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                              ⩾
                              1
                              ,
                              
                              ∀
                              S
                              ⊂
                              
                                 
                                    V
                                 
                                 
                                    C
                                 
                              
                           
                        
                     
                  

In practice, even for a small-size instance, model (9)–(13) contains a huge number of variables (i.e., columns) and SE cuts, which cannot be written out explicitly. Hence, this model cannot be directly handled by CPLEX. Our proposed branch-and-price-and-cut algorithm is not required to enumerate all columns but generate new columns as needed. Moreover, we relax all SE cuts at the beginning of the algorithm, and add some of them into the model over the course of the branch-and-bound search process. The branch-and-price-and-cut algorithm uses a branch-and-bound framework, where at each search tree node column generation is applied to compute a lower bound and SE cuts are dynamically added to further improve the lower bound.

In the remaining paper, we distinguish between the terms node and vertex, which are usually considered the same and are used interchangeably in standard graph terminology; we specify that node refers to the branch-and-bound search tree node, while vertex refers to the vertex in graph G.

Column generation (Desaulniers, Desrosiers, & Solomon, 2005) is applied to solve the linear relaxation of the model (9)–(12) augmented by appropriate branching decisions and SE cuts, which is called the linear master problem (LMP). The optimal solution value of the LMP is a lower bound of its associated branch-and-bound node. Column generation cannot directly solve the LMP due to its inability to enumerate all columns. Instead, it is an iterative procedure that alternates between solving a restricted linear master problem (RLMP) and a pricing subproblem. The RLMP is the LMP restricted to a subset 
                        
                           
                              
                                 Ω
                              
                              
                                 ¯
                              
                           
                           ⊆
                           Ω
                        
                      of columns, which can be optimally solved by simplex method. The goal of solving the pricing subproblem is to identify the columns in 
                        
                           Ω
                           ⧹
                           
                              
                                 Ω
                              
                              
                                 ¯
                              
                           
                        
                      that have negative reduced costs with respect to the dual optimal solution of the current RLMP. If no such column is found, we terminate the column generation procedure with an optimal solution of the LMP, which equals the optimal solution of the current RLMP. Otherwise, we incorporate the identified negative reduced cost columns into the current RLMP and restart the column generation iteration.

In this section, we focus on describing the column generation procedure applied to the LMP at the root branch-and-bound node, which does not involve branching constraints. We first present the pricing subproblem and then describe a basic (mono-directional search) label-setting algorithm to optimally solve it. Subsequently, we detail four strategies to accelerate the column generation procedure, which are tabu search column generator, bounded bidirectional search, state space relaxation and decremental state-space relaxation. The LMPs at other branch-and-bound nodes can be solved using this column generation procedure with minor modifications, which is elaborated in Section 4.4.

At each branch-and-bound node, the column generation procedure and the cut separation algorithm are performed alternatively. The cut separation algorithm is invoked immediately after the column generation procedure. Once new SE cuts are added into the RLMP, the column generation procedure is restarted to solve the modified RLMP. We assume that at the root node some columns and SE cuts have already been added into the RLMP, which therefore has the following form:
                           
                              (14)
                              
                                 
                                    
                                       z
                                    
                                    
                                       RLMP
                                    
                                 
                                 =
                                 
                                    min
                                 
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          r
                                          ∈
                                          
                                             
                                                Ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       c
                                    
                                    
                                       r
                                    
                                 
                                 
                                    
                                       θ
                                    
                                    
                                       r
                                    
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          r
                                          ∈
                                          
                                             
                                                Ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       a
                                    
                                    
                                       i
                                       ,
                                       r
                                    
                                 
                                 
                                    
                                       θ
                                    
                                    
                                       r
                                    
                                 
                                 ⩾
                                 1
                                 ,
                                 
                                 ∀
                                 i
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       C
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          r
                                          ∈
                                          
                                             
                                                Ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       θ
                                    
                                    
                                       r
                                    
                                 
                                 ⩽
                                 K
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          ∈
                                          E
                                          :
                                          i
                                          ∈
                                          V
                                          ⧹
                                          S
                                          ,
                                          j
                                          ∈
                                          S
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          r
                                          ∈
                                          
                                             
                                                Ω
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       b
                                    
                                    
                                       i
                                       ,
                                       j
                                       ,
                                       r
                                    
                                 
                                 
                                    
                                       θ
                                    
                                    
                                       r
                                    
                                 
                                 ⩾
                                 1
                                 ,
                                 
                                 ∀
                                 S
                                 ∈
                                 Γ
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                 0
                                 ⩽
                                 
                                    
                                       θ
                                    
                                    
                                       r
                                    
                                 
                                 ⩽
                                 1
                                 ,
                                 
                                 ∀
                                 r
                                 ∈
                                 
                                    
                                       Ω
                                    
                                    
                                       ¯
                                    
                                 
                              
                           
                        where each element in set Γ is a subset of V
                        
                           C
                        , representing an individual SE cut.

We check whether the solution of the LMP reaches optimality by solving the pricing subproblem. Below we will use π
                        =(π
                        1,…,
                        π
                        
                           n
                        ), μ and 
                           
                              λ
                              =
                              (
                              
                                 
                                    λ
                                 
                                 
                                    
                                       
                                          S
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    λ
                                 
                                 
                                    
                                       
                                          S
                                       
                                       
                                          |
                                          Γ
                                          |
                                       
                                    
                                 
                              
                              )
                           
                         as the dual variables associated with Constraints (15)–(17), respectively. Assuming that (
                           
                              
                                 
                                    π
                                 
                                 
                                    ˆ
                                 
                              
                              ,
                              
                                 
                                    μ
                                 
                                 
                                    ˆ
                                 
                              
                              ,
                              
                                 
                                    λ
                                 
                                 
                                    ˆ
                                 
                              
                           
                        ) is the dual optimal solution of the current RLMP, the reduced cost 
                           
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    r
                                 
                              
                           
                         associated with route r
                        ∈
                        Ω is calculated by:
                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 
                                    
                                       c
                                    
                                    
                                       r
                                    
                                 
                                 -
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   ∈
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         C
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      π
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                a
                                             
                                             
                                                i
                                                ,
                                                r
                                             
                                          
                                          -
                                          
                                             
                                                μ
                                             
                                             
                                                ˆ
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   S
                                                   ∈
                                                   Γ
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                             
                                             
                                                S
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   ∈
                                                   E
                                                   :
                                                   i
                                                   ∈
                                                   V
                                                   ⧹
                                                   S
                                                   ,
                                                   j
                                                   ∈
                                                   S
                                                
                                             
                                          
                                          
                                             
                                                b
                                             
                                             
                                                i
                                                ,
                                                j
                                                ,
                                                r
                                             
                                          
                                       
                                    
                                 
                              
                           
                        Based on the above expression, we can formulate the pricing subproblem as follows:
                           
                              (20)
                              
                                 
                                    
                                       z
                                    
                                    
                                       PS
                                    
                                 
                                 =
                                 min
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                C
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   
                                                      π
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                             
                                             
                                                i
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   j
                                                   ∈
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         +
                                                      
                                                   
                                                   (
                                                   i
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                 
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          S
                                          ∈
                                          Γ
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          ∈
                                          E
                                          :
                                          i
                                          ∈
                                          V
                                          ⧹
                                          S
                                          ,
                                          j
                                          ∈
                                          S
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       S
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 +
                                 
                                    
                                       μ
                                    
                                    
                                       ˆ
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                          (
                                          0
                                          )
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       0
                                       ,
                                       j
                                    
                                 
                                 =
                                 1
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                          (
                                          n
                                          +
                                          1
                                          )
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       n
                                       +
                                       1
                                    
                                 
                                 =
                                 1
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                          (
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                          (
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       j
                                       ,
                                       i
                                    
                                 
                                 ⩽
                                 1
                                 ,
                                 
                                 ∀
                                 i
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       C
                                    
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 ⩾
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 +
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 -
                                 1
                                 )
                                 M
                                 ,
                                 
                                 ∀
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 E
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                 0
                                 ⩽
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 ⩽
                                 L
                                 ,
                                 
                                 ∀
                                 i
                                 ∈
                                 V
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 ,
                                 
                                 ∀
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 E
                              
                           
                        where variable y
                        
                           i
                         denotes the arrival time at vertex i and variable x
                        
                           i,j
                         represents the number of times edge (i, j) is traversed. The objective function (20) aims to achieve the minimal reduced cost of all feasible routes. The reduced cost consists of three parts: (1) the arrival time y
                        
                           i
                         of each visited customer, (2) the prize 
                           
                              -
                              
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         at each visited customer; and (3) the prizes associated with some edges traversed by the route. Constraints (21) and (22) require that the route must start from vertex 0 and end at vertex n
                        +1. Constraints (23) ensure that each customer can be visited at most once. Constraints (24) define the relationship between the arrival times of two consecutively visited vertices. The length of the route is restricted to be less than or equal to L by Constraints (25). Solving the pricing subproblem is essentially equivalent to enumerating all feasible routes in Ω. This pricing subproblem has been shown to be 
                           
                              NP
                           
                        -complete in Appendix A, implying that optimally solving its instances is computationally expensive.

In many articles that proposed branch-and-price algorithms for solving the vehicle routing models, the pricing subproblems are usually the elementary shortest path problem with resource constraints (ESPPRC) (Feillet, Dejax, Gendreau, & Gueguen, 2004). A path is called elementary if each vertex is visited at most once. Examples of the ESPPRC can be found in Desrochers, Desrosiers, and Solomon (1992), Gutiérrez-Jarpa, Desaulniers, Laporte, and Marianov (2010) and Azi, Gendreau, and Potvin (2010). Our pricing subproblem is different from the traditional ESPPRC since it considers a cumulative cost y
                        
                           i
                         at each visited customer i. It is a special case of the pricing subproblem of the WRRP Ribeiro, Desaulniers, et al. (2012). Moreover, its version that allows the routes with cycles can be regarded as a special case of the shortest path problem with time windows and time costs (SPPTWTC) introduced by Ioachim, Gélinas, Soumis, and Desrosiers (1998). Both the SPPTWTC and the pricing subproblem of the WRRP have been solved by mono-directional label-setting algorithms. However, we do not find previous articles that applied the label-setting algorithms armed with bidirectional search strategy to solve them or similar problems.

In Ribeiro, Desaulniers, et al. (2012), the authors claimed that the bidirectional search strategy cannot be applied to the pricing subproblem of the WRRP. We cannot make a conclusion on whether there exists a bidirectional label-setting algorithm for their pricing subproblem. However, after carefully analyzing the structure of our pricing subproblem, we find that it can still be solved by a tailored bounded bidirectional label-setting algorithm, which will be detailed in this section.

We optimally solve the pricing subproblem using a label-setting algorithm, which has been applied to the ESPPRC (Feillet et al., 2004; Righini & Salani, 2008) and the shortest path problem with resource constraints (SPPRC) (Irnich & Desaulniers, 2005). The aim of solving the pricing subproblem is to identify the negative reduced cost columns. In our label-setting algorithm, a multi-dimensional label S
                        
                           i
                         = (C
                        
                           i
                        ,
                        L
                        
                           i
                        ,
                        V
                        
                           i,1,…,
                        V
                        
                           i,n
                        ) is defined to represent a state associated with a partial route from vertex 0 to vertex i, where:
                           
                              •
                              
                                 C
                                 
                                    i
                                  is the reduced cost of this partial route;


                                 L
                                 
                                    i
                                  is the amount of distance the vehicle has traveled;


                                 V
                                 
                                    i,k
                                  (1⩽
                                 k
                                 ⩽
                                 n) is a dummy resource indicating whether customer k has already been visited.

At vertex 0, the values of L
                        0 and all V
                        0,k
                         (1⩽
                        k
                        ⩽
                        n) are initialized to zero and the value of C
                        0 is set to 
                           
                              
                                 
                                    μ
                                 
                                 
                                    ˆ
                                 
                              
                           
                        . The value of V
                        
                           i,k
                         would be set to one when vertex k either is covered by the route or cannot be visited in any extension due to the distance constraint. Each vertex may have multiple labels and the optimal solution of the pricing subproblem can be achieved by identifying the minimum-cost label at vertex n
                        +1. Note that labels do not contain any information regarding the order in which the vertices have been visited.

A label S
                        
                           i
                        
                        =(C
                        
                           i
                        ,
                        L
                        
                           i
                        ,
                        V
                        
                           i,1,…,
                        V
                        
                           i,n
                        ) can be extended to vertex j
                        ∈
                        V
                        +(i), generating a new label S
                        
                           j
                        
                        =(C
                        
                           j
                        ,
                        L
                        
                           j
                        ,
                        V
                        
                           j,1,…,
                        V
                        
                           j,n
                        ). We first identify all vertices j that cannot be reached from S
                        
                           i
                        , namely L
                        
                           i
                        
                        +
                        t
                        
                           i,j
                        
                        >
                        L, and accordingly set V
                        
                           i,j
                        
                        =1. For the remaining vertices in V
                        +(i), the labels S
                        
                           j
                         are created according to the following extension functions:
                           
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   L
                                                
                                                
                                                   j
                                                
                                             
                                             =
                                             
                                                
                                                   L
                                                
                                                
                                                   i
                                                
                                             
                                             +
                                             
                                                
                                                   t
                                                
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   j
                                                
                                             
                                             =
                                             
                                                
                                                   C
                                                
                                                
                                                   i
                                                
                                             
                                             +
                                             
                                                
                                                   L
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      
                                                         π
                                                      
                                                      
                                                         ˆ
                                                      
                                                   
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      S
                                                      ∈
                                                      Γ
                                                      :
                                                      i
                                                      ∈
                                                      V
                                                      ⧹
                                                      S
                                                      ,
                                                      j
                                                      ∈
                                                      S
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         ˆ
                                                      
                                                   
                                                
                                                
                                                   S
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                   ,
                                                   k
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     V
                                                                  
                                                                  
                                                                     i
                                                                     ,
                                                                     k
                                                                  
                                                               
                                                               +
                                                               1
                                                               ,
                                                            
                                                            
                                                               if
                                                               
                                                               k
                                                               =
                                                               j
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     V
                                                                  
                                                                  
                                                                     i
                                                                     ,
                                                                     k
                                                                  
                                                               
                                                               ,
                                                            
                                                            
                                                               if
                                                               
                                                               k
                                                               
                                                               ≠
                                                               
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where we set 
                           
                              
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    n
                                    +
                                    1
                                 
                              
                              =
                              0
                           
                         since each route must start from vertex 0 and end at vertex n
                        +1. In the course of the label-setting algorithm, we cyclically examine all vertices, at each of which all labels that do not have successors would be extended.

Extending a label at vertex i may create as many new labels as the number of its successors. Undoubtedly, the number of labels would increase exponentially with the extension of the labels. To avoid enumerating all labels, a dominance rule is employed in our label-setting algorithm to identify and eliminate the dominated labels. Given two labels S
                        
                           i
                         and 
                           
                              
                                 
                                    
                                       
                                          S
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    
                                       
                                          S
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         is dominated by S
                        
                           i
                         and thus can be safely discarded if 
                           
                              
                                 
                                    C
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    
                                       
                                          C
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    L
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    
                                       
                                          L
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    V
                                 
                                 
                                    i
                                    ,
                                    k
                                 
                              
                              ⩽
                              
                                 
                                    
                                       
                                          V
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    i
                                    ,
                                    k
                                 
                              
                           
                         for all 1⩽
                        k
                        ⩽
                        n, and at least one of the above inequalities is strict. We arbitrarily discard one of two identical labels.

We have implemented the following four techniques to speed up the column generation procedure.

The tabu search algorithm (Glover & Laguna, 1998) we develop for solving the pricing subproblem is similar to the one proposed by Desaulniers et al. (2008). We run the tabu search algorithm multiple times with different initial routes, derived from the basic variables in the optimal solution of the current RLMP. Three local search operators are used: (1) inserting a vertex into the current route, (2) removing a vertex from the current route, and (3) swapping two vertices, one visited by the route and the other unvisited. Each operator corresponds to a neighborhood of the current route and only the neighbors satisfying the distance constraint are retained. The tabu search algorithm keeps a tabu list to prevent the search process from being trapped in local optima. Moves specified by the tabu list are not allowed for ξ iterations, where ξ is a controlling parameter.

The tabu search process iteratively proceeds to the best allowable neighbor (i.e., the neighbor with the least reduced cost) of the current route until the number of iterations exceeds maxIter. We terminate the tabu search algorithm when either all initial solutions have been used up or maxCol routes with negative reduced cost have been obtained. The tabu search stage is able to rapidly identify high quality solutions to the pricing subproblem, whereas we cannot prove whether these solutions are optimal or not. As a result, when the tabu search algorithm fails to identify a negative reduced cost route, we still need to invoke the exact label-setting algorithm.

The bounded bidirectional search strategy is a useful technique for accelerating the label-setting algorithm (Righini & Salani, 2006, 2008); the resulting algorithm is called the bounded bidirectional label-setting algorithm (BBLS). In the BBLS algorithm, partial routes are originated from both vertices 0 and n
                           +1, and accordingly associated labels are called forward labels 
                           
                              
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                              
                            and backward labels 
                           
                              
                                 
                                    
                                       S
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                              
                           . Moreover, each forward (resp. backward) partial route can be extended only if its length is less than L/2, i.e., 
                              
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                                 <
                                 L
                                 /
                                 2
                              
                            (resp. 
                              
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 <
                                 L
                                 /
                                 2
                              
                           ). At vertex 0, we set 
                              
                                 
                                    
                                       C
                                    
                                    
                                       0
                                    
                                    
                                       fw
                                    
                                 
                                 =
                                 
                                    
                                       μ
                                    
                                    
                                       ˆ
                                    
                                 
                                 /
                                 2
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       0
                                    
                                    
                                       fw
                                    
                                 
                                 =
                                 0
                              
                            and 
                              
                                 
                                    
                                       V
                                    
                                    
                                       0
                                       ,
                                       k
                                    
                                    
                                       fw
                                    
                                 
                                 =
                                 0
                              
                            for all 1⩽
                           k
                           ⩽
                           n. The extension functions and dominance rule on forward labels 
                              
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       i
                                       ,
                                       1
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       i
                                       ,
                                       n
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       i
                                       ,
                                       n
                                       +
                                       1
                                    
                                    
                                       fw
                                    
                                 
                                 )
                              
                            have been described in Section 3.2. Hereafter, we describe the extension functions and dominance rule for backward labels.

We use a label 
                              
                                 
                                    
                                       S
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                              
                            
                           
                              
                                 =
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       j
                                       ,
                                       1
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       j
                                       ,
                                       n
                                    
                                    
                                       bw
                                    
                                 
                                 )
                              
                            to represent a state in backward extension. The 
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                    
                                       bw
                                    
                                 
                              
                            associated with all unreachable vertices k from vertex j are set to 1. Compared with the forward label, the backward label has an extra element 
                              
                                 
                                    
                                       D
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                              
                            that denotes the number of customers the backward partial route has visited upon arrival at vertex j. The value of 
                              
                                 
                                    
                                       C
                                    
                                    
                                       n
                                       +
                                       1
                                    
                                    
                                       bw
                                    
                                 
                              
                            is set to 
                              
                                 
                                    
                                       μ
                                    
                                    
                                       ˆ
                                    
                                 
                                 /
                                 2
                              
                            and the values of 
                              
                                 
                                    
                                       L
                                    
                                    
                                       n
                                       +
                                       1
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       n
                                       +
                                       1
                                    
                                    
                                       bw
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       V
                                    
                                    
                                       n
                                       +
                                       1
                                       ,
                                       k
                                    
                                    
                                       bw
                                    
                                 
                              
                            for all 1⩽
                           k
                           ⩽
                           n are set to zero. Fig. 1
                            pictorially shows the forward and backward extensions. When the backward label is extended from vertex j to vertex j
                           +1, the waiting time l
                           
                              j
                            of vertex j equals the waiting time l
                           
                              j+1 of vertex j
                           +1 plus t
                           
                              j+1,j
                           . However, we are not able to know the actual waiting time of each vertex on the backward partial route unless the complete route is achieved. Consequently, we can only say that the waiting time of vertex j is at least t
                           
                              j+1,j
                           . When the label is further extended to vertex j
                           +2, the waiting time of vertex j would become l
                           
                              j+2
                           +
                           t
                           
                              j+2,j+1
                           +
                           t
                           
                              j+1,j
                           , and the waiting time of vertex j
                           +1 is l
                           
                              j+2
                           +
                           t
                           
                              j+2,j+1; thus, the total waiting time should be at least 2t
                           
                              j+2,j+1
                           +
                           t
                           
                              j+1,j
                           . Based on the above observations, when 
                              
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 ⩽
                                 L
                              
                           , we derive the functions for the backward extension from vertex j to vertex i as:
                              
                                 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                =
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                +
                                                
                                                   
                                                      D
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                -
                                                
                                                   
                                                      
                                                         
                                                            π
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         S
                                                         ∈
                                                         Γ
                                                         :
                                                         i
                                                         ∈
                                                         V
                                                         ⧹
                                                         S
                                                         ,
                                                         j
                                                         ∈
                                                         S
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            λ
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                   
                                                   
                                                      S
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                =
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                +
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      D
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                =
                                                
                                                   
                                                      D
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                +
                                                1
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      i
                                                      ,
                                                      k
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                =
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        V
                                                                     
                                                                     
                                                                        j
                                                                        ,
                                                                        k
                                                                     
                                                                     
                                                                        bw
                                                                     
                                                                  
                                                                  +
                                                                  1
                                                                  ,
                                                               
                                                               
                                                                  if
                                                                  
                                                                  k
                                                                  =
                                                                  i
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        V
                                                                     
                                                                     
                                                                        j
                                                                        ,
                                                                        k
                                                                     
                                                                     
                                                                        bw
                                                                     
                                                                  
                                                                  ,
                                                               
                                                               
                                                                  if
                                                                  
                                                                  k
                                                                  
                                                                  ≠
                                                                  
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           The cost 
                              
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                              
                            of the backward partial route counts in the already known minimum waiting times rather than the actual waiting times of all visited customers. Label 
                              
                                 
                                    
                                       S
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                              
                            dominates label 
                              
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                              
                            if 
                              
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ⩽
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ⩽
                                 
                                    
                                       
                                          
                                             L
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ⩽
                                 
                                    
                                       
                                          
                                             D
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       i
                                       ,
                                       k
                                    
                                    
                                       bw
                                    
                                 
                                 ⩽
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                    
                                       i
                                       ,
                                       k
                                    
                                    
                                       bw
                                    
                                 
                              
                            for all 1⩽
                           k
                           ⩽
                           n and at least one of these inequalities is strict. We also arbitrarily discard one of two identical backward labels.

A forward label 
                              
                                 
                                    
                                       S
                                    
                                    
                                       p
                                    
                                    
                                       fw
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       p
                                       ,
                                       1
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       p
                                       ,
                                       n
                                    
                                    
                                       fw
                                    
                                 
                                 )
                              
                            and a backward label 
                              
                                 
                                    
                                       S
                                    
                                    
                                       q
                                    
                                    
                                       bw
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       q
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       q
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       q
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       q
                                       ,
                                       1
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       V
                                    
                                    
                                       q
                                       ,
                                       n
                                    
                                    
                                       bw
                                    
                                 
                                 )
                              
                            can be joined together to form a complete feasible route if both of the following conditions hold:
                              
                                 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      p
                                                   
                                                   
                                                      fw
                                                   
                                                
                                                +
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      q
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                +
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      p
                                                      ,
                                                      q
                                                   
                                                
                                                ⩽
                                                L
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      p
                                                      ,
                                                      k
                                                   
                                                   
                                                      fw
                                                   
                                                
                                                +
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      q
                                                      ,
                                                      k
                                                   
                                                   
                                                      bw
                                                   
                                                
                                                ⩽
                                                1
                                                ,
                                                
                                                ∀
                                                1
                                                ⩽
                                                k
                                                ⩽
                                                n
                                             
                                          
                                       
                                    
                                 
                              
                           When a backward label 
                              
                                 
                                    
                                       S
                                    
                                    
                                       q
                                    
                                    
                                       bw
                                    
                                 
                              
                            is concatenated to a forward label 
                              
                                 
                                    
                                       S
                                    
                                    
                                       q
                                    
                                    
                                       fw
                                    
                                 
                              
                           , the waiting time at each of 
                              
                                 
                                    
                                       D
                                    
                                    
                                       q
                                    
                                    
                                       bw
                                    
                                 
                              
                            customers visited by the backward partial route must increase by 
                              
                                 
                                    
                                       L
                                    
                                    
                                       q
                                    
                                    
                                       fw
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       p
                                       ,
                                       q
                                    
                                 
                              
                           . Hence, the cost of the resulting complete route is:
                              
                                 
                                    
                                       
                                          C
                                       
                                       
                                          p
                                       
                                       
                                          fw
                                       
                                    
                                    +
                                    
                                       
                                          C
                                       
                                       
                                          q
                                       
                                       
                                          bw
                                       
                                    
                                    +
                                    
                                       
                                          D
                                       
                                       
                                          q
                                       
                                       
                                          bw
                                       
                                    
                                    ×
                                    (
                                    
                                       
                                          L
                                       
                                       
                                          q
                                       
                                       
                                          fw
                                       
                                    
                                    +
                                    
                                       
                                          t
                                       
                                       
                                          p
                                          ,
                                          q
                                       
                                    
                                    )
                                    -
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             S
                                             ∈
                                             Γ
                                             :
                                             p
                                             ∈
                                             V
                                             ⧹
                                             S
                                             ,
                                             q
                                             ∈
                                             S
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                λ
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          S
                                       
                                    
                                 
                              
                           The minimum cost among all complete routes is the optimal solution value of the pricing subproblem. Usually, the BBLS algorithm can find a number of negative reduced cost columns and therefore we specify that at most maxCol columns can be added into 
                              
                                 
                                    
                                       Ω
                                    
                                    
                                       ¯
                                    
                                 
                              
                           .

Another common way to accelerate the label-setting algorithm is to relax the elementarity requirements of all vertices, which was first introduced by Christofides, Mingozzi, and Toth (1981) under the name state space relaxation. If vertices are allowed to be visited more than once, optimally solving the pricing subproblem can be done in pseudo-polynomial time and therefore requires less computation time. However, with state space relaxation the label-setting algorithm may generate some columns with cycles, which are infeasible to the original problem. When Ω is redefined to include routes with cycles, the resultant LMP would have an optimal objective value not greater than that of the original LMP, i.e., the lower bound at each branch-and-bound node may be weakened. Allowing routes with cycles may increase the computational burdens on the branch-and-price-and-cut algorithm because the weaker lower bound reduces the efficiency of fathoming nodes, increasing the number of the branch-and-bound tree nodes. Briefly speaking, there is a tradeoff between the computation speed of the pricing subproblem and the scale of the branch-and-bound tree.

In the BBLS algorithm with state space relaxation, forward and backward labels are defined as 
                              
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                    
                                       fw
                                    
                                 
                                 )
                              
                            and 
                              
                                 
                                    
                                       S
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       j
                                    
                                    
                                       bw
                                    
                                 
                                 )
                              
                           , respectively. The manners employed to extend labels, judge dominance relationships and join labels are the same as those described in Section 3.3.2 except that all V
                           
                              j,k
                            (1⩽
                           k
                           ⩽
                           n) are not considered any more.

The decremental search state-space relaxation was introduced independently by Boland, Dethridge, and Dumitrescu (2006) and Righini and Salani (2008). It starts from solving the pricing subproblem with the elementary requirements of all customers being relaxed, i.e., each customer can be visited more than once in a route. If the computed least-cost path is nonelementary, the customers that are visited more than once are required to be elementary and the pricing subproblem is solved again. This process is repeated until an elementary least-cost route is found. Our implementation of the decremental state-space relaxation technique is the same as the one described in Righini and Salani (2008). This acceleration technique has also been employed in the branch-and-price algorithms for solving several other vehicle routing models, such as the VRP with discrete split deliveries and time windows (Salani & Vacca, 2011), the VRP with deliveries, selective pickups and time windows (Gutiérrez-Jarpa et al., 2010) and the multi-depot VRPTW (Bettinelli, Ceselli, & Righini, 2011).

In this section, we first describe an approach for generating a set of initial columns and an upper bound for the problem. Next, we present a separation algorithm to identify the violated SE cuts. This is followed by search and branching strategies that guide the exploration of the branch-and-bound tree.

We obtain a set of initial columns and an upper bound for the problem from a feasible solution produced by a cheapest insertion (CI) heuristic. The upper bound is updated over the course of the branch-and-bound search process.

A state in the CI heuristic is a feasible partial solution consisting of unvisited vertices and a set of feasible routes, one of which is designated as the current route. The CI heuristic begins with an empty route as the current route. We repeatedly insert into the current route the best unvisited vertex in terms of increased cost. When no further vertex can be inserted without violating the distance constraint, we continue with another empty route. The above process is repeated until all vertices are inserted.

To identify the violated SE cuts, we apply the polynomial-time separation algorithm introduced by Kohl, Desrosiers, Madsen, Solomon, and Soumis (1999); this algorithm is reviewed as follows. Assuming that 
                           
                              
                                 
                                    θ
                                 
                                 
                                    ˆ
                                 
                              
                           
                         is an optimal solution of the LMP, the flow on each edge (i, j) can be calculated according to 
                           
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    r
                                    ∈
                                    
                                       
                                          Ω
                                       
                                       
                                          ¯
                                       
                                    
                                 
                              
                              
                              
                                 
                                    b
                                 
                                 
                                    i
                                    ,
                                    j
                                    ,
                                    r
                                 
                              
                              
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    r
                                 
                              
                           
                        . To check whether there exist some violated SE cuts, we consider the graph G and impose a capacity 
                           
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         on edge (i, j). For each vertex i
                        ∈
                        V
                        
                           C
                        , we solve a minimum cut problem with source vertex 0 and sink vertex i on graph G. Let S
                        
                           min
                         denote the vertex set that contains vertex i and is separated by the minimum cut. If the total capacity of the minimum cut is less than one, namely 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    (
                                    i
                                    ,
                                    j
                                    )
                                    ∈
                                    E
                                    :
                                    i
                                    ∈
                                    V
                                    ⧹
                                    
                                       
                                          S
                                       
                                       
                                          min
                                       
                                    
                                    ,
                                    j
                                    ∈
                                    
                                       
                                          S
                                       
                                       
                                          min
                                       
                                    
                                 
                              
                              
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              <
                              1
                           
                        , then the SE cut corresponding to S
                        
                           min
                         is violated, which is thereupon added into the RLMP (i.e., add S
                        
                           min
                         into Γ); otherwise, all SE cuts are satisfied. Finding a minimum cut in a directed graph is equivalent to solving a maximum flow problem (Ahuja, Magnanti, & Orlin, 1993), which can be done in polynomial time.

The branch-and-bound tree is explored according to a best-first policy; specifically, the “best” unexamined tree node is the one with the smallest lower bound, and would be given the highest priority. We have tested the depth-first policy in some preliminary experiments and obtained inferior results in terms of the number of the optimally solved instances within the same amount of computation time.

At each branch-and-bound node, we achieve an optimal solution of the LMP using the column generation procedure and the separation algorithm; the value of this solution is a lower bound at that node. If this lower bound is not less than the current upper bound, the associated node is pruned; otherwise, branching must take place. If the optimal solution of the LMP is integral and the optimal solution value is less than the current upper bound, we update the upper bound. The integral optimal solution of the LMP must contain only acyclic routes even if routes with cycles are allowed. This is because we can always find acyclic routes to replace the routes with cycles in an integral feasible solution and generate another integral feasible solution with less objective value. However, it should be noted that the fractional optimal solution of the LMP may include routes with cycles if they are allowed.

As explained in Desaulniers et al. (1998), we can hardly branch on master problem variables θ
                        
                           r
                         since fixing such variables at 0 requires preventing label-setting algorithms from generating the corresponding routes, which significantly increases the complexity of solving the pricing subproblem. Therefore, it is better to choose branching strategies compatible with the algorithms for the pricing subproblems, i.e., the pricing subproblems at the nodes resulting from such branchings could be solved in a way similar to the one used at their parent node. This requires that branching constraints do not change the structure of the pricing subproblem. In our branch-and-price-and-cut algorithm, we choose two branching strategies, namely branching on the number of vehicles and on arcs.


                        Branching on the number of vehicles. The number of vehicles used in the optimal solution of the LMP can be calculated by 
                           
                              
                                 
                                    m
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    r
                                    ∈
                                    
                                       
                                          Ω
                                       
                                       
                                          ¯
                                       
                                    
                                 
                              
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                           
                        . If this value is fractional, we branch the current node into two child nodes with constraints 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    r
                                    ∈
                                    
                                       
                                          Ω
                                       
                                       
                                          ¯
                                       
                                    
                                 
                              
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                              ⩽
                              ⌊
                              
                                 
                                    m
                                 
                                 
                                    ′
                                 
                              
                              ⌋
                           
                         and 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    r
                                    ∈
                                    
                                       
                                          Ω
                                       
                                       
                                          ¯
                                       
                                    
                                 
                              
                              
                              
                                 
                                    θ
                                 
                                 
                                    r
                                 
                              
                              ⩾
                              ⌈
                              
                                 
                                    m
                                 
                                 
                                    ′
                                 
                              
                              ⌉
                           
                        , respectively. The pricing subproblems at these two child nodes have the same structure as that at their parent node.


                        Branching on arcs. We next branch on the edge (i, j) with fractional flow 
                           
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         that is farthest to an integer. Two child nodes are created by fixing x
                        
                           i,j
                        
                        =1, implying that edge (i, j) must be used, and x
                        
                           i,j
                        
                        =0, implying that edge (i, j) is forbidden. In the former case, we delete from E all edges (i, j′) and (i′, j) with j′≠
                        j and i′≠
                        i, and remove from the RLMP all variables θ
                        
                           r
                         and columns associated with routes that contain at least one of the above deleted edges. In the latter case, we delete edge (i, j) from E and remove from the RLMP all variables θ
                        
                           r
                         and columns associated with routes that contain edge (i, j). Obviously, this type of branching only alters the structure of the underlying graph and removes some of variables from the RLMP, which does not require to modify the label-setting algorithm when solving the pricing subproblems at the child nodes.

We implemented two column generation procedures; the first one is called CG1 that employs the tabu search column generator and the BBLS algorithm with decremental state-space relaxation, and the second one is called CG2 that only employs the BBLS algorithm with state space relaxation. Specifically, CG1 invokes the BBLS algorithm only when the tabu search algorithm fails to identify negative reduced cost columns. In this section, we only report and analyze the results of two branch-and-price-and-cut implementations that employs CG1 and CG2, which are called BPC1 and BPC2, respectively. Both of the BPC1 and BPC2 outperform the branch-and-price-and-cut implement that utilizes the BBLS algorithm without using any accelerating strategy.

We conducted experiments on a data set derived from six TSP instances fnl4461, brd14051, d15112, d18512, nrw1379 and pr1002 of TSPLIB (Reinelt, 1991). For each of these TSP instances, ten subsets of n
                        +1 vertices were randomly selected, where n
                        =29, 39 and 49. One arbitrary vertex was designated as the depot. Each instance group is identified by the name of its TSP instance and the number of vertices; for example, instance group brd14051-30 contains ten 30-vertex instances generated from TSP instance brd14051. We denote by 
                           
                              
                                 
                                    d
                                 
                                 
                                    max
                                 
                              
                              =
                              
                                 
                                    max
                                 
                                 
                                    i
                                    ∈
                                    
                                       
                                          V
                                       
                                       
                                          C
                                       
                                    
                                 
                              
                              {
                              
                                 
                                    d
                                 
                                 
                                    0
                                    ,
                                    i
                                 
                              
                              +
                              
                                 
                                    d
                                 
                                 
                                    i
                                    ,
                                    n
                                    +
                                    1
                                 
                              
                              }
                           
                         the greatest distance for any route involving a single customer and imposed on each vehicle a travel distance limit L
                        =2.0×
                        d
                        
                           max
                        . Next, we performed the CI heuristic to construct an initial solution for each vertex set and recorded the number of used vehicles as K
                        
                           ini
                        . Finally, we set the number of available vehicles to K
                        =max{K
                        
                           ini
                        , ⌈n/5⌉}, thereby generating 180 test instances. All instances as well as detailed solutions are available in the online supplement to this paper at: www.computational-logistics.org/orlib/mtrpd.

All algorithms were coded in Java and all experiments were conducted on a Dell server with an Intel Xeon E5520 2.26gigahertz CPU, 8gigabytes RAM and Linux operating system. The linear programming model RLMP was solved by simplex algorithm implemented by ILOG CPLEX 12.0. Computation times reported are in CPU seconds on this server.

We imposed a time limit of 10,800seconds on each run of the branch-and-price-and-cut algorithm. The parameters used in this paper were fixed as: ξ
                        =10, maxIter
                        =200 and maxCol
                        =100. According to some preliminary experiments, we observed that only the value of ξ affected the performance of the proposed tabu search algorithm while all these parameters had little impact on the performance of the branch-and-price-and-cut algorithm.

@&#RESULTS AND ANALYSIS@&#

We solved all instances using both BPC1 and BPC2, and report the computational results in Tables 1–3
                        
                        
                        . At the root node, we first solved the LMP without the introduction of any violated SE cut using both CG1 and CG2; the optimal linear solution values are presented in columns “LP” under both the blocks “BPC1” and “BPC2”. Subsequently, we added the violated SE cuts into the LMP, and performed the column generation procedure and the separation algorithm alternatively. We find from the computational results that the violated SE cuts can be identified only when using CG2. Therefore, under the block “BPC2” we present the improved lower bound and the number of violated SE cuts at the root node in column “LPC” and “Cuts”. The values of the optimal integer solutions achieved by the BPC1 and BPC2 are reported in columns “IP”. The values in columns “LP Gap (%)” and “LPC Gap (%)” were calculated by (IP–LP)/IP or (IP–LPC)/IP. The columns “Nodes” give the number of nodes explored by the branch-and-price-and-cut algorithm. The computation times for “LP” and “IP” are provided in columns “LP Time” and “IP Time”, respectively. As shown in Table 3, BPC1 failed to achieve the optimal solutions for instances brd14051-50-3 and nrw1379-50-1, while BPC2 only failed to obtain the optimal solution for instance nrw1379-50-1. In the last row of these tables, we report the average values of “LP Time”, “LP Gap (%)”, “Nodes” and “IP Time” and “LPC Gap (%)” over all optimally solved instances.

As shown in columns “LP” or “LP Gap (%)”, the lower bounds achieved by CG1 is better than or equal to those obtained by CG2; the difference of their average gaps over all solved instances is 0.96%. However, columns “LP Time” show that CG2 consumed less or equal computation times for all instances, compared to CG1. The use of the SE cuts improved the lower bounds generated by CG2 since the average gap was reduced from 1.16% to 0.53%. The lower bounds produced by CG2 with the help of SE cuts are still not better than those produced by CG1; the difference of their average gaps is 0.32%. As mentioned in Section 3.3.3, the weaker lower bounds usually necessitate generation of more branch-and-bound nodes, which is clearly indicated by the comparison of columns “Nodes”.

We obtained the optimal solutions for all instances except instance nrw1379-50-1. The problem difficulty increases with the number of vertices, which is revealed by the average computation times. On average, BPC2 used less computation times than BPC1. We sorted the “LP Gap (%)” values in the block “BPC1” and “LPC Gap (%)” values in the block “BPC2” in ascending order, and then plotted the results in Figs. 2 and 3
                        
                        . These figures reveal that BPC1 and BPC2 produced high-quality lower bounds at the root node. With the help of such high-quality lower bounds, most test instances were solved to optimality after exploring a small number of branch-and-bound nodes. The statistical results on the numbers of branch-and-bound nodes generated by BPC1 and BPC2 are shown in Fig. 4
                        . From this figure, we can see that 28% and 6% of instances were optimally solved by BPC1 and BPC2 with only one branch-and-bound node.

@&#CONCLUSIONS@&#

In this work, we propose an exact branch-and-price-and-cut algorithm for solving the MTRPD, which is a natural extension to the MTRP that considers a limit to the travel distance of the vehicle. The key component in the branch-and-price-and-cut algorithm is the algorithm used to solve the pricing subproblem, which is an elementary resource-constrained shortest path problem with cumulative cost. We have obtained the optimal solutions for all but one instance within 10,800seconds. The branch-and-price-and-cut implementation with state-space relaxation consumed less computation time than the other implementation with tabu search column generator and decremental state-space relaxation. The experimental results and analysis presented in this study serve as benchmarks for future researchers. Our work is the first attempt at designing bounded bidirectional label-setting algorithm for the pricing problems with cumulative cost. Future research may consider either studying other exact algorithms to improve our results for the MTRPD or designing exact algorithms for other routing problems with cumulative cost.

@&#ACKNOWLEDGMENTS@&#

This research was partially supported by the Fundamental Research Funds for the Central Universities, HUST (Grant No. 2012QN213) and National Natural Science Foundation of China (Grant No. 71201065).

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.ejor.2013.09.014.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

