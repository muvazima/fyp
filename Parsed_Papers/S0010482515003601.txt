@&#MAIN-TITLE@&#Robust tooth surface reconstruction by iterative deformation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The salient feature point extraction method can preserve morphological features.


                        
                        
                           
                           Different parts are set different deformation weights which help to get nice results.


                        
                        
                           
                           Iterative constrained deformation can avoid self-intersection and distortion.


                        
                        
                           
                           Robust and satisfactory adaptability in clinical application.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Robust

Morse theory

Tooth segment

Salient feature point extraction

Iterative constrained deformation

Morphological feature retention

@&#ABSTRACT@&#


               
               
                  Digital design technologies have been applied extensively in dental medicine, especially in the field of dental restoration. The all-ceramic crown is an important restoration type of dental CAD systems. This paper presents a robust tooth surface reconstruction algorithm for all-ceramic crown design. The algorithm involves three necessary steps: standard tooth initial positioning and division; salient feature point extraction using Morse theory; and standard tooth deformation using iterative Laplacian Surface Editing and mesh stitching. This algorithm can retain the morphological features of the tooth surface well. It is robust and suitable for almost all types of teeth, including incisor, canine, premolar, and molar. Moreover, it allows dental technicians to use their own preferred library teeth for reconstruction. The algorithm has been successfully integrated in our Dental CAD system, more than 1000 clinical cases have been tested to demonstrate the robustness and effectiveness of the proposed algorithm.
               
            

@&#INTRODUCTION@&#

In recent years, the CAD technique used in the dental CAD/CAM system has been equipped in many dental groups and laboratories [1–5]. Compared to the traditional manual restoration, the CAD technique can significantly reduce the labor intensity of technicians, enhance the quality of restoration, and meet individual needs [6].

The all-ceramic crown has become increasingly popular in recent years. Compared to the conventional porcelain-fused-to-metal (PFM) crown, the all-ceramic crown emphasizes the cosmetic result [7]. The PFM crown can hardly meet requirements for the incisor restoration, but the all-ceramic crown can achieve satisfactory results [8]. In addition, the all-ceramic crown is becoming increasingly popular because of its excellent biocompatibility. To deliver an almost ideal crown, several processes need to be done, such as scanning the plaster model, reconstructing the crown׳s surface, modifying the designed crown in a virtual or simulative stomatognathic environment, and strength analysis of the dental crown. These essential processes enable the crown to follow the masticatory function, the envelope of movement permitted by the occlusion, temporo mandibular joint and neuromuscular systems.

Reconstruction of the crown׳s surface includes several cascaded operations, as shown in 
                     Fig. 1. Before the design process, the preparation has marked a specific identify to help selecting the proper standard tooth in the design. Fig. 1(a) is the scanned preparation model with its neighboring and antagonist teeth; the first step is to extract the margin line of the preparation (Fig. 1(b)). The second step is to cut the preparation into two parts, the unprepared part and the prepared surface (Fig. 1(c)); the third step is to calculate the insertion path from which we can see the largest visible area of the upper part (Fig. 1(d)); the fourth step is to offset the upper part by a given distance (Fig. 1(e)) to simulate the use of a die spacer; the fifth step is to select a corresponding standard tooth which has been numbered in the standard tooth library, and to position the standard tooth (Fig. 1(f)); the sixth step is to reconstruct the outer surface of the crown (Fig. 1(g)); the seventh step is to modify the outer surface of the crown to achieve a proper occlusion (Fig. 1(h)); the eighth step is to merge the inner surface and outer surface together to finish the whole design (Fig. 1(i)). In this paper, we only focus on the process of reconstructing the crown׳s outer surface (the sixth step).

In the all-ceramic crown CAD design system, recovery of the whole tooth crown is difficult using only information from the tooth preparation, as shown in 
                     Fig. 2. A common method is to use the information of a standard tooth. By applying the position and scale to a standard tooth, an initial shape of a tooth crown can be obtained [9,10]. The tooth crown is then deformed to fit closely to the prepared tooth׳s margin line (Fig. 2). However, following two main problems can be encountered in the existing methods:
                        
                           (1)
                           Adjustment of the occlusal surface is difficult for these methods because of the presence of numerous cusps, fossas, ridges, and sulcus. Retaining these morphological features is a challenging task.

Most existing methods [11,17–21] are only suitable for molars, they have certain limitations in clinical applications.

To solve the two aforementioned problems, this paper presents a robust tooth surface reconstruction algorithm. The algorithm involves three steps. First, a standard tooth is initially positioned and divided into three zones. Second, salient feature points (SFPs) are extracted from the standard tooth using Morse theory. Third, the standard tooth deforms iteratively using these SFPs and meshes are stitched. By extracting SFPs, the algorithm can retain the morphological features of the occlusal surface well. The division of the standard tooth into zones and the iterative deformation technique make the algorithm suitable for almost all repair types in clinical settings.

@&#RELATED WORK@&#

Many researchers have developed CAD/CAM systems and presented various methods, such as Duret system, Minnesota system, and GN-I system, for the teeth surface design. The Duret system was initially developed in France. It is highly inconvenient and can only implement simple tooth surface restoration [12]. The Minnesota system uses an affine transformation of a 3D tooth model for a scanned tooth. However, the system cannot cover all kinds of restorations, and it is mainly used for crown production [13]. The GN-I system designs the occlusal surface of a tooth by the contact simulation. However, this system has difficulty in establishing customized articulation relations because of a lack of different forms of tooth surface design [14].

Many methods can be considered to design the tooth surface. The key to this process is the design of a fine deformation method to reconstruct the tooth surface. Many deformation methods are used to design the tooth surface. Zeid [15] used the free form deformation technique through a set of control points to design the tooth crown. This process is complicated because the tooth surface is complex. Adolph et al. [16] and Gürke [13] used geometrically deformable models to recover the tooth surface. This method first adopts a low-resolution mesh of the model tooth by the energy-driven deformation, and the low-resolution mesh is gradually refined. This method can achieve attractive results in many cases. However, it fails to cover the full range of possible clinical situations. Steinbreche et al. [17] and Zhang et al. [18] used the differential deformation technique to reconstruct the missing teeth surface. This method is robust, however, it does not consider the morphological features on a standard tooth, resulting in the loss of numerous details. In addition, this method is only suitable for molars. Zheng et al. [19] presented a morphing approach for the tooth occlusal surface reconstruction. By establishing one-to-one special mapping relation between the standard tooth and the tooth preparation, a mapping function called radial basis function is used to achieve the tooth surface deformation. This method is only suitable for molars. Moreover, the shape of the tooth preparation is remarkably different and strange, and the tooth preparation often exhibits no distinguished features. Thus, Zheng׳s method may not be clinically suitable. Blanz et al. [11] and Mehl et al. [20,21] used a biogenetic tooth model using many single teeth to reconstruct the crown. During construction, a certain number of points (e.g. cusp tips and contact points) are also required. This method requires complex theories and much computation, and these points are obtained almost by hand. To date, this method has only been used for molars and premolars.

The aforementioned methods use the tooth library to reconstruct the tooth surface. The tooth library is vital for tooth surface reconstruction. Cheng et al. [22] established a standard tooth library as the basis for a dental CAD/CAM system. Other studies have also been conducted for the dental reconstruction, such as the quantitative and qualitative analysis for the fit of dental crowns and bridges [23], tool-path generation for high-speed machining tooth crowns [24,25], strength analysis of dental crowns [26,27], tooth preparations design for fixed prosthodontics [28], and tooth model reconstruction for the orthodontic treatment simulation [29].

In this paper, a robust algorithm to reconstruct the all-ceramic crown surface is presented. SFPs [30] and iterative Laplacian deformation technique [31,32] are used for the tooth surface reconstruction. The proposed algorithm can deal with almost all kinds of tooth types, and results verified the accuracy and feasibility of this method.

The main contributions of the work are as follows:
                        
                           (1)
                           A SFP extraction method is developed. The proposed SFP extraction method can obtain relatively uniform SFPs. These points play an important role in the following deformation, which helps preserve morphological features of a standard tooth.

The Iterative Laplacian constrained deformation is applied. To avoid self-intersection and distortion, the standard tooth is deformed iteratively. During iterative deformation, different deformation zones are given various deformation weights, thereby helping control deformation. Given the nature of the deformation, the algorithm is suitable for almost all kinds of tooth types, including incisor, canine, premolar, and molar.


                     
                     Fig. 3 shows the technical route of the proposed algorithm. The algorithm consists of three main steps:
                        
                           (1)
                           Standard tooth initial positioning and division. First, an appropriate standard tooth is selected from the tooth database, which includes 28 different standard teeth. The standard tooth is positioned by rotating, translating, and scaling. The standard tooth is divided into three deformation zones, namely, active deformation zone, passive deformation zone, and constrained deformation zone, as shown in Fig. 7.

SFP extraction. SFPs are extracted in the constrained deformation zone of a standard tooth.

Standard tooth deformation and mesh stitching. The standard tooth deforms iteratively to bridge naturally to the tooth preparation margin line. During deformation, the morphological features of the standard tooth are retained, and the minimum thickness of the crown is guaranteed by controlling these SFPs. After deformation, some “useless” points of the standard tooth are discarded, and the remaining part of the standard tooth and the tooth preparation are merged using a mesh stitching algorithm, similar to the method described in [33].


                     
                     Fig. 4 shows a sketch map of the all-ceramic crown design. Deformation ensures the close fit of the standard tooth and the tooth preparation׳s margin line to complete the all-ceramic crown design.

The morphological features of a clinical tooth surface are highly complex. Therefore, extracting SFPs by hand is a tedious job. Liu et al. [30] presented an SFP extraction algorithm, which is based on Morse theory and mesh saliency feature [34]. However the SFPs extracted by this method are dense in some regions (as shown in 
                     Fig. 5(b)). During the tooth deformation, dense SFPs can introduce self-intersection, distortion, and loss of morphological features. Thus, an improved algorithm for extracting SFPs is proposed to avoid dense points in certain regions.

Morse theory is a direct method to analyze topological manifold. Morse function has many definitions. For example, in terrain modeling applications, a height function is often used as a Morse function [35]. However, the function does not possess the rotational invariance. In this study, the mean curvature function is used as a Morse function. The process of extracting SFPs is as follows:
                        
                           (1)
                           Calculate Morse function values 
                                 
                                    f
                                    (
                                    v
                                    )
                                    =
                                    (
                                    
                                       
                                          κ
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          κ
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    /
                                    2
                                 
                               of every vertex 
                                 v
                               on mesh, 
                                 
                                    
                                       
                                          κ
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          κ
                                       
                                       
                                          2
                                       
                                    
                                 
                               are the principal curvatures of 
                                 v
                              .

For each vertex 
                                 v
                              , the equation of the bilateral smoothing operation for the real function 
                                 
                                    f
                                    (
                                    v
                                    )
                                 
                               is given as follows:
                                 
                                    (1)
                                    
                                       
                                          B
                                          
                                             (
                                             
                                                f
                                                
                                                   (
                                                   v
                                                   )
                                                
                                                ,
                                                σ
                                             
                                             )
                                          
                                          =
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      x
                                                      ∈
                                                      N
                                                      (
                                                      v
                                                      ,
                                                      2
                                                      σ
                                                      )
                                                   
                                                
                                                
                                                   f
                                                   (
                                                   x
                                                   )
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            ‖
                                                            
                                                               x
                                                               −
                                                               v
                                                            
                                                            ‖
                                                         
                                                         )
                                                         
                                                            
                                                               W
                                                            
                                                            
                                                               s
                                                            
                                                         
                                                         (
                                                         
                                                            |
                                                            
                                                               f
                                                               (
                                                               x
                                                               )
                                                               −
                                                               f
                                                               (
                                                               v
                                                               )
                                                            
                                                            |
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      x
                                                      ∈
                                                      N
                                                      (
                                                      v
                                                      ,
                                                      2
                                                      σ
                                                      )
                                                   
                                                
                                                
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            ‖
                                                            
                                                               x
                                                               −
                                                               v
                                                            
                                                            ‖
                                                         
                                                         )
                                                         
                                                            
                                                               W
                                                            
                                                            
                                                               s
                                                            
                                                         
                                                         (
                                                         
                                                            |
                                                            
                                                               f
                                                               (
                                                               x
                                                               )
                                                               −
                                                               f
                                                               (
                                                               v
                                                               )
                                                            
                                                            |
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

where 
                                 
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    exp
                                    [
                                    −
                                    
                                       
                                          x
                                       
                                       2
                                    
                                    /
                                    (
                                    2
                                    
                                       
                                          σ
                                       
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    ]
                                 
                               is the standard Gaussian filter with parameter 
                                 
                                    
                                       σ
                                    
                                    
                                       c
                                    
                                 
                              , and 
                                 
                                    
                                       
                                          W
                                       
                                       
                                          s
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    exp
                                    [
                                    −
                                    
                                       
                                          x
                                       
                                       2
                                    
                                    /
                                    (
                                    2
                                    
                                       
                                          σ
                                       
                                       
                                          s
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    ]
                                 
                               is a feature-preserving weight function with parameter 
                                 
                                    
                                       σ
                                    
                                    
                                       s
                                    
                                 
                              .

By combining the bilateral filter in Eq. (1), the equation of saliency value (
                                 s
                              ) computation is given as follows:
                                 
                                    (2)
                                    
                                       
                                          
                                             
                                                L
                                             
                                             
                                                B
                                             
                                          
                                          (
                                          f
                                          (
                                          v
                                          )
                                          ,
                                          σ
                                          )
                                          =
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      x
                                                      ∈
                                                      N
                                                      (
                                                      v
                                                      ,
                                                      2
                                                      σ
                                                      )
                                                   
                                                
                                                
                                                   (
                                                   f
                                                   (
                                                   x
                                                   )
                                                   −
                                                   f
                                                   (
                                                   v
                                                   )
                                                   )
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                   (
                                                   
                                                      ‖
                                                      
                                                         x
                                                         −
                                                         v
                                                      
                                                      ‖
                                                   
                                                   )
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         s
                                                      
                                                   
                                                   (
                                                   
                                                      |
                                                      
                                                         f
                                                         (
                                                         x
                                                         )
                                                         −
                                                         f
                                                         (
                                                         v
                                                         )
                                                      
                                                      |
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      x
                                                      ∈
                                                      N
                                                      (
                                                      v
                                                      ,
                                                      2
                                                      σ
                                                      )
                                                   
                                                
                                                
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                   (
                                                   
                                                      ‖
                                                      
                                                         x
                                                         −
                                                         v
                                                      
                                                      ‖
                                                   
                                                   )
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         s
                                                      
                                                   
                                                   (
                                                   
                                                      |
                                                      
                                                         f
                                                         (
                                                         x
                                                         )
                                                         −
                                                         f
                                                         (
                                                         v
                                                         )
                                                      
                                                      |
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

After we compute the saliency on all vertices, the real function value of each vertex 
                                 v
                               is updated as follows: 
                                 
                                    
                                       
                                          f
                                       
                                       
                                          ∧
                                       
                                    
                                    =
                                    f
                                    +
                                    s
                                 
                              . After several iterative computations of steps 2–4, the computed saliency is used to extract SFPs.

According to the Classify Vertex algorithm proposed by Ni et al. [36], these SFPs can be classified as: maximum, minimum, and saddle. In Fig. 5(b), SFPs are extracted by 12 iterations.

The whole processes of the algorithm is summarized as follows: first, a bilateral filter is used to calculate all vertices׳ saliency value; then, the real function value of each vertex is updated as: 
                        
                           
                              f
                              ∧
                           
                           =
                           f
                           +
                           s
                        
                     ; finally, several iterative computations are applied and obtained for the finally saliency point using Ni׳s method [36].

The result of the algorithm depends on two parameters: the number of the iterations, and neighbor radius 
                        
                           σ
                           ,
                           
                              
                                 σ
                              
                              
                                 c
                              
                           
                           ,
                           
                              
                                 σ
                              
                              
                                 s
                              
                           
                        
                     . In general, more iterations yield less SFPs. For the neighbor radius, we use 
                        
                           σ
                           =
                           
                              
                                 σ
                              
                              
                                 c
                              
                           
                           =
                           6.0
                           ε
                        
                      in the algorithm, where 
                        ε
                      is 0.3% of the length of the diagonal of AABB bounding box of the model. There are two methods for choosing 
                        
                           
                              σ
                           
                           
                              s
                           
                        
                     . One is that 
                        
                           
                              σ
                           
                           
                              s
                           
                        
                      is equal to 
                        
                           
                              σ
                           
                           
                              c
                           
                        
                     , the other is that 
                        
                           
                              σ
                           
                           
                              s
                           
                        
                      is equal to the maximal difference among real functions of a vertex׳s neighbor vertices. In practice, the first one can achieve better results. Thus, 
                        
                           
                              
                                 σ
                              
                              
                                 s
                              
                           
                           =
                           σ
                           =
                           
                              
                                 σ
                              
                              
                                 c
                              
                           
                        
                      is used in this paper. To obtain an approximate number of SFPs, one can choose a large 
                        σ
                      to reduce the number of iterations, or a narrow filter to increase the number of iterations.

The SFPs extracted by the above method can reflect the morphological features of a standard tooth. However, the result is still unsatisfactory because the points are too dense in some regions. In this study, a method is proposed to obtain relatively uniform SFPs. In this paper, a “proximate geodesic distance” factor 
                        r
                      is introduced to sample these extracted points. The process of sampling is as follows:
                        
                           (1)
                           SFPs in three different iterations are stored. In this paper, SFPs extracted by two, seven, and 12 iterations are stored (
                              Fig. 6(a–c)).

SFPs in Fig. 6(c) are sampled by “proximate geodesic distance” 
                                 r
                              . First, SFP 
                                 
                                    
                                       v
                                    
                                    
                                       s
                                    
                                 
                               in Fig. 6(c) is selected arbitrarily and is set as the “selected” state. Points of the standard tooth within the distance of 
                                 r
                               to 
                                 
                                    
                                       v
                                    
                                    
                                       s
                                    
                                 
                               are denoted as the “discard” state. Second, other SFPs in Fig. 6(c) are tested individually. If one SFP 
                                 
                                    
                                       v
                                    
                                    
                                       s
                                       1
                                    
                                 
                               is not in the “discard” state, the point is marked “selected” state, and points of the standard tooth in the range of distance of 
                                 r
                               to 
                                 
                                    
                                       v
                                    
                                    
                                       s
                                       1
                                    
                                 
                               are set as the “discard” state. Finally, all these SFPs marked “selected” state are stored, as shown in Fig. 6(d).

SFPs extracted by seven and 12 iterations are selected and stored. SFPs in Fig. 6(b) are individually assessed by “proximate geodesic distance” 
                                 r
                               based on Step (2). New “selected” points are added to Fig. 6(d), and the result is shown in Fig. 6(e). Some SFPs in Fig. 6(a) are also selected, and the final result is shown in Fig. 6(f).

The SFPs extracted by the proposed method are shown in Fig. 6(c). From the comparison, the SFPs extracted are more uniform.

The design of the all-ceramic crown is based on the standard tooth. To control the standard tooth׳s deformation properly, the standard tooth is divided into three deformation zones, namely, active deformation zone, passive deformation zone, and constrained deformation zone. After a standard tooth has been desirably positioned, it needs to be segmented and divided. First, the standard tooth is segmented into two parts: effective part and ineffective part. The effective part of the standard tooth is divided into three deformation zones. The segmentation of the effective part and ineffective part provides a basis for the division of three deformation zones. Moreover, the effective part of the standard tooth serves as the outer surface of the designed all-ceramic crown.

The segmentation of standard teeth depends on the spatial location relationship between the preparation and the standard tooth. To segment the standard tooth, we must first sample points from the preparation margin line and project these sample points onto the standard tooth mesh along the direction of the center of the margin line pointing to each sampling point. Geodesic polylines [37] are obtained between each two adjacent projected points, and these polylines are connected to form a closed polyline called a splitting line. The splitting line segments the standard tooth into two parts: effective part and ineffective part, as shown in 
                        Fig. 7.

After the tooth segmentation is completed, the standard tooth is divided into three deformation zones (
                        Fig. 8): active deformation zone, passive deformation zone, and constrained deformation zone. The three zones are defined as follows:
                           
                              (1)
                              Active deformation zone: points are vertices of triangles for splitting line crosses on mesh. Points that lie in the active deformation zone are set a large deformation weight during the deformation process, and deform actively to the margin line.

Passive deformation zone: points lie in the effective part of the standard tooth and are close to the active deformation zone. Points that lie in the passive deformation zone are set a zero deformation weight, which guarantees the standard tooth is bridged naturally to the tooth preparation margin line.

Constrained deformation zone: points lie in the effective part of the standard tooth, except points that lie in the active deformation zone and passive deformation zone. Points that lie in the passive deformation zone are set a small deformation weight which guarantees the thickness of the crowns.

Points that lie in the active deformation zone do not strictly lie on the splitting line. Before the deformation of a standard tooth, these points need to be adjusted to match the splitting line. The method described in [38] is used, as shown in Fig. 8. Therefore, the final active deformation zone is actually the splitting line.

In the all-ceramic crown design, the minimum thickness and morphological features of the crown are two important factors. Laplacian deformation can preserve the details of meshes and avoid the distortion and self-intersection to some extent. However, if the control handle points (in Eq. (5)) in some regions are too dense during deformation, the distortion and self-intersection are unavoidable, and details of the standard tooth are easily lost. SFPs are used as the control handle points to solve these problems.

In this paper, 
                           
                              M
                              =
                              (
                              C
                              ,
                              V
                              )
                           
                         is a two-manifold triangular mesh in 
                           
                              
                                 R
                              
                              3
                           
                        , where 
                           C
                         is the topological relation among vertices, edges, and triangles of the mesh. 
                           
                              V
                              =
                              {
                              
                                 
                                    v
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    2
                                 
                              
                              ..
                              .
                              
                                 
                                    v
                                 
                                 
                                    n
                                 
                              
                              }
                              ∈
                              
                                 
                                    R
                                 
                                 3
                              
                           
                         describes the geometric positions of the vertices of the mesh.

Laplacian deformation represents a mesh by Laplacian coordinates (differential coordinates) 
                              
                                 δ
                                 =
                                 {
                                 
                                    
                                       δ
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       δ
                                    
                                    
                                       2
                                    
                                 
                                 ..
                                 .
                                 
                                    
                                       δ
                                    
                                    
                                       n
                                    
                                 
                                 }
                                 ∈
                                 
                                    
                                       R
                                    
                                    3
                                 
                              
                           ,
                              
                                 (3)
                                 
                                    
                                       
                                          
                                             δ
                                          
                                          
                                             i
                                          
                                       
                                       =
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       −
                                       
                                          1
                                          
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   N
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      i
                                                      j
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                       
                                       
                                          ∑
                                          
                                             j
                                             ∈
                                             N
                                             (
                                             i
                                             )
                                          
                                       
                                       
                                          
                                             
                                                w
                                             
                                             
                                                i
                                                j
                                             
                                             
                                                ′
                                             
                                          
                                          
                                             
                                                v
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                            is the neighboring vertex of vertex 
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           , 
                              
                                 N
                                 (
                                 i
                                 )
                              
                            is the adjacent vertices of 
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           , 
                              
                                 
                                    w
                                 
                                 
                                    i
                                    j
                                 
                                 
                                    ′
                                 
                              
                            is the weight between 
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                           , and 
                              
                                 
                                    w
                                 
                                 
                                    i
                                    j
                                 
                                 
                                    ′
                                 
                              
                            usually has two kinds of values:
                              
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             i
                                             j
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      
                                                         cot
                                                         (
                                                         
                                                            
                                                               α
                                                            
                                                            
                                                               i
                                                               j
                                                            
                                                         
                                                         )
                                                         +
                                                         
                                                         cot
                                                         (
                                                         
                                                            
                                                               β
                                                            
                                                            
                                                               i
                                                               j
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    α
                                 
                                 
                                    i
                                    j
                                 
                              
                            and 
                              
                                 
                                    β
                                 
                                 
                                    i
                                    j
                                 
                              
                            are the two diagonal angles of edge 
                              
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       j
                                    
                                 
                              
                           . In this paper, 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 1
                              
                            usually produces good results. 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 1
                              
                            means each 
                              
                                 
                                    δ
                                 
                                 
                                    j
                                 
                              
                            points from the centroid of the neighbors of 
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                            to the absolute coordinate 
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           .

If 
                              V
                            is regarded as a matrix 
                              
                                 V
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       3
                                    
                                 
                              
                            and Laplacian coordinate 
                              δ
                            is regarded as another matrix 
                              
                                 Δ
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       3
                                    
                                 
                              
                           , then Eq. (3) can be written as a simple matrix multiplication
                              
                                 (4)
                                 
                                    
                                       Δ
                                       =
                                       (
                                       I
                                       −
                                       
                                          
                                             D
                                          
                                          
                                             −
                                             1
                                          
                                       
                                       A
                                       )
                                       V
                                       =
                                       L
                                       V
                                    
                                 
                              
                           where 
                              
                                 L
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       n
                                    
                                 
                              
                            is the Laplacian operator, 
                              
                                 I
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       n
                                    
                                 
                              
                            is the unit matrix, 
                              
                                 D
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       n
                                    
                                 
                              
                            is the diagonal matrix, and 
                              A
                            is the adjacent matrix of the mesh.

Laplacian coordinates describe the local geometry information of one mesh, and they are related to the mean curvature normal multiplied by the local area of the mesh in each vertex [39]. Laplacian coordinates are invariant of translation but sensitive to linear transforms.

In Eq. (4), 
                              L
                            has rank n−1, which means 
                              V
                            can be recovered from 
                              Δ
                            by fixing one vertex and solving a linear system. When several vertices are fixed, it is an energy minimization problem.

Let 
                              
                                 V
                                 ′
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             v
                                          
                                          
                                             1
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             2
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       ..
                                       .
                                       
                                          
                                             v
                                          
                                          
                                             n
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    }
                                 
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       3
                                    
                                 
                              
                            is the geometric positions of the vertices after deformation, 
                              
                                 C
                                 =
                                 V
                                 ′
                                 −
                                 V
                                 =
                                 {
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       c
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 ..
                                 .
                                 
                                    
                                       c
                                    
                                    
                                       n
                                    
                                 
                                 }
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       n
                                       ×
                                       3
                                    
                                 
                              
                            is the deformation of each vertex, and 
                              
                                 
                                    
                                       W
                                    
                                    
                                       c
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       w
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       w
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 ..
                                 .
                                 
                                    
                                       w
                                    
                                    
                                       n
                                    
                                 
                                 }
                              
                            is the deformation weight of each vertex:
                              
                                 (5)
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       =
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       +
                                       
                                          
                                             c
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       ,
                                       
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                       ∈
                                       [
                                       0.0
                                       ,
                                       1.0
                                       ]
                                    
                                 
                              
                           
                        

Thus, the minimum energy equation can be written as follows [32]:
                              
                                 (6)
                                 
                                    
                                       E
                                       (
                                       V
                                       ′
                                       )
                                       =
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                ‖
                                                
                                                   
                                                      
                                                         δ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         δ
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                                ‖
                                             
                                          
                                          2
                                       
                                       +
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   ‖
                                                   
                                                      
                                                         
                                                            v
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      −
                                                      (
                                                      
                                                         
                                                            v
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                   ‖
                                                
                                             
                                          
                                          2
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 >
                                 0
                                 )
                              
                            is called a control handle point. Upon solving the equation, a suitable set of coordinates 
                              
                                 
                                    V
                                 
                                 ׳
                              
                            is obtained, which is the final result.

For an all-ceramic crown, the constrained deformation zone is the main occlusal contact area. As mentioned above, if SFPs lying in the constrained deformation zone are chosen as control handle points, the minimum thickness and retention of morphological features of the crown are guaranteed. Distortion and self-intersection are also avoided. In 
                           Fig. 9(b), all points lying in the constrained deformation zone are used as active deformation points. In Fig. 9(c), SFPs that lie in the constrained deformation zone are used as active deformation points. Based on the results, Fig. 9(c) is superior to Fig. 9(b).

The SFPs on a standard tooth are a significant symbol of morphological features. Therefore, an evaluation function is introduced to assess the morphological features of the result:
                              
                                 (7)
                                 
                                    
                                       d
                                       (
                                       
                                          
                                             V
                                          
                                          
                                             s
                                          
                                       
                                       )
                                       =
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   0
                                                
                                                
                                                   n
                                                   −
                                                   1
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      i
                                                      +
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   (
                                                   
                                                      
                                                         ‖
                                                         
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  s
                                                                  i
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            −
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  s
                                                                  j
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                         ‖
                                                      
                                                      −
                                                      
                                                         ‖
                                                         
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  s
                                                                  i
                                                               
                                                            
                                                            −
                                                            
                                                               
                                                                  v
                                                               
                                                               
                                                                  s
                                                                  j
                                                               
                                                            
                                                         
                                                         ‖
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                          2
                                       
                                       /
                                       (
                                       
                                          
                                             
                                                
                                                   n
                                                
                                                
                                                   s
                                                
                                             
                                          
                                          2
                                       
                                       −
                                       
                                          
                                             n
                                          
                                          
                                             s
                                          
                                       
                                       )
                                    
                                 
                              
                           where 
                              
                                 
                                    n
                                 
                                 
                                    s
                                 
                              
                            is the number of SFPs on the standard tooth, 
                              
                                 
                                    v
                                 
                                 
                                    s
                                    i
                                 
                              
                            is a SFP on the standard tooth before deformation, and 
                              
                                 
                                    v
                                 
                                 
                                    s
                                    i
                                 
                                 
                                    ′
                                 
                              
                            is a SFP with the same vertex index as 
                              
                                 
                                    v
                                 
                                 
                                    s
                                    i
                                 
                              
                            on the standard after deformation. 
                              
                                 d
                                 (
                                 
                                    
                                       V
                                    
                                    
                                       s
                                    
                                 
                                 )
                              
                            denotes the average variation value between each pair of SFPs. Small values indicate reliable results. 
                           Table 1 lists the different results obtained by the evaluation function between selecting all points and selecting SFPs as active deformation points. The results show that the selection of SFPs as active deformation points can retain the morphological features of one tooth better.

For SFPs in the constrained deformation zone, the minimum distance 
                              d
                            away from the tooth preparation is calculated. The deformation weight 
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                            and the total deformation value 
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                            of these points are then determined according to 
                              d
                           . The relationship among wi
                           , c
                           
                              i
                           , and d can be written as follows. The deformation direction is the normal of the SFP. For other points in the constrained deformation zone, the deformation weight 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 0.0
                              
                           .
                              
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      1.0
                                                      ,
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      0.0
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            f
                                                         
                                                      
                                                      
                                                      d
                                                      >
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      ;
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      d
                                                      /
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      1.1
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      −
                                                      d
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            f
                                                         
                                                      
                                                      
                                                      
                                                         0
                                                      
                                                      .5
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      <
                                                      d
                                                      <
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      ;
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      0.3
                                                      ,
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      d
                                                      −
                                                      0.9
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            f
                                                         
                                                      
                                                      
                                                      d
                                                      <
                                                      0.5
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

For points that lie in the active deformation zone, points are sampled along the splitting line to guarantee the quality of deformation and avoid mesh self-intersection and distortion. These sampled points are set at 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 1.0
                              
                           , and the remaining points are set at 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 0.0
                              
                           . The total deformation value 
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                            of one sampling point is the minimum distance from the point to the tooth preparation margin line. The direction of deformation points to the tooth preparation margin line.

Points that lie in the passive deformation zone are set at 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 0.0
                              
                           . The total deformation value 
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                            of one point mainly depends on the points that lie in the active deformation zone. Given that points in the active deformation zone usually exhibit a large deformation, which can cause self-intersection and distortion in the passive and active deformation zones, a smoothing operation is applied to the two zones. In this paper, the smoothing method described in [40] is used.

Points in the ineffective part are assigned with a deformation weight of 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 0.0
                              
                           . The total deformation value 
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                            of one point depends on the points that lie in the active deformation zone.

After the deformation weight and value of all points of the standard tooth are determined, the deformation begins using the minimum energy Eq. (6), in which four to six iterative deformations are applied. For the 
                              j
                           th iteration of a total of 
                              N
                           , the deformation value is:
                              
                                 (8)
                                 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       
                                          
                                             c
                                          
                                          
                                             i
                                          
                                       
                                       /
                                       (
                                       N
                                       +
                                       1
                                       −
                                       j
                                       )
                                    
                                 
                              
                           
                        

After the deformation is completed, the standard tooth is bridged naturally to the tooth preparation margin line. The ineffective part of the deformed standard tooth is discarded, and the remaining part and tooth preparation are merged using a simple mesh stitching algorithm [33]. The result is a watertight two-manifold mesh without boundaries, suitable for most CAM products.

@&#RESULTS@&#

This study was approved by the Bioethics Committee of Stomatological Hospital of Peking University, Beijing, China. We obtained written informed consent from all the participants in our study. The case data were scanned using 3-Shape D700 (Denmark). To date, our algorithm has been used in more than 1000 clinical cases (including single crowns and multiple crowns). In this section, the algorithm is evaluated from the following three aspects: construction time, thickness in different parts of the all-ceramic crowns, and robustness.


                        
                        Fig. 10 illustrates a case of the all-ceramic crown design process. First, the margin line of the tooth preparation is extracted (Fig. 10(a)). Second, the standard tooth is positioned by rotating, translating, and scaling (Fig. 10(b)). Third, the crown surface, which includes the feature point extraction, mesh segmentation, and iterative deformation, is constructed based on SFPs (Fig. 10(c)). The crown surface matches well with the margin line, and the final result is shown in Fig. 10(d).

The reconstruction time is an important parameter for fixed prosthodontics in clinical settings. 
                           Table 2 shows the times of the algorithm tested on a 3.10GHz Core i5-3450 PC with 4GB of memory. The whole process comprises four steps: extracting SFPs, segmenting the standard tooth, iterative deformation, and stitching. The iterative deformation is the most time-consuming step. It takes about 80% of the total time, and it is proportional to the vertex number of the standard tooth and the number of iterations. For all the four examples in Table 2, the entire process takes less than 5s, which proves that our algorithm can fully meet the time requirement in clinical settings with reduced level of human intervention.


                           
                           Fig. 11 shows the minimum thickness (mm) of the all-ceramic crown required by the CEREC, a world-famous dental CAD system. The minimum thickness should be considered within the limits of the milling instruments and the materials being milled. In this paper, we analyze 16 cases (eight incisors and eight molars) to measure the thickness of different parts. For each crown designed by our algorithm, we select five approximate parts (a, b, c, d, and e) to measure the thickness, as shown in Fig. 11. Considering that the thickness of the crown׳s bottom is mainly decided by the shoulder of the tooth preparation, which is made by dental technicians, we do not calculate the thickness of the crown׳s bottom. 
                           Table 3 illustrates the measurements for the 16 crowns. Most measurements met the required minimum thickness. For minor parts that do not meet the requirements of the minimum thickness, a local deformation is necessary to thicken the thickness of the parts. Thus, our algorithm can fully satisfy the clinical requirements.

To verify the robustness of the algorithm proposed in this paper, eight teeth in clinic are selected to test the algorithm. These teeth include incisor, canine, premolar, and molar of upper and lower jaws. These teeth represent almost all restoration types in clinical settings (
                           Fig. 12). Crowns designed by the algorithm are natural, and the morphological features are well retained. So far our algorithm has been used in more than 1000 clinical cases. The success rate has reached 98%, and our algorithm can meet the clinical requirements. 
                           Fig. 13 shows a true all-ceramic crown restoration, which is designed using our algorithm, as well as the wearing result.

In this section, our method is compared with others (i.e., Steinbreche׳s [15] method, Blanz׳s [11] method, Zheng׳s [19] method, and the traditional manually-designed crown which is scanned using a 3D scanner) using a molar of the upper jaw (
                        Fig. 14). Fig. 14(a) comes from the relevant software, and Fig. 14(b) and (c) comes from the relevant paper.


                        Fig. 14(a) is a molar all-ceramic crown designed by Steinbreche׳s method. His method has been integrated in a dental CAD system. However, the method is only suitable for molars. The author deforms the tooth surface by controlling all the points on the model tooth, which may cause self-intersection and localized distortion when deformation is large. Fig. 14(a) shows that the tooth surface is rough and exhibits localized distortion, which requires further processing.


                        Fig. 14(b) is a molar all-ceramic crown designed by Blanz׳s [11] method, which is based on statistical theory. In his study, an “average tooth” is used to generate the tooth surface. Although the crown׳s occlusal surface is true as nature, the calculation of the “average tooth” is complex because the calculation of each “average tooth” needs more than 166 scanned individual teeth. In addition, when reconstructing the occlusal surface, the feature points need to be selected by hand. His method is also only used for molars and premolars.


                        Fig. 14(c) illustrates a molar all-ceramic crown designed by Zheng׳s [19] method. A 3D morphing technique is used to reconstruct the missing inlay or crown occlusal surface. However, the method is designed only for molars, as feature points need to be identified for the 3D morphing technique, and less feature points can be identified in an incisor tooth. Moreover, the shape of tooth preparation is different and irregular, and distinguished feature points on tooth preparations are often insufficient. Thus, Zheng׳s [19] method may not be clinically suitable.


                        Fig. 14(d) is a traditional manually-designed all-ceramic crown which is scanned using a 3D scanner. The traditional manual restoration needs intensive labor work of technicians. There are almost no details on the crown׳s surface.

Compared to the aforementioned methods, the iterative deformation based on SFP can adapt to almost all kinds of tooth types and achieve attractive results. Fig. 14(e) is a molar all-ceramic crown designed by our method. The crown is close to the natural tooth, and its morphological features are retained.

Based on the tests on more than 1000 clinical models provided by Peking University School of Stomatology, results have proven the accuracy and feasibility of our method. The technique has been successfully integrated into our dental CAD system. A comparison of the qualitative differences among the aforementioned methods is summarized in 
                        Table 4.

In this paper, a robust, practical, and detail-preserved algorithm for the all-ceramic crown repair has been proposed. To guarantee stability and applicability, the Laplacian constrained deformation technique is used to reconstruct the tooth surface. This deformation technique allows dental technicians to use their preferred teeth library for reconstruction. To avoid self-intersection and distortion, the deformation is implemented iteratively. During the iterative deformation, different deformation zones are given different deformation weights, which helps control deformation. SFPs on standard teeth are extracted to preserve the morphological features of the results. Extensive experiments and clinical trials have validated the effectiveness of the proposed algorithm.

After the evaluation by experienced dental technicians, this method has been successfully integrated into an available Dental CAD system, and it is being used in the dental application on a daily basis for a wide range of clinical situations with very promising results.

Although the proposed method has been successfully integrated in the Dental CAD system, following improvements are proposed in our future work. First, to improve the initial location of a standard tooth positioned by hand, an automatic positioning method will be developed for the positioning operation. Second, the final all-ceramic crown needs to be modified according to its neighboring and antagonist teeth. The collision detection and local modification are required after a crown is designed.

We declare that we do not have any commercial or associative interest that represents a conflict of interest in connection with the work submitted.

@&#ACKNOWLEDGMENTS@&#

This study was supported by the National Natural Science Foundation of China (No. 51205192), and the National High Technique Research and Development Program of China (No. SS2013AA040801).

@&#REFERENCES@&#

