@&#MAIN-TITLE@&#Graphical exploration of the weight space in three-objective mixed integer linear programs

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We explore the weight space in multiobjective mixed-integer linear programming.


                        
                        
                           
                           Subsets of indifference regions in the weight space are computed for MOMILP problems.


                        
                        
                           
                           Adjacent extreme nondominated solutions are explored for two and three-objective problems.


                        
                        
                           
                           All extreme nondominated solutions can be computed.


                        
                        
                           
                           We present a graphics-based computer implementation.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Multiple objective programming

Mixed integer linear programming

Weighted-sum scalarization

Weight space

Extreme supported nondominated solutions

@&#ABSTRACT@&#


               
               
                  In this paper we address the computation of indifference regions in the weight space for multiobjective integer and mixed-integer linear programming problems and the graphical exploration of this type of information for three-objective problems. We present a procedure to compute a subset of the indifference region associated with a supported nondominated solution obtained by the weighted-sum scalarization. Based on the properties of these regions and their graphical representation for problems with up to three objective functions, we propose an algorithm to compute all extreme supported nondominated solutions adjacent to a given solution and another one to compute all extreme supported nondominated solutions to a three-objective problem. The latter is suitable to characterize solutions in delimited nondominated areas or to be used as a final exploration phase. A computer implementation is also presented.
               
            

@&#INTRODUCTION@&#

A multiobjective integer or mixed-integer linear programming (MOMILP) problem with p ≥ 2 objective functions can be written as:

                        
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         max
                                                         
                                                         
                                                            z
                                                            1
                                                         
                                                         =
                                                         
                                                            f
                                                            1
                                                         
                                                         
                                                            (
                                                            x
                                                            )
                                                         
                                                         =
                                                         
                                                            c
                                                            1
                                                         
                                                         x
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         .
                                                         .
                                                         .
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         max
                                                         
                                                         
                                                            z
                                                            p
                                                         
                                                         =
                                                         
                                                            f
                                                            p
                                                         
                                                         
                                                            (
                                                            x
                                                            )
                                                         
                                                         =
                                                         
                                                            c
                                                            p
                                                         
                                                         x
                                                      
                                                   
                                                
                                             
                                             }
                                          
                                          Max
                                          
                                          z
                                          =
                                          f
                                          
                                             (
                                             x
                                             )
                                          
                                          =
                                          C
                                          x
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                             s
                                             
                                                .
                                                t
                                             
                                             .
                                             
                                             x
                                             ∈
                                             X
                                             =
                                             {
                                             x
                                             ∈
                                             
                                                R
                                                n
                                             
                                             :
                                             A
                                             x
                                             =
                                             b
                                             ,
                                             
                                             x
                                             ≥
                                             0
                                             ,
                                             
                                             
                                                x
                                                j
                                             
                                             ∈
                                             
                                                N
                                                0
                                             
                                             ,
                                             
                                             j
                                             ∈
                                             I
                                             }
                                          
                                       
                                    
                                 
                              
                           
                        
                     where A is the m × n technological coefficients matrix, being all constraints transformed into equations by introducing appropriate slack or surplus variables, and b ∈ ℝ
                        m
                      is the right-hand-side vector. I ⊆ {
                        
                           1
                           ,
                           …
                           ,
                           n
                        
                     }, I ≠ ∅ is the set of indices of the integer variables, with n the total number of variables (decision variables plus slack/surplus variables). It is assumed that X is bounded and non-empty. C is the p × n objective matrix whose rows are the vectors ck
                      ∈ ℝ
                        n
                     , 
                        
                           k
                           =
                           1
                           ,
                           …
                           ,
                           p
                        
                     .

If all decision variables are integer, then the multiobjective problem is pure integer (MOILP), which is a special case of the multiobjective mixed-integer case. In what follows we will denote by MOMILP the general case, in which integrality constraints are imposed on all or a subset of the decision variables.

A feasible solution x′ ∈ X is efficient if and only if there is no other solution x ∈ X such that fk
                     (x) ≥ fk
                     (x′) for all 
                        
                           k
                           =
                           1
                           ,
                           …
                           ,
                           p
                        
                      and fk
                     (x) > fk
                     (x′) for at least one k. Let XE
                      denote the set of all efficient solutions.

Let Z ⊂ ℝ
                        p
                      be the image of the feasible region X in the objective space such that Z = {z ∈ℝ
                        p
                     : z = Cx, x ∈ X}. If x′ ∈ X is efficient, 
                        
                           
                              z
                              ′
                           
                           =
                           f
                           
                              (
                              
                                 x
                                 ′
                              
                              )
                           
                           =
                           C
                           
                              x
                              ′
                           
                        
                      is a nondominated criterion point. Let ZND
                      be the set of all nondominated points, 
                        
                           
                              Z
                              
                                 N
                                 D
                                 
                              
                           
                           =
                           
                              {
                              
                                 
                                    z
                                    ′
                                 
                                 ∈
                                 Z
                                 :
                                 
                                    z
                                    ′
                                 
                                 =
                                 C
                                 
                                    x
                                    ′
                                 
                                 ,
                                 
                                    x
                                    ′
                                 
                                 ∈
                                 
                                    X
                                    E
                                 
                              
                              }
                           
                        
                     .

An important concept in MOMILP is the distinction between supported and unsupported nondominated/efficient solutions.

A nondominated point z′ ∈ ZND
                      is supported if it is located on the boundary of the convex hull of Z (conv Z). An unsupported nondominated point is located in the interior of conv Z (it is dominated by some convex combination of supported nondominated points). A supported (unsupported) nondominated point corresponds to a supported (unsupported) efficient solution.

We can further distinguish two types of supported nondominated points:

                        
                           (a)
                           extreme supported nondominated points z ∈ ZND
                              , which are vertices of conv Z; we will denote these nondominated points/efficient solutions as ESND solutions;

non-extreme supported nondominated points, which are located in the relative interior of a face of conv Z.

Let ZESND
                      denote the set of all ESND points/solutions in the objective space and XESND
                      the corresponding set in the decision space.

Supported nondominated solutions are optimal solutions to the weighted-sum scalarization program (Pλ) for some weight vector 
                        
                           λ
                           
                           ∈
                           Λ
                           =
                           
                           {
                           λ
                           
                           ∈
                           
                              R
                              p
                           
                           :
                           λ
                           
                              
                              k
                           
                           >
                           
                           0
                           ,
                           k
                           
                           =
                           1
                           ,
                           …
                           ,
                           p
                        
                     , 
                        
                           
                              ∑
                              
                                 k
                                 =
                                 1
                              
                              p
                           
                           
                              
                                 λ
                                 k
                              
                              =
                              1
                           
                        
                     }:

                        
                           (Pλ)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          max
                                          
                                             z
                                             λ
                                          
                                          =
                                          
                                             ∑
                                             
                                                k
                                                =
                                                1
                                             
                                             p
                                          
                                          
                                             
                                                λ
                                                k
                                             
                                             
                                                f
                                                k
                                             
                                             
                                                (
                                                x
                                                )
                                             
                                          
                                          =
                                          λ
                                          C
                                          x
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                             (
                                             
                                                P
                                                λ
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          s
                                          
                                             .
                                             t
                                          
                                          
                                             .
                                             
                                          
                                          
                                          
                                          x
                                          ∈
                                          X
                                       
                                    
                                 
                              
                           
                        
                     
                     Λ is usually called the weight space and the set of weight vectors that lead to the same nondominated solution is referred to as an indifference region in the weight space. The weights of the objective functions are the parameters in the (Pλ) scalarization program and the variation of parameters enables to attain different supported nondominated solutions. However, there are multiple parameter values that lead to the same solution, i.e. an indifference set on the parameter's space (weight space) can be defined for each supported nondominated solution.

The set Λ can be decomposed into subsets Λ(z′), ∀z′ ∈ ZND
                      such that z′ is supported, where Λ(z′) denotes the indifference region of z′ in the weight space. It represents the set of weight vectors λ that lead to z′ through the optimization of (Pλ), i.e., Λ(z′) = {λ ∈ Λ: λz′ ≥ λz, ∀z ∈ ZND
                     }. Indifference regions in the weight space are convex polytopes (Przybylski, Gandibleux, & Ehrgott, 2010).

The optimization of (Pλ) using the branch-and-bound method yields (at least) an ESND solution. If there are alternative optima, a further exploration of the branch-and-bound tree allows for computing non-extreme supported nondominated solutions. However, unsupported nondominated solutions are never obtained through (Pλ) even if a complete parameterization is attempted and all alternative solutions for a given λ ∈ Λ are analysed. The ESND points allow for the whole decomposition of the weight space into subsets Λ(z′), z′ ∈ ZESND
                     , because these, and only these points z′ ∈ ZESND
                     , correspond to indifference regions Λ(z′) of dimension p − 1 (the dimension of Λ) of a MOMILP problem. Therefore,

                        
                           Λ
                           =
                           
                              ⋃
                              
                                 
                                    z
                                    ′
                                 
                                 ∈
                                 
                                    Z
                                    
                                       E
                                       S
                                       N
                                       D
                                    
                                 
                              
                           
                           
                              Λ
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                     . Non-extreme supported nondominated points are associated with indifference regions of lower dimension resulting from the intersection of the regions of ESND points (these properties can be found in Przybylski et al. (2010)).

Although the supported nondominated solutions (or even only the ESND solutions) constitute a subset of all nondominated solutions of the problem, they can provide important insights about the whole nondominated set because they are on the boundary (and the ESND are the vertices) of the convex hull of all nondominated points (Özpeynirci & Köksalan, 2010). Indifference regions in the weight space also constitute useful information for the decision maker. He/she may be indifferent to all weight combinations inside one region because they give rise to the same nondominated point.

An interactive graphical exploration of the weight space in multiobjective linear programming (MOLP) problems with three objective functions has been proposed in the TRIMAP method by Clímaco and Antunes (1987). The use of the weight space as a valuable means to gather information obtained from different interactive methods, and its graphical representation to present the information to the decision maker, has likewise been considered in other interactive MOLP computational tools (Alves, Antunes, & Clímaco, 2015; Antunes, Alves, Silva, & Clímaco, 1992). Also considering MOLP problems, Benson and Sun (2002) proposed a weight set decomposition algorithm to generate all extreme nondominated points.

The computation of indifference regions in other parameter spaces has also been addressed. Costa and Clímaco (1999) related reference points (using achievement scalarizing functions) and weights in MOLP and defined indifference regions on the reference point space. Alves and Clímaco (2001) analysed the shape of indifference regions in the reference point space (in general, non-convex regions) for all-integer MOILP problems and proposed an approach to define indifference sets of reference points as long as a directional search procedure (Alves & Clímaco, 2000) is performed.

Concerning MOMILP problems, Przybylski et al. (2010) and Özpeynirci and Köksalan (2010) have exploited the weight space to design algorithms intended to generate all ESND points. These two approaches are reviewed in the next section.

In the present work we focus on ESND solutions of MOMILP problems and the exploration of their indifference regions in the weight space. We propose an approach that is able to compute a subset of an indifference region using the branch-and-bound tree that solved the weighted-sum scalarizing program (Pλ) for a given weight vector λ ∈ Λ. Acting alone, this approach rarely calculates the entire indifference region for the corresponding ESND solution, and the obtained sub-region may be much smaller than the full region. However, indifference regions can be iteratively enlarged using some properties, namely convexity. Accordingly, we have developed a procedure that merges and expands sub-regions by building the convex hull of joined or disjoined sub-regions of the same solution. An indifference region can be enlarged not only from a merging process but also as a result of properties that relate adjacent regions of different solutions. We explore these properties for three objective problems, proposing an algorithm to compute all ESND solutions adjacent (in the weight space sense) to a known ESND solution or even to compute all ESND solutions of a three-objective problem. These features can naturally be applied to problems with two objective functions, but we will omit this case herein as it is straightforward. We also present a computer implementation in which the indifference regions are graphically depicted.

The rest of the paper is organized as follows. In Section 2 the related work is reviewed. Section 3 introduces the technique to compute an indifference sub-region for an ESND solution and an illustrative example is shown. Section 4 gives the main principles to explore the weight space in MOMILP problems with three objective functions and describes the algorithms to compute the ESND solutions adjacent to a given solution and to compute all ESND solutions. Section 5 presents an overview of the computational implementation, illustrating the previous features using two examples, and presents computational experiments. The paper ends with some concluding remarks and future work in Section 6.

@&#RELATED WORK@&#


                     Przybylski et al. (2010) proposed a recursive algorithm for finding Z
                        ESND
                      which is based on the following idea: in each iteration, the weight space is completely decomposed with the solutions computed so far and the common facets of the regions are explored in order to compute new solutions and update the weight space decomposition. Let S ⊆ZESND
                      denote the set of ESND points known at a given iteration. For each z'⊆S a super-region
                     
                        
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                      is defined such that 
                        
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                           =
                           
                              {
                              λ
                              ∈
                              Λ
                              :
                              λ
                              
                                 z
                                 ′
                              
                              ≥
                              λ
                              z
                              ,
                              ∀
                              z
                              ∈
                              S
                              }
                           
                        
                      Then, the algorithm searches for new nondominated points at the boundaries of 
                        
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                     . For instance in three-objective problems, if z′, z″ ∈ S are adjacent in the current weight space decomposition, then 
                        
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                           ∩
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 
                                    ′
                                    ′
                                 
                              
                              )
                           
                        
                      is a line segment; suppose that λ
                     1 and λ
                     2 are the extreme points of this edge; the algorithm investigates the edge by computing all the ESND points of the following bi-objective problem: 
                        
                           max
                           {
                           
                              (
                              
                                 f
                                 1
                                 ′
                              
                              
                                 (
                                 x
                                 )
                              
                              ,
                              
                                 f
                                 2
                                 ′
                              
                              
                                 (
                                 x
                                 )
                              
                              )
                           
                           =
                           
                              (
                              
                                 λ
                                 1
                              
                              C
                              x
                              ,
                              
                                 λ
                                 2
                              
                              C
                              x
                              )
                           
                           :
                           x
                           ∈
                           X
                           }
                        
                     . Thus, a recursive algorithm is developed. As new ESND points are added to S, the weight space decomposition is updated until all elements of Z
                        ESND
                      have been found. At the end of the algorithm, the regions 
                        
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                      are the real ones, i.e. 
                        
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                           =
                           Λ
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                     . The authors have further proved that a suitable initialization of the algorithm must contain the nondominated extreme points that optimize individually each objective function. This initialization enables to only explore the facets of each 
                        
                           
                              Λ
                              +
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                      that are not located on the boundary of Λ.


                     Özpeynirci and Köksalan (2010) proposed another algorithm with the same purpose of finding all points of ZESND
                     . This algorithm does not use recursion, but it has a strong combinatorial component. The basic idea consists in introducing p dummy points in the objective space, Zm
                      = {mk
                      = Mek, k = 1,…,p} where M is a large positive constant and ek
                      is the k
                     th unit vector. These points are infeasible and nondominated with respect to all points of ZESND
                     . They have such characteristics that their indifference regions in the weight space touch all the boundary of Λ (where one of the weights is close to zero). The points mk
                      are incorporated into the search, which turns to be on ZESNDm
                      = ZESND
                      ∪ Zm
                     . The authors prove that each point z′ ∈ ZESND
                      is adjacent (in the weight space) to at least p points of ZESNDm
                     . Denoting, as before, by S the set of ESND points identified so far, the algorithm successively selects different subsets of p points from S ∪ Zm
                      and, for each subset, defines the vector λ normal to the hyperplane that passes through these points. If all components of λ are positive, then the respective weighted-sum of the objectives (Pλ) is optimized in order to try to find a new ESND point or to conclude that the selected points define a facet of conv ZESND
                     . The algorithm finishes when no more points or facets can be identified.

In both algorithms previously described, indifference regions in the weight space are not known during the intermediate stages of the algorithm since the weight space is decomposed using the current set of ESND points. This information is only available at the end, when all ESND solutions have been computed. Actually, the goal of these algorithms is not to compute indifference regions but rather to use this type of information as an instrumental means to generate all ESND solutions.

Indifference regions in the weight space are useful for an interactive search for new nondominated solutions. The decision maker may bypass all weight combinations within each region as all of them yield the same solution. With the purpose of obtaining this type of information, we have developed an approach that is able to define a subset of an indifference region whenever an ESND solution is computed through the optimization of (Pλ). Although this is only a sub-region, it has the advantage that all the weight vectors included therein actually result in the same solution. This approach is described in the next section.

The approach we propose herein to compute indifference sub-regions in the weight space for MOMILP problems uses information provided by the branch-and-bound tree that solved (Pλ) combined with sensitivity analysis on the weighted-sum objective function. This analysis is performed in the terminal nodes (leaves) of the tree.

In MOLP, the indifference region corresponding to a basic efficient solution x′ can be computed as follows (in, e.g., Yu and Zeleny (1976)): let x'
                        B
                      be the basic variables and x'
                        N
                      the non-basic variables of x′; let B and N be the sub-matrices of A corresponding to x'
                        B
                      and x'
                        N
                     , respectively; let CB
                      and CN
                      be the respective sub-matrices of C; the indifference region in the weight space associated with x′ is defined by 
                        
                           
                              {
                              
                                 λ
                                 ∈
                                 Λ
                                 :
                                 λ
                                 (
                                 
                                    C
                                    B
                                 
                                 
                                    B
                                    
                                       −
                                       1
                                    
                                 
                                 N
                                 −
                                 
                                    C
                                    N
                                 
                                 )
                                 ≥
                                 0
                              
                              }
                           
                           =
                           
                              {
                              
                                 λ
                                 ∈
                                 Λ
                                 :
                                 λ
                                 W
                                 ≥
                                 0
                              
                              }
                           
                        
                      with 
                        
                           W
                           =
                           
                              C
                              B
                           
                           
                              B
                              
                                 −
                                 1
                              
                           
                           N
                           −
                           
                              C
                              N
                           
                        
                      being the reduced cost matrix.

Consider now a MOMILP problem for which a weighted-sum program (Pλ) with λ = λo
                      has been optimized using the branch-and-bound method, yielding the efficient solution xo
                     . Let zo
                      be the corresponding non-dominated point: zo
                      = Cxo
                     . An indifference sub-region associated with this solution, say 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 o
                              
                              )
                           
                        
                     , can be computed by inspecting the feasible terminal nodes of the branch-and-bound tree. The procedure is as follows:

                        
                           
                              Step 1.
                           
                           For each terminal node i of the branch-and-bound tree whose linear problem is feasible an indifference region Ri
                               is computed as in MOLP. Let T denote the set of indices of the feasible terminal nodes. An intersection region of the Ri
                              , for all i ∈ T, is considered: 
                                 
                                    R
                                    =
                                    
                                       ⋂
                                       
                                          i
                                          ∈
                                          T
                                       
                                    
                                    
                                       R
                                       i
                                    
                                 
                              .

Add to R the constraints resulting from the comparison of the weighted-sum value in the optimal node (node o) with respect to the other feasible terminal nodes of the tree (nodes i ∈ T\{o}). Thus, 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          o
                                       
                                       )
                                    
                                    =
                                    R
                                    ∩
                                    
                                       {
                                       
                                          λ
                                          
                                             z
                                             o
                                          
                                          ≥
                                          
                                             z
                                             i
                                          
                                          
                                             ,
                                             ∀
                                             i
                                             ∈
                                             T
                                             ∖
                                             
                                                {
                                                o
                                                }
                                             
                                          
                                       
                                       }
                                    
                                 
                              , where zi
                               = C xi
                               is the objective point for the solution xi
                               obtained in the node i.


                     
                        Proposition 1
                        
                           The set
                           
                              
                                 
                                    Λ
                                    ¯
                                 
                                 
                                    (
                                    
                                       z
                                       o
                                    
                                    )
                                 
                              
                            
                           obtained by Steps 1 and 2 above is an indifference sub-region in the weight space for the nondominated point zo
                            = Cx° corresponding to the efficient solution xo of the MOMILP problem.


                     
                        Proof
                        The integer/mixed-integer linear program (Pλ) with λ = λo
                           , say 
                              
                                 (
                                 
                                    P
                                    
                                       
                                          λ
                                       
                                       o
                                    
                                 
                                 )
                              
                           , has been solved using the branch-and-bound method, yielding the solution xo
                           . Let the node o be the optimal node of the branch-and-bound tree. Each node i of the tree is associated with a linear sub-problem of 
                              
                                 (
                                 
                                    P
                                    
                                       
                                          λ
                                       
                                       o
                                    
                                 
                                 )
                              
                           , say 
                              
                                 
                                    (
                                    L
                                    
                                       P
                                       
                                          
                                             λ
                                             o
                                          
                                       
                                       i
                                    
                                    )
                                 
                                 :
                                 
                                    {
                                    
                                       max
                                       
                                          λ
                                          o
                                       
                                       C
                                       x
                                       :
                                       x
                                       ∈
                                       
                                          X
                                          
                                             L
                                             P
                                          
                                          i
                                       
                                    
                                    }
                                 
                              
                           , where 
                              
                                 X
                                 
                                    L
                                    P
                                 
                                 i
                              
                            denotes the linear feasible region in the node i. Let T be the set of indices {i} of the terminal nodes (leaves) of the tree for which 
                              
                                 X
                                 
                                    L
                                    P
                                 
                                 i
                              
                            ≠ ∅. By the principles of the branch-and-bound method, none feasible solution x ∈ X is excluded from 
                              
                                 
                                    ⋃
                                    
                                       i
                                       ∈
                                       T
                                    
                                 
                                 
                                    X
                                    
                                       L
                                       P
                                    
                                    i
                                 
                                 .
                              
                            Let xi
                            be the current optimal solution of 
                              
                                 (
                                 L
                                 
                                    P
                                    
                                       
                                          λ
                                          o
                                       
                                    
                                    i
                                 
                                 )
                              
                            for i ∈ T. The MOLP indifference region of xi
                            is 
                              
                                 
                                    R
                                    i
                                 
                                 =
                                 
                                    {
                                    λ
                                    ∈
                                    Λ
                                    :
                                    λ
                                    
                                       W
                                       i
                                    
                                    ≥
                                    0
                                    }
                                 
                              
                           , with Wi
                            being the reduced cost matrix of node i. This means that xi
                            optimizes 
                              
                                 
                                    (
                                    L
                                    
                                       P
                                       λ
                                       i
                                    
                                    )
                                 
                                 :
                                 
                                    {
                                    
                                       max
                                       λ
                                       C
                                       x
                                       :
                                       x
                                       ∈
                                       
                                          X
                                          
                                             L
                                             P
                                          
                                          i
                                       
                                    
                                    }
                                 
                              
                            for all λ ∈ Ri
                           . Thus,

                              
                                 R
                                 =
                                 
                                    ⋂
                                    
                                       i
                                       ∈
                                       T
                                    
                                 
                                 
                                    R
                                    i
                                 
                              
                            is the set of the weight vectors λ that do not change any basic solution associated with the feasible terminal nodes of the current tree, i.e., for all i ∈ T, the corresponding xi
                            optimizes 
                              
                                 (
                                 L
                                 
                                    P
                                    λ
                                    i
                                 
                                 )
                              
                            for all λ ∈ R.

In addition, if, for a given λ ∈ R, the value of the objective function of 
                              
                                 (
                                 L
                                 
                                    P
                                    λ
                                    o
                                 
                                 )
                              
                            (node o, with solution xo
                           ) is better than the value of the objective function of any other 
                              
                                 (
                                 L
                                 
                                    P
                                    λ
                                    i
                                 
                                 )
                              
                           , i ∈ T, then the branch-and-bound tree remains unchanged with xo
                            optimal to (Pλ). This is valid for any λ ∈ R such that λCxo
                            ≥ λCxi
                           , ∀i ∈ T\{o}. Hence, xo
                            is an optimal solution of (Pλ) for all

                              
                                 λ
                                 ∈
                                 
                                    Λ
                                    ¯
                                 
                                 
                                    (
                                    
                                       z
                                       o
                                    
                                    )
                                 
                                 =
                                 R
                                 ∩
                                 
                                    {
                                    λ
                                    
                                       z
                                       o
                                    
                                    ≥
                                    λ
                                    
                                       z
                                       i
                                    
                                    ,
                                    ∀
                                    i
                                    ∈
                                    T
                                    ∖
                                    
                                       {
                                       o
                                       }
                                    
                                    }
                                 
                              
                           , with zi
                            = Cxi
                           , which means that 
                              
                                 
                                    Λ
                                    ¯
                                 
                                 
                                    (
                                    
                                       z
                                       o
                                    
                                    )
                                 
                              
                            is an indifference sub-region in the weight space for (xo, zo
                           ).□

In sum, Step 1 ensures that the included λ-vectors do not change the basic solutions associated with each feasible terminal node of the current tree. Step 2 restricts 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 o
                              
                              )
                           
                        
                      to λ-vectors for which the node o remains the optimal one for (Pλ), i.e. provides a weighted-sum value larger or equal to the values of all the other terminal nodes.

Due to the normalization 
                        
                           
                              λ
                              1
                           
                           +
                           
                              λ
                              2
                           
                           +
                           ⋯
                           +
                           
                              λ
                              
                                 p
                                 
                              
                           
                           =
                           1
                        
                     , the weight space can be represented in a p − 1 dimensional diagram. The following example illustrates the procedure described above using a small integer problem with 3 objective functions. The indifference sub-regions are shown in the two-dimensional projection (λ
                     1, λ
                     2) in which the origin (λ
                     1,λ
                     2) = (0,0) represents the point where λ
                     3 = 1.


                     Example:
                     
                        
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          max
                                          
                                          
                                             z
                                             1
                                          
                                          =
                                          
                                             x
                                             1
                                          
                                          −
                                          
                                             x
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          max
                                          
                                          
                                             z
                                             2
                                          
                                          =
                                          
                                          
                                             x
                                             1
                                          
                                          +
                                          2
                                          
                                             x
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          max
                                          
                                          
                                             z
                                             3
                                          
                                          =
                                          −
                                          
                                             x
                                             1
                                          
                                          +
                                          2
                                          
                                             x
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          s
                                          
                                             .
                                             t
                                          
                                          .
                                          
                                          
                                          
                                             x
                                             1
                                          
                                          +
                                          6
                                          
                                             x
                                             2
                                          
                                          ≤
                                          21
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                          14
                                          
                                             x
                                             1
                                          
                                          +
                                          
                                          6
                                          
                                             x
                                             2
                                          
                                          ≤
                                          63
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             x
                                             1
                                          
                                          ,
                                          
                                          
                                             x
                                             2
                                          
                                          ≥
                                          
                                          0
                                          
                                          
                                             and
                                             
                                             integer
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

The problem's decision space is depicted in Fig. 1
                     , where all efficient solutions are marked with a larger dot and their variable values are shown. Solutions xA, xB, xC
                      and xD
                      are the extreme supported efficient solutions. Solutions x = (3, 1) and x = (3, 2) are unsupported, and x = (1, 3) and x = (2, 3) are non-extreme supported solutions.

Firstly, consider that the weight vectors λ
                     1 = (0.99, 0.005, 0.005), λ
                     2 = (0.005, 0.99, 0.005) and λ
                     3 = (0.005, 0.005, 0.99) are chosen in order to compute efficient solutions that optimize individually each objective function. These are solutions xA, xC
                      and xD
                     , respectively. The respective indifference sub-regions in the weight space calculated by the procedure described above are the polygons A1, C1 and D1 shown in Fig. 2(
                     a).

Let us now consider that other weight vectors are selected from the unfilled areas of the weight diagram. If λ
                     3 = (0.57, 0.28, 0.14) is chosen, the point indicated by the arrow in Fig. 2(b), then solution xB
                      is computed and the indifference sub-region B1 is obtained (see Fig. 2(b)). Next, λ
                     4 = (0.52, 0.4, 0.08) is chosen and, after that, λ
                     5 = (0.13, 0.44, 0.43), which are indicated by arrows in Fig. 2(
                     c), respectively on the right and on the left of C1. Both weight vectors lead to solution xC
                      and the resulting indifference sub-regions are C2 (which contains C1) and C3, represented in Fig. 2(c). As we can observe in Fig. 2(c), the weight space is now completely filled, so {xA, xB, xC, xD
                     } constitutes the set of all ESND solutions of the problem. The whole indifference regions in the weight space of these solutions are, respectively, A1, B1, C1 ∪ C2 ∪ C3 = C2 ∪ C3 and D1.

Three indifference sub-regions were computed for solution xC
                      because this solution was obtained from different branch-and-bound trees. In order to better illustrate the procedure described above to compute the indifference sub-regions and, in particular, the case of solution xC
                     , we show in Fig. 3(a) and (b) the branch-and-bound trees that produced regions C2 and C3, respectively.

Consider the construction of C2. Let 
                        
                           R
                           a
                           o
                        
                      and 
                        
                           R
                           a
                           1
                        
                      be the MOLP indifference regions corresponding to the nodes o and 1 of the tree in Fig. 3(a), which have been computed according to Step 1 of the procedure. In addition, Step 2 defines the constraint 
                        
                           λ
                           
                              z
                              o
                           
                           ≥
                           λ
                           
                              z
                              1
                           
                           ⇔
                           0
                           
                              λ
                              1
                           
                           +
                           9
                           
                              λ
                              2
                           
                           +
                           3
                           
                              λ
                              3
                           
                           ≥
                           3
                           
                              λ
                              1
                           
                           +
                           6
                           
                              λ
                              2
                           
                           −
                           2
                           
                              λ
                              3
                           
                           ⇔
                           −
                           3
                           
                              λ
                              1
                           
                           +
                           3
                           
                              λ
                              2
                           
                           +
                           5
                           
                              λ
                              3
                           
                           ≥
                           0
                        
                     .

Thus, 
                        
                           C
                           2
                           =
                           
                              R
                              a
                              o
                           
                           ∩
                           
                              R
                              a
                              1
                           
                           ∩
                           
                              {
                              −
                              3
                              
                                 λ
                                 1
                              
                              +
                              3
                              
                                 λ
                                 2
                              
                              +
                              5
                              
                                 λ
                                 3
                              
                              ≥
                              0
                              }
                           
                        
                     .


                     
                        
                           C
                           3
                           =
                           
                              R
                              b
                              o
                           
                        
                     , where 
                        
                           R
                           b
                           o
                        
                      is the MOLP indifference region of the node o of the tree in Fig. 3(b) – Step 1. No other feasible terminal node exists, so Step 2 is not applied.

The approach described above is able to compute a subset of an indifference region using information from the branch-and-bound tree that solved the weighted-sum scalarizing program (Pλ) for a given weight vector λ ∈ Λ. This approach may compute a small region when compared with the complete indifference region of the ESND solution. Fortunately, some properties enable to enlarge sub-regions when other (Pλ) are solved leading to the same solution or to neighbouring solutions. We will now present these properties.

Firstly, indifference regions in the weight space are always convex. This property enables to merge sub-regions computed for the same solution by defining the convex hull of their union. We have implemented a QuickHull algorithm for ℝ2 (Bykat, 1978; Eddy, 1977) to perform this merging task for three-objective problems, in which the indifference regions are polygons. Fig. 4
                     
                      illustrates the merging process. We omit herein the bi-objective case as it is straightforward.

Secondly, suppose that we want to explore the surrounding area of an already known ESND solution. Let z
                     1 be its nondominated criterion point and 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      the indifference sub-region currently known for z
                     1. If we choose a weight vector outside the region, but close to its limits, and optimize the respective weighted-sum, one of two situations may occur: z
                     1 is obtained again and the indifference sub-regions can be merged, redefining 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                     ; or another ESND solution is computed, say z
                     2, and the respective indifference sub-region 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 2
                              
                              )
                           
                        
                      is defined. If a weight vector for each edge of the current 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      is investigated and no other property is used, the undesirable situation as the one illustrated in Fig. 5(
                     a) can arise: the polygon labelled with 1, 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                     , has 6 edges; apart from the one that touches the boundary of the weight space, all the other 5 edges were explored by choosing a weight vector close to the midpoint of the edge and optimizing the respective weighted-sum; 5 different ESND solutions were obtained whose indifference sub-regions are shown in Fig. 5(a); the figure seems to show that there are adjacencies to 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      that have not been explored. Fortunately, the next proposition enables us to conclude that all ESND solutions adjacent to z
                     1 have already been found and their indifference regions can be enlarged as shown in Fig. 5(b).


                     
                        Proposition 2
                        
                           Let λ
                           0, λ
                           1, λ
                           2 ∈ Λ be three weight vectors that are located on the same line segment. Let the nondominated criterion points za and zb optimize (P
                           λ
                           ) for both λ
                           0 
                           and λ
                           1. Let za also optimize (P
                           λ
                           ) for λ
                           2. Then zb also optimizes (P
                           λ
                           ) for λ
                           2.


                     
                        Proof
                        
                           . To prove that zb
                            optimizes (Pλ) for λ
                           2, it is sufficient to prove that zb
                            provides the same weighted-sum value as za
                           , i.e. λ
                           2
                           zb
                            = λ
                           2
                           za
                           .

The equation of the line passing through λ
                           0, λ
                           1, λ
                           2 can be defined as λ = λ
                           0 + t(λ
                           1 − λ
                           0) with t as a parameter. Thus, λ
                           2 = λ
                           0 + t
                           2(λ
                           1 − λ
                           0).


                           λ
                           2
                           zb
                            = [λ
                           0 + t
                           2(λ
                           1 − λ
                           0)]zb
                            = λ
                           0
                           zb
                            + t
                           2
                           λ
                           1
                           zb
                            − t
                           2
                           λ
                           0
                           zb
                            = λ
                           0
                           za
                            + t
                           2
                           λ
                           1
                           za
                            − t
                           2
                           λ
                           0
                           za
                            = [λ
                           0 + t
                           2(λ
                           1 − λ
                           0)]za
                            = λ
                           2
                           za
                           . So, zb
                            is an alternative optimal solution to za
                            when (P
                              λ
                           ) is optimized for λ
                           2.□


                     Proposition 2 enables to conclude that, if an indifference polygon intersects another polygon in part of an edge, then the whole line segment that defines the edge belongs to both indifference regions (as illustrated in Fig. 5, from (a) to (b)). Although formalized in a different way, Przybylski et al. (2010) proved a related result, showing that two adjacent indifference regions intersect in a maximal dimensional face.

Hence, when adjacencies are being explored, different situations may result in expanded indifference sub-regions. Consider that moving out from an edge of 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      leads to solution z
                     2 with indifference sub-region 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 2
                              
                              )
                           
                        
                     . Either 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 2
                              
                              )
                           
                        
                     , 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      or both may be enlarged as illustrated in Fig. 6. In addition, if the same solution is found, 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      grows by merging the two sub-regions and the adjacent regions may also be expanded, as illustrated in Fig. 7:
                      moving out from edge [AB] of 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                     , we obtain again z
                     1 and a new indifference sub-region 
                        
                           
                              
                                 Λ
                                 ¯
                              
                              ′
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      is defined; then, 
                        
                           
                              
                                 Λ
                                 ¯
                              
                              ′
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      and 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      are merged and, by Proposition 2, 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 2
                              
                              )
                           
                        
                      can be enlarged too.

The 
                     Merge & Expand iterative procedure to handle the merging of regions and the expansion impacts on the adjacent regions can be summarized as follows. Note that the expansion process repeats in a recursive way, because an enlarged region may produce a change in an adjacent region, which in turn changes another region adjacent to the latter, and so on:

                        
                           Case I:
                           If an edge of 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          1
                                       
                                       )
                                    
                                 
                               is investigated and a new solution z
                              2 is found (as in Fig. 6), the edge of 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          1
                                       
                                       )
                                    
                                 
                               under analysis ([AB] in Fig. 6) is added to 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          2
                                       
                                       )
                                    
                                 
                               and these are merged to form the convex hull. 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          2
                                       
                                       )
                                    
                                 
                               may be enlarged (Fig. 6(a) and (c)) or not (Fig. 6(b)). In any case, all the regions adjacent to 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          2
                                       
                                       )
                                    
                                 
                               are analysed to check whether they can be expanded (e.g. the expansion of 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          1
                                       
                                       )
                                    
                                 
                               in Fig. 6(b) and (c)). Whenever a region is expanded, the other regions that intersect it in a modified edge are then analysed. An iterative process occurs, which ends when no more region is modified.

If an edge of 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          1
                                       
                                       )
                                    
                                 
                               is investigated and the same solution is found (as in Fig. 7), then the process starts by merging the indifference sub-regions of z
                              1. The expanding procedure continues by analysing the regions adjacent to the new joined 
                                 
                                    
                                       Λ
                                       ¯
                                    
                                    
                                       (
                                       
                                          z
                                          1
                                       
                                       )
                                    
                                 
                               following a similar scheme as in case I.

In the following we propose an algorithm for three-objective problems that computes the ESND solutions adjacent to a given ESND solution z
                     1 according to the following definition.


                     
                        Definition 1
                        (Przybylski et al., 2010): Two ESND points z
                           1 and z
                           2 are adjacent if and only if Λ(z
                           1) ∩ Λ(z
                           2) is a polytope of dimension p − 2.

The algorithm to find the ESND solutions adjacent to z
                     1 explores iteratively all non-explored edges of a sub-region 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                     . This sub-region has been obtained from the branch-and-bound tree that optimized (Pλ) with a given λ (e.g. chosen by the user) that yielded z
                     1 (as described in Section 3). For each edge, a weight vector outside 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                     , near and central to that edge, is selected. If the edge is not on the boundary of the weight space and the picked weight vector is unknown, the corresponding weighted-sum program (P
                        λ
                     ) is optimized and either a new solution (z
                     2) or the same one (z
                     1) is obtained. A weight vector is known if it belongs to the indifference region of another known solution, say z
                     3. The Merge & Expand procedure is then run, starting with z
                     2 (Case I above) if a new solution has been computed, z
                     1 (Case II) if the same solution has been obtained or z
                     3 (Case I) if the adjacent solution to z
                     1 on that edge is already known. The edge analysed is marked as explored and labelled with the index of the adjacent solution if a different solution has been found (the label is 0 in case of an edge on the boundary of the weight space). New edges defined by the Merge & Expand procedure are marked as non-explored. The steps of the algorithm to find all ESND solutions adjacent to z
                     1 are formalized in Algorithm 1, where Adj denotes the set of ESND criteria points found by the algorithm. Initially, all edges of 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      are marked as non-explored. Algorithm 1 and its subroutines are presented in a sufficiently general form so that they can also be used by Algorithm 2
                     , presented afterwards, which computes all ESND solutions to the problem.

Now, let us detail how λi
                      is defined in Step 2 of Algorithm 1 – procedure Define_λi
                      – and its validation in Confirm_Adjacency.

The region 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      is a polygon defined by a list of vertices (V
                     0,V
                     1,…,Vv
                     ) in anticlockwise order. The edges of the region 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      are: [V
                     0
                     V
                     1], [V
                     1
                     V
                     2],…, [Vv
                     
                     −
                     1
                     Vv
                     ], [VvV
                     0]. Let the edge under investigation 
                        
                           
                              
                                 Λ
                                 ¯
                              
                              i
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      be represented by [Vi
                     
                     0
                     Vi
                     
                     1].

                        
                           
                              
                              
                                 
                                    
                                       Procedure Define_λi
                                          
                                        ([Vi
                                       
                                       0
                                       Vi
                                       
                                       1])
                                 
                                 
                                     Considering the representation of the weight space in a projection (λ1, λ2), the vertex points Vi
                                       
                                       0 and Vi
                                       
                                       1 are: Vi
                                       
                                       0 =
                                          
                                             (
                                             
                                                
                                                   λ
                                                   1
                                                   
                                                      i
                                                      0
                                                   
                                                
                                                ,
                                                
                                                   λ
                                                   2
                                                   
                                                      i
                                                      0
                                                   
                                                
                                             
                                             )
                                          
                                        and Vi
                                       
                                       1 =
                                          
                                             (
                                             
                                                
                                                   λ
                                                   1
                                                   
                                                      i
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   λ
                                                   2
                                                   
                                                      i
                                                      1
                                                   
                                                
                                             
                                             )
                                          
                                       .
                                 
                                 
                                     A point P′ = 
                                          
                                             (
                                             
                                                λ
                                                1
                                                ′
                                             
                                             ,
                                             
                                                λ
                                                2
                                                ′
                                             
                                             )
                                          
                                        outside 
                                          
                                             
                                                Λ
                                                ¯
                                             
                                             
                                                (
                                                
                                                   z
                                                   1
                                                
                                                )
                                             
                                          
                                        and close to the midpoint P of 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                i
                                             
                                             
                                                (
                                                
                                                   z
                                                   1
                                                
                                                )
                                             
                                          
                                        is defined as:
                                 
                                 
                                     
                                       P′ = P + ε
                                          
                                             (
                                             
                                                
                                                   λ
                                                   2
                                                   
                                                      i
                                                      1
                                                   
                                                
                                                −
                                                
                                                   λ
                                                   2
                                                   
                                                      i
                                                      0
                                                   
                                                
                                                ,
                                                
                                                   λ
                                                   1
                                                   
                                                      i
                                                      0
                                                   
                                                
                                                −
                                                
                                                   λ
                                                   1
                                                   
                                                      i
                                                      1
                                                   
                                                
                                             
                                             )
                                          
                                        with P = 
                                          
                                             (
                                             
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         1
                                                         
                                                            i
                                                            0
                                                         
                                                      
                                                      +
                                                      
                                                         λ
                                                         1
                                                         
                                                            i
                                                            1
                                                         
                                                      
                                                   
                                                   )
                                                
                                                /
                                                2
                                                ,
                                                
                                                   (
                                                   
                                                      
                                                         λ
                                                         2
                                                         
                                                            i
                                                            0
                                                         
                                                      
                                                      +
                                                      
                                                         λ
                                                         2
                                                         
                                                            i
                                                            1
                                                         
                                                      
                                                   
                                                   )
                                                
                                                /
                                                2
                                             
                                             )
                                          
                                        and ε a small positive value.
                                 
                                 
                                     
                                       P′ corresponds to λ
                                          i
                                        = 
                                          
                                             (
                                             
                                                λ
                                                1
                                                ′
                                             
                                             ,
                                             
                                                λ
                                                2
                                                ′
                                             
                                             ,
                                             1
                                             −
                                             
                                                λ
                                                1
                                                ′
                                             
                                             −
                                             
                                                λ
                                                2
                                                ′
                                             
                                             )
                                          
                                       .
                                 
                                 
                                    
                                       Output: λ
                                          i
                                       
                                    
                                 
                              
                           
                        
                     
                  

Since the vertices are in anticlockwise order, the expression above defines a point outside 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                     . Besides that, an accurate value of ε must be used. Initially, ε is set to a predefined small positive value (e.g. 0.01). If a solution different from z
                     1, say z′, is obtained for λi
                      in Algorithm 1, either by optimizing the respective weighted-sum (Step 3.2) or because λi
                      has been found to belong to 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                      already known (Step 3.3), then it is checked whether z′ is really adjacent to z
                     1 in the Confirm_Adjacency test. In negative case, the algorithm decreases ε and returns to Step 2, calling again Define_λi
                     . This process ensures that no gaps remain between indifference regions and the solutions yielded are surely adjacent to z
                     1.

                        
                           
                              
                              
                                 
                                    
                                       Procedure Confirm_Adjacency
                                        (z
                                       1, z′)
                                 
                                 
                                     Let 
                                          
                                             λ
                                             
                                                i
                                                0
                                             
                                          
                                        and 
                                          
                                             λ
                                             
                                                i
                                                1
                                             
                                          
                                        be the weight vectors corresponding to the vertices V
                                       
                                          i0 and V
                                       
                                          i1, respectively, that define the edge 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                i
                                             
                                             
                                                (
                                                
                                                   z
                                                   1
                                                
                                                )
                                             
                                          
                                        under exploration.
                                 
                                 
                                     
                                       If
                                       
                                          
                                             
                                                λ
                                                
                                                   i
                                                   0
                                                
                                             
                                             
                                                z
                                                1
                                             
                                             =
                                             
                                                λ
                                                
                                                   i
                                                   0
                                                
                                             
                                             
                                                z
                                                ′
                                             
                                          
                                        and 
                                          
                                             
                                                λ
                                                
                                                   i
                                                   1
                                                
                                             
                                             
                                                z
                                                1
                                             
                                             =
                                             
                                                λ
                                                
                                                   i
                                                   1
                                                
                                             
                                             
                                                z
                                                ′
                                             
                                          
                                        
                                       then
                                    
                                 
                                 
                                      
                                       Confirm_Adjacency ← true
                                 
                                 
                                     
                                       Else
                                    
                                 
                                 
                                      
                                       Confirm_Adjacency ← false
                                 
                                 
                                     
                                       End If
                                    
                                 
                                 
                                    
                                       Output: Confirm_Adjacency
                                    
                                 
                              
                           
                        
                     
                  

The Merge & Expand procedure starts with a region 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              z
                              )
                           
                        
                      and then propagates the changes to the adjacent regions of 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              z
                              )
                           
                        
                     , continuing to the adjacent regions of the latter, and so on, in a recursive manner that stops when no more change has to be propagated. Therefore, the parameter 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              z
                              )
                           
                        
                      of the routine Merge & Expand in Algorithm 1 just indicates the starting region. In order to provide a more formalized description of this procedure, let us first introduce some notation:

For each ESND point z′ already known, the current definition of 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                      may include several subsets that have to be merged to form the respective convex hull. Let us denote by 
                        
                           
                              
                                 Λ
                                 ¯
                              
                              h
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                     , h =1,…,H′ each subset of 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                      before the merging process.

                        
                           
                              
                              
                              
                                 
                                    
                                       Procedure Merge & Expand
                                       
                                    
                                 
                                 
                                    
                                       Step 1:
                                    Select a region 
                                          
                                             
                                                Λ
                                                ¯
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         Λ
                                                         ¯
                                                      
                                                      1
                                                   
                                                   
                                                      (
                                                      
                                                         z
                                                         ′
                                                      
                                                      )
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         Λ
                                                         ¯
                                                      
                                                      
                                                         H
                                                         ′
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         z
                                                         ′
                                                      
                                                      )
                                                   
                                                
                                                }
                                             
                                          
                                        such that H′ > 1.
                                 
                                 
                                    
                                    
                                       If 
                                       H′ = 1 for all known z′ 
                                       then Stop.
                                 
                                 
                                    
                                       Step 2:
                                    Apply the QuickHull procedure to 
                                          
                                             {
                                             
                                                
                                                   
                                                      Λ
                                                      ¯
                                                   
                                                   1
                                                
                                                
                                                   (
                                                   
                                                      z
                                                      ′
                                                   
                                                   )
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      Λ
                                                      ¯
                                                   
                                                   
                                                      H
                                                      ′
                                                   
                                                
                                                
                                                   (
                                                   
                                                      z
                                                      ′
                                                   
                                                   )
                                                
                                             
                                             }
                                          
                                        which joins the subsets and forms its convex hull, obtaining 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        with 
                                          
                                             H
                                             
                                                ′
                                                new
                                             
                                          
                                       =1. 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        is a polygon defined by a sequence of vertices (V
                                       0, 
                                          
                                             
                                                V
                                                1
                                             
                                             ,
                                             …
                                             ,
                                             
                                                V
                                                v
                                             
                                          
                                       ) in anticlockwise order. Each edge of 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        without correspondence in any 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                h
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                       , h =1,…, H′, is marked as non-explored; any edge of 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        existing in some 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                h
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        keeps its status and the label (if it is marked as explored). Let L be the list of solution indexes l ≠ 0, zl
                                        ≠ z′ that were labels of explored edges in 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                h
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                       , h =1,…,H′ but do not figure as labels of edges of 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        because the edges have changed. These zl
                                        are adjacent solutions to z′ not yet assigned to 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                       .
                                 
                                 
                                    
                                       Step 3:
                                    
                                       For each l ∈ L 
                                       do
                                    
                                 
                                 
                                    
                                    
                                       Search for an edge of 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        that intersects 
                                          
                                             
                                                Λ
                                                ¯
                                             
                                             
                                                (
                                                
                                                   z
                                                   l
                                                
                                                )
                                             
                                          
                                        by inspecting two
                                 
                                 
                                    
                                    
                                       consecutive vertices of 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   w
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                             ,
                                          
                                       say Vi
                                       
                                       0, Vi
                                       
                                       1, for which 
                                          
                                             
                                                λ
                                                
                                                   i
                                                   0
                                                
                                             
                                             
                                                z
                                                ′
                                             
                                             =
                                             
                                                λ
                                                
                                                   i
                                                   0
                                                
                                             
                                             
                                                z
                                                l
                                             
                                          
                                        and
                                 
                                 
                                    
                                    
                                       
                                       
                                          
                                             
                                                λ
                                                
                                                   i
                                                   1
                                                
                                             
                                             
                                                z
                                                ′
                                             
                                             =
                                             
                                                λ
                                                
                                                   i
                                                   1
                                                
                                             
                                             
                                                z
                                                l
                                             
                                          
                                       . Let this edge be denoted by 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   
                                                      w
                                                      i
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                       .
                                 
                                 
                                    
                                      -  Mark 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   
                                                      w
                                                      i
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        as explored with label l
                                    
                                 
                                 
                                    
                                      -  If
                                       
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   
                                                      w
                                                      i
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        does not coincide with any edge of 
                                          
                                             
                                                Λ
                                                ¯
                                             
                                             
                                                (
                                                
                                                   z
                                                   l
                                                
                                                )
                                             
                                          
                                        
                                       then
                                    
                                 
                                 
                                    
                                         
                                       
                                          
                                             
                                                Λ
                                                ¯
                                             
                                             
                                                (
                                                
                                                   z
                                                   l
                                                
                                                )
                                             
                                          
                                        ← 
                                          
                                             
                                                Λ
                                                ¯
                                             
                                             
                                                (
                                                
                                                   z
                                                   l
                                                
                                                )
                                             
                                          
                                        ∪ 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   
                                                      w
                                                      i
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                         
                                       Hl
                                        ← Hl
                                        +1
                                 
                                 
                                    
                                        
                                       End If
                                    
                                 
                                 
                                    
                                      -  Mark 
                                          
                                             
                                                
                                                   Λ
                                                   ¯
                                                
                                                
                                                   n
                                                   e
                                                   
                                                      w
                                                      i
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   z
                                                   ′
                                                
                                                )
                                             
                                          
                                        in 
                                          
                                             
                                                Λ
                                                ¯
                                             
                                             
                                                (
                                                
                                                   z
                                                   l
                                                
                                                )
                                             
                                          
                                        as explored with label′ (the index of z′)
                                 
                                 
                                    
                                     
                                       End For
                                    
                                 
                                 
                                    
                                     Return to Step 1.
                                 
                              
                           
                        
                     
                  

When the Merge & Expand procedure is called from Algorithm 1, the first selection of a region 
                        
                           
                              Λ
                              ¯
                           
                           
                              (
                              
                                 z
                                 ′
                              
                              )
                           
                        
                      such that H′ > 1 is provided as parameter. This procedure can also be used alone to merge indifference regions for the same solution obtained from independent optimizations of weighted-sums.


                     
                        Proposition 3
                        
                           
                              Algorithm 1
                            
                           computes all different ESND criteria points adjacent to the ESND z
                           1 
                           for a three-objective MOMILP problem.


                     
                        Proof
                        Any point z found by Algorithm 1 is adjacent to z
                           1 because the condition of 
                              Definition 1 is ensured by the Confirm_Adjacency test.

Suppose that there exists an ESND point zb
                            adjacent to z
                           1 that was not found by the Algorithm 1. By definition, Λ(z
                           1) ∩ Λ(zb
                           ) is a polytope of dimension p − 2, i.e., an edge. Let us denote this edge of Λ(z
                           1) by Λi
                           (z
                           1). Since the algorithm only finishes after all edges of Λ(z
                           1) have been explored, suppose that Λi
                           (z
                           1) has been marked as explored with label a, which means that za
                            was the adjacent solution found from the investigation of this edge. So, either Λ(zb
                           ) = Λi
                           (z
                           1) of dimension p − 2 instead of p − 1, and thus zb
                            is not an ESND point (Przybylski et al., 2010, Proposition 4), or Λ(zb
                           ) includes Λi
                           (z
                           1) and, at least, another weight vector, say λ
                           3 ∉ Λi
                           (z
                           1), belonging to the interior of either Λ(z
                           1) or Λ(za
                           ). Consider λ
                           1, λ
                           2 two different weight vectors of Λi
                           (z
                           1). Assume that λ
                           3 ∈ Λ(za
                           ). So, λ
                           1, λ
                           2 and λ
                           3 belong to the indifference region of za
                           . Consider the following system of linear equations with variables

                              
                                 z
                                 :
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   λ
                                                   1
                                                
                                                z
                                                =
                                                
                                                   λ
                                                   1
                                                
                                                
                                                   z
                                                   a
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   λ
                                                   2
                                                
                                                z
                                                =
                                                
                                                   λ
                                                   2
                                                
                                                
                                                   z
                                                   a
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   λ
                                                   3
                                                
                                                z
                                                =
                                                
                                                   λ
                                                   3
                                                
                                                
                                                   z
                                                   a
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           . Since the matrix of the system is full rank, then the system has only one solution: z = za
                           . Thus, there is no other solution whose indifference region shares three weight vectors with Λ(za
                           ). Hence, zb
                            = za
                           . Analogously, if λ
                           3 ∈ Λ(z
                           1) it can be concluded that zb
                            = z
                           1. This contradicts the hypothesis that zb
                            was not found.□

The algorithm to find all ESND criteria points (ZESND
                     ) of a three-objective MOMILP problem is a straightforward extension of Algorithm 1, in which adjacent solutions for all ESND points are explored. This is formalized in Algorithm 2.

This work has been mainly developed for three-objective problems. We have also implemented analogous algorithms for two-objective problems, although they are omitted herein because they are much simpler. Some of these features can also be extended to more than three objective functions. The way indifference sub-regions are computed (presented in Section 3) is valid for any number of objective functions. The Quickhull procedure (Bykat, 1978, Eddy, 1977) used in the Merge & Expand procedure is specific for ℝ2 but an extension to higher dimensions could be implemented, e.g. using the algorithm of Barber, Dabkin, and Huhdanpa (1996). Other instructions in this procedure would need to be adapted for higher dimensions in order to deal with faces of dimension p − 2 (instead of edges) of (p − 1)-dimensional polytopes. Also, faces of dimension p − 2 would be iteratively explored in Algorithm 1 (requiring a suitable definition of λi
                      in Define_λi
                     ) and the Confirm_Adjacency procedure would need to test the equality of the weighted-sum value of the two candidate solutions for p − 1 linearly independent weight vectors. However, the major purpose of these features is to allow the decision maker to perform a graphical exploration of the weight space and this would hardly be achieved in problems with more than three objective functions.

The procedures described in Sections 3 and 4 were implemented in Delphi XE5 for Windows. The graphical representation of the indifference regions in the weight space is available for problems with two or three objective functions, as well as the algorithms to compute the ESND solutions adjacent to a previously computed solution or to compute all ESND solutions of the problem. We will denote these algorithms by Adjacent-ESND and All-ESND, respectively. In case of the All-ESND algorithm, the user can run it after computing one or several ESND solutions or from the beginning when no solution has been computed (as in Algorithm 2). In the latter situation, the implemented algorithm starts by computing a solution that optimizes the weighted-sum (Pλ) with equal weights: λk
                      = 1/p, k = 1,…,p.

Note that, in a computer implementation with floating-point arithmetic, roundoff errors may introduce small differences between λ
                     I
                     z
                     1 and λ
                     I
                     z' for two adjacent criterion points z
                     1 and z′ and λI
                      a weight vector common to both indifference regions of z
                     1 and z′. Therefore, for numerical reasons, the Confirm_Adjacency procedure, which checks if 
                        
                           
                              λ
                              I
                           
                           
                              z
                              1
                           
                           =
                           
                              λ
                              I
                           
                           
                              z
                              ′
                           
                        
                     , I = i
                     0, i
                     1, considers a tolerance δ (a positive number close to 0), i.e. 
                        
                           
                              |
                           
                           
                              
                                 λ
                                 I
                              
                              
                                 z
                                 1
                              
                              −
                              
                                 λ
                                 I
                              
                              
                                 z
                                 ′
                              
                           
                           
                              |
                              ≤
                              δ
                           
                        
                     , I = i
                     0, i
                     1, where λi
                     
                     0 and λi
                     
                     1 are the weight vectors corresponding to the vertices of the edge 
                        
                           
                              
                                 Λ
                                 ¯
                              
                              i
                           
                           
                              (
                              
                                 z
                                 1
                              
                              )
                           
                        
                      whose analysis led to z′. Even considering a small value for δ, in problems with a large number of ESND points it may exist some solution between z
                     1 and z′ with a very narrow indifference region. So, we can state that the implemented algorithm calculates all adjacent solutions with a tolerance δ. In the results reported herein we have considered a relative tolerance given by 
                        
                           δ
                           =
                           
                              10
                              
                                 −
                                 5
                              
                           
                           ×
                           
                              |
                              
                                 
                                    λ
                                    I
                                 
                                 
                                    z
                                    1
                                 
                              
                              |
                           
                        
                      when 
                        
                           
                              |
                           
                           
                              
                                 λ
                                 I
                              
                              
                                 z
                                 1
                              
                              −
                              
                                 λ
                                 I
                              
                              
                                 z
                                 ′
                              
                           
                           
                              |
                              ≤
                              δ
                           
                        
                      is checked.

As noticed before, the main purpose of these tools is to provide a graphical exploration of the weight space in an interactive decision process, namely exploring neighbourhoods of solutions (using the Adjacent-ESND). This process may culminate with the All-ESND algorithm after computing several ESND solutions (either by isolated optimizations of weighted-sums or by the Adjacent-ESND) in problems with a small or moderate number of ESND solutions.

To illustrate these features, we present two examples, the first one using an integer problem and the second one using a mixed-integer problem. Next, we provide some insight into the evolution of the performance of the algorithm when the number of variables (integer and/or continuous) or the number of constraints is increased. The experiments were done in a computer with an Intel Core i7-2600K CPU@3.4 GHz and 8GB RAM. The weight space pictures were taken directly from the software.

Consider the following three-objective integer problem with 10 binary variables and 6 constraints:

                           
                              
                                 
                                    
                                       
                                          
                                             Max
                                             
                                             z
                                             =
                                             C
                                             x
                                          
                                       
                                    
                                    
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                             A
                                             x
                                             ≤
                                             b
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                             
                                                x
                                                j
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             ,
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             10
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              
                                 
                                    with
                                    
                                    C
                                    =
                                    
                                       [
                                       
                                          
                                             
                                                60
                                             
                                             
                                                19
                                             
                                             
                                                0
                                             
                                             
                                                0
                                             
                                             
                                                0
                                             
                                             
                                                73
                                             
                                             
                                                18
                                             
                                             
                                                29
                                             
                                             
                                                96
                                             
                                             
                                                72
                                             
                                          
                                          
                                             
                                                66
                                             
                                             
                                                11
                                             
                                             
                                                33
                                             
                                             
                                                27
                                             
                                             
                                                50
                                             
                                             
                                                48
                                             
                                             
                                                0
                                             
                                             
                                                72
                                             
                                             
                                                78
                                             
                                             
                                                39
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                3
                                             
                                             
                                                17
                                             
                                             
                                                25
                                             
                                             
                                                86
                                             
                                             
                                                49
                                             
                                             
                                                31
                                             
                                             
                                                15
                                             
                                             
                                                51
                                             
                                             
                                                93
                                             
                                          
                                       
                                       ]
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                [
                                                
                                                   
                                                      
                                                         7
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         22
                                                      
                                                      
                                                         35
                                                      
                                                      
                                                         12
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         6
                                                      
                                                      
                                                         6
                                                      
                                                      
                                                         32
                                                      
                                                   
                                                   
                                                      
                                                         8
                                                      
                                                      
                                                         15
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         22
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         16
                                                      
                                                      
                                                         35
                                                      
                                                      
                                                         49
                                                      
                                                      
                                                         23
                                                      
                                                      
                                                         46
                                                      
                                                   
                                                   
                                                      
                                                         23
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         16
                                                      
                                                      
                                                         41
                                                      
                                                      
                                                         23
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         20
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         15
                                                      
                                                   
                                                   
                                                      
                                                         49
                                                      
                                                      
                                                         16
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         26
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         21
                                                      
                                                      
                                                         36
                                                      
                                                      
                                                         6
                                                      
                                                      
                                                         13
                                                      
                                                      
                                                         46
                                                      
                                                   
                                                   
                                                      
                                                         28
                                                      
                                                      
                                                         43
                                                      
                                                      
                                                         10
                                                      
                                                      
                                                         11
                                                      
                                                      
                                                         38
                                                      
                                                      
                                                         17
                                                      
                                                      
                                                         22
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         32
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                   
                                                      
                                                         11
                                                      
                                                      
                                                         47
                                                      
                                                      
                                                         44
                                                      
                                                      
                                                         10
                                                      
                                                      
                                                         37
                                                      
                                                      
                                                         32
                                                      
                                                      
                                                         34
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         44
                                                      
                                                      
                                                         46
                                                      
                                                   
                                                
                                                ]
                                             
                                             
                                             and
                                          
                                       
                                    
                                    
                                       
                                          b
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                [
                                                
                                                   
                                                      
                                                         386
                                                      
                                                   
                                                   
                                                      
                                                         144
                                                      
                                                   
                                                   
                                                      
                                                         108
                                                      
                                                   
                                                   
                                                      
                                                         152
                                                      
                                                   
                                                   
                                                      
                                                         248
                                                      
                                                   
                                                   
                                                      
                                                         250
                                                      
                                                   
                                                
                                                ]
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Suppose that some weighted-sums with different weight vectors are firstly optimized and the corresponding sub-indifference regions are computed: considering the weight vector λ
                        1 = (1/3, 1/3, 1/3), the nondominated solution z
                        1 = (301, 314, 296) is obtained; next, λ
                        2 = (0.1, 0.1, 0.8) is chosen, which leads to z
                        2 = (259, 275, 352). The corresponding indifference sub-regions are shown in Fig. 8(a) (polygons labelled as 1 and 2, respectively).

The user is offered the possibility of inputting the weight values through a dialog box or selecting weights by clicking on a point in the unfilled area of the weight-space graph. Let us suppose that, using the latter option, the user points the weight vector given by the arrowhead in Fig. 8(a), which corresponds to λ
                        3 = (0.229, 0.234, 0.537). The optimization of this weighted-sum returns the already known solution z
                        2 and another indifference sub-region for this solution is computed –
Fig. 8(
                        b). The two sub-regions known for solution 2 are merged, building the one presented in Fig. 8(c).

Now, suppose that the decision maker wants to explore the neighbourhood of solution z
                        2. The Adjacent-ESND algorithm is called and the new solutions z
                        3 = (320, 292, 282) and z
                        4 = (270, 320, 311) are produced. The corresponding sub-regions are shown in Fig. 9(
                        a). At this stage, if All-ESND is executed, then three additional nondominated solutions are obtained whose objective points are z
                        5 = (330, 336, 225), z
                        6 = (276, 349, 265) and z
                        7 = (277, 358, 221). The weight-space becomes completely filled, as can be seen in Fig. 9(b). Hence, this problem has 7 extreme supported nondominated solutions.

Let us now consider a multiobjective mixed-integer problem with 3 objective functions, 20 variables (10 binary and 10 continuous variables) and 10 constraints. The data of the problem is provided in Appendix.

Suppose that the decision maker wishes to start the search by computing the nondominated solutions that optimize individually each objective function and explore their neighbourhood by looking for the ESND solutions adjacent to each of these solutions. In order to ensure that nondominated solutions are generated from the individual optimizations, zero weights are replaced with small positive weights. Thus, the weight vector λ
                        1 = (0.99, 0.005, 0.005) is firstly considered and solution 1 is obtained, which has one adjacent solution: solution 2 (Fig. 10(a)). Then, λ
                        2 = (0.005, 0.99, 0.005) is considered and solution 3 is obtained; its adjacent solutions are solutions 4 and 5 (Fig. 10(a)). λ
                        3 = (0.005, 0.005, 0.99) leads to solution 6, which has one adjacent solution: solution 7 (Fig. 10(a)).

Assuming that, next, the decision maker wants to know the adjacent solutions to solution 4, the Adjacent-ESND algorithm is called for this solution. It returns solutions 8, 9, 10 and 11 and the corresponding indifference sub-regions shown in Fig. 10(b). It is worth noting that, when all adjacent solutions are computed to a given solution, we get to know the complete indifference region for that solution. Therefore, we can see in Fig. 10(b) the complete indifference regions for solutions 1, 3, 4 and 6.

Finally, if the decision maker wants to know all ESND solutions of the problem and calls the All-ESND algorithm, a total of 49 nondominated solutions become known whose objective values are presented in Appendix. Fig. 11
                         shows the resulting decomposition of the weight space.
                     

Preliminary results have shown that the computational effort to compute the adjacent solutions of a given solution may vary substantially from one solution to another, even within the same problem. Therefore, in order to provide some general indications on the evolution of the computational effort with the increase of the number of variables and/or constraints, we have opted to show results of computing all ESND solutions of each problem (using Algorithm 2), although this is not the main purpose of this work. All computational times reported herein include the time spent not only in the search but also in graphical and display routines, including showing solution values, drawing indifference regions and updating other bar/scatter charts concerning the objective space.

For these computational experiments we used mixed-integer problems with continuous and binary variables. We considered the problem of Example 2 (in Appendix) without bounds on the continuous variables as a basis to generate other instances. This problem (with 10 binary, 10 continuous variables and 10 constraints) is denoted by Prob0.

Firstly, we considered the Group 1 of problems in which the number of binary variables (B) was increased to 20, 30 and 50, keeping the data of Prob0 for the existent variables, number of constraints and their right-hand-sides. These are Prob1.1, Prob1.2 and Prob1.3, respectively. Prob1.1 was created from Prob0 by generating coefficients for the new ten binary variables, Prob1.2 was created from Prob1.1, and so on. The coefficients in the objective functions (cij
                        ) and in the constraints (aij
                        ) are integer numbers that were randomly generated in the following ranges (where P means probability): 
                           
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                c
                                                
                                                   i
                                                   j
                                                
                                             
                                             =
                                             0
                                          
                                       
                                       
                                          
                                             P
                                             =
                                             0.2
                                          
                                       
                                    
                                    
                                       
                                          
                                             1
                                             ≤
                                             
                                                c
                                                
                                                   i
                                                   j
                                                
                                             
                                             ≤
                                             100
                                          
                                       
                                       
                                          
                                             P
                                             =
                                             0.8
                                          
                                       
                                    
                                 
                              
                              ,
                              
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                a
                                                
                                                   i
                                                   j
                                                
                                             
                                             =
                                             0
                                          
                                       
                                       
                                          
                                             P
                                             =
                                             0.2
                                          
                                       
                                    
                                    
                                       
                                          
                                             1
                                             ≤
                                             
                                                a
                                                
                                                   i
                                                   j
                                                
                                             
                                             ≤
                                             50
                                          
                                       
                                       
                                          
                                             P
                                             =
                                             0.8
                                          
                                       
                                    
                                 
                              
                           
                        . These rules had already been observed in Prob0 and were also used in the problems of the next groups.

In Group 2 the number of continuous variables (C) of Prob0 was increased to 20, 30 and 50, while keeping the number of binary variables equal to 10. These instances are Prob2.1, Prob2.2 and Prob2.3, respectively. Prob2.1 was created from Prob0 and each of the following ones was created from its predecessor.

Group 3 increased simultaneously the number of binary and continuous variables, joining the data of problems in Groups 1 and 2 to form three instances with 20B+20C, 30B+30C and 50B+50C variables (Prob3.1, Prob3.2 and Prob3.3, respectively). As before, the number of constraints and their right-hand-sides remained the same.

In order to test problems with different feasible ranges, Group 4 changed the right-hand-sides (RHS) of the constraints of the problems in Group 3. The RHS were randomly generated between 10n and 90n (n being the number of decision variables): n = 40 in Prob4.1, n = 60 in Prob4.2 and n = 100 in Prob4.3. Problems in Group 5 increased the number of constraints to 20, 30, 50, respectively to each problem of Group 4. The RHS were generated as in Group 4 and the same rules of the other groups were applied to generate the aij
                         coefficients. All the constraints are of the type “≤”. Finally, for illustrative purposes, we also report a few results for problems with 2 objective functions. We considered the problems of Group 3 without the third objective function. This is Group 3_2.

In the Examples 1 and 2 presented above, we considered ε = 0.01 as the basic (predefined) step for setting λi
                         in the procedure Define_λi
                         (called in Step 2 of Algorithm 1). If a higher value for ε is used, positive and negative effects may exist in the number of iterations: on one hand, the number of times that the algorithm finds the same solution (Step 3.1) may decrease; on the other hand, more often the reduction of ε may be required in order to verify adjacency of different solutions (Steps 3.2 and 3.3), which may increase the number of iterations. For the computational experiments we considered two values of ε: 0.01 and 0.05. The results are shown in Table 1, which include the number of ESND solutions of each problem (|ZESND
                        |), the total number of weighted-sum optimizations (TOpt), the time (in seconds) spent to compute all solutions and the average number of optimizations per solution (
                           
                              Opt
                              ¯
                           
                        ) given by the ratio TOpt/|ZESND
                        |.

In Group 1 we observe that the increase of the number of binary variables (keeping the right-hand-sides of the constraints, which make them tight to many variables) does not reflect a growing trend of the number of ESND solutions. However, the number of optimizations increases significantly and a similar trend is observed in the computational effort. On the other side, the increase of the number of continuous variables in Group 2 slightly increases the number of ESND solutions with a small increment in the computational effort. The number of optimizations keeps almost proportional to the number of solutions (about 1.5). The computational time is short, e.g. 2.2 seconds for computing and depicting 142 solutions in Prob2.3. In problems of Group 3, where binary and continuous variables increase simultaneously, the number of ESND solutions increases to about twice the respective number in Group 2. The computational effort is comparable to Group 1 but with a lower ratio of the number of optimizations per solution. These results clearly show that the computational effort grows very quickly with the increase of the number of integer variables but not with the number of continuous variables.

Groups 4 and 5 analyse the impact of changing the constraints. In Group 4, only the RHS of the constraints have been changed with respect to Group 3. They are, in general, larger than the previous ones, thus defining less restrictive constraints. As can be observed in Table 1, the number of ESND solutions is only slightly smaller than in Group 3, but the computational effort has been drastically reduced, being comparable to Group 2. Hence, we observe that constraints have a significant impact on the performance of the algorithm. The increase of the number of constraints in Group 5 considerably raises the number of solutions. The number of optimizations per solution increases steadily; each optimization requires more time.

Concerning the setting of ε, the computational effort to compute all ESND solutions was lower with ε = 0.05 than with ε = 0.01 in all three-objective problems.

Finally, the problems with two objective functions of Group 3_2 present a very small number of ESND points (about 10% of the respective number in the problems with three objective functions). The computational effort is also highly reduced. The average time per ESND solution in the larger problem is 0.008 seconds against 0.3 seconds in the corresponding three-objective problem (Prob3.3).

@&#CONCLUSIONS@&#

In this paper we have proposed a procedure to compute subsets of indifference regions in the weight space for MOMILP problems. We have also proposed algorithms to compute all extreme supported nondominated solutions (ESND) adjacent to a given solution or even all ESND solutions to problems with up to three objective functions. These algorithms are based on a graphical exploration of the weight space. A computational implementation has been developed to take the most of these procedures. Two examples have been shown to illustrate the proposed features. Computational experiments have also been presented.

Indifference regions give useful information to the decision maker allowing him/her to be indifferent to all weight combinations inside one region as those combinations give rise to the same nondominated solution. The graphical visualization of these regions supports the decision maker in the interactive exploration of the weight space, in particular for the exploration of neighbourhoods of solutions. Although the main aim is not to generate all solutions to the problem, an algorithm to compute all ESND solutions is also available, which is still based on the graphical exploration of the weight space. It is suitable to characterize solutions in delimited nondominated areas or to be used as a final exploration phase in problems with a moderate number of extreme nondominated solutions.

As future work, we intend to study other approaches with the purpose of defining larger subsets of the indifference regions within the weighted-sum optimization step. We also aim to address the exploration of unsupported efficient solutions in the “neighbourhood” of supported efficient solutions.

@&#ACKNOWLEDGEMENTS@&#

This work has been partially supported by project EMSURE-Energy and Mobility for Sustainable Regions (CENTRO-07-0224-FEDER-002004) and by Fundação para a Ciência e a Tecnologia under project Grant UID/MULTI/00308/2013.

Problem of Example 2, with 3 objective functions, 20 variables (10 binary and 10 continuous) and 10 constraints:

                        
                           
                              
                                 
                                    
                                       
                                          max
                                          z
                                          =
                                          C
                                          x
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                          
                                          A
                                          x
                                          ≤
                                          b
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                          
                                             x
                                             j
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          ,
                                          
                                          j
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          10
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                          0
                                          ≤
                                          
                                             x
                                             j
                                          
                                          ≤
                                          1
                                          ,
                                          
                                          j
                                          =
                                          11
                                          ,
                                          …
                                          ,
                                          20
                                       
                                    
                                 
                              
                           
                        
                     with

                        
                           
                              
                                 C
                                 =
                                 
                                 
                                    [
                                    
                                       
                                          
                                             60
                                          
                                          
                                             65
                                          
                                          
                                             0
                                          
                                          
                                             27
                                          
                                          
                                             10
                                          
                                          
                                             73
                                          
                                          
                                             18
                                          
                                          
                                             29
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             9
                                          
                                          
                                             47
                                          
                                          
                                             0
                                          
                                          
                                             28
                                          
                                          
                                             0
                                          
                                          
                                             40
                                          
                                          
                                             0
                                          
                                          
                                             31
                                          
                                          
                                             48
                                          
                                          
                                             29
                                          
                                       
                                       
                                          
                                             33
                                          
                                          
                                             11
                                          
                                          
                                             66
                                          
                                          
                                             0
                                          
                                          
                                             50
                                          
                                          
                                             48
                                          
                                          
                                             0
                                          
                                          
                                             72
                                          
                                          
                                             78
                                          
                                          
                                             39
                                          
                                          
                                             20
                                          
                                          
                                             95
                                          
                                          
                                             23
                                          
                                          
                                             37
                                          
                                          
                                             29
                                          
                                          
                                             24
                                          
                                          
                                             0
                                          
                                          
                                             89
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             3
                                          
                                          
                                             17
                                          
                                          
                                             70
                                          
                                          
                                             0
                                          
                                          
                                             5
                                          
                                          
                                             31
                                          
                                          
                                             15
                                          
                                          
                                             51
                                          
                                          
                                             93
                                          
                                          
                                             88
                                          
                                          
                                             0
                                          
                                          
                                             50
                                          
                                          
                                             46
                                          
                                          
                                             0
                                          
                                          
                                             74
                                          
                                          
                                             89
                                          
                                          
                                             0
                                          
                                          
                                             71
                                          
                                          
                                             64
                                          
                                       
                                    
                                    
                                    ]
                                 
                                 
                                 ,
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    
                                       A
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                          
                                             [
                                             
                                                
                                                   
                                                      19
                                                   
                                                   
                                                      25
                                                   
                                                   
                                                      6
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      37
                                                   
                                                   
                                                      42
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      43
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      14
                                                   
                                                   
                                                      38
                                                   
                                                   
                                                      12
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      49
                                                   
                                                   
                                                      16
                                                   
                                                   
                                                      27
                                                   
                                                   
                                                      27
                                                   
                                                   
                                                      39
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      25
                                                   
                                                   
                                                      30
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      28
                                                   
                                                   
                                                      38
                                                   
                                                   
                                                      5
                                                   
                                                   
                                                      48
                                                   
                                                   
                                                      19
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      35
                                                   
                                                   
                                                      15
                                                   
                                                   
                                                      30
                                                   
                                                   
                                                      4
                                                   
                                                   
                                                      26
                                                   
                                                   
                                                      23
                                                   
                                                   
                                                      26
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      38
                                                   
                                                
                                                
                                                   
                                                      29
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      14
                                                   
                                                   
                                                      20
                                                   
                                                   
                                                      29
                                                   
                                                   
                                                      41
                                                   
                                                   
                                                      33
                                                   
                                                   
                                                      30
                                                   
                                                   
                                                      31
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      41
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      35
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      46
                                                   
                                                
                                                
                                                   
                                                      29
                                                   
                                                   
                                                      37
                                                   
                                                   
                                                      19
                                                   
                                                   
                                                      31
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      28
                                                   
                                                   
                                                      10
                                                   
                                                   
                                                      45
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      49
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      38
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      18
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      48
                                                   
                                                   
                                                      22
                                                   
                                                   
                                                      0
                                                   
                                                
                                                
                                                   
                                                      3
                                                   
                                                   
                                                      21
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      35
                                                   
                                                   
                                                      22
                                                   
                                                   
                                                      49
                                                   
                                                   
                                                      26
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      50
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      13
                                                   
                                                   
                                                      21
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      47
                                                   
                                                   
                                                      35
                                                   
                                                   
                                                      6
                                                   
                                                   
                                                      43
                                                   
                                                   
                                                      29
                                                   
                                                   
                                                      13
                                                   
                                                   
                                                      50
                                                   
                                                
                                                
                                                   
                                                      27
                                                   
                                                   
                                                      23
                                                   
                                                   
                                                      38
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      25
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      27
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      11
                                                   
                                                   
                                                      47
                                                   
                                                   
                                                      49
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      11
                                                   
                                                   
                                                      6
                                                   
                                                   
                                                      40
                                                   
                                                   
                                                      43
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      28
                                                   
                                                
                                                
                                                   
                                                      42
                                                   
                                                   
                                                      40
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      30
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      43
                                                   
                                                   
                                                      20
                                                   
                                                   
                                                      5
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      25
                                                   
                                                   
                                                      20
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      16
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      15
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                
                                                
                                                   
                                                      33
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      46
                                                   
                                                   
                                                      15
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      8
                                                   
                                                   
                                                      9
                                                   
                                                   
                                                      31
                                                   
                                                   
                                                      20
                                                   
                                                   
                                                      40
                                                   
                                                   
                                                      9
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      33
                                                   
                                                   
                                                      26
                                                   
                                                   
                                                      14
                                                   
                                                   
                                                      38
                                                   
                                                   
                                                      41
                                                   
                                                   
                                                      44
                                                   
                                                   
                                                      7
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      40
                                                   
                                                   
                                                      12
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      5
                                                   
                                                   
                                                      45
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      5
                                                   
                                                   
                                                      20
                                                   
                                                   
                                                      21
                                                   
                                                   
                                                      4
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      17
                                                   
                                                   
                                                      34
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      42
                                                   
                                                   
                                                      37
                                                   
                                                   
                                                      26
                                                   
                                                   
                                                      38
                                                   
                                                   
                                                      17
                                                   
                                                
                                                
                                                   
                                                      33
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      24
                                                   
                                                   
                                                      45
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      40
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      43
                                                   
                                                   
                                                      42
                                                   
                                                   
                                                      7
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      32
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      46
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      26
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      40
                                                   
                                                   
                                                      44
                                                   
                                                
                                             
                                             
                                             ]
                                          
                                       
                                    
                                 
                                 
                                    
                                       b
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             [
                                             
                                                
                                                   
                                                      285
                                                   
                                                
                                                
                                                   
                                                      481
                                                   
                                                
                                                
                                                   
                                                      478
                                                   
                                                
                                                
                                                   
                                                      483
                                                   
                                                
                                                
                                                   
                                                      215
                                                   
                                                
                                                
                                                   
                                                      375
                                                   
                                                
                                                
                                                   
                                                      635
                                                   
                                                
                                                
                                                   
                                                      605
                                                   
                                                
                                                
                                                   
                                                      644
                                                   
                                                
                                                
                                                   
                                                      425
                                                   
                                                
                                             
                                             ]
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

Objective values of the 49 ESND solutions of the problem:

                        
                           
                              
                              
                              
                              
                              
                              
                              
                              
                              
                                 
                                    Solution #
                                    
                                       z
                                       1
                                    
                                    
                                       z
                                       2
                                    
                                    
                                       z
                                       3
                                    
                                    Solution #
                                    
                                       z
                                       1
                                    
                                    
                                       z
                                       2
                                    
                                    
                                       z
                                       3
                                    
                                 
                              
                              
                                 
                                    Solution 1
                                    417.308
                                    384.462
                                    352.231
                                    Solution 25
                                    372.347
                                    548.633
                                    307.548
                                 
                                 
                                    Solution 2
                                    415.231
                                    418.846
                                    424.923
                                    Solution 26
                                    297.260
                                    578.225
                                    350.411
                                 
                                 
                                    Solution 3
                                    226
                                    589
                                    388
                                    Solution 27
                                    388.069
                                    362.069
                                    502
                                 
                                 
                                    Solution 4
                                    263.463
                                    579.276
                                    422.276
                                    Solution 28
                                    401.5
                                    336
                                    484
                                 
                                 
                                    Solution 5
                                    291
                                    579.875
                                    347.250
                                    Solution 29
                                    400
                                    446.083
                                    466.833
                                 
                                 
                                    Solution 6
                                    172.191
                                    173.574
                                    648.957
                                    Solution 30
                                    402
                                    509.458
                                    393.083
                                 
                                 
                                    Solution 7
                                    230.420
                                    205
                                    645.720
                                    Solution 31
                                    398.693
                                    526.608
                                    269.402
                                 
                                 
                                    Solution 8
                                    264
                                    539
                                    477.628
                                    Solution 32
                                    394.555
                                    528.533
                                    294.633
                                 
                                 
                                    Solution 9
                                    269.362
                                    546.085
                                    467.809
                                    Solution 33
                                    376.665
                                    544.171
                                    311.985
                                 
                                 
                                    Solution 10
                                    279.362
                                    575.002
                                    421.975
                                    Solution 34
                                    315.140
                                    311
                                    597.240
                                 
                                 
                                    Solution 11
                                    294.512
                                    578.963
                                    350.463
                                    Solution 35
                                    233.320
                                    378
                                    608.120
                                 
                                 
                                    Solution 12
                                    413.724
                                    412.724
                                    452
                                    Solution 36
                                    235.276
                                    390.276
                                    603.000
                                 
                                 
                                    Solution 13
                                    409.745
                                    507.234
                                    378.723
                                    Solution 37
                                    329.383
                                    403.149
                                    558.915
                                 
                                 
                                    Solution 14
                                    413.106
                                    442.319
                                    442.532
                                    Solution 38
                                    323.793
                                    468.793
                                    517.000
                                 
                                 
                                    Solution 15
                                    283.240
                                    216
                                    621.840
                                    Solution 39
                                    357.787
                                    474.362
                                    483.936
                                 
                                 
                                    Solution 16
                                    280.383
                                    219.149
                                    622.915
                                    Solution 40
                                    366
                                    503.792
                                    441.417
                                 
                                 
                                    Solution 17
                                    286.952
                                    234.095
                                    619
                                    Solution 41
                                    391.965
                                    533.560
                                    262.489
                                 
                                 
                                    Solution 18
                                    262.383
                                    303.149
                                    619.915
                                    Solution 42
                                    387
                                    359
                                    504.070
                                 
                                 
                                    Solution 19
                                    198.5
                                    283
                                    635
                                    Solution 43
                                    387.580
                                    359
                                    503.280
                                 
                                 
                                    Solution 20
                                    262
                                    467
                                    551.256
                                    Solution 44
                                    397.862
                                    441.862
                                    471.000
                                 
                                 
                                    Solution 21
                                    327
                                    475.125
                                    510.750
                                    Solution 45
                                    318.060
                                    311
                                    594.960
                                 
                                 
                                    Solution 22
                                    329
                                    538.5
                                    437
                                    Solution 46
                                    329.320
                                    400
                                    560.120
                                 
                                 
                                    Solution 23
                                    348.532
                                    534.596
                                    426.660
                                    Solution 47
                                    233.383
                                    381.149
                                    606.915
                                 
                                 
                                    Solution 24
                                    351.766
                                    546.131
                                    379.163
                                    Solution 48
                                    369
                                    359
                                    526.884
                                 
                                 
                                    
                                    
                                    
                                    
                                    Solution 49
                                    321.483
                                    332.483
                                    586
                                 
                              
                           
                        
                     
                  

@&#REFERENCES@&#

