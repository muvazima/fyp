@&#MAIN-TITLE@&#Isogeometric analysis suitable trivariate NURBS representation of composite panels with a new offset algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Analysis suitable trivariate NURBS of composite panels are constructed.


                        
                        
                           
                           A new curve/surface offset algorithm required by analysis is devised.


                        
                        
                           
                           CAD to FEA route for composite panels is streamlined in the proposed framework.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Isogeometric analysis

NURBS

Finite elements

CAD

Composite panels

Offset curves/surfaces

@&#ABSTRACT@&#


               
               
                  Trivariate NURBS (non-uniform rational B-splines) representation of composite panels which is suitable for three-dimensional isogeometric analysis (IGA) is constructed with a new curve/surface offset algorithm. The proposed offset algorithm, which is required by IGA, is non-existent in the CAD literature. Using the presented approach, finite element analysis of composite panels can be performed with the only input being the geometry representation of the composite surface. The method proposed provides a bi-directional system in which one can go forward from CAD to analysis and backwards from analysis to CAD. This is believed to facilitate the design of composite structures. Different parts (patches) can be parametrized independently of each other and glued together, in the finite element solver, by a discontinuous Galerkin method. A stress analysis of curved composite panel with stiffeners is provided to demonstrate the proposed framework.
               
            

@&#INTRODUCTION@&#

Computer Aided Design (CAD) and Finite Element Analysis (FEA) are used extensively in many engineering fields. FEA was developed to improve analysis in engineering and CAD was developed to improve the design process. The FEA evolution started in the 1940s whereas the CAD became a mature field much later in the 1970s. That explains why different mathematical models have been employed to represent the same object. In FEA, trivariate polynomials of low order (usually one or two) are used to approximate the solid object while in CAD, the same object is represented by NURBS (Non Uniform Rational 
                        B
                     -splines). Due to the difference in the geometrical representation, the transfer from a CAD model to an FEA model requires another technology—the so-called mesh generators that transform the CAD model in to a finite element (FE) mesh that is suitable for an FE computation. Meshing complex structures is, however, a very time-consuming process. Furthermore there is no way to go from FEA back to CAD.

It is probably that the first work that attempted to link CAD and FEA was the work of Kagan and his co-workers  [1,2]. In the referred works, 
                        B
                     -splines were utilized to represent the solid geometry in the FE model. Therefore, both CAD and FEA models employ the same technology-
                        B
                     -splines to construct the object of interest. Along this line of research, another notable contribution was made by Cirak et al.  [3,4] in which the subdivision surface, which is a CAD technology extensively used in animation  [5], was used in a finite element thin shell model. It was not until 2005 that the idea was generalized and a new field was emerged—the isogeometric analysis (IGA) by Hughes and his co-workers in the seminal paper  [6] where NURBS were adopted in FE solid/structural/fluid mechanics models. Since this seminal paper, a monograph has been published entirely on the subject  [7] and applications have been found in several fields including structural mechanics, solid mechanics, fluid mechanics, biomechanics and contact mechanics. It has also gained popularity in shape optimization community; see e.g.,  [8,9] and references therein. We refer to  [10,11] for recent works on IGA with industrial applications and  [12] for an overview of IGA, its recent developments and its computer implementation aspects. Not only IGA reduces the gap between CAD and FEA, but also it has triggered a new drive in spline research after a quite period; see for instance the locally refined splines reported in  [13] and the polynomial splines over hierarchical 
                        T
                     -meshes (PHT) in  [14,15]. There is an increasing communication between CAD and FEA researchers; see e.g.,  [16–20]. Particularly, in  [16], a new concept coined analysis-aware-modeling was proposed in which CAD model parameters are selected to facilitate isogeometric analysis. 
                        T
                     -splines—a generalization of NURBS developed in  [21]—were also used in an FE context; see e.g.,  [19]. In CAD, solids are defined as boundary surfaces in which the interior is not explicitly modeled. In FEA, a solid representation is necessary and therefore, the transition from CAD solids to FEA solids demands a step in which the CAD representations are converted to solid FEA representations. Initial developments have been reported in  [22–30].

In this paper we are going to present an integrated CAD-FEA framework for design and analysis of composite panels which have been extensively used in automotive and aircraft industries due to their high strength and low weight. As a CAD object, the composite panel is described by an NURBS surface which can be directly imported into our isogeometric finite element code. Since our ultimate goal is to perform a failure analysis of the composite panel due to delamination at the interfaces between the plies of which promising preliminary results are reported in  [31,32], a trivariate representation of the composite is required. It should be emphasized that if a shell model is sufficient, then the bivariate NURBS surfaces can be directly used in an FE package without any further complication; see e.g.,  [33,34]. To this end, we develop a simple algorithm that for a given NURBS surface and a thickness of the panel, a trivariate NURBS can be built. The algorithm is based on the computation of offsets of an NURBS surface which is a topic of extensive research in the CAD community, see e.g.,[35–40] and references therein. However, to the best of our knowledge, existing offset algorithms, which are used mainly for CAD and CAM (Computer Aided Manufacturing) applications, cannot be used directly for our FE analyses; we therefore devise a new algorithm to compute offsets of NURBS curves and surfaces. We refer to Fig. 1
                      for an illustration of the difference between existing offset algorithms and our algorithm. It should be emphasized that our algorithm aims to build geometries that are suitable for finite element analyses whereas existing algorithms aim for CAD/CAM applications. Our contribution certainly enlarges the application field of IGA to composite structures. Note that traditional Lagrange finite elements approach when applied for delamination analyses of composite laminates demands a long and cumbersome pre-processing step (doubling nodes along each delamination path, modifying the connectivity of continuum elements above and below the delamination path) and this drawback is compounded by the fact that during the design process of composite laminates, the analyst must typically iterate both on the material properties of each ply, and on their geometry. Each time the geometry is modified, the analyst must go back to the CAD system to change the geometry and repeat the time-consuming mesh generation procedure again. The use of NURBS in an FEA context certainly reduce the time-consuming pre-processing step and the high order NURBS basis functions are able to produce highly accurate stress fields which is very important in fracture modeling  [31,32]. We also present examples where different parts of a solid are parametrized independently of one another and in the FE solver they are glued together in an automatic fashion using Nitsche’s method—a consistent penalty method  [41]. This brings a lot of flexibilities in design cycles where, for instance for stiffened panels, one can arbitrarily move the stiffeners on the skin to find the optimum location. In another situation, different parts of a model can be created by different people and these parts only have to be geometrically compatible to each other. Their finite element meshes can however be different. A somehow related work on swept volumes in IGA was presented in  [26].

Traditional methods used to approximate offset curves (surfaces) fall into two categories, those that use the geometry and topology of the original curve (surface) to manipulate the control points to produce an offset approximation, and those that use sampling points from the exact offset curve (surface) as input for an approximation method that fits a curve (surface) to the offset. Our offsetting algorithm falls into the latter group and is able to generate exact offsets for circles and lines. It also produces non self-intersecting offset curves. We use an optimization algorithm (specially the gradient descent method) to iteratively move the sought-for offset curve/surface from a starting position to the “exact” offset curve/surface. We then use this algorithm to generate analysis-suitable trivariate NURBS solids which model a class of objects of important applications-curved composite panels. Although it is not the main goal, we also compare our offset algorithm with existing ones.

The remainder of the paper is organized as follows. Section  2 presents a new algorithm for computing offset of NURBS curves and surfaces. Section  3 is devoted to a discussion on isogeometric finite elements followed by some numerical examples given in Section  4. Section  5 ends the paper with some concluding remarks.

We briefly discuss the 
                           B
                        -splines/NURBS curves and surfaces here; for details we refer to the standard textbook  [43]. NURBS basis functions are defined as 
                           
                              (1)
                              
                                 
                                    
                                       R
                                    
                                    
                                       i
                                       ,
                                       p
                                    
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             i
                                             ,
                                             p
                                          
                                       
                                       
                                          (
                                          ξ
                                          )
                                       
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       W
                                       
                                          (
                                          ξ
                                          )
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             i
                                             ,
                                             p
                                          
                                       
                                       
                                          (
                                          ξ
                                          )
                                       
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             N
                                          
                                          
                                             j
                                             ,
                                             p
                                          
                                       
                                       
                                          (
                                          ξ
                                          )
                                       
                                       
                                          
                                             w
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 N
                              
                              
                                 i
                                 ,
                                 p
                              
                           
                           
                              (
                              ξ
                              )
                           
                         denotes the 
                           i
                        th 
                           B
                        -spline basis function of order 
                           p
                         and 
                           
                              
                                 w
                              
                              
                                 i
                              
                           
                         are a set of 
                           n
                         positive weights. Selecting appropriate values for the 
                           
                              
                                 w
                              
                              
                                 i
                              
                           
                         permits the description of many different types of curves including polynomials and circular arcs. For the special case in which 
                           
                              
                                 w
                              
                              
                                 i
                              
                           
                           =
                           c
                           ,
                           
                           i
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           n
                        , the NURBS basis reduces to the 
                           B
                        -spline basis of which definition is described in what follows.

Given a knot vector 
                           Ξ
                           =
                           
                              {
                              
                                 
                                    ξ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    ξ
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    ξ
                                 
                                 
                                    n
                                    +
                                    p
                                    +
                                    1
                                 
                              
                              }
                           
                        , the 
                           B
                        -spline basis functions are defined recursively starting with the zeroth order basis function (
                           p
                           =
                           0
                        ) given by 
                           
                              (2)
                              
                                 
                                    
                                       N
                                    
                                    
                                       i
                                       ,
                                       0
                                    
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             1
                                          
                                          
                                             if  
                                             
                                                
                                                   ξ
                                                
                                                
                                                   i
                                                
                                             
                                             ≤
                                             ξ
                                             <
                                             
                                                
                                                   ξ
                                                
                                                
                                                   i
                                                   +
                                                   1
                                                
                                             
                                             ,
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             otherwise
                                          
                                       
                                    
                                 
                              
                           
                         and for a polynomial order 
                           p
                           ≥
                           1
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       N
                                    
                                    
                                       i
                                       ,
                                       p
                                    
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 =
                                 
                                    
                                       ξ
                                       −
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                             +
                                             p
                                          
                                       
                                       −
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 
                                    
                                       N
                                    
                                    
                                       i
                                       ,
                                       p
                                       −
                                       1
                                    
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 +
                                 
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                             +
                                             p
                                             +
                                             1
                                          
                                       
                                       −
                                       ξ
                                    
                                    
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                             +
                                             p
                                             +
                                             1
                                          
                                       
                                       −
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                    
                                 
                                 
                                    
                                       N
                                    
                                    
                                       i
                                       +
                                       1
                                       ,
                                       p
                                       −
                                       1
                                    
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 .
                              
                           
                         This is referred to as the Cox–de Boor recursion formula. Note that the first and last knots of 
                           Ξ
                         have 
                           p
                           +
                           1
                         multiplicity so that the NURBS basis is interpolatory there.

An NURBS curve is given by 
                           
                              (4)
                              
                                 
                                    C
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       I
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       R
                                    
                                    
                                       I
                                       ,
                                       p
                                    
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 
                                    
                                       
                                          P
                                       
                                    
                                    
                                       I
                                    
                                 
                              
                           
                         where 
                           n
                         denotes the number of basis functions—also the number of control points (CPs) and 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 I
                              
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 d
                              
                           
                         (
                           d
                         is the number of spatial directions) are the control points.

Given two knot vectors (one for each direction) 
                           Ξ
                           =
                           
                              {
                              
                                 
                                    ξ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    ξ
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    ξ
                                 
                                 
                                    n
                                    +
                                    p
                                    +
                                    1
                                 
                              
                              }
                           
                         and 
                           ℋ
                           =
                           
                              {
                              
                                 
                                    η
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    η
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    η
                                 
                                 
                                    m
                                    +
                                    q
                                    +
                                    1
                                 
                              
                              }
                           
                         and a control net 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 d
                              
                           
                        , a tensor-product NURBS surface is defined as 
                           
                              (5)
                              
                                 
                                    S
                                 
                                 
                                    (
                                    ξ
                                    ,
                                    η
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       m
                                    
                                 
                                 
                                    
                                       R
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       p
                                       ,
                                       q
                                    
                                 
                                 
                                    (
                                    ξ
                                    ,
                                    η
                                    )
                                 
                                 
                                    
                                       
                                          P
                                       
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                              
                           
                         where 
                           
                              
                                 R
                              
                              
                                 i
                                 ,
                                 j
                              
                              
                                 p
                                 ,
                                 q
                              
                           
                         are given by 
                           
                              (6)
                              
                                 
                                    
                                       R
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       p
                                       ,
                                       q
                                    
                                 
                                 
                                    (
                                    ξ
                                    ,
                                    η
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             i
                                          
                                       
                                       
                                          (
                                          ξ
                                          )
                                       
                                       
                                          
                                             M
                                          
                                          
                                             j
                                          
                                       
                                       
                                          (
                                          η
                                          )
                                       
                                       
                                          
                                             w
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ˆ
                                                
                                             
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   j
                                                
                                                
                                                   ˆ
                                                
                                             
                                             =
                                             1
                                          
                                          
                                             m
                                          
                                       
                                       
                                          
                                             N
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                       
                                       
                                          (
                                          ξ
                                          )
                                       
                                       
                                          
                                             M
                                          
                                          
                                             
                                                
                                                   j
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                       
                                       
                                          (
                                          η
                                          )
                                       
                                       
                                          
                                             w
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ˆ
                                                
                                             
                                             ,
                                             
                                                
                                                   j
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                         Defining a global index as 
                           
                              (7)
                              
                                 I
                                 =
                                 n
                                 
                                    (
                                    j
                                    −
                                    1
                                    )
                                 
                                 +
                                 i
                                 .
                              
                           
                         Eq. (5) can be rewritten in a more compact form as 
                           
                              (8)
                              
                                 
                                    S
                                 
                                 
                                    (
                                    
                                       ξ
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       I
                                       =
                                       1
                                    
                                    
                                       n
                                       ×
                                       m
                                    
                                 
                                 
                                    
                                       R
                                    
                                    
                                       I
                                    
                                    
                                       p
                                       ,
                                       q
                                    
                                 
                                 
                                    (
                                    
                                       ξ
                                    
                                    )
                                 
                                 
                                    
                                       
                                          P
                                       
                                    
                                    
                                       I
                                    
                                 
                              
                           
                         in which 
                           
                              
                                 R
                              
                              
                                 I
                              
                              
                                 p
                                 ,
                                 q
                              
                           
                         is a bivariate NURBS basis function defined as 
                           
                              
                                 R
                              
                              
                                 I
                              
                              
                                 p
                                 ,
                                 q
                              
                           
                           
                              (
                              
                                 ξ
                              
                              )
                           
                           =
                           
                              
                                 R
                              
                              
                                 i
                                 ,
                                 j
                              
                              
                                 p
                                 ,
                                 q
                              
                           
                           
                              (
                              ξ
                              ,
                              η
                              )
                           
                        . This compact form will be used extensively in an analysis context. A definition of a trivariate tensor-product NURBS solid is similar and hence not presented here.

The offset curve of 
                           
                              C
                           
                           
                              (
                              ξ
                              )
                           
                           =
                           
                              
                                 
                                    (
                                    x
                                    
                                       (
                                       ξ
                                       )
                                    
                                    ,
                                    y
                                    
                                       (
                                       ξ
                                       )
                                    
                                    )
                                 
                              
                              
                                 
                                    T
                                 
                              
                           
                        , denoted by 
                           
                              
                                 
                                    C
                                 
                              
                              
                                 o
                              
                           
                           
                              (
                              ξ
                              )
                           
                        , is defined by 
                           
                              (9)
                              
                                 
                                    
                                       
                                          C
                                       
                                    
                                    
                                       o
                                    
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 =
                                 
                                    C
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 +
                                 t
                                 
                                    n
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                              
                           
                         in which 
                           t
                         is the offset distance which is a constant and 
                           
                              n
                           
                           
                              (
                              ξ
                              )
                           
                         is the unit normal defined by for planar curves 
                           
                              (10)
                              
                                 
                                    n
                                 
                                 
                                    (
                                    ξ
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          (
                                          −
                                          
                                             
                                                y
                                             
                                             
                                                ′
                                             
                                          
                                          
                                             (
                                             ξ
                                             )
                                          
                                          ,
                                          
                                             
                                                x
                                             
                                             
                                                ′
                                             
                                          
                                          
                                             (
                                             ξ
                                             )
                                          
                                          )
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   ′
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      ξ
                                                      )
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   y
                                                
                                                
                                                   ′
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      ξ
                                                      )
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Due to the square root appeared in the unit normals, offset curves cannot be exactly represented as polynomial or rational curves. That is the reason one has to resort to approximations. Note that the notation 
                           
                              
                                 x
                              
                              
                                 ′
                              
                           
                           
                              (
                              ξ
                              )
                           
                         refers to the first derivative of 
                           x
                         with respect to 
                           ξ
                        .

The 
                           n
                         control points of the base curve are represented by 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 0
                              
                           
                        . Our goal is to generate an offset curve with offset distance denoted by 
                           t
                         from the given (so-called progenitor) 
                           B
                        -spline curve subjected to the requirement that the offset curve must have the same parametrization as the original curve. That is, the offset curve is of 
                           p
                         degree and has the same knot vector 
                           Ξ
                         as its progenitor. The control points of the offset curve are denoted by 
                           
                              P
                           
                         and are the unknowns
                           1
                        
                        
                           1
                           In our current formulation only the coordinates of the control points are the unknowns to be determined. The weights are inherited from the weights of the base curves. It is certainly possible to consider the weights as unknowns. However this is not yet studied in the scope of this contribution.
                         to be computed. The requirement that the offset curve is of the same format as its progenitor is due to the fact that our goal is to build a trivariate NURBS from the original surface and its offset surface. This restriction comes from the tensor-product nature of NURBS surfaces/solids.

In the first step, a set of points on the offset curve is generated. To this end, we divide the knots 
                           Ξ
                         into a number of equal intervals. For a knot 
                           
                              
                                 ξ
                              
                              
                                 i
                              
                           
                           
                           
                              (
                              i
                              =
                              1
                              ,
                              m
                              )
                           
                        , an offset point is given by 
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          0
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          I
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          R
                                       
                                       
                                          I
                                       
                                    
                                    
                                       (
                                       
                                          
                                             ξ
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             P
                                          
                                       
                                       
                                          0
                                          I
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          0
                                          i
                                       
                                    
                                    +
                                    t
                                    
                                       
                                          
                                             n
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 
                                    n
                                 
                              
                              
                                 i
                              
                           
                         represents the unit normal vector to the progenitor curve at point 
                           
                              
                                 
                                    x
                                 
                              
                              
                                 0
                                 i
                              
                           
                        . Once computed, the set of offset points 
                           
                              
                                 
                                    {
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 m
                              
                           
                         is fixed.

Since the offset curve goes through the first and last control points with open knots vectors, we have 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 1
                              
                           
                           =
                           
                              
                                 
                                    x
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 n
                              
                           
                           =
                           
                              
                                 
                                    x
                                 
                              
                              
                                 m
                              
                           
                        . Hence, there are (
                           n
                           −
                           2
                        ) remaining control points to be determined. As the first guess for the gradient descent method, we may assume that the offset curve is initially a line, i.e., its control points locate on the line connecting 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 n
                              
                           
                        . Another option is to choose the control points coinciding with the control points of the base curve 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 i
                              
                              
                                 
                                    (
                                    0
                                    )
                                 
                              
                           
                           =
                           
                              
                                 
                                    P
                                 
                              
                              
                                 0
                                 i
                              
                           
                           ,
                           
                           
                              (
                              i
                              =
                              2
                              ,
                              …
                              ,
                              n
                              −
                              1
                              )
                           
                        . The superscript 
                           
                              (
                              k
                              )
                           
                         is used to indicate quantities at 
                           k
                         iteration in the gradient decent algorithm—
                           k
                         is the iteration index. On this initial offset curve, a set of sampling points 
                           
                              
                                 
                                    {
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          i
                                       
                                       
                                          
                                             (
                                             k
                                             )
                                          
                                       
                                    
                                    }
                                 
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 m
                              
                           
                         (
                           k
                           =
                           0
                        ) is generated which has the same number of points as 
                           
                              {
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    i
                                 
                              
                              }
                           
                        . We then define a system of springs in which each spring connects one point in 
                           
                              {
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    i
                                 
                              
                              }
                           
                         and one point in 
                           
                              {
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    i
                                 
                                 
                                    
                                       (
                                       0
                                       )
                                    
                                 
                              
                              }
                           
                        . The energy of this system of springs is given by 
                           
                              (12)
                              
                                 E
                                 
                                    (
                                    
                                       P
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                    
                                    
                                       m
                                    
                                 
                                 α
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             P
                                          
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                         in which 
                           α
                         represents the spring stiffness. In our implementation, 
                           α
                           =
                           1
                         is used. 
                           
                              
                                 u
                              
                              
                                 i
                              
                           
                         is computed as the distance between two points defining the 
                           i
                        th spring. As 
                           E
                         is approaching its minimum value, the sought-for offset curve is moving towards the “exact” offset curve defined by the offset points 
                           
                              {
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    i
                                 
                              
                              }
                           
                        . Note that the energy is a function of the unknown control point 
                           
                              P
                           
                         that defines the sought-for offset curve.

In order to find the minimum of 
                           E
                         we use the gradient descent method combined with a line search. The control points of the first iteration 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 
                                    (
                                    1
                                    )
                                 
                              
                           
                         are then computed according to 
                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             P
                                          
                                       
                                       
                                          
                                             (
                                             1
                                             )
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             P
                                          
                                       
                                       
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                    −
                                    
                                       
                                          γ
                                       
                                       
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                    ∇
                                    
                                       
                                          E
                                       
                                       
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          γ
                                       
                                       
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                    
                                    =
                                    arg
                                    
                                       
                                          min
                                       
                                       
                                          
                                             
                                                γ
                                             
                                             
                                                
                                                   (
                                                   0
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                    E
                                    
                                       (
                                       
                                          
                                             
                                                P
                                             
                                          
                                          
                                             
                                                (
                                                0
                                                )
                                             
                                          
                                       
                                       −
                                       
                                          
                                             γ
                                          
                                          
                                             
                                                (
                                                0
                                                )
                                             
                                          
                                       
                                       ∇
                                       
                                          
                                             E
                                          
                                          
                                             
                                                (
                                                0
                                                )
                                             
                                          
                                       
                                       )
                                    
                                 
                              
                           
                         where 
                           γ
                         denotes the so-called step length. The second equation of Eq. (13) denotes a one-dimensional minimization problem which is therein solved using a backtracking line search method  [44]. The proposed algorithm is graphically illustrated in Fig. 2
                         and given in Algorithm 1. The iterative process proceeds until the energy is smaller than a predefined tolerance 
                           ϵ
                        .

For an analytical expression for the energy 
                           E
                         is not available, we resort to a numerical differentiation to compute the energy gradient 
                           
                              (14)
                              
                                 ∇
                                 
                                    
                                       E
                                    
                                    
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       h
                                    
                                 
                                 
                                    [
                                    
                                       
                                          
                                             ⋮
                                          
                                       
                                       
                                          
                                             E
                                             
                                                (
                                                
                                                   
                                                      
                                                         P
                                                      
                                                   
                                                   
                                                      I
                                                   
                                                   
                                                      
                                                         (
                                                         k
                                                         )
                                                      
                                                   
                                                
                                                +
                                                
                                                   [
                                                   h
                                                   
                                                   
                                                   h
                                                   ]
                                                
                                                )
                                             
                                             −
                                             E
                                             
                                                (
                                                
                                                   
                                                      
                                                         P
                                                      
                                                   
                                                   
                                                      I
                                                   
                                                   
                                                      
                                                         (
                                                         k
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             ⋮
                                          
                                       
                                    
                                    ]
                                 
                              
                           
                         in which 
                           ∇
                           
                              
                                 E
                              
                              
                                 
                                    (
                                    k
                                    )
                                 
                              
                           
                         is a matrix of dimension 
                           
                              (
                              n
                              −
                              2
                              )
                           
                           ×
                           2
                        . In other words, to compute the energy gradient along the 
                           x
                        -direction at a specific control point, we move it along the 
                           x
                        -direction a very small distance 
                           h
                         (in our implementation, a value of 10−8 was used for 
                           h
                        ) and compute the change in the energy. Note that when a control point is changed, the sought-for NURBS curve is changed and so are the sampling points 
                           
                              {
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    i
                                 
                                 
                                    
                                       (
                                       k
                                       )
                                    
                                 
                              
                              }
                           
                        .


                        
                           
                              
                           
                        
                     

As the first example to test our algorithm, we consider a circle of unit radius as shown in Fig. 3
                        . We are going to offset it inwards. The circle is exactly represented by a quadratic (
                           p
                           =
                           2
                        ) NURBS curve with 9 control points (
                           Ξ
                           =
                           
                              {
                              0
                              ,
                              0
                              ,
                              0
                              ,
                              1
                              /
                              4
                              ,
                              1
                              /
                              4
                              ,
                              1
                              /
                              2
                              ,
                              1
                              /
                              2
                              ,
                              3
                              /
                              4
                              ,
                              3
                              /
                              4
                              ,
                              1
                              ,
                              1
                              ,
                              1
                              }
                           
                        ). We use 20 offset points (star points in the right of the referred figure). The initial control points of the offset curve are denoted by green solid circles which are, except the first and last points, the control points of the progenitor circle. The blue squares denote the 20 sampling points on the initial offset curve. For an exact offset of a circle exists, the proposed algorithm converges to a very high accuracy (we used a tolerance of 10−4) in 24 iterations.

As a second example, let us build the offset of a cubic Bézier curve (having 4 control points) as given in Fig. 4
                        . Note that Bézier curves can be regarded as uniform, non-rational 
                           B
                        -splines. Therefore, examples on Bézier curves do not imply any limitation of our method to only Bézier curves. Actually the previous example concerned a circle which is a quadratic NURBS curve. This example was considered by many authors for example  [35]. It is obvious that the error is large (Fig. 4(a)) since only 4 control points were used. We used 100 sampling points and after 32 iterations, the minimum energy 
                           E
                         is 0.99. More iterations did not decrease the energy. If a higher accuracy is desired, it is simple to use more control points for defining the offset curve. As shown in Fig. 4(b) the offset was sufficiently accurate with 10 control points. This result is comparable to the result given in Fig. 4(b) in  [35]. This example illustrates that our curve offset algorithm can be well applied for cases in which the requirement of having the same parametrization is relaxed (for CAD applications for example). For those cases, an improvement of the proposed algorithm can be made by using an adaptive optimization scheme. We start with a curve of the same format as its base and perform the optimization given in Algorithm 1. If the error is found to be larger than a predefined tolerance, new control points are added and Algorithm 1 is used again. However we do not further follow this path so as to focus on our analysis target. If both high accuracy and the same parametrization are required, one can first refine the base curve using knot insertion and then applying the proposed algorithm. The result is depicted in Fig. 4(c). After 14 iterations, 
                           E
                           =
                           9.50
                           
                              e
                           
                           −
                           04
                        . Note that for finite element analyses a refined geometry is needed anyway. Using this approach, we present a comparison of our offset algorithm with the one given in Ref.  [35]; see Table 1
                        . As can be seen our algorithm requires less control points than the algorithm of Ref.  [35]. Application of the presented algorithm to closed NURBS curves is given in Fig. 5
                        .

The computational aspects of our algorithm are listed as follows: 
                           
                              •
                              the number of required sampling points;

the manner in which those points are distributed;

the effect of the initial guess of the curve on the result.

About the first aspect the algorithm presented in Ref.  [35] can be used. As far as the second aspect is concerned, it all depends on the curvature of the base curve. Usually more sampling points should be placed where the curvature is high. However, we simply used a uniform distribution because in our application, the curve is quite smooth. From our experiences, the initial guess of the offset curve has a slight impact on the convergence rate. In order to study the effect of the sampling points, we consider a cubic NURBS curve given in Fig. 6
                        (a) which is defined with knot vector 
                           Ξ
                           =
                           
                              {
                              0
                              ,
                              0
                              ,
                              0
                              ,
                              0
                              ,
                              1
                              /
                              8
                              ,
                              2
                              /
                              5
                              ,
                              3
                              /
                              4
                              ,
                              1
                              ,
                              1
                              ,
                              1
                              ,
                              1
                              ,
                              }
                           
                        , and weights 
                           w
                           =
                           
                              {
                              1
                              ,
                              1
                              ,
                              1
                              ,
                              4
                              ,
                              1
                              ,
                              1
                              ,
                              1
                              }
                           
                        . A uniform distribution of 
                           m
                           ∈
                           
                              {
                              100
                              ,
                              200
                              ,
                              300
                              ,
                              400
                              }
                           
                         sampling points is utilized and the result is given in Table 2
                        . From the table one can see that it is not efficient to use so many sampling points as energy 
                           E
                         is decreasing as 
                           m
                         increases. 
                           Remark 2.1
                           We note that our algorithm was designed especially for NURBS curves. For polylines (which are first order NURBS) of which one example is given in Fig. 7
                              , it is more efficient to compute the offset points corresponding to every control point of the base curve; the offset curve is a polygon joining those offset points.

The proposed algorithm for curves can be straightforwardly extended to 
                           B
                        -splines surfaces. We refer to Fig. 8
                         for such an application of offsetting a bi-quadratic Bézier surface. The offset surface has the same parametrization as its base. The method converged in 4 iterations for a tolerance 
                           ϵ
                           =
                           0.1
                        . In this context, it should be emphasized that the gradient descent algorithm converges linearly (and yet requires only first derivatives of the objective function 
                           E
                        ). Therefore, more involved Newton-like methods should be adopted if real-time generation of offset surfaces is required. It should be emphasized that our aim was not a real-time curve/surface offsetting algorithm.

When the instantaneous radius of curvature of the curve is less than the offset distance there will be self-intersection of the offset curve; see Fig. 9
                        (a). After removing the offset points in trouble [45,46], one obtains the “exact” offset curve as shown in Fig. 9(b). In order to get a good approximation to the offset curve, we used a cubic Bézier with 6 control points and the result is presented in Fig. 9(c). As can be seen, the proposed offset algorithm was able to build non self-intersecting offset curves. We, however, do not go further for this special case keeping in mind that our target-composite panels do not have high curvatures so that self intersection would occur.

In a CAD environment, a curved 3D composite panel is usually represented by an NURBS surface. This is often not sufficient from an analysis point of view if a detailed modeling of the physical behavior through the thickness of the panel is to be performed. In this case, a trivariate solid representation of the panel surface is needed. In this section we are going to show that the offset algorithm described in Section  2 can be used for this purpose.

For ease of demonstration, let us first consider the case of generating a bivariate surface from an NURBS curve as shown in Fig. 10
                        . In the left of the referred figure, a given 
                           B
                        -spline curve and its offset that has the same parametrization are given. Thanks to the same format of these curves, a tensor-product surface bounded by these curves can be easily obtained. The knot vector along the offset distance is given simply as 
                           ℋ
                           =
                           
                              {
                              0
                              ,
                              0
                              ,
                              1
                              ,
                              1
                              }
                           
                        . The control points of the surface are the control points of the base curve and its offset. The right of the figure shows a refined model which is suitable for NURBS-based FE calculations. The idea is straightforwardly extended to NURBS surfaces as illustrated in Fig. 11
                        . The knot vectors of the base surface 
                           
                              S
                           
                           
                              (
                              ξ
                              ,
                              η
                              )
                           
                         and the offset surface 
                           
                              
                                 
                                    S
                                 
                              
                              
                                 o
                              
                           
                           
                              (
                              ξ
                              ,
                              η
                              )
                           
                         are 
                           
                              
                                 Ξ
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 Ξ
                              
                              
                                 2
                              
                           
                        , respectively. The knot vector in the offset direction is simply 
                           
                              
                                 Ξ
                              
                              
                                 3
                              
                           
                           =
                           
                              {
                              0
                              ,
                              0
                              ,
                              1
                              ,
                              1
                              }
                           
                        . These three knot vectors together with the control points of the base and offset surfaces suffice to build an NURBS solid. For analysis purposes, these volumes are refined using either knot insertion and/or order elevation.

As a 3D example with more complex geometry, we consider a singly curved thick-walled laminate which was studied in  [47]. Air-intakes of formula race cars and strongly curved regions of ship hulls provide examples for such thick-walled curved laminates designs. The geometry of the sample is given in Fig. 12
                        . Since the geometry representation of the object of interest is the same in both CAD and FEA environments, it is very straightforward and fast to get an analysis-suitable model when changes are made to the CAD model, for instance changing thickness 
                           t
                         or the number of plies. This is in sharp contrary to Lagrange finite elements which uses a different geometry representation.

The geometry of the singly curved thick-walled laminates can be built by first creating an NURBS curve as shown in Fig. 13
                        . Next, an offset of this curve with offset distance 
                           t
                         is created. Having these two curves, an NURBS surface can be constructed. Finally, the cross section is extruded along the width direction. The corresponding NURBS meshes to be readily used in an FEM environment are given in Fig. 14
                        . FE analysis of this structure can be found in Ref.  [32]. We present some more examples of building analysis-suitable NURBS solids using the offset algorithm in Fig. 15
                        .

The isogeometric concept refers to the utilization of the basis functions used to represent the geometry (usually they are NURBS but other CAD technologies such as subdivision surfaces can be equally employed) to approximate the field variables. This concept can be used in a finite element context, a boundary element context  [49,11] or even in a meshfree framework. In this paper, we use an isogeometric finite element method (IGAFEM) which is suitable for nonlinear analyses. In what follows, we briefly present the main ideas of IGAFEM for two-dimensional linear elasticity problems, extension to three-dimensional case is straightforward. We refer to  [6,7,12] for details.

Consider a domain 
                        Ω
                     , bounded by 
                        Γ
                     . The boundary is partitioned into two sets: 
                        
                           
                              Γ
                           
                           
                              u
                           
                        
                      and 
                        
                           
                              Γ
                           
                           
                              t
                           
                        
                      with displacements prescribed on 
                        
                           
                              Γ
                           
                           
                              u
                           
                        
                      and tractions 
                        
                           
                              
                                 t
                              
                           
                           ¯
                        
                      prescribed on 
                        
                           
                              Γ
                           
                           
                              t
                           
                        
                        :
                        Γ
                        =
                        
                           
                              
                                 
                                    Γ
                                 
                                 
                                    t
                                 
                              
                              ∪
                              
                                 
                                    Γ
                                 
                                 
                                    u
                                 
                              
                           
                           ¯
                        
                        ,
                        
                           
                              Γ
                           
                           
                              t
                           
                        
                        ∩
                        
                           
                              Γ
                           
                           
                              u
                           
                        
                        =
                        0̸
                     . The weak form of a linear elastostatics problem is to find the displacement field 
                        
                           u
                        
                      in the trial space,
                        2
                     
                     
                        2
                        Contains 
                              
                                 
                                    C
                                 
                                 
                                    0
                                 
                              
                            functions.
                      such that for all test functions 
                        δ
                        
                           u
                        
                      in the test space,
                        3
                     
                     
                        3
                        Contains 
                              
                                 
                                    C
                                 
                                 
                                    0
                                 
                              
                            functions but vanishes on 
                              
                                 
                                    Γ
                                 
                                 
                                    u
                                 
                              
                           .
                     
                     
                        
                           (15)
                           
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              
                                 ε
                              
                              
                                 (
                                 
                                    u
                                 
                                 )
                              
                              :
                              
                                 D
                              
                              :
                              
                                 ε
                              
                              
                                 (
                                 δ
                                 
                                    u
                                 
                                 )
                              
                              
                                 d
                              
                              Ω
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    
                                       
                                          Γ
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       t
                                    
                                 
                                 ¯
                              
                              ⋅
                              δ
                              
                                 u
                              
                              
                                 d
                              
                              Γ
                              +
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              
                                 b
                              
                              ⋅
                              δ
                              
                                 u
                              
                              
                                 d
                              
                              Ω
                           
                        
                      where the elasticity matrix is denoted by 
                        
                           D
                        
                        ,
                        
                           b
                        
                      refers to a body force, and 
                        
                           ε
                        
                      represents the strain field which is taken as the symmetric part of the displacement gradient 
                        
                           ε
                        
                        =
                        
                           
                              1
                           
                           
                              2
                           
                        
                        
                           (
                           ∇
                           
                              u
                           
                           +
                           
                              
                                 ∇
                              
                              
                                 
                                    T
                                 
                              
                           
                           
                              u
                           
                           )
                        
                     . Using the Bubnov–Galerkin method where the same shape functions 
                        
                           
                              R
                           
                           
                              I
                           
                        
                     —the NURBS basis functions—are used for 
                        
                           u
                        
                      and 
                        δ
                        
                           u
                        
                      we can write 
                        
                           (16)
                           
                              
                                 u
                              
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    I
                                 
                                 
                                    n
                                    n
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    I
                                 
                              
                              
                                 (
                                 
                                    ξ
                                 
                                 )
                              
                              
                                 
                                    
                                       u
                                    
                                 
                                 
                                    I
                                 
                              
                              ,
                              
                              δ
                              
                                 u
                              
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    I
                                 
                                 
                                    n
                                    n
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    I
                                 
                              
                              
                                 (
                                 
                                    ξ
                                 
                                 )
                              
                              δ
                              
                                 
                                    
                                       u
                                    
                                 
                                 
                                    I
                                 
                              
                           
                        
                      where 
                        
                           
                              
                                 u
                              
                           
                           
                              I
                           
                        
                        =
                        
                           
                              
                                 [
                                 
                                    
                                       u
                                    
                                    
                                       x
                                       I
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       y
                                       I
                                    
                                 
                                 ]
                              
                           
                           
                              
                                 T
                              
                           
                        
                      is the nodal unknown vector, 
                        δ
                        
                           
                              
                                 u
                              
                           
                           
                              I
                           
                        
                      denote the nodal displacement variations and 
                        n
                        n
                      is the number of control points. Note the similarity of the above equations with Eq. (8). This is the well known isoparametric concept in FEM.

Substitution of these approximations into Eq. (15) and using the arbitrariness of the nodal displacement variations 
                        δ
                        
                           
                              
                                 u
                              
                           
                           
                              I
                           
                        
                      give the discrete equations 
                        
                           (17)
                           
                              
                                 K
                              
                              
                              
                                 u
                              
                              =
                              
                                 f
                              
                           
                        
                      with 
                        
                           (18)
                           
                              
                                 
                                    
                                       K
                                    
                                 
                                 
                                    I
                                    J
                                 
                              
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              
                                 
                                    
                                       B
                                    
                                 
                                 
                                    I
                                 
                                 
                                    
                                       T
                                    
                                 
                              
                              
                                 D
                              
                              
                                 
                                    
                                       B
                                    
                                 
                                 
                                    J
                                 
                              
                              
                                 d
                              
                              Ω
                              ,
                              
                              
                                 
                                    
                                       f
                                    
                                 
                                 
                                    I
                                 
                              
                              =
                              
                                 
                                    ∫
                                 
                                 
                                    
                                       
                                          Γ
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    I
                                 
                              
                              
                                 
                                    
                                       t
                                    
                                 
                                 ¯
                              
                              
                                 d
                              
                              Γ
                              +
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    I
                                 
                              
                              
                                 b
                              
                              
                                 d
                              
                              Ω
                              .
                           
                        
                      In two dimensions, the strain–displacement 
                        
                           
                              
                                 B
                              
                           
                           
                              I
                           
                        
                      matrix is given by 
                        
                           (19)
                           
                              
                                 
                                    
                                       B
                                    
                                 
                                 
                                    I
                                 
                              
                              =
                              
                                 [
                                 
                                    
                                       
                                          
                                             
                                                R
                                             
                                             
                                                I
                                                ,
                                                x
                                             
                                          
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          
                                             
                                                R
                                             
                                             
                                                I
                                                ,
                                                y
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                R
                                             
                                             
                                                I
                                                ,
                                                y
                                             
                                          
                                       
                                       
                                          
                                             
                                                R
                                             
                                             
                                                I
                                                ,
                                                x
                                             
                                          
                                       
                                    
                                 
                                 ]
                              
                              .
                           
                        
                      Solving the system of linear equations in Eq. (17) gives the nodal values 
                        
                           u
                        
                      based on which derived quantities such as strains and stresses can be determined at any point. For details on FEM, we refer to standard textbooks on the subject e.g.,  [50,51]. Note that 
                        
                           
                              R
                           
                           
                              I
                              ,
                              x
                           
                        
                      denotes the first order partial derivative of 
                        
                           
                              R
                           
                           
                              I
                           
                        
                      with respect to 
                        x
                     .

Domain integrals as appeared in Eq. (18) are numerically evaluated as in standard FEM. However, there is one difference because the NURBS basis is defined in the parameter space or parametric domain whereas the quadrature rule is defined in the so-called bi-unit parent domain; see Fig. 16
                     . For a function 
                        f
                        
                           (
                           x
                           ,
                           y
                           )
                        
                     , one writes 
                        
                           (20)
                           
                              
                                 
                                    ∫
                                 
                                 
                                    Ω
                                 
                              
                              f
                              
                                 (
                                 x
                                 ,
                                 y
                                 )
                              
                              
                                 d
                              
                              Ω
                              =
                              
                                 
                                    ⋃
                                 
                                 
                                    e
                                    =
                                    1
                                 
                                 
                                    
                                       nel
                                    
                                 
                              
                              
                                 
                                    ∫
                                 
                                 
                                    
                                       
                                          Ω
                                       
                                       
                                          e
                                       
                                    
                                 
                              
                              f
                              
                                 (
                                 x
                                 ,
                                 y
                                 )
                              
                              
                                 d
                              
                              
                                 
                                    Ω
                                 
                                 
                                    e
                                 
                              
                              =
                              
                                 
                                    ⋃
                                 
                                 
                                    e
                                    =
                                    1
                                 
                                 
                                    
                                       nel
                                    
                                 
                              
                              
                                 
                                    ∫
                                 
                                 
                                    
                                       
                                          
                                             
                                                Ω
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          e
                                       
                                    
                                 
                              
                              f
                              
                                 (
                                 x
                                 
                                    (
                                    ξ
                                    )
                                 
                                 ,
                                 y
                                 
                                    (
                                    η
                                    )
                                 
                                 )
                              
                              
                                 |
                                 
                                    
                                       J
                                    
                                    
                                       
                                          ξ
                                       
                                    
                                 
                                 |
                              
                              
                                 d
                              
                              
                                 
                                    
                                       
                                          Ω
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    e
                                 
                              
                              =
                              
                                 
                                    ⋃
                                 
                                 
                                    e
                                    =
                                    1
                                 
                                 
                                    
                                       nel
                                    
                                 
                              
                              
                                 
                                    ∫
                                 
                                 
                                    □
                                 
                              
                              f
                              
                                 (
                                 
                                    
                                       ξ
                                    
                                    
                                       ̄
                                    
                                 
                                 ,
                                 
                                    
                                       η
                                    
                                    
                                       ̄
                                    
                                 
                                 )
                              
                              
                                 |
                                 
                                    
                                       J
                                    
                                    
                                       
                                          ξ
                                       
                                    
                                 
                                 |
                              
                              
                              
                                 |
                                 
                                    
                                       J
                                    
                                    
                                       
                                          
                                             
                                                ξ
                                             
                                          
                                          
                                             ̄
                                          
                                       
                                    
                                 
                                 |
                              
                              
                                 d
                              
                              □
                           
                        
                      where 
                        ⋃
                      represents the standard assembly operator, 
                        
                           nel
                        
                      denotes the number of finite elements which are defined as non-zero knot spans, 
                        
                           |
                           
                              
                                 J
                              
                              
                                 
                                    ξ
                                 
                              
                           
                           |
                        
                      denotes the determinant of the Jacobian of the transformation from the parametric domain to the physical domain and 
                        
                           |
                           
                              
                                 J
                              
                              
                                 
                                    
                                       
                                          ξ
                                       
                                    
                                    
                                       ̄
                                    
                                 
                              
                           
                           |
                        
                      represents the determinant of the Jacobian of the transformation from the parent domain to the parametric domain. This transformation, which defines a map from a square to a rectangle, is trivial and hence not discussed here. The final integral can be performed using standard Gauss–Legendre quadrature. Especially, a 
                        
                           (
                           p
                           +
                           1
                           )
                        
                        ×
                        
                           (
                           q
                           +
                           1
                           )
                        
                      Gaussian quadrature is adopted for two-dimensional elements with 
                        p
                      and 
                        q
                      denoting the orders of the NURBS basis in the 
                        ξ
                      and 
                        η
                      directions, respectively.

There exists some open-source IGA packages written in Matlab, for example GeoPDEs reported in  [52], ISOGAT  [53] and MIGFEM, written by the first author, hosted at https://sourceforge.net/projects/cmcodes/ and described in  [12]. Our offset algorithm is implemented in MIGFEM. For large scale problems, NURBS-based IGAFEM was implemented in the C++ numerical toolkit  [54]. Our recent works on IGA  [31,32] employed this C++ code. In order to simplify the implementation of NURBS-based isogeometric finite elements into existing FE codes, the authors in  [55] proposed an isogeometric FE data structures based on Bézier extraction which was implemented in  [54]. With the Bézier extraction-based implementation, a multi-patch NURBS solid is simply a mesh of finite elements; the data of each element include (i) nodal coordinates (or control points), (ii) Bézier extraction sparse matrix and (iii) weights. Incorporation of NURBS-based FEs into commercial FE package Abaqus was presented in  [56].

This section presents two proof-of-concept examples to validate and demonstrate the capabilities of the proposed framework. To this end, linear static stress analyses are carried out for 2D/3D objects constructed using the proposed offset algorithm. The Matlab code MIGFEM  [12] is used as a pre-processor, the IGA solver is implemented in the commercialized C++ library jive  [54] and post-processing (visualization) was performed using Paraview  [48].

We consider the problem shown in Fig. 17
                        . For sake of simplicity, the material is a linear elastic one with Young’s modulus 
                           E
                           =
                           
                              
                                 10
                              
                              
                                 6
                              
                           
                           
                           
                              MPa
                           
                         and Poisson’s ratio of 0.3. A plane strain condition is assumed. The bottom edge of the skin is fixed and an imposed displacement of 0.2 mm is applied on the top edge of the stiffener in the vertical direction. The reference solution is obtained by a conventional FEM with a conforming mesh consisting of unstructured three-node triangle elements as given in Fig. 18
                        (b). In our IGA framework, the object is made of two patches: one for the skin and one for the stiffener. These two patches can be parametrized arbitrarily of each other, Fig. 18(a), and thus at the patch boundaries there is incompatibility of the displacements of the patches. We enforced the compatibility of the displacements by resorting to Nitsche’s method (or discontinuous Galerkin method)  [57] which is a consistent and stable penalty method. The formulation can be found elsewhere  [58,59] and implementation was presented in  [41,60]. We also implemented Nitsche’s method in the C++ code jive  [54] and used this code for the analyses presented in this paper. We compare the displacement and stress fields computed by the two methods in Fig. 19
                         and the non-conforming IGA result is in good agreement with the standard FEM solutions.

Next, a three-dimensional analysis is carried out by extruding the 2D section along the 
                           Z
                         direction a distance of 10 mm. The 3D nonconforming 
                           B
                        -spline mesh is given in Fig. 20
                        . The stress profile is quite similar to the one of the 2D plane strain models. Finally, in order to demonstrate the flexibility of the method, we moved the stiffeners and performed FE analyses without needing to remesh the patches to have compatibility at the patch boundaries (see Fig. 21
                        ).

In this example we present a stress analysis of a curved composite panel with stiffeners as shown in Fig. 22
                        . Fig. 23
                         presents the geometry modeling procedure realized in MIGFEM. We start with the skin and stiffener curves which are quadratic NURBS curves. Using the proposed offset algorithm yields the offset curves and from that bivariate 
                           B
                        -spline surfaces can be defined. Note that for the stiffener curves, we refined the curves before offsetting it to have a good accuracy as shown in Fig. 23(b). In the next step, extrusion along 
                           Z
                         direction was made to create trivariate 
                           B
                        -spline solids which are analysis-suitable. Finally, a correct number of plies are built using knot insertion along the thickness direction exploiting the 
                           
                              
                                 C
                              
                              
                                 p
                                 −
                                 m
                              
                           
                         property of NURBS where 
                           m
                         denotes the knot multiplicity. Each ply interface represents a surface where the displacement field should be 
                           
                              
                                 C
                              
                              
                                 0
                              
                           
                         so that the strain field is discontinuous. Note that along the thickness direction a linear basis was used; the knots to be inserted can thus be easily determined. For example, assuming that there are 8 plies of the same thickness, hence the knots to be inserted are 
                           
                              [
                              1
                              /
                              8
                              ,
                              2
                              /
                              8
                              ,
                              3
                              /
                              8
                              ,
                              4
                              /
                              8
                              ,
                              5
                              /
                              8
                              ,
                              6
                              /
                              8
                              ,
                              7
                              /
                              8
                              ]
                           
                         (the original knot vector along the thickness direction was 
                           
                              [
                              0
                              ,
                              0
                              ,
                              1
                              ,
                              1
                              ]
                           
                        ). As can be seen the proposed framework is suitable for parametric studies where changes in the geometry are inherited in the FE model. As can be seen from Fig. 23(d), although the geometry is exactly captured in the NURBS mesh, it is too coarse for the purpose of analysis. Therefore, a more refined model is required which is obtained by adopting the so-called 
                           p
                        -refinement (order elevated in CAD terminology) followed by an 
                           h
                        -refinement (knot insertion in CAD terminology). This is the so-called 
                           k
                        -refinement  [6] which is a unique feature of IGA compared to standard FEM.

The panel (as well as the stiffeners) is a composite laminate fabricated by stacking thin plies of composite material atop one another. Each ply of 0.1 mm thick contains long carbon fibers embedded in a polymeric matrix. Since it is impossible to explicitly model the fibers and matrix, the plies are modeled as an homogeneous orthotropic elastic material with material constants 
                           
                              
                                 E
                              
                              
                                 11
                              
                           
                         and 
                           
                              
                                 E
                              
                              
                                 22
                              
                           
                         being the Young’s moduli of the ply in the fiber direction and transverse direction, respectively, 
                           
                              
                                 ν
                              
                              
                                 21
                              
                           
                         and 
                           
                              
                                 ν
                              
                              
                                 23
                              
                           
                         are the longitudinal and transverse Poisson’s ratios, and 
                           
                              
                                 G
                              
                              
                                 12
                              
                           
                         is the longitudinal shear modulus. We used 
                           
                              
                                 E
                              
                              
                                 11
                              
                           
                           =
                           115
                           
                           
                              GPa
                           
                        , 
                           
                              
                                 E
                              
                              
                                 22
                              
                           
                           =
                           
                              
                                 E
                              
                              
                                 33
                              
                           
                           =
                           8.5
                           
                           
                              GPa
                           
                           ,
                           
                              
                                 ν
                              
                              
                                 12
                              
                           
                           =
                           
                              
                                 ν
                              
                              
                                 23
                              
                           
                           =
                           
                              
                                 ν
                              
                              
                                 31
                              
                           
                           =
                           0.29
                           ,
                           
                              
                                 G
                              
                              
                                 12
                              
                           
                           =
                           
                              
                                 G
                              
                              
                                 31
                              
                           
                           =
                           4.5
                           
                           
                              GPa
                           
                        .

For analysis we used a quadratic-quadratic-linear (
                           X
                         direction, 
                           Y
                         direction (thickness) and 
                           Z
                         direction) NURBS representation. As shown in Fig. 24
                        , the stiffened panel consists of three NURBS patches. Each patch has its own NURBS parametrization (control points, knot vectors). For a multi-patch NURBS object one has to ensure the continuity of the displacement field across patch interfaces. For the skin and the stiffeners must have the same curvature to fit together the geometry model is inherently compatible as depicted in Fig. 25
                        . In the conforming case, the continuity of the displacements is enforced by constraining the nodes/control points (of different patch) along the patch interfaces using the multi-point constraint method  [62]. The stress in the 
                           x
                         direction is given in Fig. 26
                        (a). Note that this compatibility can be lost, in the analysis stage, if the skin and the stiffeners are refined, via e.g., knot insertion differently. In that case, Nitsche’s method used in the previous can be used to glue the patches. Fig. 26(b) demonstrates such a case.

@&#CONCLUSION@&#

We presented a new algorithm to compute offsets of NURBS curves and surfaces which allows a trivariate representation of NURBS surfaces of composite panels to be constructed. The geometry object can then be directly used in an FE analysis using the isogeometric analysis concept. It should be emphasized that our offset algorithm differs from existing offset algorithms developed by the CAD community in a way that both the base and offset curves/surfaces have the same parametrization (number of control points and order). This is the key requirement to build tensor-product surfaces/volumes from these curves/surfaces that area ready for finite element analyses. We demonstrated that analysis-suitable 3D representation of a certain class of geometries including extruded solids and solids of revolution can be built using the presented algorithm. A verification test was provided in which our IGA result was verified with the standard FEM. Stress analyses of a three-dimensional curved composite panel with curved stiffeners demonstrated the effectiveness of the proposed CAD-FEA framework. It facilitates the design of composite panels by allowing (1) CAD data to be directly used in an FEA package, (2) parameter studies in which the number of plies, the ply thickness can be easily varied, (3) an automatic generation of cohesive interface elements for delamination analysis as shown in our recent work  [32] and (4) nonconforming meshes. Preliminary proof-of-concept examples were provided to demonstrate the capabilities of the offset algorithm and isogeometric analysis in the context of design and analysis of composite panels. In-depth studies and nonlinear analyses are underway. For knowledge sharing, our work will be released as a part in the open source IGA code, MIGFEM hosted at https://sourceforge.net/projects/cmcodes/, developed by the same authors.

@&#ACKNOWLEDGMENTS@&#

The authors would like to acknowledge the partial financial support of the Framework Programme 7 Initial Training Network Funding under Grant Number 289361 “Integrating Numerical Simulation and Geometric Design Technology”. Stéphane Bordas also thanks partial funding for his time provided by (1) the EPSRC under grant EP/G042705/1 Increased Reliability for Industrially Relevant Automatic Crack Growth Simulation with the eXtended Finite Element Method and (2) the European Research Council Starting Independent Research Grant (ERC Stg Grant Agreement No. 279578) entitled “Towards real time multiscale simulation of cutting in non-linear materials with applications to surgical simulation and computer guided surgery”. The authors would like to express the gratitude towards Drs. Erik Jan Lingen and Martijn Stroeven at the Dynaflow Research Group, Houtsingel 95, 2719 EB Zoetermeer, The Netherlands, for providing us the numerical toolkit jem/jive.

@&#REFERENCES@&#

