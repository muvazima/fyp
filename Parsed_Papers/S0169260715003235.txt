@&#MAIN-TITLE@&#Predicting healthy older adult's brain age based on structural connectivity networks using artificial neural networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We proposed a novel computational approach for modeling the normal elderly subjects's brain age by connectivity analyses of networks of the brain.


                        
                        
                           
                           Principal component analysis (PCA) is applied to reduce the redundancy in network topological parameters.


                        
                        
                           
                           BP artificial neural network (BPANN) is improved by hybrid genetic algorithm (GA) and Levenberg–Marquardt (LM) algorithm to model the relation among principal components (PCs) and brain age.


                        
                        
                           
                           The method has shown good performance for old cohort with limited samples.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

MRI

Healthy brain ageing

Connectome

DTI

White matter

@&#ABSTRACT@&#


               
               
                  Brain ageing is followed by changes of the connectivity of white matter (WM) and changes of the grey matter (GM) concentration. Neurodegenerative disease is more vulnerable to an accelerated brain ageing, which is associated with prospective cognitive decline and disease severity. Accurate detection of accelerated ageing based on brain network analysis has a great potential for early interventions designed to hinder atypical brain changes. To capture the brain ageing, we proposed a novel computational approach for modeling the 112 normal older subjects (aged 50–79 years) brain age by connectivity analyses of networks of the brain. Our proposed method applied principal component analysis (PCA) to reduce the redundancy in network topological parameters. Back propagation artificial neural network (BPANN) improved by hybrid genetic algorithm (GA) and Levenberg–Marquardt (LM) algorithm is established to model the relation among principal components (PCs) and brain age. The predicted brain age is strongly correlated with chronological age (r
                     =0.8). The model has mean absolute error (MAE) of 4.29 years. Therefore, we believe the method can provide a possible way to quantitatively describe the typical and atypical network organization of human brain and serve as a biomarker for presymptomatic detection of neurodegenerative diseases in the future.
               
            

@&#INTRODUCTION@&#

Because of increasing longevity and declining fertility, the proportion of the world's older adults will double from about 11% to 22% between 2000 and 2050. Cognitive health has consistently been cited as a key cause for quality of life [1] and as an important contributor to late-life functioning [2,3]. A recent study [4] suggests that people in younger brain age compared to their chronological age would have less social and economic burden. Maintaining a healthy brain is the key factor in preserving the quality of life for older people. Therefore, understanding the pattern of healthy brain ageing is important to freeze the effects of brain ageing and possibly extends healthy cognitive for our ageing society.

Brain ageing is a complex and inevitable biological process associated with dysfunction in cognition, neural function, and brain structure. For those older people, there are considerable individual differences of preserving cognitive functions. This heterogeneity has been suggested to reflect a continuum extending from “successful cognitive ageing” [5], with high levels of functioning throughout the lifespan, to “advanced ageing” [6,7], the possibility of individuals suffering from memory impairment and neurodegenerative diseases, such as Alzheimer's disease (AD). It has become increasingly obvious that neurodegenerative disease exists in subtle preclinical forms for many years before the symptom onset [8,9]. Early disease-related brain changes may represent the early stage of neurodegenerative diseases rather than normal concomitants of ageing, even without any clinical symptoms [10]. Early AD patients showed signs of accelerated brain ageing (+10 years) [11]. Noninsulin-dependent diabetes mellitus subjects have an older brain compared with their chronological age (+4.6 years) [12]. Hypertension subjects have estimated brain age older than their chronological age (+4.1 years)[13]. Koutsouleris et al. [14] found that schizophrenia has an accelerated ageing effect (+5.5 years). Accelerated ageing effect may also extend to other mental disorders (major depression (+4.0 years), borderline personality disorder (+3.1 years), and at-risk mental states for psychosis groups (+1.7 years)). Therefore, a prediction model of brain age can detect the subtle brain deviations from the normal ageing pattern, before the pathological onset. If the predicted brain age according to brain images is older than the subject's chronological age, then this could be the evidence of accelerated brain ageing.

The human brain is a network of interconnected structural and functional brain regions. Current neuroimaging techniques allow us to map anatomical regions as well as their interconnecting pathways. The set of connections in this complex neural network, called the Connectome [15,16], has been the focus in recent years because of advances in neuroimaging technique and network analysis methods. The Human Connectome Project (HCP) [17,18] was launched in 2009 as a 5-year effort to characterize brain anatomical and functional connectivity in healthy adults. Ageing is not only a major risk factor for human cognition, but also a predictor of conversion to other neurodegenerative diseases. Ageing might influence a set of brain regions; each region could affect brain dynamics by altering its own activity pattern, the pattern of direct connected neighbors of the region, the activity in the rest of the brain regions, and the whole-brain network.

Advances in diffusion tensor imaging (DTI) allow us to infer subject specific brain connectivity in vivo. In this study, we employed DTI to explore the topological changes of whole-brain WM structural connectivity in the normal older subjects. This study hypothesized that: when healthy people are ageing, they will show a topological pattern revealed by characteristics in the WM networks. Moreover, these topological changes can be regarded as the biomarkers to predict brain ageing, which will benefit our understanding of cognitive ageing and neurodegenerative diseases. Here, we used DTI tractography to build the human brain WM networks of 112 healthy ageing subjects, followed by a graph theoretical analysis. Principal component analysis (PCA) was integrated with back propagation artificial neural network (BPANN) to predict the brain age. Using principal components (PCs) as BPANN's input can eliminate redundancies of original network metrics and remove the correlation between them. To improve the performance of the BPANN and reduce the necessary training time, a hybrid optimization algorithm that integrates both genetic algorithm (GA) and Levenberg–Marquardt (LM) algorithm is used.

One hundred and twelve right-handed healthy older volunteers participated in this study. Subjects were recruited by advertisement in local newspapers and campus flyers. The research was approved by the university ethics committee, and all subjects provided written informed consent before participating in the study. The participants were contacted by telephone and underwent a preliminary telephone screen for eligibility. Exclusion criteria consisted of left-handedness, current or past history of alcohol or drug use disorder, neurological and psychiatric disorders, and the presence of ferrous metal implants. After passing the telephone screen, participants were scheduled for a more detailed cognitive evaluation. The subjects are eligible to participate in the study if (a) they do not meet research NINCDS-ADRDA criteria of a diagnosis of probable AD or DSM-IV criteria for any type of dementia or research criteria for mild cognitive impairment (MCI); (b) they have a Folstein MMSE score ≥26; (c) they have a 17-item Hamilton Depression Rating Scale (HAMD-17) score ≤10. All subject characteristics are shown in Table 1
                        .

All subjects were asked to answer a MRI safety questionnaire and remove MRI-incompatible objects during pre-MRI safety screening. MRI scans were performed on a 3-Tesla (3T) Signa II scanner (General Electric Medical Systems, Milwaukee, WI) using an eight-channel phased array head coil. The T1-weighted (T1W) data were acquired using 3D spoiled gradient echo (3DSPGR) sequence with the following parameters (204 slices, 1mm thickness, TR=5.3ms, TE=2.0ms, TI=500, flip angle=15°, matrix=256×256, FOV=256mm×256mm). The DTI data were acquired using a single-shot spin echo diffusion sensitized echo-planar imaging (EPI) sequence (58 slices, 2.6mm thickness, TR=12.5s, TE=71ms, 51 diffusion encoding gradients, b=1000s/mm2, NEX=2, matrix=128×128, FOV=250mm×250mm and eight non-diffusion volumes).

T1W MRI were preprocessed using Statistical Parametric Mapping software (SPM8, Welcome Department of Imaging Neuroscience, London, UK; http://www.fil.ion.ucl.ac.uk/spm) [19] running on Matlab 7.9.0 (Mathworks Inc. Math-Works, Natick, MA, USA). T1W images of all subjects were segmented into GM, WM and cerebrospinal fluid (CSF) using the new segmentation algorithm, an updated version of the unified segmentation algorithm [20] implemented in SPM8. In this new segmentation process, we used default parameters; however, affine regularization was performed with the International Consortium for Brain Mapping template for East Asian brains. The combined GM, WM and CSF maps were used to create a whole-brain mask.

DTI images were processed by Pipeline for Analyzing braiN Diffusion imAges (PANDA) software (State Key Laboratory of Cognitive Neuroscience and Learning, Beijing Normal University; http://www.nitrc.org/projects/panda/) [21], which synthesizes procedures in FSL (FMRIB Software Library, FMRIB, Oxford [22]; http://fsl.fmrib.ox.ac.uk/fsl), diffusion toolkit (http://trackvis.org/dtk/), and MRIcron (http://www.mccauslandcenter.sc.edu/mricro/mricron). For preprocessing, we used default parameters in PANDA software. For each subject, it was processed with following steps: converting images from DICOM format into NIfTI format, removing skull and non-brain tissue by whole-brain mask created from T1W images, correcting the head motion and eddy current distortion, calculating and fitting diffusion tensor metrics in every voxel by the linear least-squares fitting method, coregistering individual T1W structural image to the corresponding non-diffusion-weighted (b
                        =0) image in the native diffusion space, and registering transformed structural images to a standardized template in the MNI space by FSL. The nonlinear warping was initialized with an affine registration generated with the FSL's registration tool FLIRT [23].

Two basic elements in a network are nodes and edges. Thus, brain network construction includes two main steps. The first step is to determine the nodes in the network, and the second step is to define the edges among those nodes. The schematic flowchart of image preprocessing and network construction is demonstrated in Fig. 1
                        . The automated anatomical labeling (AAL) template [24] was chosen because of its popularity [25] in network analysis. It contains 78 cortical regions and 12 subcortical regions (excluding cerebellum) (45 regions within each hemisphere). The derived transformation parameters were inverted and applied to warp the AAL labels from the MNI space to the native diffusion space, producing labels for the 90 nodes in the DTI native space. As suggested by previous studies [26,27], fiber assignment by continuous tracking (FACT) algorithm [28] from Diffusion Toolkit [29] was used to reconstruct whole-brain tractography. The fiber tracking were computed by seeding each voxel with a fractional anisotropy (FA) greater than 0.2 (essentially excluding the non-white matter), and traces along bilateral directions of the principal eigenvector of the diffusion tensor. The fiber propagation was stopped until they reached a voxel with FA value <0.2 or the angle of deflection threshold of the propagating line >45°, as suggested in a previous study [30]. We identified WM connections for each pair of AAL volumes. Based on those WM fibers among nodes, three 90-by-90 connectivity matrices: FA matrix, fiber number (FN) matrix and fiber length (FL) matrix were extracted. In the matrices, each row or column represents an AAL brain region in the network. The weighted values of FA matrix indicate the averaged FA between two nodes. In FN matrix, weights indicate the number of joint fibers connected between two anatomical nodes. Moreover, in FL matrix, the weighted values show the averaged length of WM fibers that reached from one node to another.

Because FACT algorithm is sensitive to image resolution and noise, it is possible to have false-positive connections. To reduce the influence from pseudo connections, we determined the major connections, which are the backbone network within the brain. For the FL and FN matrixes, if the major connections between two regions were more than a user-defined threshold, the weight of that edge would be kept; otherwise, the weight would be set to zero. We evaluated the effects of different thresholds (1–5). The result showed that when a minimum of three fibers was selected as a threshold, the network properties were the most sensitive to age. Such threshold selection reduced pseudo connections and preserved the largest connected component in the networks simultaneously. For the FA matrix, if at least three fibers were located within a region and FA value was greater than 0.2, the weight on the edge would be kept; otherwise, the weight would be set to zero. Moreover, the weighted matrices could be binarized based on whether their values are greater than zero. As we did not count self-recurrent connections, the diagonal elements in matrixes were zero. The resultant network matrices of FN, FL, FA were shown in Fig. 2
                        .

Next, the topological properties of anatomical networks are analyzed quantitatively using graph theory. Five nodal measures (degree, strength, local efficiency, local clustering coefficient, and node betweenness centrality) (Table 2
                        ) [31,32] are examined to describe the regional properties of the anatomical networks. The network topological properties are processed by the Brain Connectivity Toolbox (BCT, http://www.brain-connectivity-toolbox.net). The five topological properties are unsuitable for all matrices, so we chose the appropriate connection matrix based upon the requirements of each topological property. For example, degree is used to show the number of neighbors that directly connected to a node. Because the number of connections of nodes has a less association with the fiber length (connectivity matrix of FL), therefore, FN and FA were selected to calculate the measure of degree. For most of topological properties, binary networks were used because they are usually simpler to characterize, have a more easily defined null model [33], and have showed similar results in major topology parameter analysis of the brain network compared with weighted matrices [34]. We got eight kinds of local topological properties, a total of 720 features (node betweenness centrality (binarized FL) 1×90+ local clustering coefficient (binarized FN, binarized FA)2×90+ degree (binarized FN, binarized FA)2×90+ local efficiency(binarized FL) 1×90+ strength (weighted FA, weighted FN) 2×90).

Because of its advantage of producing model estimates with less bias in smaller samples, leave one out cross validation (LOOCV) [35], a special case of k-fold cross validation was employed to make statistical inference about the mean accuracies of the brain age prediction algorithm. Each subject was designated as a test sample in turn and the remaining samples were viewed as training data. The chronological ages of training samples were used as training measures in every LOOCV fold. In addition, a predicted brain age was obtained for each subject. So, the process repeated 112 times.

The topological maps were first log transformed and then scaled to the same mean value and standard deviation using a feature-wise z-transformation. An artificial neural network (ANN) is a nonlinear model, which can achieve complex nonlinear relationships between the input and output data sets with no knowledge of underlying physical relationships. One requirement for ANN models is that the input variables should have poor correlation. PCA, which maximizes the correlation between the original topological measurements to form PCs that are mutually orthogonal, or uncorrelated, was adopted. PCs are linear combinations of original topological measurements in which the weights allocated to the linear combinations of those topological measurements are termed eigenvectors. Principal components can be expressed as follows:
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   F
                                                   1
                                                
                                                =
                                                
                                                   μ
                                                   
                                                      11
                                                   
                                                
                                                
                                                   Z
                                                   1
                                                
                                                +
                                                
                                                   μ
                                                   
                                                      12
                                                   
                                                
                                                
                                                   Z
                                                   2
                                                
                                                +
                                                ⋯
                                                
                                                   μ
                                                   
                                                      1
                                                      p
                                                   
                                                
                                                
                                                   Z
                                                   p
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   F
                                                   2
                                                
                                                =
                                                
                                                   μ
                                                   
                                                      21
                                                   
                                                
                                                
                                                   Z
                                                   1
                                                
                                                +
                                                
                                                   μ
                                                   
                                                      22
                                                   
                                                
                                                
                                                   Z
                                                   2
                                                
                                                +
                                                ⋯
                                                
                                                   μ
                                                   
                                                      2
                                                      p
                                                   
                                                
                                                
                                                   Z
                                                   p
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                ⋯
                                                ⋯
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   F
                                                   p
                                                
                                                =
                                                
                                                   μ
                                                   
                                                      p
                                                      1
                                                   
                                                
                                                
                                                   Z
                                                   1
                                                
                                                +
                                                
                                                   μ
                                                   
                                                      p
                                                      2
                                                   
                                                
                                                
                                                   Z
                                                   2
                                                
                                                +
                                                ⋯
                                                
                                                   μ
                                                   
                                                      p
                                                      p
                                                   
                                                
                                                
                                                   Z
                                                   p
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where Z
                        
                           i
                         is the original topological measurement, F
                        
                           i
                         is the principal component and 
                           
                              
                                 
                                    
                                       μ
                                       i
                                    
                                 
                                 →
                              
                           
                         is the coefficient vector respectively.

PCs are extracted in decreasing order of importance. The first PCs accounts for most of the variance in the original data, and each succeeding component accounts for as much of the remaining variability as possible. Lower-order PCs are kept, while higher-order ones are ignored. For 96.5% of the models (112 models) that we constructed, we found that the total variance explained by the first eighteen PCs was above 85%, the first of which accounted for 24.1%±0.7% of the variance.

We have a three-layer neural network in this study, which is constituted by an input layer, one hidden layer and an output layer. The fore mentioned eighteen PCs were used as inputs for the BPANN, while the output provides the brain age prediction. Hidden nodes with softmax transfer function are used to process the information received by the input nodes, and the output layer transfer function is a linear transfer function. Number of neurons in the hidden layer was determined by the following rule: the size of neurons in the hidden layer is between the size of the input layer and the output layer [36]. The structure of the BPANN is shown in Fig. 3
                        .

For standard BPANN, it has limitations such as trapping into local optima, oscillation, and long training time because of gradient descent training method and fixed learning rate. LM algorithm [37] keeps the best features of both the gradient-descent method and the Gauss–Newton method, which adjusts the weights among the neurons and improves the network performance. However, there is still much space to improve. GA [38] utilize random search for optimization of a fitness function by means of the parameters space coding. A hybrid optimization algorithm that integrates both GA and LM algorithm is proposed here. The implementation of it uses the Genetic Algorithms Toolbox for MATLAB (http://codem.group.shef.ac.uk/index.php/ga-toolbox) and neural network toolbox for MATLAB software. The learning process consists of two stages (Fig. 4
                        ): first employing GA to search for optimal or approximate optimal connection weights and thresholds for the network. The BPANN weights are initialized as genes of chromosome at first. The encoding length of BPANN can be calculated by S
                        =
                        N1*N2+
                        N2*N3+
                        N2+
                        N3 (N1 is the number of input nodes, N2 is the number of hidden nodes, and N3 is the number of output nodes).

GA can find the global optima through bit-flip mutation, uniform crossover and roulette wheel selection operations applied to chromosomes within the population. The fitness value of a chromosome is calculated using the reciprocal of one plus the mean squared error of the BPANN architecture, expressed as Eq. (2)
                        
                           
                              (2)
                              
                                 
                                    
                                       F
                                       t
                                    
                                    =
                                    
                                       1
                                       
                                          1
                                          +
                                          
                                             
                                                (
                                                1
                                                /
                                                n
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                            i
                                                         
                                                         −
                                                         
                                                            c
                                                            i
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        where F
                        
                           t
                         denotes the fitness value of chromosomes t, n denotes the number of the training samples, ‘c’ is the chronological age and ‘p’ is the predicted brain age. For roulette wheel selection, each chromosome has a probability p
                        
                           t
                        , which is directly proportional to its fitness F
                        
                           t
                        , thereby giving more opportunities to the chromosome with higher fitness value, and also giving some chances to the individuals with low fitness.
                           
                              (3)
                              
                                 
                                    
                                       p
                                       t
                                    
                                    =
                                    
                                       
                                          
                                             F
                                             t
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                t
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             
                                                F
                                                t
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where n is the number of chromosomes.

The parameters in this study include population size, mutation probability, crossover probability and number of generation. They were 24, 0.1, 0.4 and 100, respectively. The crossover operation is employed as: suppose ‘chrom1’ and ‘chrom2’ are two original chromosomes, and ‘r
                        1’ is an independently distributed random variance with the range [0,1], then two new chromosomes will be generated by Eq. (4)
                        
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                c
                                                h
                                                r
                                                o
                                                m
                                                
                                                   1
                                                   ′
                                                
                                                =
                                                
                                                   r
                                                   1
                                                
                                                ×
                                                c
                                                h
                                                r
                                                o
                                                m
                                                1
                                                +
                                                (
                                                1
                                                −
                                                
                                                   r
                                                   1
                                                
                                                )
                                                ×
                                                c
                                                h
                                                r
                                                o
                                                m
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                c
                                                h
                                                r
                                                o
                                                m
                                                
                                                   2
                                                   ′
                                                
                                                =
                                                
                                                   r
                                                   1
                                                
                                                ×
                                                c
                                                h
                                                r
                                                o
                                                m
                                                2
                                                +
                                                (
                                                1
                                                −
                                                
                                                   r
                                                   1
                                                
                                                )
                                                ×
                                                c
                                                h
                                                r
                                                o
                                                m
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Since GA performs a global search, it is computational expensive, especially when the search space is huge. The evolution process continues until the number of generation reaches 100 times. The second step is to use LM to adjust final weights. LM has advantages of having quick speed of convergence and training stability to train the weights and biases of each layer. The advantage of this combination is that the GA leads to a near-optimal solution while the LM algorithm can quickly approach the optimum. Using gender, education as features in the BPANN did not have any effect on the predictive power of the models. Therefore, they were excluded from the analysis.

After all LOOCV rounds were completed, we could average over-all LOOCV and get the average accuracy of the prediction. The prediction performance was quantitatively evaluated using several statistical criterions. First, Pearson correlation coefficient (r) was used to measure the strength of a relationship between chronological age and predicted brain age. The larger the correlation, the stronger the relationship between chronological age and predicted brain age. Second, mean absolute error (MAE) was used to measure the average magnitude of the residuals between chronological age and predicted brain age. Third, root mean square error (RMSE) was used to quantify the square root of the mean squared error between chronological and predicted brain age. RMSE gives a relatively high weight to large perdition errors. The greater variance between MAE and RMSE, the greater the difference in the individual errors from the sample. Fourth, mean absolute percentage error (MAPE) was used to measure accuracy in generic percentage terms of chronological age. This has made MAPE very easy to interpret and reflect the accuracy of the model. The error criterions are given as follows:
                           
                              (5)
                              
                                 
                                    r
                                    =
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             (
                                             
                                                p
                                                i
                                             
                                             −
                                             
                                                p
                                                ¯
                                             
                                             )
                                             (
                                             
                                                c
                                                i
                                             
                                             −
                                             
                                                c
                                                ¯
                                             
                                             )
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            p
                                                            i
                                                         
                                                         −
                                                         
                                                            p
                                                            ¯
                                                         
                                                         )
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            c
                                                            i
                                                         
                                                         −
                                                         
                                                            c
                                                            ¯
                                                         
                                                         )
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    M
                                    A
                                    E
                                    =
                                    
                                       1
                                       n
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       n
                                    
                                    
                                       
                                          
                                             
                                                p
                                                i
                                             
                                             −
                                             
                                                c
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    R
                                    M
                                    S
                                    E
                                    =
                                    
                                       
                                          
                                             1
                                             n
                                          
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             
                                                
                                                   (
                                                   
                                                      p
                                                      i
                                                   
                                                   −
                                                   
                                                      c
                                                      i
                                                   
                                                   )
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    M
                                    A
                                    P
                                    E
                                    =
                                    
                                       1
                                       n
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       n
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                            i
                                                         
                                                         −
                                                         
                                                            c
                                                            i
                                                         
                                                      
                                                      
                                                         
                                                            c
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where n is the number of subjects in the data set, ‘c’ is the chronological age and ‘p’ is the predicted brain age.

@&#RESULTS@&#

The whole imaging pipeline was conducted on a machine with Intel core i7-3770 CPU and 8GB memory. The operating system was Linux Ubuntu 10.04 kernel. The average computing time for each subject was 41min (31–57min) and the whole procedure with full dataset took around 3 days. Regarding the computational cost of the whole procedure, the running times associated with the preprocessing and network construction took up around 98% of computing time.

From Fig. 5
                     , we could find that when the number of neurons in the hidden layer is seven, the BPANN with LM optimization gave the best average MAE. Therefore, the number of neurons in the hidden layer is set to seven.

All three learning algorithms (LM algorithm, GA algorithm, and hybrid GA and LM algorithm) have been tested for 10 trials, and the performance results are presented in Table 3
                     . BPANN with LM shows higher variations on statistical criterions, which implies that this method has intrinsic vulnerable weakness in local minima. BPANN search process with GA is unlikely to be entangled with the local optimum solution, but it has slow convergence. The hybrid GA and LM algorithm gives us the best result with reasonable computing time.

The chronological age versus predicted brain age from hybrid method (the best of the ten trials) are plotted in Fig. 6
                     . The brain age of healthy subjects was accurately estimated from their topological properties, with an overall correlation of r
                     =0.80. The predicted brain age and chronological age showed good agreement, with an MAE of just 4.29 years and RMSE of just 5.09 years. Evaluation statistics revealed good performance with the model with a small relative error of 7.34% (MAPE). The results did not depend on gender in terms of MAE (4.25 years for male, 4.33years for female subjects) or correlation (r
                     =0.80 for both genders). Again, there was no correlation between estimation accuracy and chronological age for either gender (male: r
                     =0.06; female: r
                     =−0.05).

@&#DISCUSSION@&#

Through employing pattern classification methods, neuroimaging has demonstrated its effectiveness in predicting brain age in several exploratory studies. Wang et al. [39] combined manifold learning and support vector machine methods to predict 137 subjects (aged 8–79 years) brain ages from resting-state functional connectivity MRI and obtained MAE of 7.5 years. Wang et al. [40] modeled the MRI-based brain structure morphometry (20 subjects, aged 51–86 years) using hidden Markov models. They introduced average normalized age-gap error (ANGE) which weighted MAE with the age gaps, and achieved ANGE of 2.41 years and MAE of 6.2 years for the whole data set. The cohort in this approach has similar age range as our research and can achieve reasonable prediction on small sample size. However, they have not validated the improvement of prediction performance with large sample size. Mwangiet et al. [41] predicted brain ageing with whole-brain fractional anisotropy (FA), mean diffusivity (MD), axial diffusivity (AD) and radial diffusivity (RD) using relevance vector regression. The model was used to predict 188 subjects (aged 4–85 years) and obtained MAE of 6.94 years. However, their method is more accurate in younger subjects (<30.5 years). Franke et al. [42] introduced a GM density prediction model for brain age using relevance vector machine method. The method was applied to 245 healthy subjects (aged 19–83 years) and obtained MAE of 4.98 years with 410 subjects (aged 20–86 years) as training dataset. The method showed excellent performance; the only limitation is that the size of training sample had a strong effect on model performance. Recently, Han et al. [43] used weighted sum of the connectivity matrix from DTI (201 subjects, aged 4–85 years) to predict brain age using correlation based regression. The method has no need of parameter tuning and can achieve fair performance (MAE of 9.49 years). Compared with those methods, our proposed method can obtain superior predication accuracy (MAE 4.29 years) with reasonable sample size (112 subjects), and the model is specially tuned for old subjects whose brain variability is much higher compared with younger subjects. There are no significant differences in prediction errors due to gender-related impact. This corroborates the recently reported results that there are no gender-related differences in cerebral WM during brain ageing [44]. The performance of the proposed method does not vary much with the reduced sample size (55 subjects in the training set, MAE 4.56 years) and different parcellation atlas (Harvard-Oxford cortical and sub-cortical structural atlas, MAE 4.37 years); thus suggesting the model is robust with small sample size and network node parcellation.

@&#CONCLUSION@&#

To our knowledge, this study is the first to predict individual subject's brain age using topological features of brain network. Those local topological properties contain sufficient information to predict individual subject's brain age accurately. This model is predicting 64.4% of the variance in age based on topological properties from DTI. The method has shown good performance for old cohort in comparison with other methods [39–43], with overall MAE of only 4.29 years and a correlation of r
                     =0.80 between the estimated brain age and the chronological age. The average prediction error of the subject group is −0.04 years, which indicates the model can accurately predict the brain age for healthy older group.

PCA can reduce the data dimensions under the premise of retaining the total data information, reduce the number of neurons in the input layer, and make the resulting BPANN more efficient and accurate. The prediction model based on BPANN shows a nonlinear relationship between the network properties and the brain age. A nonlinear optimization approach with the combination of GA and LM algorithm has been developed. It exhibits powerful search ability and fast convergence. The execution time is shorter than that by the GA alone due to the final-stage application of the LM algorithm.

Several limitations should be considered for this study. First, we noticed a slightly underestimation of brain age for subjects older than 70 years and a slightly overestimation of age for subjects younger than 55 years. Although transfer function of softmax yielded good outcomes, changing transfer function of the hidden layer may result in a better fit. Second, we acquired 51 non-collinear number of diffusion gradient directions to estimate the tensor orientation robustly, which increase the acquisition time. To reduce the acquisition time, an effective option is to increase slice thickness, which will introduce non-isotropic voxels. Non-isotropic voxels can negatively influence fiber tracking results. Although data in the analysis has been interpolated to isotropic voxels, further research is needed to study the influence of non-isotropic voxels on the performance of model. Third, while PCA allows us to handle inter-correlated network topological measurements simultaneously, the derived PCs may be difficult to interpret directly since they comprise a linear combination of complex topological properties as a new predictor. Machine learning method does not assume any specific model structure for the data but treats it as ‘black-box’, which lacks of interpretability. Tree based ensemble methods [45], which can provide interpretable results about diseased introduced accelerated brain ageing and influential topological factors, will be a promising future research direction for this research.

The authors declare that they have no conflict of interest.

@&#ACKNOWLEDGEMENTS@&#

This work was supported by grants from Natural Science Foundation of Beijing (7143171).

@&#REFERENCES@&#

