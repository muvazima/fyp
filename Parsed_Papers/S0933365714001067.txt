@&#MAIN-TITLE@&#Intra-axiom redundancies in SNOMED CT

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           We present a method to automatically detect intra-axiom redundancies.


                        
                        
                           
                           In SNOMED CT, intra-axiom redundancies are continuously introduced and removed.


                        
                        
                           
                           In SNOMED CT, a consistent proportion of about 12 overlooked redundancies may result in suboptimal maintenance.


                        
                        
                           
                           Redundancy detection and elimination should be part of terminology maintenance.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Automated auditing method

Intra-axiom redundancies

OWL 2 EL

Clinical terminology

SNOMED CT

@&#ABSTRACT@&#


               
               
                  Objective
                  Intra-axiom redundancies are elements of concept definitions that are redundant as they are entailed by other elements of the concept definition. While such redundancies are harmless from a logical point of view, they make concept definitions hard to maintain, and they might lead to content-related problems when concepts evolve. The objective of this study is to develop a fully automated method to detect intra-axiom redundancies in OWL 2 EL and apply it to SNOMED Clinical Terms (SNOMED CT).
               
               
                  Materials and methods
                  We developed a software program in which we implemented, adapted and extended readily existing rules for redundancy elimination. With this, we analysed occurence of redundancy in 11 releases of SNOMED CT (January 2009 to January 2014). We used the ELK reasoner to classify SNOMED CT, and Pellet for explanation of equivalence. We analysed the completeness and soundness of the results by an in-depth examination of the identified redundant elements in the July 2012 release of SNOMED CT. To determine if concepts with redundant elements lead to maintenance issues, we analysed a small sample of solved redundancies.
               
               
                  Results
                  Analyses showed that the amount of redundantly defined concepts in SNOMED CT is consistently around 35,000. In the July 2012 version of SNOMED CT, 35,010 (12%) of the 296,433 concepts contained redundant elements in their definitions. The results of applying our method are sound and complete with respect to our evaluation. Analysis of solved redundancies suggests that redundancies in concept definitions lead to inadequate maintenance of SNOMED CT.
               
               
                  Conclusions
                  Our analysis revealed that redundant elements are continuously introduced and removed, and that redundant elements may be overlooked when concept definitions are corrected. Applying our redundancy detection method to remove intra-axiom redundancies from the stated form of SNOMED CT and to point knowledge modellers to newly introduced redundancies can support creating and maintaining a redundancy-free version of SNOMED CT.
               
            

@&#INTRODUCTION@&#

SNOMED Clinical Terms (SNOMED CT) allows for meaning-based recording and retrieval of clinical information, which thereby becomes (re)usable. One of the advantages of SNOMED CT is its large size and coverage, which on the other hand makes defining new and maintaining existing concepts a challenging task.

Spackman [1] indicated back in 2001 that concept modellers have been uncertain about which elements are inherited from supertypes and therefore do not have to be added explicitly to a concept definition. Such intra-axiom redundancies, i.e. elements that are already entailed by other elements of the concept definition, are harmless from a logical point of view. However, they impede the maintainability of a terminology [2,3], as they misleadingly suggest that new, meaningful information has been added to a concept.

Moreover, redundant elements might lead to content-related problems when concepts evolve. For example, the rolegroup in the subconcept Thyroid uptake with thyroid stimulation was redundant in the July 2012 version of SNOMED CT, as it repeated a rolegroup already contained in the definition of the superconcept Non-imaging thyroid uptake test, see Example 1.1. In the subsequent version of SNOMED CT, the method Radionuclide imaging
                      was removed from the rolegroup in the superconcept, which makes sense for a concept with the name 
                        Non-imaging thyroid uptake test. However, the method was not removed from the rolegroup in the subconcept, as shown in Example 1.2, which is apparently incorrect. In this paper, we inventory redundant elements in SNOMED CT concept definitions.


                     
                        Example 1.1
                        Two concept definitions in the July 2012 version of SNOMED CT. The definition of Thyroid uptake with thyroid stimulation contains a redundant element, the rolegroup (RG).


                           
                              
                           
                        


                     
                        Example 1.2
                        Definitions of the concepts from Example 1.1 in the January 2013 version of SNOMED CT. The definition of Non-imaging thyroid uptake test has been corrected, but the previously redundant rolegroup is left unchanged.


                           
                              
                           
                        

@&#BACKGROUND@&#

SNOMED CT is based on the lightweight Description Logic EL
                        + 
                        [4]. Its concepts are defined by conjunctions of other concepts as well as role-value pairs that are represented as exists restrictions (∃). These exists restrictions can be either ungrouped or grouped in so-called rolegroups “to add clarity to concept definitions. A rolegroup combines an attribute-value pair with one or more other attribute-value pairs. Rolegroups originated to add clarity to Clinical finding concepts which require multiple Associated morphology attributes and multiple Finding site attributes and to Procedure concepts which require multiple Method attributes and multiple Procedure site attributes.” [5]. For an in-depth analysis of rolegroups, see [6]. Rolegroups are formally represented as an existential restriction on a role named Rolegroup (RG).

Concepts can be either primitive, i.e. specified by necessary conditions only (denoted by the subsumption operator ⊑) or fully defined, i.e. specified by both necessary and sufficient conditions (denoted by the equivalence operator ≡). Example  2.1 presents a concept which is fully defined by the conjunction of one concept and two rolegroups.


                        
                           Example 2.1
                           Fully defined concept definition of Brain stem contusion with open intracranial wound. Rolegroups are used to distinguish this concept from “intracranial contusion with open wound of brain stem”.


                              
                                 
                              
                           

For our evaluation, we distinguish trivially primitive concepts, that are primitive and subsumed by one concept only, and non-trivially primitive concepts, that are primitive and described by the conjunction of one or more concepts and exists restrictions. With regard to Example 2.2, we refer to the concept Brain tissue structure as trivially primitive, and to Structure of lobe of brain as non-trivially primitive.


                        
                           Example 2.2
                           Two primitive concept definitions, Brain tissue structure, which is trivially primitive, and Structure of lobe of brain, which is non-trivially primitive.


                              
                                 
                              
                           

An element that is part of a concept definition, i.e. a concept or an existential restriction, is redundant if it has been stated explicitly even though it is already entailed by another element of the concept definition, i.e., by superconcepts, other existential restrictions, or a combination thereof. Therefore, we define an element to be redundant if it is more general than or equivalent to an element that is contained in the definition of the same concept or a stated superconcept. Redundant elements can be eliminated without affecting the ontology's logical closure. Even more, elimination of redundant elements only changes the syntax of concept definitions, but does not influence their semantics. For example, the concept Brain part in the definition of the concept Structure of lobe of brain in Example 2.2 is redundant as it subsumes the concept Brain tissue structure.

We employed all 11 versions of SNOMED CT that were convertible to OWL, i.e. the January 2009 version to the January 2014 version. We converted these versions with the Perl script that is provided with each release of SNOMED CT. This script makes use of two tables: concepts and stated relationships. The latter faithfully represents the information as it was specified by modellers, and has been released since 2009.

We relied on the high-performance reasoner ELK [7] to classify SNOMED CT, and to check for subsumption and equivalence relationships between concepts and roles, while Pellet [8] was used in our evaluation to explain equivalence relationships that were hard to reproduce manually. We relied on the OWL API [9] to carry out all experiments.

We exploit the relatively simple structure of SNOMED CT concept definitions to detect intra-axiom redundancies. To this end, we adapted and extended the rules 1 to 3 of redundancy elimination for concept definitions that contain rolegroups as defined by Spackman et al. [10] (and adopted their original numbering). The rules are based on Definition 3.1.


                        
                           Definition 3.1
                           
                              More general or equivalent exists restriction. An exists restriction is more general than or equivalent to another exists restriction whenever both its role and its value concept subsume or are equivalent to the respective elements in the other exists restriction.


                              
                                 
                                    
                                       ∃
                                       
                                          R
                                          .
                                          C
                                       
                                          
                                       ⊒
                                          
                                       ∃
                                       
                                          S
                                          .
                                          D
                                       
                                          
                                       ⇔
                                          
                                       
                                          (
                                          R
                                       
                                          
                                       ⊒
                                       
                                          S
                                          )
                                          and
                                          (
                                          C
                                       
                                       ⊒
                                       
                                          D
                                          )
                                       
                                    
                                 
                              
                           

In SNOMED CT, all concept definitions are merely conjunctions of ungrouped or grouped exists restrictions and superconcepts. Consequently, the rules define for each of these elements whether they are redundant:
                           
                              1
                              An ungrouped exists restriction is redundant when it is more general than or equivalent to an ungrouped exists restriction within the definition of the same concept or a superconcept.

(∃R.C ⊓∃S.D ⊓∃T.E) ≡ (∃S.D ⊓∃T.E) ⇔∃R.C ⊒∃S.D
                              

A rolegroup is redundant when all its exists restrictions are more general than or equivalent to those contained in another rolegroup in the definition of the same concept or a superconcept.


                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      (
                                                      RG
                                                      (
                                                   
                                                   ∃
                                                   
                                                      R
                                                      1
                                                   
                                                   .
                                                   
                                                      C
                                                      1
                                                   
                                                   ⊓
                                                   …
                                                   ⊓
                                                   ∃
                                                   
                                                      R
                                                      n
                                                   
                                                   .
                                                   
                                                      C
                                                      n
                                                   
                                                   )
                                                   ⊓
                                                   RG
                                                   (
                                                   ∃
                                                   
                                                      S
                                                      1
                                                   
                                                   .
                                                   
                                                      D
                                                      1
                                                   
                                                   ⊓
                                                   …
                                                   ⊓
                                                   ∃
                                                   
                                                      S
                                                      m
                                                   
                                                   .
                                                   
                                                      D
                                                      m
                                                   
                                                   )
                                                   )
                                                   ≡
                                                   RG
                                                   (
                                                   ∃
                                                   
                                                      S
                                                      1
                                                   
                                                   .
                                                   
                                                      D
                                                      1
                                                   
                                                   ⊓
                                                   …
                                                   ⊓
                                                   ∃
                                                   
                                                      S
                                                      m
                                                   
                                                   .
                                                   
                                                      D
                                                      m
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   ⇔
                                                   ∀
                                                   i
                                                   =
                                                   1
                                                   ,
                                                   …
                                                   ,
                                                   n
                                                   ∃
                                                   j
                                                   =
                                                   1
                                                   ,
                                                   …
                                                   ,
                                                   m
                                                   |
                                                   ∃
                                                   
                                                      R
                                                      i
                                                   
                                                   .
                                                   
                                                      C
                                                      i
                                                   
                                                   ⊒
                                                   ∃
                                                   
                                                      S
                                                      j
                                                   
                                                   .
                                                   
                                                      D
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

An exists restriction is redundant within a rolegroup when it is more general than or equivalent to another exists restriction in the same rolegroup.


                                 RG(∃R.C ⊓∃S.D ⊓∃T.E) ≡ RG(∃S.D ⊓∃T.E) ⇔∃R.C ⊒∃S.D
                              

A concept is redundant when it is more general than or equivalent to one of the other concepts in the definition of the same concept or a superconcept.


                                 (C ⊓ D) ≡ D ⇔ C ⊒ D
                              

Note that rule 3 is an exception with regard to our redundancy definition, as it does not concern an element of a concept definition, but an element within an element. To test whether a concept is defined redundantly, these four rules are applied to a concept and all its stated superconcepts. As the rules are independent from each other, the order of their execution should not influence the obtained results.

To evaluate the results obtained by the application of the four rules of redundancy detection, we assessed the completeness and soundness of its output. In absence of a gold standard, we measured completeness by matching our findings to definitions that are likely to be redundant according to Cornet's and Abu-Hanna's method [11], and soundness by checking whether the logical closure is unchanged after classifying a version of the ontology from which all redundant elements have been removed.

Cornet's and Abu-Hanna's method [11] detects concepts with equivalent definitions in terminological systems represented in a description logic, to address the problems of redundancy and underspecification. Concepts that become equivalent to any superconcept when applying this method are likely to be defined redundantly [12]. Let us regard Example 3.1, which presents a sample group of equivalent concepts that can be detected by applying this method.


                           
                              Example 3.1
                              Group of concepts with equivalent concept definitions.


                                 
                                    
                                 
                              

Here, we can make two interesting observations. First, we see three concepts with definitions that obviously become equivalent when making these concepts fully defined. Second, the three concepts become equivalent to their superconcept Finding of volume of heart sounds, and thus, they are likely to be defined redundantly. And indeed, four levels up the concept hierarchy, we encounter their common superconcept presented in Example 3.2, which already contains a rolegroup that defines the Finding site to be the Heart structure.


                           
                              Example 3.2
                              Explanation for redundancy of concept definitions in Example 3.1.


                                 
                                    
                                 
                              

We evaluated the results obtained by the application of the four rules of redundancy detection by checking whether the concepts that are likely to be redundant according to Cornet and Abu-Hanna are indeed contained in the identified set of redundant concepts. In order to detect redundant definitions, we applied the approach proposed by Cornet and Abu-Hanna as follows:
                              
                                 1
                                 Replace each non-trivially primitive concept by a fully defined concept with the same definition.

Classify the ontology.

For each concept in the ontology, retrieve equivalent concepts from a reasoner.

Identify concepts that have become equivalent to any stated superconcept, as those are likely to be defined redundantly.

Identify and exclude indirect redundancies that emerge due to concepts being subsumed by the conjunction of concepts with equivalent definitions such as in Example 3.3 and wrongly identified redundancies due to the propagation of equivalence such as in Example 3.4.
                                       2
                                    
                                    
                                       2
                                       These cases could be prevented by applying the method only on one superconcept - subconcept pair at a time instead of the entire SNOMED CT. We did not apply this method because it is not feasible even with very fast classification.
                                    
                                 


                           
                              Example 3.3
                              Concepts without intra-axiom redundancy: Because Midwifery personnel and Professional midwife have the same definitions, they become equivalent when applying Cornet's and Abu-Hanna's method. And because Auxiliary midwife is being subsumed by the two of them, it also becomes equivalent.


                                 
                                    
                                 
                              

Cornet's and Abu-Hanna's method does not necessarily retrieve all redundant concepts. For example, a concept can refine its stated superconcept and additionally contain redundant elements. Likewise, redundant elements in fully defined concept definitions are not detected by Cornet's and Abu-Hanna's method. Therefore, the evaluation of the results of the four rules of redundancy detection can only be partial.


                           
                              Example 3.4
                              Example for wrongly identified redundancy. The concepts Pancreatic function outside reference range and Measurement finding outside reference range would be equivalent if all involved concepts were fully defined.


                                 
                                    
                                 
                              

Deleting redundant parts of concept definitions should not affect the logical closure, and therefore a change in the concept hierarchy would indicate the removal of a non-redundant part of a concept definition. Thus, we deleted all identified intra-axiom redundancies and checked whether the computed concept hierarchy obtained from classifying the manipulated version is the same as the one obtained from classifying the original version by bi-directional comparison of both versions to the official SNOMED CT distribution.

We generated sets of concepts with redundant elements for each of the SNOMED CT releases since January 2009. To determine changes, we compared each release with its successor. Four types of changes were distinguished: new concepts with redundant elements, existing concepts with new redundant elements, existing concepts with removed (solved) redundant elements, and concepts with redundant elements which were inactivated.

To assess whether redundancies cause maintenance issues, we took a small sample of concepts with redundant elements. For each of the changes between versions of SNOMED CT, we randomly selected two concepts for which redundancies were solved. Hence, a total of 20 concepts were manually reviewed to assess whether the changes made to the concept definitions were adequate.

@&#RESULTS@&#

Applying the four rules of redundancy detection on the July 2012 version of SNOMED CT, 35,010 (12%) of the 296,433 concepts were identified to contain redundant elements in their definitions. Table 1
                         gives an overview of the results, only regarding the first explanation for these redundancies (the rules were applied in the same order as they are presented in this paper). 11,858 of these concepts are fully defined, and 23,152 non-trivially primitive.


                        
                           Example 4.1
                           Parenteral form thymoxamine.


                              
                                 
                              
                           


                        
                           Example 4.2
                           Closed skull fracture with intracranial injury.


                              
                                 
                              
                           


                        Fig. 1
                         shows the SNOMED CT categories that the concepts with redundant elements belong to. Most concepts belong to the categories finding, procedure and product. We found that 18% of all concepts in the category finding, 16% of all concepts in the category procedure and 41% of all concepts in the category product contained redundant elements. In all other categories, the percentage of concepts with redundant elements was less than 3%.


                        Fig. 2
                         depicts the distances between redundant concepts and the concepts containing the explanation for the redundancy. A distance of 0 is interesting as it makes a concept redundant with regard to its own definition. But also long distances are interesting: an element is introduced, not repeated for some concepts down the hierarchy, but then it is. The concept Measurement of Human T-lymphotropic virus 1 recombinant glycoprotein 21 antibody and Human T-lymphotropic virus 2 recombinant glycoprotein 21 antibody is one of the concepts with the longest distance to its explanation (9 levels up in the hierarchy).

An exhaustive search for all redundant elements and all explanations resulted in 65,336 explanations: 13,808 for rule 1, 50,680 for rule 2, 6 for rule 3 and 842 for rule 4. The maximum number of explanations was 16 for the concept Late congenital syphilitic meningitis. The concept with the most (6) redundant elements was Diphtheria
                        +
                        tetanus
                        +
                        pertussis
                        +
                        poliomyelitis
                        +
                        recombinant hepatitis B virus
                        +
                        recombinant haemophilus influenzae type B vaccine.

Applying Cornet's and Abu-Hanna's method, 45,975 concept definitions have been identified for which at least one other concept with a logically equivalent definition exists. Of these, 12,823 definitions of non-trivially primitive concepts are equivalent to the definition of at least one of their stated superconcepts.

12,094 of these redundancies have been confirmed to be redundant by our method to detect intra-axiom redundancies. 698 out of the 729 non-confirmed redundancies were subsumed by the conjunction of concepts, like in Example 3.3. For the remaining 31 non-confirmed redundancies, we successfully generated explanations with Pellet based on the manipulated version of SNOMED CT. A manual revision confirmed that all explanations contained further axioms that have been re-defined from being primitive to fully defined, like the explanation given in Example 3.4. Therefore, the results of our method are complete with regard to Cornet's and Abu-Hanna's method.

We generated the logical closure of both the original and the manipulated OWL versions of SNOMED CT, and compared the computed class hierarchies to the one contained in the official distribution. The OWL versions and the database table contained exactly the same set of 438,554 subclass axioms and “is-a” relations, respectively.


                        Fig. 3
                         shows the development of concepts with redundant elements over time. For each version, the plot shows the concepts with redundant elements that have not changed since the previous version (stable), as well as concepts with solved or new redundancies.

We found that 24% (1325/5589) of all new concepts with redundant elements have been newly added, and that 26% (773/3014) of the concepts with solved redundant elements are due to inactivated concepts. 14% of the concepts with solved redundant elements remained unchanged, and thus have been solved due to a change in a superconcept.

The analysis of our random sample showed that at least two of these (i.e., 10%) were changed inadequately. For example, in the July 2012 version the concept Drug-induced impotence redundantly defined the finding site, Erectile structure of penis, which was already defined in the ancestor Male erectile disorder. In the January 2013 release, this finding site was no longer part of the definition of Male erectile disorder (which makes sense), but it was still part of the definition of Drug-induced impotence, which is inconsistent.

Campbell et al. [13] proposed a semantics-based conflict identification method for the distributed development of logic-based terminologies. Conflicts that can be detected are multiply-defined term conflicts and non-unique definition conflicts. Multiply-defined terms refer to the same term, but do not have the same definitions. They can be sub-classified into semantically-conflicting definitions and semantically equivalent definitions. When the definitions are semantically equivalent, it is possible to automatically adopt the simplest or the most comprehensive definition. Non-unique definitions are non-synonymous terms that received identical definitions by different editors.

Other (automated) auditing methods to ensure the quality aspect non-redundancy [14] focused mainly on the detection of equivalent concepts. Cimino has developed a method to identify multiple synonymous concepts and applied it to the 2001 UMLS Metathesaurus [15]. Grimm and Wissmann [3] provide methods to compute non-redundant ontologies, and Entendre [16] makes users aware of redundancies.

The IHTSDO
                        3
                     
                     
                        3
                        
                           http://www.ihtsdo.org (Accessed: 1 October 2014).
                      describes methods to convert concepts into normal forms, some of which imply the elimination of redundancies, and Peng et al. [17] have proposed a method to identify redundant classifications, i.e. unnecessary, simultaneous assignments to sub- and superconcepts. The Ecco tool [18] facilitates the analysis of ontology differences by applying methods to syntactically or semantically detect effectual changes as well as ineffectual changes such as adding or deleting intra-axiom redundancies.

An interesting direction of future work would be to generalise our method. In principle, our definition of a redundant element could be operationalised directly by checking whether an element is more general than or equivalent to an element that is contained in the definition of the same concept or a stated superconcept.

@&#DISCUSSION AND CONCLUSIONS@&#

Our results show that 35,010 (12%) of all 296,433 SNOMED CT concepts of the July 2012 version were defined redundantly. These redundancies unnecessarily impede the work of concept modellers, and ultimately the quality of a terminology. Redundant elements in concept definitions are introduced and solved in comparable amounts in all versions of SNOMED CT between January 2009 and January 2014. On average, about three quarters of the introduced redundancies are caused by changes in definitions of existing concepts, rather than by creating new concepts. This indicates that redundancy is easily overlooked and hard to detect. Our own experience confirms that manual search for the causes of redundancies can be a tedious task. Therefore, we suggest to remove them from the stated relationships. To reach this goal, the four rules of redundancy detection would have to be applied once to SNOMED CT in its entirety.
                        4
                     
                     
                        4
                        It should be noted that applying the four rules of redundancy detection to the entire SNOMED CT is computationally feasible but not in an interactive environment (about 6h on a laptop equipped with a 2.8GHz Intel Core 2 Duo processor and 8 GB of physical memory). However, analysing only one concept is sufficiently fast to be executed as a background process.
                      Further redundancies should be avoided by pointing concept modellers to newly introduced redundancies in the definitions of the concepts they are currently working on, and explaining why these elements are redundant. As shown in Fig. 2, redundancy is generally caused by nearby superconcepts, so that the explanations will most probably be intuitive. For this task, the four rules of redundancy detection could be applied as a background process of terminology editing tools to the concepts that are currently being edited. In order to support these goals, we make both our tools and our results freely available.
                        5
                     
                     
                        5
                        
                           https://github.com/kathrinrin/redundancies (Accessed: 1 October 2014).
                     
                  

@&#REFERENCES@&#

