@&#MAIN-TITLE@&#Piecewise-planar reconstruction using two views

@&#HIGHLIGHTS@&#


               
                  
                     
                        
                           
                           A piecewise planar reconstruction pipeline is proposed.


                        
                        
                           
                           Line cuts are detected based on signal symmetry analysis.


                        
                        
                           
                           SymStereo and PEARL are combined for carrying the 3D reconstruction and plane fitting simultaneously.


                        
                        
                           
                           Experiments show significant improvements over state-of-the-art methods.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Piecewise-planar reconstruction

SymStereo

Stereo-rangefinding

Semi-dense reconstruction

@&#ABSTRACT@&#


               
               
                  The article describes a reconstruction pipeline that generates piecewise-planar models of man-made environments using two calibrated views. The 3D space is sampled by a set of virtual cut planes that intersect the baseline of the stereo rig and implicitly define possible pixel correspondences across views. The likelihood of these correspondences being true matches is measured using signal symmetry analysis [1], which enables to obtain profile contours of the 3D scene that become lines whenever the virtual cut planes intersect planar surfaces. The detection and estimation of these lines cuts is formulated as a global optimization problem over the symmetry matching cost, and pairs of reconstructed lines are used to generate plane hypotheses that serve as input to PEARL clustering [2]. The PEARL algorithm alternates between a discrete optimization step, which merges planar surface hypotheses and discards detections with poor support, and a continuous optimization step, which refines the plane poses taking into account surface slant. The pipeline outputs an accurate semi-dense Piecewise-Planar Reconstruction of the 3D scene. In addition, the input images can be segmented into piecewise-planar regions using a standard labeling formulation for assigning pixels to plane detections. Extensive experiments with both indoor and outdoor stereo pairs show significant improvements over state-of-the-art methods with respect to accuracy and robustness.
               
            

@&#INTRODUCTION@&#

Stereo cameras are becoming increasingly popular because of the recent advent of 3D visualization and display. A few years ago they were considered special purpose devices that could only be found in research laboratories and high-end equipments, but nowadays they are a consumer electronics product being available either as standalone hand-held cameras (e.g. Fujifilm Finepix 3D and Sony Bloggie 3D), or integrated into smart-phones (e.g. HTC Evo 3D). Our work is motivated by this proliferation of stereo cameras that is expected to create an urge for robust algorithms able to render complete, photo-realistic 3D models in an automatic manner.

Stereo reconstruction is a classical problem in computer and robot vision that deserved the attention of thousands of authors [3,4]. Despite the many advances in the field, situations of poor texture, variable illumination, severe surface slant or occlusion are still challenging for most stereo matching methods, making it difficult to find a tuning that provides good results under a broad variety of acquisition circumstances [5]. Since man-made environments are dominated by planar surfaces, several authors suggested to overcome the above mentioned difficulties by using the planarity assumption as a prior for stereo reconstruction [6-10]. These approaches have the advantage of providing piecewise-planar 3D models of the scene that are perceptually pleasing and geometrically simple, and, thus, their rendering, storage and transmission is computationally less complex. This article proposes a pipeline for two-view Piecewise-Planar Reconstruction (PPR) understood as the detection and reconstruction of dominant planar surfaces in the scene.
                        1
                     
                     
                        1
                        We mean by PPR something that is different from approximating surfaces by small planes, as typically done in several dense stereo methods (e.g. [11,12])
                     
                  

PPR is in a large extent a chicken-and-egg problem. If there is accurate 3D evidence about the scene, such as points, lines, vanishing directions, etc, then the problem of detecting, segmenting, and estimating the pose of dominant planes can be potentially solved using standard model fitting techniques [2,13]. On the other hand, if there is a prior knowledge about dominant planar surfaces in the scene, then the matching process can be constrained to improve the accuracy of the final 3D reconstruction, e.g. the known plane orientations can be used to guide the stereo aggregation [11]. Existing methods for PPR typically comprise three steps that are executed sequentially:


                     
                        
                           1.
                           
                              3D reconstruction: The objective is to collect 3D evidence about the scene from multiple views. This evidence can either be obtained from sparse stereo that matches a sparse set of features across views (e.g. [8,9]), or from dense stereo that performs dense data association between frames by assigning to each pixel a disparity value (e.g. [10]).


                              Plane hypotheses generation: Given the 3D data, the objective is to detect and estimate the pose of planar surfaces using some sort of multi-model fitting approach.


                              Plane labeling: The goal is to assign to each pixel one of the plane hypotheses generated in the previous step. This is usually done using a Markov Random Field (MRF) formulation with photo-consistency being used as data term.

While most methods were originally designed to receive multiple views [6,7,8,9,10,14], we propose a pipeline that uses only two views and makes no assumptions about the scene other than the fact of being dominated by planar surfaces. The novelty is mainly in the steps of 3D Reconstruction and Plane Hypothesis Generation, and the contributions can be summarized as follows:
                        
                           •
                           
                              Reconstruction of line cuts using Stereo from Induced Symmetry (SymStereo): Establishing dense stereo correspondence is computationally expensive specially when dealing with high-resolution images. On the other hand, two-view sparse stereo tends to provide insufficient 3D data for establishing accurate plane hypotheses. Thus, we propose to carry a semi-dense reconstruction of the scene by independently recovering depth along a set of pre-defined virtual planes using SymStereo [1]. Since the intersections of the virtual scan planes with the planar surfaces in the scene are lines, we extract line segments from the profile cuts and use these line cuts to generate plane hypotheses.


                              Improving SymStereo accuracy in the case of surface slant: In a similar manner to what happens in conventional stereo, surface slant affects the depth estimation obtained from SymStereo. In this case, the line cuts are poorly reconstructed and the plane surface estimation is inaccurate. We study the problem of surface slant in the context of the SymStereo framework and devise a simple solution that enables the reconstruction of highly slanted planes.


                              Global plane fitting: Most methods for PPR treat stereo matching and plane detection in a sequential manner [6,14,7,8,9,10]. This is problematic because the accuracy of the plane hypotheses is inevitably limited by the accuracy of the initial 3D reconstruction that does not take into account the fact of the scene being dominated by planar surfaces. We carry the 3D reconstruction and the plane fitting in a simultaneous and integrated manner using the recent PEARL framework proposed in [2]. The algorithm alternates between a global discrete optimization step, which merges plane hypotheses and discards spurious detections, and a continuous optimization step over the symmetry energy, which refines the plane pose estimation taking into account surface slant. The output is a set of plane hypotheses and a semi-dense PPR of the 3D scene, where the reconstructed line cuts are labeled according to the plane detections.

@&#RELATED WORK@&#

Several works in PPR start by obtaining a sparse 3D reconstruction of the scene (e.g. point clouds and lines), then establish plane hypotheses by applying multi-model fitting to the reconstructed data, and finally use these hypotheses to guide the dense stereo process and/or perform a piecewise-planar segmentation of the input images. In Ref. [6], Werner and Zisserman rely in several cues and assumptions to find the dominant surface orientations and use plane-sweeping along the detected normal directions to reconstruct the scene. Bartoli [14] obtains an initial sparse point reconstruction from multiple views and applies a RANSAC-like algorithm for generating and scoring the plane hypotheses. In a similar manner, Pollefeys et al. [7] propose to detect planar surfaces in urban environments from sparse 3D point features and use the estimated normals for guiding plane-sweep stereo. Furukawa et al. [8] reconstruct 3D patches in textured image regions from multiple views using Ref. [15], and use the normals of these patches to establish plane hypotheses assuming a Manhattan-world model. These hypotheses are then used in a MRF formulation for pixel-wise plane labeling. In Ref. [9], Sinha et al. introduce a probabilistic framework for assigning plane hypotheses to pixels with the evidences of planar surfaces being provided by point cloud reconstruction, matching of line segments, and estimation of vanishing points. Gallup et al. [10] propose a stereo method capable of handling both planar and non-planar objects contained in the scene. A robust procedure based on RANSAC is used for fitting plane hypotheses to dense depth maps, followed by a MRF formulation for plane labeling of the input images.

These pipelines were originally designed to work with multiple images. Moreover, depth estimation and plane fitting are carried in a sequential and decoupled manner that, as discussed previously, has the drawback that errors in 3D evidence affect the accuracy of plane pose estimation, and the inferred planar surfaces are not used for refining the initial depth estimates.

An alternative strategy is to over-segment the stereo images based on color information and fit a 3D plane to each non-overlapping region. The number of planes to be considered is defined by the segmentation result, which acts as a smoothness prior during the global optimization. This segmentation information is either used as a hard minimization constraint [16,17,18] or as a soft constraint [19]. The main weakness of this type of strategy is the assumption that planar surfaces in the scene have different colors, which is often not the case in most man-made environments (e.g. walls, doors and windows).

There are a few approaches [20,21,22] that perform PPR by carrying stereo matching and 3D plane fitting iteratively. The strategy consists in alternating between segmenting the input images into non-overlapping regions and estimating the plane parameters for each region. However, and as stated by the authors of Ref. [21], these type of algorithms can become easily stuck in a local minimum whenever they face challenging surface structures e.g. surfaces with low and/or repetitive texture.


                        Section 2 reviews three background concepts that are used throughout the article, namely Stereo from Induced Symmetry [1], energy-based multi-model fitting using PEARL [2], and a global formulation for pixel-wise plane labeling. Section 3 provides an overview of the pipeline for PPR. Section 4 proposes an algorithm for reconstructing line cuts along a single virtual cut plane, while Section 5 shows how these line cuts can be refined in case there is prior slant information available. Then, we present in Section 6 an algorithm for semi-dense PPR that uses the line cuts for posing plane hypotheses and combines SymStereo and PEARL for the final label assignment. Finally, Section 7 reports experiments in PPR, where the accuracy of the plane estimation and pixel labeling is evaluated with respect to ground truth data, and the performance of our pipeline is compared with two different strategies.

We represent scalars in italic, e.g.s, vectors in bold characters, e.g.p, matrices in sans serif font, e.g.M, and image signals in typewriter font, e.g.I. Unless stated otherwise, we use homogeneous coordinates for points and other geometric entities, e.g. a point with non-homogeneous image coordinates (p
                        1, p
                        2) is represented by p ∼ (p
                        1
                        p
                        2 1)
                           T
                        , with ∼ denoting equality up to scale.

@&#BACKGROUND@&#

This section briefly reviews background concepts that are used throughout the article, namely Stereo-Rangefinding (SRF) using SymStereo (Section 2.1), the energy-based multi-model fitting framework called PEARL (Section 2.2), and a global pixel-wise plane labeling formulation (Section 2.3).

The SymStereo framework [1] was proposed for matching pixels across stereo views using symmetry analysis instead of traditional photo-consistency. Let I and I′ be a pair of rectified stereo images and consider a virtual cut plane Π (see Fig. 1
                        ). The orientation of the virtual plane is arbitrary being the only requirement that it intersects the baseline of the stereo rig. Under such circumstances, the left and right back-projections become reflected one with respect to the other at the locations where the virtual plane intersects the scene. Thus, the sum of both back-projections gives rise to an image signal that is locally symmetric around the profile cut, while the subtraction results in a signal that is anti-symmetric. These symmetries are usually not strict symmetries due to perspective distortion, surface slant and occlusions, but can be used as cues to recover the profile cut where the virtual plane meets the scene.

Assuming that the world coordinate system is coincident with the reference frame of the left view, the virtual cut plane Π can be represented by the homogeneous vector 
                           
                              (1)
                              
                                 
                                    Π
                                 
                                 ∼
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      T
                                                   
                                                
                                             
                                             −
                                             h
                                          
                                       
                                    
                                    
                                       
                                          T
                                       
                                    
                                 
                                 ,
                              
                           
                        where n indicates the direction orthogonal to the plane 
                           
                              
                                 
                                    n
                                 
                                 ∼
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      n
                                                   
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                
                                                
                                                   3
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          T
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The homogenous coordinates of the intersection point O of the virtual cut plane with the baseline is given by [1]: 
                           
                              
                                 
                                    O
                                 
                                 ∼
                                 
                                    
                                       
                                          
                                             
                                                
                                                   h
                                                
                                                
                                                   
                                                      
                                                         
                                                            n
                                                         
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                             0
                                             
                                             0
                                             
                                             1
                                          
                                       
                                    
                                    
                                       
                                          T
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Using β to denote the ratio between O
                        1 and the baseline length b comes that the plane Π passes between the cameras iff the following condition holds 
                           
                              (2)
                              
                                 0
                                 <
                                 
                                    
                                       β
                                       =
                                       
                                          
                                             
                                                
                                                   O
                                                
                                                
                                                   1
                                                
                                             
                                          
                                          
                                             b
                                          
                                       
                                    
                                 
                                 <
                                 1
                                 .
                              
                           
                        
                     

For efficiency purposes, the images do not need to be explicitly back-projected onto the virtual plane Π, but instead the homography H induced by Π can be used to map points from the right view into the left view [1]: 
                           
                              (3)
                              
                                 
                                    H
                                 
                                 
                                 ∼
                                 
                                    
                                       
                                          
                                             
                                                1
                                                +
                                                
                                                   
                                                      b
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                   
                                                      h
                                                      −
                                                      b
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      b
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                   
                                                      h
                                                      −
                                                      b
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      b
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            3
                                                         
                                                      
                                                   
                                                   
                                                      h
                                                      −
                                                      b
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                1
                                             
                                             
                                                0
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                0
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Assuming that 
                           
                              
                                 I
                              
                              ^
                           
                         is the warping result of mapping I
                        ′ using H, then it comes from the mirroring effect described in Ref. [1] that I and 
                           
                              
                                 I
                              
                              ^
                           
                         are reflected around the image of the profile cut (see Fig. 1). Thus, the sum of I and 
                           
                              
                                 I
                              
                              ^
                           
                         yields an image signal I
                        
                           S
                         that is symmetric around the locus where the profile cut is projected. In a similar manner, the difference between I and 
                           
                              
                                 I
                              
                              ^
                           
                         gives rise to an image signal I
                        
                           A
                         that is anti-symmetric at the exact same location. SymStereo detects the image of the profile cut by jointly evaluating symmetry and anti-symmetry in I
                        
                           S
                         and I
                        
                           A
                        . This provides an implicit manner of recovering depth along the scan plane Π that is called Stereo-Rangefinding (SRF), in analogy to Laser-Rangefinding that provides depth readings along a scan plane. From [1] it comes that the logN matching cost is the top-performing metric for the purpose of SRF. This cost relies on local frequency analysis for locating symmetric structures by employing a bank of N log-Gabor wavelets (we set N
                        =10 in this article). The output of log10 is the joint energy E, where the image of the profile cut is highlighted (see Fig. 1).

Isack and Boykov argued in Ref. [2] that methods that greedily search for models with most inliers while ignoring the overall classification of data (e.g.Hough Transform or sequential RANSAC) are a flawed approach to multi-model fitting, and that formulating the fitting as an optimal labeling problem with a global energy function is preferable. In the follow-up of this conclusion, they described the PEARL algorithm that consists in three main steps:


                        
                           
                              1.
                              Propose an initial set of models (labels) ℒ0 from the observations.

Expand the label set for estimating its spatial support (inlier classification).

Re-estimate the inlier models by minimizing some error function.

Given the initial model set ℒ0, the multi-model fitting is cast as a global optimization where each model in ℒ0 is interpreted as a particular label f. Consider that 
                           d
                           ∈
                           D
                         is a data point and that f
                        
                           d
                         is a particular label in ℒ0 assigned to d. The objective is to compute the labeling 
                           
                              f
                           
                           =
                           {
                           
                           
                              
                                 
                                    f
                                 
                              
                              
                                 d
                              
                           
                           |
                           d
                           ∈
                           D
                           }
                         such that the following energy is minimized: 
                           
                              (4)
                              
                                 E
                                 (
                                 
                                    f
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   d
                                                   ∈
                                                   D
                                                
                                             
                                             
                                                
                                                   D
                                                
                                                
                                                   d
                                                
                                             
                                             (
                                             
                                             
                                                
                                                   f
                                                
                                                
                                                   d
                                                
                                             
                                             )
                                          
                                          ︸
                                       
                                    
                                    
                                       data term
                                    
                                 
                                 +
                                 
                                    
                                       λ
                                    
                                    
                                       S
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   d
                                                   ,
                                                   e
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                
                                                   V
                                                
                                                
                                                   d
                                                   ,
                                                   e
                                                
                                             
                                             (
                                             
                                             
                                                
                                                   f
                                                
                                                
                                                   d
                                                
                                             
                                             ,
                                             
                                                
                                                   f
                                                
                                                
                                                   e
                                                
                                             
                                             )
                                          
                                          ︸
                                       
                                    
                                    
                                       smoothness term
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             
                                                
                                                   λ
                                                
                                                
                                                   L
                                                
                                             
                                             ⋅
                                             |
                                             
                                                
                                                   F
                                                
                                                
                                                   f
                                                
                                             
                                             |
                                          
                                          ︸
                                       
                                    
                                    
                                       label term
                                    
                                 
                                 ,
                              
                           
                        where 
                           N
                         is the neighborhood system considered for d, D
                        
                           d
                        (f
                        
                           d
                        ) is some error that measures the likelihood of point d belonging to model f
                        
                           d
                        , and V
                        
                           d,e
                         is the spatial smoothness term that encourages piecewise smooth labeling by penalizing configurations f that assign to neighboring nodes d and e different labels. The label term is used for describing the data points using as few unique models as possible, with ℱ
                           f
                         being the subset of different models assigned to the nodes d by the labeling f (see Ref. [2] for further details). In order to handle outlier data points in 
                           D
                        , the outlier label f
                        
                           ∅
                         is added to ℒ0. Any point d to which is assigned the label f
                        
                           ∅
                         is considered an outlier, and has usually a constant likelihood measure D
                        
                           d
                        (f
                        
                           d
                        
                        =
                        f
                        
                           ∅
                        )=
                        τ. The energy of Eq. (4) is efficiently minimized using α-expansion [2].

The third step of PEARL consists in re-estimating the model labels f in ℒ0 given the non-empty set of inliers 
                           D
                           (
                           
                           f
                           )
                           =
                           {
                           d
                           ∈
                           D
                           |
                           
                           
                              
                                 f
                              
                              
                                 d
                              
                           
                           =
                           f
                           }
                        . Let m
                        
                           f
                         be the model associated to the label f. Each model m
                        
                           f
                         is refined by minimizing the error cost over its parameters: 
                           
                              
                                 
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          f
                                       
                                       
                                          *
                                       
                                    
                                    =
                                    
                                       
                                          min
                                       
                                       
                                          
                                             
                                                
                                                   m
                                                
                                             
                                             
                                                f
                                             
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          d
                                          ∈
                                          
                                             D
                                          
                                          (
                                          
                                          f
                                          )
                                       
                                    
                                    
                                       
                                          D
                                       
                                       
                                          d
                                       
                                    
                                    (
                                    
                                    f
                                    )
                                    .
                                 
                              
                           
                        
                     

The models with non-empty set in ℒ0 are replaced with the refined models 
                           
                              
                                 
                                    
                                       m
                                    
                                 
                                 
                                    f
                                 
                                 
                                    *
                                 
                              
                           
                        , and the labels with empty set are discarded. The new set of labels ℒ1 is then used in a new expand step, and we iterate between discrete labeling and plane refinement until the α-expansion optimization does not decrease the energy of Eq. (4).

Given a set of plane hypotheses in the scene, the objective is to assign one of these planes to each pixel of the input images. For this purpose, we use a standard MRF formulation that minimizes an energy involving only data and smoothness terms (the label term in Eq. (4) is not considered). The nodes 
                           d
                           ∈
                           D
                         are the image pixels, and the labels 
                           f
                           ∈
                           P
                         are the plane hypotheses. A 4×4 neighborhood 
                           
                              
                                 N
                              
                              
                                 4
                              
                           
                         is assumed for neighboring pixels d and e, and the data term is defined as 
                           
                              (5)
                              
                                 
                                    
                                       D
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 
                                 f
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                min
                                                (
                                                
                                                   
                                                      ρ
                                                   
                                                   
                                                      d
                                                   
                                                
                                                (
                                                
                                                f
                                                )
                                                ,
                                                
                                                   
                                                      ρ
                                                   
                                                   
                                                      max
                                                   
                                                
                                                )
                                                
                                                if
                                                
                                                f
                                                ∈
                                                P
                                             
                                          
                                          
                                             
                                                γ
                                                
                                                   
                                                      ρ
                                                   
                                                   
                                                      max
                                                   
                                                
                                                
                                                
                                                
                                                
                                                if
                                                
                                                f
                                                =
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      ∅
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where ρ
                        
                           d
                        (f) is the photo-consistency between the pixels in the two views put into correspondence by the plane associated to label f. For measuring the photo-consistency we use Zero-mean Normalized Cross-correlation, ρ
                        
                           max
                         is used for handling poorly matching surfaces and γ is a constant parameter. The smoothness term is defined as: 
                           
                              (6)
                              
                                 
                                    
                                       V
                                    
                                    
                                       d
                                       ,
                                       e
                                    
                                 
                                 (
                                 
                                 
                                    
                                       f
                                    
                                    
                                       d
                                    
                                 
                                 ,
                                 
                                    
                                       f
                                    
                                    
                                       e
                                    
                                 
                                 )
                                 =
                                 g
                                 ⋅
                                 
                                    
                                       
                                          
                                             
                                                0
                                                
                                                if
                                                
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      d
                                                   
                                                
                                                =
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      e
                                                   
                                                
                                             
                                          
                                          
                                             
                                                T
                                                
                                                if
                                                
                                                (
                                                
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      d
                                                   
                                                
                                                ∨
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      e
                                                   
                                                
                                                )
                                                =
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      ∅
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      D
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    
                                       
                                          D
                                       
                                       
                                          ′
                                       
                                    
                                    =
                                    min
                                    (
                                    D
                                    ,
                                    T
                                    )
                                    +
                                    t
                                 
                              
                           
                        and 
                           
                              
                                 
                                    g
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          ∇
                                          
                                             
                                                I
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          1
                                       
                                    
                                    .
                                 
                              
                           
                        
                        D is the 3D distance between neighboring points according to their plane labels f
                        
                           d
                         and f
                        
                           e
                        , respectively. The parameter t is used for preventing spurious transitions between planes, while T makes the cost robust to depth discontinuities. The measure 
                           
                              
                                 
                                    ∇
                                    I
                                    =
                                    |
                                    I
                                    (
                                    d
                                    )
                                    −
                                    I
                                    (
                                    e
                                    )
                                    |
                                    .
                                 
                              
                           
                        is the image gradient.

Our formulation is largely standard with the data and the smoothness terms being similar to the ones used in the graph-cut labeling of Gallup et al. [10]. The global assignment herein described will be used in Section 7 for obtaining a dense plane labeling from a semi-dense PPR.

This section provides an overview of our pipeline for PPR, each element is further described in more detail in the following sections. As depicted in Fig. 2
                     , the pipeline receives as input a rectified stereo pair and comprises four parts (the highlighted second and third steps are the main contributions of the paper):


                     
                        
                           1.
                           The use of SRF, briefly described in Section 2.1, along M virtual cut planes Π
                              
                                 i
                               for computing M joint energies E
                                 i
                              . Each E
                                 i
                               contains the matching cost of pairs of pixels that are reconstructed on a particular plane Π
                              
                                 i
                              .


                              Detection in each energy E
                                 
                                    i
                                  of line cuts
                              , which are lines likely to be the intersection between the virtual cut plane and planar surfaces in the scene (refer to Section 4). This is accomplished by first obtaining multiple hypotheses using a very inclusive Hough Transform, followed by PEARL optimization that aims at selecting and refining the position of the most likely line cuts.


                              Detection and estimation of 3D planes from line cuts (see Section 6). We start by establishing multiple planar hypotheses from pairwise combinations of line cuts. A PEARL step is then employed to select the most likely planes and refine their pose taking into account the way slant influences the measurement of the SymStereo energy E
                              
                                 i
                               (refer to Section 5).

Finally, the strongest plane hypotheses are used as input in a standard MRF labeling step that assigns the detected planes to image pixels (refer to Section 2.3). The explanation for doing this is that from the previous step we obtain a semi-dense PPR, and a dense 3D model is a much more pleasant way for showing the reconstruction results. The planes’ parameters are kept unchanged in this step.

First, it is important to refer that the main contributions of this paper are in the second and third steps of the pipeline (described in Sections 4, 5 and 6). The theory described in the first step was introduced in Ref. [1] and is briefly discussed in Section 2.1. The last step concerns a standard MRF that is used for dense plane labeling 2.3, and is only employed for showing the superiority of the obtained 3D reconstructions with respect to two competing approaches (the method SS proposed by Sinha et al. [9], and the method DS proposed by Gallup et al. [23], refer to Section 7). Both the second and third steps of the pipeline deal with multi-model fitting problems in the sense that they establish model hypotheses, line cuts and planes, respectively, from subsets of the input data. The objective is then to assign to each observation a particular model label such that the joint labeling minimizes some objective function. This is solved using the PEARL framework, described in Section 2.2, that alternates between discrete labeling and continuous model refinement. These multi-model fitting problems could have been solved using a standard Hough transform or sequential RANSAC as done in our previous work for PPR [24]. However, the recent developments (refer to Section 2.2) clearly show that a global approach such as PEARL provide superior results in multi-model fitting problems than greedy clustering techniques. The PEARL framework is important for the quality of the presented results, but the contributions of this paper are not limited to its application.

As described in Section 2.2, the PEARL algorithm consists in three main steps. In the first step, an initial set of model hypotheses is computed, then it involves a discrete labeling step and a continues optimization step. The energy used for the discrete labeling is shown in Eq. (4) and consists of a data cost and two regularizers, namely the smoothness and the label costs. The smoothness term is a standard regularizer in computer vision and encourages solutions that are spatially smooth. The insertion of the label cost is explained by the fact that the smoothness term prefers spatially coherent segments, but has no encouragement to combine non-adjacent segments and, thus, to avoid redundant labels in the final assignment. It is this label term that allows to use discrete labeling for purposes of clustering and multi-model fitting. Considering our pipeline depicted in Fig. 2, if we would for example skip the third step that involves the PEARL optimization, and directly feed multiple plane hypothesis from pairwise combinations of line cuts into the MRF in step 4, then we would end up with an over-segmented dense PPR and much less accurate plane detections. This occurs because the MRF formulation by itself is unable to change the input label space by either merging planes or refining their pose.

Regarding the continuous refinement of the PEARL algorithm (see Section 2.2), it is necessary because the initial set of model hypotheses is computed from a small set of random data points, and using a larger set of inlier points in an optimization step generally provides better solutions. While in Section 4 the continuous optimization is mostly trivial (regular Levenberg–Marquardt (LM) [25]), in Section 6 we use a new type of optimization that is explained in Section 5 and that complements the work in Ref. [1].

There are several algorithms that reconstruct lines in the scene by matching salient image edges across views [9]. In this section, we go one step further and show how to use SRF to reconstruct lines that are not distinguishable in the input images. Let Π be a virtual cut plane that intersects the planar surfaces in the scene into different lines, henceforth referred as line cuts (e.g. in Fig. 4 the cut plane Π meets the floor plane in the blue line cut). The 3D line cuts are projected onto the stereo views into line segments that, in general, cannot be perceived from the input images alone (no visible edges). However, and as discussed in this section, these segments can be reliably detected and estimated from the joint energy E (see Fig. 4).

The algorithm for detection and estimating line cuts from the energy images (refer to Fig. 3
                     ) needs to be such that: 
                        
                           •
                           there is at most one line cut detection per epipolar line because of the visibility constraint,

long and short lines must be equally well detected to enable the 3D reconstruction of both large and small planes (e.g. the vertical faces of the sidewalks in Fig. 19),

the accuracy in position must be high, otherwise none of the generated plane hypotheses will be close enough to the real 3D planes for step 3 of the pipeline presented in Section 3 to converge correctly.

As shown in Fig. 1, we use the SymStereo framework along a virtual cut plane Π and employ the log10 symmetry metric for computing the joint energy E. Each pixel in E provides the matching likelihood of a particular pair of pixels in the stereo views, being an indirect measurement of the occupancy probability in 3D along Π. Referring to Fig. 4
                        , the energy E is then used as input to a weighted Hough transform for extracting a set of line cut hypotheses ℒ0. This is accomplished by selecting the N
                        
                           H
                         local maxima in the Hough voting space. After obtaining ℒ0, we formulate the line cut detection as a global labeling problem in a PEARL framework where the objective is to assign to each epipolar line (image row) a line cut hypothesis in ℒ0. Following the notation of Section 2.2, the data points d of the graph are the epipolar lines, with the size of the set 
                           D
                         being equal to the number of image rows, and the goal is to assign a line segment label f to each epipolar line d. The data term is defined as 
                           
                              
                                 
                                    
                                       
                                          D
                                       
                                       
                                          d
                                       
                                    
                                    (
                                    
                                    f
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   min
                                                   (
                                                   1
                                                   −
                                                   
                                                      E
                                                   
                                                   (
                                                   d
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         f
                                                      
                                                   
                                                   )
                                                   ,
                                                   τ
                                                   )
                                                
                                                
                                                   if
                                                   
                                                   f
                                                   ≠
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         ∅
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                         α
                                                      
                                                      
                                                         ∅
                                                      
                                                   
                                                   τ
                                                
                                                
                                                   
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where E(r,c) is the joint energy value for row r and column c. The coordinate x
                        
                           f
                         corresponds to the intersection between the epipolar line d and the line segment l
                        
                           f
                         associated to label f. Remark that the truncation parameter τ is used for handling poorly matching surfaces e.g. containing low and/or repetitive textures, while the discard label f
                        
                           ∅
                         indicates that no satisfactory line cut hypothesis can be assigned to d. In this case, the virtual cut plane Π has high probability of not intersecting a planar surface along the epipolar plane associated to d. The smoothness term of neighboring nodes d and e is given by 
                           
                              
                                 
                                    
                                       
                                          V
                                       
                                       
                                          d
                                          e
                                       
                                    
                                    (
                                    
                                    
                                       
                                          f
                                       
                                       
                                          d
                                       
                                    
                                    ,
                                    
                                       
                                          f
                                       
                                       
                                          e
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   0
                                                   
                                                   
                                                   if
                                                   
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         d
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         e
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         ∅
                                                      
                                                   
                                                   
                                                   
                                                   
                                                   if
                                                   
                                                   (
                                                   
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         d
                                                      
                                                   
                                                   ∨
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         e
                                                      
                                                   
                                                   )
                                                   =
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         ∅
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         ∇
                                                         
                                                            
                                                               I
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         1
                                                      
                                                   
                                                   
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    ∇
                                    I
                                    =
                                    |
                                    I
                                    (
                                    d
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          
                                             
                                                f
                                             
                                             
                                                d
                                             
                                          
                                       
                                    
                                    )
                                    −
                                    I
                                    (
                                    e
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          
                                             
                                                f
                                             
                                             
                                                e
                                             
                                          
                                       
                                    
                                    )
                                    |
                                 
                              
                           
                        is the image gray-scale gradient. No penalization is assigned to neighboring image rows d and e receiving the same label, while in the case one node receives the label f
                        
                           ∅
                        , then a non-zero cost λ
                        
                           ∅
                         is added to f. The smoothness term V prefers label transitions at locations of larger image gradient (lower smoothness cost), which usually occurs at the boundaries of two different surfaces. We use a constant label term λ
                        
                           L
                         in Eq. (4) for favoring line cut assignments f with fewer labels.

Finally, and after computing an initial labeling solution f for nodes d, the line cuts l are refined by minimizing their parameters over the energies E via LM: 
                           
                              (7)
                              
                                 
                                    
                                       
                                          l
                                       
                                    
                                    
                                       f
                                    
                                    
                                       *
                                    
                                 
                                 =
                                 
                                    
                                       min
                                    
                                    
                                       
                                          
                                             
                                                l
                                             
                                          
                                          
                                             f
                                          
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       d
                                       ∈
                                       
                                          D
                                       
                                       (
                                       f
                                       )
                                    
                                 
                                 
                                    
                                       1
                                       −
                                       
                                          E
                                       
                                       (
                                       d
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             f
                                          
                                       
                                       )
                                    
                                 
                                 ,
                              
                           
                        where D(f) is a subset of image rows d to which the label f was assigned. Remark that at each solver iteration, the point x
                        
                           f
                         on d is recomputed according to the current line cut hypothesis l
                        
                           f
                        . The new set of line cuts 
                           
                              
                                 l
                              
                              
                                 f
                              
                              
                                 *
                              
                           
                         are then used in a new global line cut assignment (expand) step, and we iterate between discrete labeling and line cut refinement until the energy of Eq.(4) stops decreasing.

We performed experiments of our line cut detection approach
                           2
                        
                        
                           2
                           We used for all the experiments the same parameters: N
                              
                                 H
                              
                              =200, λ
                              
                                 S
                              
                              =1, τ
                              =0.8, α
                              
                                 ∅
                              
                              =0.7, λ
                              
                                 ∅
                              
                              =0.9 and λ
                              
                                 L
                              
                              =20, which were empirically selected without much effort.
                         on indoor scenes acquired using a Bumblebee stereo camera from PointGrey, which has a baseline of 24cm and image resolution of 1024×768 pixels, and compared it against two different strategies (refer to Fig. 5
                        ).

In the first example of Fig. 5, the proposed algorithm detected for each virtual scan plane two distinct line cuts: one corresponding to the intersection with the floor, and the other to the intersection with the wall. Comparing these results with the ones obtained using the approaches (b) and (c), we clearly identify the advantages of using a global optimization strategy such as PEARL. First, by formulating the problem as a epipolar line labeling, we implicitly handle the visibility constraint and only assign one detection per image row. Second, the smoothness term of Eq. (4) enforces spatial consistency such that much less fragmented detections are obtained, while the label term avoids redundant labels and only two different line cuts are computed for each cut plane. Note that both the approaches (b) and (c) have line cut estimations that are very close to each other. This could be avoided by increasing the suppression neighborhood of the hough peak selection, but this would involve that close planes are discarded (e.g. chair back and wall behind it in the last example). The label cost of PEARL takes care of this issue, and merges models that do not show well separated ridges in E
                        
                           i
                        . These facts are further evidenced in the next examples, where the combination of SymStereo and PEARL shows improved accuracy and consistency in line segment matching when compared to the naive approaches (b) and (c). Concerning the runtime, both methods b) and c) in Fig. 5 take about 7−9 s for processing 5 virtual cut planes, while the proposed approach using PEARL takes usually 20−25s (Matlab implementations). Eventually, we could have selected the lesser accurate methods b) or c) with the hope that the errors are corrected in the third step of the pipeline, which detects and estimates 3D planes from the line cuts. We tested it, but in many cases, the third step cannot improve the precision of the line cuts, and even in cases it is able to achieve it, the time economy in this second step is exceeded by the complexity of the third step that needs to deal with more line cut hypotheses and/or hypotheses with much less precision. Following this, we decided to do the best in both steps.

Besides some minor spurious detections, Fig. 5 shows some failures cases: one line cut segment is undetected in the second example (blue cut plane), one line cut in the last example (green cut plane), and two line cuts are computed from the intersection of the same virtual cut plane with the wall in the last example. This mainly occurs because the SymStereo energy E
                        
                           i
                         is unable to provide well defined energy ridges whenever the cut plane intersects the scene in low-textured regions and slanted surfaces. In these cases, and since there is a low confidence about the location of the image of the profile contour, the algorithm tends to assign the f
                        
                           ∅
                         label or separate the energy contributions. We will show in Section 6 that most of these difficulties are easily handled by our semi-dense PPR pipeline that estimates plane hypotheses from multiple virtual cut planes simultaneously.

Finally, Fig. 6
                         shows an example containing a non-planar object on the top of the floor plane. The algorithm can be either tuned to only detect the line cuts corresponding to the intersection with strict plane surfaces (example (a)), or to approximate the intersection with non-planar surfaces by an appropriate set of line cuts (example (b)). The different tunings are accomplished by manipulating the weighting factor α
                        
                           ∅
                         and the label cost λ
                        
                           L
                        . Using low values of α
                        
                           ∅
                         and high values of λ
                        
                           L
                         implies that only line cuts belonging to planar surfaces are reconstructed, while higher values of α
                        
                           ∅
                         and low values of λ
                        
                           L
                         enable to approximate non-planar surfaces by various plausible line cuts. This feature is useful to control the complexity of the final 3D model, by either being strict about the scene geometry, or by enforcing non-planar objects to be reconstructed as a set of planar surfaces.

SymStereo was first introduced in Ref. [24], with the reader being referred to [1] for a thorough geometric analysis of the framework. This section extends this geometric analysis by studying how surface slant affects the accuracy of symmetry-based matching costs. It is shown that, in a similar manner to multi-directional plane-sweeping [26] where the sweeping direction can be aligned with the surface normal to handle slant [6,27], in SymStereo it is possible to use prior knowledge about surface orientation to carefully choose the virtual cut planes that render perfect signal symmetries and improve the overall accuracy and robustness of the approach.

Consider the generic points P and Q that lie on the same epipolar plane Ψ, as depicted in Fig. 7
                     , and assume a virtual cut planeΠ that goes through Q. Let p, p
                     ′, and q, q
                     ′ be the projections of P and Q in the left and right views. Since the stereo pair is rectified, the signed distances between the images of the two points are defined as follows: 
                        
                           (8)
                           
                              g
                              =
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              −
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                              
                              
                                 
                                    g
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                                 
                                    ′
                                 
                              
                              −
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                                 
                                    ′
                                 
                              
                              .
                           
                        
                     
                  

From the derivations in Ref. [3], it comes that, if 
                        
                           
                              p
                           
                           ^
                        
                      is the result of mapping p
                     ′ into the left view using the homography H induced by Π, then the following relation holds 
                        
                           (9)
                           
                              ĝ
                              =
                              
                                 
                                    
                                       
                                          p
                                       
                                       ^
                                    
                                 
                                 
                                    1
                                 
                              
                              −
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          β
                                       
                                       
                                          β
                                          −
                                          1
                                       
                                    
                                 
                              
                              
                                 
                                    g
                                 
                                 
                                    ′
                                 
                              
                              ,
                           
                        
                     with β being the ratio of Eq. (2). Consider now the stereo disparities
                        
                           
                              Δ
                           
                           
                              p
                           
                        
                        =
                        
                           
                              P
                           
                           
                              1
                           
                        
                        −
                        
                           
                              P
                           
                           
                              1
                           
                           
                              ′
                           
                        
                      and
                        
                           
                              Δ
                           
                           
                              q
                           
                        
                        =
                        
                           
                              q
                           
                           
                              1
                           
                        
                        −
                        
                           
                              q
                           
                           
                              1
                           
                           
                              ′
                           
                        
                     of points P and Q and define 
                        
                           
                              Δ
                              =
                              
                                 
                                    Δ
                                 
                                 
                                    p
                                 
                              
                              −
                              
                                 
                                    Δ
                                 
                                 
                                    q
                                 
                              
                              
                              .
                           
                        
                     
                  

From Eq. (8) it follows that g′
                     =
                     g
                     −
                     Δ, which means that Eq. (9) can be re-written as 
                        
                           (10)
                           
                              ĝ
                              =
                              
                                 
                                    
                                       
                                          β
                                       
                                       
                                          β
                                          −
                                          1
                                       
                                    
                                 
                              
                              (
                              g
                              −
                              Δ
                              )
                              .
                           
                        
                     
                  

It is important to keep in mind that the symmetry around q is perfect iff the distances g and 
                        ĝ
                      are equal with opposite signs 
                        
                           
                              ĝ
                              =
                              −
                              g
                           
                        
                      [3]. In general, this condition is not satisfied, and the energy E tends to spread around the image of the profile cut rather than defining a sharp ridge that enables accurate detection (see Fig. 9). The result of Eq. (9) suggests that it is possible to enforce 
                        ĝ
                      to be equal to g by choosing a suitable ratio β or, in other words, by controlling the location where the virtual cut plane intersects the baseline as a function of the difference in stereo disparity. Assuming that P and Q are close points, the difference Δ is directly related with the depth variation in the neighborhood of the 3D profile cut (the surface slant).

Assume that the points P and Q also lie on the same scene plane Ω ∼ (m
                        −l)
                           T
                        , which defines a homography M similar to Eq. (3). Using the inverse homography, it can be shown that 
                           
                              
                                 
                                    
                                       
                                          Δ
                                       
                                       
                                          q
                                       
                                    
                                    =
                                    
                                       
                                          b
                                          
                                             
                                                m
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          l
                                       
                                    
                                    
                                       
                                          q
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          b
                                          
                                             
                                                m
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          l
                                       
                                    
                                    
                                       
                                          q
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          b
                                          
                                             
                                                m
                                             
                                             
                                                3
                                             
                                          
                                       
                                       
                                          l
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Since P is also the projection of the same planar surface, a similar expression can be obtain for Δ
                        
                           p
                        . Given that q
                        2
                        =
                        p
                        2, then Δ
                        
                           p
                         differs from Δ
                        
                           q
                         by 
                           
                              
                                 
                                    Δ
                                    =
                                    
                                       
                                          α
                                       
                                       
                                          1
                                       
                                    
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                    −
                                    
                                       
                                          q
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    ,
                                 
                              
                           
                        where 
                           
                              (11)
                              
                                 
                                    
                                       α
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       b
                                       
                                          
                                             m
                                          
                                          
                                             1
                                          
                                       
                                    
                                    
                                       l
                                    
                                 
                              
                           
                        encodes the slant of the plane along the horizontal direction. Replacing in Eq. (10) comes that 
                           
                              (12)
                              
                                 ĝ
                                 =
                                 
                                    
                                       
                                          
                                             β
                                          
                                          
                                             β
                                             −
                                             1
                                          
                                       
                                    
                                 
                                 (
                                 1
                                 −
                                 
                                    
                                       α
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 g
                                 .
                              
                           
                        
                     

The virtual cut plane Π only affects the symmetry in terms of the intersection point with the baseline. For similar conditions of relative depth variation, any cut plane going through the same point O generates symmetries with equivalent quality, regardless of its orientation. The conclusion that can be drawn is that having prior knowledge about the position and orientation of the surface to be reconstructed, we can determine the point of intersection between the virtual plane Π and the baseline that grants perfect induced symmetry. The image signals are perfectly symmetric whenever 
                           ĝ
                           =
                           −
                           g
                        , so that solving with respect to β in Eq. (12) yields
                           
                              (13)
                              
                                 β
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       −
                                       
                                          
                                             α
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

From the analysis above, we propose a simple approach that uses slant information to refine the SymStereo depth estimates (see Fig. 8
                        ). The first step consists in computing the line cuts for a set of virtual scan planes Π
                        
                           i
                         that go through the midpoint of the baseline (O
                        1
                        =0.5b). The line reconstruction tends to be inaccurate in the presence of surface slant, however, and as discussed in the next section, it can be used to obtain a first estimate for the value of α
                        1. From this estimate, we determine the point 
                           
                              
                                 0
                              
                              
                                 1
                              
                              
                                 (
                                 1
                                 )
                              
                           
                           =
                           
                              
                                 β
                              
                              
                                 (
                                 1
                                 )
                              
                           
                           b
                         in the baseline, with β
                        (1) being given by Eq. (13). A new virtual cut plane 
                           
                              
                                 Π
                              
                              
                                 i
                              
                              
                                 (
                                 1
                                 )
                              
                           
                         is defined by joining the 3D line cut with O
                        (1), the corresponding energy E is computed, and finally the line cut is re-estimated. Since the scan plane is chosen such that the induced symmetry is enhanced (see Fig. 9
                        ), the accuracy of the reconstruction tends to improve. The procedure is repeated till there is no significant change in the positioning of the point in the baseline.

This section describes the algorithm for semi-dense PPR that uses the line cuts computed in the previous section for posing plane hypotheses in the scene (refer to Fig. 10
                     ). The output is a discrete set of planar surfaces and a semi-dense 3D reconstruction. The plane hypotheses can then be used as labels in a global optimization step for obtaining a dense piecewise planar model (Section 2.3).

Let's consider that the midpoint of the baseline is the projection center of a virtual camera henceforth referred as the cyclopean eye (see Fig. 11
                        ). The height of the image of the cyclopean eye is equal to the number of epipolar planes Ψ
                        
                           r
                         with r
                        =1,…,R (one epipolar plane per image row), and the width is given by the number of virtual cut planes Π
                        
                           i
                         with i
                        =1,…,M (one cut plane for each column). Each pixel of the cyclopean eye is associated with a back-projection ray d
                        
                           i,r
                         that corresponds to the intersection between Π
                        
                           i
                         and Ψ
                        
                           r
                        . The objective is to estimate the point on each d
                        
                           i,r
                         that is mostly like to belong to a planar surface. The problem is casted as a labeling problem following the PEARL framework (Section 2.2). The nodes of the graph are the back-projection rays d
                        
                           i,r
                         of the cyclopean eye, and the objective is to assign to each d
                        
                           i,r
                         a plane label f
                        
                           d
                        . The set of possible labels is 
                           
                              
                                 L
                              
                              
                                 0
                              
                           
                           =
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       f
                                    
                                    
                                       ∅
                                    
                                 
                              
                           
                        , with f
                        
                           ∅
                         meaning that no point on d
                        
                           i,r
                         belongs to a planar surface. Note that we use d instead of d
                        
                           i,r
                         whenever the virtual and epipolar plane specifications are not strictly necessary. We assume a 
                           
                              
                                 N
                              
                              
                                 4
                              
                           
                         neighborhood for d
                        
                           i,r
                         that is defined by the four back-projection rays d
                        
                           i±1,r
                         and d
                        
                           i,r±1 (see Fig. 11).

The action of PEARL is twofold in the case of semi-dense PPR: first is applied to downsize the number of plane hypotheses by either merging planes that are close to each other and refer to the same 3D surface, or by discarding planes that have little support from the data (discrete optimization with penalty term), and second to refine the pose of the most likely planes taking into account slant (continuous optimization).

As discussed in Section 4, each line cut is a possible location of intersection of a virtual cut plane with a planar surface in the scene. The initial set of plane models 
                           
                              
                                 P
                              
                              
                                 0
                              
                           
                         to be used in PEARL can eventually be generated by considering all possible hypotheses that can be obtained from two line cuts belonging to different scan planes Π, as was originally proposed in Ref. [24]. However, and depending on the number of cut planes that are used, the set 
                           
                              
                                 P
                              
                              
                                 0
                              
                           
                         can easily become very large. We noticed that using only pairs of line cuts from neighboring cut planes Π
                        
                           i±(1,2) drastically decreases the size of 
                           
                              
                                 P
                              
                              
                                 0
                              
                           
                         and it is typically enough for initializing the piecewise-planar labeling approach.Since it is unlikely that line cuts intersecting different epipolar planes correspond to the same planar surface, we further reduce 
                           
                              
                                 P
                              
                              
                                 0
                              
                           
                        , and only use pairs of line cuts that have a minimum of N
                        
                           E
                         epipolar lines of overlap (N
                        
                           E
                        
                        =10 in this article).

The data term D
                        
                           d
                           
                              i,r
                           
                         for the back-projection ray d
                        
                           i,r
                         is defined as 
                           
                              
                                 
                                    
                                       
                                          D
                                       
                                       
                                          
                                             
                                                
                                                   d
                                                
                                             
                                             
                                                i
                                                ,
                                                r
                                             
                                          
                                       
                                    
                                    (
                                    
                                    f
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                   min
                                                   (
                                                   1
                                                   −
                                                   
                                                      
                                                         
                                                            E
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   (
                                                   r
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         f
                                                      
                                                   
                                                   )
                                                   ,
                                                   τ
                                                   )
                                                   
                                                   
                                                   
                                                   if
                                                   
                                                   f
                                                   
                                                   ∈
                                                   
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   τ
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   if
                                                   
                                                   f
                                                   =
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         ∅
                                                      
                                                   
                                                
                                             
                                             
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where E
                        
                           i
                         is the joint energy associated with the virtual cut plane Π
                        
                           i
                        , r is the row corresponding to the epipolar plane Ψ
                        
                           r
                         and τ is a constant. The coordinate x
                        
                           f
                         is the column defined by the hypothesis f, corresponding to the intersection of d
                        
                           i,r
                         with the plane indexed by f. Note that similarly to Ref. [22], the non-planar f
                        
                           ∅
                         label indicates that no satisfactory plane hypothesis can be assigned to d
                        
                           i,r
                        .

Inspired by the work of Sinha et al. [9], the smoothness term for neighboring nodes d and e is given by 
                           
                              (14)
                              
                                 
                                    
                                       V
                                    
                                    
                                       
                                          d
                                          e
                                       
                                    
                                 
                                 (
                                 
                                 
                                    
                                       f
                                    
                                    
                                       
                                          d
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       f
                                    
                                    
                                       
                                          e
                                       
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                0
                                                
                                                
                                                
                                                if
                                                
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                   
                                                
                                                =
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      
                                                         e
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                if
                                                
                                                (
                                                
                                                   d
                                                   ,
                                                   e
                                                
                                                ,
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      
                                                         e
                                                      
                                                   
                                                
                                                )
                                                ∈
                                                
                                                   
                                                      
                                                         S
                                                      
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                if
                                                
                                                (
                                                
                                                   d
                                                   ,
                                                   e
                                                
                                                ,
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      
                                                         e
                                                      
                                                   
                                                
                                                )
                                                ∈
                                                
                                                   
                                                      
                                                         S
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      3
                                                   
                                                
                                                
                                                if
                                                
                                                (
                                                
                                                   d
                                                   ,
                                                   e
                                                
                                                )
                                                ∈
                                                
                                                   
                                                      
                                                         S
                                                      
                                                   
                                                   
                                                      3
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                if
                                                
                                                (
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                   
                                                
                                                
                                                V
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                   
                                                
                                                )
                                                =
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      ∅
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1
                                                
                                                
                                                
                                                else
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 0 < λ
                        1 < λ
                        2 < λ
                        3 < 1, and the content of the sets S
                        1, S
                        2 and S
                        3 is described next. Remark that no penalization is assigned to neighboring nodes receiving the same plane label, while in the case of one node obtaining the discard label f
                        
                           ∅
                        , a non-zero cost λ
                        4 is added to the plane configuration f.

Following a reasoning similar to Ref. [42], plane transitions between neighboring nodes d and e are more likely to occur in the presence of crease or occlusion edges. A crease edge corresponds to the projection of the 3D line of intersection between two different planes in the scene, while occlusion boundaries arise from spatially separated objects in 3D whose image projections interfere with each other.

Let the point p
                        
                           d,f
                           
                              d
                           
                         (p
                        
                           e,f
                           
                              e
                           
                        ) be the projection of the intersection between the back-projection ray d (e) and the plane associated to f
                        
                           d
                         (f
                        
                           e
                        ). In order to encourage plane label transitions at crease edges, we store in the set S
                        1, the quadruples (d, e,f
                        
                           d
                        ,f
                        
                           e
                        ) in which the points p
                        
                           d,f
                           
                              d
                           
                         and p
                        
                           e,f
                           
                              e
                           
                         are located on different sides of the crease edge defined by f
                        
                           d
                         and f
                        
                           e
                        . Whenever f contains assignments located in S
                        1, then it incurs a penalization λ
                        1. Fig. 12
                         (a) shows some crease edges that are estimated from real imagery.

Occlusion edges usually coincide with visible 2D line segments in the input views and are often aligned with the vanishing directions of scene planes (Fig. 12 (b)). In order to find possible occlusion boundaries, we detect 2D line segments in the left view I using the Line Segment Detector [28]. For clustering concurrent lines, we use the global vanishing point detection algorithm proposed by Antunes et al. [29]. The set S
                        2 contains the quadruples (d,e,f
                        
                           d
                        ,f
                        
                           e
                        ) where the points p
                        
                           d,f
                           
                              d
                           
                         and p
                        
                           e,f
                           
                              e
                           
                         are located on different sides of a line segment that was clustered to a particular vanishing point, whose direction is orthogonal either to the planes associated to f
                        
                           d
                         or f
                        
                           e
                        . Finally, S3 contains the remaining pairs (d,e) whose projections are on different sides of a line segment to which no vanishing point was assigned. Remark that in contrast to Ref. [9], we do not perform any line matching between the views, substantially decreasing the complexity of the algorithm.

The third step of PEARL (Section 2.2) is to re-estimate the plane model parameters using the inliers of the discrete labeling f. Let Ω
                        
                           f
                         be the plane associated to f to which has been assigned a non-empty set of inliers 
                           D
                           (
                           
                           f
                           )
                           =
                           
                              
                                 d
                                 ∈
                                 D
                                 |
                                 
                                 
                                    
                                       f
                                    
                                    
                                       d
                                    
                                 
                                 =
                                 f
                              
                           
                        . Each plane Ω
                        
                           f
                         is refined by minimizing its plane parameters over the energies E via LM: 
                           
                              (15)
                              
                                 
                                    
                                       Ω
                                    
                                    
                                       f
                                    
                                    
                                       *
                                    
                                 
                                 =
                                 
                                    
                                       min
                                    
                                    
                                       
                                          
                                             Ω
                                          
                                          
                                             f
                                          
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             
                                                d
                                             
                                          
                                          
                                             i
                                             ,
                                             r
                                          
                                       
                                       ∈
                                       
                                          D
                                       
                                       (
                                       f
                                       )
                                    
                                 
                                 
                                    
                                       1
                                       −
                                       
                                          
                                             
                                                E
                                             
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       r
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             Ω
                                          
                                       
                                       )
                                    
                                 
                                 ,
                              
                           
                        where x
                        
                           Ω
                         is the column defined by the intersection of d
                        
                           i,r
                         with Ω. The new set of labels 
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                           =
                           
                              
                                 
                                    
                                       Ω
                                    
                                    
                                       f
                                    
                                    
                                       *
                                    
                                 
                              
                           
                         is then used in a new expand step, and we iterate between discrete labeling and plane refinement until the α-expansion optimization does not decrease the energy of Eq. (4).

We have discussed in Section 5.1 that SymStereo can be enhanced in case there is slant information available. The output of the global algorithm described previously, is the labeling f that assigns to each back-projection ray d a plane Ω. The intersection of d with Ω defines a 3D point Q, and Ω also defines α
                        1 that encodes the 3D slant in the neighborhood of Q. Following this, the position Q can be refined by iteratively optimizing β.

Let Ω be the plane associated to label f to which has been assigned a non-empty set of inliers 
                           D
                           (
                           
                           f
                           )
                           =
                           
                              
                                 
                                    
                                       d
                                    
                                    
                                       i
                                       ,
                                       r
                                    
                                 
                                 ∈
                                 D
                                 |
                                 
                                 
                                    
                                       f
                                    
                                    
                                       
                                          
                                             d
                                          
                                          
                                             i
                                             ,
                                             r
                                          
                                       
                                    
                                 
                                 =
                                 f
                              
                           
                        , and consider that Q
                        
                           i,r
                         is the intersection between the ray d
                        
                           i,r
                         and Ω (refer to Fig. 8). For each d
                        
                           i,r
                        , we compute the corresponding idealβ
                        1 and obtain a new back-projection ray 
                           
                              
                                 d
                              
                              
                                 i
                                 ,
                                 r
                              
                              
                                 (
                                 1
                                 )
                              
                           
                        . The new ray 
                           
                              
                                 d
                              
                              
                                 i
                                 ,
                                 r
                              
                              
                                 (
                                 1
                                 )
                              
                           
                         is located on the same epipolar plane, but on the virtual cut plane intersecting the point O
                        (1) and the previously reconstructed point Q
                        
                           i,r
                        . Given the new plane Ω
                        (1), a new homography mapping (see Eq. (3)) can be used for inducing improved symmetries, and from which the joint energy 
                           
                              
                                 E
                              
                              
                                 i
                                 ,
                                 r
                              
                              
                                 (
                                 1
                                 )
                              
                           
                         is re-calculated. The new joint energies 
                           
                              
                                 E
                              
                              
                                 i
                                 ,
                                 r
                              
                              
                                 (
                                 1
                                 )
                              
                           
                         are used in a new refinement step using LM (Section 6.4). We iterate between re-computing new back-projection rays 
                           
                              
                                 d
                              
                              
                                 i
                                 ,
                                 r
                              
                              
                                 (
                                 n
                                 )
                              
                           
                         and refining Ω
                        (n) for a pre-defined number of times (4in this article).

We show in Fig. 13
                         a brief comparison between the line cut reconstruction algorithm presented in Section 4, the sparse PPR approach proposed in Ref. [24], and the semi-dense PPR strategy described in this section. In contrast to the proposed PPR approach that uses a PEARL formulation, the algorithm in Ref. [24] uses a RANSAC procedure. The RANSAC search is carried in the dual 3D space, and pairs of line cuts generate a plane hypothesis. The inlier set is determined by calculating the Euclidean distance between the line cuts and the plane hypothesis.

Also in this case, the multi-model fitting results obtained using PEARL are superior to the ones obtained using a greedy approach such as RANSAC. First, RANSAC is only able to label the line cuts as being inliers or outliers, so that only a sparse reconstruction composed by line cuts can be obtained (e.g. first example of Fig. 13). In our case, the objective is to label all pixels of the cyclopean eye, which enables to estimate a more complete semi-dense PPR. Second, the greedy model selection with largest consensus using RANSAC, independently of the global solution, generates in some cases random models (e.g. second and third example of Fig. 13). Third, the smoothness term of PEARL enforces spatial consistency, so that the proposed approach is able to obtain much more coherence in the labeling results, as well as the transitions between planes are consistent and correctly over the image edges. Finally, the continuous optimization of PEARL improves dramatically the accuracy of the plane poses when compared to the ones obtained from pairs of line cuts.

As discussed previously, in cases where the virtual cut planes intersect planar surfaces with some texture and far from object discontinuities (e.g. first example of Fig. 13), the independent reconstruction along single virtual planes provides accurate results. However, in scenarios containing multiple planes and complicated textures, the independent line cut reconstruction has some difficulties. These problems are solved using our semi-dense PPR pipeline that estimates planar surfaces in the scene along different virtual cut planes simultaneously and in a global manner.

In this section, we run a set of experiments in PPR with the objective of assessing the performance of the proposed pipeline and compare it against state-of-the-art methods [9,10]. The evaluation is carried using two datasets: five stereo pairs from the Middlebury benchmark [3,30,31] and a new dataset comprising stereo pairs of both indoor and outdoor scenarios (see Fig. 16 to19). These images were acquired using a Bumblebee stereo camera from PointGrey, with a baseline of 24cm and an image resolution of 1024×768 pixels. The scenes contain mostly planar surfaces, and include a variety of situations that are very challenging for traditional stereo methods e.g. low and/or repetitive textures, surface slant.

The proposed pipeline, henceforth referred as SymS, provides as output a set of plane hypotheses 
                           
                              
                                 P
                              
                              
                                 S
                                 y
                                 m
                                 S
                              
                           
                        . We compare these plane hypotheses with the ones obtained using two different approaches:


                        
                           
                              1.
                              
                                 The method DS by Gallup et al. [
                                 
                                    10
                                 
                                 ]: In this work, the authors start by obtaining a dense depth map of the scene using a local stereo approach. Initial plane hypotheses are generated using a specific RANSAC procedure, which is followed by a linking step that merges planes that are close in distance and eliminates spurious estimates. The output of this algorithm is the discrete set of plane hypotheses 
                                    
                                       
                                          P
                                       
                                       
                                          D
                                          S
                                       
                                    
                                 .


                                 The method SS by Sinha et al. [
                                 
                                    9
                                 
                                 ]: This approach starts by obtaining a sparse reconstruction of the scene based on point correspondences, matching line segments and vanishing points. The 3D data is used in successive histogram voting schemes and RANSAC procedures to generate the plane hypotheses. At the end the algorithm provides the discrete set of plane hypotheses 
                                    
                                       
                                          P
                                       
                                       
                                          S
                                          S
                                       
                                    
                                 .

The experiments compare the pixel labeling results obtained with the MRF formulation described in Section 2.3 when the plane hypotheses are provided by SS, SymS or DS (refer to Fig. 14
                         for a SymS example). Since this analysis is mostly qualitative, we decided to complement it with quantitative measurements of the accuracy of the plane pose estimation. Regarding the Middlebury experiments in Section 7.2, we compute the disparity map for each stereo pair from the estimated plane parameters and compare it with the provided ground truth (GT). Regarding the experiments using the new dataset containing real indoor and outdoor scenarios (see Section 7.3 and Section 7.4), it was difficult to obtain the GT model parameters for each stereo pair in the dataset. Thus, we decided to proceed as follows: First, for each stereo pair we manually select the image regions ℛ
                           k
                         corresponding to 3D planes Ω
                        
                           k
                         in the scene. Second, given a particular set of plane hypotheses and the corresponding pixel-wise plane labeling f, the accuracy of the pose estimations is evaluated using the following metric: 
                           
                              (16)
                              
                                 
                                    
                                       
                                          P
                                       
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                p
                                             
                                             ∈
                                             
                                                
                                                   R
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                p
                                             
                                          
                                       
                                       (
                                       
                                       
                                          
                                             f
                                          
                                          
                                             
                                                p
                                             
                                          
                                       
                                       )
                                    
                                    
                                       #
                                       
                                          
                                             R
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where #ℛ
                           k
                         is the number of pixels in the region.

It is important to note that the accuracy measurements obtained with the above strategy must be interpreted with caution. Given two planes Ω
                        
                           k
                         and Ω
                        
                           l
                        , the fact that P
                           k
                         <P
                           l
                         does not necessarily mean that the former is better estimated than the latter. The proposed metric depends largely on the textures and illumination of the surfaces e.g. planar surfaces with low-texture and specularities will have a large P
                           k
                         even if the corresponding plane model is well estimated. However, we are in the opinion that the metric P
                           k
                         is well suited for comparing different estimations of the same plane Ω
                        
                           k
                        .

The parameters used in the different algorithms were manually tuned using the GT labeling on a subset of the dataset captured using the Bumblebee, whose results are not shown in the experimental comparison. These values were kept constant for all the remaining experiments (including for the experiments in Middlebury). Concerning the SymS algorithm, we decided to use M
                        =25 virtual cut planes to have a good trade-off between accuracy and runtime. The parameters of the final MRF labeling (see Section 2.3) were the same for the three plane hypotheses generators, namely ρ
                        
                           max
                        
                        =0.8, γ
                        =0.6, t
                        =1 and T
                        =2.


                        Fig. 15
                         compares the performance of the state-of-the-art methods SS and DS, with the proposed pipeline SymS in generating plane hypotheses for five stereo pairs of Middlebury [3,30,31]. We show for each case the left view, the ground truth disparity map, and the estimated pixel-wise plane labeling result. Additionally, we show the disparity maps computed from the estimated plane parameters, and evaluate the numerical accuracy of the dense disparity maps in Table 1
                        . The accuracy of the Line Cuts obtained using SymS is similar to the one obtained using DS and much better than SS. This confirms our first observation that SymStereo is better than sparse stereo for providing 3D evidence about the scene, and similar to dense stereo with lower computational cost, for computing plane models of the scene. The Semi-dense PPR improves the Line Cut results, and shows superior performance when compared to DS. This initial evaluation provides evidence that our PPR algorithm improves the state-of-the-art in reconstructing planar surfaces from two calibrated views. The next sections present the experimental results on real indoor and outdoor man-made environments, which are the scenes mainly targeted by our development.


                        Fig. 16
                         compares the performance of SS, SymS and DS in generating plane hypotheses for several challenging stereo pairs. For each case, we show the left view, the pixel-wise plane labeling result, and the P
                           k
                         scores of the three approaches for different planes in the scene.

In the two first examples, the scene is composed by two and three planes, respectively, which are fronto-parallel to the cameras. It can be observed that the three methods work quite well and provide very similar results. SS shows some difficulty in distinguishing the vertical planes of example (b), which can be explained by the lack of features in the wall on the right.

The two examples in the second row present a highly slanted surface (blue and green planes in examples (c) and (d), respectively). Our algorithm is able to correctly detect and reconstruct these surfaces, whereas DS and SS have clear difficulties in handling such a large amount of slant. The two bottom rows show examples of scenes with difficult textures, slant and variable illumination conditions. SS and DS fail in some cases to provide acceptable plane hypotheses for the MRF labeling, so that no plane assignment is obtained. Our approach recovers all the planes, and can even separate surfaces that are at very close distance, as shown in example (g) where the floor and carpet are distinguished.

For demonstrating the effectiveness of the refinement strategy presented in Section 5, we shown in Fig. 17
                         the improvements that can be achieved in plane pose estimation for an increasing number of refinement iterations. It can be observed that for fronto-parallel configurations the improvements are negligible, since the initial virtual cut planes already intersect the baseline near the optimal point. However, in the case of slanted surfaces, the iterative plane refinement strategy is effective and considerably improves the estimated surfaces.

Finally, and for the sake of completeness, we report the runtimes of each algorithm in these examples, without taking into account the final MRF labeling step. SymS takes between 1−2min, depending on the number of line cuts that are detected, DS runs in about 2min, and SS takes approximately 3min. All these times refer to straightforward, non-optimized Matlab implementations, with the exception of the α-expansion optimization used by PEARL that was performed using the publicly available C++ code [32,33,34,35].


                        Fig. 18 and Fig. 19
                        
                         show additional piecewise-planar 3D models obtained using our pipeline. The stereo pairs show natural indoor and outdoor scenes that are typically targeted by PPR algorithms. While previous methods, such as the ones reported in Refs. [14,8,9,10], require multiple views to obtain satisfactory models, our pipeline is able to reach competitive results using the information of only two views. As discussed in Ref. [36], the depth error in stereo relates to the image correspondence error by a multiplicative factor known as the geometric resolution that depends on the baseline and camera focal length. Taking into account our experimental setup, and assuming a maximum allowed error in relative depth of 2%, the maximum reconstruction depth is estimated in 16 meters. Thus, we do not present reconstruction results for surfaces and objects that are beyond this range. It is also important to emphasize that the pixel-wise labeling is exclusively performed based on photo-consistency and image pixel proximity, which largely explains that in some examples the region borders are poorly defined. This issue can be easily solved using a more sophisticated MRF formulation similar to the one used in Section 6 that incorporates crease and occlusion edge information. We chose not to do so in order to better assess the accuracy of our plane pose estimation.

@&#CONCLUSION@&#

The paper presents an automatic piecewise planar reconstruction algorithm from two views. Unlike other existing approaches, the stereo depth estimation and the detection of planar surfaces are accomplished in a tight and coupled manner by combining SymStereo with PEARL [2]. This enables to take full advantage of the strong planarity prior, with the algorithm being able to accurately segment and reconstruct the planes contained in the scene. The effectiveness of the scheme is proved by comparison with two different state-of-the-art approaches in several challenging indoor and outdoor scenarios.

As a final comment, it can be claimed that the energy-based model fitting can either be applied to a dense stereo reconstruction or to a sparse point-cloud model. The former would substantially increase the computational complexity without bringing obvious benefits, while the latter would avoid the use of the smoothness term for regularizing the PEARL energy minimization. Thus, the symmetry-based semi-dense stereo approaches provides the best trade-off between the two, playing a key role in the success of the overall approach.

@&#ACKNOWLEDGMENTS@&#

Michel Antunes acknowledges the Portuguese Science Foundation (FCT) that generously funded his work through the grant SFRH/BD/47488/2008. This work was also supported by FCT and the COMPETE program (co-funded by FEDER) under the project grant AMS-HMI12:RECI/EEI-AUT/0181/2012.

@&#REFERENCES@&#

