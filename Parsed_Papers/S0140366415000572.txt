@&#MAIN-TITLE@&#Achieving efficient and privacy-preserving multi-feature search for mobile sensing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a secure multi-feature search scheme with low cost on the mobile terminals.


                        
                        
                           
                           We propose an extended scheme to personalize query based on historical search information.


                        
                        
                           
                           We prove the security of the proposed scheme on privacy protection of index and trapdoor and unlinkability of trapdoor.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Mobile sensing

Multi-feature

Searchable encryption

Preference weight

@&#ABSTRACT@&#


               
               
                  Currently, more and more mobile terminals embed a number of sensors and generate massive data. Effective utilization to such information can enable people to get more personalized services, and also help service providers to sell their products accurately. As the information may contain privacy information of people, they are typically encrypted before transmitted to the service providers. This, however, significantly limits the usability of data due to the difficulty of searching over the encrypted data. To address the above issues, in this paper, we first leverage the secure kNN technique to propose an efficient and privacy-preserving multi-feature search scheme for mobile sensing. Furthermore, we propose an extended scheme, which can personalize query based on the historical search information and return more accurate result. Using analysis, we prove the security of the proposed scheme on privacy protection of index and trapdoor and unlinkability of trapdoor. Via extensive experiment on real-world cloud systems, we validate the performance of the proposed scheme in terms of functionalities, computation and communication overhead.
               
            

@&#INTRODUCTION@&#

Currently, more and more mobile terminals are equipped with an increasing range of sensing, computational, storage and communication resources [1]. They not only serve as mobile device for computing and communication, but also come with a rich set of embedded sensors [2,3]. More users’ activities are monitored, such as walking, driving and sitting. This is approved by people who want to obtain more preferable services. For this goal, users’ states should be aggregated and classified to provide accessible service to search entities. The different search entities can filter mobile users and sell the corresponding personalized services [4].

Unfortunately, since the states of users may contain privacy information (e.g., location), malicious use toward it threatens the users’ privacy [5], thereby limits the application of sensing information. It is significantly important to find a method to use the information with privacy preservation. Considering the limited capability of the mobile terminals, the method must achieve both privacy preservation and efficiency. Searchable symmetric encryption (SSE) allows confidential search over encrypted data and can achieve more efficiency than other searchable encryption schemes. This method outsources some encrypted indexes and then generates encrypted trapdoor to match. Many SSE schemes in cloud environment have been proposed in order to achieve the same search functionalities as plaintext search. Cao et al. [6] propose a searchable encryption scheme based on secure k-nearest neighbor (kNN) computation [7], which supports coordinate matching, i.e., as many matches as possible. And Yu et al. [8] propose a multi-keyword top-k retrieval scheme with fully homomorphic encryption, which can return ranked results and achieve high security.

However, searchable encryption application in mobile sensing has not been studied well. In this paper, we propose an efficient and privacy-preserving multi-feature search scheme for mobile sensing, which can not only achieve secure and efficient multi-feature search, but also return preferable result based on relevance feedback [9–11]. In our scheme, mobile terminals generate some features according to their own states, then encrypt and outsource them to a cloud server. The search entities can also create an encrypted trapdoor to query those encrypted features. Overall, we summarize our original contributions in two aspects as follows:
                        
                           •
                           We propose an efficient and privacy-preserving multi-feature search scheme for mobile sensing. Security analysis shows that the proposed scheme can achieve privacy protection of index and trapdoor and unlinkability of trapdoor. Extensive experiment results demonstrate the performance of the proposed scheme in terms of functionalities, computation and communication overhead.

To accurately provide personalized service, we propose an extended scheme by embedding relevance feedback. With the feedback of historical search information, we add preference factor in new query to achieve more precise search.

As shown in Fig. 1
                        , our scheme consists of four entities.
                           
                              •
                              
                                 Mobile user: The mobile user represents mobile terminal which may be mobile phone and mobile computer, etc. It can receive mobile services for some corresponding service providers. Some features, represent its own state, can be used to get more personalized services. It outsources its encrypted features to re-encryption agency. To protect feature privacy, the mobile user encrypts the original features through secure encryption algorithm, and generates an index for efficient search. After that, the mobile user sends its identity and the corresponding index to the re-encryption agency.


                                 Re-encryption agency: The re-encryption agency is used to re-encrypt the indexes generated by mobile users and then outsources the re-encrypted indexes to the cloud server. With such an agency, we can avoid key sharing problem of the mobile users. The secret keys of mobile users will not be the same. A mobile user cannot identify the index generated by another mobile user. Besides, the re-encryption agency only has re-encryption keys, thus it cannot get any privacy information from the indexes.


                                 Cloud server: The cloud server is an intermediate entity which stores the identities of mobile users and the encrypted indexes, and then provides access and search services to authenticated search entities. When a search entity sends a trapdoor to the cloud server, it would return a collection of matching identities based on certain operations.


                                 Search entity: An authenticated search entity can be any mobile or fixed entity in the real world. When it wants to search the outsourced information stored in the cloud server. It will generate a search feature set. Then according to the feature set, the search entity uses corresponding secret keys to generate a trapdoor and sends it to the cloud server. Finally, it can receive a result collection of matching identities from the cloud server.

In this paper, the cloud server is considered as semi-trust, i.e., it may try to attain sensitive information from the queries of search entities while performing the keyword-based search. We define the security requirements as follows:
                           
                              •
                              
                                 Privacy protection of index and trapdoor: It is the most basic security feature in general searchable encryption schemes. Without the privacy protection of them, searchable encryption is out of the question. Namely, our scheme should achieve this security requirement.


                                 Unlinkability of trapdoor: We define the unlinkability of trapdoor in a harsh model, Known Background Model 
                                 [12], to study more comprehensive security of our scheme. In this case, the cloud server is more powerful and can possess more statistical information from a known comparable dataset, such as the information of all indexes and trapdoors. Even some keyword information has been leaked, we should achieve that there would not produce any link between any information, and prevent more losses even if a part of the information has been leaked.


                                 Access pattern: Access pattern is the retrieval of sequential searches, consisting of the returned identity sets according to the corresponding search feature sets. Some searchable encryption proposals, e.g., [13], have been proposed to hide the access pattern using private information retrieval (PIR) technique [14]. However, our proposal is not specifically designed to protect the access pattern, because any PIR based technique must “touch” the whole dataset outsourced on the server which is inefficient in the large scale cloud system.

In order to realize our searchable encryption scheme for mobile sensing, the following goals should be achieved:
                           
                              •
                              
                                 Strong security: The first goal is to achieve the security requirements mentioned in Section 2.2. Without this, the searchable encryption of mobile sensing is out of the question.


                                 Multi-feature search: The second goal is to achieve multi-feature search over encrypted cloud data. Compared with general single feature search, multi-feature search can better meet requirements of search entities and achieve better search efficiency.


                                 Preference search: In general search engines, multiple features that a search entity input are treated as the same weight. However, it may not meet the requirement of the search entity. Some features may be more important than others. We introduce the preference weight of feature to our scheme, to achieve more precise search.

We adopt the work of Wong et al. [7] as our foundation. Wong et al. propose a secure k-nearest neighbor (kNN) scheme which can confidentially encrypt two vectors and compute Euclidean distance of them. Firstly, the secret keys 
                           
                              (
                              S
                              ,
                              M
                              ,
                              
                                 
                                    M
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                         should be generated. The binary vector S is a splitting indicator to split plaintext vector into two random vectors, which can confuse the value of plaintext vector. And M and 
                           
                              
                                 
                                    M
                                 
                                 
                                    ′
                                 
                              
                           
                         are two invertible matrices, which are used to encrypt the split vectors. The correctness and security of secure kNN computation scheme can be referred to [7].


                        
                           
                              •
                              
                                 
                                    
                                       U
                                    
                                  – the mobile user collection, denoted as a set of N users 
                                    
                                       U
                                       =
                                       (
                                       
                                          
                                             U
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             U
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             U
                                          
                                          
                                             N
                                          
                                       
                                       )
                                    
                                 .


                                 
                                    
                                       F
                                    
                                  – the feature dictionary, denoted as a set of m features 
                                    
                                       F
                                       =
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             F
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             F
                                          
                                          
                                             m
                                          
                                       
                                       )
                                    
                                 .


                                 
                                    
                                       I
                                    
                                  – the index stored in cloud server, which is built from the features of each mobile user and re-encrypted by the intermediate agency, denoted as 
                                    
                                       I
                                       =
                                       (
                                       
                                          
                                             I
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             I
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             I
                                          
                                          
                                             N
                                          
                                       
                                       )
                                    
                                 .


                                 
                                    
                                       K
                                    
                                  – the re-encryption key stored in the re-encryption agency, denoted as 
                                    
                                       K
                                       =
                                       {
                                       
                                          
                                             K
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             K
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             K
                                          
                                          
                                             N
                                          
                                       
                                       }
                                    
                                 
                              


                                 
                                    
                                       
                                          
                                             F
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                  – the search feature set generated by a search entity, which is a subset of 
                                    
                                       F
                                    
                                 .


                                 
                                    
                                       
                                          
                                             T
                                          
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   ∼
                                                
                                             
                                          
                                       
                                    
                                  – the trapdoor for feature set 
                                    
                                       
                                          
                                             F
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                 .


                                 
                                    
                                       ID
                                    
                                  – the result collection for a query, containing identities of the most matching mobile users.

In this section, based on the secure kNN computation scheme [7], we present our proposed a scheme to achieve searchable encryption for mobile sensing.
                        
                           •
                           
                              Setup Firstly, a key generation center randomly generates secret keys
                                 
                                    (1)
                                    
                                       secretkeys
                                       =
                                       (
                                       S
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             1
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             N
                                          
                                       
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             N
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       M
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             ′
                                          
                                       
                                       )
                                    
                                 
                              where S is an m-dimensional binary vector, and the other are all 
                                 
                                    m
                                    ×
                                    m
                                 
                               invertible matrices. The binary vector S is a splitting indicator to split plaintext vector into two random vectors, which can confuse the value of plaintext vector. Then it computes 
                                 
                                    K
                                    =
                                    {
                                    
                                       
                                          K
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          K
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          K
                                       
                                       
                                          N
                                       
                                    
                                    }
                                 
                              , where 
                                 
                                    
                                       
                                          K
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    (
                                    
                                       
                                          M
                                       
                                       
                                          j
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    M
                                    ,
                                    
                                       
                                          M
                                       
                                       
                                          j
                                       
                                       
                                          ′
                                          -
                                          1
                                       
                                    
                                    
                                       
                                          M
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                              . Finally, the key generation center distributes the secret keys as shown in Table 1
                              .


                              GenIndex (
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    S
                                    ,
                                    
                                       
                                          M
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    
                                       
                                          M
                                       
                                       
                                          j
                                       
                                       
                                          ′
                                       
                                    
                                 
                              ) The mobile user 
                                 
                                    
                                       
                                          U
                                       
                                       
                                          j
                                       
                                    
                                 
                               generates an m-dimensional binary vector 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                 
                               according to its corresponding features, where 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               indicates whether 
                                 
                                    
                                       
                                          U
                                       
                                       
                                          j
                                       
                                    
                                 
                               has the i-th feature of dictionary 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          i
                                       
                                    
                                 
                              , i.e., 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    [
                                    i
                                    ]
                                    =
                                    1
                                 
                               indicates yes and 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    [
                                    i
                                    ]
                                    =
                                    0
                                 
                               indicates No. Then the vector 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                 
                               will be encrypted by the secure kNN scheme: the mobile user uses vector S to split 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                 
                               into two m-dimensional vectors (
                                 
                                    
                                       
                                          p
                                       
                                       
                                          a
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          b
                                       
                                    
                                 
                              ), where the vector S functions as a splitting indicator. Namely, if 
                                 
                                    S
                                    [
                                    i
                                    ]
                                    =
                                    0
                                 
                               
                              
                                 
                                    (
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                    )
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          a
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               and 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          b
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               are both set as 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               (
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    [
                                    i
                                    ]
                                    =
                                    
                                       
                                          p
                                       
                                       
                                          a
                                       
                                    
                                    [
                                    i
                                    ]
                                    =
                                    
                                       
                                          p
                                       
                                       
                                          b
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                              ); if 
                                 
                                    S
                                    [
                                    i
                                    ]
                                    =
                                    1
                                 
                               
                              
                                 
                                    (
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                    )
                                 
                              , the value of 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               will be randomly split into 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          a
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               and 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          b
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               
                              
                                 
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          j
                                       
                                    
                                    [
                                    i
                                    ]
                                    =
                                    
                                       
                                          p
                                       
                                       
                                          a
                                       
                                    
                                    [
                                    i
                                    ]
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          b
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                              ). Then, a semi-finished index of mobile user 
                                 
                                    
                                       
                                          U
                                       
                                       
                                          j
                                       
                                    
                                 
                               can be calculated as
                                 
                                    (2)
                                    
                                       
                                          
                                             I
                                          
                                          
                                             j
                                          
                                          
                                             ∗
                                          
                                       
                                       =
                                       (
                                       
                                          
                                             M
                                          
                                          
                                             j
                                          
                                          
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             j
                                          
                                          
                                             ′
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                 
                              Finally, 
                                 
                                    
                                       
                                          U
                                       
                                       
                                          j
                                       
                                    
                                 
                               sends 
                                 
                                    (
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                       
                                          ∗
                                       
                                    
                                    ‖
                                    
                                       
                                          ID
                                       
                                       
                                          
                                             
                                                U
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    )
                                 
                               to the re-encryption agency, where 
                                 
                                    
                                       
                                          ID
                                       
                                       
                                          
                                             
                                                U
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                 
                               is the identity of the mobile user 
                                 
                                    
                                       
                                          U
                                       
                                       
                                          j
                                       
                                    
                                 
                              .


                              ReEnc (
                                 
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                       
                                          ∗
                                       
                                    
                                    ,
                                    
                                       
                                          K
                                       
                                       
                                          j
                                       
                                    
                                 
                              ) After receiving all the semi-finished indexes of mobile users, the agency re-encrypts them to get the indexes and finally outsources them to the cloud server. Specifically, for 
                                 
                                    
                                       
                                          U
                                       
                                       
                                          j
                                       
                                    
                                 
                              , after receiving 
                                 
                                    (
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                       
                                          ∗
                                       
                                    
                                    ‖
                                    
                                       
                                          ID
                                       
                                       
                                          
                                             
                                                U
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    )
                                 
                               the agency generates the index 
                                 
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                    
                                 
                               as follows:
                                 
                                    (3)
                                    
                                       
                                          
                                             I
                                          
                                          
                                             j
                                          
                                       
                                       =
                                       
                                          
                                             K
                                          
                                          
                                             j
                                          
                                          
                                             T
                                          
                                       
                                       ·
                                       
                                          
                                             I
                                          
                                          
                                             j
                                          
                                          
                                             ∗
                                          
                                       
                                       =
                                       
                                          
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   j
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             M
                                             ,
                                             
                                                
                                                   M
                                                
                                                
                                                   j
                                                
                                                
                                                   ′
                                                   -
                                                   1
                                                
                                             
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                
                                             
                                             )
                                          
                                          
                                             T
                                          
                                       
                                       ·
                                       (
                                       
                                          
                                             M
                                          
                                          
                                             j
                                          
                                          
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             j
                                          
                                          
                                             ′
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                       =
                                       (
                                       
                                          
                                             M
                                          
                                          
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             ′
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                 
                              Then the agency outsources 
                                 
                                    (
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                    
                                    ‖
                                    
                                       
                                          ID
                                       
                                       
                                          
                                             
                                                U
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    )
                                 
                               to the cloud server.


                              GenTrapdoor (
                                 
                                    
                                       
                                          F
                                       
                                       
                                          ∼
                                       
                                    
                                    ,
                                    S
                                    ,
                                    M
                                    ,
                                    
                                       
                                          M
                                       
                                       
                                          ′
                                       
                                    
                                 
                              ) When a search entity needs to query the encrypted indexes, firstly, it generates the search feature set 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          ∼
                                       
                                    
                                 
                               for searching. Then, it creates an m-dimensional binary vector Q according to 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          ∼
                                       
                                    
                                 
                              , where 
                                 
                                    Q
                                    [
                                    i
                                    ]
                                 
                               indicates whether the i-th feature of dictionary 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          i
                                       
                                    
                                 
                               is in 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          ∼
                                       
                                    
                                 
                              , i.e., 
                                 
                                    Q
                                    [
                                    i
                                    ]
                                    =
                                    1
                                 
                               indicates yes and 
                                 
                                    Q
                                    [
                                    i
                                    ]
                                    =
                                    0
                                 
                               indicates No. Then the search entity can split Q into two m-dimensional vectors 
                                 
                                    (
                                    
                                       
                                          q
                                       
                                       
                                          a
                                       
                                    
                                    ,
                                    
                                       
                                          q
                                       
                                       
                                          b
                                       
                                    
                                    )
                                 
                              : if 
                                 
                                    S
                                    [
                                    i
                                    ]
                                    =
                                    0
                                 
                               
                              
                                 
                                    (
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                    )
                                 
                              , the value of 
                                 
                                    Q
                                    [
                                    i
                                    ]
                                 
                               will be randomly split into 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          a
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               and 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          b
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                              ; if 
                                 
                                    S
                                    [
                                    i
                                    ]
                                    =
                                    1
                                 
                               
                              
                                 
                                    (
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                    )
                                    ,
                                    
                                       
                                          q
                                       
                                       
                                          a
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               and 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          b
                                       
                                    
                                    [
                                    i
                                    ]
                                 
                               are both set as 
                                 
                                    Q
                                    [
                                    i
                                    ]
                                 
                              . Thus, the trapdoor 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          
                                             
                                                F
                                             
                                             
                                                ∼
                                             
                                          
                                       
                                    
                                 
                               can be generated as
                                 
                                    (4)
                                    
                                       
                                          
                                             T
                                          
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   ∼
                                                
                                             
                                          
                                       
                                       =
                                       (
                                       
                                          
                                             M
                                          
                                          
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             q
                                          
                                          
                                             a
                                          
                                       
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             ′
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             q
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                 
                              
                           


                              Query (
                                 
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    
                                       
                                          T
                                       
                                       
                                          
                                             
                                                F
                                             
                                             
                                                ∼
                                             
                                          
                                       
                                    
                                 
                              ) Before searching, the cloud server will store all the indexes previously. After receiving a trapdoor, it can calculate the matching score between the trapdoor 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          
                                             
                                                F
                                             
                                             
                                                ∼
                                             
                                          
                                       
                                    
                                 
                               and the index 
                                 
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                    
                                 
                               as follow:
                                 
                                    (5)
                                    
                                       Score
                                       (
                                       
                                          
                                             T
                                          
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   ∼
                                                
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             I
                                          
                                          
                                             j
                                          
                                       
                                       )
                                       =
                                       
                                          
                                             I
                                          
                                          
                                             j
                                          
                                          
                                             T
                                          
                                       
                                       ·
                                       
                                          
                                             T
                                          
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   ∼
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             (
                                             
                                                
                                                   M
                                                
                                                
                                                   T
                                                
                                             
                                             
                                                
                                                   p
                                                
                                                
                                                   a
                                                
                                             
                                             ,
                                             
                                                
                                                   M
                                                
                                                
                                                   ′
                                                   T
                                                
                                             
                                             
                                                
                                                   p
                                                
                                                
                                                   b
                                                
                                             
                                             )
                                          
                                          
                                             T
                                          
                                       
                                       ·
                                       (
                                       
                                          
                                             M
                                          
                                          
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             q
                                          
                                          
                                             a
                                          
                                       
                                       ,
                                       
                                          
                                             M
                                          
                                          
                                             ′
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             q
                                          
                                          
                                             b
                                          
                                       
                                       )
                                       =
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ·
                                       
                                          
                                             q
                                          
                                          
                                             a
                                          
                                       
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       ·
                                       
                                          
                                             q
                                          
                                          
                                             b
                                          
                                       
                                       =
                                       
                                          
                                             P
                                          
                                          
                                             j
                                          
                                       
                                       ·
                                       Q
                                    
                                 
                              The larger score indicates the corresponding index 
                                 
                                    
                                       
                                          I
                                       
                                       
                                          j
                                       
                                    
                                 
                               is more relevant to the search feature set 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          ∼
                                       
                                    
                                 
                              , hence the identity collection of mobile users with top scores 
                                 
                                    ID
                                 
                               can be chosen. And the corresponding result will be returned to the search entity:
                                 
                                    (6)
                                    
                                       result
                                       =
                                       Enc
                                       (
                                       ID
                                       )
                                    
                                 
                              where 
                                 
                                    Enc
                                    (
                                    )
                                 
                               can be a symmetric encryption algorithm (e.g., AES [15]) shared between the cloud server and the search entity. Since the symmetric encryption algorithm is not our focus, we do not detail.

Many searchable schemes based on the secure kNN computation adopt the previous method to query the encrypted documents [12,8], i.e., using a binary vector to create a query. However, it is very imprecise to set all the bits as only 0 and 1. For the search entity, some features may be more important than others. To achieve more precise search, the value of each dimension should not be the same. But it is usually difficult for a search entity to express its information need precisely; thus the value defined by itself may not be accurate. To overcome this impreciseness, the technique of relevance feedback is used [9–11].

It is the process of automatically adjusting an existing query using information feedback by the search entity about the preference of previously retrieved documents.

Do not change any phase of our previous scheme, we use relevance feedback technique to optimize the query vector by replacing each dimension with preference weight of feature. One method is Rocchio 
                     [16]:
                        
                           (7)
                           
                              
                                 
                                    Q
                                 
                                 
                                    opt
                                 
                              
                              =
                              Q
                              +
                              β
                              
                                 
                                    
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   N
                                                
                                                
                                                   R
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                                ∈
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      R
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             P
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                              
                              -
                              γ
                              
                                 
                                    
                                       
                                          
                                             1
                                          
                                          
                                             
                                                
                                                   N
                                                
                                                
                                                   N
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                                ∈
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             P
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 N
                              
                              
                                 R
                              
                           
                        
                      is the number of relevant mobile users 
                        
                           
                              
                                 U
                              
                              
                                 R
                              
                           
                        
                      in the returned result set and 
                        
                           
                              
                                 N
                              
                              
                                 N
                              
                           
                        
                      is the number of non-relevant ones 
                        
                           
                              
                                 U
                              
                              
                                 N
                              
                           
                           ;
                           
                              
                                 P
                              
                              
                                 j
                              
                           
                        
                      is feature vector of mobile user 
                        
                           
                              
                                 U
                              
                              
                                 j
                              
                           
                           ;
                           β
                        
                      and γ are suitable constants [9,10]. In Rocchio method, the search entity can define its preference weights according to the feature vectors retrieved in advance. The optimal query 
                        
                           
                              
                                 Q
                              
                              
                                 opt
                              
                           
                        
                      can be created by putting more weights on the relevant features and less weights on the non-relevant features.

Therefore, to define the preference weight using the historical information, the cloud server should not only send the identities of the most matching mobile users, but also return the feature vectors of them, i.e., the query result should be
                        
                           (8)
                           
                              result
                              =
                              Enc
                              (
                              ID
                              )
                              |
                              |
                              
                                 
                                    
                                       ⋃
                                    
                                    
                                       
                                          
                                             ID
                                          
                                          
                                             
                                                
                                                   U
                                                
                                                
                                                   j
                                                
                                             
                                          
                                       
                                       ∈
                                       ID
                                    
                                 
                              
                              
                                 
                                    I
                                 
                                 
                                    j
                                 
                              
                           
                        
                     After receiving the result set, the search entity can decrypt 
                        
                           
                              
                                 I
                              
                              
                                 j
                              
                           
                        
                      using 
                        
                           (
                           M
                           ,
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                           )
                        
                      and obtain the feature vectors of the mobile users. Further, the search entity can use the feature vectors to personalize its query vector generated later.

In this section, we will analysis the security properties of our proposed scheme. In particular, following the security requirements discussed earlier, our analysis will focus on how the proposed scheme can achieve privacy protection of index and query, and unlinkability of trapdoor. Because our proposal does not focus on protecting the access pattern, we do not analysis it in detail. More depth description can refer to [13].

In our scheme, both the index and the trapdoor are m-dimensional vectors, each dimension of index indicates whether the mobile user has a feature and each dimension of the trapdoor represents the preference weight of a search feature. Both the vectors are encrypted by the secure kNN computation scheme, and its security can refer to [7]. The cloud server can only know the inner product of the two vectors, but it cannot get any more information. Each dimension of vector has many possible values, thus the inner product appears a random number to the cloud server.

In general kNN search schemes, each user shares a same secret key 
                           
                              K
                              =
                              (
                              S
                              ,
                              
                                 
                                    M
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    M
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . However, it causes a security issue, i.e., key sharing. The trapdoor generated by a user can be decrypted by other users, which will disclose the privacy information of user. Therefore, we use an re-encryption agency to solve this problem in our mobile sensing scheme. We consider the security of the semi-finished index 
                           
                              
                                 
                                    I
                                 
                                 
                                    j
                                 
                                 
                                    ∗
                                 
                              
                           
                         generated by the mobile user. For each mobile user 
                           
                              
                                 
                                    U
                                 
                                 
                                    j
                                 
                              
                           
                        , it just has the part of the secret keys, i.e., 
                           
                              (
                              S
                              ,
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                        . And the invertible matrices of each user 
                           
                              (
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                         are different. Therefore, the semi-finished index of 
                           
                              
                                 
                                    U
                                 
                                 
                                    j
                                 
                              
                           
                         cannot be decrypted by the other mobile users. After being generated, the semi-finished index 
                           
                              
                                 
                                    I
                                 
                                 
                                    j
                                 
                                 
                                    ∗
                                 
                              
                           
                         is sent to the agency and re-encrypted by 
                           
                              
                                 
                                    K
                                 
                                 
                                    j
                                 
                              
                              =
                              (
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                                 
                                    -
                                    1
                                 
                              
                              M
                              ,
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                    -
                                    1
                                 
                              
                              
                                 
                                    M
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                        . Without the secret keys 
                           
                              (
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                                 
                                    M
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                         or 
                           
                              (
                              M
                              ,
                              
                                 
                                    M
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                        , the agency cannot get any information of the semi-finished index. Hence, our scheme can achieve privacy protection of index and trapdoor.

Although the cloud server cannot directly recover the features, some stronger security should be studied. We consider the linkability of trapdoor which may also cause disclose of privacy information. Under Known Background Model, we further consider (1) whether two trapdoors search the same feature; and (2) whether two features are simultaneously searched in a trapdoor.

In this model, the cloud server can possess the statistical information from a known comparable dataset which bears the similar nature to the targeting dataset.

For the first problem, our scheme adopts the relevance feedback technique to re-process the preference weight vector. The trapdoor would be affected by the previous retrieval features of mobile users. Due to the randomness of the retrieval result, even if two search feature sets are the same, the trapdoors will not be the same. Further, we consider a strong assumption that the search feature sets and the retrieval result are all the same. The trapdoors are also different due to the non-deterministic of secure kNN computation, i.e., Q is randomly split into two vectors 
                              
                                 (
                                 
                                    
                                       q
                                    
                                    
                                       a
                                    
                                 
                                 ,
                                 
                                    
                                       q
                                    
                                    
                                       b
                                    
                                 
                                 )
                              
                            according to the splitting indicator S.

And for the second problem, the preference weight vector is split into two random vectors which then are multiplied by two matrices 
                              
                                 M
                                 ,
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                              
                           . Even if the preference weight of a feature is leaked, it is impossible to calculate the weight of another feature. The security is proven in [7]. Therefore, it is also impossible to deduce whether two features are simultaneously searched in a trapdoor.

Hence, our scheme can achieve the unlinkability of trapdoor.

In summary, we present the comparison of security level in Table 2
                           . It can be seen that all schemes can achieve privacy protection of index and trapdoor. However, [17,18] use OPE [19] to encrypt their indexes, they cannot achieve the unlinkability of trapdoor very well because of the similarity relevance mentioned in [8].

@&#PERFORMANCE EVALUATION@&#

In this section, we evaluate the performance of the proposed scheme in terms of functionalities, computation and communication overhead. In this experiment, we apply a dataset National Science Foundation Research Awards Abstracts 1990–2003 [21], by randomly selecting some documents and treating the keywords of documents as their features. Our mobile terminals are running on Samsung Note 2 with 1638MHz CPU (Samsung Exynos 4412) and 2GB RAM, and other real-world experiments are running on Intel Core i5 3.2GHz system.

We compare functionalities between [17,18,12,20,8] and our scheme in Table 3
                        . As shown in Table 3, [17,18] can achieve ranked result which use OPE to encrypt their indexes, but they cannot achieve multi-keyword search over encrypted data. [12,20,8] use secure kNN computation or homomorphic encryption to encrypt their indexes, which can achieve multi-keyword search. However, they cannot support efficient searchable encryption over encrypted data for mobile sensing, because the computation and communication capabilities of mobile terminals is limited. Further, for the first time we introduce relevance feedback to personalize the query to achieve more accurate search.

We compare the computation and communication overhead with a searchable encryption scheme (TRSE) [8].

We consider the time cost for each mobile user or search entity to generate an index or a trapdoor. To create the index/trapdoor, firstly an m-dimensional vector should be chosen. And each dimension of the vector represents whether the corresponding feature is contained by the mobile user or the preference weight of feature in the search feature set. This vector will be encrypted by the secure kNN computation scheme, i.e., be spilt into two vectors according to the splitting indicator S and encrypted by two 
                              
                                 (
                                 m
                                 ×
                                 m
                                 )
                              
                            invertible matrices. We study whether the size of feature dictionary and the number of features user contained (or the number of query features) will affect the time cost for generating an index or a trapdoor. As shown in Fig. 2
                           a, when we set the number of containing/query features as 30, we can see the time cost is nearly linear with the size of feature dictionary. And in Fig. 2b, we can see when the size of feature dictionary is fixed, the time cost is not affected by the number of containing/query features any more. Therefore, we can learn that the key factor affecting the time cost is the size of feature dictionary. And further we can know that even though the size of feature dictionary is 200, the time cost for generating an index or a trapdoor is less than 10ms. This is really practical in the mobile environment. Considering the weak capability of mobile terminals, it is necessary to limit the computation overhead for generating the index or the trapdoor. Specifically, a search entity may search the feature frequently, thus it is more important to achieve computation efficiency. Our scheme can achieve more efficient search for mobile sensing.

In our scheme, all indexes generated by the mobile users should be re-encrypted by the agency. Firstly, the agency receives all semi-finished indexes, and then uses re-encryption keys 
                              
                                 K
                                 =
                                 {
                                 
                                    
                                       K
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       K
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       K
                                    
                                    
                                       N
                                    
                                 
                                 }
                              
                            to execute over them. We study how the time cost will be affected by the number of mobile users and the size of the feature dictionary. As shown in Fig. 3
                           a, when we set the size of feature dictionary as 
                              
                                 m
                                 =
                                 120
                              
                           , the time cost is nearly linear with the number of mobile users, and the same as the size of feature dictionary. Besides, even though the number of mobile users is very large, the performance of our scheme is efficient (i.e., the time cost is 47.3s when 
                              
                                 m
                                 =
                                 120
                              
                            and 
                              
                                 N
                                 =
                                 
                                    
                                       10
                                    
                                    
                                       6
                                    
                                 
                              
                           ). And if the outsourced indexes do not need to be updated, the re-encryption phase just needs to be executed once. Therefore, the time cost of re-encryption achieves efficiency.

As shown in Fig. 4
                           , we can see both the number of mobile users and the size of feature dictionary will affect the time cost of query. The overhead of query phase is nearly linear with both of them. Further, we can see the query time of our scheme is not more than 1s even if we choose 
                              
                                 
                                    
                                       10
                                    
                                    
                                       5
                                    
                                 
                              
                            mobile users and 120 features. Note that, the query phase is run on the cloud server, which possesses high performance and large storage capability. Therefore, such computation overhead is almost negligible.

We mainly focus on the communication overhead of the index/trapdoor generation phase and the result return phase. These phases may be executed on a mobile terminal, which pays more attention about the communication cost.

Since the size of the index is the same as the trapdoor, we do not distinguish them. As shown in Fig. 5
                           , we can see that the size of index/trapdoor is nearly linear with the size of feature dictionary. When the size of dictionary is set as 
                              
                                 m
                                 =
                                 120
                              
                           , the size of index/trapdoor is 960B. However, in TRSE [8], the communication is more heavy due to ciphertext size of homomorphic encryption. Hence, our scheme achieves communication efficiency.

After querying, the cloud server returns a result collection to the search entity. We consider whether the size of feature dictionary and the number of returned records affect the size of result. Assume that the length of mobile user identity is 30bits. As shown in Fig. 6
                           , we can see the size of result in our basic scheme can be almost negligible. And in the extended scheme, which introduces the relevance feedback to return preferable result, the communication overhead for returning result is nearly linear with the size of feature dictionary and the number of returned records. Therefore, our schemes achieve communication efficiency.

@&#RELATED WORKS@&#

Many mobile sensing schemes have been proposed to serve people’s lives. Chen et al. [22] present a fully asynchronous distributed algorithm based on dual decomposition. They formulate a flow control optimization problem for wireless sensor networks with lifetime constraint and link interference in an asynchronous setting. He et al. [23] use actors to maintain the quality of sensing in the wireless sensor networks. They introduce a baseline centralized greedy algorithm for sensor allocation, where global sensor information is communicated to obtain the optimal solution. He et al. [24] propose an efficient centralized truncated greedy algorithm to solve the challenge, to guarantee coverage and meanwhile maximize network lifetime, in wireless sensor networks.

Searchable encryption (e.g., [25,26,17,12,27,20,8]) has been recently developed as a fundamental approach to enable searching over encrypted cloud data. Wang et al. [17] propose a ranked keyword search scheme which considers the relevance scores of keywords, but it cannot achieve multi-keyword search. Cao et al. [12] propose a multi-keyword ranked search, which applies coordinate machine as the keyword matching rule, i.e., return data with the most matching keywords. Later, Sun et al. [20] propose a multi-keyword text search scheme which considers the relevance scores of keywords and utilizes a multidimensional tree technique to achieve efficient search query. Yu et al. [8] propose a multi-keyword top-k retrieval scheme which uses fully homomorphic encryption to encrypt the index/trapdoor and guarantees high security. However, these schemes cannot achieve efficient searchable encryption over encrypted data for mobile sensing. In many previous SSE works (e.g., [17,20,8,28,29]), keywords are generated from their outsourced documents. Only with the keywords, the encrypted data can be searched securely. In these schemes, more documents outsource to the cloud, more keywords should be generated and encrypted. But in our mobile sensing scheme, the features represent the state of mobile user. Firstly, we do not need to outsource any encrypted document to the cloud, but only securely outsource mobile user’s state to get more personalized services. Secondly, all features of one mobile user will be aggregated to a vector, it is more efficient compared with general searchable encryption schemes which generate a vector for each outsourced document.

@&#CONCLUSION@&#

In this paper, we propose an efficient and privacy-preserving multi-feature search scheme for mobile sensing. Our scheme can achieve low overhead of mobile terminals. Further, we propose an extended scheme, which can personalize query based on historical search information and return more preference result. The security analysis proves the security of the developed scheme on privacy protection of index and trapdoor and unlinkability of trapdoor. And with extensive experiment on real-world cloud systems, we validate the performance of the proposed scheme. The experimental results show that our schemes can achieve high performance in terms of functionality, computation and communication overhead.

@&#ACKNOWLEDGMENTS@&#

This work is supported by the National Natural Science Foundation of China under Grants 61472065, 61350110238, 61103207, U1233108, U1333127, and 61272525, the International Science and Technology Cooperation and Exchange Program of Sichuan Province, China under Grant 2014HH0029, China Postdoctoral Science Foundation funded project under Grant 2014M552336, and State Key Laboratory of Information Security Open Foundation under Grant 2015-MS-02.

@&#REFERENCES@&#

