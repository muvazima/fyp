@&#MAIN-TITLE@&#A new proposal for fusing individual preference orderings by rank-ordered agents: A generalization of the Yager's algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The paper faces the problem of combining multi-agent preference orderings.


                        
                        
                           
                           The specific decision-making problem can be denominated as “ordinal semi-democratic”.


                        
                        
                           
                           A variant of the Yager's algorithm is proposed and discussed.


                        
                        
                           
                           The description of the new algorithm is supported by practical examples.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Preference ordering

Decision making

Aggregation

Multi-agent

Ordinal semi-democratic

@&#ABSTRACT@&#


               
               
                  The problem of the aggregation of multi-agents preference orderings has received considerable attention in the scientific literature, because of its importance for different fields of research. Yager (2001) proposed an algorithm for addressing this problem when the agents’ importance is expressed through a rank-ordering, instead of a set of weights. The algorithm by Yager is simple and automatable but is subject to some constraints, which may limit its range of application: (i) preference orderings should not include incomparable and/or omitted alternatives, and (ii) the fused ordering may sometimes not reflect the majority of the multi-agent preference orderings.
                  The aim of this article is to present a generalized version of the algorithm by Yager, which overcomes the above limitations and, in general, is adaptable to less stringent input data. A detailed description of the new algorithm is supported by practical examples.
               
            

@&#INTRODUCTION@&#

A general problem, which may concern practical contexts of different nature, is to aggregate multi-agent orderings of different alternatives into a single fused ordering. Considering the example in Table 1
                     , M decision-making agents
                        1
                     
                     
                        1
                        By a decision-making agent we will consider any of a wide variety of different types of entities. Examples could be human beings, individual criteria in a multi-criteria decision process, software based intelligent agents on the Internet, etc.
                      (D
                     1 to D
                     M) formulate preference orderings among n alternatives of interest (a, b, c, d, etc.). Each ordering allows statements like a > b, a ∼ b, b > a, where symbols “>” and “∼” respectively mean “strictly preferred to” and “indifferent to”. The objective is to aggregate the M agents’ orderings into a single fused one, which should reflect them as much as possible, even in the presence of diverging preferences. For this reason, the fused ordering can also be defined as consensus or compromise ordering (Cook, 2006; Herrera-Viedma, Cabrerizo, Kacprzyk, & Pedrycz, 2014). Aggregation should also take into account the agents’ importance, which is not necessarily equal for all of them.

This decision-making problem is very diffused in a variety of real-life contexts, ranging from multi-criteria decision aiding/making to social choice theory (Kelly, 1991); as an example, Table 2
                      illustrates some practical applications. Two of the reasons for this diffusion are that (i) preference orderings are probably the most intuitive and effective way to represent preference judgments of alternatives, and (ii) they do not require a common reference scale – neither numeric, linguistic or ordinal – to be shared by the interacting agents (Chen, Liu, Wang, & Augusto, 2012; Yager, 2001).

The literature embraces a variety of aggregation techniques, which are relatively interchangeable among the fields of application. Despite this variety, they can generally be divided in two categories (Arrow & Rayanaud, 1986):

                        
                           1.
                           Methods in which all agents have the same importance (Zhu, 2003); e.g., let us consider the classical approaches in the voting theory field (Borda, 1781; Condorcet, 1785; Lepelley & Martin, 2001);

Methods in which agents have recognized abilities and attributes and/or privileged positions of power, represented by weights (Dubois, Godo, & Prade, 2012; Xu, 2004); e.g., let us consider the ELECTRE or the PROMETHEE methods, in the multicriteria decision aiding/making field (Brans & Mareschal, 2005; Figueira, Greco, & Ehrgott, 2005).

Considering the second category methods, the definition of the agents’ weights is a very delicate issue. In some settings, the weight of an agent may be well defined; for example, the Gross National Product (GNP) or population size of a country represented by the member on an International committee can immediately be used as weights. In many situations the definition of the weights is controversial, because there are no indisputable criteria or substitution rates that can be used for this operation. Weights are often imposed by decision-makers, according to political strategies (Wang, Liang, & Qian, 2014). For example, the scientific committee of a competitive examination for promotion of faculty members may decide that the scientific publications will account for 40 percent of the total performance, the International projects for 20 percent, the teaching activity for 35 percent, etc.

The literature includes several techniques about the quantification of weights. For example, the AHP procedure uses the eigenvector method to derive a weight vector relating to agents (Saaty, 1980), or the method proposed by Martel and Ben Khelifa (2000) determines the so-called “relative importance coefficient” of each agent, based on the combination of subjective and objective components.

In some settings, weights are not available or cannot be defined on cardinal scales. In these cases, the importance hierarchy of agents may be expressed by a rank-ordering, such as D
                     1 > (D
                     2 ∼ D
                     3) > … > D
                     M (Yager, 2001). When the agent importance prioritization is doubtful, the formulation of orderings is certainly simpler and more intuitive than that of weights (Chen et al., 2012).

In the remainder of this paper we will focus on a specific aggregation problem in which the agents’ importance is expressed through a rank-ordering. This decision-making framework can be denominated as “ordinal semi-democratic”; the adjective “semi-democratic” indicates that agents do not necessarily have the same importance, while “ordinal” indicates that their rank is defined by a crude ordering. This makes the set of the possible solutions relatively wide, since they may range between the two extreme situations of (i) full dictatorship – in which the resulting fused ordering coincides with the preference ordering by the most important agent (dictator) – and (ii) full democracy – where the agents’ preference orderings are considered as equi-important.

In spite of its practicality and adaptability to a large number of practical contexts, this specific decision-making problem is almost completely ignored in the literature. Over ten years ago, Yager (2001) proposed an algorithm (hereafter abbreviated as YA, which stands for Yager's Algorithm) to address this problem in a relatively simple, fast and automatable way. Unfortunately, this algorithm has two important limitations: (i) the resulting fused ordering may sometimes not reflect the preference ordering for the majority of agents (Jianqiang, 2007) and (ii) it is only applicable to linear orderings, without incomparabilities and omissions of the alternatives of interest (see the example in Fig. 1(
                     a)). These two limitations will be clarified in the next section.

The objective of this paper is to enhance the YA so as to overcome its limitations and adapt to less stringent preference orderings (e.g., like the partial ordering exemplified in Fig. 1(b)). The new algorithm can be interpreted as a generalization of the YA. For this reason, it will be denominated as “Generalized (Yager's) Algorithm”, hereafter abbreviated as GYA.

The remainder of the paper is organized into three sections. Section 2 recalls the YA in detail, with special attention to its limitations. Section 3 illustrates the GYA, highlighting its advantages with respect to the YA. The description of both algorithms is supported by practical examples. For a structured comparison between the two algorithms, we will use a taxonomy based on four evaluation criteria (i.e., versatility, consistency, efficiency and computational complexity), defined and described in Table 3.
                     
                  

The concluding section summarizes the original contributions of this paper and its practical implications, limitations and suggestions for future research.

In Section 2.1 we take the liberty to illustrate the algorithm by Yager from a “pedagogical” point of view. For a more rigorous description, we refer the reader to the original contribution by Yager (2001). Section 2.2 discusses the (dis)advantages of this algorithm, from the perspective of the criteria in Table 3.
                  

The algorithm can be schematized in three basic phases (mentioned in Table 4
                        ) which are described individually in the next three sub-sections.

The goal of this phase is building preference vectors based on the linear preference orderings by the agents. For each agent's vector, we place the alternatives as they appear in the ordering, with the most preferred one(s) in the top position. If at any point t > 1 alternatives are tied (i.e., indifferent), we place them in the same element and then place the null set (“Null”) in the next t – 1 lower positions. For example, when considering three alternatives (a, b and c) with the ordering (a ∼ b) > c, the resulting vector will conventionally be [{a ∼ b}, Null, {c}]T. By adopting this convention, the number (n) of elements of a vector will coincide with the number of alternatives of interest.

Considering four fictitious agents (D
                           1 to D
                           4), with four relevant orderings of six alternatives (a, b, c, d, e and f), and assuming a certain hierarchical ordering between agents (i.e., D
                           4 > (D
                           2 ∼ D
                           3) > D
                           1), the resulting preference vectors can be constructed as shown in Table 5
                           . For simplicity, vectors will be denominated as the relevant agents (i.e., Di
                           , where subscript “i” denotes the order number of agents, therefore 
                              
                                 i
                                 ∈
                                 {
                                 
                                    1
                                    ,
                                    
                                    2
                                    ,
                                    …
                                    ,
                                    M
                                 
                                 }
                              
                           ).

Each vector element can be associated with an indicator (Fi,j
                           ), given by the ratio between the position/level (j) of the element (from the bottom) and the total number of elements (n = 6 in the case exemplified). Since Fi,j
                            corresponds to the cumulative relative frequency of the alternatives contained in a certain element of the preference vector, it can be interpreted as a relative-position indicator.

Next, preference vectors are transformed into “reorganized” vectors, conventionally denominated as 
                              
                                 D
                                 i
                                 *
                              
                           , where subscript “i” denotes the order number of the reorganized vectors (
                              
                                 i
                                 ∈
                                 {
                                 
                                    1
                                    ,
                                    
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                 
                                 }
                              
                           , m being the total number). This transformation consists in (i) sorting the Di
                            vectors decreasingly with respect to the agents’ importance, (ii) aggregating those with indifferent importance (e.g., D
                           2 and D
                           3 in the example) into a single vector. This aggregation is performed through a level-by-level union of the vector elements, where alternatives in elements with the same (jth) position are considered as indifferent. The resulting 
                              
                                 D
                                 i
                                 *
                              
                            vectors will therefore have a strictly decreasing importance ordering.

Going back to the example in Table 5, the four vectors (D
                           1 and D
                           4) are turned into three reorganized vectors (
                              
                                 D
                                 1
                                 *
                              
                            to 
                              
                                 D
                                 3
                                 *
                              
                           , see Table 6
                           ). It can be noticed that 
                              
                                 D
                                 2
                                 *
                              
                            – given by the aggregation of two vectors with equal importance (i.e., D
                           2 and D
                           3) – contains two occurrences for each alternative.

Of course, m will be smaller than or equal to M (3 against 4 in the example presented).

This phase defines a sequence for reading the elements of the 
                              
                                 D
                                 i
                                 *
                              
                            vectors; see the representation through the flowchart in Fig. 2(a). The sequence defines a bottom-up level-by-level reading of vector elements. The first elements read are those with lowest position (j = 1). When considering elements with the same (jth) position, priority is given to the vectors of greater importance. After having read all the elements with (jth) position, we move up to the (j+1)th position, repeating the reading sequence. Table 6 reports the sequence numbers (S) associated with each element of the reorganized vectors.

This phase is aimed at determining a fused ordering through a gradual selection of the alternatives, in which the last elements of the ordering are those positioned in the lowest positions of 
                              
                                 D
                                 i
                                 *
                              
                            vectors and vice versa.

The flow-chart in Fig. 2(b) illustrates the algorithm for constructing the fused ordering. This algorithm can be classified as an AND-ing type as a generic alternative is excluded from a higher position of the fused ordering when it is in a lower position in (at least) one of the individual preference orderings. Reversing the perspective, for an alternative to be in a higher position of the fused ordering, it should be in a higher position for any of the individual orderings (i.e., AND relationship).

Applying the algorithm to the vectors in Table 6, the resulting fused ordering is: a > b > d > e > c > f.


                           Table 7
                            shows the gradual construction of the fused ordering; the first two columns report the S value of the element of interest and the alternative(s) that it contains, while the last two report the alternatives not yet included in the gradual ordering and the gradual ordering itself.


                           Yager (2001) points out that the construction of the fused ordering could also be based on a top-down reading sequence, instead of bottom-up (see Section 2.1.2) In this other case, the level-by-level reading of the vector elements would be analogous to that one illustrated in Fig. 2(a), except that it would begin from the elements with highest position (j = n), gradually moving down to the lower levels (i.e., j = n – 1, j = n – 2, and so on). Also, the gradual insertion of the alternatives into the fused ordering would be performed according to an increasing preference order (i.e., from the most preferred to the least preferred), instead of decreasing. For the purpose of example, the fused ordering resulting from this alternative approach would be: a > (b ∼ c) > (d ∼ e) > f. This alternative approach can be classified as OR-ing type, as for an alternative to be in a higher position of the fused ordering, it should be in a higher position for at least one of the preference orderings (i.e., OR relationship).

Yager states that the implementation of an OR-ing would produce a fused ordering “that is compatible with at least one of the individual (preference) orderings”, while that of an AND-ing a fused ordering “that is compatible with all the individual orderings” (Yager, 2001, page 4), suggesting that the latter approach is better than the former.

@&#DISCUSSION@&#

The fusion technique proposed by Yager is simple, automatable and potentially interesting for a number of applications (Yager, 2001). Unfortunately, the YA has some weak points which, to some extent, may limit its applicability. We try to bring out these limitations through a detailed discussion, from the perspective of the criteria presented in Table 3.
                     

The first criterion – i.e., algorithm's versatility – can be analyzed from two angles: (i) that of the M agents’ individual preference orderings and (ii) that of the agents’ rank-ordering. As regards preference orderings, the YA is applicable to (non-strict
                           2
                        
                        
                           2
                           The adjective “non-strict” means that these orderings allow the relationship of indifference (“∼”) between alternatives. For simplicity, the adjective will be omitted hereafter.
                        ) linear orderings only, where no alternatives are omitted and any two alternatives are comparable. This point deserves special attention. In formal terms, borrowed from Mathematics’ Order Theory, a linear ordering satisfies three properties (Nederpelt & Kamareddine, 2004):

                           
                              (1)
                              
                                 
                                    T
                                    o
                                    t
                                    a
                                    l
                                    i
                                    t
                                    y
                                    :
                                    
                                    a
                                    ≥
                                    b
                                    
                                    or
                                    
                                    b
                                    >
                                    a
                                    ,
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    A
                                    n
                                    t
                                    i
                                    s
                                    y
                                    m
                                    m
                                    e
                                    t
                                    r
                                    y
                                    :
                                    
                                    i
                                    f
                                    
                                    a
                                    ≥
                                    b
                                    
                                    and
                                    
                                    b
                                    ≥
                                    a
                                    
                                    then
                                    
                                    a
                                    =
                                    b
                                    ,
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    T
                                    r
                                    a
                                    n
                                    s
                                    i
                                    t
                                    i
                                    v
                                    i
                                    t
                                    y
                                    :
                                    
                                    i
                                    f
                                    
                                    a
                                    ≥
                                    b
                                    
                                    and
                                    
                                    b
                                    ≥
                                    c
                                    
                                    then
                                    
                                    a
                                    ≥
                                    c
                                    ,
                                 
                              
                           
                        where a, b and c are three generic alternatives and the symbol “≥” denotes the “strict preference or indifference” relationship.

A generic linear ordering can be diagrammed as an acyclic line or chain of elements containing the alternatives of interest, linked by arrows depicting the strict preference relationship (see the example in Fig. 1(a)). In this conventional representation, the most preferred alternatives are positioned at the top. It can be seen than two generic alternatives are always comparable, since there exist a path from the first to the second one (or vice versa) that is directed downwards. In other words, each element has an immediate predecessor and successor element, except the first and the last one, with no predecessor and successor respectively.

Having said that, to fit a relatively large amount of practical contexts, the general decision-making problem should admit orderings in which some alternatives are omitted and/or incomparable with each other (Chen, Liu, Wang, & Augusto, 2013). In formal terms, any two alternatives in one agent's ordering should not necessarily satisfy the property of totality (in Eq. (1)) – which states that each alternative should be comparable with the other ones – but just the property of reflexivity – which states that each alternative should be comparable with itself:

                           
                              (4)
                              
                                 
                                    Reflexivity
                                    :
                                    
                                    a
                                    ≥
                                    a
                                    .
                                 
                              
                           
                        
                     

According to the Mathematics’ Order theory, an ordering that satisfies the three properties of reflexivity, antisymmetry and transitivity (in Eqs. (4), (2) and (3) respectively) is classified as partial (Nederpelt & Kamareddine, 2004). This type of ordering can be diagrammed as a graph with branches, which determine different possible paths from the element(s) at the top to that one(s) at the bottom (see the example in Fig. 1(b)). If two alternatives are not comparable, there exists no direct path from the first to the second one (or viceversa); e.g., in Fig. 1(b), b and h are incomparable since they lie along paths A and C respectively.

Shifting our focus on the agents’ rank-ordering, it can be shown that the YA may lose its effectiveness in the case of full democracy. For example, let us assume that all the four preference orderings in Table 5 are equi-important. In the case of bottom-up reading of the preference vectors, the resulting fused ordering would be (a ∼ b) > (d ∼ e) > (c ∼ f), which lacks in discrimination power, since it contains nothing less than three relationships of indifference (for six total alternatives).

Considering the consistency criterion, the YA is somehow weak since, as noted by Jianqiang (2007), the fused ordering does not necessarily reflect the preference ordering for the majority of agents. This aspect is evident when comparing the fused ordering and the individual preference orderings at the level of paired comparisons (Chiclana, Herrera, & Herrera-Viedma, 1998, 2002, 2009); e.g., for agents D
                        2, D
                        3 and D
                        4 (which, by the way, are all more important than D
                        1), c > d and c > e, while in the fused ordering these relationships are reversed. Among the fifteen (i.e., 
                           
                              C
                              2
                              
                                 n
                                 =
                                 6
                              
                           
                        ) overall paired comparisons, four – i.e., more than 25 percent! – look inconsistent or dubious (see Table 8). A more refined technique for checking the consistency of the fused ordering, in ordinal semi-democratic decision-making problems, is presented in (Franceschini & Maisano, 2015).

These inconsistencies are due to the logic of selection of the alternatives in the fused ordering. This logic is rather drastic as the occurrence of one alternative in a low position – even for a single preference ordering – can determine a very low position in the fused ordering. E.g., in the example in Table 5, c is in the penultimate position of the fused ordering as it was relegated by D
                        1 (the least important agent) at the bottom of the preference ordering.

The YA does not seem to perform very well from the viewpoint of efficiency, since it tends to overlook the upper positions of the preference orderings; e.g., the fused ordering was determined after having read just eleven out of eighteen total elements; in particular, the two top levels of the preference vectors have been totally ignored (see Table 7). This is another effect of the rather questionable mechanism of selection of the alternatives at the first occurrence in the reading sequence.

Regarding the computational complexity, a rough quantitative evaluation was performed by measuring the number of operations required by the two algorithms, being M the number of agents and n the number of alternatives. Not surprisingly, the total computation time was roughly proportional to both M and n: o(M·n).

Having analyzed in detail the YA from the perspective of the criteria presented in Table 3, we remark that a rather strong simplifying assumption in the model is that alternatives from different preference vectors are compared on level-by-level basis. This entails that alternatives in vector elements with the same Fi,j
                         value are supposed to have the same degree of preference.

Based on the considerations above, authors think that the YA should be enhanced significantly in order to overcome its limitations and be adaptable to a wider range of practical contexts.

In Section 3.1 we introduce the GYA, supporting the description by a practical example. Section 3.2 discusses the advantages of the GYA with respect to the YA, from the perspective of the criteria in Table 3 and some popular axioms borrowed from social choice theory.

The GYA can be decomposed in the same three phases reported in Table 4, which are individually described in the following sub-sections.

When preference orderings contain incomparable alternatives, the construction of preference vectors is more complicated than for the YA. The first step is to transform each preference ordering with incomparabilities into a set of linear sub-orderings. Precisely, each of these orderings can be artificially split into t linear sub-orderings, corresponding to the possible paths from the top element(s) to the bottom one(s). Obviously, the number of paths depends on the configuration of the relevant graph (e.g., amount and position of the branches). For the purpose of example, let us consider the preference orderings illustrated in Fig. 3
                           ; the agents’ importance ordering is assumed to be D
                           4 > (D
                           2 ∼ D
                           3) > D
                           1. It can be noticed that the partial ordering by agent D
                           1 includes two possible paths (A and B); therefore, the ordering is turned into two linear sub-orderings, D
                           1A and D
                           1B.

The authors are aware that the existing literature includes several techniques for turning partial orderings into linear ones (Marczewski, 1930). It was decided to adopt the above-described technique since it is simple and well-suited to the next steps.

Each alternative in the sub-orderings is associated with a conventional number of occurrences, fractionalized with respect to the number of sub-orderings where the alternative is present. E.g., for c and b, the fractional number of occurrences is 1/2 as these alternatives are contained in both the sub-orderings D
                           1A and D
                           1B (see Fig. 3). The importance associated with each linear sub-ordering is that of the relevant source partial ordering.

The decomposition illustrated must be applied to all the preference orderings with incomparabilities. As an additional example, the ordering in Fig. 1(b) would produce three sub-orderings, related to the three possible paths: a > b > d > f > i for path A, a > e > f > i for path B, a > (g ∼ h) > i for path C; the fractional number of occurrences of a and i would be 1/3 while that of f would be 1/2.

Next, the linear (sub-)orderings are turned into preference vectors, according to the convention seen in Section 2.1.1. Table 9 exemplifies the construction of the preference vectors from the orderings in Fig. 3. Although there are six total alternatives (a, b, c, d, e and f), some of them may be omitted in a certain ith vector; therefore the number of elements (ni
                           ) can change from a vector to one other. Each vector element is associated with a relative-position indicator given by the cumulative relative frequency Fi
                           
                           ,
                           
                              j
                            – i.e., the ratio between the position (j) of an element – starting from the bottom – and ni
                           .

The vector reorganization stage is more complicated than for the YA. Di
                            vectors are sorted decreasingly with respect to their importance, and then those with indifferent importance are aggregated. For example, D
                           2 and D
                           3 have the same importance, so they are aggregated; the same applies to D
                           1A and D
                           1B.

The elements of the vectors with indifferent importance are merged and sorted in descending order with respect to their Fi
                           
                           ,
                           
                              j
                            values. When two (or more) elements have the same Fi
                           
                           ,
                           
                              j
                            value, the alternatives that they contain are considered as indifferent. After this reorganization, the resulting vectors are conventionally denominated as 
                              
                                 D
                                 i
                                 *
                              
                            – where subscript “i” denotes the order number of the reorganized vectors; 
                              
                                 i
                                 ∈
                                 {
                                 
                                    1
                                    ,
                                    
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                 
                                 }
                              
                           , m being the total number – and the relevant (merged) Fi
                           
                           ,
                           
                              j
                            values as 
                              
                                 F
                                 
                                    i
                                    ,
                                    j
                                 
                                 *
                              
                            (see Table 10
                           ).

The mechanism for aggregating preference vectors is represented schematically in Fig. 4
                           . Since the elements of a vector have an ordinal relationship, the concept of “distance” is meaningless (Roberts, 1979). Vector aggregation is performed by using the information on the relative position (i.e., Fi
                           
                           ,
                           
                              j
                           ) of the elements in the source vectors. The underlying assumption is that the degree of preference of the alternatives in different preference vectors depends on their relative position. For a certain aggregated vector, 
                              
                                 F
                                 
                                    i
                                    ,
                                    j
                                 
                                 *
                              
                            values reflect the position of the elements in the new source vectors.

A potential problem of this mechanism is that the alternatives contained in elements with identical Fi
                           
                           ,
                           
                              j
                            values are considered as indifferent, while those in elements with non-identical Fi
                           
                           ,
                           
                              j
                            values (although very close to each other) not. This logic could be refined by introducing suitable preference/indifference thresholds.

It's interesting to note that, in the case preference vectors have the same number of elements, this aggregation “degenerates” into the level-by-level merging suggested by Yager.

The object of this phase is determining a sequence for reading the elements of the reorganized vectors. Likewise the YA, (i) vector elements can be read according to a bottom-up or top-down sequence and (ii) the importance of 
                              
                                 D
                                 i
                                 *
                              
                            vectors is taken into account when establishing the reading sequence. The flowchart in Fig. 5(
                           a) illustrates the algorithm for determining the reading sequence in the case of bottom-up approach.

The scheme in Fig. 6
                            visualizes the construction of this sequence for the vectors in Table 10; the decreasing intensity of the cells’ grey level depicts the sequence order, while arrows indicate the transition from one element to the next.

Let us now focus on the criterion for switching from one element to one other. The first element to be read is that with lowest position, in the most important vector (
                              
                                 D
                                 1
                                 *
                              
                           ). Having read a certain vector element, the next potentially readable 
                              
                                 D
                                 i
                                 *
                              
                            vectors are those for which the not-yet-read element with lowest position has 
                              
                                 F
                                 
                                    i
                                    ,
                                    j
                                 
                                 *
                              
                            lower than or equal to that of the last element read in the preceding vector (i.e., 
                              
                                 D
                                 
                                    i
                                    −
                                    1
                                 
                                 *
                              
                           ).

Reversing the perspective, a 
                              
                                 D
                                 i
                                 *
                              
                            vector is temporarily “locked” (i.e., it cannot be read) if the 
                              
                                 F
                                 
                                    i
                                    ,
                                    j
                                 
                                 *
                              
                            value of the not-yet-read element with lowest position overcomes that of the last element read in the preceding vector (see the example in Fig. 7
                           ). The set A includes the subscripts of the potentially readable (or “unlocked”) vectors. In formal terms:

                              
                                 (5)
                                 
                                    
                                       A
                                       =
                                       
                                          {
                                          
                                             i
                                             ∈
                                             
                                                {
                                                
                                                   2
                                                   ,
                                                   …
                                                   ,
                                                   m
                                                
                                                }
                                             
                                          
                                          }
                                       
                                       :
                                       
                                          F
                                          
                                             i
                                             ,
                                             min
                                             
                                                (
                                                
                                                   j
                                                   
                                                      :
                                                      not
                                                      −
                                                      yet
                                                      −
                                                      read
                                                   
                                                
                                                )
                                             
                                          
                                          *
                                       
                                       ≤
                                       
                                          F
                                          
                                             i
                                             −
                                             1
                                             ,
                                             max
                                             
                                                (
                                                
                                                   j
                                                   
                                                      :
                                                      read
                                                   
                                                
                                                )
                                             
                                          
                                          *
                                       
                                       .
                                    
                                 
                              
                           
                        

Among the vectors indicated in A, the one to be read is that with subscript:

                              
                                 (6)
                                 
                                    
                                       i
                                       
                                       =
                                       
                                       m
                                       i
                                       n
                                       
                                          (
                                          A
                                          )
                                       
                                       .
                                    
                                 
                              
                           
                        


                           Eq. (6) entails that, among the “unlocked” vectors, priority is given to the one of highest importance. Having determined the vector to be read, the next element is the one not-yet-read with lowest position. If there is no unlocked vector (i.e., A = “Null”), the next element is that (not-yet-read) with lowest position in the most important not-yet-completely-read vector. For example, having read the lowest element of 
                              
                                 D
                                 2
                                 *
                              
                           , there is no unlocked vector, therefore the next element to be read is the second lowest element of 
                              
                                 D
                                 1
                                 *
                              
                           . On the other hand, having read the second lowest element of 
                              
                                 D
                                 2
                                 *
                              
                           , there are two potentially readable vectors: 
                              
                                 D
                                 2
                                 *
                              
                            itself and 
                              
                                 D
                                 3
                                 *
                              
                           , since they both satisfy the condition in Eq. (5) (see the representation scheme in Fig. 7(b)). The set indicating the next possible vectors is therefore A = {2, 3}; 
                              
                                 D
                                 2
                                 *
                              
                            is then chosen, being the most important one.

The suggested sequencing strategy is midway between the two extremes of (i) full dictatorship – in which the fused ordering coincides with the preference ordering by the most important agent (dictator), neglecting the others – and (ii) full democracy – where all agents’ orderings are equi-important. A practical consequence of this strategy is that it gives priority to the preference vectors related to the most important agents and with a relatively high number of alternatives. The authors are aware that this is just one of the possible strategies for determining a reading sequence; in the case preference vectors have the same number of elements, it “degenerates” into that suggested by Yager.


                           Table 10 reports the full sequence numbers (S) associated with each element of the reorganized vectors.

The flow-chart in Fig. 5(b) illustrates the procedure for determining the fused ordering. A kth alternative is included into the fused ordering when the gradual number of occurrences (Ok
                           ) in the reading sequence reaches a certain threshold, i.e.:

                              
                                 (7)
                                 
                                    
                                       
                                          T
                                          
                                             k
                                             ,
                                             x
                                          
                                       
                                       =
                                       x
                                       ·
                                       
                                          O
                                          k
                                          
                                             T
                                             O
                                             T
                                          
                                       
                                       ,
                                    
                                 
                              
                           being x a conventional percentage of the total number of occurrences (
                              
                                 O
                                 k
                                 
                                    T
                                    O
                                    T
                                 
                              
                           ) of that alternative in the 
                              
                                 D
                                 i
                                 *
                              
                            vectors’ elements. Table 11
                            shows the Tk,x
                            values related to the alternatives; x was conventionally set to 50 percent. The use of Tk,x
                            avoids controversial results produced by the YA (which works as if Tk,x
                            = 1, ∀k), e.g., “relegating” an alternative (like c, in the example in Table 5) in the lower positions of the fused ordering just because it is in a lower position for one individual preference ordering. In general, it would be advisable to evaluate the robustness of the fused ordering with respect to (small) variations in Tk,x
                            by performing a sensitivity analysis (e.g., setting x = 40 percent, 50 percent and 60 percent and analyzing the possible variations in the fused ordering).

Applying the algorithm to the example in Table 9 and using the thresholds in Table 11, the fused preference ordering is: a > b > (d ∼ f) > c > e. Table 12
                            shows the step-by-step results; the last columns contains the gradual ordering.

@&#DISCUSSION@&#

This section presents an organic discussion of the GYA, from the perspective of the four criteria presented in Table 3.
                     

The GYA is significantly better than the YA in terms of versatility, since it admits preference orderings with omitted or incomparable alternatives. Also, the GYA can be applied effectively even when agents are equi-important (full democracy case). For the purpose of example, let us consider the same preference orderings presented in Table 9, under the assumption of equi-important agents. The individual orderings would be merged into a single “reorganized” vector (in Table 13(
                        a)) and the reading sequence of the vector elements would be trivial: i.e., from the bottom to the top. When using x = 50 percent, the resulting fused ordering would be a > b > (c ∼ f) > (d ∼ e) (see the step-by-step construction in Table 13(b)). This solution seems to have an acceptable discrimination power (i.e., it contains just two indifference relationships).

For a rough estimate of the GYA's consistency, we repeated the exercise done for the YA (see Section 2.2), i.e., we compared the fused ordering with the individual preference orderings, in terms of paired comparisons. The result is that all the paired comparisons – except two – seem consistent (see Table 14
                        ). This result is not an isolated coincidence, but depends on the fact that the AND-ing philosophy – which characterizes the YA – is mitigated significantly in the GYA: a kth alternative is excluded from the higher positions of the fused ordering when a predetermined portion (x) of its occurrences (not just a single one!) are in the lower positions of the individual preference orderings. Reversing the perspective, for an alternative to be in a higher position of the fused ordering, a portion of the occurrences larger than (1 − x) should be in the upper positions of the individual preference orderings.

For the purpose of further example, applying the GYA to the linear orderings introduced in Section 2.1 (Table 5), the resulting fused ordering would be: (a ∼ b) > c > d > e > f. This solution seems to reflect the source preference orderings better than that one resulting from the application of the YA (in Table 7), since c makes up two positions, consistently with its relatively high rank position in the majority of the preference orderings. Not surprisingly, the new solution would eliminate the YA's inconsistencies highlighted in Table 8.
                     

Another benefit of the GYA is the increased efficiency with respect to the YA; e.g., in the example illustrated in Section 3.2, the fused ordering is determined after having read the 80 percent of the total vector elements (i.e., sixteen out of twenty), not only those in the lower positions. This result is another consequence of the more gradual selection mechanism.

To focus more on the elements in the higher positions of the preference orderings, the bottom-up reading sequence of vector elements could be replaced with a top-down one. Section A1 (in appendix) contains a brief description of this variant with a practical example.

The GYA computational complexity is o(
                           
                              M
                              ·
                              
                                 n
                                 ¯
                              
                              ·
                              
                                 
                                    T
                                    ¯
                                 
                                 
                                    k
                                    ,
                                    x
                                 
                              
                           
                        ), M being the number of agents, 
                           
                              n
                              ¯
                           
                         being the average number of alternatives of the preference ordering
                           3
                        
                        
                           3
                           The number of alternatives is not necessarily the same for all the preference orderings, due to the possibility of omissions.
                        , and 
                           
                              
                                 T
                                 ¯
                              
                              
                                 k
                                 ,
                                 x
                              
                           
                         being the average threshold value for the selection of the alternatives.


                        Table 15 contains a summary comparison between the GYA and YA from the point of view
                         of the criteria examined so far (see definitions in Table 3).

As a further justification of the validity of GYA, Table 16 presents another comparison between the YA and the GYA, from the point of view of some popular axioms borrowed from the social choice theory (Arrow & Rayanaud, 1986). It can be demonstrated that, despite their substantial differences, the two algorithms meet all the axioms except the one of independence of irrelevant alternatives. However, according to some authors, the negative consequences of this feature are not crucial (Dym, Wood, & Scott, 2002).

@&#CONCLUSIONS@&#

The most important contribution of this paper is to propose the GYA, i.e., a generalized version of the YA, which has two main advantages: (i), it is more consistent, since it better reflects the multi-agent preference orderings, and (ii) it is more versatile than the original version, since it admits preference orderings with omitted or incomparable alternatives. Also, it is automatable and can be applied to a larger variety of practical contexts, providing more realistic results.

Because of the greater complexity, the GYA is computationally slightly more burdensome than the YA. On the other hand, it is more efficient in terms of use of the information available.

A limitation of the new algorithm is related to the mechanism for aggregating and/or comparing elements from different preference vectors. The underlying assumption is that the degree of preference of one alternative depends on the relative position of the corresponding element, depicted by Fi
                     
                     ,
                     
                        j
                      indicators.

Future research go in several directions: (i) quantitative analysis of the robustness of the GYA with respect to small variations in the preference orderings or in the Tk,x
                      thresholds, (ii) application of the GYA to various decision-making frameworks (Franceschini et al., 2015), and (iii) revision of the mechanism for comparing elements from different preference vectors, trying to overcome the use of the Fi
                     
                     ,
                     
                        j
                      indicators.

This variant can be decomposed in the same three phases reported in Table 4. While the phase concerning the construction and reorganization of the preference vectors is unchanged with respect to what is described in Section 3.2 (bottom-up approach), the remaining two phases are slightly different.

The flowchart in Fig. A.1
                        (a) depicts the definition of the reading sequence. Comparing it with that one in Fig. 5(a), one can observe small variations in the instructions number 4 and 7 respectively. For the purpose of example, Table A.1
                         reports the resulting top-town reading sequence relating to the four preference orderings in Fig. 3.
                     

As regards the construction of the fused ordering, the gradual selection of the alternatives is almost identical to that one described in Section 3.2.3, except that it follows an increasing preference order (i.e., the most preferred ones are inserted first) instead of decreasing. Comparing the flowchart in Fig. A.1(b) – which represents the procedure for constructing the fused ordering – with that in Fig. 5(b), we can notice just a minor variation in the instruction number 14. Applying the top-down approach to the vectors in Table A.1 and using the thresholds in Table 11, the fused preference ordering is a > (b ∼ c) > (d ∼ e) > f. Table A.2
                         illustrates the step-by-step construction.

The relatively significant discrepancy between this ordering and that obtained through the bottom-up approach (i.e., a > b > (d ∼ e ∼ f) > c, see Table 12) is attributable to the general nervousness of the alternatives in the source preference orderings (in Fig. 3). For example, it can be noticed that the alternative c is in the first position of the ordering by D
                        1, in the last of that by D
                        2 and D
                        3, and in the middle of that by D
                        4. Similar considerations can be applied to f. Not surprisingly, c and f have relatively different rank positions in the two resulting (top-down and bottom-up) fused orderings.

In the case preference vectors have the same number of elements and Tk,x
                         = 1, ∀k, this sequencing procedure degenerates into the OR-ing variant of the YA (recalled in Section 2.1.3). However, the OR-ing philosophy is mitigated significantly: a kth alternative is included in a higher position of the fused ordering when a portion of its occurrences larger than (1 − x) – not just a single one! – are in higher positions in the individual preference orderings.

As stated by Yager (2001, page 4), the adoption of a top-down reading sequence in the YA would generate a not very reasonable fused ordering, since it would be “compatible with at least one of the individual orderings”, not necessarily all of them. The top-down variant of the GYA overcomes this problem, thanks to the more gradual mechanism for the selection of the alternatives.

@&#REFERENCES@&#

