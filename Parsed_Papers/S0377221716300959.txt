@&#MAIN-TITLE@&#Modified Differential Evolution with Locality induced Genetic Operators for dynamic optimization


@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present a modified Differential Evolution (DE) for dynamic optimization.


                        
                        
                           
                           The modified DE mutation can retain the proximity information for each solution.


                        
                        
                           
                           A local-best crossover operation helps in preserving diversity.


                        
                        
                           
                           We propose an exhaustive dynamic change detection technique.


                        
                        
                           
                           Our algorithm has been extensively tested and validated w.r.t. the state-of-the-art.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Continuous optimization

Dynamic optimization

Differential Evolution

Self adaptation

Genetic operators

@&#ABSTRACT@&#


               
               
                  This article presents a modified version of the Differential Evolution (DE) algorithm for solving Dynamic Optimization Problems (DOPs) efficiently. The algorithm, referred as Modified DE with Locality induced Genetic Operators (MDE-LiGO) incorporates changes in the three basic stages of a standard DE framework. The mutation phase has been entrusted to a locality-induced operation that retains traits of Euclidean distance-based closest individuals around a potential solution. Diversity maintenance is further enhanced by inclusion of a local-best crossover operation that empowers the algorithm with an explorative ability without directional bias. An exhaustive dynamic detection technique has been introduced to effectively sense the changes in the landscape. An even distribution of solutions over different regions of the landscape calls for a solution retention technique that adapts this algorithm to dynamism by using the previously stored information in diverse search domains. MDE-LiGO has been compared with seven state-of-the-art evolutionary dynamic optimizers on a set of benchmarks known as the Generalized Dynamic Benchmark Generator (GDBG) used in competition on evolutionary computation in dynamic and uncertain environments held under the 2009 IEEE Congress on Evolutionary Computation (CEC). The experimental results clearly indicate that MDE-LiGO can outperform other algorithms for most of the tested DOP instances in a statistically meaningful way.
               
            

@&#INTRODUCTION@&#

Optimization problems in the real world are very often dynamic in nature. For these Dynamic Optimization Problems (DOPs), the function landscape changes temporally i.e. optima of the problem to be solved change their locations over time and thus, the optimizer should be able to track the optima continually by responding to the dynamic environment (Jin & Branke, 2005; Nguyen, Yang, & Branke, 2012). Variations in market price, probabilistic arrival of a new job in a scheduling problem, uncertainty on the demand and unit costs in a network in context to the facility location problem are some of the common instances of a dynamic environment (Gabrel, Murat, & Thiele, 2014). Under such situations, converging tendency of a conventional EA can impose severe limitations on the performance of the EA. If the population members of the EA converge rapidly, they will not succeed in effectively responding to the environmental changes. Therefore, in case of DOPs the foremost challenge is maintenance of a diverse population and simultaneous production of highly accurate solutions by monitoring the moving optima. At this point we would like to mention that there are also DOP instances where the optimal solution does not need to be tracked. For example, the work of Allmendinger and Knowles (Allmendinger & Knowles, 2010) investigates DOPs where the constraints (Ephemeral Resource Constraints (ERCs)) change over time but not the landscape and thus, also not the optimal solutions. In this paper we focus on the real-parameter bound-constrained DOPs where the objective function landscape explicitly changes with time and not on the problems with ERCs. However, the proposed algorithm is not designed for DOPs with other (more practical) equality and inequality constraints on the decision variables. The benchmark suite used for testing the algorithm also comprises of bound-constrained problems only (i.e. each decision variable is bounded from above and below).

Differential Evolution (DE) (Das & Suganthan, 2011; Storm & Price, 1997) has been used effectively as one of the most powerful optimizing tool for continuous search spaces. DE implements similar computational steps to that of standard Evolutionary Algorithms (EAs). However, unlike traditional EAs, DE-variants perturb the current-generation population members with the scaled differences of randomly selected and distinct population members. Therefore, no separate probability distribution (like the Gaussian distributions used in Evolutionary Programming (EP) and Evolution Strategies (ES) or the Cauchy distributions used in case of the Fast EPs) is used to generate offspring.

Classical DE suffers from some difficulties in its application in DOPs owing to two main factors. First, in many cases, local basins of attraction covering areas in and around the local and global optima result in a premature convergence. Thereafter, explorative power is compromised due to similarity of the minimally perturbed new optimum in a changed environment. Second, DE may occasionally stop proceeding toward the global optimum even though the population has not converged to a local optimum or any other point (Lampinen & Zelinka, 2000). Ongoing research has been directed to introduce modifications in DE algorithms to locate the changing optima for dynamic landscapes. A short summary of the relevant literature has been presented in Section 2.

In this paper we present an alternative approach of solving DOPs by using a modified DE algorithm with locality induced genetic operators. Our proposal is based on the fact that any dynamic change is reflected by the varying dominance of the candidate solutions over periods of change instances. Thus, attempts have been made to monitor each such solution over the entire period of optimization. The retention of the spatial traits characterizing these solutions forms an essential part of the genetic operations (mutation and crossover) in the proposed algorithm called Modified DE with Locality induced Genetic Operators (MDE-LiGO). The crossover phase of the genetic operation stage is handled by an adaptive l-best scheme that allows a rotation of the trial solutions and can attain a compromise between both axis parallel search and rotation-invariant search. The modification of DE is coupled with two additional features—first dynamic detection using a scheme to measure the number of unsuccessful updates and second, adapting to that change using clustering techniques. Diversity maintenance is an essential feature of MDE-LiGO.

Although a preliminary version of this article has been presented as a conference paper in Mukherjee, Debchoudhury, Kundu, Das, and Suganthan (2013), we have substantially modified and expanded it both in terms of the algorithmic features and the experimental analyses. Unlike the conference version, parameter adaptation is introduced to enable a control on the retention of traits around a promising solution. Consequently higher percentages of traits that have the ability to lead to a potential solution are identified and retained, thereby increasing the efficiency of the process. The blending rate Br has been selected from a pool of values sampled from a normal distribution, the parameters of which are guided by the influence of a set of successful crossover probabilities. This modification appears to make the crossover stage more functional and much more effective. A significant contribution added to this version is the introduction of an exhaustive dynamic detection stage that identifies the onset of a dynamic change. The difference in deviation of locally mutated DE individuals serves as the criterion which dictates when a change in the landscape has occurred. An analytical discussion on the evaluation of such a deviation mechanism has been presented in context to the detection of a dynamic change by MDE-LiGO. In addition extensive comparisons and experimental validations have been provided to validate the different components of the MDE-LiGO algorithm.

Organization of the rest of the paper is in order. Section 2 provides a brief description of classical DE and one of its adaptive variant. The section also presents a compact survey of the different modified EAs previously used for solving DOPs. A detailed description of the proposed algorithm with all its salient features is provided in Section 3. Section 4 describes the experimental settings and presents the results of comparing MDE-LiGO against seven state-of-the-art dynamic EAs with in-depth discussions. Section 5 experimentally investigates the effect of different strategies proposed for the MDE-LiGO framework. Finally conclusions are drawn in Section 6.

@&#RELATED WORKS@&#

It was in 1966 (Fogel, Owens, & Walsh, 1966) that the earliest known attempts were made to apply EAs for solving DOPs. Since the late 1980s, the topic started to attract a lot of attention from the researchers. What followed was a gradual increase in publication of related works. Expansive survey works dedicated to the application and adaptation of EAs for tackling DOPs can be found in Jin and Branke (2005) and Nguyen et al. (2012).

A series of innovative approaches were adopted by the research fraternity in order to adapt an EA to solve DOPs. For example, the hypermutation strategy (Cobb, 1990) incorporates diversity after detection of a change in fitness landscape by escalating the rate of mutation for some generations following the dynamic change. Morrison and de Jong (2000) pointed out that when the functional landscape is changing at a high frequency with time, increasing the mutation rate more frequently can be beneficial for efficient tracking of the optima. On the contrary, the performance of lower hypermutation levels is better in case of changes that are less frequent. In variable local search (Vavak, Jukes, & Fogarty, 1997) the rate of mutation is slowly incremented. These results in randomization of the information associated with individuals that have been successful before, to maintain adequate diversity of the population. Under the random immigrant scheme (Grefenstette, 1992), a part of the population is replaced by randomly generated individuals in each generation to maintain the diversity level throughout the search process. Strategies that are adopted to maintain diversity in DOPs include fitness sharing and crowding (Cedeno & Vemuri, 1997) .Dividing the entire population to smaller subgroups often help to track multiple peaks, thereby functioning like self adaptive diverse memory. The multinational Genetic Algorithm (GA) (Ursem, 2000), the shifting balance GA (Winberg & Oppacher, 2000), and the self-organizing scouts (Branke, Kaußler, Smidt, & Schmeck, 2000; Branke & Schmeck, 2003) are examples of this technique. In a dynamic optimization scenario, it may be advantageous to store the information from a previous generation in an external memory and later recall the same. Such external memory can be coupled with GAs to solve DOPs.

Two types of memories have so far been used in conjunction with the dynamic evolutionary optimizers—explicit memory and implicit memory. GAs with explicit memory incorporate strategies for storing solutions and reintroducing them during the later stages of search (Eggermont & Lenaerts, 2000; Louis & Xu, 1996; Ramsey & Greffenstette, 1993). On the other hand, GAs with implicit memory use redundant genetic representations. The most common example is employing a diploid genetic structure (Calabretta, Galbiati, Nolfi, & Parisi, 1996; Ng & Wong, 1995). A diploid GA possesses two sets of chromosomes instead of a common single set (haploid) possessed by the regular GAs. Consequently, in this type of GAs, two genes compete for the same phenotypic feature in the same individual. To resolve this dilemma, the researchers use a dominance mapping that labels some genes as dominant and others as recessive. When a dominant gene is paired with a recessive one, only the former is expressed in the phenotype, leaving the recessive one unexpressed. This way, the dominant genes can protect their less fit, recessive counterparts from being eliminated through selection. The formerly fit genes can return back by pairing with the fitter dominant genes and then may come into expression again when the environment becomes more favorable. Through this mechanism, the GA obtains a form of implicit memory. Lewis, Hart, and Ritchie (1998) indicated that a diploid structure alone is not enough for a diploid GA to adapt to changing environments. Frequent switching of the values from dominant to recessive and vice versa can be effective in obtaining acceptable results

Since the early 1990s, conventional GAs have been modified by using the techniques discussed in the last two paragraphs above for providing efficient solutions to DOPs. Yang proposed memory based immigrants (Yang, 2005) and an associative memory scheme (Yang, 2006a) for GAs running in dynamic environments. In Yang (2006b) the author suggested an immune system based GA for solving DOPs. Simoes and Costa (2003) also investigated an immune system based GA where both the diversity and memory schemes were used.

Besides GAs, in the recent past, considerable attention was given to the Particle Swarm Optimization (PSO) algorithm by researchers dealing with DOPs (Blackwell, 2007; Blackwell & Bentley, 2002; Eberhart & Shi, 2001; Hu, Zeng, & Tan, 2007; Li & Yang, 2009; Liu, Wang, & Yang, 2008; Yang & Li, 2010). Blackwell and Bentley (2002) introduced mutually repelling (charged) particles in PSO to preserve diversity of the swarm. As an alternative to charged particles, Blackwell (2007) proposed quantum particles generated through small perturbations around the global best position. Hu et al. (2007) suggested a learning scheme guided by the population diversity to enable PSO to respond to changing environments quickly. Li and Yang (Li & Yang, 2009; Yang and Li, 2010) proposed a Clustering PSO (CPSO) algorithm for solving DOPs. In addition, CPSO incorporates a fast local search method to search for optimal solutions in a promising sub-region found by the clustering method. Liu et al. (2008) and Liu, Yang, and Wang (2010) utilized the idea of composite particles from physics to enhance the performance of PSO in dynamic environments. Parrot and Li (2006) introduced the concept of species in PSO to identify multiple peaks in dynamic landscapes. Recently Li, Yang, and Yang (2014) proposed a multi-swarm optimization algorithm for solving DOPs by allowing the multiple populations to adaptively evolve without change detection. Some challenging issues (including detecting the moment for responding to changes, adapting the number of populations to changing environments, and determining the search area of each population) corresponding to the multi-population methods for solving DOPs have been recently investigated in (Li, Nguyen, Yang, Yang, & Zeng, 2015).

That DE can be applied for solving DOPs was first noticed as late as the late 1990s. Mendes and Mohais (2005) presented DynDE, a multi-population DE algorithm, developed specifically to optimize slowly time-varying objective functions. The authors established the competency of the DynDE in solving Moving Peaks Benchmark (MPB) problems. In Brest, Zamuda, Boskovic, Maucec, and Zumer (2009), the authors put together a self-adaptive combination of the control parameters F and Cr of DE coupled with an aging mechanism to formulate a self-adaptive DE variant (jDE) which significantly improved the efficiency of tackling problems in the dynamic landscape. Other notable research initiative ventures on algorithmic restructuring of DE for optimizing in changing landscapes can be found in Angira and Santosh (2007), Du Plessis and Engelbrecht (2012), Kundu, Biswas, Das, and Suganthan, (2013), Halder, Das, and Maity (2013a), and Das, Mandal, and Mukherjee (2014). Recently, a variant of the ant colony optimization algorithm, called Differential Ant-Stigmergy Algorithm (DASA) (Brest et al., 2013), has been put to use to solve DOPs. De Franca and Zuben (2009) proposed an artificial immune network for dynamic optimization (dop-aiNet) (De Franca, Von Zuben, & de Castro, 2005) as modification for the original opt-aiNet (Castro & Timmis, 2002) algorithm which was meant for solving static and multimodal function optimization problems. Lung and Dumitrescu (Lung & Dumitrescu, 2007a) used crowding DE to maintain diversity and combined it with PSO, called Collaborative Evolutionary-Swarm Optimization (CESO) to solve dynamic optimization problems. Lung and Dumitrescu (2010a) further improved and extended their work by introducing one more crowing DE population that acted as a memory for the main population.

The proposed MDE-LiGO algorithm incorporates three basic modifications in the framework of the classical DE. The conventional mutation and crossover operators of DE are extended to their locality-based counterparts and are integrated with an exhaustive dynamic detection technique to sense the dynamic changes of the landscape. The main idea is to preserve the spatial characteristics of the parents in the offspring that will help in retaining the local traits in the search process and maintain diversity in the population. The uniformly random initialization of the population is likely to provide an overall exploration at the beginning. Locality-based mutation and crossover operators of MDE-LiGO try to preserve the diversity of the population throughout the search process. A complete pseudo-code of MDE-LiGO is presented as Algorithm 1.

A generation of the classical DE algorithm consists of four basic steps—initialization, mutation, crossover, and selection, of which, only last three steps are repeated over subsequent DE generations. The generations continue till some termination criterion (such as exhaustion of maximum functional evaluations) is satisfied.

DE searches for the global optimum point in a D-dimensional continuous space 
                              
                                 R
                                 D
                              
                           . It begins with a randomly initiated population of Np D - dimensional real-valued parameter vectors, each of which forms a candidate solution of the multi-dimensional optimization problem. We denote subsequent generations in DE by G
                           ={0,1,...,G
                           max}. Note that the stopping criterion of an EA is commonly specified with a maximum budget of objective Function Evaluations (FEs). In standard DE, the objective function is evaluated once for every candidate solution in each generation. Hence, in this case if maximum number of FEs is FEmax
                           , for a population size of Np, the maximum number of generations 
                              
                                 
                                    G
                                    max
                                 
                                 =
                                 F
                                 E
                                 
                                    s
                                    max
                                 
                                 /
                                 N
                                 p
                              
                           . Since the parameter vectors are likely to be changed over different generations, we may adopt the following notation for denoting the ith vector of the population at the current generation:

                              
                                 
                                    
                                       
                                          
                                             X
                                             →
                                          
                                          
                                             i
                                             ,
                                             G
                                          
                                       
                                       =
                                       
                                          (
                                          
                                             
                                                x
                                                
                                                   1
                                                   ,
                                                   i
                                                   ,
                                                   G
                                                
                                             
                                             ,
                                             
                                                x
                                                
                                                   2
                                                   ,
                                                   i
                                                   ,
                                                   G
                                                
                                             
                                             ,
                                             …
                                             ,
                                             
                                                x
                                                
                                                   D
                                                   ,
                                                   i
                                                   ,
                                                   G
                                                
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        

The search-space has maximum and minimum bounds in each dimension and the bounds can be expressed as: 
                              
                                 
                                    
                                       X
                                       →
                                    
                                    max
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          x
                                          
                                             1
                                             ,
                                             max
                                          
                                       
                                       ,
                                       
                                          x
                                          
                                             2
                                             ,
                                             max
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          x
                                          
                                             D
                                             ,
                                             max
                                          
                                       
                                    
                                    )
                                 
                              
                            and 
                              
                                 
                                    
                                       X
                                       →
                                    
                                    min
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          x
                                          
                                             1
                                             ,
                                             min
                                          
                                       
                                       ,
                                       
                                          x
                                          
                                             2
                                             ,
                                             min
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          x
                                          
                                             D
                                             ,
                                             min
                                          
                                       
                                    
                                    )
                                 
                              
                           . Hence we may initialize the jth component of the ith vector as:

                              
                                 
                                    
                                       
                                          x
                                          
                                             j
                                             ,
                                             i
                                             ,
                                             0
                                          
                                       
                                       =
                                       
                                          x
                                          
                                             j
                                             ,
                                             min
                                          
                                       
                                       +
                                       r
                                       a
                                       n
                                       
                                          d
                                          
                                             i
                                             ,
                                             j
                                          
                                       
                                       
                                          [
                                          0
                                          ,
                                          1
                                          ]
                                       
                                       ·
                                       
                                          (
                                          
                                             x
                                             
                                                j
                                                ,
                                                max
                                             
                                          
                                          −
                                          
                                             x
                                             
                                                j
                                                ,
                                                min
                                             
                                          
                                          )
                                       
                                       ,
                                    
                                 
                              
                           where rand
                           
                              i, j
                           [0, 1] is a uniformly distributed random number in the closed interval [0, 1] and it is instantiated independently for each component of the ith vector.

DE creates a donor vector 
                              
                                 
                                    V
                                    →
                                 
                                 
                                    i
                                    ,
                                    G
                                 
                              
                            corresponding to each population member or target vector 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    i
                                    ,
                                    G
                                 
                              
                            in the current generation through mutation. Five commonly referred mutation strategies for the DE family (Neri & Tirronen, 2010; Das & Suganthan, 2011) are listed below.

                              
                                 (1a)
                                 
                                    
                                       
                                          DE
                                          /
                                          rand
                                          /
                                       
                                       1
                                       :
                                       
                                          
                                             V
                                             →
                                          
                                          
                                             i
                                             ,
                                             G
                                          
                                       
                                       =
                                       
                                          
                                             X
                                             →
                                          
                                          
                                             
                                                r
                                                1
                                                i
                                             
                                             ,
                                             G
                                          
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   2
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   3
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       ,
                                    
                                 
                              
                           
                           
                              
                                 (1b)
                                 
                                    
                                       
                                          DE
                                          /
                                          best
                                          /
                                       
                                       1
                                       :
                                       
                                          
                                             V
                                             →
                                          
                                          
                                             i
                                             ,
                                             G
                                          
                                       
                                       =
                                       
                                          
                                             X
                                             →
                                          
                                          
                                             b
                                             e
                                             s
                                             t
                                             ,
                                             G
                                          
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   1
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   2
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       ,
                                    
                                 
                              
                           
                           
                              
                                 (1c)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   DE
                                                   /
                                                   current
                                                   −
                                                   to
                                                   −
                                                   best
                                                
                                                :
                                                
                                                   
                                                      V
                                                      →
                                                   
                                                   
                                                      i
                                                      ,
                                                      G
                                                   
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   
                                                      X
                                                      →
                                                   
                                                   
                                                      i
                                                      ,
                                                      G
                                                   
                                                
                                                +
                                                F
                                                .
                                                
                                                   (
                                                   
                                                      
                                                         X
                                                         →
                                                      
                                                      
                                                         b
                                                         e
                                                         s
                                                         t
                                                         ,
                                                         G
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         X
                                                         →
                                                      
                                                      
                                                         i
                                                         ,
                                                         G
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                +
                                                F
                                                .
                                                (
                                                
                                                   
                                                      X
                                                      →
                                                   
                                                   
                                                      
                                                         r
                                                         1
                                                         i
                                                      
                                                      ,
                                                      G
                                                   
                                                
                                                −
                                                
                                                   
                                                      X
                                                      →
                                                   
                                                   
                                                      
                                                         r
                                                         2
                                                         i
                                                      
                                                      ,
                                                      G
                                                   
                                                
                                                )
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (1d)
                                 
                                    
                                       
                                          DE
                                          /
                                          best
                                          /
                                          2
                                          :
                                       
                                       
                                       
                                          
                                             V
                                             →
                                          
                                          
                                             i
                                             ,
                                             G
                                          
                                       
                                       =
                                       
                                          
                                             X
                                             →
                                          
                                          
                                             b
                                             e
                                             s
                                             t
                                             ,
                                             G
                                          
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   1
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   2
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   3
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   4
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       ,
                                    
                                 
                              
                           
                           
                              
                                 (1e)
                                 
                                    
                                       
                                          DE
                                          /
                                          rand
                                          /
                                          2
                                          :
                                       
                                       
                                       
                                          
                                             V
                                             →
                                          
                                          
                                             i
                                             ,
                                             G
                                          
                                       
                                       =
                                       
                                          
                                             X
                                             →
                                          
                                          
                                             
                                                r
                                                1
                                                i
                                             
                                             ,
                                             G
                                          
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   2
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   3
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   4
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                
                                                   r
                                                   5
                                                   i
                                                
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                              
                           
                        

The indices 
                              
                                 
                                    r
                                    1
                                    i
                                 
                                 ,
                                 
                                    r
                                    2
                                    i
                                 
                                 ,
                                 
                                    r
                                    3
                                    i
                                 
                                 ,
                                 
                                    r
                                    4
                                    i
                                 
                                 
                                    
                                    and
                                    
                                 
                                 
                                    r
                                    5
                                    i
                                 
                              
                            are mutually exclusive integers randomly chosen from the range [1, Np]. The scale factor F is a positive control parameter for scaling the difference vectors and is usually kept in the interval [0.4, 2]. 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    b
                                    e
                                    s
                                    t
                                    ,
                                    G
                                 
                              
                            is the best individual vector with the best fitness (i.e. lowest objective function value for a minimization problem) in the population at generation G.

Through crossover, the donor vector mixes its components with the target vector 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    i
                                    ,
                                    G
                                 
                              
                            to form the trial vector 
                              
                                 
                                    
                                       U
                                       →
                                    
                                    
                                       i
                                       ,
                                       G
                                    
                                 
                                 =
                                 
                                    [
                                    
                                       u
                                       
                                          1
                                          ,
                                          i
                                          ,
                                          G
                                       
                                    
                                    ,
                                    
                                       u
                                       
                                          1
                                          ,
                                          i
                                          ,
                                          G
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       u
                                       
                                          D
                                          ,
                                          i
                                          ,
                                          G
                                       
                                    
                                    ]
                                 
                              
                           . The DE family of algorithms primarily uses two kinds of crossover schemes - exponential (or two-point modulo) and binomial (or uniform). The binomial crossover scheme is briefly explained below since it is used in the proposed algorithm. Under this scheme the trial vector is created as follows:

                              
                                 (2)
                                 
                                    
                                       
                                          
                                             
                                                u
                                                
                                                   j
                                                   ,
                                                   i
                                                   ,
                                                   G
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   v
                                                   
                                                      j
                                                      ,
                                                      i
                                                      ,
                                                      G
                                                   
                                                
                                                ,
                                                
                                                
                                                   
                                                   if
                                                
                                                
                                                r
                                                a
                                                n
                                                
                                                   d
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                
                                                   [
                                                   0
                                                   ,
                                                   1
                                                   ]
                                                
                                                ≤
                                                C
                                                r
                                                
                                                or
                                                
                                                j
                                                =
                                                
                                                   j
                                                   
                                                      r
                                                      a
                                                      n
                                                      d
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   x
                                                   
                                                      j
                                                      ,
                                                      i
                                                      ,
                                                      G
                                                   
                                                
                                                ,
                                                
                                                   
                                                   otherwise
                                                
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           where, as before, rand
                           
                              i, j
                           [0, 1] is a uniformly distributed random number instantiated for each jth component of the ith parameter vector. Cr is a user-specified parameter (Crossover Rate) in the range [0, 1) and 
                              
                                 
                                    j
                                    
                                       r
                                       a
                                       n
                                       d
                                    
                                 
                                 ∈
                                 
                                    [
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    D
                                    ]
                                 
                              
                            is a randomly chosen index, which ensures that 
                              
                                 
                                    U
                                    →
                                 
                                 
                                    i
                                    ,
                                    G
                                 
                              
                            gets at least one component from 
                              
                                 
                                    V
                                    →
                                 
                                 
                                    i
                                    ,
                                    G
                                 
                              
                           . It is instantiated once for each vector per generation.

Selection determines whether the target or the trial vector survives to the next generation. The selection operation in DE can described as:

                              
                                 (3)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   X
                                                   →
                                                
                                                
                                                   i
                                                   ,
                                                   G
                                                   +
                                                   1
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   
                                                      U
                                                      →
                                                   
                                                   
                                                      i
                                                      ,
                                                      G
                                                   
                                                
                                                ,
                                                
                                                i
                                                f
                                                
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         U
                                                         →
                                                      
                                                      
                                                         i
                                                         ,
                                                         G
                                                      
                                                   
                                                   )
                                                
                                                ≤
                                                f
                                                
                                                   (
                                                   
                                                      
                                                         X
                                                         →
                                                      
                                                      
                                                         i
                                                         ,
                                                         G
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   
                                                      X
                                                      →
                                                   
                                                   
                                                      i
                                                      ,
                                                      G
                                                   
                                                
                                                ,
                                                
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                            where 
                              
                                 f
                                 (
                                 
                                    X
                                    →
                                 
                                 )
                              
                            is the objective function to be minimized. Since 
                              
                                 max
                                 
                                    {
                                    
                                       f
                                       (
                                       
                                          X
                                          →
                                       
                                       )
                                    
                                    }
                                 
                                 =
                                 −
                                 min
                                 
                                    {
                                    
                                       −
                                       f
                                       (
                                       
                                          X
                                          →
                                       
                                       )
                                    
                                    }
                                 
                              
                           , the restriction to minimization is without loss of generality.

Note that in classical DE, same value of F and Cr are used for all the population members. However, in modern adaptive variants of DE, like JADE (Zhang & Sanderson, 2009), F and Cr are independently sampled from a parameterized probability distribution for each of the population members and hence they are subscripted for the ith population member as Fi
                            and Cri
                            respectively.

Conventional DE mutation schemes (1a)–(1e) suffer from certain limitations especially on dynamic fitness landscapes. Eqs. (1a) and (1e) are DE/rand mutation schemes with 1 and 2 difference vectors respectively. These provide great advantage in terms of the number of parallel paths provided for exploitation and exploration. However, the main drawback of these schemes is that the use of a random base vector is less likely to generate a promising individual. A candidate solution in a certain landscape may not be successful in a changed landscape for DOPs. For the changed landscape, renewed randomization is needed and this leads to wastage of computational resources. Eqs. (1b) and (1d) are DE/best schemes, where the best individual is perturbed so that the new individuals are expected to be around the current functionally best member of the population. However, for a dynamic environment, these best individuals can vary with respect to the impacts they have on the landscape. A certain individual with desirable fitness at a certain instance may be functionally unsuitable in another. Moreover, exploitative nature of these schemes (due to attraction toward the best member) often ends up in local trapping of the individuals. With changing landscape characteristics, the reliability of such schemes to provide sustained performance cannot be assured. The rugged nature, for example, of the generalized Rastrigin's function (F3) offers such difficulties (Halder, Das, & Maity, 2013b). Similar arguments can be extended to the current-to-best DE scheme (Eq. (1c)) where a point on the line joining the current target vector and the best individual is perturbed (thereby forming a mutated recombinant of two vectors 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    i
                                    ,
                                    G
                                 
                              
                            and 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    b
                                    e
                                    s
                                    t
                                    ,
                                    G
                                 
                              
                           . Thus, it is intuitively apparent that classical DE mutation schemes are not the best choices while solving DOPs.

Perturbation of a candidate solution by utilizing the information from its neighborhood is a common practice in evolutionary algorithms. Neighborhoods can be defined in mainly two ways, namely index-based or topological neighborhoods and distance-based or spatial neighborhoods. In case of index-based neighborhoods, the neighbors are defined on an index graph and they need not be geographically close to each other. Such topological neighborhoods are widely used in l-best PSO algorithms (Kennedy & Mendes, 2002) and mostly for static global optimization problems (Mendes, Kennedy, & Neves, 2004). To the best of our knowledge, Tasoulis, Pavlidis, Plagianakos, and Vrahatis (2004) first integrated the concept of topological neighborhoods with DE. In their parallel DE algorithm, the population is partitioned into various sub-populations and the ring topology is used to exchange information among the sub-populations. The concept of index-based topology was used to improve the mutation strategy of DE/current-to-best/1 by Das, Konar, Chakraborty, and Abraham (2009). In the resulting DEGL (DE with Global and Local neighborhoods) algorithm, the local neighbors of the ith individual are those individuals which can affect the mutation of the ith individual. Such neighbors were taken as the population members with indices (i
                           −
                           k, i
                           −
                           k
                           +1,...,i, i
                           +1, ...., i
                           +
                           k) for a neighborhood of radius k. Evidently, construction of such neighborhood does not involve any distance calculation and neighbors may not be close to each other in the search space.

To the best of our knowledge, Suganthan (1999) first introduced the concept of Euclidean distance-based neighborhood in PSO. For simultaneous detection of multiple peaks of a multimodal function, the same concept was extended by Qu, Suganthan, and Liang (2012) in the form of an Euclidean neighborhood-based mutation operator for the niching DE algorithms. In this scheme, a donor vector is formed by three vectors (using the DE/rand/1 scheme) which are not selected uniform at random from the whole population, but from among a pre-fixed number of nearest neighbors of the current target vector. This strategy is likely to evolve each vector to its nearest optimal point, thus preserving the population diversity and reducing the tendency of the population to converge to a single basin of attraction on a multimodal functional landscape. Epitropakis, Tasoulis, Pavlidis, Plagianakos, and Vrahatis (2011) presented a proximity-based mutation operator for DE which selects the vectors to perform mutation operation using by using a distance related probability.

Although not very frequently, but niching strategies have also been utilized for solving DOPs. For example Crowding DE (Thomsen, 2004) restricts the competition between nearest (w. r. t. Euclidean distance) members to maintain the diversity (thus imposing the neighborhood structure in the survivor selection phase). Lung and Dumitrescu (2007b) proposed a collaborative swarm-evolutionary algorithm for DOPs and this algorithm maintains diversity of the population by using crowding DE. Lung and Dumitrescu (2010b) further improved and extended their work by introducing one more crowing DE population that acted as a memory for the main population.

Motivated by such approaches and the fact that efficiently devised search moves can enhance the performance of DE, we propose here a locality-induced variant of the DE/current-to-best/1 scheme that will be discussed in the next subsection.

The main functioning of a dynamic optimizer lies in guiding the varying dominance of candidate solutions that co-exist through changing instances. The individual with the greatest dominance at a particular instance assumes the role of the global optimum for that instance. This dominance which depends on various parameters, however, does not remain fixed. In a changed landscape scenario, the dominance may diminish, such that a completely new individual, which had lower dominant impact in the previous instance, now becomes prominent. This is the new optimum and we say that a dynamic change has set in. Thus, to successfully maintain the performance level of a dynamic optimizer through all the changing landscapes, one needs to keep track of all the candidate solutions. This can be effectively achieved if the algorithm manages to retain characteristic traits that define the vicinity in which a potential solution is identified. These retained essential traits pass through dynamically changing instances and offer guidance to individuals seeking out the optimum solution. Measurement of Euclidean distance provides a possible way of scanning the neighborhood around a candidate solution. For every candidate solution the nearest p percent individuals are selected to donate information that would be retained through the population in all instances. The DE mutation strategies are correspondingly modified so that the random individual providing the directional guidance is selected from this pool of p percent individuals instead of the entire population.

From the discussion in the preceding paragraph it is evident that preservation of essential spatial traits around potential solutions can be expected to contribute to the successful identification of global optimum on dynamic landscapes. Hence mutation involving the best individuals in the proximity of a potential solution can serve our purpose. For this, a locality based DE mutation scheme called ‘DE/current-to-p-local_best/1’ has been devised in the following way:

                              
                                 (4)
                                 
                                    
                                       
                                          
                                             V
                                             →
                                          
                                          
                                             i
                                             ,
                                             G
                                          
                                       
                                       =
                                       
                                          
                                             X
                                             →
                                          
                                          
                                             i
                                             ,
                                             G
                                          
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                p
                                                −
                                                l
                                                o
                                                c
                                                a
                                                l
                                                _
                                                b
                                                e
                                                s
                                                t
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                i
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       +
                                       F
                                       .
                                       
                                          (
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                l
                                                o
                                                c
                                                a
                                                l
                                                1
                                                ,
                                                G
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                →
                                             
                                             
                                                l
                                                o
                                                c
                                                a
                                                l
                                                2
                                                ,
                                                G
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                              
                           
                        

Here 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    p
                                    −
                                    l
                                    o
                                    c
                                    a
                                    l
                                    _
                                    b
                                    e
                                    s
                                    t
                                    ,
                                    G
                                 
                              
                            is the best individual chosen from a pool of the p nearest individuals around the target individual at generation G. 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    l
                                    o
                                    c
                                    a
                                    l
                                    1
                                    ,
                                    G
                                 
                              
                            and 
                              
                                 
                                    X
                                    →
                                 
                                 
                                    l
                                    o
                                    c
                                    a
                                    l
                                    2
                                    ,
                                    G
                                 
                              
                            are randomly selected individuals from the same pool of the local solutions. This, in probability, helps to preserve the traits which define the characteristics of a solution. The proximity is measured by simple Euclidean distance and ranking is done according to calculated fitness value of each proximal point. The value of p is made adaptive according to the following rule:

                              
                                 (5)
                                 
                                    
                                       
                                          p
                                          
                                             G
                                             +
                                             1
                                             ,
                                             j
                                          
                                          i
                                       
                                       =
                                       
                                          ⌊
                                          
                                             c
                                             .
                                             
                                                
                                                   
                                                      p
                                                      j
                                                   
                                                
                                                
                                                   (
                                                   0
                                                   )
                                                
                                             
                                             +
                                             
                                                (
                                                
                                                   1
                                                   −
                                                   c
                                                
                                                )
                                             
                                             .
                                             
                                                p
                                                
                                                   G
                                                   ,
                                                   j
                                                
                                                i
                                             
                                             +
                                             c
                                             .
                                             
                                                (
                                                
                                                   S
                                                   
                                                      U
                                                      
                                                         
                                                            max
                                                            
                                                               1
                                                               :
                                                               G
                                                            
                                                         
                                                      
                                                      i
                                                   
                                                   −
                                                   S
                                                   
                                                      U
                                                      G
                                                      i
                                                   
                                                
                                                )
                                             
                                          
                                          ⌋
                                       
                                       .
                                    
                                 
                              
                           
                        

Here 
                              
                                 p
                                 
                                    i
                                    ,
                                    j
                                 
                                 G
                              
                            denotes the p percent locality of the population of jth individual at Gth generation and ith dynamic instance and 
                              
                                 
                                    p
                                    
                                       (
                                       0
                                       )
                                    
                                 
                                 =
                                 10
                                 .
                              
                            
                           c is an adaptation factor. 
                              
                                 S
                                 
                                    U
                                    G
                                    i
                                 
                              
                            is the percentage of successful updates at the Gth generation of the ith dynamic instance. Each successful update implies an improvement in the objective function value over the existing one. 
                              
                                 S
                                 
                                    U
                                    
                                       
                                          max
                                          
                                             1
                                             :
                                             G
                                          
                                       
                                    
                                    i
                                 
                              
                            denotes the maximum percentage of successful updates up to G generations of the ith dynamic instance. Individuals which are potentially suitable solutions are demarcated when the successful DE updates around them tend to decrease. It is this lack of successful updates that, in turn, highlights the particular region of the search space where traits are to be retained with a relatively higher amount compared to other regions with higher number of successful updates. Taking a close look at Eq. (5) we observe that the variation in p almost compensates the fluctuation in number of successful updates (SU). This implies that the value of p is high around regions with low successful updates (SU) of individual. The variable c controls the rate of adaptation of the variable p with successful updates (SU).

Crossover helps in blending the components of the parent and the mutant vectors in DE. Binomial crossover in DE is influenced by the crossover probability Cr. The donor vector formed during mutation of DE is focused in unique directions in the search space formed by the vector difference between its two parents as in Eqs. (1a)–(1e). In the absence of crossover only a certain direction along the scaled difference between two vectors under question is utilized. But with crossover, it is possible, at least in probability, to use a larger portion of the search volume from the quadrant formed by the two parent vectors (depending on their positions) for generating the offspring. The distribution of the offspring is, nevertheless governed by the parameters like Cr in DE.

The spread of a DE population after mutation and recombination phases (but excluding selection) is illustrated in Fig. 1
                        (a). The spread is concentrated only along the diagonals and sides of the Cartesian co-ordinates in a 3-dimensional space. Recombination as in DE results in total rotation toward Cartesian axis and the search is biased to Cartesian co-ordinate System. Unsurprisingly favorable solution cannot be tracked if the system gets biased to a particular co-ordinate system. The idea can be easily extended to higher dimensions. Incorporation of adaptive F and Cr parameters modifies the scaling factor and individuals are observed to occupy varying positions in Fig. 1(b) but along the same directions as in Fig 1(a). In other words there is no improvement in search directions by introduction of adaptive parameters and the possible search moves of the trial solutions still remains limited.

Rotationally invariant crossover operations (like binomial crossover with Cr
                        =1) are useful for solving non-separable optimization problems, where the decision variables have a strong linkage among them. On the other hand, axis-parallel search (which can be obtained with a very small value of Cr near 0) facilitates in quick optimization of the separable functions (Das & Suganthan, 2011; Price et al., 2005). We propose a modification to the conventional binomial crossover operation of DE such that the distribution of the final offspring may become partially dependent on the coordinate axes and partially rotation-invariant. In the final offspring vector 
                           
                              
                                 U
                                 →
                              
                              
                                 i
                                 ,
                                 G
                              
                           
                        , based on the crossover probability Cr, some components appear as a convex combination of the corresponding components from the mutant vector 
                           
                              
                                 V
                                 →
                              
                              
                                 i
                                 ,
                                 G
                              
                           
                         and the parent vector 
                           
                              
                                 X
                                 →
                              
                              
                                 i
                                 ,
                                 G
                              
                           
                        , while the other components are inherited directly from the parent vector. This operation can be represented as: 
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             u
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             B
                                             
                                                r
                                                i
                                             
                                             .
                                             
                                                v
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             +
                                             
                                                (
                                                1
                                                −
                                                B
                                                
                                                   r
                                                   i
                                                
                                                )
                                             
                                             .
                                             
                                                x
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             
                                                
                                                if
                                             
                                             
                                             r
                                             a
                                             n
                                             
                                                d
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             
                                                [
                                                0
                                                ,
                                                1
                                                ]
                                             
                                             ≤
                                             C
                                             r
                                             
                                             or
                                             
                                             j
                                             =
                                             
                                                j
                                                
                                                   r
                                                   a
                                                   n
                                                   d
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                          
                                             u
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ,
                                             o
                                             t
                                             h
                                             e
                                             r
                                             w
                                             i
                                             s
                                             e
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        where Cr, randi,j
                        [0,1], and jrand
                         bear the same meaning as in the original binomial crossover scheme of DE. The blending rate Br determines the rate by which the mix occurs. Note that depending on Cr, in this case, both components of 
                           
                              
                                 U
                                 →
                              
                              
                                 i
                                 ,
                                 G
                              
                           
                         can be a convex combination of the corresponding components of 
                           
                              
                                 V
                                 →
                              
                              
                                 i
                                 ,
                                 G
                              
                           
                         and 
                           
                              
                                 X
                                 →
                              
                              
                                 i
                                 ,
                                 G
                              
                           
                        , thus leading to an offspring with position on the line joining the target and the donor. This line is actually the diagonal of the hypercube formed by the target and the donor solution points. Thus, offspring generated on this line are rotation-invariant. On the other hand offspring which inherit one or more components from 
                           
                              
                                 X
                                 →
                              
                              
                                 i
                                 ,
                                 G
                              
                           
                         do not lie on this line and can be rotated at various angles with respect to the diagonal of the said hypercube. Depending on adaptive values of Br and Cr (which are sampled anew for each individual as discussed next), thus, a blending of the rotation-invariant and axes-oriented search is likely be obtained by using the proposed crossover operation.

A glance at Eq. (6) shows that the classical recombination strategy can be derived from the modified form by setting the value of the blending rate Br to 1. The solutions as in Fig. 1(c) are distributed over the search space irrespective of the Cartesian system as well as distributed with varying Euclidean distance from the parent. Thus, unlike classical DE, MDE-LiGO can produce solutions that are not only scaled but also rotated at varying angles with respect to parent solution. The distribution of DE offspring using l-best crossover with parents located at corners of a 2-D space and varying Br parameter is illustrated in Fig. 2. As can be observed a low value of Br will push the offspring toward the Cartesian axis while a high value pulls it toward the parent. A value of 0 will push it farthest to the co-ordinate axis as in classical DE while a value of 1 will merge it with the mutant vector.

For adapting Br, we follow a scheme similar to the parameter adaptation schemes of the JADE algorithm (Zhang & Sanderson, 2009). At each generation G, Bri
                         is generated according to an independent normal distribution randni
                        (μBr
                        , 0.1) of mean μBr
                        , standard deviation 0.1 and bounded in the interval (0,1]:

                           
                              (7)
                              
                                 
                                    B
                                    
                                       r
                                       i
                                    
                                    =
                                    r
                                    a
                                    n
                                    d
                                    
                                       n
                                       i
                                    
                                    
                                       (
                                       
                                          μ
                                          
                                             B
                                             r
                                          
                                       
                                       ,
                                       0.1
                                       )
                                    
                                 
                              
                           
                        
                     

Assuming SBr
                         as the set of all successful blending rates Bri
                         at generation G, the mean μBr
                         is updated as: 
                           
                              (8)
                              
                                 
                                    
                                       μ
                                       
                                          B
                                          r
                                          ,
                                          G
                                          +
                                          1
                                       
                                    
                                    =
                                    
                                       (
                                       1
                                       −
                                       c
                                       )
                                    
                                    .
                                    
                                       μ
                                       
                                          B
                                          r
                                          ,
                                          G
                                       
                                    
                                    +
                                    c
                                    .
                                    m
                                    e
                                    a
                                    n
                                    
                                       (
                                       
                                          S
                                          
                                             B
                                             r
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        where c ∈ (0, 1) is a positive constant and mean(.) is the usual arithmetic mean operation. μBr
                         is initialized at 0.5 and if SBr
                         is empty, the mean of SBr
                         is taken as 0.

The efficiency of DE is highly dependent on the scale factor F and the crossover rate Cr. Instead of fixing the values of these parameters heuristically, the current trend is to make the parameters self adaptive, so that their values may be assigned on the run, based on previous success history or by capturing some features of the problem at hand. In MDE-LiGO we follow the adaptation schemes of the JADE (Zhang & Sanderson, 2009) algorithm. This algorithm incorporates two adaptive strategies for sampling the values of F and Cr for each population member based on the parameters used to generate previous successful individuals.

At each generation G, crossover probabilities Cri
                            is sampled from an independent normal distribution randni
                           (μCr, 0.1) of mean μCr, standard deviation 0.1 and is bounded by the interval (0,1]: 
                              
                                 
                                    
                                       C
                                       
                                          r
                                          i
                                       
                                       =
                                       r
                                       a
                                       n
                                       d
                                       
                                          n
                                          i
                                       
                                       
                                          (
                                          μ
                                          C
                                          r
                                          ,
                                          0.1
                                          )
                                       
                                       .
                                    
                                 
                              
                           
                        

Assuming SCr
                            as the set of all successful crossover probabilities Cri
                           's at generation G, the mean μCr is updated as:

                              
                                 
                                    
                                       
                                          μ
                                          
                                             C
                                             r
                                          
                                       
                                       =
                                       
                                          (
                                          1
                                          −
                                          c
                                          )
                                       
                                       
                                          μ
                                          
                                             C
                                             r
                                          
                                       
                                       +
                                       c
                                       .
                                       m
                                       e
                                       a
                                       n
                                       
                                          (
                                          
                                             S
                                             
                                                C
                                                r
                                             
                                          
                                          )
                                       
                                       ,
                                    
                                 
                              
                           where c ∈ (0, 1) is a positive constant and mean(.) is the usual arithmetic mean operation. In Zhang and Sanderson (2009), the authors experimentally demonstrated that the scheme performs best with 1/c ∈ (5, 20).

At each generation G, crossover probabilities Fi
                            of each individual is generated according to a Cauchy distribution randci
                           (μF
                           , 0.1) and is bounded in the interval (0,1] as: 
                              
                                 
                                    
                                       
                                          F
                                          i
                                       
                                       =
                                       r
                                       a
                                       n
                                       d
                                       
                                          c
                                          i
                                       
                                       
                                          (
                                          
                                             μ
                                             F
                                          
                                          ,
                                          0.1
                                          )
                                       
                                       ,
                                       
                                    
                                 
                              
                           where Fi
                            is truncated to 1 if Fi
                            > 1 and it is regenerated if Fi
                            ≤ 1. Assuming SF
                            as the set of all successful scale factors Fi
                           's at generation G, the location parameter μF
                            of the Cauchy distribution is initialized at 0.5 and then updated at the end of each generation as:

                              
                                 
                                    
                                       
                                          μ
                                          F
                                       
                                       =
                                       
                                          (
                                          1
                                          −
                                          c
                                          )
                                       
                                       
                                          μ
                                          F
                                       
                                       +
                                       c
                                       .
                                       L
                                       
                                          (
                                          
                                             S
                                             F
                                          
                                          )
                                       
                                       ,
                                    
                                 
                              
                           where L(•) is the Lehmer mean defined as:

                              
                                 
                                    
                                       L
                                       
                                          (
                                          
                                             S
                                             F
                                          
                                          )
                                       
                                       =
                                       
                                          
                                             
                                                ∑
                                                
                                                   F
                                                   ϵ
                                                   
                                                      S
                                                      F
                                                   
                                                
                                             
                                             
                                                F
                                                2
                                             
                                          
                                          /
                                          
                                             
                                                ∑
                                                
                                                   F
                                                   ϵ
                                                   
                                                      S
                                                      F
                                                   
                                                
                                             
                                             F
                                          
                                       
                                       .
                                    
                                 
                              
                           
                        

Dynamic Change Detection forms an integral part of any evolutionary dynamic optimization algorithm. Following the dynamic detection, proper modifications in the algorithm can take place like re-initialization of parameters of the algorithm, re-evaluation of population to preserve diversity etc. Difficulties in detection techniques include proper choice of memory individuals that represent the whole search space, increased functional evaluations per generation, proper techniques to detect partial change in the landscape, noisy landscapes etc.

We propose a detection characteristic by which the deviation amount of the locally mutated DE individuals is tracked to detect changes. The margin by which the locally mutated DE offspring

(
                           
                              U
                              →
                           
                        ) differs from its immediate parent (
                           
                              X
                              →
                           
                        ) will be small in distance metric as guaranteed by our algorithm. Thus, the deviation amount in terms of fitness difference is also expected to be small. However with dynamic change the magnitude of the difference from its parent will increase drastically as offspring are produced on a thoroughly revised landscape with parents retaining their fitness as obtained in the previous generation. Relative deviation from all parent solutions will be altered. The main idea is to track when these heavy deviations occur in DE generations to infer dynamic change. Then suitable modification in the algorithmic part is to be incorporated to adapt the solution to the detected changes. By this no extra computational burden is added to the algorithm as it neither involves extra functional evaluations nor it involves computations of high complexity. From Fig. 3(a), the DE offspring produced, as marked in green, was near that of its parent when the environment was static. The fitness difference with the parents, marked in blue, has been as marked with dotted lines in Fig. 3(a). The parents that occupy different positions in the landscape maintain a nearly constant difference with it as shown in red, magenta and blue dotted lines. When a dynamic change occurs, the parents (marked in blue stars) maintain their fitness values from the previous environment. However, the same offspring as in Fig. 3(a) will now have a completely new value of fitness. Nevertheless, this change is not guaranteed to be due to a dynamic change of the landscape as it could also be due to the normal process of DE optimization.

However, relative deviation from all the other individuals is quite robust a technique and if the relative change is high for every parent in the landscape for every offspring, it must have been due to a dynamic change. The new fitness deviations from the same parents are illustrated in Fig. 3(b). Deviation from parents therefore has changed appreciably as illustrated by the length of the new color dotted lines. Therefore, if relative measures of all such offspring are accounted, then we obtain a deviation matrix. During normal stages of DE optimization this matrix will have elements of small magnitude but will encounter higher values if dynamic changes occur. The deviation matrix of the fitness of the offspring (
                           
                              U
                              →
                           
                        ) with that of its parents (
                           
                              X
                              →
                           
                        ) is calculated as matrix Δ. Each element of Δ gives the deviation of fitness of an ith offspring with jth parent solution where 
                           
                              i
                              ,
                              j
                              ∈
                              [
                              
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 N
                                 p
                              
                              ]
                           
                        . Each column denotes the relative fitness wise deviation of one offspring with respect to all parents in the landscape. The 
                           
                              Θ
                              =
                              δ
                              Δ
                           
                         is calculated consequently as 
                           
                              
                                 |
                              
                              
                                 
                                    Δ
                                    G
                                 
                                 −
                                 
                                    Δ
                                    
                                       G
                                       −
                                       1
                                    
                                 
                              
                              
                                 |
                              
                           
                         where G denotes the generation number which gives the deviation in Δ values. The Θ
                        
                           i, j
                         values is expected to reduce to a low value till dynamism occurs and a drastic change occurs.

                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             Δ
                                             =
                                             
                                                [
                                                
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         Δ
                                                      
                                                      
                                                         Δ
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         Δ
                                                      
                                                   
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         Δ
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         Δ
                                                      
                                                      
                                                         Δ
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         Δ
                                                      
                                                   
                                                
                                                ]
                                             
                                             =
                                             
                                                [
                                                
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     1
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     U
                                                                     1
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     1
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     1
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     3
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     1
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     
                                                                        N
                                                                        p
                                                                     
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     1
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     3
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     1
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     
                                                                        N
                                                                        p
                                                                     
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     1
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     
                                                                        N
                                                                        p
                                                                     
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     
                                                                        N
                                                                        p
                                                                     
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     3
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        X
                                                                        →
                                                                     
                                                                     
                                                                        N
                                                                        p
                                                                     
                                                                  
                                                                  )
                                                               
                                                               −
                                                               f
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        U
                                                                        →
                                                                     
                                                                     
                                                                        N
                                                                        p
                                                                     
                                                                  
                                                                  )
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                   
                                                
                                                ]
                                             
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             Let
                                             
                                             Θ
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             δ
                                             Δ
                                             =
                                             
                                                |
                                                
                                                   
                                                      Δ
                                                      i
                                                   
                                                   −
                                                   
                                                      Δ
                                                      
                                                         i
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                |
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                [
                                                
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     11
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     11
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     12
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     12
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     13
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     13
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     1
                                                                     N
                                                                     p
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     1
                                                                     N
                                                                     p
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     21
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     21
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     22
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     22
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     31
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     31
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         ⋅
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     1
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     1
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     2
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     2
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     3
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     3
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                      
                                                         ⋅
                                                      
                                                      
                                                         
                                                            |
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     N
                                                                     p
                                                                     G
                                                                  
                                                               
                                                               −
                                                               
                                                                  Δ
                                                                  
                                                                     N
                                                                     p
                                                                     N
                                                                     p
                                                                     (
                                                                     G
                                                                     −
                                                                     1
                                                                     )
                                                                  
                                                               
                                                            
                                                            |
                                                         
                                                      
                                                   
                                                
                                                ]
                                             
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Eigenvalue can serve as a faithful estimate about the relative magnitudes of the components of a matrix with positive entries. Consider a time varying non-negative matrix
                        A(t)and its spectral radius
                        ρ(A(t))being the largest eigenvalue of
                        A(t)where
                        t
                        denotes the time. If
                        A(t)changes over time such that the elements of A(t) increase, then the spectral radius will also monotonously increase with time. The monotonicity can be easily proved from the Perron–Frobenius theorem (Shores, 2007) and can also be inferred from the following lemma:


                        
                           Lemma 1
                           
                              Let A
                              =
                              [ai,j] be a real square matrix with simple eigenvalue λ and corresponding (row) left eigenvector v>0 and (column) right eigenvector w>0. Then the matrix of partial derivatives of λ with respect to the entries of A is given by:
                              
                                 
                                    
                                       
                                          
                                             [
                                             
                                                
                                                   ∂
                                                   λ
                                                
                                                
                                                   ∂
                                                   
                                                      a
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                             
                                             ]
                                          
                                          =
                                          
                                             
                                                w
                                                v
                                             
                                             
                                                v
                                                w
                                             
                                          
                                       
                                    
                                 
                              
                           


                        
                           Proof
                           The proof follows from Lemma 6 of Lind (1989).

Determinant of a matrix consisting of all positive elements can also quantify the magnitudes of individual components, but its value depends too much on orientation of the members resulting in unexpected low values even if most of the solutions are of high magnitude. Fig. 4(a) and (b) show how the determinant of a matrix and the median eigenvalue of a positive matrix vary with increasing individual member values. Matrix elements are selected from a normal distribution with a mean as varying with x axis values and standard deviation fixed at unity. Fig. 4(a) or variations with determinant shows that variations are with high slope but there are unexpected troughs with increasing magnitude. However Fig. 4(b) shows that Eigen value is monotonically increasing indicating it is quite reliable though its order of slope is much less. Thus, we quantify our dynamic detection metric by:

                           
                              (15)
                              
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   [
                                                   
                                                      σ
                                                      1
                                                   
                                                   
                                                   
                                                      σ
                                                      2
                                                   
                                                   
                                                   
                                                      σ
                                                      3
                                                   
                                                   
                                                   ·
                                                   
                                                   ·
                                                   
                                                   
                                                      σ
                                                      N
                                                   
                                                   ]
                                                
                                                T
                                             
                                             =
                                             e
                                             i
                                             g
                                             e
                                             n
                                             
                                             
                                                (
                                                Θ
                                                )
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                          ξ
                                       
                                       
                                          =
                                       
                                       
                                          
                                             max
                                             (
                                             σ
                                             )
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where eigen returns the eigenvalues of the matrix in its argument and ξ denotes the maximum component of σ. The variation in the magnitude of ξ depicts the occurrence of dynamism. However, such change instead of being constant varies from one dynamic instance to another and from one problem to other. A sudden or abrupt change in the variation of ξ value behaves as an impulse that has a direct correspondence to dynamism characteristics in the search space. Additionally inference drawn from the reconstruction of ξ metric is relative to the values achieved by it in the previous iterations. To assert our observation theoretically we devise a slope detection technique to limit the deviation of ξ within a fixed range. The method necessarily transforms the ξ value to a ψ metric that quantifies the ξ value in a fixed range of [0, 1] and eases detection characteristics. Then we denote the slope angle as: 
                           
                              (16)
                              
                                 
                                    
                                       θ
                                       i
                                    
                                    =
                                    
                                       tan
                                       
                                          −
                                          1
                                       
                                    
                                    
                                       (
                                       
                                          ξ
                                          i
                                       
                                       /
                                       
                                          (
                                          1
                                          +
                                          min
                                          
                                          
                                             [
                                             
                                                ξ
                                                
                                                   (
                                                   i
                                                   −
                                                   2
                                                   )
                                                   :
                                                   (
                                                   i
                                                   −
                                                   1
                                                   )
                                                
                                             
                                             ]
                                          
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       Ψ
                                       i
                                    
                                    =
                                    
                                       θ
                                       i
                                    
                                    /
                                    
                                       (
                                       π
                                       /
                                       2
                                       )
                                    
                                    ;
                                 
                              
                           
                        
                     

The dynamism in search space can involve three phases in the detection characteristics. First, it involves the initial phase when all the solutions are produced in static space. Second it might involve an intermediate step where part of the offspring might have been generated on static space and other part in a new environment after the dynamic change. Thirdly the generation of an offspring can take place in a complete new environment. The intermediate state might hamper proper detection characteristics as the difference in ξ value over consecutive generations will not be significant. Hence if we omit the intermediate step in the slope detection technique, the algorithm will have an apparent impression that the change has occurred abruptly from one environment to another. Thus a space of two iterations is allowed to prevent the detection problem that might arise generally due to partial effect of the dynamic characteristics on the solutions.

The variation of θ as given by Eq. (16) is so chosen to make use of the typical nature of the arc-tan function which generates an effective set of values within the range [0, π/2] from the domain [0, ∞] .This necessarily implies that θ can accept values as arguments in the range 0 to ∞ and can suitably scale the abrupt deviation in the ξ value precisely within a short interval. The value, thus obtained, acts as an argument in Eq. (17) which plays the determining role in identifying the dynamic nature of the landscape. Thus, whenever ψ(i) attains a high value close to 1, a dynamic change is said to have occurred. For our study, we have used a fixed value of 0.95 which has been efficient for dynamic detection over all the test beds used. If the dynamic changes in the landscape are nominal, then a lower value can be set. The first two iterations from the start of a new dynamic instance can be omitted from such intermediate stage omission calculation as dynamic change seldom can occur over the first two iterations. In those calculations 
                           
                              min
                              [
                              
                                 ξ
                                 
                                    (
                                    i
                                    −
                                    2
                                    )
                                    :
                                    (
                                    i
                                    −
                                    1
                                    )
                                 
                              
                              ]
                           
                         is just replaced by 
                           
                              ξ
                              
                                 (
                                 i
                                 −
                                 1
                                 )
                              
                           
                        .

The success of a DOP solver lies in its ability to not only successfully track the onset of a dynamic change, but also on how the algorithm responds to the changed landscape. An efficient way of adapting to the dynamic landscape can be to deploy a grouping strategy to preserve the traits pertaining to the best possible individuals with passing change instances. A very commonly used and efficient clustering strategy called the Fuzzy C Means (FCM) (Sreenivasarao & Vidyavati, 2010) is opted here within the framework of MDE-LiGO. The algorithm modifies the distance between the cluster centers and data points at every current instance. When further improvement cannot be achieved, the termination criterion is said to have been met. A membership value is assigned to every individual which measures its eligibility to be part of a certain cluster. Higher membership value for a certain cluster indicates strong inclination of the individual to be member of the aforesaid cluster. Locally mutated operations in MDE-LiGO are expected to produce solutions in diverse regions of the search space. Thus, clustering techniques can be used to successfully track best or potentially best individuals. Note that in some previous works like Wang, Zhang, and Zhang (2007) hierarchical clustering was included in a DE framework to improve the performance on DE over static functional landscapes. FCM can efficiently cluster the data points into distinct sets representing different localities and the best solution in each of these clusters can be identified as the potential local best solutions. FCM has some advantage over the hard clustering methods in the sense that it is specifically suited to overlapped data set which is usually the case in optimization problem with multiple basins of attraction. Only these best solutions are retained while others are re-dispersed in the search space randomly for a new dynamic instance. The retained traits act as guide to the new influx of individuals as to the direction of the global optimum in the new landscape. The reinitialized individuals also bear significance as they track down any emerging potential solutions. As discussed in Cedeno and Vemuri (1997), identifying the correct number of clusters for any unknown niching landscape is impractical. We have used a standard cluster size of 10 assuming that a landscape might have a maximum of 10 potential solutions. All other parameter settings of FCM used have been kept same as in Sreenivasarao and Vidyavati (2010) and are not problem dependent. This is how MDE-LiGO adapts to a dynamic change during optimization.

MDE-LiGO incorporates three components- the p-local best mutation, l-best crossover, and an exhaustive dynamic detection scheme. The mutation phase involves distance calculations between all the parents. The complexity is thus O(Np
                        2). The crossover modification does not involve any extra computational labor as obvious from the scheme. The computational complexity of the detection algorithm is subsequently analyzed. It involves formation of the deviation matrix, eigenvalue calculation of the matrix and quantization. The formation of deviation matrix requires a fitness deviation calculation of one offspring with respect to all other parents. Since the procedure is repeated for all offspring, forming deviation matrix requires an overall complexity of O(Np
                        2).

Eigen value calculation is, in general, of complexity O(Np
                        3) as it involves matrix multiplication of Np × Np matrices. However, by using theCoppersmith–Winograd algorithm (Coppersmith & Winograd, 1990) the overall complexity can be reduced to O(Np
                        2.375477). Complexity of quantization is a two-step process that involves arithmetic computations of negligible overhead and thus, can be eliminated from considerations. Thus, the total complexity considerations of MDE-LiGO algorithm is O(max (Np
                        2.375477, Np
                        2)) ≈ O(Np
                        2
                        .375477).

Note that according to the authors, the timing complexity of the clustering operation in CPSO algorithm (Liu et al., 2008) that also uses Euclidean distance calculations heavily is O(Np
                        2), Np being the initial swarm size. FCM for clustering as a measure of adaptation to landscape dynamics has been used only once for each dynamic instance. In other words, adaptation to a new landscape and subsequent incorporation of FCM has been introduced only when a dynamic change has been detected. Hence it is not used in every iteration of the algorithm and does not contribute to algorithm complexity.

@&#EXPERIMENTAL RESULTS@&#

IEEE CEC 2009 benchmark problems for dynamic optimization were generated by using the Generalized Dynamic Benchmark Generator (GDBG) system proposed in (Li et al., 2008). GDBG constructs dynamic environments for the location, height and width of peaks. The GDBG system poses greater challenges for optimization than the MPB problems due to the rotation method, larger number of local optima, and higher dimensionalities. In GDBG system, the DOPs can be defined as follows:

                           
                              
                                 
                                    F
                                    =
                                    f
                                    (
                                    x
                                    ,
                                    ϕ
                                    ,
                                    t
                                    )
                                    ,
                                 
                              
                           
                        where F is the optimization problem, f is the cost function, x is a feasible solution in the solution set, t is the real world time, and ϕ is the system control parameter(s). The GDBG system creates the dynamism by altering the system control parameter(s) in the following way:

                           
                              
                                 
                                    ϕ
                                    (
                                    t
                                    +
                                    1
                                    )
                                    =
                                    ϕ
                                    (
                                    t
                                    )
                                    ⊕
                                    Δ
                                    ϕ
                                    ,
                                 
                              
                           
                        where Δϕ is the deviation from the current system control parameter. The notation ⊕ indicates that the system parameters at time-step t
                        +1 are composed of the system parameter values at time step t combined with the corresponding deviations from the values at time t (through any mathematical operation depending on the nature of the parameter) and the deviations Δϕ are independent of the actual values denoted by ϕ. Hence the new environment at next moment will be:

                           
                              
                                 
                                    f
                                    (
                                    x
                                    ,
                                    ϕ
                                    ,
                                    t
                                    +
                                    1
                                    )
                                    =
                                    f
                                    (
                                    x
                                    ,
                                    ϕ
                                    (
                                    t
                                    )
                                    ⊕
                                    Δ
                                    ϕ
                                    ,
                                    t
                                    )
                                    ,
                                 
                              
                           
                        
                     


                        Li et al. (2008) introduced a rotation method instead of shifting the positions of peaks as done in the MPB (Branke, 1999) problems. The GDBG system poses greater challenges for optimization than the MPB problems due to the rotation method, larger number of local optima, and higher dimensionalities. There are seven change types for each of the test functions in the GDBG benchmark suite and these are small step change, large step change, random change, chaotic change, recurrent change, recurrent change with noise, and dimensional change. Below we briefly describe each of the change types:

                           
                              1.
                              T1 (small step): 
                                    
                                       Δ
                                       φ
                                       =
                                       α
                                       ·
                                       
                                          ∥
                                          φ
                                          ∥
                                       
                                       ·
                                       r
                                       ·
                                       
                                          φ
                                          
                                             s
                                             e
                                             v
                                             e
                                             r
                                             i
                                             t
                                             y
                                          
                                       
                                       ,
                                    
                                 
                              

T2 (large step): 
                                    
                                       Δ
                                       φ
                                       =
                                       
                                          ∥
                                          φ
                                          ∥
                                       
                                       ·
                                       
                                          (
                                          α
                                          ·
                                          s
                                          i
                                          g
                                          n
                                          
                                             (
                                             r
                                             )
                                          
                                          +
                                          
                                             (
                                             
                                                α
                                                max
                                             
                                             −
                                             α
                                             )
                                          
                                          ·
                                          r
                                          )
                                       
                                       ·
                                       
                                          φ
                                          
                                             s
                                             e
                                             v
                                             e
                                             r
                                             i
                                             t
                                             y
                                          
                                       
                                       ,
                                    
                                 
                              

T3 (random): 
                                    
                                       Δ
                                       φ
                                       =
                                       N
                                       
                                          (
                                          0
                                          ,
                                          1
                                          )
                                       
                                       ·
                                       
                                          φ
                                          
                                             s
                                             e
                                             v
                                             e
                                             r
                                             i
                                             t
                                             y
                                          
                                       
                                       ,
                                    
                                 
                              

T4 (chaotic): 
                                    
                                       φ
                                       
                                          (
                                          t
                                          +
                                          1
                                          )
                                       
                                       =
                                       A
                                       ·
                                       
                                          (
                                          φ
                                          
                                             (
                                             t
                                             )
                                          
                                          −
                                          
                                             φ
                                             min
                                          
                                          )
                                       
                                       
                                          ·
                                          (
                                          1
                                          −
                                       
                                       
                                          (
                                          φ
                                          
                                             (
                                             t
                                             )
                                          
                                          −
                                          
                                             φ
                                             min
                                          
                                          )
                                       
                                       /
                                       
                                          ∥
                                          φ
                                          ∥
                                          )
                                          ,
                                       
                                    
                                 
                              

T5 (recurrent): 
                                    
                                       φ
                                       
                                          (
                                          t
                                          +
                                          1
                                          )
                                       
                                       =
                                       
                                          φ
                                          min
                                       
                                       +
                                       
                                          ∥
                                          φ
                                          ∥
                                       
                                       
                                          (
                                          sin
                                          
                                             (
                                             
                                                
                                                   2
                                                   π
                                                
                                                P
                                             
                                             t
                                             +
                                             ϕ
                                             )
                                          
                                          +
                                          1
                                          )
                                       
                                       /
                                       2
                                       ,
                                    
                                 
                              

T6 (recurrent with noise): 
                                    
                                       φ
                                       
                                          (
                                          t
                                          +
                                          1
                                          )
                                       
                                       =
                                       
                                          φ
                                          min
                                       
                                       +
                                       
                                          ∥
                                          φ
                                          ∥
                                       
                                       
                                          (
                                          sin
                                          
                                             (
                                             
                                                
                                                   2
                                                   π
                                                
                                                P
                                             
                                             t
                                             +
                                             ϕ
                                             )
                                          
                                          +
                                          1
                                          )
                                       
                                       /
                                       2
                                       +
                                       N
                                       
                                          (
                                          0
                                          ,
                                          1
                                          )
                                       
                                       ·
                                       n
                                       o
                                       i
                                       s
                                       
                                          y
                                          
                                             s
                                             e
                                             v
                                             e
                                             r
                                             i
                                             t
                                             y
                                          
                                       
                                       ,
                                    
                                 
                              

T7 (dimensional change): 
                                    
                                       D
                                       (
                                       t
                                       +
                                       1
                                       )
                                       =
                                       D
                                       (
                                       t
                                       )
                                       +
                                       s
                                       i
                                       g
                                       n
                                       ·
                                       Δ
                                       D
                                       ,
                                    
                                 
                              

Simulation environment (hardware and software) used for carrying out the experiments described in the subsequent sections can be summarized as: CPU: 3.2 GHz Intel Core i5, RAM: 2 GB DDR3, and MATLAB 2009b edition. The performance of MDE-LiGO is measured in terms of the mean error (Li et al., 2008) and the adaptability metric (Trojanowski & Michalewicz, 1999) obtained over 20 independent runs. The mean error is calculated according to the following expression:

                           
                              
                                 
                                    
                                       E
                                       
                                          m
                                          e
                                          a
                                          n
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          (
                                          
                                             r
                                             u
                                             n
                                             s
                                             *
                                             n
                                             u
                                             m
                                             _
                                             c
                                             h
                                             a
                                             n
                                             g
                                             e
                                          
                                          )
                                       
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          r
                                          u
                                          n
                                          s
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             n
                                             u
                                             m
                                             _
                                             c
                                             h
                                             a
                                             n
                                             g
                                             e
                                          
                                       
                                       
                                          E
                                          
                                             i
                                             ,
                                             j
                                          
                                          
                                             l
                                             a
                                             s
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Here runs is the total number of runs and has been set to 20, The number of dynamic changes occur during each independent run is denoted by num_change and 
                           
                              E
                              
                                 i
                                 ,
                                 j
                              
                              
                                 l
                                 a
                                 s
                                 t
                              
                           
                         is the error obtained before the jth dynamic change sets in at the end of the ith independent run. It should be mentioned here that the error 
                           
                              E
                              
                                 l
                                 a
                                 s
                                 t
                              
                           
                         corresponds to the absolute fitness difference between the best solution obtained by the EA employed (before a landscape change) and the known best solution (for that landscape) i.e. 
                           
                              
                                 E
                                 
                                    l
                                    a
                                    s
                                    t
                                 
                              
                              
                                 (
                                 t
                                 )
                              
                              =
                              
                                 |
                                 
                                    f
                                    
                                       (
                                       
                                          
                                             X
                                             →
                                          
                                          
                                             b
                                             e
                                             s
                                             t
                                          
                                       
                                       
                                          (
                                          t
                                          )
                                       
                                       )
                                    
                                    −
                                    f
                                    
                                       (
                                       
                                          X
                                          →
                                       
                                       *
                                       
                                          (
                                          t
                                          )
                                       
                                       )
                                    
                                 
                                 |
                              
                           
                         which shows the deviation from actual obtained value. In all result tables, the best results have been marked as boldface.

The difference between the current best individual and that of the optimum averaged over the entire run is measured by the Adaptability (Ada) metric defined as:

                           
                              
                                 
                                    A
                                    d
                                    a
                                    =
                                    
                                       1
                                       
                                          n
                                          u
                                          m
                                          _
                                          c
                                          h
                                          a
                                          n
                                          g
                                          e
                                       
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                          u
                                          m
                                          _
                                          c
                                          h
                                          a
                                          n
                                          g
                                          e
                                       
                                    
                                    
                                       [
                                       
                                          
                                             1
                                             τ
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             
                                                τ
                                                −
                                                1
                                             
                                          
                                          
                                             e
                                             r
                                             
                                                r
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                       ]
                                    
                                    ,
                                 
                              
                           
                        where τ is the number of generations between changes when the environment remains static. erri,j
                         denotes the absolute difference in fitness values between the current best individual in the population of the jth generation after the last change and that of the optimum value for the fitness landscape after the ith change. It is evident that smaller the value of mean error and adaptability, the better performing is the algorithm.

@&#RESULTS AND DISCUSSIONS@&#

We have presented the performance of our algorithm in terms of mean and standard deviation (STD) of error values [Tables 2 and 3] along with the adaptability metric [Tables 4 and 5] obtained over the suite of benchmark problems used in CEC 2009 (Li et al., 2008). We have compared these results with 7 significant evolutionary DOP solvers: DyneDE (Mendes & Mohais, 2005), DASA (Brest et al., 2013), jDE (Brest et al., 2009), dopt-aiNET (De Franca et al., 2005; De França and Von Zuben, 2009), CPSO (Liu et al., 2008), PSO-CP (Liu et al., 2010) and CESO (Lung & Dumitrescu, 2007a). The parameter settings for MDE-LiGO remain as given in Table 1.
                        
                     

For results provided in Tables 2
                         and 3
                        
                        
                        , a non-parametric statistical test, called the Wilcoxon's rank sum test for independent samples (Wilcoxon, 1945), is conducted at the 5 percent significance level, in order to judge the statistical significance of the best results obtained in each experimental scenario. The statistical test results are indicated within parentheses throughout all the result tables as “+”, “−”, or “≈”, when the result of MDE-LiGO is statistically significantly better than, worse than, or statistically equivalent to the corresponding results respectively. The results obtained in all the test cases by MDE-LIGO and 6 other significant evolutionary dynamic optimizers are tabulated in Tables 2 and 3.
                     

In order to undertake multiple pair wise comparisons, we report the adjusted p-values obtained by using the following methods (García, Fernández, Luengo, & Herrera, 2010): Nemeny's test, Holm's procedure, Shaffer's static procedure, and Bergmann–Hommel's dynamic procedure. Table 6
                         provides information about the state of retention or rejection of any hypothesis, comparing its associated adjusted P-value with the chosen significance level of α
                        =0.05. We note that hypotheses 1–7 are all rejected by the four procedures, indicating the gross performance of MDE-LiGO to be significantly better than the 7 contender algorithms.

All the GDBG benchmarks are scalable rotated multimodal function with a huge number of local optima. In spite of such a complex benchmark the proposed algorithm proves quite efficient in locating the best solution in the landscape evident from a close inspection of the comparison with other approaches. Out of the 49 total test instances, on a total of 39 cases, MDE-LiGO performed statistically better than all the 7 other state-of-the-art algorithms. For the remaining 10 cases, performance of MDE-LiGO can be summarized in the following way.

On function F1 with change type T4, MDE-LiGO yielded second best mean error although the result does not differ statistically significantly as compared to the best performing algorithm jDE. Also it may be observed that MDE-LiGO yielded the lowest adaptability metric value in this test instance. MDE-LiGO finished third as per the mean error value on function F2 with change type T4 although the mean error produced by MDE-LiGO remained once again statistically equivalent to jDE and CPSO algorithms that ranked second and first respectively for this benchmark instance. Also we note that the adaptability metric of MDE-LiGO remained best, indicating a better tracking of the changing optima by the proposed algorithm. For function F2 with change type T6, the performance of MDE-LiGO in terms of the mean error ranks second in comparison to CPSO; however, the former algorithm succeeded in yielding the best adaptability metric value. Also the mean error for MDE-LiGO did not differ statistically significantly from that of CPSO, as indicated by the Wilcoxon's rank sum test results. MDE-LiGO remained second best, outperformed by jDE only for the function F3 corresponding to change types T4 and T6. However, for the same function with change type T7, mean error of MDE-LiGO remained statistically comparable to jDE. CPSO was able to yield slightly better, but not statistically significantly different mean error as compared to MDE-LiGO for the composition of Griewank's function F4 with change type T4. However, MDE-LiGO could perform best with respect to the adaptability metric in this case as well. For function F5 with change type T5, MDE-LiGO achieved statistically comparable mean error in comparison to jDE, although it came second to jDE in rank. The adaptability of MDE-LiGO was once again best in this case. For function F6 with change type T6, mean error yielded by MDE-LiGO was statistically comparable to the best performing algorithm PSO-CP. However, MDE-LiGO exhibited a better adaptability value in this case. For function F6 with change type T4, although MDE-LiGO was outperformed by jDE with respect to the mean error, the former yielded a much better value of the adaptability metric.

Thus, the above discussion indicates that in around seven test instances, where MDE-LiGO could not become the best performing algorithm when ranked according to mean error values, the algorithm ranked second best and its performance from the best algorithm did not differ in a statistically meaningful way as confirmed by the non-parametric rank sum test. Also the adaptability metric value yielded by MDE-LiGO remained best in majority of the tested instances. This indicates that for majority of the tested instances the best individual in the MDE-LiGO population remained closer the optimum for all generations, i.e., the optimum was better tracked by the proposed algorithm. Although jDE, CPSO, and PSO-CP were the closest competitors of MDE-LiGO on the used benchmark instances, we note that no other evolutionary DOP solver, considered in this article, could keep such a consistent performance as exhibited by MDE-LiGO on the wide variety of the tested DOP instances.

Convergence characteristics for different functions have been given in Fig. 5
                        . Here we plotted the ratio rG
                         for the functions considered. The relative value rG
                         is calculated as 
                           
                              f
                              
                                 (
                                 
                                    
                                       X
                                       →
                                    
                                    
                                       b
                                       e
                                       s
                                       t
                                       ,
                                       G
                                    
                                 
                                 )
                              
                              /
                              f
                              
                                 (
                                 
                                    
                                       X
                                       →
                                    
                                    G
                                    *
                                 
                                 )
                              
                           
                         for function F1 (since it poses a maximization problem) and for other functions (which are to be minimized), rG
                         is calculated as 
                           
                              f
                              
                                 (
                                 
                                    
                                       X
                                       →
                                    
                                    G
                                    *
                                 
                                 )
                              
                              /
                              f
                              
                                 (
                                 
                                    
                                       X
                                       →
                                    
                                    
                                       b
                                       e
                                       s
                                       t
                                       ,
                                       G
                                    
                                 
                                 )
                              
                           
                        .

Variation of the algorithmic characteristic with varying population size (Np) is shown in Table 7
                        . The algorithm is seen to perform best with population size fixed at 100. Final values as obtained with population sizes fixed at 90 or 110 are not seen to be markedly different proving that the algorithm is not that sensitive to Np variations. Results however deteriorate with Np set at 50 as this hardly give sufficient exploration and reduces the effectiveness of DE/current-to-p-local best/1 operator. Also too high a population size will degrade the performance of the algorithm as it increases the computational burden significantly. Our empirical experiments indicate that a value of Np fixed to 100 provides acceptably good solutions on the problems considered in this paper.

To evaluate the performance of MDE-LiGO mutation operator the performance of the algorithm is compared with that of other variants of the algorithm with different mutation schemes namely DE/rand/1, DE/rand/2, DE/current-to-best/2, DE/best/1, DEGL mutation scheme (Das et al., 2009), and DE/current-to-gr_best /1 mutation from the MDE-pBX algorithm (Islam et al., 2012). For the classical DE schemes, we take the standard choice of scale factor F
                        =0.8 and Cr
                        =0.9. For DEGL we take α
                        =
                        β
                        =
                        F
                        =0.7 and Cr
                        =0.3 (Das et al., 2009) and for DE/current-to-gr_best /1, F is adapted as in (Islam et al., 2012). Six change instances are recorded where the aforementioned conventional DE schemes are put to test in comparison with the proposed DE/current-to-p-local best/1. The results tabulated in Table 8
                         clearly show that in all the instances the latter scheme is able to produce significantly better results in comparison to the other schemes. DE/current-to-gr_best /1 is seen to yield statistically equivalent results compared to the proposed scheme for functions F1 and F2. It is also kept in mind that the test has been performed keeping other influencing factors fixed for all the schemes, so that the difference in result may be justifiably attributed.

To judge the effectiveness of locality based crossover we compare the results with and without locality based crossover operation in MDE-LiGO. All the other conditions are left unaltered and the results are tabulated in Table 9
                        . The results show significant improvement in case of values obtained with the locality based crossover scheme. This clearly suggests to the utility of the operator.

The dynamic detection in MDE-LiGO is dependent on an exhaustive scheme that measures the degree of failure in every unsuccessful update. The performance of such a scheme has been analyzed through an experiment in which adaptation to dynamic change was stopped and algorithm was run with the detection characteristics only with a population size of 100. The variation of ψ with iterations has been shown in Fig. 6
                        . It is evident that at 1000th iteration the value of ψ increases to 1 and thus, efficiently detects dynamic change. The validity of the algorithm is justified with some sample test instances though equivalent results have been obtained on all other test instances.

The value of p is varied according to the formula (9). It is evident from Fig. 7
                         that above stated formula ensures that a certain increase in successful update necessarily compensates the value of p and vice versa. If we look closely at Fig. 7 then we see that the variation in p almost compensates the fluctuation in number of successful updates. This implies that the value of p is high around regions with low successful updates of individual.

The adaptive nature has been implemented in MDE-LiGO. The convergence characteristics for F1-T5 with number of peaks=10 (in dotted lines) for a population size of 100 along with the percentage of locality mutation is shown (in solid lines alongside) for dimensionality=10 in Fig. 8
                        . If the parent as well as the offspring is searching for the same optima then it is considered as a successful local mutation. It is seen that lower values of p results in higher local mutation percentage but cannot converge to optimum. A higher order of p results in premature convergence but with less local mutations that is proper diversity cannot be maintained. A value of p
                        =10 percent is near optimum but fails to provide accurate solutions. However an adaptive p is accurate in maintaining local mutations and obtaining best solutions.

The utility of this scheme is validated through experimentation here the locality induced retention strategy is not incorporated and comparing the adaptability results to MDE-LiGO incorporated with locality induced retention strategy. The test is done on similar background conditions. The results as obtained have been reported in Table 9. The superior results conclusively justify that use of the retention scheme provides the necessary means to adapt to a dynamic change.

The Exhaustive Dynamic Detection algorithm has also been tested over undetectable dynamic environments as suggested by Li and Yang (2012). Here partial dynamics in the landscape has been introduced and the percentage of the landscape that has been exposed to dynamics for a test condition has been set by the parameter ‘cPeaks’. cPeaks denotes the percentages of changing peaks and was added as an additional feature of the MPB problems by Li and Yang (2012). Results have been shown for MDE-LiGO with population size of 100 and cPeaks values 0.3 and 0.5. Results as shown in Fig. 9
                         show that the algorithm is efficient even in such conditions and its detection power is not hampered even in this undetectable landscape dynamics. Here the ξ and ψ values are plotted with generations of the run. The high values of ξ signify that the dynamic change has been successfully identified in both the cases and ψ value very close to 1 signify that proper detection of the change has occurred.

@&#CONCLUSIONS@&#

MDE-LiGO proposes a modification to the genetic operators of the DE model to particularly suit optimization attempts for DOPs. Additional features, key to the success of any DOP have also been incorporated. The backbone to the algorithm has been formed of a conglomeration of three novel concepts. First, owing to limitations of the standard DE mutation operators a unique DE set of DE p-local best mutation equations has been utilized. The use of Euclidean distance based proximity of traits pertaining to a candidate solution and retention of the same throughout the search forms the basic essence of these new proposed mutation equations. The parameter
                     p
                     has been made to vary adaptively so that retention of traits is controlled by the fruitfulness of the search in the particular domain. The second most prominent feature of MDE-LiGO is the introduction of an adaptive l-best crossover technique that further modifies the genetic operation. Unlike conventional crossover where a trait is either accepted or rejected based on a crossover probability, l-best crossover makes use of the concept of an adaptive blending rate which dictates the rate at which the traits intermix to produce a successful offspring. Finally, we detect the change in dynamic environment by an exhaustive locality induced retention technique. The margin of the number of unsuccessful updates after a certain generation is monitored which when exceeds a certain threshold state; a dynamic environment change is inferred to have occurred. Adaptation to detected changes is done using clustering techniques which again is in harmony with our objective of retaining information that may lead to future success. The performance of MDE-LiGO has been tested on the CEC 2009 benchmark on DOP's and the results have been found to be far superior to that obtained from the state-of-the-art EAs. The algorithmic key points have also been substantiated with thorough experimental validation. Thus MDE-LiGO offers a reliable, robust and effective method in dealing with problems posed by a dynamic environment.

It should be noted that several practical DOPs may come up with linear or non-linear constraints imposed in the form of equality or inequality relations involving the decision variables. It is worthy to investigate the applicability of MDE-LiGO to such constrained problems. A few years ago Kimbrough, Koehler, Lu, and Wood (2008) proposed a dual population GA for solving the constrained static optimization problems. The algorithm maintains two separate populations: one for feasible solutions that evolve to further reduce the objective function and the other for the infeasible solutions that evolve to reduce the constraint violations. A slightly different approach involving a dual population DE was proposed by Huang, Wang, and He (2008) where one population evolves with DE according to the objective function value or constraint violation, while the other population stores the feasible solutions which may be reused for repairing some of the infeasible solutions. It may be interesting to integrate the dual-population scheme with MDE-LiGO especially when the constraints are changing with time. Such problems involving dynamic constraints very often emerge in practice and some tangible instances include document stream modeling, evolvable hardware design, optimal control of fermentation processes and hydrothermal scheduling. Also, it is important to investigate the performance of MDE-LiGO on practical DOPs beyond the benchmarks used in this paper. Such investigation may indicate whether some modifications as suggested here for MDE-LiGO has biased the algorithm for the GDBG test-suite.

@&#REFERENCES@&#

