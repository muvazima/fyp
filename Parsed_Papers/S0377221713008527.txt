@&#MAIN-TITLE@&#Emergency response in natural disaster management: Allocation and scheduling of rescue units

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We model scheduling and assigning rescue units to incidents in disaster management.


                        
                        
                           
                           A decision support model in a mixed integer non-linear formulation is proposed.


                        
                        
                           
                           A catalog of construction and improvement heuristics as well as GRASP metaheuristics are computationally tested and evaluated.


                        
                        
                           
                           Several results are close to optimal solutions and improve current best practice.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Decision support systems

Natural Disaster Management (NDM)

Heuristics

Assignment

Scheduling

@&#ABSTRACT@&#


               
               
                  Natural disasters, such as earthquakes, tsunamis and hurricanes, cause tremendous harm each year. In order to reduce casualties and economic losses during the response phase, rescue units must be allocated and scheduled efficiently. As this problem is one of the key issues in emergency response and has been addressed only rarely in literature, this paper develops a corresponding decision support model that minimizes the sum of completion times of incidents weighted by their severity. The presented problem is a generalization of the parallel-machine scheduling problem with unrelated machines, non-batch sequence-dependent setup times and a weighted sum of completion times – thus, it is NP-hard. Using literature on scheduling and routing, we propose and computationally compare several heuristics, including a Monte Carlo-based heuristic, the joint application of 8 construction heuristics and 5 improvement heuristics, and GRASP metaheuristics. Our results show that problem instances (with up to 40 incidents and 40 rescue units) can be solved in less than a second, with results being at most 10.9% up to 33.9% higher than optimal values. Compared to current best practice solutions, the overall harm can be reduced by up to 81.8%.
               
            

@&#INTRODUCTION@&#

Natural disasters, such as earthquakes, tsunamis, floods, hurricanes and volcanic eruptions, have caused tremendous harm in the past and continue to threaten infrastructure and millions of people each year. Of particular importance for the reduction of casualties and economic losses is the response phase in natural disaster management, during which a large number of geographically-dispersed incidents, such as fires and collapsed buildings, require immediate processing by rescue units in the presence of severe resource scarcities and time pressure. Thus, one of the most critical emergency response tasks (Comfort, Ko, & Zagorecki, 2004) is the efficient allocation and scheduling of rescue units. However, this challenge has been addressed in the literature only very rarely.

In this paper, we propose a decision support model for emergency operations centers that allocates available rescue units to emerging incidents and schedules the processing time of these incidents. The model is formulated as a binary quadratic optimization problem, where the objective minimizes the sum of completion times of incidents weighted by their severity. We refer to this problem as the Rescue Unit Assignment and Scheduling Problem (RUASP). Our decision problem is related to problems from both routing and scheduling. We show that our problem can be modeled as a (more complex) modification of both the Multiple Traveling Salesman Problem (mTSP) and the parallel-machine scheduling problem with unrelated machines, non-batch sequence-dependent setup times and a weighted sum of completion times as the objective function, classified as 
                        
                           R
                           /
                           
                              
                                 ST
                              
                              
                                 SD
                              
                           
                           /
                           ∑
                           
                              
                                 w
                              
                              
                                 j
                              
                           
                           
                              
                                 C
                              
                              
                                 j
                              
                           
                        
                      in the scheduling literature. Using this relationship, we prove that our problem is NP-hard.

However, the NP-hardness of the underlying problem opposes one of the imposed requirements that decisions – even in complex emergency situations – must be derived timely. Therefore, we propose, implement and computationally compare several heuristics for the allocation and scheduling of rescue units. More specifically, we use a Monte Carlo-based heuristic as well as joint applications of 8 construction heuristics and 5 improvement heuristics. In addition, we embed these combinations of construction and improvement heuristics into GRASP metaheuristics. Thus, our work contributes not only to the field of disaster management, but also to the optimization literature in general.

The remainder of this paper is structured as follows. Section 2 examines and presents relevant literature and reveals the research gap that our paper addresses. In Section 3, we suggest the RUASP problem and propose an appropriate optimization model. Because of the NP-hardness, Section 4 proposes several solution heuristics. Our computational experiments are presented in Section 5, which also discusses our results. We summarize our results in Section 6, and conclude with an outlook on future research directions.

@&#RELATED WORK@&#

In the literature on disaster management, challenges and activities are classified (Ajami & Fattahi, 2009; Altay & Green, 2006; IFRC, 2012) into the preparedness phase (period before the disaster), the response phase (period during and shortly after the disaster) and the recovery phase (period long time after the disaster). More specifically, the preparation phase addresses tasks related to planning, training, early warning (i.e. prediction) and the establishment of necessary emergency services (Gasparini, Manfredi, & Zschau, 2007; Nisha de Silva, 2001; Pollak, Falash, Ingraham, & Gottesman, 2004; Svensson, Holst, Lindquist, & Lindgren, 1996; UN/ISDR, 2005). The primary aims during the response phase are both rescue from immediate danger and stabilization of the condition of survivors. Tasks include relief, emergency shelter and settlement, emergency health, water and sanitation and tracing and restoring family links (IFRC, 2012). In the recovery phase, tasks are related to person finding, (ex-post) data analysis, intelligent infrastructure repair and the provision of various emergency services as well as resources in order to recover the most important infrastructure facilities (GAO, 2006; Salleem et al., 2008; Sherali, Carter, & Hobeika, 1991). According to Chen, Sharman, Rao, and Upadhyaya (2008), these phases are sometimes also arranged in a life cycle.

Regarding decision support, research streams (Airy, Mullen, & Yen, 2009; Comes et al., 2010; Lambert & Patterson, 2002; Reijers, Jansen-Vullers, Zur Muehlen, & Appl, 2007; Tamura, Yamamoto, Tomiyama, & Hatono, 2000) utilize methods from applied statistics and probability theory combined with mathematical programming approaches to establish novel codes of conduct and metrics that assist commanders in critical minutes of the decision-making process. In a first research stream, competitive mechanisms (e.g. auctions) and cooperative mechanisms (e.g. multi-criteria approaches) are developed and, in this context, Fiedrich, Gehbauer, and Rickers (2000) introduce the usage of optimization modeling. Second, another research direction follows guidelines from computational intelligence research (Leifler, 2008; van de Walle & Turoff, 2008) to bridge the gap between information system design principles and decision support process architectures. A third research stream uses empirical investigations of past decision-making conclusions to establish innovative courses of action (Faraj & Xiao, 2006). Fourth, research also focuses on the decision-making process based on either decentralized agents (Airy et al., 2009; Falasca, Zobel, & Fetter, 2009) or a centralized authority.

Researchers argue that distributed coordination (i.e. assignments and schedules) remains independent of failures of a single emergency operations center, communication bottlenecks evolve more seldom and loss minimization is achieved more easily. Regarding the latter, Rolland, Patterson, Ward, and Dodin (2010) promote centralized coordination by applying a mathematical programming model for scheduling distributed rescue units and the assignments of incidents to these. However, the suggested model uses time periods of fixed length, and does not account for the fact that incidents may have different levels of severity. As a remedy, Wex, Schryen, and Neumann (2011, 2012, 2013) suggest mathematical formulations and a Monte Carlo-based heuristic for the centralized scheduling and allocation of rescue units under certainty and under uncertainty, respectively.

This study focuses on decision support in operational management during the response phase of natural disaster management. To augment existing work, we develop and computationally validate a large set of heuristics for the decision support problem of centralized coordination of rescue units in terms of their schedules and assignments to incidents. We evaluate all heuristics against two benchmarks: best practice solutions and lower bounds of optimal solutions.

This section introduces the problem of scheduling rescue units and assigning them to incidents optimally after the occurrence of a disaster. We refer to this problem as the Rescue Unit Assignment and Scheduling Problem (RUASP).

The problem size is determined by the number of available rescue units m and the number of incidents n that needs to be processed. We consider situations in which the number of available rescue units is smaller than or equal to the number of incidents (m
                        ⩽
                        n) as this ratio is typical in natural disasters. Furthermore, we account for the following properties.
                           1
                           In order to provide decision support for realistic situations, we conducted interviews with associates from the German Federal Agency for Technical Relief (THW). These associates provided us with profound information on on-site coordination in the upright aftermath of the 2011 earthquake and tsunami in Japan.
                        
                        
                           1
                        
                        
                           Property 1
                           Since not every rescue unit is able to process each incident, we account for both specific requirements of incidents and different capabilities of rescue units.

Processing times are both incident-specific and unit-specific.

Different rescue units need different travel times between the locations of incidents.

The processing of an incident must not be interrupted (non-preemption).

Each incident is assigned a weighting factor accounting for both casualties and damage induced over time. This weight is named factor of destruction or severity level. The sum of weighted completion times regarding the processing of incidents measures, as a proxy, the overall harm.

We illustrate the RUASP in Fig. 1
                        , which shows a feasible solution of a problem instance with m
                        =5 units and n
                        =12 incidents. For each incident j, the level of severity (i.e. factor of destruction) is given by w
                        
                           j
                        
                        ∈{1,…,5}. The sample schedule considers the specific requirements (types) of incidents and the capabilities of rescue units. Here, the variable cap
                           kj
                         equals 1 if and only if rescue unit k has the capability to process incident j.

The figure indicates that the problem to be solved is static and that all incidents, available rescue units and their characteristics are known. However, the decision support system updates its assignments continuously.
                           2
                           In practice, information is likely to be updated frequently so that assignment and scheduling decisions have to be refreshed based on the status quo of available information. We account for these dynamics by suggesting that the optimization model is applied in an iterative manner: if the decision makers determine to update the current scheduling and allocation plan based on new information, a new instance of the optimization problem with updated information is created. When solving this new instance, one needs to account for the fact that some of the known incidents have already been or are being processed. Accordingly, rescue units may have been already assigned and sent to incidents. In this case, it must be prohibited to assign busy rescue units until they will have finished their jobs (non-preemption). To sum up, a sequence of instances is generated and solved during the disaster response phase.
                        
                        
                           2
                         As a consequence, it seems realistic to assume that each instance does not exceed a moderately large size (m,
                        n
                        ⩽40), for which our heuristics can provide feasible solutions in timely manner.

This section explores the relationship of RUASP to existing problems from both routing and scheduling.

In the routing domain, our problem is related to the multiple Traveling Salesman Problem (mTSP), which is a generalization of the TSP and a relaxation of the Vehicle Routing Problem (VRP) with the capacity restrictions removed (Bektas, 2006). To prove the relationship to mTSP, one needs to map rescue units to salesmen and incidents to cities/nodes while requiring that rescue units need to return to a central depot (given by a fictitious incident) with severity level 0. Furthermore, Property 1 (i.e. capabilities) is modeled by setting the corresponding mTSP decision variables to 0. While we can aggregate processing times and travel times in the RUASP to overall travel times, Properties 2 and 3 also require travel times in the mTSP to be salesman-specific. These properties can be modeled by providing salesmen-specific travel times between two cities. In addition to that, Property 4 (non-preemption) is inherently included in the mTSP. Altogether, this leads to the problem mTSP with salesman-specific travel times.

With regard to modeling this problem, it seems straightforward to extend existing mTSP models. In the literature, different mTSP models are suggested (Bektas, 2006). Among these models, only the flow based formulation, which uses three-index decision variables (for two cities and one salesman), can be easily modified to account for salesman-specific travel times. This extension requires leaving all constraints unchanged and substituting only the objective function coefficients c
                        
                           ij
                         by 
                           
                              
                                 
                                    c
                                 
                                 
                                    ij
                                 
                                 
                                    k
                                 
                              
                           
                        , with k being the index of the salesman and i as well as j being the indices of the cities.

Finally, Property 5 addresses the objective to minimize the sum of weighted completion times. However, a serious issue is caused by considering this property since the objective function in mTSP depends only on the edges traveled, but not on the order in which they are traveled. Considering also Property 5 leads to a mTSP with salesman-specific travel times under minimizing the sum of weighted visiting times. We are not aware of related research where a problem of this structure is addressed.

In the same manner as the mTSP, the VRP shares the issue caused by Property 5. Again, we are not aware of any VRP extension that allows modeling our problem. To sum up, the RUASP is related to both the mTSP and the more general VRP, but it is neither a specialization nor a relaxation of any of these problems. Consequently, neither an exact mTSP algorithm nor exact VRP can be regarded as an exact RUASP algorithm. However, as the sets of constraints of the mTSP (in the flow based formulation) and of the RUASP are equal, Section 4 adapts heuristics for the mTSP to the RUASP.

The RUASP is also related to problems in the scheduling literature. If we map rescue units to machines, incidents to jobs and travel times to setup times, then the RUASP is similar to the parallel-machine scheduling problem with unrelated machines, non-batch sequence-dependent setup times, and a weighted sum of completion times as the objective, classified as 
                           
                              R
                              /
                              
                                 
                                    ST
                                 
                                 
                                    SD
                                 
                              
                              /
                              ∑
                              
                                 
                                    w
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    C
                                 
                                 
                                    j
                                 
                              
                           
                         in the scheduling literature (Allahverdi, Ng, Cheng, & Kovalyov, 2008). The RUASP generalizes this scheduling problem which fulfills Properties 1, 2, 4 and 5 as the RUASP provides for machine-specific setup times between two jobs, while, in the scheduling problem, times depend only on the jobs. More precisely, the RUASP becomes a 
                           
                              R
                              /
                              
                                 
                                    ST
                                 
                                 
                                    SD
                                 
                              
                              /
                              ∑
                              
                                 
                                    w
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    C
                                 
                                 
                                    j
                                 
                              
                           
                         scheduling problem if setup times are machine-independent. Property 1 of the RUASP (i.e. capabilities) can be modeled by setting the corresponding decision variables to 0. With regard to the problem formulation of RUASP, any formulation of the scheduling problem 
                           
                              R
                              /
                              
                                 
                                    ST
                                 
                                 
                                    SD
                                 
                              
                              /
                              ∑
                              
                                 
                                    w
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    C
                                 
                                 
                                    j
                                 
                              
                           
                         may be used and modified so that Property 3 (different rescue units need different travel times between the locations of the incidents) holds.

However, according to the review by Allahverdi et al. (2008), there is only one publication adressing this scheduling problem (Weng, Lu, & Ren, 2001). While this paper suggests a recursive objective function, it specifies the constraints at high level only. Thus, their model formulation is too generic for our intention to suggest an optimization model. We suggest and computationally compare several heuristics based on Weng et al. (2001), which can be adapted to the RUASP (see Section 4).

In this section, we propose an optimization model to find optimal schedules and assignments of rescue units to incidents. The model is presented in a binary quadratic formulation.
                           3
                           As noted in Section 3.2, problem formulations of the related mTSP and the 
                                 
                                    R
                                    /
                                    
                                       
                                          ST
                                       
                                       
                                          SD
                                       
                                    
                                    /
                                    ∑
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          C
                                       
                                       
                                          j
                                       
                                    
                                 
                               scheduling problem are available, but, eventually, turned out to be not useful for modeling the RUASP. With regard to the mTSP, the RUASP requires an objective function in which the order of processed incidents is considered. We suggest such an objective function by introducing artificial decision variables that model predecessor relationships. As these variables are appropriate for easily adding subtour elimination constraints, we do not need to draw on the so-called MTZ-based subtour elimination constraints in the flow-based formulation (Bektas, 2006, p. 215). The other constraints included in the flow-based formulation are used in similar form.
                        
                        
                           3
                         The notation is given in Table 1
                        .

The mathematical model can be written as
                           
                              (O)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          
                                             
                                                X
                                             
                                             
                                                ij
                                             
                                             
                                                k
                                             
                                          
                                          ,
                                          
                                             
                                                Y
                                             
                                             
                                                ij
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                w
                                             
                                             
                                                j
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   0
                                                
                                                
                                                   n
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                   =
                                                   1
                                                
                                                
                                                   m
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         ij
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  j
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            +
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  ij
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         ij
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         ij
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     ∑
                                                                  
                                                                  
                                                                     l
                                                                     =
                                                                     0
                                                                  
                                                                  
                                                                     n
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  X
                                                               
                                                               
                                                                  li
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  li
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (C1)
                              
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          0
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 1
                                 ,
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 ,
                              
                           
                        
                        
                           
                              (C2)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 1
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 ,
                              
                           
                        
                        
                           
                              (C3)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       0
                                       j
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 1
                                 ,
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 ,
                              
                           
                        
                        
                           
                              (C4)
                              
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          0
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       i
                                       ,
                                       n
                                       +
                                       1
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 1
                                 ,
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 ,
                              
                           
                        
                        
                           
                              (C5)
                              
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       il
                                    
                                    
                                       k
                                    
                                 
                                 +
                                 
                                    
                                       Y
                                    
                                    
                                       lj
                                    
                                    
                                       k
                                    
                                 
                                 -
                                 1
                                 ⩽
                                 
                                    
                                       Y
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 0
                                 ,
                                 …
                                 ,
                                 n
                                 ;
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 +
                                 1
                                 ;
                              
                           
                        
                        
                           
                              (C6)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                             k
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             m
                                             ;
                                             
                                             l
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      0
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   X
                                                
                                                
                                                   il
                                                
                                                
                                                   k
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                      +
                                                      1
                                                   
                                                
                                             
                                             
                                                
                                                   X
                                                
                                                
                                                   lj
                                                
                                                
                                                   k
                                                
                                             
                                             ,
                                             
                                             l
                                             =
                                             1
                                             ,
                                             …
                                             n
                                             ;
                                             
                                             k
                                             =
                                             1
                                             ,
                                             …
                                             m
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (C7)
                              
                                 
                                 
                                    
                                       X
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ⩽
                                 
                                    
                                       Y
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 0
                                 ,
                                 …
                                 ,
                                 n
                                 ;
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 +
                                 1
                                 ;
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 ,
                              
                           
                        
                        
                           
                              (C8)
                              
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       ii
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 0
                                 ,
                                 
                                 i
                                 =
                                 0
                                 ,
                                 …
                                 ,
                                 n
                                 +
                                 1
                                 ;
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 ,
                              
                           
                        
                        
                           
                              (C9)
                              
                                 
                                    
                                       Y
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ⩽
                                 
                                    
                                       cap
                                    
                                    
                                       ki
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 ;
                                 
                                 j
                                 =
                                 1
                                 …
                                 n
                                 +
                                 1
                                 ;
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 ,
                              
                           
                        
                        
                           
                              (C10)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                          =
                                          1
                                       
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       il
                                    
                                    
                                       k
                                    
                                 
                                 ⩾
                                 
                                    
                                       Y
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 0
                                 ,
                                 …
                                 ,
                                 n
                                 ;
                                 
                                 j
                                 =
                                 1
                                 …
                                 n
                                 +
                                 1
                                 ;
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 ,
                              
                           
                        
                        
                           
                              (C11)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                          =
                                          0
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       lj
                                    
                                    
                                       k
                                    
                                 
                                 ⩾
                                 
                                    
                                       Y
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 0
                                 ,
                                 …
                                 ,
                                 n
                                 ;
                                 
                                 j
                                 =
                                 1
                                 …
                                 n
                                 +
                                 1
                                 ;
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 ,
                              
                           
                        
                        
                           
                              (C12)
                              
                                 
                                    
                                       X
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ,
                                 
                                    
                                       Y
                                    
                                    
                                       ij
                                    
                                    
                                       k
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 ,
                                 
                                 i
                                 =
                                 0
                                 ,
                                 …
                                 ,
                                 n
                                 ;
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 +
                                 1
                                 ;
                                 
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 .
                              
                           
                        
                     

The objective function (O) of the model minimizes the weighted sum of completion times over all incidents. In addition to the existing n incidents, we add two fictitious incidents given by 0 as the starting point (named depot) and n
                        +1 as the ending point. These require no processing time (
                           
                              
                                 
                                    p
                                 
                                 
                                    0
                                 
                                 
                                    k
                                 
                              
                              =
                              
                                 
                                    p
                                 
                                 
                                    n
                                    +
                                    1
                                 
                                 
                                    k
                                 
                              
                              =
                              0
                           
                        ), but unit k needs a given setup time 
                           
                              
                                 
                                    s
                                 
                                 
                                    0
                                    j
                                 
                                 
                                    k
                                 
                              
                              ⩾
                              0
                           
                         to move from its starting location to incident j. In addition to that, we set 
                           
                              
                                 
                                    s
                                 
                                 
                                    j
                                    (
                                    n
                                    +
                                    1
                                    )
                                 
                                 
                                    k
                                 
                              
                              =
                              0
                           
                         for all rescue units k. Let w
                        
                           j
                         denote the so-called factor of destruction of incident j. Consequently, the lower the factor of destruction, the less severe is the incident.

Constraint (C1) ensures that there is exactly one incident that is processed immediately before each of the n non-fictitious incidents. Similarly, Constraint (C2) ensures there is exactly one incident that is processed immediately after each of the n non-fictitious incidents. Constraints (C3) and (C4) guarantee that each rescue unit starts processing the fictitious incident 0 (the depot) and each rescue unit ends processing the fictitious incident n
                        +1. Constraint (C5) accounts for the transitivity in predecessor relationships. If an immediate predecessor for a specific incident j exists, there has to be a successor as given by Constraint (C6). Constraint (C7) indicates that an immediate predecessor is also considered a general predecessor. Constraint (C8) prohibits a reflexive, direct or indirect predecessor relationship. Constraint (C9) ensures that rescue unit k is not assigned to incident i if k has not the capability to process i. Constraints (C10) and (C11) ensure that 
                           
                              
                                 
                                    Y
                                 
                                 
                                    ij
                                 
                                 
                                    k
                                 
                              
                           
                         is set to 0 if rescue unit k does not process incident i before incident j. Constraint (C12) makes the model a binary program. Each feasible solution of the minimization model represents valid schedules and assignments for all rescue units.

The above RUASP formulation can benefit from removing some variables and constraints depending on the particular problem instance. Using cap
                           ki
                        
                        =0, it follows that 
                           
                              
                                 
                                    X
                                 
                                 
                                    ij
                                 
                                 
                                    k
                                 
                              
                              =
                              
                                 
                                    Y
                                 
                                 
                                    ij
                                 
                                 
                                    k
                                 
                              
                              =
                              0
                           
                         for j
                        =1,…
                        n
                        +1. Thus, these variables can be removed from the model. Additionally, those constraints of (C5)–(C9) can be removed where cap
                           ki
                        
                        =0∨cap
                           kj
                        
                        =0∨cap
                           kl
                        
                        =0. Apparently, the extent of model simplification depends on the number of capabilities rescue units have. However, for the sake of clarity, we do not explicitly integrate these simplifications in the above model.

With regard to computational complexity, it can be shown easily that the RUSAP is computationally intractable and NP-hard. The proof is included in the online appendix.

Beyond proving NP-hardness of the RUASP (see online appendix), we used small up to moderately large instances with m, n
                     ⩽40 to evaluate practical runtimes. Using a mixed integer non-linear programming optimizer, more precisely, the Simple Branch and Bound solver in GAMS, we found that even small instances cannot be solved optimally in a practically reasonable time. As confirmed in interviews with the German Federal Agency of Technical Relief (THW), decision support in practice must be provided in less than 30minutes. Therefore, we suggest several heuristics for solving the RUASP.
                        
                           
                              Greedy heuristic: This heuristic is applied in practice in emergency operations centers, usually in a manually-operated and non-automated decision-making process. We gained information on this heuristic through interviews with the THW. As this heuristic processes incidents in descending order of their level of severity, we refer to it as Greedy heuristic.


                              Construction heuristics: We draw on the scheduling literature and adapt seven heuristics (Weng et al., 2001) proposed for solving the 
                                 
                                    R
                                    /
                                    
                                       
                                          ST
                                       
                                       
                                          SD
                                       
                                    
                                    /
                                    ∑
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          C
                                       
                                       
                                          j
                                       
                                    
                                 
                               scheduling problem. We name the heuristics Sched1 to Sched7.


                              Improvement heuristics: Based on the routing literature, we adapt the classical 2-opt and 3-opt exchange procedure within a single rescue unit (Lin, 1965; Lin & Kernighan, 1973) as well as multi-unit 2-opt and 3-opt, resulting in four heuristics. Furthermore, we suggest a load balancing heuristic.


                              GRASP metaheuristics: We integrate the previously mentioned construction and improvements heuristics into GRASP metaheuristics.


                              Monte Carlo-based heuristic: We propose a Monte Carlo-based heuristic in order to account for randomness in the search process.

With the exception of the Monte Carlo-based heuristic, the overall set of suggested heuristics can be divided into the set of 8 construction heuristics, which generate initial feasible solutions of RUASP instances, and 5 improvement heuristics, which iteratively generate new feasible solutions and test them for local optimality. Combining each of the construction heuristics with each of the improvement heuristics, we finally yield 40 composed heuristics, all of which are considered in our computational experiments.

In the remaining part of this section, we first describe the construction heuristics. Then, we suggest improvement heuristics before we illustrate GRASP metaheuristics and the Monte Carlo-based heuristic. We use the notations as introduced in Table 1.

The group of construction heuristics consists of the Greedy approach used in practice and a set of construction heuristics originating from scheduling literature. Let τ
                        
                           k
                         denote the total processing and setup time for unit k in the corresponding iteration. The assignment α
                        
                           k
                         stores the last incident processed by unit k in the current iteration. The variable 
                           
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         gives the average processing time needed for processing incident i by those units that are capable of i. Then, each heuristic returns σ
                        =(σ
                        1,…,
                        σ
                        
                           m
                        ), which is a list of schedules for all m units.

The Greedy heuristic, which models best practice in emergency operations centers today, follows the idea that incidents are assigned to rescue units in descending order of the factor of destruction. Here, each incident j is assigned to a rescue unit k that is capable of processing incident j immediately while considering assignment history and updated travel times. The pseudoce of the Greedy algorithm is described below.
                              
                                 
                                    
                                    
                                       
                                          1: Sort incidents in decreasing order of severity, w
                                             1
                                             ⩾
                                             w
                                             2
                                             ⩾⋯⩾
                                             w
                                             
                                                n
                                             , and set C←{w
                                             1,…,
                                             w
                                             
                                                n
                                             }.
                                       
                                       
                                          2: Initialize the current completion time of each rescue unit, rescue units to start at the depot, the ordered list of incidents assigned to unit, i.e. c
                                             
                                                k
                                             ←0,
                                             α
                                             
                                                k
                                             ←0,
                                             σ
                                             
                                                k
                                             ←∅∀k
                                             ∈
                                             K.
                                       
                                       
                                          3: for 
                                             ι
                                             =1 to 
                                             n 
                                             do
                                          
                                       
                                       
                                          4: Select incident i
                                             ←
                                             ι to be processed.
                                       
                                       
                                          5: 
                                             K
                                             ∗←{k
                                             ∈
                                             K∣cap
                                             
                                                ki
                                             
                                             =1} are all units capable of processing incident.
                                       
                                       
                                          6: 
                                             if 
                                             K
                                             ∗
                                             ≠∅ then
                                          
                                       
                                       
                                          7: 
                                             
                                             
                                                
                                                   unit
                                                   ←
                                                   
                                                      
                                                         
                                                            arg
                                                            min
                                                         
                                                         
                                                            k
                                                            ∈
                                                            
                                                               
                                                                  K
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         
                                                            
                                                               α
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         ,
                                                         i
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                              chooses unit with lowest start time.
                                       
                                       
                                          8: 
                                             else
                                          
                                       
                                       
                                          9: 
                                             
                                             return unsuccessfully (no feasible assignment).
                                       
                                       
                                          10: 
                                             end if
                                          
                                       
                                       
                                          11: Update 
                                                
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         
                                                            
                                                               α
                                                            
                                                            
                                                               unit
                                                            
                                                         
                                                         ,
                                                         i
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ,
                                                   
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ←
                                                   i
                                                   ,
                                                   
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ∪
                                                   {
                                                   i
                                                   }
                                                
                                             .
                                       
                                       
                                          12: end for
                                          
                                       
                                       
                                          13: return 
                                             σ
                                             ←(σ
                                             1,…,
                                             σ
                                             
                                                m
                                             ) being the list of schedules.
                                       
                                    
                                 
                              
                           
                        

Obviously, the greedy algorithm ignores the eventuality that it may not be optimal to process the most severe incidents first since processing times may also play a crucial role in the decision-making process.

Although the Greedy heuristic proceeds dynamically through updating the availability and travel times of rescue units, it acts myopically in regard to the selection of the incident that is assigned next. For example, it may be sub-optimal regarding the overall harm (cmp. objective function (O)) to first assign to rescue unit k the most severe incident that has a comparably long processing time and, then, to assign to unit k the incident with the second largest factor of destruction and with a comparably short processing time. Apparently, the Greedy heuristic may easily fail in providing good solutions to an instance of the RUASP. However, because of its simplicity, it provides solutions quickly and is applicable in practice even without computational support for small instances.

To consider a trade-off between severity and processing time, we adapt 7 heuristics for the scheduling problem 
                              
                                 R
                                 /
                                 
                                    
                                       ST
                                    
                                    
                                       SD
                                    
                                 
                                 /
                                 ∑
                                 
                                    
                                       w
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                 
                              
                            as suggested by Weng et al. (2001).

The first heuristic differs from the greedy algorithm in two ways: (1) jobs are ordered based on the ratio of their processing time averaged over all units to the severity level. (2) The criterion for assigning incidents to units does not only consider the time required to travel to the location of the respective incident but also the time required to process the incident. In more detail, the algorithm named Sched1 proceeds as follows.
                              
                                 
                                    
                                    
                                       
                                          1: Sort incidents by
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        p
                                                                     
                                                                     
                                                                        ̃
                                                                     
                                                                  
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  w
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                      ⩾
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        p
                                                                     
                                                                     
                                                                        ̃
                                                                     
                                                                  
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  w
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      ⩾
                                                      ⋯
                                                      ⩾
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        p
                                                                     
                                                                     
                                                                        ̃
                                                                     
                                                                  
                                                               
                                                               
                                                                  n
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  w
                                                               
                                                               
                                                                  n
                                                               
                                                            
                                                         
                                                      
                                                      
                                                      with
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  ̃
                                                               
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ←
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            m
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               k
                                                               ∈
                                                               {
                                                               κ
                                                               ∣
                                                               
                                                                  
                                                                     cap
                                                                  
                                                                  
                                                                     κ
                                                                     i
                                                                  
                                                               
                                                               =
                                                               1
                                                               }
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            k
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             being the average processing time of incident i, and set 
                                                
                                                   C
                                                   ←
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              p
                                                                           
                                                                           
                                                                              ̃
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        w
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                            ,
                                                            …
                                                            ,
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              p
                                                                           
                                                                           
                                                                              ̃
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        n
                                                                     
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        w
                                                                     
                                                                     
                                                                        n
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          2: Initialize the current completion time of each rescue unit, rescue units to start at the depot, the ordered list of incidents assigned to unit, i.e.
                                       
                                       
                                          
                                             
                                             
                                             
                                             c
                                             
                                                k
                                             ←0,
                                             α
                                             
                                                k
                                             ←0,
                                             σ
                                             
                                                k
                                             ←∅∀k
                                             ∈
                                             K.
                                       
                                       
                                          3: for 
                                             ι
                                             =1 to 
                                             n 
                                             do
                                          
                                       
                                       
                                          4: Select incident i←ι to be processed.
                                       
                                       
                                          5: 
                                             K
                                             ∗←{k
                                             ∈
                                             K∣cap
                                             
                                                ki
                                             
                                             =1} are all units capable of processing incident.
                                       
                                       
                                          6: 
                                             if 
                                             K
                                             ∗
                                             ≠∅ then
                                          
                                       
                                       
                                          7: 
                                             
                                             
                                                
                                                   unit
                                                   
                                                   ←
                                                   
                                                   
                                                      
                                                         arg
                                                         min
                                                      
                                                      
                                                         k
                                                         ∈
                                                         
                                                            
                                                               K
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         
                                                            
                                                               α
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         ,
                                                         i
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                              chooses unit with start time.
                                       
                                       
                                          8: 
                                             else
                                          
                                       
                                       
                                          9: 
                                             
                                             return unsuccessfully (no feasible assignment).
                                       
                                       
                                          10: 
                                             end if
                                          
                                       
                                       
                                          11: Update 
                                                
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         
                                                            
                                                               α
                                                            
                                                            
                                                               unit
                                                            
                                                         
                                                         ,
                                                         i
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ,
                                                   
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ←
                                                   i
                                                   ,
                                                   
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         unit
                                                      
                                                   
                                                   ∪
                                                   {
                                                   i
                                                   }
                                                
                                             .
                                       
                                       
                                          12: end for
                                          
                                       
                                       
                                          13: return 
                                             σ
                                             ←(σ
                                             1,…,
                                             σ
                                             
                                                m
                                             ) being the list of schedules.
                                       
                                    
                                 
                              
                           
                        

The second scheduling heuristic, namely Sched2, differs from heuristic Sched1 by assigning an incident to that rescue unit which has the lowest processing time. Thus, Step 7 is replaced as follows.
                              
                                 7: 
                                       
                                          unit
                                          ←
                                          
                                             
                                                arg
                                                min
                                             
                                             
                                                k
                                                ∈
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                     chooses unit with lowest average processing time.

Furthermore, the following algorithm Sched3 considers processing times and travel times but ignores history. Hence, Step 7 looks as follows.

7: 
                                       
                                          unit
                                          ←
                                          
                                             
                                                arg
                                                min
                                             
                                             
                                                k
                                                ∈
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                             
                                          
                                          
                                             
                                                s
                                             
                                             
                                                
                                                   
                                                      α
                                                   
                                                   
                                                      unit
                                                   
                                                
                                                ,
                                                i
                                             
                                             
                                                unit
                                             
                                          
                                          +
                                          
                                             
                                                p
                                             
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                     chooses unit with lowest sum of travel and average processing time.

Further heuristics named Sched4, Sched5 and Sched6 are exactly the same as heuristics Sched1, Sched2 and Sched3, respectively, except that, in Step 1, incidents are renumbered using their minimum processing time rather than using the average processing time:

1: Sort incidents by
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      ̃
                                                   
                                                
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                w
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    ⩾
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      ̃
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                w
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    ⩾
                                    ⋯
                                    ⩾
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      ̃
                                                   
                                                
                                             
                                             
                                                n
                                             
                                          
                                       
                                       
                                          
                                             
                                                w
                                             
                                             
                                                n
                                             
                                          
                                       
                                    
                                    
                                    with
                                    
                                    
                                       
                                          
                                             
                                                p
                                             
                                             
                                                ̃
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    ←
                                    
                                       
                                          
                                             min
                                          
                                          
                                             k
                                             ∈
                                             {
                                             κ
                                             ∣
                                             
                                                
                                                   cap
                                                
                                                
                                                   κ
                                                   i
                                                
                                             
                                             =
                                             1
                                             }
                                          
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                           being the minimum processing time of incident i and set 
                              
                                 C
                                 ←
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            ̃
                                                         
                                                      
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            ̃
                                                         
                                                      
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           .

This step requires that a minimum exists always. If a minimum does not exist, then the respective incident cannot be processed by any of the units and the instance has, thus, no feasible solution. In order to avoid drawbacks induced by pre-ordering incidents (as in algorithms Sched1 to Sched6), the following algorithm Sched7 selects both incident and unit in the same step.
                              
                                 
                                    
                                    
                                       
                                          1: Initialize the current completion time of each rescue unit, rescue units to start at the depot, the ordered list of incidents assigned to unit, i.e.
                                       
                                       
                                          
                                             
                                             
                                             
                                             c
                                             
                                                k
                                             
                                             ←0,
                                             α
                                             
                                                k
                                             
                                             ←0,
                                             σ
                                             
                                                k
                                             
                                             ←∅∀k
                                             ∈
                                             K.
                                       
                                       
                                          2: Initialize list of incidents I
                                             ←{1,…,
                                             n}.
                                       
                                       
                                          3: Set 
                                                
                                                   C
                                                   ←
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        τ
                                                                     
                                                                     
                                                                        k
                                                                     
                                                                  
                                                                  +
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              α
                                                                           
                                                                           
                                                                              k
                                                                           
                                                                        
                                                                        ,
                                                                        i
                                                                     
                                                                     
                                                                        k
                                                                     
                                                                  
                                                                  +
                                                                  
                                                                     
                                                                        p
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                     
                                                                        k
                                                                     
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        w
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                            ∣
                                                            i
                                                            ∈
                                                            I
                                                            ,
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                
                                              and 
                                                
                                                   c
                                                   ←
                                                   
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                            i
                                                            ∈
                                                            I
                                                            ,
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               s
                                                            
                                                            
                                                               
                                                                  
                                                                     α
                                                                  
                                                                  
                                                                     k
                                                                  
                                                               
                                                               ,
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               p
                                                            
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          4: for 
                                             ι
                                             =1 to 
                                             n 
                                             do
                                          
                                       
                                       
                                          5: Select incident i
                                             ∗
                                             ∈
                                             I and unit k
                                             ∗
                                             ∈
                                             K corresponding to c, i.e. here is the ratio of completion time to severity level minimal. If no minimum exists, stop unsuccessfully (no feasible assignment).
                                       
                                       
                                          6: Update 
                                                
                                                   I
                                                   ←
                                                   I
                                                   ⧹
                                                   {
                                                   
                                                      
                                                         i
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   }
                                                   ,
                                                   
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         
                                                            
                                                               α
                                                            
                                                            
                                                               
                                                                  
                                                                     k
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                   
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   ←
                                                   i
                                                   ,
                                                   
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   ∪
                                                   {
                                                   
                                                      
                                                         i
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   }
                                                
                                             .
                                       
                                       
                                          7: Update 
                                                
                                                   C
                                                   ←
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        τ
                                                                     
                                                                     
                                                                        k
                                                                     
                                                                  
                                                                  +
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              α
                                                                           
                                                                           
                                                                              k
                                                                           
                                                                        
                                                                        ,
                                                                        i
                                                                     
                                                                     
                                                                        k
                                                                     
                                                                  
                                                                  +
                                                                  
                                                                     
                                                                        p
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                     
                                                                        k
                                                                     
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        w
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                            ∣
                                                            i
                                                            ∈
                                                            I
                                                            ,
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                
                                              and 
                                                
                                                   c
                                                   ←
                                                   
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                            i
                                                            ∈
                                                            I
                                                            ,
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               s
                                                            
                                                            
                                                               
                                                                  
                                                                     α
                                                                  
                                                                  
                                                                     k
                                                                  
                                                               
                                                               ,
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               p
                                                            
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          8: end for
                                          
                                       
                                       
                                          9: return 
                                             σ
                                             ←(σ
                                             1,…,
                                             σ
                                             
                                                m
                                             ) being the list of schedules.
                                       
                                    
                                 
                              
                           
                        

We consider heuristics for k-opt node exchanges originating from routing literature as well as load balancing as improvement heuristics.

In the routing literature, k-opt exchange procedures constitute improvement heuristics for solving the Traveling Salesman Problem (Lin, 1965; Lin & Kernighan, 1973), where in each iteration a k-opt exchange is applied until no further k-opt exchange leads to an improvement of the objective value (local optimum is reached). However, in our setting the exchange of 2 or 3 edges across units leads to infeasible solutions when (sequences of) incidents are assigned to units which are not capable of processing these incidents. Thus, we do not exchange edges but nodes (i.e. incidents) and refer to these moves as 2-nodes and 3-nodes exchange respectively. We apply these exchange procedures in two ways. First, a k-node exchange is applied inside the schedule of each rescue unit individually (named 2nsu with k
                           =2 and 3nsu with k
                           =3 respectively). Second, exchanges are applied across schedules of multiple rescue units (named 2nmu with k
                           =2 and 3nmu with k
                           =3 respectively). The procedures of the resulting four heuristics are shown in Figs. 2 and 3
                           
                           .

When queues of rescue units tend to get long in large-scale disaster scenarios, incidents at the end of the queue need to wait comparably long until being processed. This can result in excessively large harm (in terms of objective value). In order to avoid an extremely severe impact, we suggest a load balancing heuristic LoadBal that aims at improving a current solution by reassigning the last incidents in a queue to the end of another queue. Let i
                           
                              k
                            be the last incident in the (ordered) list 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       k
                                    
                                 
                              
                           . Then, the LoadBal heuristic proceeds as follows.
                              
                                 
                                    
                                    
                                       
                                          1: Initialize 
                                                
                                                   harm
                                                   (
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   ←
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         ς
                                                         ∈
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         ς
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ∑
                                                               
                                                               
                                                                  ι
                                                                  =
                                                                  1
                                                               
                                                               
                                                                  ς
                                                               
                                                            
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  ι
                                                                  -
                                                                  1
                                                                  ,
                                                                  ι
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            +
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  ι
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                              to be the harm related to unit k
                                             ∈
                                             K.
                                       
                                       
                                          2: repeat
                                          
                                       
                                       
                                          3: 
                                             
                                                
                                                   
                                                      
                                                         k
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         
                                                            arg
                                                            max
                                                         
                                                         
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                   
                                                   harm
                                                   (
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                
                                              selects the unit k
                                             ∗ with the highest harm.
                                       
                                       
                                          4: Select the unit k′ for which the processing of incident 
                                                
                                                   
                                                      
                                                         i
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                
                                              as the last incident of the queue results in the lowest additional harm, i.e.
                                                
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      ←
                                                      
                                                         
                                                            
                                                               arg
                                                               min
                                                            
                                                            
                                                               k
                                                               ∈
                                                               {
                                                               κ
                                                               ∈
                                                               K
                                                               ∣
                                                               
                                                                  
                                                                     cap
                                                                  
                                                                  
                                                                     κ
                                                                     ,
                                                                     
                                                                        
                                                                           i
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 k
                                                                              
                                                                              
                                                                                 ∗
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                               =
                                                               1
                                                               }
                                                            
                                                         
                                                      
                                                      harm
                                                      (
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            k
                                                         
                                                      
                                                      ∪
                                                      {
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            
                                                               
                                                                  k
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                      
                                                      }
                                                      )
                                                      -
                                                      harm
                                                      (
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            k
                                                         
                                                      
                                                      )
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                       
                                          5:Determine the reduction and the increase of harm caused by moving incident 
                                                
                                                   
                                                      
                                                         i
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                
                                              from the queue of unit k
                                             ∗ to k
                                             ′, i.e.
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     
                                                                        harm
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ←
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  )
                                                                  -
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ⧹
                                                                  {
                                                                  
                                                                     
                                                                        i
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  }
                                                                  )
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  Δ
                                                                  
                                                                     
                                                                        harm
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ←
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ∪
                                                                  {
                                                                  
                                                                     
                                                                        i
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  }
                                                                  )
                                                                  -
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  }
                                                                  )
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          6: 
                                             if 
                                             
                                                
                                                   Δ
                                                   
                                                      
                                                         harm
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   -
                                                   Δ
                                                   
                                                      
                                                         harm
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                      
                                                   
                                                   >
                                                   0
                                                
                                              
                                             then
                                          
                                       
                                       
                                          7: 
                                             Create new solution with less harm by setting
                                                
                                                   
                                                      
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ←
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ⧹
                                                                  {
                                                                  
                                                                     
                                                                        i
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  }
                                                                  ,
                                                                  
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  )
                                                                  ←
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  )
                                                                  -
                                                                  Δ
                                                                  
                                                                     
                                                                        harm
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ←
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ∪
                                                                  {
                                                                  
                                                                     
                                                                        i
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ∗
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  }
                                                                  ,
                                                                  
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  )
                                                                  ←
                                                                  harm
                                                                  (
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  )
                                                                  +
                                                                  Δ
                                                                  
                                                                     
                                                                        harm
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              k
                                                                           
                                                                           
                                                                              ′
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          8: end if
                                          
                                       
                                       
                                          9: until 
                                             
                                                
                                                   Δ
                                                   
                                                      
                                                         harm
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ∗
                                                            
                                                         
                                                      
                                                   
                                                   -
                                                   Δ
                                                   
                                                      
                                                         harm
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                      
                                                   
                                                   ⩽
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Construction heuristics suffer from a shortcoming, i.e. they follow the same search path over and over. As a remedy, GRASP (greedy randomized adaptive search procedure) offers a possibility to diversify the solutions generated by the construction heuristic (Feo & Resende, 1995; Pitsoulis & Resende, 2002; Resende & Ribeiro, 2003). More precisely, GRASP is a multi-start metaheuristic for combinatorial problems in which each iteration consists of two phases: construction and local search. The construction phase uses a construction heuristic to create feasible solutions, whose neighborhood is searched using an improvement heuristic until a local minimum is found. The best overall solution is kept as the result. GRASP variants of algorithms Greedy and Sched1 to Sched7 as construction heuristics are given by the following pseudocode.
                           
                              
                                 
                                 
                                    
                                       1: Initialize S
                                          ←∅.
                                    
                                    
                                       2: for 
                                          iter
                                          =1 to 
                                             
                                                N
                                             
                                           (max. iterations)
                                    
                                    
                                       3:
                                          Perform greedy randomized construction by initializing candidate set C, i.e. perform initial steps in algorithms Greedy and Sched1 to Sched7 respectively.
                                    
                                    
                                       4:
                                          
                                          for 
                                          ι
                                          =1 to 
                                          n 
                                          do
                                       
                                    
                                    
                                       5:
                                          Compute c
                                          min
                                          ←min{c∣c
                                          ∈
                                          C} and c
                                          max
                                          ←max{c∣c
                                          ∈
                                          C}.
                                    
                                    
                                       6:
                                          RCL←{c
                                          ∈
                                          C∣c
                                          ⩽
                                          c
                                          min
                                          +
                                          α(c
                                          max
                                          −
                                          c
                                          min)}.
                                    
                                    
                                       7:
                                          Select randomly a value c
                                          ∈RCL and let i be the corresponding incident.
                                    
                                    
                                       8:
                                          Perform steps inside the loop in algorithms Greedy or Sched1 to Sched7 without reassigning i.
                                    
                                    
                                       9: Update C
                                          ←
                                          C⧹{i}.
                                    
                                    
                                       10: 
                                          end for
                                       
                                    
                                    
                                       11: Set σ
                                          ←(σ
                                          1,…,
                                          σ
                                          
                                             m
                                          ) being the list of schedules.
                                    
                                    
                                       12: Perform local search upon σ by one of the improvement heuristics giving σ′. Update list of solution by S
                                          ←
                                          S
                                          ∪{σ′}.
                                    
                                    
                                       13: end for
                                       
                                    
                                    
                                       14: return solution min S.
                                    
                                 
                              
                           
                        
                     

At last, we design a Monte Carlo-based heuristic to solve our problem for the following reasons. First, Monte Carlo simulation is flexible with regard to future extensions of the optimization model, such as co-allocation of rescue units and the consideration of informational uncertainty. Second, the complexity of the RUASP is high because of the many constraints and we assume that a Monte Carlo-based heuristic will not easily get stuck in a local optimum. In more complex scenarios, “evaluation procedures rely a great deal on trial and error” (Buxey, 1979, p. 566). In contrast, a Monte Carlo method overcomes this shortcoming.

The key idea of generating a feasible solution in our Monte Carlo-based heuristic is that incidents are iteratively scheduled in two stages. In stage one, an incident is assigned randomly to one of the D most appropriate rescue units where appropriateness is defined based on processing times. The motivation of this procedure is based on avoiding both (a) assignments of incidents to units that require an extremely long time for processing (thus, a parameter D
                        ∈[0%,100%] is used), and (b) myopic assignments of incidents to units that require the shortest processing time among all units (thus, randomness is included). In a second stage, the incident is inserted into the incident queue of the previously selected rescue unit. The criterion for determining the position of the new incident in the queue is based on a weighted ratio of the severity of incident w
                        
                           i
                         and the time 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    
                                       
                                          k
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              
                           
                         it takes the selected rescue unit to process this incident. Each queue lists its incidents in descending order of 
                           
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                              /
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                                 
                                    
                                       
                                          k
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              
                           
                        .

The Monte Carlo-based heuristic runs a fixed number of iterations with the Monte Carlo-based heuristic being the one with the lowest value found in all iterations. The Monte Carlo-based heuristic requires two input parameters: D and 
                           
                              N
                           
                        . D
                        ∈[0%,100%] is used for the selection of rescue units. The variable 
                           
                              N
                           
                         is the number of feasible solutions generated; we set D
                        =90% and 
                           
                              N
                              =
                              500
                              ,
                              000
                           
                         based on the results of pre-tests.
                           4
                           In our simulations we did not find evidence that an increase in the number of iterations substantially improves the quality of solutions.
                        
                        
                           4
                         In more detail, the Monte Carlo-based heuristic MC proceeds as follows.
                           
                              
                                 
                                 
                                    
                                       1: for 
                                          iter
                                          =1 to 
                                          
                                             
                                                N
                                             
                                           (max. iterations) do
                                       
                                    
                                    
                                       2: Initialize the cumulative processing time of each rescue unit, rescue units to start at the depot, the ordered list of incidents assigned to unit, i.e. curr_process_time(k)←0,
                                          α
                                          
                                             k
                                          
                                          ←0,
                                          σ
                                          
                                             k
                                          
                                          ←∅∀k
                                          ∈
                                          K.
                                    
                                    
                                       3: 
                                          while 
                                          I
                                          ≠∅ do
                                       
                                    
                                    
                                       4:
                                          
                                          Select next incident i
                                          ∈
                                          I and update I
                                          ←
                                          I⧹{i}.
                                    
                                    
                                       5:
                                          
                                          
                                          K
                                          ∗
                                          ←{k
                                          ∈
                                          K∣cap
                                          
                                             ki
                                          
                                          =1} are all units capable of processing incident i.
                                    
                                    
                                       6:
                                          
                                          
                                          if 
                                          K
                                          ∗
                                          =∅ then
                                       
                                    
                                    
                                       7:
                                          
                                          
                                          return unsuccessfully (no feasible assignment).
                                    
                                    
                                       8:
                                          
                                          
                                          end if
                                       
                                    
                                    
                                       9:
                                          
                                          Sort K
                                          ∗ in ascending order of curr_process_time and select randomly a rescue unit k
                                          ∗ with one of the D lowest values of curr_process_time of all rescue units in K
                                          ∗.
                                    
                                    
                                       10: 
                                          Update 
                                             
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                                ←
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                                +
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      
                                                         
                                                            α
                                                         
                                                         
                                                            
                                                               
                                                                  k
                                                               
                                                               
                                                                  a
                                                               
                                                            
                                                            st
                                                         
                                                      
                                                      ,
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                                +
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                                ,
                                                
                                                
                                                   
                                                      α
                                                   
                                                   
                                                      unit
                                                   
                                                
                                                ←
                                                i
                                             
                                          .
                                    
                                    
                                       11: 
                                          
                                          
                                             
                                                curr
                                                _
                                                process
                                                _
                                                time
                                                (
                                                
                                                   
                                                      k
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                )
                                                ←
                                                curr
                                                _
                                                process
                                                _
                                                time
                                                (
                                                
                                                   
                                                      k
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                )
                                                +
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                             
                                          .
                                    
                                    
                                       12: 
                                          Set 
                                             
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                                ←
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                                ∪
                                                {
                                                i
                                                }
                                             
                                           and order 
                                             
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                             
                                           in descending order of 
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      i
                                                   
                                                
                                                /
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                             
                                          .
                                    
                                    
                                       13: 
                                          end while
                                       
                                    
                                    
                                       14: end for
                                       
                                    
                                    
                                       15: return 
                                          σ
                                          =(σ
                                          1,…,
                                          σ
                                          
                                             m
                                          ) being the list of schedules.
                                    
                                 
                              
                           
                        
                     

In our computational experiments, we evaluate the suggested heuristics against two benchmarks: (1) we compare the solutions of the heuristics with a lower bound of the optimal solution. We need to draw on lower bounds as finding optimal solutions even for moderately small instances turned out to be computationally infeasible. A gap between a solution found with a heuristic and the lower bound is an upper bound of the gap between the heuristic solution and the optimal solution. Thus, the determined gap underestimates the quality of the heuristic solutions. (2) We evaluate the solutions of all suggested heuristics regarding their improvement over the Greedy heuristic, which represents best practice behavior of emergency operations centers, and, thus, it acts as a suitable benchmark. We first present our procedure to find an appropriate RUASP relaxation in order estimate lower bounds. Then, we explain the data generation for our experiments. Subsequently, we present and discuss results as well as runtimes.

We tried to find optimal solutions for the binary quadratic programming formulation of our problem using the Simple Branch and Bound solver (SBB) inside the software package GAMS. Even for small instances with 40 incidents and 40 rescue units, we are not able to find optimal solutions because of the NP-hardness of the RUASP. As a consequence, we derive appropriate relaxations of RUASP.

The computation of the lower bound is achieved by relaxing the binary constraints within the optimization model to 
                           
                              
                                 
                                    X
                                 
                                 
                                    ij
                                 
                                 
                                    k
                                 
                              
                              ∈
                              [
                              0
                              ,
                              1
                              ]
                           
                        . We found this constraint relaxation most suitable because of the following reason: we examined and computationally tested each possibility to relax a constraint (for a scenario with 10 rescue units and 20 incidents) regarding its consequence for the mathematical model, the generation of schedules, the runtimes and the gap between the optimal solution of the original problem instance and the optimal solution of the relaxed problem instance. The relaxation of all but the binary constraints led to (a) unrealistic model extensions such as circular assignments or fragmentations of rescue units, (b) no significant enhancements concerning runtimes, and/or (c) an increase in the complexity of the whole model in terms of an exploding solution space or in terms of runtimes. The only suitable relaxation option was Constraint (C12), which has been found adequate for the calculation of lower bounds. The relaxation of the binary constraints of a model is a common method. Its application reduced runtimes substantially, while the gap between the optimal solution values of the problem with relaxation and the original problem turns out be low.

We used the CONOPT solver inside GAMS to solve this relaxed binary quadratic programming formulation of the optimization model. Runtimes for the largest instances (40 incidents and 40 rescue units) varied between 11hour and 22hour, which results in an average runtime of 15.6hour. Even the calculation of the smallest scenarios with 10 incidents and 10 units took at least 2seconds with an average of 207seconds. The runtimes also indicate an exponential increase depending on the number of units and incidents. We also found that runtimes increase exponentially with both the number of units and incidents (significance of the overall model at the 0.1% level), with the number of incidents having a stronger impact.

We designed the computational experiments based on interviews with associates of the THW. These associates were in direct contact to first search and rescue teams after the major earthquake in Japan in 2011. Hence, the generation of values for input parameters is given by Table 2
                        . For our computational evaluation, we generated ten different instances for each scenario size. We limit the number of incidents and the number of rescue units to a maximum of 40 for three reasons: (1) our interviewees at the THW motivated these upper bounds to reflect practice given that a single rescue unit may consist of several members. (2) If a new situation makes it necessary to update old schedules and assignments, we assume that the new instance is unlikely to exceed these limits since some rescue units may have be assigned to a number of incidents already. (3) For implausible instances that consist of more than 40 rescue units and incidents, the available computing power was not sufficiently powerful to determine lower bounds of optimal solution values in reasonable times.

Looking at the situation after the 2011 disaster in Japan, we find that in urban areas where most of the incidents occur, travel times between incident locations are low compared to processing times. For example, it takes much more time to extinguish a house on fire or to stabilize a collapsed building than it takes a rescue unit to travel there. We consider this relationship by the mean values of the normal distributions for generating processing times and travel and setup times. Furthermore, the factor of destruction of an incident indicates the level of severity, as introduced by the U.S. Department of Homeland Security (2008): low (1), guarded (2), elevated (3), high (4), and severe (5) harm. Hence, we select a discrete uniform distribution for the severity levels.

The number of capabilities of rescue units was set to five. These account for policemen, fire brigades, paramedics, search and rescue units, and special casualty access teams. This discrete distinction of units’ types and skills is based on and yet extending the classification of The New South Wales Government (2007). Incidents require exactly one of these differently skilled rescue units. The ratio of capabilities and the personnel required at an incident is generated randomly using a discrete uniform distribution.

The selection of the above parametric distributions has several reasons: (a) we found that real-world scenarios match such settings and (b) because of the individual variance of the selected distributions, the proposed heuristics are tested under unfavorable conditions. Other ranges of parameter values and distributions did not result in significant deviations neither in the generated schedules nor in the assignments.

We now evaluate the results of the suggested heuristics. We used the numerical computing environment MATLAB for implementation and simulation. We consider scenarios consisting of 10, 20, 30 and 40 incidents and units, with the number of units being lower than or equal to the number of incidents. For each problem instance, ten instances are randomly generated and solved by all heuristics. For each instance size and heuristic, we average the ratios of the heuristic solution H
                        
                           i
                         to the lower bound LB yielding averaged ratios 
                           
                              μ
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   H
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             LB
                                          
                                       
                                    
                                 
                              
                           
                        . Thus, the smaller the ratio, the closer is the heuristic solution to the lower bound. In addition, we calculate the respective averages when applying the Greedy heuristic without any improvement heuristic, which represents current best practice. All results are shown in Table 3
                        . The best practice results are given in the top row and originate from the Greedy algorithm along with no improvement heuristic. The evaluation of Table 3 suggests the following findings
                           5
                           We applied the one-sided t-test for comparing ratios (of ten instances) of two heuristics.
                        
                        
                           5
                        :
                           
                              (1)
                              All compositions of construction and improvement heuristic improve best practice results given by the Greedy algorithm for each of the instance sizes. All results are significant at the .01 level (p-value of t-test).

Results of the Greedy algorithm are improved by each of the improving heuristic for each of the instance sizes (.01 level of significance).

Choosing Sched7 as construction heuristic in combination with any of the improvement heuristics leads to superior results compared to other combinations of construction and improvement heuristics. We found statistical evidence at the .05 level with the exception of only a few comparisons.

Mean ratios of all except Greedy-based composite heuristics tend to be well below 1.5. Results in terms of ratios become worse with large problem scenarios. Compositions consisting of the Greedy heuristic lead to mean outcomes of between 1.268 and 4.515.

The relative performance of the MC heuristic (bottom row) is highly volatile. It seems to be a good choice when scenarios are of small size, whereas results become worse with increasing size of the solution space. Another observation is that, for all instance sizes, MC dominates (at the .01 level) both the Greedy heuristic and the joint application of the Greedy heuristic and any of the heuristics 2NSU, 2NMU and 3NSU.

In general, we identify composite heuristics using 3nmu performing best. In 247 out of 320 statistical comparisons, 3nmu-based algorithms performed better (at the .05 level) than composite heuristics without 3nmu.

Improvement heuristics are able to improve the solutions provided by any construction heuristic. This holds for 1532 out of 3200 comparisons (at the 0.1 level).

The application of the GRASP metaheuristics showed mixed results (cf. online appendix). Compared to the classical counterparts, which apply the same combination of construction and improvement heuristic, results are better in only some cases.

Depending on the instance size, the best solution values achieved by the heuristics are at most 10.9% up to 33.9% higher than the lower bound, with the best results often provided by combinations which use Sched7.

As solutions of RUASP instances need to be found within minutes in real natural disasters, acceptably low runtimes of the suggested heuristics are crucial for their practical usage. Runtimes of all heuristics, except those involving the 3nmu heuristic or the MC heuristic, were below one second for all instances of all sizes. The 3nmu heuristic required up to 20seconds in instances of largest size (40 incidents and 40 rescue units) and is thus applicable in practice, too.

In contrast, runtimes of the MC are linear in the number of iterations and, as our results show, also depend on the instance size. Using 500,000 iterations in each of the runs, we found statistical evidence that the runtimes of the MC heuristic grow linearly with both rescue units and incidents, while the number of incidents has a slightly stronger impact. A detailed analysis is given in the online appendix. As average runtimes vary between 3.45minutes for small instances (10 units and 10 incidents) and 18.26minutes for large instances (40 units and 40 rescue units), the applicability of the MC heuristic depends on the instance size, on the number of iterations, rescue units and incidents, and on the available computing resources.

As shown above, GRASP metaheuristics show a possible path to improve solutions of both construction and improvement heuristics. These metaheuristics diversify the search paths and, consequently, require significantly more computation time. The average runtimes account for 38.03seconds, but can get as high as 25.89minutes. When integrating 3nmu inside GRASP in particular, average runtimes even rise to 187.63seconds across all instances. Increasing the number of iterations inside GRASP also boosts runtimes, but without improving solutions.

@&#DISCUSSION@&#

Our results show that the current best practice behavior in emergency response situations can be substantially improved by applying heuristics. As most improvements can be achieved in less than a second (only in a few cases, the computation time spans several minutes), our heuristics are well applicable in practice. As the RUASP generalizes the parallel-machine scheduling problem with unrelated machines, non-batch sequence-dependent setup times and a weighted sum of completion times as the objective, our algorithms can also be applied to this well-known class of scheduling problems.

Although our tested instances do not have more than 40 incidents and 40 rescue units, this limitation in size is of no substantial practical relevance for two reasons: first, our algorithms are likely to process instances of much larger size than 40 incidents and 40 rescue units in less than a minute. The limitation of size in our computations is rooted in the high computation times required to determine good bounds. Furthermore, additional computing power can be used to solve larger instances. Second, as we argued above, larger instance sizes of the RUASP are unlikely to occur as instances are generated and solved iteratively.

The benefit of having an optimization model and automated decision support available is obvious: the proposed decision support provides assistance to the decision makers in situations characterized by a high level of complexity and high time pressure. However, we would like to stress that the application of any of the proposed heuristics is intended to enhance human-based decision making and to offer decision support timely to decision makers; it is not intended to substitute the actual decisions of practitioners.

In this paper, we address the Rescue Unit Scheduling and Assignment Problem (RUASP), which is a key issue in emergency response management. Our contributions are as follows. We derive a binary quadratic optimization model of the problem. Considering literature on scheduling and routing, we propose a Monte Carlo-based heuristic, eight construction heuristics, five improvement heuristics and GRASP metaheuristics. Then, we computationally evaluate and compare these heuristics. In addition to that, we evaluate the heuristics against the current best practice behavior and against lower bounds of optimal solutions. We found that the RUASP can be solved for instances with up to 40 incidents and 40 rescue units in less than a second, with the solution values being at most 10.9% up to 33.9% larger than the optimal value. While comparing heuristic solution values with lower bounds is particularly relevant for theoretical analysis, comparing heuristic solution values with the values found by the Greedy heuristic is relevant for the disaster management domain because the Greedy heuristic represents current best practice behavior. According to our results, our algorithms are capable of generating schedules which reduce the overall harm caused by the Greedy heuristic to at least 42.0% and to at most 81.8%. This level of harm reduction is considerably large. This can help decrease casualties and economic losses substantially.

Some future research directions may enhance the applicability of our optimization model: (1) The integration of performance degradation and preemptive scheduling can be beneficial. Performance degradation becomes apparent when rescue units lose some of their vigor caused by the duration of their deployment and the constant pressure to save lives over time. (2) Time windows during which incidents need to be processed seem also adequate in emergency response settings. For example, time windows are of particular importance when humans are buried alive and need to be saved quickly. (3) Another interesting stream would be to analyze collaboration between rescue units and the coordination of autonomous agents. (4) We admit that a deterministic model in the envisaged application in disaster relief is questionable when information on incidents, including the level of severity, processing times and travel times, are not precisely known. While some information may be modeled stochastically based on historical data, other information is often described and assessed by humans, where linguistic estimations are common. In such cases, fuzzy set theory is a useful approach to model uncertainty. Future research needs to clarify when to use which type of uncertainty, how distribution functions and fuzzy membership functions can be modeled, and how resulting models can be solved.

@&#ACKNOWLEDGEMENTS@&#

We are grateful to the editor and the anonymous reviewers, who all provided many valuable comments which helped improve the paper.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.ejor.2013.10.029.


                     
                        
                           Supplementary Material
                           
                        
                     
                  

@&#REFERENCES@&#

