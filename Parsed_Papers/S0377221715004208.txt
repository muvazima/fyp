@&#MAIN-TITLE@&#Benchmarking state-of-the-art classification algorithms for credit scoring: An update of research

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Large-scale benchmark of 41 classifiers across eight real-word credit scoring data sets.


                        
                        
                           
                           Introduction of ensemble selection routines to the credit scoring community.


                        
                        
                           
                           Analysis of six established and novel indicators to measure scorecard accuracy.


                        
                        
                           
                           Assessment of the financial impact of different scorecards.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Data mining

Credit scoring

OR in banking

Forecasting benchmark

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Credit scoring is concerned with developing empirical models to support decision making in the retail credit business (Crook, Edelman, & Thomas, 2007). This sector is of considerable economic importance. For example, the volume of consumer loans held by banks in the US was $1132bn in 2013; compared to $1541bn in the corporate business.
                        1
                     
                     
                        1
                        Data from the Federal Reserve Board, H8, Assets and Liabilities of Commercial Banks in the United States (http://www.federalreserve.gov/releases/h8/current/).
                      In UK, loans and mortgages to individuals were even higher than corporate loans in 2012 (£11,676 m c.f. £10,388 m).
                        2
                     
                     
                        2
                        Data from ONS Online, SDQ7: Assets, Liabilities and Transactions in Finance Leasing, Factoring and Credit Granting: 1st quarter 2012 (http://www.ons.gov.uk).
                      These figures indicate that financial institutions require formal tools to inform lending decisions.

A credit score is a model-based estimate of the probability that a borrower will show some undesirable behavior in the future. In application scoring, for example, lenders employ predictive models, called scorecards, to estimate how likely an applicant is to default. Such PD (probability of default) scorecards are routinely developed using classification algorithms (e.g., Hand & Henley, 1997). Many studies have examined the accuracy of alternative classifiers. One of the most comprehensive classifier comparisons to date is the benchmarking study of Baesens et al. (2003).

Albeit much research, we argue that the credit scoring literature does not reflect several recent advancements in predictive learning. For example, the development of selective multiple classifier systems that pool different algorithms and optimize their weighting through heuristic search represents an important trend in machine learning (e.g., Partalas, Tsoumakas, & Vlahavas, 2010). Yet, no attempt has been made to systematically examine the potential of such approach for credit scoring. More generally, recent advancements concern three dimensions: (i) novel classification algorithms to develop scorecards (e.g., extreme learning machines, rotation forest, etc.), (ii) novel performance measures to assess scorecards (e.g., the H-measure or the partial Gini coefficient), and (iii) statistical hypothesis tests to compare scorecard performance (e.g., García, Fernández, Luengo, & Herrera, 2010). An analysis of the PD modeling literature confirms that these developments have received little attention in credit scoring, and reveals further limitations of previous studies; namely (i) using few and/or small data sets, (ii) not comparing different state-of-the-art classifiers to each other, and (iii) using only a small set of conceptually similar accuracy indicators. We elaborate on these issues in Section 2.

The above research gaps warrant an update of Baesens et al. (2003). Therefore, the motivation of this paper is to provide a holistic view of the state-of-the-art in predictive modeling and how it can support decision making in the retail credit business. In pursuing this objective, we make the following contributions: first, we perform a large scale benchmark of 41 classification methods across eight credit scoring data sets. Several of the classifiers are new to the community and for the first time assessed in credit scoring. Second, using the principles of cost-sensitive learning, we shed light on the link between the (statistical) accuracy of scorecard predictions and the business value of a scorecard. This offers some guidance whether deploying advanced—more accurate—classification models is economically sensible. Third, we examine the correspondence between empirical results obtained using different accuracy indicators. In particular, we clarify the reliability of scorecard comparisons in the light of recently identified limitations of the area under a receiver operating characteristics curve (Hand, 2009; Hand & Anagnostopoulos, 2013). Finally, we illustrate the use of advanced nonparametric testing procedures to secure empirical findings and, thereby, offer guidance how to organize future classifier comparisons.

In the remainder of the paper we first review related work in Section 2. We then summarize the classifiers that we compare (Section 3) and describe our experimental design (Section 4). Next, we discuss empirical results (Section 5). Section 6 concludes the paper. The online appendix
                        3
                     
                     
                        3
                        Supplementary material associated with this article can be found in the online version, at doi:10.1016/j.ejor.2015.05.030.
                      provides a detailed description of the classification algorithms and additional results.

@&#LITERATURE REVIEW@&#

Much literature explores the development, application, and evaluation of predictive decision support models in the credit industry (see, Crook et al., 2007; Kumar & Ravi, 2007 for reviews). Such models estimate credit worthiness based on a set of explanatory variables. Corporate risk models employ data from balance sheets, financial ratios, or macro-economic indicators, whereas retail models use data from application forms, customer demographics, and transactional data from the customer history (e.g., Thomas, 2010). The differences between the types of variables suggest that specific modeling challenges arise in consumer as opposed to corporate credit scoring. Thus, many studies focus on either the corporate or the retail business. The latter is the focus of this paper.

A variety of prediction tasks arise in consumer credit risk modeling. The Basel II Capital Accord requires financial institutions to estimate, respectively, the probability of default (PD), the exposure at default (EAD), and the loss given default (LGD). EAD and LGD models have recently become a popular research topic (e.g., Calabrese, 2014; Yao, Crook, & Andreeva, 2015). PD models are especially well researched and continue to attract much interest. Topical research question include, for example, how to update PD scorecards in the face of new information (Hofer, 2015; Sohn & Ju, 2014). The prevailing methods to develop PD models are classification and survival analysis. The latter facilitates estimating not only whether but also when a customer defaults (e.g., Tong, Mues, & Thomas, 2012). In addition, a special type of survival model called mixture cure model facilitates predicting multiple events of interest; for example default and early repayment (e.g., Dirick, Claeskens, & Baesens, 2015; Liu, Hua, & Lim, 2015). Classification analysis, on the other hand, represents the classic approach and benefits from an unmatched variety of modeling methods.

We concentrate on PD modeling using classification analysis. Table 1
                      examines previous work in this field. To confirm the need for an update of Baesens et al. (2003), we focus on empirical classifier evaluations published in 2003 or thereafter and analyze three characteristics of such studies: the type of credit scoring data, the employed classification algorithms, and the indicators used to assess these algorithms. With respect to classification algorithms, Table 1 clarifies the extent to which advanced classifiers have been considered in the literature. We pay special attention to ensemble classifiers, which Baesens et al. (2003) do not cover.

Five conclusions emerge from Table 1. First, it is common practice to use a small number of data sets (1.9 on average), many of which contain only few cases and/or independent variables. This appears inappropriate. Using multiple data sets (e.g., data from different companies) facilitates examining the robustness of a scorecard toward environmental conditions. Also, real-world credit data sets are typically large and high-dimensional. The data used in classifier comparisons should be similar to ensure the external validity of empirical results (e.g., Finlay, 2011; Hand, 2006).

Second, the number of classifiers per study varies considerably. This can be explained with common research setups. Studies with fewer classifiers propose a novel algorithm and compare it to some reference methods (e.g., Abellán & Mantas, 2014; Akkoc, 2012; Yang, 2007). Studies with several classifiers often pair algorithms and ensemble strategies in a factorial design (e.g., Marqués, García, & Sánchez, 2012a; Nanni & Lumini, 2009; Wang, Hao, Ma, & Jiang, 2011). Both setups have limitations. The latter focuses on preselected methods and omits a systematic comparison of several state-of-the-art classifiers. Studies that introduce novel classifiers may be over-optimistic because (i) the developers of a new method are more adept with their approach than external users, and (ii) the new method may have been tuned more intensively than reference methods (Hand, 2006; Thomas, 2010). Independent benchmarks complement the other setups in that they compare many classifiers without prior hypotheses which method excels.

Third, most studies rely on a single performance measure or measures of the same type. In general, performance measures split into three types. Those that assess the discriminatory ability of the scorecard (e.g., AUC); those that assess the accuracy of the scorecard’s probability predictions (e.g., Brier Score); and those that assess the correctness of the scorecard’s categorical predictions (e.g., classification error). Different types of indicators embody a different notion of classifier performance. Few studies mix evaluation measures from different categories. For example, none of the reviewed studies uses the Brier Score to assess the accuracy of probabilistic predictions. This misses an important aspect of scorecard performance because financial institutions require PD estimates that are not only accurate but also well calibrated. Furthermore, no previous study uses the H-measure, although it overcomes conceptual shortcomings of the AUC (Hand, 2009). It is thus beneficial to also consider the H-measure in classifier comparisons and, more generally, to assess scorecards with conceptually different performance measures.

Fourth, statistical hypothesis testing is often neglected or employed inappropriately. Common mistakes include using parametric tests (e.g., the t-test) or performing multiple comparisons without controlling the family-wise error level (shown by a ‘P’ in the last column of Table 1). The approaches are inappropriate because the assumptions of parametric tests are violated in classifier comparisons (Demšar, 2006). Similarly, pairwise comparisons without p-value adjustment increase the actual probability of Type-I errors beyond the stated level of α (e.g., García et al., 2010).

Last, only two studies employ selective ensembles and they use rather simple approaches (Yu, Wang, & Lai, 2008; Zhou, Lai, & Yu, 2010). Selective ensembles are an active field of research and have shown promising results (e.g., Partalas et al., 2010). The lack of a systematic evaluation of selective ensembles in credit scoring might thus be an important research gap.

From the literature review, we conclude that an update of Baesens et al. (2003) is needed. This study overcomes several of the above issues through (i) conducting a large-scale comparison of many established and novel classifiers including selective ensembles, (ii) using multiple data sets of considerable size, (iii) considering several conceptually different performance criteria, and (iv) using suitable statistical testing procedures.

We illustrate the development of a credit scorecard in the context of application scoring. Let 
                        
                           x
                           =
                           
                              (
                              
                                 
                                    x
                                    1
                                 
                                 ,
                                 
                                 
                                    x
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    x
                                    m
                                 
                              
                              )
                           
                           ∈
                           
                              R
                              m
                           
                        
                      be an m-dimensional vector with application characteristics and let 
                        
                           y
                           ∈
                           {
                           
                              −
                              1
                              ;
                              +
                              1
                           
                           }
                        
                      be a binary variable that distinguishes good 
                        
                           (
                           
                              y
                              =
                              −
                              1
                           
                           )
                        
                      and bad loans 
                        
                           (
                           
                              y
                              =
                              +
                              1
                           
                           )
                        
                     . A scorecard estimates the (posterior) probability 
                        
                           p
                           (
                           +
                           |
                           
                              x
                              i
                           
                           )
                        
                      that a default event will be observed for loan i; where 
                        
                           p
                           (
                           
                              +
                              |
                              x
                           
                           )
                        
                      is a shorthand form of 
                        
                           p
                           (
                           
                              y
                              =
                              +
                              1
                              |
                              x
                           
                           )
                        
                     . To decide on an application, a credit analyst compares the estimated default probability to a threshold τ; approving the loan if 
                        
                           p
                           (
                           
                              +
                              |
                              x
                           
                           )
                           ≤
                           τ
                        
                     , and rejecting it otherwise. The task to estimate 
                        
                           p
                           (
                           +
                           |
                           x
                           )
                        
                      belongs to the field of classification (e.g., Hand & Henley, 1997). A scorecard is a classification model that results from applying a classification algorithm to a data set 
                        
                           D
                           =
                           
                              
                                 (
                                 
                                    
                                       y
                                       i
                                    
                                    ,
                                    
                                       x
                                       i
                                    
                                 
                                 )
                              
                              
                                 i
                                 =
                                 1
                              
                              n
                           
                        
                      of past loans.

This study compares 41 different classification algorithms. Our selection draws inspiration from previous studies (e.g., Baesens et al., 2003; Finlay, 2011; Verbeke, Dejaeger, Martens, Hur, & Baesens, 2012) and covers several different approaches (linear/nonlinear, parametric/non-parametric, etc.). The algorithms split into individual and ensemble classifiers. The eventual scorecard consists of a single classification model in the first group. Ensemble classifiers integrate the prediction of multiple models, called base models. We distinguish homogeneous ensembles, which create the base models using the same algorithm, and heterogeneous ensembles, which employ different algorithms. Fig. 1 illustrates the modeling process using different classifiers.

Given the large number of classifiers, it is not possible to describe all algorithms in detail. We summarize the methods used here in Table 2
                      and briefly describe the main algorithmic approaches underneath different classifier families. A comprehensive discussion of the 41 classifiers and their specific characteristics is available in an online appendix.
                        4
                     
                     
                        4
                        Supplementary material associated with this article can be found in the online version, at doi:10.1016/j.ejor.2015.05.030.
                     
                  

Note that most algorithms exhibit meta-parameters. Examples include the number of hidden nodes in a neural network or the kernel function in a support vector machine (e.g., Baesens et al., 2003). Relying on literature recommendations, we define several candidate settings for such meta-parameters and create one classification model per setting (see Table 2). A careful exploration of the meta-parameter space ensures that we obtain a good estimate how well a classifier can perform on a given data set. This is important when comparing alternative classifiers. The specific meta-parameter settings and implementation details of different algorithms are documented in Table A.I in the online appendix.
                        5
                     
                     
                        5
                        Supplementary material associated with this article can be found in the online version, at doi:10.1016/j.ejor.2015.05.030.
                     
                  

Individual classifiers pursue different objectives to develop a (single) classification model. Statistical methods either estimate 
                           
                              p
                              (
                              
                                 +
                                 |
                                 x
                              
                              )
                           
                         directly (e.g., logistic regression) or estimate class-conditional probabilities p(
                           x
                        |y), which they then convert into posterior probabilities using Bayes’ rule (e.g., discriminant analysis). Semi-parametric methods such as artificial neural networks or support vector machines operate in a similar manner, but support different functional forms and require the modeler to select one specification a priori. The parameters of the resulting model are estimated using nonlinear optimization. Tree-based methods recursively partition a data set so as to separate good and bad loans through a sequence of tests (e.g., is loan amount > threshold). This produces a set of rules that facilitate assessing new loan applications. The specific covariates and threshold values to branch a node follow from minimizing indicators of node impurity such as the Gini coefficient or information gain (e.g., Baesens et al., 2003).

Homogeneous ensemble classifiers pool the predictions of multiple base models. Much empirical and theoretical evidence has shown that model combination increases predictive accuracy (e.g., Finlay, 2011; Paleologo, Elisseeff, & Antonini, 2010). Homogeneous ensemble learners create the base models in an independent or dependent manner. For example, the bagging algorithm derives independent base models from bootstrap samples of the original data (Breiman, 1996). Boosting algorithms, on the other hand, grow an ensemble in a dependent fashion. They iteratively add base models that are trained to avoid the errors of the current ensemble (Freund & Schapire, 1996). Several extensions of bagging and boosting have been proposed in the literature (e.g., Breiman, 2001; Friedman, 2002; Rodriguez, Kuncheva, & Alonso, 2006). The common denominator of homogeneous ensembles is that they develop the base models using the same classification algorithm.

Heterogeneous ensembles also combine multiple classification models but create these models using different classification algorithms. In that sense, they encompass individual classifiers and homogeneous ensembles as special cases (see Fig. 1). The idea is that different algorithms have different views on the same data and can complement each other. Recently, heterogeneous ensembles that prune some base models prior to combination have attracted much research (e.g., Partalas et al., 2010). This study pays special attention to such selective ensembles because they have received little attention in credit scoring (see Table 1).

Generally speaking, ensemble modeling involves two steps: base models development and forecast combination. Selective ensembles add a third step. After creating a pool of base models, they search the space of available base models for a ‘suitable’ model subset that enters the ensemble. An interesting feature of this framework is that the search problem can be approached in many different ways. Hence, much research concentrates on developing different ensemble selection strategies (e.g., Caruana, Munson, & Niculescu-Mizil, 2006; Partalas, Tsoumakas, & Vlahavas, 2009).

Selective ensembles split into static and dynamic approaches, depending on how they organize the selection step. Static approaches perform the base model search once. Dynamic approaches repeat the selection step for every case. More specifically, using the independent variables of a case, they compose a tailor-made ensemble from the model library. Dynamic ensemble selection might violate regulatory requirements in credit scoring because one would effectively use different scorecards for different customers. In view of this, we focus on static methods, but consider two dynamic approaches (Ko, Sabourin, & Britto, 2008; Woloszynski & Kurzynski, 2011) as benchmarks.

The goal of an ensemble is to predict with high accuracy. To achieve this, many selective ensembles chose base models so as to maximize predictive accuracy (e.g., Caruana et al., 2006). We call this a direct approach. Indirect approaches, on the other hand, optimize the diversity among base models, which is another determinant of ensemble success (e.g., Partalas et al., 2010).
                     

The empirical evaluation includes eight retail credit scoring data sets. The data sets Australian credit (AC) and German credit (GC) from the UCI Library (Lichman, 2013) and the Th02 data set from Thomas, Edelman, and Crook (2002) have been used in several previous papers (see Section 2). Three other data sets, Bene-1, Bene-2, and UK, also used in Baesens et al. (2003), were collected from major financial institutions in the Benelux and UK, respectively. Note that our data set UK encompasses the UK-1, … , UK-4 data sets of Baesens et al. (2003). We pool the data because it refers to the same product and time period. Finally, the data sets PAK and GMC have been provided by two financial institutions for the 2010 PAKDD data mining challenge and the “Give me some credit” Kaggle competition, respectively.

The data sets include several covariates to develop PD scorecards and a binary response variable, which indicates bad loans. The covariates capture information from the application form (e.g., loan amount, interest rate, etc.) and customer information (e.g., demographic, social-graphic, and solvency data). Table 3 summarizes some relevant data characteristics.

The prior default rates of Table 3 report the fraction of bad loans in a data set. For example, GC includes 1000 loans, 300 of which defaulted. Thus, the prior default rate is 0.3.

It has been shown that class imbalance impedes classification. In particular, a classifier may overemphasize the majority class while paying insufficient attention to the minority group. Resampling approaches such as under-/oversampling or SMOTE have been proposed as a remedy (e.g., Verbeke et al., 2012). However, we refrain from balancing classes for three reasons. First, our objective is to examine relative performance differences across different classifiers. If class imbalance hurts all classifiers in the same way, it would affect the absolute level of observed performance but not the relative performance differences among classifiers. If on the other hand some classifiers are particularly robust toward class imbalance, then such trait is a relevant indicator of the classifier's merit. Resampling would mask differences associated with imbalance robustness/sensitivity. Second, it is debatable how prevalent resampling is in the corporate landscape. This also suggests that it is preferable to give an unbiased picture of the performance of alternative algorithms. Last, Table 3 reveals that most of our data sets exhibit a moderate imbalance. We observe a more severe imbalance for two larger data sets (UK and GMC). Due to their size, these data sets still include a sizeable number of defaults, so that classification algorithms should be able to discern default patterns.

We consider six indicators to measure the predictive accuracy of a scorecard: the percentage correctly classified (PCC), the AUC, a partial Gini index (PG), the H-measure, the Brier Score (BS), and the Kolmogorov–Smirnov statistic (KS). We chose these indicators for two reasons: they are popular in credit scoring and cover the three types of measures (see Section 2). The PCC and KS assess the correctness of categorical predictions, the AUC, H-measure, and PG assess discriminatory ability, and the BS assesses the accuracy of probability predictions. The basis of accuracy calculations are the estimated 
                           
                              p
                              (
                              
                                 +
                                 |
                                 x
                              
                              )
                           
                        . Since some classifiers do not produce probability predictions, we calibrate scorecard estimates using Platt's (2000) method.

The PCC is the fraction of correctly classified observations. It requires discrete class predictions, which we obtain by comparing 
                           
                              p
                              (
                              +
                              |
                              x
                              )
                           
                         to a threshold τ and assigning 
                           x
                         to the positive class if 
                           
                              p
                              (
                              +
                              |
                              x
                              )
                              >
                              τ
                           
                        , and the negative class otherwise. In practice, appropriate choices of τ depend on the costs associated with granting credit to defaulting customers or rejecting good customers (e.g., Hand, 2005). Lacking such information, we compute τ (for every data set) such that the fraction of examples classified as positive equals the fraction of positives in the training set.

The BS is the mean-squared error between 
                           
                              p
                              (
                              +
                              |
                              x
                              )
                           
                         and a zero-one response variable (e.g., Hernández-Orallo, Flach, & Ramirez, 2011). The KS is also based on 
                           
                              p
                              (
                              +
                              |
                              x
                              )
                           
                        , but considers a fixed reference point. In particular, the KS is the maximum difference between the cumulative score distributions of positive and negative cases (e.g., Thomas et al., 2002). The AUC equals the probability that a randomly chosen positive case receives a score higher than a randomly chosen negative case.

The PCC and the KS embody a local scorecard assessment. They measure accuracy relative to a single reference point (i.e., τ or the KS point). The AUC and the BS perform a global assessment in that they consider the whole score distribution. The former uses relative (to other cases) score ranks. The latter considers absolute score values. A global perspective assumes implicitly that all thresholds are equally probable. This is not plausible in credit scoring (e.g., Hand, 2005). Considering that only applications with a score below the threshold will be accepted, the accuracy of a scorecard in the lower tail of the score distribution is particularly important. The PG concentrates on one part of the score distribution 
                           
                              p
                              (
                              
                                 +
                                 |
                                 x
                              
                              )
                              
                              ≤
                              b
                           
                         (Pundir & Seshadri, 2012). We chose b = 0.4 and compute the Gini index among the corresponding cases.

The H-measure gives a normalized classifier assessment based on expected minimum misclassification loss; ranging from zero to one for a random and perfect classifier, respectively. Hand (2009) shows that the AUC suffers some deficiencies, which the H-measure overcomes. In particular, the AUC assumes different cost distributions for different classifiers. Instead, the distribution of misclassification costs should depend on the classification problem, and not on the classifier (Hand & Anagnostopoulos, 2013). Therefore, the H-measure uses a beta-distribution
                           6
                        
                        
                           6
                           We use a beta-distribution with parameters 
                                 
                                    α
                                    =
                                    β
                                    =
                                    2
                                    .
                                 
                               Supplementary material associated with this article can be found in the online version, at doi:10.1016/j.ejor.2015.05.030.
                         to specify the relative severities of classification errors in a way that is consistent across classifiers.

Given that the class distributions in our data show some imbalance (see Table 3), it is important to reason whether and how class skew affects the performance measures. The AUC is not affected by class imbalance (Fawcett, 2006). This feature extends to the other ranking measures (i.e., the PG and the H-measure) because these ground on the same principles as the AUC. The BS and the KS are based on the score distribution of a classifier. As such, they are robust toward class skew in general (e.g., Gong & Huang, 2012). However, class imbalance could exert an indirect effect in that it might bias the scores that the classifier produces. Finally, using the PCC in the presence of class imbalance is often discouraged. A common critic is that PCC reports high performance for naïve classifiers, which always predict the majority class. However, we argue that this critic is misleading in that it misses the important role of the classification threshold. A proper choice of τ, for example according to Bayes' rule, reflects the prior probabilities of the classes and thereby mitigates the naïve classifier problem, at least to some extent.

For the reasons outlined above, we consider each of the six performance measures a viable approach for classifier comparisons. In addition, further protection from class imbalance biasing the benchmarking results comes from our approach to calibrate predictions prior to assessing accuracy (see above). Calibration ensures that we compare different classifiers on a common ground. More specifically, calibration sanitizes a classifier's score distribution and thus prevents imbalance from indirectly affecting the BS or the KS. For the PCC, we set τ such that the fraction of cases classified as positive is equal to the prior default probability in the training set. With these strategies in place, we argue that the residual effect of class imbalance on the observed results comes directly from different algorithms being more or less sensitive toward imbalance. Such effects are useful to observe as class imbalance is a common phenomenon in credit scoring.

We first impute missing values using a mean/mode replacement for numeric/nominal attributes. Next, we create two versions of each data set, one which mixes nominal and numeric variables and one where all nominal variables are converted to numbers using weight-of-evidence coding (e.g., Thomas et al., 2002). This is because some classification algorithms are well suited to work with data of mixed scaling level (e.g., classification trees and Bayes classifiers), whereas others (e.g., ANNs and SVMs) benefit from encoding nominal variables (e.g., Crone, Lessmann, & Stahlbock, 2006).

An important pre-processing decision concerns data partitioning (see Fig. 1). We use Nx2-fold cross-validation (Dietterich, 1998). This involves (i) randomly splitting a data set in half, (ii) using the first and second half for model building and evaluation, respectively, (iii) switching the roles of the two partitions, and (iv) repeating the two-fold validation N times. Compared to using a fixed training and test set, multiple repetitions of two-fold cross-validation give more robust results, especially when working with small data sets. Thus, we set N depending on data set size (Table 3). This is also to ensure computational feasibility.

Recall that we develop multiple classification models with one algorithm. The models differ in terms of their meta-parameter settings (see Table 2). Thus, prior to comparing different classifiers, we identify the best meta-parameter configuration for each classification algorithm. This requires auxiliary validation data. We also require validation data to prune base models in selective ensemble algorithms. To obtain such validation data, we perform an additional (internal) five-fold cross-validation on every training set of the (outer) Nx2-cross-validation loop (Caruana et al., 2006). The classification models selected in this stage enter the actual benchmark, where we compare the best models from different algorithms in the outer Nx2 cross-validation loop. Given that model performance depends on the specific accuracy indicator employed, we repeat the selection of the best model per classifier for every performance measure. This way, we tune every classifier to the specific performance measure under consideration and ensure that the algorithm predicts as accurately as possible given the predefined candidate settings for meta-parameters (see Table A.1 in the online appendix
                           7
                        
                        
                           7
                           Supplementary material associated with this article can be found in the online version, at doi:10.1016/j.ejor.2015.05.030.
                        ).

The empirical results consist of performance estimates of the 41 classifiers across the eight credit scoring data sets in terms of the six performance measures. Interested readers find these raw results in Table A.2–A.7 in the online appendix.
                        8
                     
                     
                        8
                        Supplementary material associated with this article can be found in the online version, at doi:10.1016/j.ejor.2015.05.030.
                      Below, we report aggregated results.

In the core benchmark, we rank classifier performance across data sets and accuracy indicators. For example, the classifier that gives the highest AUC on the AC data sets receives a rank of one, the second best classifier a rank of two and the worst classifier a rank of 41.


                        Table 4
                         shows the average (across data sets) ranks per accuracy indicator. The second to last column of Table 4 gives a grand average (AvgR), which we compute as the mean classifier rank across performance measures. The last column translates the AvgR into a high score position (e.g., the overall best performing classifier receives the first place, the second best classifier place two, etc.)

The average ranks of Table 4 are also the basis of a statistical analysis of model performance. In particular, we employ a nonparametric testing framework to compare the classifiers to a control classifier (Demšar, 2006). The control classifier is the best performing classifier per performance measure. The last row of Table 4 depicts the test statistic and p-value (in brackets) of a Friedman test of the null-hypothesis that all classifier ranks are equal. Given that we can reject the null-hypothesis for all performance measures (p < .000), we proceed with pairwise comparisons of a classifier to the control classifier using the Rom-procedure for p-value adjustment (García et al., 2010). Table 4 depicts the p-values corresponding to these pairwise comparisons in brackets. An underscore indicates that we can reject the null-hypothesis of a classifier performing equal to the control classifier (i.e., p < .05).

A number of conclusions emerge from Table 4. First, it emphasizes the need to update Baesens et al. (2003) who focused on individual classifiers. With an average rank of 18.8, the best individual classifier (ANN) performs only midfield. This evidences notable advancements in predictive learning since 2003. Similar to Baesens et al. (2003), we observe ANN to perform slightly better than the industry standard LR (AvgR 19.3). Some authors have taken the similarity between LR and advanced methods such as ANN as evidence that complex classifiers do not offer much advantage over simpler methods (e.g., Finlay, 2009). We do not agree with this view. Our results suggest that comparisons among individual classifiers are too narrow to shed light on the value of advanced classifiers. For example, the p-values of the pairwise comparisons indicate that the individual classifiers predict significantly less accurately than the best classifier. This shows that advanced methods can outperform simple classifiers and LR in particular.

On the other hand, a second result of Table 4 is that sophisticated methods do not necessarily improve accuracy. More specifically, Table 4 casts doubt on some of the latest attempts to improve existing algorithms. For example, ELMs and RotFor extend classical ANNs and the RF classifier, respectively (Guang-Bin, Lei, & Chee-Kheong, 2006; Rodriguez et al., 2006). According to Table 4, neither of the augmented classifiers improves upon its ancestor. Additional evidence against the merit of sophisticated classifiers comes from the results of dynamic ensemble selection algorithms. Arguably, dynamic ensembles are the most complex classifiers in the study. However, no matter what performance measure we consider, they predict a lot less accurately than simpler alternatives including LR and other well-known techniques.

Given somewhat contradictory signals as to the value of advanced classifiers, our results suggest that the complexity and/or recency of a classifier are misleading indicators of its prediction performance. Instead, there seem to be some specific approaches that work well; at least for the credit scoring data sets considered here. Identifying these ‘nuggets’ among the myriad of methods is an important objective and contribution of classifier benchmarks.

In this sense, a third result of Table 4 is that it confirms and extends previous findings of Finlay (2011). We confirm Finlay (2011) in that we also observe multiple classifier architectures to predict credit risk with high accuracy. We also extend his study by considering selective ensemble methods, and find some evidence that such methods are effective in credit scoring. Overall, heterogeneous ensembles secure the first 11 ranks. The strongest competitor outside this family is RF with an average rank of 14.8 (corresponding to place 12). RF is often credited as a very strong classifier (e.g., Brown & Mues, 2012; Kruppa, Schwarz, Arminger, & Ziegler, 2013). We also observe RF to outperform several alternative methods (including SVMs, ANNs, and boosting). However, a comparison to heterogeneous ensemble classifiers—not part of previous studies and explicitly requested by Finlay (2011, p. 377)—reveals that such approaches further improve on RF. For example, the p-values in Table 4 show that RF predicts significantly less accurately than the best classifier.

Finally, Table 4 also facilitates some conclusions related to the relative effectiveness of different types of heterogeneous ensembles. First, we observe that the very simple approach to combine all base model predictions through (unweighted) averaging achieves competitive performance. Overall, the AvgS ensemble gives the fourth-best classifier in the comparison. Moreover, AvgS predicts never significantly less accurately than the best classifier. Second, we find some evidence that combining base models using a weighted average (AvgW) might be even more promising. This approach produces a very strong classifier with second best overall performance. Third, we observe mixed results for selective ensemble classifiers. Direct approaches achieve ranks in the top-10. In many pairwise comparisons, we cannot reject the null-hypothesis that a direct selective ensemble and the best classifier perform akin. The overall best classifier in the study, HCES-Bag (Caruana et al., 2006), also belongs to the family of direct selective ensembles. Recall that direct approaches select ensemble members so as to maximize predictive accuracy (see the online appendix for details
                           9
                        
                        
                           9
                           Supplementary material associated with this article can be found in the online version, at doi:10.1016/j.ejor.2015.05.030.
                        ). Consequently, they compose different ensembles for different performance measures from the same base model library. In a similar way, using different performance measures leads to different base model weights in the AvgW ensemble. On the other hand, performance-measure-agnostic ensemble strategies tend to predict less accurately. Exceptions to this tendency exist, for example the high performance of AvgS or the relatively poor performance of CompM. However, Table 4 suggests an overall trend that the ability to account explicitly for an externally given performance measure is important in credit scoring.

To complement the previous comparison of several classifiers to a control classifier (i.e., the best classifier per performance measure), this section examines to what extent four selected classifiers are statistically different. In particular, we concentrate on LR, ANN, RF, and HCES-Bag. We select LR for its popularity in credit scoring, and the other three for performing best in their category (best individual classifier, best homogeneous/heterogeneous ensemble).


                        Table 5
                         reports the results of a full pairwise comparison of these classifiers. The second column reports their average ranks across data sets and performance measures and the last row the results of the Friedman test. Based on the observed 
                           
                              
                                 χ
                                 3
                                 2
                              
                              =
                              216.2
                           
                        , we reject the null-hypothesis that the average ranks are equal (p < .000) and proceed with pairwise comparisons. For each pair of classifiers, i and j, we compute (Demšar, 2006):

                           
                              (1)
                              
                                 
                                    z
                                    =
                                    
                                       R
                                       i
                                    
                                    −
                                    
                                       R
                                       j
                                    
                                    /
                                    
                                       
                                          
                                             k
                                             
                                                (
                                                
                                                   k
                                                   +
                                                   1
                                                
                                                )
                                             
                                          
                                          
                                             6
                                             N
                                          
                                       
                                    
                                 
                              
                           
                        where Ri
                         and Rj
                         are the average ranks of classifier i and j, respectively, k (=4) denotes the number of classifiers, and N (=8) the number of data sets used in the comparison. We convert the z-values into probabilities using the standard normal distribution and adjust the resulting p-values for the overall number of comparisons using the Bergmann–Hommel procedure (García & Herrera, 2008). Based on the results shown in Table 5, we conclude that (i) LR predicts significantly less accurately than any of the other classifiers, that (ii) HCES-Bag predicts significantly more accurately than any of the other classifiers, and that (iii) the empirical results do not provide sufficient evidence to conclude whether RF and ANN perform significantly different.

Previous results have established that certain classifiers predict significantly more accurately than alternative classifiers. An important managerial question is to what degree accuracy improvements add to the bottom line. In the following, we strive to shed some light on this once more on the four classifiers LR, ANN, RF, and HCES-Bag.

Estimating scorecard profitability at the account level is difficult for several reasons (e.g., Finlay, 2009). For example, the time of a default event plays an important role when estimating returns and EAD. To forecast time to default, sophisticated profit estimation approaches use survival analysis or Markov processes (e.g., Andreeva, 2006; So & Thomas, 2011). Estimates of EAD and LGD are also required when using sophisticated profit measures for binary scorecards (e.g., Verbraken, Bravo, Weber, & Baesens, 2014). In benchmarking experiments, where multiple data sets are employed, it is often difficult to obtain estimates of these parameters for every individual data set. In particular, our data sets lack specific information related to time, LGD, or EAD. Therefore, we employ a simpler approach to estimate scorecard profitability. In particular, we examine the costs that follow from classification errors (e.g., Viaene & Dedene, 2004). This approach is commonly used in the literature (e.g., Akkoc, 2012; Sinha & Zhao, 2008) and can, at least, give a rough estimate of the financial rewards that follow from more accurate scorecards.
                     

We calculate the misclassification costs of a scorecard as a weighted sum of the false positive rate (FPR; i.e., fraction of good risks classified as bad) and the false negative rate (FNR; i.e., fraction of bad risks classified as good), weighted with their corresponding decision costs. Let 
                           
                              C
                              (
                              
                                 +
                                 |
                                 −
                              
                              )
                           
                         be the opportunity costs that result from denying credit to a good risk. Similarly, let 
                           
                              C
                              (
                              −
                              |
                              +
                              )
                           
                         be the costs of granting credit to a bad risk (e.g., net present value of EAD*LGD—interests paid prior to default). Then, we can calculate the error costs of a scorecard, C(s), as:

                           
                              (2)
                              
                                 
                                    C
                                    
                                       (
                                       s
                                       )
                                    
                                    =
                                    C
                                    
                                       
                                          
                                             (
                                             
                                                +
                                                |
                                                −
                                             
                                             )
                                          
                                       
                                       *
                                    
                                    FPR
                                    +
                                    C
                                    
                                       
                                          
                                             (
                                             
                                                −
                                                |
                                                +
                                             
                                             )
                                          
                                       
                                       *
                                    
                                    FNR
                                 
                              
                           
                        Given that a scorecard produces probability estimates 
                           
                              p
                              (
                              
                                 +
                                 |
                                 x
                              
                              )
                           
                        , FPR and FNR depend on the threshold τ. Bayesian decision theory suggests that an optimal threshold depends on the prior probabilities of good and bad risks and their corresponding misclassification costs (e.g., Viaene & Dedene, 2004). To cover different scenarios, we consider 25 cost ratios in the interval 
                           
                              C
                              (
                              
                                 +
                                 |
                                 −
                              
                              )
                              :
                              C
                              (
                              
                                 −
                                 |
                                 +
                              
                              )
                              =
                              1
                              :
                              2
                              ,
                              …
                              ,
                              1
                              :
                              50
                           
                        , always assuming that it is more costly to grant credit to a bad risk than rejecting a good application (e.g., Thomas et al., 2002). Note that fixing 
                           
                              C
                              (
                              
                                 +
                                 |
                                 −
                              
                              )
                           
                         at one does not constrain generality (e.g., Hernández-Orallo et al., 2011). For each cost setting and credit scoring data set, we (i) compute the misclassification costs of a scorecard from (2), (ii) estimate expected error costs through averaging over data sets, and (iii) normalize costs such that they represent percentage improvements compared to LR. Fig. 2 depicts the corresponding results.


                        Fig. 2 reveals that the considered classifiers can substantially reduce the error costs of a LR-based scorecard. For example, the average improvements (across all cost settings) of ANN, RF, and HCES-Bag over LR are, respectively, 3.4 percent, 5.7 percent, and 4.8 percent. Improvements of multiple percent are meaningful from a managerial point of view, especially when considering the large number of decisions that scorecards support in the financial industry. Another result is that the most accurate classifier, HCES-Bag loses its advantage when the cost of misclassifying bad credit risks increases. This shows that the link between (statistical) accuracy and business value is far from perfect. The most accurate classifier does not necessarily give the most profitable scorecard.

RF and ANN achieve a larger cost reduction than HCES-Bag when misclassifying a bad risk is 11 and 18 times more expensive than the opposite error, respectively. Using a Bayes-optimal threshold, higher costs of misclassifying a bad risk lower the threshold and thus the acceptance rate. Hence, incorrect rejections of actually good risks become the main determinant of the error costs of a scorecard. This suggests that the partial superiority of RF (and ANN) over HCES-Bag results from the latter producing too conservative predictions for clients with low credit risk. It could be interesting to examine whether this pattern persists if HCES-Bag were setup to minimize error costs directly (i.e., within ensemble selection). We leave this test to future research.

Given that many previous studies have used a small number of accuracy indicators, it is interesting to examine the dependency of observed results on the chosen indicator. Moreover, such an analysis can add some empirical evidence to the recent debate whether and when the AUC is a suitable measure to compare different classifiers and retail scorecards in particular (e.g., Hand & Anagnostopoulos, 2013; Hernández-Orallo et al., 2011).


                        Table 6
                         depicts the agreement of classifier rankings across accuracy indicators using Kendall’s rank correlation coefficient. With respect to the AUC, we find that empirical results do not differ much between this measure and the H-measure (correlation: .93). Thus, if a credit analyst were to choose a scorecard among alternatives, the AUC and the H-measure would typically give similar recommendations. In fact, Table 6 supports generalizing this view even further. Pairwise correlations around .90 indicate high similarity between classifier ranks in terms of the KS and the PCC with those of the AUC and the H-measure. Despite substantial conceptual differences between these measures (e.g., local versus global assessment; see Section 4.3), they rank classifiers rather similarly. Therefore, it appears sufficient to use one of them in empirical classifier comparisons.

A different conclusion emerges for the BS and the PG. Using the same measurement approach as the AUC, the PG emphasizes the accuracy of a scorecard in the most important segment of the score distribution. Our results confirm that this captures a different aspect of performance. For example, the AUC is notably less correlated with the PG than with the H-measure. However, we observe the smallest correlation between the BS and the other measures. The BS is the only indicator that assesses the accuracy of probability estimates. Table 6 reveals that this notion of performance contributes useful information to a classifier comparison over and above those captured in the AUC, PCC, H-measure, and KS.

Based on Table 6 we recommend that future studies use at least three performance measures: the AUC, the PG, and the BS, whereby one could replace the AUC with the H-measure. The PG and the BS offer an additional angle from which to examine predictive accuracy. Thus, they should routinely be part of scorecard comparisons.

@&#CONCLUSIONS@&#

We set out to update Baesens et al. (2003) and to explore the relative effectiveness of alternative classification algorithms in retail credit scoring. To that end, we compared 41 classifiers in terms of six performance measures across eight real-world credit scoring data sets. Our results suggest that several classifiers predict credit risk significantly more accurately than the industry standard LR. Especially heterogeneous ensembles classifiers perform well. We also provide some evidence that more accurate scorecards facilitate sizeable financial returns. Finally, we show that several common performance measures give similar signals as to which scorecard is most effective, and recommend the use of two rarely employed measures that contribute additional information.

Our study consolidates previous work in PD modeling and provides a holistic picture of the state-of-the-art in predictive modeling for retail scorecard development. This has implications for academia and industry. From an academic point of view, an important question is whether efforts into the development of novel scoring techniques are worthwhile. Our study provides some support but also raises concerns. We find some advanced methods to perform extremely well on our credit scoring data sets, but never observe the most recent classifiers to excel. ANNs perform better than ELMs, RF better than RotFor, and dynamic selective ensembles worse than almost all other classifiers. This may indicate that progress in the field has stalled (e.g., Hand, 2006), and that the focus of attention should move from PD models to other modeling problems in the credit industry including data quality, scorecard recalibration, variable selection, and LGD/EAD modeling.

On the other hand, we do not expect the desire to develop better, more accurate scorecards to end any time soon. Likely, future papers will propose novel classifiers and the “search for the silver bullet” (Thomas, 2010) will continue. An implication of our study is that such efforts must be accompanied by a rigorous assessment of the proposed method vis-à-vis challenging benchmarks. In particular, we recommend RF as benchmark against which to compare new classification algorithms. HCES-Bag might be even more difficult to outperform, but is not as easily available in standard software. Furthermore, we caution against the practice to compare a newly proposed classifier to LR (or some other individual classifier) only, which we still observe in the literature. LR is the industry standard and it is useful to examine how a new classifier compares to this approach. However, given the state-of-the-art, outperforming LR can no longer be accepted as a signal of methodological advancement.

An important question to be answered in future research is whether the characteristics of a classification algorithm and a data set facilitate appraising the classifier's suitability for this data set a priori. We have identified classifiers that work well for PD modeling, but cannot explain their success. Nonetheless, our benchmark can be seen as a first step toward gaining explanatory insight in that it provides an empirical fundament for meta-analytic research. For example, gathering features of individual classifiers and characteristics of the credit scoring data sets, and using these as covariates in a regression framework to explain classifier performance (as dependent variable) could help to uncover the underlying drivers of classifier efficacy in credit scoring.

From a managerial perspective, it is important to reason whether the superior performance that we observe for some classifiers generalizes to real-world applications, and to what extent their adoption would increase returns. These questions are much debated in the literature (e.g., Finlay, 2011). From this study, we can add some points to the discussion.

First, we show that advancements in computer power, classifier learning, and statistical testing facilitate rigorous classifier comparisons. This does not guarantee external validity. Several concerns why laboratory experiments (as this one) may overestimate the advantage of advanced classifiers remain valid; and might be insurmountable (e.g., Hand, 2006). However, experimental designs with several cross-validation repetitions, different performance measures, and appropriate multiple-comparison procedures overcome some limitations of previous studies and, thereby, provide stronger support that advanced classifiers have the potential to increase predictive accuracy not only in the laboratory but also in industry.

Second, our results facilitate some remarks related to the organizational acceptance of advanced classifiers. In particular, a lack of acceptance can result from concerns that much expertise is needed to handle such classifiers. Our results show that this is not the case. The accuracy differences that we observe result from a fully-automatic modeling approach. Consequently, certain advanced classifiers do not require human intervention to predict significantly more accurately than simpler alternatives. Furthermore, the current interest in Big Data indicates a shift toward a data-driven decision making paradigm among managers. This might further increase the acceptability of advanced scoring methods.

Finally, the business value of more accurate scorecard predictions is a crucial issue. Our preliminary simulation provides some evidence that the “higher (statistical) accuracy equals more profit equation” might hold. Furthermore, retail scorecards support a vast number of business decisions. Consider for example the credit card industry or scoring tasks in online settings. In such environments, one-time investments (e.g., for hardware, software, and user training) into a more elaborate scoring technique will pay-off in the long run when small but significant accuracy improvements are multiplied by hundreds of thousands of scorecard applications. The difficulties of introducing advanced scoring methods including ensemble models are more psychological than business related. Using a large number of models, a significant minority of which give contradictory answers, is counterintuitive to many business leaders. Such organizations will need to experiment fully before accepting a change from the historic industry standard procedures.

Regulatory frameworks and organizational acceptance constrain and sometimes prohibit the use of advanced scoring techniques today; at least for classic credit products. However, given the current interest in data-centric decision aids and the richness of online-mediated forms of credit granting, we foresee a bright future for advanced scoring methods in credit scoring.

@&#ACKNOWLEDGEMENTS@&#

We thank Immanuel Bomze for his efforts, support, and advice during the handling of the paper. We are also grateful to five anonymous referees for constructive comments and valuable suggestions how to further improve the paper.

Supplementary material associated with this article can be found, in the online version, at doi:10.1016/j.ejor.2015.05.030.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

