@&#MAIN-TITLE@&#Feature correspondence based on directed structural model matching

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A directed structural model is proposed for feature correspondence.


                        
                        
                           
                           It provides more discriminating ability than commonly used undirected model.


                        
                        
                           
                           The feature correspondence is casted as a “directed structural matching” problem.


                        
                        
                           
                           The convex–concave relaxation procedure (CCRP) is generalized to solve the problem.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Feature correspondence

Directed structural model

Graph matching

@&#ABSTRACT@&#


               
               
                  Feature correspondence lays the foundation for many tasks in computer vision and pattern recognition. In this paper the directed structural model is utilized to represent the feature set, and the correspondence problem is then formulated as the structural model matching. Compared with the undirected structural model, the proposed directed model provides more discriminating ability and invariance against rotation and scale transformations. Finally, the recently proposed convex–concave relaxation procedure (CCRP) is generalized to approximately solve the problem. Extensive experiments on synthetic and real data witness the effectiveness of the proposed method.
               
            

@&#INTRODUCTION@&#

As a fundamental problem in computer vision and pattern recognition, feature correspondence plays an important role in many tasks such as image retrieval, object recognition, 3D reconstruction, and bio-informatics. Although the correspondence using only appearance descriptors such as SIFT descriptor [24], shape context feature [1] or bag-of-words model [20] got good results in some tasks such as object detection and image classification [32,10,35,36], recently much effort has been devoted to the incorporation of spatial information into the appearance cue [6,33,25,2,15,26]. Consequently, the feature correspondence can be in general formulated as a combination of a unary term related to the appearance similarity and a pairwise term describing the spatial consistency.

Intuitively, the pairwise constraints could improve the correspondence performance. For example, if we add the distance constraint, then a pair of feature points close to each other in one set is less likely to be assigned to the points far away from each other in another set. However, researchers [6] showed that the appearance only based methods performed comparably or even better than the structural ones. In fact, the performance of pairwise constraints depends largely on the structural model constructed, and an unstable descriptor may result in bad performance in practice. For instance, the same object in different images may appear in different scales, orientations, and suffers from other types of distortions. It is thus far from easy to construct a stable structural model invariant to these geometric transformations. The distance descriptor is robust against rotation, but often vulnerable to scale and other types of transformations. The orientation descriptor is robust against scale, but not rotation.

In this paper, we propose a robust directed structural model to tackle the equal-sized correspondence problem. By representing the feature set by the directed structural model or equivalently the directed graph, the correspondence is formulated as a directed graph matching and then approximately solved by generalizing the recently proposed convex–concave relaxation procedure (CCRP).

@&#RELATED WORKS@&#

Feature correspondence mainly consists of two parts, model construction and optimization algorithm. We give a brief review of the related works in literature from the two aspects.

The proposed model is related to [33,19,27,28,9,3,37] which models utilize both the distance and orientation descriptors, though in different ways. Considering the distance descriptor, some models [33,19,27,9,37] are sensitive to the scale transformation by directly taking the distance as the descriptor. In [28,3] they normalize the distance by the longest distance between features, which makes it invariant to scale transformation, but the performance may deteriorate sharply when false features exist, because they tend to affect the global measurement. By contrast, the proposed distance descriptor takes a local measure as the normalizer, which is more robust than the global normalization. Considering the orientation descriptor, many existing models utilize or equivalently utilize the angle between an edge and the horizontal axis as the orientation descriptor. Such descriptors are sensitive to the rotation transformation. In [27] they utilize the angle between dominant orientation of one feature and related edge as the descriptor, which however is limited to the feature types with local orientation like SIFT [24]. By contrast, the proposed orientation descriptor based on the object orientation is invariant to rotation.

There exist many graph matching algorithms for the correspondence problem combining both appearance and structural cues, about which the readers are advised to refer to [8] for a comprehensive survey. Generally speaking, the graph matching problem is a typical NP-hard problem, which makes the approximation necessary in practical applications. Though some approximate matching algorithms [14,31] could deal with the directed graphs, they often suffer from high computational and storage complexity. Some other state-of-the-art algorithms recently proposed, including the spectral method [19,9,34,7,29], semi-definite based method [30] and path following methods [38,39], are applicable only on undirected graphs. As an extension of the path following algorithm, the CCRP [23,22] is generalized to deal with the directed problem.

The directed structural model and the objective function are proposed in detail in Section 2, and the optimization algorithm is given in Section 3. Following the extensive experiments on both synthetic and real data in Section 4, Section 5 finally concludes the paper.

In this section, we will first present the directed structural model and then give the objective function for the correspondence problem.

A feature g
                        
                           i
                         in a feature set G
                        ={g
                        
                           i
                        }
                           i
                           =1
                        
                           N
                         is a key point with its spatial coordinates l
                        
                           i
                        
                        ∈ℝ2 and the appearance descriptor 
                           
                              f
                              i
                           
                           ∈
                           
                              ℝ
                              
                                 d
                                 f
                              
                           
                         around it. For instance, by utilizing a 128-dimensional SIFT histogram abstract from the patches around each key point as the appearance descriptor, there is d
                        
                           f
                        
                        =128.

Distance is probably the most commonly used structural descriptor between key points, due to its invariance to rotation. However, the distance itself is vulnerable to the scale transformation, which consequently makes a normalization procedure necessary. Commonly used normalization should be the ones normalized by the maximal or average distance between feature points. However, the performance of such normalization may deteriorate greatly when encountering outliers. To overcome this drawback, the distance descriptor is given by,
                           
                              (1)
                              
                                 
                                    a
                                    
                                       i
                                       j
                                    
                                    dis
                                 
                                 =
                                 exp
                                 
                                    
                                       −
                                       
                                          
                                             ∥
                                             
                                                l
                                                i
                                             
                                             −
                                             
                                                l
                                                j
                                             
                                             
                                                ∥
                                                2
                                             
                                          
                                          
                                             
                                                max
                                                
                                                   j
                                                   =
                                                   1
                                                   ⋯
                                                   N
                                                
                                             
                                             ∥
                                             
                                                l
                                                i
                                             
                                             −
                                             
                                                l
                                                j
                                             
                                             
                                                ∥
                                                2
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Generally a
                        
                           ij
                        
                        
                           dis
                        
                        ≠
                        a
                        
                           ji
                        
                        
                           dis
                        , which means the distance descriptor is directed. And the descriptor is less affected by the outliers than the global normalization, as shown in Fig. 1
                        .

The orientation descriptor is robust to the scale transformation but in general sensitive to rotation. To overcome this problem, a fixed orientation 
                           
                              d
                              ¯
                           
                         with respect to object rotation is proposed as follows,
                           
                              (2)
                              
                                 
                                    d
                                    ¯
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          
                                             
                                                i
                                                =
                                                1
                                                ⋯
                                                N
                                             
                                          
                                          
                                             
                                                
                                                   l
                                                   i
                                                
                                                ≠
                                                
                                                   l
                                                   ¯
                                                
                                             
                                          
                                       
                                    
                                    
                                 
                                 
                                 
                                    
                                       
                                          l
                                          i
                                       
                                       −
                                       
                                          l
                                          ¯
                                       
                                    
                                    
                                       ∥
                                       
                                          l
                                          i
                                       
                                       −
                                       
                                          l
                                          ¯
                                       
                                       ∥
                                    
                                 
                                 ,
                              
                           
                        where
                           
                              
                                 
                                    l
                                    ¯
                                 
                                 =
                                 
                                    1
                                    N
                                 
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                          ⋯
                                          N
                                       
                                    
                                    
                                 
                                 
                                 
                                    l
                                    i
                                 
                              
                           
                        is treated as the object center. A simple illustration of the object orientation 
                           
                              d
                              ¯
                           
                         is given in Fig. 2
                        (a). It is observed that the two ‘Houses’ retain the same object orientation under scale and rotation transformations.

Based on 
                           
                              d
                              ¯
                           
                        , the orientation descriptor is given by
                           
                              (3)
                              
                                 
                                    a
                                    
                                       i
                                       j
                                    
                                    
                                       o
                                       r
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                1
                                                π
                                             
                                             arccos
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               l
                                                               i
                                                            
                                                            −
                                                            
                                                               l
                                                               j
                                                            
                                                         
                                                      
                                                      
                                                         ∥
                                                         
                                                            l
                                                            i
                                                         
                                                         −
                                                         
                                                            l
                                                            j
                                                         
                                                         ∥
                                                      
                                                   
                                                   
                                                      
                                                         d
                                                         ¯
                                                      
                                                      
                                                         ∥
                                                         
                                                            d
                                                            ¯
                                                         
                                                         ∥
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             if
                                             
                                             i
                                             ≠
                                             j
                                             ∧
                                             ∥
                                             
                                                d
                                                ¯
                                             
                                             ∥
                                             ≠
                                             0
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             Otherwise
                                             .
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     

It is the angle between 
                           
                              d
                              ¯
                           
                         and the link between features g
                        
                           i
                         and g
                        
                           j
                        , normalized by π. Generally a
                        
                           ij
                        
                        
                           ori
                        
                        ≠
                        a
                        
                           ji
                        
                        
                           ori
                        , which means that the orientation descriptor is directed. Fig. 2(b) gives an illustration of the orientation descriptor.


                        Fig. 3
                         gives a simple comparison between the orientation descriptors in directed and undirected models, where G′ is gotten by a reflection transformation over G. The object orientation of G (G′) is denoted by 
                           
                              d
                              ¯
                           
                         
                        
                           
                              
                                 
                                    d
                                    ′
                                 
                                 ¯
                              
                           
                        . In the undirected model, the acute angle between edge AD and 
                           
                              d
                              ¯
                           
                        , i.e. α, is utilized as the orientation descriptor a
                        
                           AD
                        . Then 
                           
                              a
                              AD
                           
                           =
                           
                              a
                              
                                 D
                                 A
                              
                           
                           =
                           
                              a
                              
                                 
                                    A
                                    ′
                                 
                                 
                                    D
                                    ′
                                 
                              
                           
                           =
                           
                              a
                              
                                 
                                    D
                                    ′
                                 
                                 
                                    A
                                    ′
                                 
                              
                           
                           =
                           α
                        , and it can be noticed that this descriptor makes no distinction between points A and D. If AB and CD are parallel, there may be multiple correspondence solutions, i.e., [ABCD] may be assigned to [A′B′C′D′] or equivalently to [D′C′B′A′]. And the detailed explanation is given in A. In the directed model, there are 
                           
                              a
                              AD
                           
                           =
                           
                              a
                              
                                 
                                    A
                                    ′
                                 
                                 
                                    D
                                    ′
                                 
                              
                           
                           =
                           α
                         and 
                           
                              a
                              
                                 D
                                 A
                              
                           
                           =
                           
                              a
                              
                                 
                                    D
                                    ′
                                 
                                 
                                    A
                                    ′
                                 
                              
                           
                           =
                           β
                        , which imply that there is a unique correspondence solution even in the case that AB and CD are parallel. Thus, the orientation descriptor in the directed model provides a more discriminating ability.

Based on the directed structural model, a feature set G can be represented by a directed labeled weighted graph 
                           G
                           =
                           
                              V
                              E
                           
                        , where V
                        ={1,2,…,
                        N} is the vertex set and E
                        ⊂
                        V
                        ×
                        V is the edge set. A feature g
                        
                           i
                         is represented by a vertex i and its appearance descriptor f
                        
                           i
                         is assigned as the label to i. The connection between features g
                        
                           i
                         and g
                        
                           j
                         is represented by an edge ij, and the structural descriptors a
                        
                           ij
                        
                        
                           dis
                         and a
                        
                           ij
                        
                        
                           ori
                         can be assigned as weights to the edge ij. As one most commonly used matrix associated with weighted graph, two weighted adjacency matrices A
                        
                           G
                        
                        
                           dis
                        
                        ∈ℝ
                           N
                           ×
                           N
                         and A
                        
                           G
                        
                        
                           ori
                        
                        ∈ℝ
                           N
                           ×
                           N
                         which record the edge weights a
                        
                           ij
                        
                        
                           dis
                         and a
                        
                           ij
                        
                        
                           ori
                         respectively are then obtained.

Two feature sets G and H of size N can be represented by 
                           G
                         and 
                           H
                         respectively. The correspondence problem is then formulated as finding an assignment matrix P
                        ∈{0,1}
                           N
                           ×
                           N
                        , where P
                        
                           ij
                        
                        =1 means assigning vertex i in G to vertex j in H. If the one-to-one constraint is further considered, the assignment matrix becomes a permutation matrix, defined by
                           
                              (4)
                              
                                 
                                    
                                       
                                          P
                                          ∈
                                          P
                                          :
                                          =
                                          {
                                          P
                                          |
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                          
                                          
                                          
                                             P
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          ,
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                          
                                          
                                          
                                             P
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          ,
                                       
                                       
                                          
                                             P
                                             
                                                i
                                                j
                                             
                                          
                                          ∈
                                          
                                             0
                                             1
                                          
                                          ,
                                       
                                       
                                          ∀
                                          i
                                          ,
                                          j
                                          .
                                          }
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Then the correspondence objective can be formulated as
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                          
                                          f
                                          
                                             P
                                          
                                          =
                                          
                                             w
                                             app
                                          
                                          
                                             f
                                             app
                                          
                                          
                                             P
                                          
                                          +
                                          
                                             w
                                             dis
                                          
                                          
                                             f
                                             dis
                                          
                                          
                                             P
                                          
                                          +
                                          
                                             w
                                             
                                                o
                                                r
                                                i
                                             
                                          
                                          
                                             f
                                             
                                                o
                                                r
                                                i
                                             
                                          
                                          
                                             P
                                          
                                          ,
                                       
                                    
                                    
                                       
                                          
                                          
                                          s
                                          .
                                          t
                                          .
                                          
                                          P
                                          ∈
                                          P
                                          ,
                                       
                                    
                                 
                              
                           
                        where w
                        
                           app
                        , w
                        
                           dis
                         and w
                        
                           ori
                         are weights of the three terms, and w
                        
                           app
                        
                        +
                        w
                        
                           dis
                        
                        +
                        w
                        
                           ori
                        
                        =1.f
                        
                           app
                        (P) is the unary term measuring the appearance dissimilarity defined by
                           
                              (6)
                              
                                 
                                    f
                                    app
                                 
                                 
                                    P
                                 
                                 =
                                 t
                                 r
                                 
                                    
                                       C
                                       
                                          P
                                          T
                                       
                                    
                                 
                                 .
                              
                           
                        
                     


                        C
                        ∈ℝ
                           N
                           ×
                           N
                         is the cost matrix and c
                        
                           ij
                         denotes the dissimilarity between labels of vertex i in 
                           G
                         and vertex j in 
                           H
                        . f
                        
                           dis
                        (P) and f
                        
                           ori
                        (P) are the pairwise terms measuring the structural inconsistency defined by
                           
                              (7)
                              
                                 
                                    f
                                    dis
                                 
                                 
                                    P
                                 
                                 =
                                 ∥
                                 
                                    A
                                    G
                                    dis
                                 
                                 −
                                 P
                                 
                                    A
                                    H
                                    dis
                                 
                                 
                                    P
                                    T
                                 
                                 
                                    ∥
                                    F
                                    2
                                 
                                 =
                                 ∥
                                 
                                    A
                                    G
                                    dis
                                 
                                 P
                                 −
                                 P
                                 
                                    A
                                    H
                                    dis
                                 
                                 
                                    ∥
                                    F
                                    2
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    f
                                    
                                       o
                                       r
                                       i
                                    
                                 
                                 
                                    P
                                 
                                 =
                                 ∥
                                 
                                    A
                                    G
                                    
                                       o
                                       r
                                       i
                                    
                                 
                                 −
                                 P
                                 
                                    A
                                    H
                                    
                                       o
                                       r
                                       i
                                    
                                 
                                 
                                    P
                                    T
                                 
                                 
                                    ∥
                                    F
                                    2
                                 
                                 =
                                 ∥
                                 
                                    A
                                    G
                                    
                                       o
                                       r
                                       i
                                    
                                 
                                 P
                                 −
                                 P
                                 
                                    A
                                    H
                                    
                                       o
                                       r
                                       i
                                    
                                 
                                 
                                    ∥
                                    F
                                    2
                                 
                              
                           
                        where ∥⋅∥
                        
                           F
                         denotes the Frobenius matrix norm, defined by 
                           ∥
                           A
                           
                              ∥
                              F
                           
                           =
                           
                              
                                 
                                    
                                       ∑
                                       i
                                    
                                    
                                 
                                 
                                 
                                    
                                       ∑
                                       j
                                    
                                    
                                 
                                 
                                 
                                    A
                                    
                                       i
                                       j
                                    
                                    2
                                 
                              
                           
                           =
                           
                              
                                 t
                                 r
                                 
                                    
                                       
                                          A
                                          T
                                       
                                       A
                                    
                                 
                              
                           
                        .

There are other ways to formulate the feature correspondence problem. For instance, In [19,14] they resort to the rank-one approximation of an affinity matrix, which can be seen as the adjacency matrix associated with the association graph of two given graphs. Compared with the affinity matrix based methods which involve an 
                           O
                           
                              
                                 N
                                 4
                              
                           
                         storage complexity, one main advantage of the adjacency matrix based methods, including ours, is storage saving, which generally involves an 
                           O
                           
                              
                                 N
                                 2
                              
                           
                         storage complexity.

It is well known that the problem (5) is a typical NP-hard problem, and thus some approximation is necessary in practice. Relaxation technique is a popular and frequently used approximate method, which needs first to relax the discrete domain to its convex hull, and then usually to relax the objective function to its convex relaxation. Some convex optimization techniques can then be used to achieve the global optimal but generally continuous solution of the convex relaxation, which thus needs to be further back projected to a discrete domain by for example the Hungarian algorithm [17]. However, such a hard-cut projection may introduce a significant additional error. By contrast, the CCRP [38,23,22] iteratively optimizes a series of linear combinations of the convex and concave relaxations of the original objective function. Specifically, it takes the following form,
                        
                           (9)
                           
                              
                                 
                                    
                                       
                                       
                                       
                                          f
                                          η
                                       
                                       
                                          P
                                       
                                       =
                                       
                                          
                                             1
                                             −
                                             η
                                          
                                       
                                       
                                          f
                                          v
                                       
                                       
                                          P
                                       
                                       +
                                       η
                                       
                                          f
                                          c
                                       
                                       
                                          P
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                       
                                       s
                                       .
                                       t
                                       .
                                       
                                       P
                                       ∈
                                       D
                                       ,
                                       0
                                       ≤
                                       η
                                       ≤
                                       1
                                       ,
                                    
                                 
                              
                           
                        
                     where f
                     
                        v
                     (P) and f
                     
                        c
                     (P) respectively denote the convex and concave relaxations of f(P), and 
                        D
                      denotes the set of doubly stochastic matrices defined by
                        
                           (10)
                           
                              
                                 
                                    
                                       D
                                       :
                                       =
                                       {
                                       P
                                       |
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             N
                                          
                                          
                                       
                                       
                                       
                                          P
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       1
                                       ,
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             N
                                          
                                          
                                       
                                       
                                       
                                          P
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       1
                                       ,
                                    
                                    
                                       0
                                       <
                                       
                                          P
                                          
                                             i
                                             j
                                          
                                       
                                       <
                                       1
                                       ,
                                    
                                    
                                       ∀
                                       i
                                       ,
                                       j
                                       }
                                       .
                                    
                                 
                              
                           
                        
                     
                  

It is noted that 
                        D
                      is the convex hull of 
                        P
                     . In implementation, η is increased from 0 to 1. When η
                     =0, the problem (9) is a convex optimization problem, which can be efficiently solved by some convex optimization techniques. When η finally reaches 1, the problem f
                     
                        η
                     (P) becomes exactly the concave relaxation f
                     
                        c
                     (P), which has the same optimal solution as the original discrete problem (5), because all of the local minima of f
                     
                        c
                     (P) locate exactly in 
                        P
                      and f(P)=
                     f
                     
                        c
                     (P) when 
                        P
                        ∈
                        P
                     . As f
                     
                        η
                     (P) gradually changes from the f
                     
                        v
                     (P) to f
                     
                        c
                     (P), the continuous solution is gradually pushed to be a permutation matrix, and such a graduated projection is more likely to find much better local minima than the hard-cut projection [38,23,22].

Specific to the problem (5), the convex and concave relaxations are given by,
                        
                           (11)
                           
                              
                                 f
                                 v
                              
                              
                                 P
                              
                              =
                              
                                 w
                                 app
                              
                              
                                 f
                                 v
                                 app
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 dis
                              
                              
                                 f
                                 v
                                 dis
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 
                                    o
                                    r
                                    i
                                 
                              
                              
                                 f
                                 v
                                 
                                    o
                                    r
                                    i
                                 
                              
                              
                                 P
                              
                              ,
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 f
                                 c
                              
                              
                                 P
                              
                              =
                              
                                 w
                                 app
                              
                              
                                 f
                                 c
                                 app
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 dis
                              
                              
                                 f
                                 c
                                 dis
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 
                                    o
                                    r
                                    i
                                 
                              
                              
                                 f
                                 c
                                 
                                    o
                                    r
                                    i
                                 
                              
                              
                                 P
                              
                              .
                           
                        
                     
                  

Since f
                     
                        app
                     (P) is a unary term, there is
                        
                           (13)
                           
                              
                                 f
                                 v
                                 app
                              
                              
                                 P
                              
                              =
                              
                                 f
                                 c
                                 app
                              
                              
                                 P
                              
                              =
                              
                                 f
                                 app
                              
                              
                                 P
                              
                              =
                              t
                              r
                              
                                 
                                    C
                                    
                                       P
                                       T
                                    
                                 
                              
                              .
                           
                        
                     
                  

Taking the distance descriptor for instance, and following [23], the convex and concave relaxations for the pairwise terms can be constructed as follows,
                        
                           (14)
                           
                              
                                 f
                                 v
                                 dis
                              
                              
                                 P
                              
                              =
                              
                                 f
                                 dis
                              
                              
                                 P
                              
                              =
                              |
                              |
                              
                                 A
                                 G
                                 dis
                              
                              P
                              −
                              P
                              
                                 A
                                 H
                                 dis
                              
                              |
                              |
                              
                                 
                                 F
                                 2
                              
                              ,
                           
                        
                     
                     
                        
                           (15)
                           
                              
                                 f
                                 c
                                 dis
                              
                              
                                 P
                              
                              =
                              −
                              t
                              r
                              
                                 
                                    
                                       E
                                       dis
                                    
                                    
                                       P
                                       T
                                    
                                 
                              
                              −
                              2
                              t
                              r
                              
                                 
                                    
                                       P
                                       T
                                    
                                    
                                       L
                                       G
                                       disT
                                    
                                    P
                                    
                                       L
                                       H
                                       dis
                                    
                                 
                              
                              −
                              
                                 σ
                                 dis
                              
                              t
                              r
                              
                                 
                                    
                                       P
                                       T
                                    
                                    P
                                 
                              
                              ,
                           
                        
                     
                     
                        
                           (16)
                           
                              
                                 E
                                 
                                    i
                                    j
                                 
                                 dis
                              
                              =
                              
                                 
                                    
                                       
                                          D
                                          
                                             G
                                             i
                                             i
                                          
                                          dis
                                       
                                       −
                                       
                                          D
                                          
                                             H
                                             j
                                             j
                                          
                                          dis
                                       
                                    
                                 
                                 2
                              
                              ,
                           
                        
                     where D
                     
                        G
                     
                     
                        dis
                      and L
                     
                        G
                     
                     
                        dis
                      denote the degree and Laplacian matrices associated with 
                        G
                      defined by
                        
                           (17)
                           
                              
                                 D
                                 
                                    G
                                    i
                                    i
                                 
                                 dis
                              
                              =
                              
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    N
                                 
                                 
                              
                              
                              
                                 A
                                 
                                    G
                                    i
                                    j
                                 
                                 dis
                              
                              ,
                           
                        
                     
                     
                        
                           (18)
                           
                              
                                 L
                                 G
                                 dis
                              
                              =
                              
                                 D
                                 G
                                 dis
                              
                              −
                              
                                 A
                                 G
                                 dis
                              
                              .
                           
                        
                     
                     σ
                     
                        dis
                      is a constant determined by the matrix L
                     
                        G
                     
                     
                        dis
                     
                     ⊗
                     L
                     
                        H
                     
                     
                        dis
                     
                     +
                     L
                     
                        G
                     
                     
                        disT
                     
                     ⊗
                     L
                     
                        H
                     
                     
                        disT
                      where ⊗ denotes the Kronecker product between matrices, and readers are referred to [23] for a detailed discussion on the estimation of σ
                     
                        dis
                     .

The CCRP based optimization algorithm is summarized in Algorithm 1.
                        Algorithm 1
                        Correspondence scheme


                           Given: Two feature sets G and H
                        


                           Initiation: P
                           =1
                              N
                              ×
                              N
                           /N, η
                           =0

Build A
                           
                              G
                            and A
                           
                              H
                            by (1) and (4)


                           do
                        


                           P
                           =
                           FW(P,
                           η,
                           A
                           
                              G
                           ,
                           A
                           
                              H
                           )


                           η
                           =
                           η
                           +
                           dη
                        


                           until: 
                              η
                              <
                              1
                              ∧
                              P
                              ∉
                              P
                           
                        


                           Output: A permutation matrix P.

For each specific η, f
                     
                        η
                     (P) could be minimized by the Frank–Wolfe algorithm (FW) [12], which is introduced in Algorithm 2. This algorithm, also known as the conditional gradient method, is one of the earliest iterative optimizers for the differential objective over the compact convex set domain. And recently it has re-gained widespread concern in machine learning and pattern recognition fields [16] for its scalability and simplicity. Specifically, as shown in Algorithm 2, the linear programming problem
                        
                           (19)
                           
                              
                                 
                                    
                                       
                                       
                                       X
                                       =
                                       argmin
                                       t
                                       r
                                       
                                          
                                             ∇
                                             
                                                F
                                                η
                                             
                                             
                                                
                                                   P
                                                
                                                T
                                             
                                             X
                                          
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       
                                       
                                       s
                                       .
                                       t
                                       .
                                       
                                       X
                                       ∈
                                       D
                                    
                                 
                              
                           
                        
                     is solved by Hungarian algorithm [17]. The line search problem
                        
                           (20)
                           
                              α
                              =
                              argmin
                              
                                 F
                                 η
                              
                              
                                 
                                    P
                                    +
                                    α
                                    
                                       
                                          X
                                          −
                                          P
                                       
                                    
                                 
                              
                              ,
                              0
                              ≤
                              α
                              ≤
                              1
                           
                        
                     can be solved by the backtracking algorithm [5]. The convergence criterion for P is that, if tr(∇F
                     
                        η
                     (P)
                        T
                     (P
                     −
                     X))<
                     ε|F
                     
                        η
                     (P)+tr(∇F
                     
                        η
                     (P)
                        T
                     (X
                     −
                     P))|, then break, where ε is a small positive constant, the gradient ∇f
                     
                        η
                     (P) is given by,
                        
                           (21)
                           
                              ∇
                              
                                 f
                                 η
                              
                              
                                 P
                              
                              =
                              
                                 
                                    1
                                    −
                                    η
                                 
                              
                              ∇
                              
                                 f
                                 v
                              
                              
                                 P
                              
                              +
                              η
                              ∇
                              
                                 f
                                 c
                              
                              
                                 P
                              
                              ,
                           
                        
                     where
                        
                           (22)
                           
                              ∇
                              
                                 f
                                 v
                              
                              
                                 P
                              
                              =
                              
                                 w
                                 app
                              
                              ∇
                              
                                 f
                                 v
                                 app
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 dis
                              
                              ∇
                              
                                 f
                                 v
                                 dis
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 
                                    o
                                    r
                                    i
                                 
                              
                              ∇
                              
                                 f
                                 v
                                 
                                    o
                                    r
                                    i
                                 
                              
                              
                                 P
                              
                              ,
                           
                        
                     
                     
                        
                           (23)
                           
                              ∇
                              
                                 f
                                 c
                              
                              
                                 P
                              
                              =
                              
                                 w
                                 app
                              
                              ∇
                              
                                 f
                                 c
                                 app
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 dis
                              
                              ∇
                              
                                 f
                                 c
                                 dis
                              
                              
                                 P
                              
                              +
                              
                                 w
                                 
                                    o
                                    r
                                    i
                                 
                              
                              ∇
                              
                                 f
                                 c
                                 
                                    o
                                    r
                                    i
                                 
                              
                              
                                 P
                              
                              .
                           
                        
                     
                  

From Eq. (13), we have
                        
                           (24)
                           
                              ∇
                              
                                 f
                                 v
                                 app
                              
                              
                                 P
                              
                              =
                              ∇
                              
                                 f
                                 c
                                 app
                              
                              
                                 P
                              
                              =
                              C
                              .
                           
                        
                     
                  

By taking the distance descriptor for instance, we have [23]
                     
                        
                           (25)
                           
                              ∇
                              
                                 f
                                 v
                                 dis
                              
                              
                                 P
                              
                              =
                              2
                              
                                 
                                    
                                       A
                                       G
                                       disT
                                    
                                    
                                       A
                                       G
                                       dis
                                    
                                    P
                                    −
                                    
                                       A
                                       G
                                       disT
                                    
                                    P
                                    
                                       A
                                       H
                                       dis
                                    
                                    −
                                    
                                       A
                                       G
                                       dis
                                    
                                    P
                                    
                                       A
                                       H
                                       disT
                                    
                                    +
                                    P
                                    
                                       A
                                       H
                                       dis
                                    
                                    
                                       A
                                       H
                                       disT
                                    
                                 
                              
                              ,
                           
                        
                     
                     
                        
                           (26)
                           
                              ∇
                              
                                 f
                                 c
                                 dis
                              
                              
                                 P
                              
                              =
                              −
                              
                                 E
                                 dis
                              
                              −
                              2
                              
                                 L
                                 G
                                 disT
                              
                              P
                              
                                 L
                                 H
                                 dis
                              
                              −
                              2
                              
                                 L
                                 G
                                 dis
                              
                              P
                              
                                 L
                                 H
                                 disT
                              
                              −
                              2
                              
                                 σ
                                 dis
                              
                              P
                              ,
                           
                        
                     and they are similarly defined for the orientation descriptor.

Moreover the sub-linear convergence of the FW algorithm can be improved by utilizing the modified Frank–Wolfe algorithm (MFW) [13], where in each cycle, the descent direction is obtained by a convex combination of previous obtained directions [39].
                        Algorithm 2
                        
                           P
                           =
                           FW(P,
                           η,
                           A
                           
                              G
                           ,
                           A
                           
                              H
                           )


                           do
                        


                           
                              X
                              =
                              argmin
                              t
                              r
                              
                                 
                                    ∇
                                    
                                       F
                                       η
                                    
                                    
                                       
                                          P
                                       
                                       T
                                    
                                    X
                                 
                              
                              ,
                              X
                              ∈
                              D
                           
                        


                           α
                           =
                           arg min F
                           
                              η
                           (P
                           +
                           α(X
                           −
                           P)),0≤
                           α
                           ≤1


                           P
                           =
                           P
                           +
                           α(X
                           −
                           P)


                           until: P converges


                           Output: A doubly stochastic matrix P.

@&#EXPERIMENTAL RESULTS@&#

In this section, experiments on both synthetic and real world datasets are conducted to evaluate the proposed algorithm. The results are given in three parts, with the first one to compare the directed and undirected structural models, second to compare the proposed method with some state-of-the-art algorithms, and third to demonstrate the effectiveness of the proposed method on several typical real correspondence tasks. SIFT descriptor and shape context descriptor are used as the appearance descriptor in different experiments, selected depending on the typical use in previous works [10,36,6,33,25]. Experiments are run by MATLAB R2009b on a personal computer with Intel Xeon CPU 2.13GHz (four cores) and 8G RAM.

In this experiment we compare the performance of the proposed directed structural model with the corresponding undirected model on some synthetic datasets and also on some Caltech101 & Caltech256 datasets. In the undirected structural model, the distance descriptor is normalized by the longest distance, and the acute angle between the edge and the horizontal axis is utilized as the orientation descriptor, which is normalized by 
                           
                              
                                 π
                                 2
                              
                           
                        . To concentrate on the structural model, the appearance cue is excluded in the experiments, i.e., w
                        
                           app
                        
                        =0.

We generate a synthetic dataset with 36 images divided into 9 groups, with each group consisting of 4 images. Thus there are totally C
                        4
                        2
                        ×9=54 image pairs, where C
                        4
                        2 denotes a combination of the images in each group. Fig. 4
                         shows some samples of the dataset.

Each image exhibits some geometric distortions, including scale, rotation and stretch transformations, compared with the others in the same group. We manually label all the images with the point numbers varying from 11 to 34. The directed and undirected structural descriptors as well as their combinations are tested on the image pairs, including distance descriptor in undirected model, distance descriptor in directed model, orientation descriptor in undirected model, orientation descriptor in directed model, distance+orientation descriptors in undirected model, distance+orientation descriptors in directed model, respectively denoted by udis, ddis uori, dori, udis
                        +
                        uori, ddis
                        +
                        dori. For udis
                        +
                        uori and ddis
                        +
                        dori, we set w
                        
                           dis
                        
                        =
                        w
                        
                           ori
                        
                        =0.5. The comparison results are shown in Fig. 5
                        , from which we can observe that the directed descriptors, distance or orientation, outperform their undirected counterparts significantly. Moreover, even one single directed descriptor, distance or orientation, gets a better performance than the combination of the two undirected descriptors in the experiment, let alone the combination of the directed ones.

To evaluate the robustness of the structural models with respect to the topology-changing noise, we compare them on randomly sampled point sets which are generated as follows. First one spatial point set H
                        ={H
                        
                           j
                        }
                           j
                           =1
                        
                           N
                        , h
                        
                           j
                        
                        ∼
                        U[0,1]1×2 is randomly generated by uniform sampling, and a permutation matrix P
                        
                           gt
                        
                        ∈{0,1}
                           N
                           ×
                           N
                         is also randomly generated as the ground truth correspondence. Then the other point set G
                        ={G
                        
                           i
                        }
                           i
                           =1
                        
                           N
                         is obtained by permutating H with P
                        
                           gt
                         as
                           
                              
                                 
                                    
                                       
                                          
                                             g
                                             i
                                          
                                          =
                                          
                                             h
                                             j
                                          
                                          +
                                          η
                                          ,
                                       
                                       
                                          η
                                          ∼
                                          N
                                          
                                             0
                                             
                                                σ
                                                2
                                             
                                          
                                          ,
                                       
                                       
                                          if
                                          
                                          
                                             P
                                             
                                                i
                                                j
                                             
                                             
                                                g
                                                t
                                             
                                          
                                          =
                                          1
                                          ,
                                       
                                    
                                 
                              
                           
                        where η is the additive Gaussian noise. Finally the adjacency, i.e. the graph structure, is built in a sparse manner by adjusting edge density. The graph structure is also disturbed with the noise η, by randomly adding and removing σ
                        #
                        Edge edges to each sparse graph, where #
                        Edge denotes the number of edges.

We respectively increase σ from 0 to 0.2 with a step size 0.02, increase N from 20 to 40 with a step size 2, and increase the edge density from 0.1 to 0.9 with a step size of 0.1. The comparison results are shown in Fig. 6, from which we can observe that the error rates increase as σ increases, and they are relatively stable with respect to N. In the third comparison, as the edge density increases, generally the error rates first decrease, which implies that the incorporation of structural information leads to better matching performance. But as the edge density further increases, the error rates by contrast increase, which may be because adding and removing more edges introduce more topology-changing noise. Besides, excess edges associated to every point may introduce additional noise rather than make the models more distinctive. In the above three comparisons, the directed models beat their undirected counterparts and ddis
                        +
                        dori achieves the best performance.

We proceed to compare the structural models on some image pairs in Caltech101 & Caltech256 datasets. They are ‘euphonium’, ‘nautilus’ and ‘water-lily’ in Caltech101 and ‘chess-board’ and ‘french-horn’ in Caltech256, as shown in Fig. 8
                        
                        
                        . The Laplacian of Gaussian (LOG) operator is used to get the feature points, with the numbers being 90, 60, 70, 50, 60 respectively. Since there is no ground truth correspondence, we manually label all of the feature pairs, and a feature point is treated as being correctly assigned if its corresponding point is among the 5 closest points to the labeled one. The average error rates by different structural models are shown in Fig. 7, which witnesses that ddis
                        +
                        dori gets the best results. Fig. 8 shows the correspondence results obtained by udis
                        +
                        uori and ddis
                        +
                        dori.

The proposed algorithm is comparatively evaluated with the following four algorithms. (1) Tensor matching (TM)
                           1
                        
                        
                           1
                           Codes are available at http://www.di.ens.fr/ duchenne/.
                         
                        [11]. It utilizes high order structural descriptors which are inherently invariant to geometric transformations, and extends the pairwise spectral decomposition method [19] to compute the rank-one approximation of an affinity tensor. Since our storage ability cannot afford the dense graph matching by TM, we follow a similar way as in [18] to build the sparse hyper-graph. (2) Dual decomposition algorithm (DD) [33]. It includes both the distance and orientation (angle between the edge and horizontal axis) as the geometrical descriptors and utilize the dual decomposition method to minimize the objective function. (3) Umeyama's method [34]. It is a spectral graph matching method, with the adjacency matrix built in the same way as in [38]. (4) SIFT matching. It is formulated as a bipartite graph matching problem without considering the geometrical cues. The CMU ‘House’ sequence dataset
                           2
                        
                        
                           2
                           Available at http://vasc.ri.cmu.edu//idb/html/motion/house/index.html.
                         is adopted in the experiments, and for all the methods, the SIFT descriptor is used as the appearance descriptor.

Two experiments are conducted on the ‘House’ dataset. The first one is conducted on the original 111 frames with a typical pair shown in Fig. 9(c), which exhibits some 3D-rotation but rare scale transformation. In general a larger frame index gap, or say baseline distance, between two frames implies a heavier rotation between them. In the second experiment, 11 images are randomly chosen from the 111 original ones, and each image suffers a random geometrical distortion including scale, rotation and stretch transformations, with a typical pair shown in Fig. 10(b). For all of the images used in the experiment we manually label the same 30 feature points as those in [6], and in both experiments, we set w
                        
                           app
                        
                        =
                        w
                        
                           dis
                        
                        =
                        w
                        
                           ori
                        
                        =0.33.

In the first experiment, the algorithms are evaluated between randomly selected frame pairs with different baseline distances. Totally 10 baseline distances are evaluated in the experiment, increasing from 0 to 90 by a step size 10. For each baseline distance, we randomly select 10 image pairs for correspondence. For instance, if the baseline distance is 20, the first frame is randomly selected, say the 43rd frame, and then another frame in this image pair is the 63rd frame.

The average error rates achieved by different algorithms with respect to baseline distance are shown in Fig. 9(a), and a typical result is given by Fig. 9(c). It is observed from Fig. 9(a) that as the baseline distance becomes larger, the error rates in general become larger. Meanwhile, it is also observed that on all levels of baseline distances, the proposed directed structural model achieves a totally correct correspondence. It may be because first by introducing the object orientation the proposed orientation descriptor is more robust against rotation. And second by gradually projecting the continuous solution to be a discrete one, the CCRP based optimization method can avoid the significant projection error. TM achieves the second best performance, because the high-order descriptors are robust to geometric transformations. However, limited by the RAM capacity, the hyper-graphs may be too sparse to incorporate adequate structural information, which may be the reason why it does not achieve the perfect matching results on large baseline distance (larger than 50). Besides, as the baseline distance becomes larger, the performances of both the undirected model and DD become worse. It may be because both of them take the angle between an edge and the horizontal axis as the orientation descriptor, which vary with respect to rotation.

In the experiment we also compare the time-costs of different algorithms, with the results shown in Fig. 9(b). It reveals that the proposed algorithm performs much faster than DD and TM. DD in general involves an 
                           O
                           
                              
                                 N
                                 4
                              
                           
                         computational complexity. Compared with DD, the higher efficiency of high-order algorithm TM is mainly due to its sparse graph structure and the C implementation. Besides, the directed model performs faster than the undirected model. It may be because compared with the undirected model, the directed one is more distinctive, and makes the algorithm converge with less iterations.


                        Fig. 10(a) shows the results in the second experiment, where the image pairs suffer a greater distortion than the first experiment, and a typical result is given by Fig. 10(b). We can observe that although the proposed algorithm cannot get a perfect correspondence, it once again gets a much better result than the other five competitors.

In the third experiment, we apply the proposed method on some typical correspondence tasks, including the handwritten Chinese character matching and face matching, as well as the handwritten English letter classification.

The Casia off-line Chinese handwritten character dataset [21] and Yale face dataset
                              3
                           
                           
                              3
                              Available at http://cvc.yale.edu/projects/yalefaces/.
                            are used in the experiment, where each character image is firstly re-sized to 64×64. The feature points are extracted by LOG operator, and the shape context descriptor is adopted as the appearance descriptor. Since there is no ground truth correspondence between these feature sets, we propose to utilize the following criterion. Each image is divided into M
                           ×
                           M (M
                           =3 in our experiments) equal sub-images, and if the matched points are in the corresponding sub-image, this matching is recorded as a correct one. The directed and undirected structural models are compared in the experiments. Meanwhile, we evaluate their performance with respect to the weights by increasing w
                           
                              app
                            from 0 to 1 by a step size 0.1, and by meanwhile setting 
                              
                                 w
                                 dis
                              
                              =
                              
                                 w
                                 
                                    o
                                    r
                                    i
                                 
                              
                              =
                              
                                 
                                    
                                       1
                                       −
                                       
                                          w
                                          app
                                       
                                    
                                    2
                                 
                              
                           .


                           Fig. 11(e) shows the comparison results on the two datasets. Fig. 11(a) to Fig. 11(d) show the best matching results with respect to w
                           
                              app
                           . From Fig. 11(e) we can observe that, first, the directed model get much better results than the undirected model; second, the best performances on both datasets are obtained when 0<
                           w
                           
                              app
                           
                           <1, implying that the integration of both appearance and structural cues is preferred to a single one.

In this experiment, the proposed method is applied in the handwritten English letter classification problem,
                              4
                           
                           
                              4
                              Available at http://archive.ics.uci.edu/ml/datasets/Pen-Based+Recognition+of+Handwritten+Digits.
                            and compared with a SVM based method. In the experiment the shape context descriptor is adopted as the appearance descriptor. The feature correspondence provides a similarity measure between objects, which can be further utilized as an input of some classifiers. In this experiment, we use 
                              cost
                              =
                              
                                 
                                    
                                       f
                                       
                                          P
                                       
                                    
                                    
                                       N
                                       2
                                    
                                 
                              
                            as the input of a K nearest neighbor (KNN) classifier, where P is the permutation matrix obtained in each model. The input feature for SVM is computed in the following way [4]. For each image, T
                           ×
                           T points are evenly sampled, then the shape context descriptor with a dimension of d
                           
                              f
                           
                           =48 around each point is computed, and finally, all the descriptors are stacked to be a long vector with the length T
                           ×
                           T
                           ×48. Among the total 11×26 symbols used in the experiment, we randomly choose 9×26 as the training set, and 2×26 as the testing set, with typical 26 symbols shown in Fig. 12
                           
                           
                           
                           . Meanwhile, the weights w
                           
                              app
                           , w
                           
                              dis
                           , w
                           
                              ori
                            and T are obtained by the cross validation. (See Figs. 9– 11.)

The experimental results are listed in Table 1
                           , by setting, for the undirected model w
                           
                              app
                           
                           =0.6, w
                           
                              udis
                           
                           =0.2, w
                           
                              uori
                           
                           =0.2, and for the directed model w
                           
                              app
                           
                           =0.5, w
                           
                              ddis
                           
                           =0.2, w
                           
                              dori
                           
                           =0.3, and T
                           =10. All the results are achieved by a five-fold cross validation with 20 repetitions. From the experimental results we can observe that the proposed directed model with KNN (K=3) classifier achieves the highest classification accuracy. It also implies that the structural information is crucial for the letter classification, because by taking advantage of the structural cues, the simple KNN outperforms the elaborate SVM.

In this paper we propose a directed structural model for the feature correspondence problem. The directed model provides a more discriminating ability and more invariance against rotation and scale transformations than the undirected model. The feature correspondence problem is formulated as a directed graph matching problem, which is efficiently solved by generalizing the CCRP. Extensive experiments on both synthetic and real data witness the effectiveness of the proposed algorithm.

@&#ACKNOWLEDGMENT@&#

The authors would like to thank the editors and anonymous reviewers whose comments and suggestions greatly improved the manuscript. This work was supported by the National Science Foundation of China (NSFC) (grants 61375005, 61033011, 61210009, 61101221) and by National Key Technology R&D Program (grant 2012BAI34B02).

Based on the undirected graph, the adjacency matrices of G and G′ take the same form as follows,
                        
                           
                              
                                 A
                                 G
                              
                              =
                              
                                 A
                                 
                                    G
                                    ′
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          0
                                       
                                       
                                          φ
                                       
                                       
                                          0
                                       
                                       
                                          α
                                       
                                    
                                    
                                       
                                          φ
                                       
                                       
                                          0
                                       
                                       
                                          θ
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          θ
                                       
                                       
                                          0
                                       
                                       
                                          φ
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          0
                                       
                                       
                                          φ
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                           
                        
                     which implies that an exact correspondence can be gotten by assigning x
                     →
                     x′ with x
                     =
                     A,
                     B,
                     C or D. But on the other hand, we can get
                        
                           
                              
                                 A
                                 G
                              
                              =
                              
                                 
                                    
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              
                                 A
                                 
                                    G
                                    ′
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             1
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             1
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                       
                                    
                                 
                                 T
                              
                           
                        
                     which means [ABCD] could also be assigned to [D′C′B′A′] respectively.

While in the directed graph situation,
                        
                           
                              
                                 A
                                 G
                              
                              =
                              
                                 A
                                 
                                    G
                                    ′
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          0
                                       
                                       
                                          φ
                                       
                                       
                                          0
                                       
                                       
                                          π
                                          −
                                          α
                                       
                                    
                                    
                                       
                                          π
                                          −
                                          φ
                                       
                                       
                                          0
                                       
                                       
                                          π
                                          −
                                          θ
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          θ
                                       
                                       
                                          0
                                       
                                       
                                          π
                                          −
                                          φ
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          0
                                       
                                       
                                          φ
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              .
                           
                        
                     
                  

In this case, there is a unique solution by assigning x
                     →
                     x′ because
                        
                           
                              
                                 
                                    
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              
                                 A
                                 
                                    G
                                    ′
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             1
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             1
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                          
                                             0
                                          
                                       
                                    
                                 
                                 T
                              
                              =
                              
                                 
                                    
                                       
                                          0
                                       
                                       
                                          π
                                          −
                                          φ
                                       
                                       
                                          0
                                       
                                       
                                          α
                                       
                                    
                                    
                                       
                                          φ
                                       
                                       
                                          0
                                       
                                       
                                          θ
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          π
                                          −
                                          θ
                                       
                                       
                                          0
                                       
                                       
                                          φ
                                       
                                    
                                    
                                       
                                          π
                                          −
                                          α
                                       
                                       
                                          0
                                       
                                       
                                          π
                                          −
                                          φ
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              ≠
                              
                                 A
                                 G
                              
                              .
                           
                        
                     
                  

@&#REFERENCES@&#

