@&#MAIN-TITLE@&#Automated design space exploration of multi-cycle transient fault detectable datapath based on multi-objective user constraints for application specific computing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Novel exploration approach for multi-cycle transient fault detectable datapath.


                        
                        
                           
                           Novel mechanism for detecting multi-cycle transient fault.


                        
                        
                           
                           Performs tradeoff between power and execution delay.


                        
                        
                           
                           Provides an average improvement in QoR of >9% compared to [15].


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Multi cycle

Transient

Fault detectable

Design space exploration

Power

Delay

Bacterial foraging

@&#ABSTRACT@&#


               
               
                  A novel automated design space exploration (DSE) approach of multi-cycle transient fault detectable datapath based on multi-objective user constraints (power and delay) for application specific computing is presented in this paper. To the best of the authors’ knowledge, this is the first work in the literature to solve this problem. The presented approach, driven by bacterial foraging optimization (BFO) algorithm provides easy flexibility to change direction in the design space through tumble/swim actions if a search path is found ineffective. The approach is highly capable of reaching true Pareto optimal curve indicated by the closeness of our non-dominated solutions to the true Pareto front and their uniform distribution over the Pareto curve (implying diversity). The contributions of this paper are as follows: (a) novel exploration approach for generating a high quality fault detectable structure based on user provided requirements of power-delay, which is capable of transient error detection in the datapath; (b) novel fault detectable algorithm for handling single and multi-cycle transient faults.
                  The results of the proposed approach indicated an average improvement in Quality of Results (QoR) of >9% and reduction in hardware usage of >23% compared to recent approaches that are closer in solving a similar objective.
               
            

@&#INTRODUCTION@&#

DSE in HLS includes searching an optimal datapath from a set of assorted design alternatives of equivalent functionality which offer higher performance, and lower power expenditure with complete fault reliability attribute. The aim of the exploration approach is to reduce the large and complex design space into a set of feasible design solutions meeting multiple designs performance along with certain orthogonal issues like runtime and QoR [5,8–13,23,26–28].

However, optimizing area, power and performance remains no longer sufficient now. Specifically, for current generation of systems which demand designs (especially for space applications where radiation induced faults are highly possible) that requires ability to detect errors occurring due to transient faults (such as single event upsets). Transient faults are radiation induced faults which are non-permanent in nature. These nonrecurring faults can be caused by energized particles, environmental noise or electromagnetic interference. The duration of such faults is in order of a few picoseconds [16,24]. The occurrence of transient faults is due to recent advancements in technology where the packing of millions of transistors on a single chip have become more feasible. The increase in density per unit area is negatively impacting the device and overall systems reliability by making it susceptible to transient faults or the single event upsets (SEU) [31] especially in space applications. Therefore, to achieve high reliability of the systems, fault detectability [31–36] should be considered as design metric (or constraint) during multi-objective DSE in HLS [25,34].


                        Summary: BFOA uses a simplified framework and is less sensitive than other evolutionary techniques such as particle swarm optimization (PSO) and genetic algorithm (GA), yet capable of reaching high quality optimal solution. Therefore, it is better adaptable to the problem at hand which is considered intractable and NP hard. The detailed motivation for adopting BFOA is provided below:

A regular DSE process with power and delay as design objective is considered intractable [26]. Inclusion of multi-cycle fault detectability as additional design objective would intricate the mechanism and therefore shall require advanced search algorithm to find a quality design solution. Methodologies such as BFOA would be considered suitable for such notorious problems because other evolutionary algorithms such as GA, hybrid GA and PSO do not provide flexible options for guided/adaptive searching such as change in directions when a certain search path is found unproductive. Further, PSO is known to be a highly sensitive algorithm; therefore failing to clinically pre-tune the parameters often would result in convergence to local optima [38]. Additionally, due to multiple loops involved in BFOA such as chemotaxis and dispersal as well as options of tumble/swim (helping to change directions when required), the framework of this algorithm provides the flexibility to be configured in an proficient way for eliciting efficient search behavior during multi-dimensional DSE. BFOA comprises of primarily of two major steps: chemotaxis and dispersal for locomotion of bacterium. Using locomotion mechanisms (such as flagella) bacteria can move around in their environment, sometimes moving chaotically (tumbling and spinning), and other times moving in a directed manner that may be referred to as swimming. The algorithm was designed for application to continuous function optimization problem domains. Given the loops in the algorithm, it can be configured in numerous ways to elicit different search behavior. It is common to have a large number of chemotaxis iterations, and small numbers of the other iterations [37]. The steps on how locomotion movement of bacterium is employed for DSE of the given problem are described in Section 3.3.

@&#RELATED WORK@&#

So far in the literature, adequate attempts have been made to solve the DSE problem in HLS. The approaches developed so far aims at exploring the design space along with balancing some multi-conflicting issues during generation of the best possible solution (or Pareto front). Over the years the DSE process has evolved where the requirements specified by the user have also convoluted, ranging from simple area-delay tradeoff in initial years to complex power-delay tradeoff in recent years. Further, some HLS approaches included the consideration of fault security aspect with hardware redundancy, but without focusing on DSE of an optimized fault detectable design based on user power-delay constraint. Nevertheless, some recent approaches [1–6] are worth mentioning which are efficient DSE approaches/tools however without any consideration on fault aspect during HLS.

For example, authors in [1] have proposed simulated annealing (SA) DSE method called ‘SALSA’ for optimizing delay which uses many probabilistic search operators to enhance the performance of SA-based technique. Authors in [2] have applied GA to the binding and allocation phase. A specific crossover technique has been introduced which is based on force directed algorithm. The limitations of approaches [1,2] besides being unable to handle transient fault is that it does not consider power during design trade-off. In addition, Authors in [3] introduced a tool called AutoPilot for HLS. It performs C/C++/systemC-to-RTL synthesis. Although this tool performs area-performance-power tradeoff during DSE, however, the tool does not have ability to mask transient fault as well as only targets FPGA’s. However, the approach presented in this paper is fault detectable as well as it handles power-performance constraints using novel adaptive bacterial foraging driven exploration approach. Further, authors, in approach [4] also used simulated annealing to generate optimum results; however, the work did not consider transient fault detection and correction during exploration. In [5], authors introduced a tool called SystemCoDesigner that offers rapid design space exploration with rapid prototyping of behavioral systemC models. An automated integrating approach is developed by integrating behavioral synthesis into their design flow. However, the approach besides being unable to handle transient fault, is also limited to area-delay tradeoff. Additionally, authors in [6] proposed an approach based on hierarchical and multiple clock domain HLS to target low power design on FPGA. The authors targeted FPGA unlike the proposed approach. Further, this work besides being unable to handle transient fault also does not consider power constraint as it only considers throughput. In addition, authors in [7] proposed a machine learning method for DSE which introduce a transductive experimental design that can wisely sample micro-architecture choices and use them for training in the learning model. The approach, besides being unable to detect faults does not consider power objective during exploration. But the proposed approach presented in this paper besides considering power and execution time (or delay) as design objective during exploration, also considers multi cycle transient faults during generation of an optimized datapath. Therefore, it ensures an optimal fault detectable datapath generation after exploration based on conflicting user constraints. Further, the proposed framework is also driven by an intelligent searching called bacterial foraging optimization algorithm which incorporates multiple loops such as chemotaxis tumble/swim to handle efficient guided searching during exploration.

In addition to above, there are works that only deal with the fault detection issue of the designs without ability to explore an optimized fault detectable datapath based on user specified power-delay, which makes the previous approaches significantly different than the one proposed in our paper. The mentioned fault secured approaches are discussed as follows preceded with the definition of fault detection: A circuit is referred as a fault detectable circuit; if for any single fault within the circuit, it either produces correct output or an incorrect one, thereby indicating that fault has occurred. Fault security/detectability is an attribute of a system that guarantees that either the result is correct, or that any observable error is reported. For example, in [17] authors use duplication of the control data flow graph (CDFG) and map the second onto the same hardware as the first, adding functional units (FUs) as needed. The technique uses the algebraic properties of associativity, distributivity, and commutativity to aid mobility in scheduling the duplicate CDFG and thus take better advantage of idle resources. The approach in [16] involves partitioning of the CDFG into regions or sub graphs. The authors presented a hardware redundancy based concurrent error detection (CED) approach which breaks the data dependences between the nodes. This is done to improve the sharing between normal and duplicate computations. The original and the duplicate computations which are represented by a region are performed on distinct hardware. This is done so that, every regions output can be compared to identify the faults within the regions. For this, voting on the results of the regions is done. In [15], a CED scheme is employed to detect and isolate the faults within a system while it is in use. In [18] authors investigated a method for exploring the tradeoff between the area and latency of the CED design in HLS. The approach sometimes used hardware redundancy or time redundancy or a combination of both to produce fault secure designs. Designs were made secure on the basis of check pointing introduced in the system. Instead of adding extra FUs for fault detection, they use re-computation on the same hardware using different allocations. Therefore approaches [15–18] are all fault detectable approaches (using hardware redundancy) with no provision of producing an optimized fault detectable datapath system based on conflicting power and delay constraint of user.

@&#MOTIVATION@&#

Given a sample scheduled data flow graph (SDFG) in Fig. 1
                        . It shows a scheduled data flow graph of an application which uses two multipliers (M1, M2) and one adder (A1). Under standard conditions, the circuit undergoes a traditional computation, thereby generating a feasible error free output. However, if a transient fault occurs at any unit in the circuit due to particle strike, the corresponding output becomes erroneous, thereby affecting the entire circuit. For example, let us assume, if a two cycle fault occurs at Multiplier M1, when the state of the system is in control step 1. Then the error developed affects all the operations performed by the operator M1 during those two cycles. The span of the error affecting similar operators depends upon the nature of the transient fault (cycle duration). Thus, M1 incorrectly executes operation 1 at step 1 and also, operation 4 at step 2. But as soon as the system propagates to step 3, the effect of fault generated on M1 normalizes and the fault disappears. Hence, M1 operates correctly for the operation 7 at step 3. Such faults which occur once and then disappear are referred as transient faults. Once this fault occurs on a logic element of a system, the fault is associated as transient fault of the operator.

To explore the design space of a given DFG, and determine an optimal resource set
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 {
                                 N
                                 (
                                 
                                    
                                       R
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 ,
                                 N
                                 (
                                 
                                    
                                       R
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 ,
                                 N
                                 (
                                 
                                    
                                       R
                                    
                                    
                                       d
                                    
                                 
                                 )
                                 …
                                 N
                                 (
                                 
                                    
                                       R
                                    
                                    
                                       D
                                    
                                 
                                 )
                                 }
                              
                           
                        which satisfies user constraints and minimizes overall cost.

The problem can be formulated as: find an optimal xi
                         with minimum hybrid 
                           
                              Cost
                              (
                              
                                 
                                    P
                                 
                                 
                                    T
                                 
                                 
                                    DMR
                                 
                              
                              ,
                              
                                 
                                    T
                                 
                                 
                                    E
                                 
                                 
                                    DMR
                                 
                              
                              )
                           
                         subjected to:
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       T
                                    
                                    
                                       DMR
                                    
                                 
                                 ⩽
                                 
                                    
                                       P
                                    
                                    
                                       cons
                                    
                                 
                                 
                                 and
                                 
                                 
                                    
                                       T
                                    
                                    
                                       E
                                    
                                    
                                       DMR
                                    
                                 
                                 ⩽
                                 
                                    
                                       T
                                    
                                    
                                       cons
                                    
                                 
                                 
                                 and
                                 
                                 
                                    
                                       k
                                    
                                    
                                       c
                                    
                                 
                                 
                                 fault.
                              
                           
                        
                     

In the proposed work, each bacterium position represents a resource set in the design space. These positions are determined based on power consumed by the resources, the execution time taken by them, and the cost function corresponding to each set. The value of the cost function illustrates the fitness of the bacterium.
                              
                                 (a)
                                 
                                    Proposed power model: Total power consumption (PT
                                       DMR
                                    ) by a resource set is represented in terms of static power (PS
                                       DMR
                                    ) and dynamic power (PD
                                       DMR
                                    ). ‘PT
                                       DMR
                                    ’ is represented as:
                                       
                                          (1)
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   T
                                                
                                                
                                                   DMR
                                                
                                             
                                             =
                                             
                                                
                                                   P
                                                
                                                
                                                   S
                                                
                                                
                                                   DMR
                                                
                                             
                                             +
                                             
                                                
                                                   P
                                                
                                                
                                                   D
                                                
                                                
                                                   DMR
                                                
                                             
                                          
                                       
                                     Static power (PS
                                       DMR
                                    ) is a function of area of resources and leakage power per transistor. It can be formulated as: 
                                       
                                          (2)
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   S
                                                
                                                
                                                   DMR
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      d
                                                      =
                                                      1
                                                   
                                                   
                                                      D
                                                   
                                                
                                             
                                             (
                                             N
                                             (
                                             
                                                
                                                   R
                                                
                                                
                                                   d
                                                
                                             
                                             )
                                             ·
                                             K
                                             (
                                             
                                                
                                                   R
                                                
                                                
                                                   d
                                                
                                             
                                             )
                                             ·
                                             
                                                
                                                   p
                                                
                                                
                                                   c
                                                
                                             
                                          
                                       
                                     While, the average dynamic power consumed by a resource configuration is a function of dynamic activity of the resources and can be given as: 
                                       
                                          (3)
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   D
                                                
                                                
                                                   DMR
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         E
                                                      
                                                      
                                                         FU
                                                      
                                                      
                                                         DMR
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         E
                                                      
                                                      
                                                         DMR
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

The variables have been defined in Table 1
                           .
                              
                                 (b)
                                 
                                    Proposed execution time (delay) model: For given ‘D’ functional resources the execution time is:
                                       
                                          (4)
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   E
                                                
                                                
                                                   DMR
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      c
                                                      .
                                                      s
                                                      =
                                                      1
                                                   
                                                   
                                                      CS
                                                      (
                                                      max
                                                      )
                                                   
                                                
                                             
                                             Max
                                             (
                                             D
                                             (
                                             
                                                
                                                   op
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             ,
                                             …
                                             D
                                             (
                                             
                                                
                                                   op
                                                
                                                
                                                   n
                                                
                                             
                                             )
                                             ,
                                             D
                                             (
                                             
                                                
                                                   op
                                                
                                                
                                                   ′
                                                   i
                                                
                                             
                                             )
                                             ,
                                             …
                                             D
                                             (
                                             
                                                
                                                   op
                                                
                                                
                                                   ′
                                                   n
                                                
                                             
                                             )
                                             )
                                          
                                       
                                     where 1⩽
                                    i
                                    ⩽
                                    n and ‘1⩽‘i
                                    ⩽‘n (here, operations in original and duplicate is labeled as i and ‘i respectively; n and ‘n
                                    =maximum value of node) and CS(max) is the maximum number of control steps (cs) in the scheduled graph.

Rests of the variables have been defined in Table 1.
                              
                                 (c)
                                 
                                    Proposed fitness function: The proposed fitness function (considering execution time and power consumption of a solution) is defined as:
                                       
                                          (5)
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   f
                                                
                                             
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             =
                                             
                                                
                                                   φ
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         T
                                                      
                                                      
                                                         DMR
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         cons
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         max
                                                      
                                                      
                                                         DMR
                                                      
                                                   
                                                
                                             
                                             +
                                             
                                                
                                                   φ
                                                
                                                
                                                   2
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         E
                                                      
                                                      
                                                         DMR
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         cons
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         max
                                                      
                                                      
                                                         DMR
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

The variables have been defined in Table 1. The equation above is considered as a penalty graded cost function which incorporates the effect of user constraints (Pcons
                            and Tcons
                           ) during fitness evaluation of DMR system. Further, it considers the maximum values of power and execution time during evaluation to yield a normalized value of cost (between 0 and 1). Since the objective of the proposed exploration approach is to satisfy the user constraints as well as minimize the above hybrid cost (specified in Section 3.2.1), hence a more negative value indicates desirable solution. Finally, φ
                           1 and φ
                           2 represents the designer specified weightage of power and execution time constraints (both kept at 1/2 each during exploration for providing equal priority).

The framework of a fault detectable BFOA driven design space exploration scheme has been shown in Fig. 2
                        . The input block comprises of module library, behavioral description of data flow graph (DFG), predefined user parametric constraints for power and time execution (or delay) as well as multi cycle fault constraint (kc
                        ). Further, the control parameters such as Nc
                        , Ned
                        , p explained in Table 1 are used for regulating the BFOA driven exploration process [37]. The proposed framework has a subunit for initialization/encoding of bacteria. The encoded bacteria are then subjected to chemotaxis and dispersal algorithms during the DSE process to explore new and diverse resource configurations. The solutions generated through the algorithms are fed into the fault detectability block for converting into a k-cycle error-correctable design (masking the fault) by evaluating the Double Modular Redundant (DMR) schedule on the basis of k-cycle fault behavior. A DMR design is obtained corresponding to each bacterium solution during DSE where the transient fault hazards (TFH) due to k-cycle fault are identified and resolved subsequently to obtain a fault detectable DMR schedule through the proposed algorithm. The obtained fault detectable DMR schedule is passed into the fitness block to determine the cost of the fault-detectable solutions generated. This process continues through the proposed BFOA–DSE framework to generate an optimal fault detectable DMR system that comprehensively satisfies Pcons
                        , Tcons
                        , kc
                         as well as minimizes the hybrid cost (as defined in Section 3.2.1). Note: The advantage of the proposed approach is its adaptation to changing technology. With rapid change in technology, the values of static power per transistor (due to voltage scaling and device geometry shrinkage) as well as frequency changes. These parameters directly affect the dynamic energy and static power dissipation. In our approach, these variables (EFU
                         affected by voltage supply and pc
                        : static power per transistor) are user controlled (through module library), Therefore it provides flexibility to our DSE approach to handle changing technology.

At first, the initialization of bacterium positions corresponding to the resource types is done using [37]. i.e., the bacterium is labeled as xi
                           ;


                           xi
                           
                           =(N(R
                           1),(N(R
                           2),…(N(Rd
                           )…(N(RD
                           )) where i
                           =1,2,…
                           p. ‘p’ is the population size or the bacterium size present in the design space and ‘N(Rd
                           )’ is defined in Table 1. The position of bacterium which represents the resource set is dynamic in nature, as the bacterium positions are subjected to evolution during exploration process. The initial bacterium positions are assigned as suggested in [37] (described as follows): The bacteria are uniformly distributed over the design space as:
                              
                                 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      1
                                                   
                                                
                                                =
                                                (
                                                min
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ,
                                                min
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      2
                                                   
                                                
                                                )
                                                ,
                                                …
                                                min
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      D
                                                   
                                                
                                                )
                                                )
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      2
                                                   
                                                
                                                =
                                                (
                                                max
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ,
                                                max
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      2
                                                   
                                                
                                                )
                                                ,
                                                …
                                                max
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      D
                                                   
                                                
                                                )
                                                )
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      3
                                                   
                                                
                                                =
                                                (
                                                (
                                                min
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                +
                                                max
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                )
                                                /
                                                2
                                                ,
                                                …
                                                ,
                                                (
                                                (
                                                min
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      D
                                                   
                                                
                                                )
                                                +
                                                max
                                                (
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      D
                                                   
                                                
                                                )
                                                )
                                                /
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

While rests of the bacterium (x
                           4…xn
                           ) are initialized by:
                              
                                 
                                    N
                                    (
                                    
                                       
                                          R
                                       
                                       
                                          d
                                       
                                    
                                    )
                                    =
                                    (
                                    
                                       min
                                    
                                    (
                                    
                                       
                                          R
                                       
                                       
                                          d
                                       
                                    
                                    )
                                    +
                                    
                                       max
                                    
                                    (
                                    
                                       
                                          R
                                       
                                       
                                          d
                                       
                                    
                                    )
                                    )
                                    /
                                    2
                                    ±
                                    α
                                 
                              
                           
                        

Movement of a bacterium from one position to the other is characterized as a chemotactic movement. While dispersal correlates to the dispersive behavior of the bacteria [29]. The least fit bacterium eventually die while the healthier bacteria positions yielding better fitness value are retained. In case of DSE, the bacterium positions are dispersed, with an aim of exploring the new positions with better cost. The approach iterates within a valid temperature range [tmin
                           , tmax
                           ] in which the bacteria can survive. (Note: Analysis from previous studies 
                           [19–22] 
                           have revealed that the motility range of Escherichia coli is between, tmin
                           
                           =25°C and tmax
                           
                           =45°C). Within this motility (valid) temperature range through chemotactic movement in every step (j) of each bacterium, the proposed DSE process explores new feasible solutions.

However, after a designer specified periodic intervals (‘mth’ iteration step respectively), the process of dispersal occurs. The dispersal algorithm is repeated (based on its corresponding periodic intervals) for Ned
                            times. Further, an array, (Re [j−−]) is created correspondingly for dispersal process to store the outcome, checking whether dispersal has been performed in last iterative step or not. This storage structure is necessary to determine whether variable ‘m’ needs up-gradation or not. If Re [j−−]=
                           true then it indicates that in the last iterative step (j−−), dispersal has taken place, therefore, the ‘m’ needs to be updated. Else, the up-gradation is bypassed. Fig. 3
                            shows the pseudo code of the BFO algorithm adopted from [37]. Note: Detailed investigations on BFOA have been performed previously in [29,37] respectively.
                              
                                 (a)
                                 
                                    Chemotaxis algorithm for exploration drift: In Chemotaxis, the bacterium can either move for a certain period of time in the same direction or it may tumble in the design space. Due to this, it moves by alternating between these two locomotive operations. The chemotaxis mechanism is regulated as shown [37]:
                                       
                                          •
                                          
                                             Step size, C(i): This is the step size which regulates the step of a movement taken in random direction. Initially, C(i)=0; C(i) operates as follows:
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                               C
                                                               (
                                                               i
                                                               )
                                                               =
                                                               C
                                                               (
                                                               i
                                                               )
                                                               +
                                                               2
                                                            
                                                         
                                                         
                                                            
                                                               if
                                                               
                                                               C
                                                               (
                                                               i
                                                               )
                                                               >
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     max
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               C
                                                               (
                                                               i
                                                               )
                                                               =
                                                               C
                                                               
                                                                  
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               C
                                                               
                                                                  
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               C
                                                               
                                                                  
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  
                                                                     Last
                                                                  
                                                               
                                                               -
                                                               2
                                                               )
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               else if
                                                               
                                                               C
                                                               (
                                                               i
                                                               )
                                                               <
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     min
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               C
                                                               (
                                                               i
                                                               )
                                                               =
                                                               C
                                                               
                                                                  
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               C
                                                               
                                                                  
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               C
                                                               
                                                                  
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  
                                                                     Las
                                                                  
                                                               
                                                               t
                                                               +
                                                               2
                                                               )
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          


                                             Tumble: This variable regulates the step size, C(i) using, 
                                                
                                                   Δ
                                                
                                             , a random vector whose elements lie in [−1, 1].


                                             Move: 
                                             
                                                
                                                   (6)
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            New
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            Last
                                                         
                                                      
                                                      +
                                                      C
                                                      (
                                                      i
                                                      )
                                                      
                                                         
                                                            Δ
                                                            (
                                                            i
                                                            )
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        Δ
                                                                     
                                                                     
                                                                        T
                                                                     
                                                                  
                                                                  (
                                                                  i
                                                                  )
                                                                  Δ
                                                                  (
                                                                  i
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          


                                             Resource clamping: The resource solution (xi
                                             ) (defined in Section 3.2) obtained through move operation above requires resource clamping feature:
                                                
                                                   
                                                      
                                                         
                                                            
                                                               If
                                                               
                                                               (
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               <
                                                               0
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               =
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               +
                                                               2
                                                               |
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               |
                                                            
                                                         
                                                         
                                                            
                                                               Else if
                                                               
                                                               (
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               >
                                                               (
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Max
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               =
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Max
                                                                  
                                                               
                                                               -
                                                               1
                                                               )
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               Else if
                                                               
                                                               (
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               <
                                                               (
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Min
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               x
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               =
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Min
                                                                  
                                                               
                                                               +
                                                               1
                                                               )
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          

Variables are defined in Table 1.

For the sake of demonstration, considering the user specified module library consisting of maximum adder: 3 and maximum multipliers: 4 as well as assuming that the design space has population size, p
                           =3, the corresponding bacterium positions as described before is: x
                           1
                           =(1, 1); x
                           2
                           =(3, 4); x
                           3
                           =(2, 2). Now assuming at j
                           =1, all the bacteria (x
                           1, 
                           x
                           2, 
                           x
                           3) are subjected to chemotactic movement (described in Eq. (6)) with step size C(i)=2 and random tumble vector=[−0.09, −0.94]. Then for bacterium x
                           2
                           =(3, 4), a new resource configuration is yielded as: (1, 4). If this x
                           2
                           
                              New
                            position has not been explored, then its fitness Cf
                           
                           2(x
                           2
                           
                              New
                           ) is evaluated; which is accepted if Cf
                           
                           2(x
                           2
                           
                              New
                           )<
                           Cf
                           
                           2(x
                           2
                           
                              Last
                           ). Similar calculations were performed for the other bacteria. Further details of the BFOA driven DSE is available in [37]. (9)
                           
                              
                                 (b)
                                 
                                    Dispersal algorithm: In order to obtain new bacterium positions, dispersal is imitated by manipulating a random α. The approach is regulated by ‘Ned
                                    ’ which represents the maximum times dispersal can occur during entire DSE process. The dispersal process includes following [37]:
                                       
                                          •
                                          
                                             Random variable, α: This manipulates the given configuration with respect to each dimension (N(Rd
                                             )). α for each dimension is regulated within the minimum and maximum value of respective resource type.
                                                
                                                   
                                                      N
                                                      
                                                         
                                                            (
                                                            
                                                               
                                                                  R
                                                               
                                                               
                                                                  d
                                                               
                                                            
                                                            )
                                                         
                                                         
                                                            Min
                                                         
                                                      
                                                      ⩽
                                                      α
                                                      ⩽
                                                      N
                                                      
                                                         
                                                            (
                                                            
                                                               
                                                                  R
                                                               
                                                               
                                                                  d
                                                               
                                                            
                                                            )
                                                         
                                                         
                                                            Max
                                                         
                                                      
                                                   
                                                
                                             
                                          


                                             Exploring new configurations: The new resource configuration obtained during DSE process operates under the following function:
                                                
                                                   
                                                      N
                                                      
                                                         
                                                            (
                                                            
                                                               
                                                                  R
                                                               
                                                               
                                                                  d
                                                               
                                                            
                                                            )
                                                         
                                                         
                                                            New
                                                         
                                                      
                                                      =
                                                      N
                                                      (
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            d
                                                         
                                                      
                                                      )
                                                      ±
                                                      α
                                                   
                                                
                                             
                                          


                                             Resource clamping: Each resource type (each dimension) obtained through DSE process requires resource clamping. This is done in order to limit the resource magnitude on the basis of maximum and minimum available resources of a certain type.
                                                
                                                   
                                                      
                                                         
                                                            
                                                               If
                                                               
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               >
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Max
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               =
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Max
                                                                  
                                                               
                                                               -
                                                               1
                                                               )
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               If
                                                               
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               <
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Min
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               =
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     New
                                                                  
                                                               
                                                               -
                                                               (
                                                               N
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           R
                                                                        
                                                                        
                                                                           d
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     Min
                                                                  
                                                               
                                                               +
                                                               1
                                                               )
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          

Finally, if the new solution (
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         New
                                                      
                                                   
                                                
                                             ) found after dispersal is found to be already explored, then the dispersal is again performed.

As explained in Section 3.3 the BFOA DSE framework generates solutions during exploration that are fed into the proposed multi cycle fault detectable algorithm. The multi cycle fault detectable algorithm uses these explored solutions, through chemotaxis and dispersal and converts them into a fault detectable DMR schedule. The cost of this fault detectable DMR schedule is subjected to fitness evaluation considering the user specified power constraint and performance requirement. This process continues until an optimal solution i.e. an optimal fault detectable DMR system that comprehensively minimizes and satisfies the multi objective power and execution time constraint is generated. The proposed multi cycle fault detectable algorithm is described in next section.


                           
                              
                                 (a)
                                 
                                    Assumptions of proposed algorithm: In the proposed work, following assumptions have been considered while designing the proposed BFOA driven multi objective DSE for multi-cycle fault detectable datapath.
                                       
                                          •
                                          Single fault model i.e. fault occurring at a single site in the circuit. Note: consideration of single fault model for transient faults is widely assumed and adopted in all related works such as [14–16]. Therefore, the proposed work on DSE of single/multi-cycle transient fault detectable datapath also uses the same assumption.

The faults occur only at the hardware units and not at interconnecting wires.

The system only handles the transient-faults and not permanent faults.

The pair of unit in the DMR system has a comparator for error detection, whereby the comparators are considered fault detectable.


                                    Proposed Multi Cycle Fault Detectability (MCFD) algorithm: An explored fault detectable Double-Module Redundant system for dealing with k-cycle faults, based on user specified power constraint and execution time constraint has been proposed. The DMR system involves a scheduled data flow graph (SDFGDMR
                                    ), consisting of schedules of original unit (UOG
                                    ) and duplicate unit (UDP
                                    ). The pair of units is concurrently scheduled on the basis of as soon as possible (ASAP) scheduling using the user supplied resource constraints Rx, and available dependency information (Dc) of the nodes. After obtaining the SDFGDMR
                                     system, the critical paths (pcri
                                    ) from the units (both UOG
                                     and UDP
                                    ) are identified. Operations of the SDFGDMR
                                     system are allocated to operators on the basis of following scheme:
                                       
                                          i.
                                          Allocate opn (oi
                                             ) of pcri
                                             
                                             
                                             
                                                
                                                   ∈
                                                
                                             
                                             
                                             UOG
                                              and pcri
                                             
                                             
                                             
                                                
                                                   ∈
                                                
                                             
                                             
                                             UDP
                                              to distinct operators (hardware units).

Allocate the remaining operations by:
                                                
                                                   •
                                                   If opn(oi
                                                      )
                                                      
                                                         
                                                            ∈
                                                         
                                                      
                                                      
                                                      UOG
                                                      , then assign operator on the basis of availability.

If opn(oi
                                                      )
                                                      
                                                         
                                                            ∈
                                                         
                                                      
                                                      
                                                      UDP
                                                      , then assign operations to similar operators as in UOG
                                                      , if available to enable resource sharing and reduction of usage of extra operators.

Once the assignment of operators is done, the behavior of the system due to k-cycle fault is observed by identifying the TFH between sister operations (from original and duplicate) assigned to the same operator (hardware). Note: Only the sister operations from original and duplicate needs to be checked for TFH because, non-sister operations (say opn 6 and ‘1) would always produce different outputs thereby enabling detect ability at final output. On the other hand, sister operations assigned to different hardware would also produce different output enabling detection.

The TFH between sister operations assigned to the same operator (hardware) exists when:
                              
                                 (7)
                                 
                                    t
                                    (
                                    ‘
                                    v
                                    )
                                    -
                                    t
                                    (
                                    v
                                    )
                                    ⩽
                                    
                                       
                                          k
                                       
                                       
                                          c
                                       
                                    
                                    ,
                                    
                                    where
                                    
                                    v
                                    ∈
                                    
                                       
                                          U
                                       
                                       
                                          OG
                                       
                                    
                                    
                                    and
                                    
                                    ‘
                                    v
                                    ∈
                                    
                                       
                                          U
                                       
                                       
                                          DP
                                       
                                    
                                    .
                                 
                              
                           where v and ‘v are the sister operations assigned to the same hardware (e.g. opns 2 and ′2 from original and duplicate). These hazards are then resolved by pushing the affected operation of the duplicate unit in later control steps, thereby shifting its successors accordingly. The push is done such that the interval between v
                           
                           
                              
                                 ∈
                              
                           
                           
                           UOG
                            and ‘v
                           
                           
                              
                                 ∈
                              
                           
                           
                           UDP
                            is greater than (or equals to) kc.
                            This identification and resolution of the TFH is done until no TFH exists in the DMR system i.e. in SDFGDMR
                           :
                              
                                 (8)
                                 
                                    t
                                    (
                                    ‘
                                    v
                                    )
                                    -
                                    t
                                    (
                                    v
                                    )
                                    >
                                    
                                       
                                          k
                                       
                                       
                                          c
                                       
                                    
                                 
                              
                           
                        


                           Fig. 4
                            illustrates the flowchart of the proposed MCFD algorithm.

Additionally, conversion into k-cycle fault detectable SDFGDMR
                            using proposed MCFD algorithm (shown in Fig. 4) also assures detection of transient fault in the control path. This is because for complete transient fault detection, the proposed approach places the sister operation of the duplicate unit, k-cycle apart from its original counterpart (unless allocated to different hardware). The above process ensures that the respective control signal generated by the state machine (or storage element) of the controller for sister operation of duplicate unit, is also after k-cycles, which in turn allows the sister operation in duplicate to produce different output than its original counterpart. Table 2
                            shows the control signals generated per control step with respect to the 4-cycle fault detectable SDFGDMR
                            of IIR filter (Fig. 6) obtained using proposed approach. For example, sister operations: opn 2 and opn ‘2 are executed by same hardware (M2) but 4-cycles apart (i.e. control signal: strobe sent by controller for activating Reg C and Reg D for executing opn 2 is at control step 0, while the control signal sent by controller for activating Reg C and Reg D for executing opn ‘2 is at control step 4). Subsequently, fault in one of the sister operation (2 or ‘2) does not affect the other, as the fault effect vanishes (thereby preserving detectability). Therefore, if a fault occurs at a storage element at control step 0, then it will produce faulty output for opn 2, however the control signal sent by same storage element at control step 4 being unaffected will not impact opn ‘2. This allows for detection. Similar logic holds true if fault occurs in controller generating control signals for other sister operations executed by same hardware.

Consider another scenario where for example, a 4-cycle fault occurs in control structure at step 0, that sends strobe signals to the input registers (Reg A and Reg B) of sister operations (say opn 1 and ‘1): In this case, the control signal (strobe) sent to both opn 1 and opn ‘1 are faulty, resulting in same faulty/abnormal output generated by opn 1 and opn ‘1. Further, the control strobe sent for input registers (Reg C and Reg D) of opn 2 is also faulty, however importantly, the control strobe sent at step 4 for input registers of opn ‘2 is non-faulty (as the 4-cycle fault struck at step 0 in the control structure vanishes at step 4). This allows detection at final output through comparator even when a fault affects control structure of the datapath.
                              
                                 (c)
                                 
                                    Demonstration of MCFD: The proposed approach is explained with the demonstration of IIR Butterworth DFG. The non-fault detectable and fault detectable SDFGDMR
                                     of IIR, based on the final explored solution (1(+), 2(∗)) explored through the proposed DSE framework are shown in Figs. 5 and 6
                                    
                                    . This indicates that while designing DMR system, the entire system is constructed subjected to constraint of the resource configurations explored by BFOA DSE. The operations in the system are labeled as 1, 2, … n for the original unit while for the duplicate unit operations are represented as ‘1, ‘2, … ‘n, where n and ‘n are the values of maximum value of node in the testing application. In the SDFGDMR
                                     shown in Fig. 5, the value of n is 9 for the UOG
                                    , correspondingly for ‘n it is numbered as ‘9 for the UDP
                                    . Suppose, a 4-cycle transient fault occurs in the system in opn 3 (step 2), the objective is to generate a DMR system which is 4-cycle fault detectable. At first, the hazards due to transient fault present in the system between sister operations assigned to same hardware are identified. A TFH of k-cycle occurs between an operation of UOG
                                     and an operation in UDP
                                     assigned to a same operator (hardware), if both operations are not k-cycle apart. A list L[k] stores all possible TFHs in the entire DMR system. Corresponding to the Fig. 5, list L[k] contains hazards between 3(M1) and ‘3(M1). The effect of this fault propagates until step 5 (as a 4-cycle fault is assumed). Due to which, same affected multiplier M1 may incorrectly execute operation 3 and 8 at step 2 and 3 (in UDP
                                    ) and operation ‘3 and ‘8 at step 4 and 5 (in UOG
                                    ), thereby both units producing same erroneous output (making fault undetectable). Therefore, in order to make the system fault detectable (i.e. to detect the fault occurring in the system), operation ‘3 and ‘8 of UDP
                                    , is pushed down into step 6 and 7 respectively (where Eq. (8) is satisfied and explored resource configuration is not violated (in this case: 1(+), 2(∗))) to avoid the propagation of 4-cycle fault in the UDP
                                    . This enables detectability since opn ‘3 and ‘8 of UDP
                                     would not contain any error (thereby UDP
                                     would produce the correct output). This is because the effect of 4-cycle transient fault is null after step 5 as mentioned before. Fig. 6 shows 4-cycle transient fault detectable SDFGDMR
                                     obtained through our algorithm.

Further assume a 2-cycle fault occurs at M2 (opn 1’) at step 4 in duplicate. Then its sister operation (opn 1 of original) is anyways isolated from the original (i.e. kc
                            cycle apart). This produces a different output than original unit because opn 1 does not contain fault. Another scenario is assuming hypothetically, that there exists an operation (x) in step 5 of original that is allocated to M2. So 2-cycle fault (originally occurred at M2 in step 4) would be propagated in this operation also i.e. opn x would have also produced a wrong output but outputs of opn 1’ (duplicate) and opn x (original) would be certainly different. This would allow for fault detection also when original and duplicate is compared.

The approach is again explained with the demonstration of an IIR Butterworth DFG. User specified design constraints for power and execution time and module library are used as inputs to the proposed framework. Module library contains information of Energy consumed by each resource in Pico joule (Pj), latency of each resource in nanoseconds (ns), hardware area of each resource (#of transistor) and user specified maximum availability of resources. For the example assumed values are: maximum available multiplier FU’s: 5, adder FU’s: 2; while power dissipated per transistor (pc
                           ) is assumed to be 29.33nW; additionally, number/type of mux/demux is directly extracted from the scheduling solution. As seen from Fig. 5, the benchmark has two types of resources (i.e. D
                           =2). Therefore, a bacterium position for the given DFG can be given as: xi
                           
                           =(N(add), N(mul)). Assuming that the design space has population size, p
                           =3, and therefore the subsequent bacterium positions are: x
                           1
                           =(1, 1); x
                           2
                           =(2, 5); x
                           3
                           =(1, 2).

For determining the initial cost of the solutions, PT
                              DMR
                            and TE
                           
                           DMR are evaluated. Hence, for x
                           1
                           =(1, 1): PT
                              DMR
                           
                           =132.76μW from Eq. (1) and TE
                              DMR
                           
                           =110.27μs from Eq. (4). (Note – the value of TE is derived from the scheduled DFG (SDFGDMR) with resource combination: 1 (+), 1 (∗). Further, Pmax
                              DMR
                           
                           =
                           483.60
                           
                           μW and Tmax
                              DMR
                           
                           =
                           110
                           
                           μs have been calculated based on worst case analysis of the scheduled DFG). Now, for calculating the cost, equal weightage is given to power and execution time (Ø1
                           =Ø2
                           =0.5). Therefore, the fitness of a particle xi
                            (
                              
                                 
                                    
                                       C
                                    
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                           ) is calculated using Eq. (5) as: C
                           1
                           
                              f
                           (x
                           1)=0.022; similarly fitness of x
                           2: C
                           2
                           
                              f
                           (x
                           2)=0.0398 and C
                           3
                           
                              f
                           (x
                           3)=−0.122. For the proposed DSE, it is assumed that: Nc
                           
                           =120, Ned
                           
                           =5; tmin
                           
                           =25
                           °C and tmax
                           
                           =45
                           °C. Now assuming at j
                           =1, the bacterium’s x
                           1, 
                           x
                           2 
                           x
                           3 are subjected to chemotactic movement with step size C(i)=2, tumble vector=[−1.0, −1.0]. Then for x
                           1
                           =(1, 1), a new resource configuration is yielded as: (0, 0) but since N(R
                           1) and N(R
                           2) of the new configuration is <N(Rd
                           )
                              min
                           , therefore resource clamping is required which further generates a new configuration (2, 2). Similar, calculations are performed for other bacterium. Once the new values are found, the temp is increased by Δt.

@&#RESULTS@&#

The proposed MCFD–DSE as well as [15] has been implemented in java and run on Intel Core-i5-3210M CPU with 3MB L3 cache memory, 4GB DDR3 primary memory and processor frequency of 2.5GHz. An average of 10 runs was reported for the proposed DSE with equal weightage to both user objectives of power and delay (Ø1
                     =Ø2
                     =1/2) during experimentation.

This section discusses the following:
                        
                           •
                           Results of proposed approach for various kc
                               values in terms of delay and power user constraints.

Results of proposed approach for various kc
                               values in terms of optimality when tested on metrics such as generational distance (GD), maximum Pareto-optimal front error (MFE), spacing (S), spread (Δ) and weighted sum (Wm
                              ).

Comparative results of the proposed methodology and existing fault detectable approach [15] in terms of quality of results and resource solution found. QoR defined in Eq. (9) measures the quality of final solution (in cost units) through a hybrid normalized function of power consumed and execution time of the solution explored. The user specified weightage of both metrics viz. power and execution time are both kept at 1/2 during exploration to provided equal preference. Similar QoR function has been used in many prior arts so far such as [26,11,27]. Where the QoR is calculated as follows:

During experimentation, following settings were kept for the proposed fault detectable DSE approach: φ
                        1
                        =
                        φ
                        2
                        =0.5, p
                        =3, Nc
                        
                        =120, Ned
                        
                        =5 (Note: these settings were found as an optimal compromise for maintaining high quality of solution within acceptable runtime). Table 3
                         illustrates the results obtained for our proposed DSE of fault detectable datapath based on 1-cycle, 2-cycle and 3-cycle faults i.e. kc
                        
                        =1, 2 and 3. As shown in the results, the proposed approach comprehensively meets the user constraints of delay and power (and minimizes Eq. (5)) for all benchmarks. This section provides the capability of the proposed approach to reach high quality solutions for three different transient fault strengths (kc
                        
                        =1, 2 and 3) that satisfy the conflicting multi-objective user constraints as well as minimizes the hybrid cost function. There have been no previous works which report the results of exploration of power-execution time constraint driven fault detectable datapath system for single and multi-cycle fault strength.

To evaluate the effectiveness of multi objective optimization algorithms, the metrics viz. GD, MFE, S, Δ and Wm
                         are required to demonstrate how close the obtained solutions have converged to the true Pareto-optimal front. It can be stated that a good optimization algorithm generates solutions close to the true Pareto-optimal front as well as solutions that span the entire Pareto-optimal region uniformly. The GD metric is used to measure the convergence of solutions towards the Pareto-optimal front. Further, metrics which quantify the diversity among obtained non-dominated solutions are spacing and spreading. Spacing is the measure of relative distance between consecutive non-dominated solutions. On the other hand, spread accounts to the diversity of the non-dominated solutions with respect to the extremities of the Pareto-solution set. An algorithm, finding smaller values of both is able to find better diverse set of non-dominated solutions. In addition, Wm
                         provides a combined qualitative measure of both closeness and diversity of the solutions. An algorithm having an overall small value of Wm
                         is good in both aspects [39]. Tables 4 and 5
                        
                         show the analysis of proposed evolutionary approach in terms of quality metrics such as GD, MFE, S, Δ and Wm
                        . Table 4 illustrates the results of proposed approach in terms of optimality for kc
                        
                        =1, while Table 5 is for kc
                        
                        =3. As seen from Table 4, the GD is zero for all the benchmarks indicating that the solutions generated through the proposed approach lie on true Pareto front. Similar pattern of results is evident from Table 5 where optimality of proposed approach is demonstrated for kc
                        
                        =3. Further, for all benchmarks the spacing is found to be very low (zero in some cases) which as discussed before indicates that the obtained non-dominated solution set is almost uniformly (diversely) spaced. Fig. 7
                         shows the graphical representation of variation of metrics for proposed approach for kc
                        
                        =1 and kc
                        
                        =3. There has been no previous work that obtained an optimized k-cycle fault detectable datapath with respect to user power and execution time constraint for single/multi cycle faults. Further, no optimality analysis of the fault detectable datapath solution obtained through previous approach was performed. This is also addressed through results reported in Tables 4 and 5.


                        Table 6
                         shows the comparison of QoR (in cost units) between the proposed approach (MCFD–DSE) and fault secured approach [15]. It should be noted that [15] is just a fault secured approach and does not have ability to optimize the fault detectable datapath. Therefore it has ability to only detect the fault at the cost of extra hardware redundancy if needed. However the proposed approach is capable to optimize the fault detectable datapath based on user’s requirement as well as fault strength. Owing to this capability, the results of experiments obtained indicated that through the proposed approach an average improvement in QoR of 9% and a reduction of 23.2% in hardware usage is obtained for almost all benchmarks. However, in case of DCT and WDF, there is no reduction in hardware area observed compared to [15]. Nevertheless, the proposed approach always satisfies/minimizes the hybrid cost of power and delay while [15] is able to achieve only detection without any optimization of datapath through exploration based on power-delay constraint. This accounts for the higher QoR value i.e. higher cost value compared to the proposed approach. Fig. 8
                         illustrates the graphical representation of comparison of QoR (cost units) of proposed approach with existing approach [15].

A novel approach for multi-cycle fault detectable design space exploration approach based on user power-performance constraint during high level synthesis is presented in this paper using adaptive bacterial foraging optimization algorithm. No such methodology exists in the literature so far. The results of the proposed mechanism when compared to [15] proved that proposed approach provided higher QoR with an average reduction of cost units of >9% and a 23% of reduction in hardware utilization.

Our future research is geared towards reporting the current methodology for higher transient fault values while simultaneously considering check-pointing technique to reduce time overhead. Further in our future work, we also aim to extend our current work by considering multi-fault model based detection during DSE which takes into account transient strikes at multiple operators simultaneously.

@&#ACKNOWLEDGMENT@&#

We would like to acknowledge the support grant provided by Indian Institute of Technology, Indore for carrying out this work.

@&#REFERENCES@&#

