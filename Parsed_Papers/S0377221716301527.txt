@&#MAIN-TITLE@&#Shared resource capacity expansion decisions for multiple products with quantity discounts

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The resource capacity decision for products with quantity discounts is analyzed.


                        
                        
                           
                           The model can accommodate virtually any form of capacity cost.


                        
                        
                           
                           Both all-units and incremental quantity discounts can be accommodated.


                        
                        
                           
                           The algorithms can handle simultaneous decisions for thousands of products.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Purchasing

Quantity discounts

Capacity expansion

Lot sizing

Inventory

@&#ABSTRACT@&#


               

               
                  When multiple products compete for the same storage space, their optimal individual lot sizes may need to be reduced to accommodate the storage needs of other products. This challenge is exacerbated with the presence of quantity discounts, which tend to entice larger lot sizes. Under such circumstances, firms may wish to consider storage capacity expansion as an option to take full advantage of quantity discounts. This paper aims to simultaneously determine the optimal storage capacity level along with individual lot sizes for multiple products being offered quantity discounts (either all-units discounts, incremental discounts, or a mixture of both). By utilizing Lagrangian techniques along with a piecewise-linear approximation for capacity cost, our algorithms can generate precise solutions regardless of the functional form of capacity cost (i.e., concave or convex). The algorithms can incorporate simultaneous lot-sizing decisions for thousands of products in a reasonable solution time. We utilize numerical examples and sensitivity analysis to understand the key factors that influence the capacity expansion decision and the performance of the algorithms. The primary characteristic that influences the capacity expansion decision is the size of the quantity discount offered, but variability in demand and capacity per unit influence the expansion decision as well. Furthermore, we discover that all-units quantity discounts are more likely to lead to capacity expansion compared to incremental quantity discounts. Our analysis illuminates the potential for significant savings available to companies willing to explore the option of increasing storage capacity to take advantage of quantity discount offerings for their purchased products.
               
            

@&#INTRODUCTION@&#

With ever-shrinking margins in today's marketplace, proper inventory management has become more vital than ever before. Purchasing managers typically procure many products simultaneously, often subject to an inventory-based resource constraint (e.g., warehouse space). Basic inventory models, such as the economic order quantity (EOQ) model, assume that procurement decisions relate to a single product with no constraints on the order size. These basic models are well-known and easy to solve analytically. However, the addition of a common resource constraint, multiple products, and quantity discounts significantly complicates the determination of optimal order quantities.

Inventory-based common resource constraints typically come in one of two forms: warehouse constraints or financial constraints. A warehouse can be constrained in terms of volume (or square footage), weight, or number of units. The most common warehouse constraint is square footage, as the drive toward “lean” in many industries today severely limits available warehouse space. Financial constraints might arise, for example, from a maximum inventory value that insurance covers or from a credit line available to purchase inventory. A natural, but often forgotten, question is, “Would it be valuable for our firm to increase the capacity of our common resource?” Too often managers may simply assume that capacity is fixed, but in reality, more warehouse space may be available for purchase, or unused warehouse space may be convertible for lease.

Any expansion decision comes with a cost, so what is the benefit? The vast majority of businesses have opportunities to receive quantity discounts for at least some of their purchased products (Munson & Rosenblatt, 1998). By increasing the resource capacity, firms open up more opportunities to take advantage of quantity discounts. The model in this paper accommodates both of the common quantity discount forms: all-units and incremental (Hadley & Whitin, 1963). Specifically, we address the following research question: When a firm faces all-units or incremental quantity discount schedules for multiple products in a common resource-constrained inventory system, how much capacity should exist, and how many units of each item should the firm order given that capacity limitation?

This paper provides purchasing managers with solution algorithms to answer these questions. Specifically, the algorithms simultaneously determine best order quantities for each product along with the optimal common resource capacity level when the firm receives all-units and/or incremental quantity discounts from its suppliers. While previous research has examined the multiple-product lot-sizing decision with a fixed capacity, to the best of our knowledge this study is the first that treats capacity as a decision variable in the presence of quantity discounts. Furthermore, while previous literature restricts the functional form of capacity cost (e.g., convex or linear), our model accommodates any functional form (e.g., concave, convex–concave, concave-convex, etc.), which increases applicability by accurately modeling the many different ways in which capacity expansion may create costs. Through the numerical studies developed in Section 6, it becomes clear that the introduction of the common resource capacity as a decision variable presents opportunities for considerable savings from quantity discounts that may outweigh the corresponding increase in cost associated with capacity expansion. This especially holds true in the presence of all-units quantity discounts compared to incremental quantity discounts. We find that the size of the quantity discount offered, along with variability in demand and capacity per unit, have the most influence on the capacity expansion decision. The modeling concept of treating capacity expansion as a decision variable opens up directions for future research involving quantity discounts and joint replenishment inventory problems.

The remainder of this paper is organized as follows. In Section 2, we review relevant literature on quantity discounts and the capacitated common resource problem. In Section 3, we introduce the baseline model and algorithm when facing all-units quantity discounts. This is followed in Section 4 by an extension of the baseline model to incorporate capacity reduction decisions (leading to potential capacity cost savings) along with capacity expansion decisions. The model and solution algorithm are then modified to handle incremental quantity discounts in Section 5. In Section 6, we describe numerical studies that test the performance of the algorithms along with sensitivity analysis that identifies the key parameters influencing the capacity expansion decision. Finally, in Section 7, we conclude the study and identify directions for future research.

@&#LITERATURE REVIEW@&#

This paper draws from two expansive areas of the operations management literature: quantity discounts and the capacitated common resource problem. Our literature review critically analyzes multiple facets of these areas of literature to identify research gaps and motivate the need for our algorithms to assist in this complex decision of simultaneously making hundreds or thousands of order quantity decisions while also considering a potential capacity expansion or reduction. Within the capacitated common resource problem literature, there are three characteristics of interest: pricing structure, ordering structure, and capacity flexibility. We describe how researchers have treated these characteristics. From there, we highlight critical areas that are currently understudied.

Several hundred academic articles on quantity discounts have appeared. Benton and Park (1996) as well as Munson and Rosenblatt (1998) summarize the work published through the turn of the century and provide an overview of the landscape of the quantity discount literature. A steady stream of quantity discount papers has continued since then (e.g., Hammani, Temponi, & Frein, 2014, Manerba & Mansisi, 2012, Munson & Hu, 2010, Rubin & Benton, 2003), including a recent handbook (Munson & Jackson, 2014) that provides practical motivations as well as a thorough review of the quantity discount literature. As mentioned previously, our models accommodate both all-units (Section 3) and incremental (Section 5) quantity discounts. Most introductory operations management textbooks (e.g., Heizer, Render, & Munson, 2017) provide the basics of all-units quantity discounts, while many intermediate textbooks (e.g., Chopra & Meindl, 2010) describe solution techniques for incremental quantity discounts.

Previously published models that address the common resource capacity problem have three key characteristics: pricing structure, ordering structure, and capacity flexibility. Table 1
                         provides a summary of prior literature and the characteristics of each article. There are two common pricing structures: fixed pricing (i.e., no quantity discounts) and variable pricing with quantity discounts. Hadley and Whitin (1963) and Johnson and Montgomery (1974) were among the first to analyze the fixed pricing (undiscounted) problem. They use an ordering structure whereby each product has an independent cycle length, i.e., time between orders. This type of ordering structure forces the firm to prepare for the worst-case scenario when all products are ordered at once and arrive simultaneously. Lagrangian relaxation is the most popular solution technique to solve the undiscounted common resource problem with independent cycle times. Rosenblatt (1981) and Rosenblatt and Rothblum (1990) modify the ordering structure to have every product on a fixed cycle length. The replenishment points are then phased within the fixed cycle length. This technique lowers the maximum inventory level by eliminating the possibility of the worst-case scenario that independent cycle lengths might produce.

There are several papers dedicated to solving the capacitated common resource problem with quantity discounts, but all of them assume that capacity is fixed. Pirkul and Aras (1985) wrote the seminal paper analyzing all-units quantity discounts, which solves the problem with each product having an independent cycle length. The authors introduce a Lagrangian relaxation on the capacity constraint to develop a lower bound on the original objective function. Once the Lagrangian problem is solved, a bisection method finds a near-optimal solution to the original problem. Rubin and Benton (1993) extend the research area by introducing multiple constraints (e.g., budget and space). Güder and Zydiak (2000) combine the previous work done on the common resource-constrained problem with quantity discounts and the approach taken by Rosenblatt (1981) by examining the problem with a fixed cycle length for all products. All of the prior models incorporate the typical EOQ assumptions, one of which is constant and known demand for each product. Minner and Silver (2007) introduce stochastic demand into the resource-constrained problem, and Zhang (2010) expands their research by adding all-units quantity discounts. Shi and Zhang (2010) formulate the Zhang (2010) problem as a mixed-integer nonlinear program and solve it using Lagrangian relaxation.

Fewer articles have addressed the incremental quantity discount case. Güder, Zydiak, and Chaudhry (1994) modify the approach from Pirkul and Aras (1985) for incremental discounts. Their heuristic assumes that each product has an independent cycle length, and it finds a near-optimal solution through the use of Lagrangian relaxation. Rubin and Benton (2003) extend prior research by allowing multiple constraints (i.e., financial and space limitations). Their methods are adopted from their earlier paper (Rubin & Benton, 1993) that analyzes this problem when facing all-units discounts. Their incremental discount article also invokes a Lagrangian relaxation, coupled with partial enumeration, to solve for near-optimal order quantities.


                        Hall (1988) and Rosenblatt and Rothblum (1990) were among the first to analyze the common resource capacity as a decision variable. Several recent papers develop models that allow the opportunity to rent extra warehouse space when the inventory level exceeds the capacity of the original warehouse. Ghiami, Williams, and Wu (2013) and Dye, Ouyang, and Hsieh (2007) analyze these situations for a deteriorating item with stock-dependent demand. Tamijdzad and Miromohammadi (2015) and Zhao, Qiu, Xie, and He (2012) develop (r, Q) policies with stochastic demand and limited capacity, which is treated as a soft constraint allowing for capacity expansion. The former considers a single product with quantity discounts, while the latter considers multiple products with no quantity discounts.

Independently, much has been done in both the quantity discount and capacitated common resource literature. But our review reveals limited analysis on the capacitated common resource problem when the common resource capacity is a decision variable. Moreover, an even smaller body of literature has introduced quantity discounts into such a scenario. This paper helps fill that research gap. Our main contribution is the consideration of quantity discounts simultaneously with a dynamic inventory-based resource constraint. A second key contribution of our study is the ability of our solution algorithm to incorporate any functional form of capacity cost. Previous studies (e.g., Hall, 1988, Rosenblatt & Rothblum, 1990) have limitations on the functional form of capacity cost (e.g., convex or linear, respectively). Our unrestricted capacity cost model allows, among other things, the capacity cost to incorporate annualized economies of scale benefits seen in larger expansions. As seen in the next section, arbitrarily small piecewise-linear approximations of capacity cost provide an appropriate modeling mechanism to solve the problem.

Our baseline model simultaneously solves for the appropriate common resource capacity level and the order quantity for each item given the capacity limitation when facing all-units quantity discounts (for incremental discounts, see Section 5). Recall that the common resource could be an inventory-based resource (e.g., warehouse space) or a financial-based resource (e.g., a credit line for inventory). In an unconstrained system, quantity discounts incentivize purchasing managers to purchase larger quantities, but that potentially requires a larger capacity. Our model attempts to identify the ideal balance between the purchasing cost savings from quantity discounts and the capacity cost increase. We invoke a piecewise-linear approximation of capacity cost to determine efficient order quantities and the appropriate capacity level.

Consistent with prior literature, our model uses many traditional assumptions to assist with analytical tractability. We invoke the typical EOQ assumptions of deterministic and independent demand for each item, constant demand over time, no backorders, and instantaneous replenishment (i.e., infinite production rate and zero lead time). Our model assumes that each item has an independent cycle length (or time between orders). Under this ordering structure, we must manage capacity to accommodate the worst-case scenario where all items are ordered simultaneously, resulting in the highest possible inventory levels. We assume that the resource capacity is a decision variable that can be reduced (reducing capacity cost) or expanded (increasing capacity cost). Without loss of generality, from this point forward we assume that the constrained common resource is the space available in a warehouse (other shared resource constraints would be modeled similarly). Finally, we assume that our capacity cost function is monotonically non-decreasing with respect to capacity level.


                        
                           Indices


                           
                              i
                           
                           
                              item to be purchased, 
                                    
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       I
                                    
                                 
                              

segment of the piecewise-linear approximation of capacity cost, 
                                    
                                       m
                                       =
                                       0
                                       ,
                                       1
                                       ,
                                       …
                                       ,
                                       M
                                    
                                 
                              

annual demand for item i
                              

setup (or ordering) cost for item i
                              

annual holding cost as a percentage of purchase price for item i
                              

amount of the common resource used per unit of item i
                              

initial resource capacity level

capacity breakpoint in the piecewise-linear approximation of capacity cost between segments 
                                    
                                       m
                                       −
                                       1
                                    
                                  and m
                              

capacity cost associated with a capacity level of ym
                                 
                              

marginal capacity cost for each additional unit of capacity in segment m
                              

resource capacity

order quantity for item i
                              

annual holding cost for item i
                              

annual purchasing cost for item i
                              

annual capacity cost associated with having capacity level K
                              

Our goal is to determine the optimal combination of resource capacity level and order quantities to minimize annual setup, inventory holding, purchasing, and capacity costs when facing quantity discounts.

For an all-units quantity discount schedule with J
                        +1 prices, we define qij
                         as the jth price breakpoint in the price schedule for item i, j = 0, 1, …, J (qi
                        
                        0 = 0, qi
                        
                        (
                        
                           J+
                        
                        1) = ∞), and 
                           
                              p
                              
                                 i
                                 j
                              
                              A
                           
                         as the per-unit price for all units purchased when qij
                         ≤ Qi
                         < qi
                        
                        (
                        
                           j
                        
                        +1). Our general objective function is:

                           
                              (1)
                              
                                 
                                    Z
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       I
                                    
                                    
                                       [
                                       
                                          
                                             (
                                             
                                                
                                                   D
                                                   i
                                                
                                                
                                                   Q
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             S
                                             i
                                          
                                          +
                                          H
                                          
                                             (
                                             
                                                Q
                                                i
                                             
                                             )
                                          
                                          +
                                          P
                                          
                                             (
                                             
                                                Q
                                                i
                                             
                                             )
                                          
                                       
                                       ]
                                    
                                    +
                                    G
                                    
                                       (
                                       K
                                       )
                                    
                                    ,
                                 
                              
                           
                        where qij
                         ≤ Qi
                         < qi
                        
                        (
                        
                           j
                        
                        +1), 
                           
                              H
                              
                                 (
                                 
                                    Q
                                    i
                                 
                                 )
                              
                              =
                              
                                 (
                                 
                                    
                                       Q
                                       i
                                    
                                    /
                                    2
                                 
                                 )
                              
                              
                                 (
                                 
                                    
                                       h
                                       i
                                    
                                    
                                       p
                                       
                                          i
                                          j
                                       
                                       A
                                    
                                 
                                 )
                              
                              ,
                           
                         and 
                           
                              P
                              
                                 (
                                 
                                    Q
                                    i
                                 
                                 )
                              
                              =
                              
                                 p
                                 
                                    i
                                    j
                                 
                                 A
                              
                              
                                 D
                                 i
                              
                              .
                           
                         Note that the objective function (1) is not continuous due to the existence of all-units quantity discounts. If the problem did not include quantity discounts and if G(K) were convex, then the objective function would be continuous and convex—hence solvable using first-order conditions.


                        Rosenblatt and Rothblum (1990) and Hall (1988) assume that G(K) is convex. However, the shape of G(K) is dependent upon the interpretation of the resource capacity cost. Both articles define G(K) as the yearly cost of maintaining a capacity level K. 
                        Hall (1988) assumes a special case where G(K) is a linear function, whereas Rosenblatt and Rothblum (1990) assume a more general convex function. Alternatively, G(K) could well represent the annualized cost associated with building, purchasing, or leasing extra warehouse space. Due to the prevalence of economies of scale, the cost of a capacity increase might easily be a concave function of the size of expansion (Nahmias, 2009), as opposed to a convex function. Another potential feature of the capacity cost function would be the existence of a potentially large fixed cost associated with any capacity expansion. The potentially diverse nature of the capacity cost function leads to multiple analytical complications.

Let us begin with the general formulation of our problem:

                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         min
                                                         
                                                         
                                                            ∑
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            I
                                                         
                                                         
                                                            [
                                                            
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        D
                                                                        i
                                                                     
                                                                     
                                                                        Q
                                                                        i
                                                                     
                                                                  
                                                                  )
                                                               
                                                               
                                                                  S
                                                                  i
                                                               
                                                               +
                                                               H
                                                               
                                                                  (
                                                                  
                                                                     Q
                                                                     i
                                                                  
                                                                  )
                                                               
                                                               +
                                                               P
                                                               
                                                                  (
                                                                  
                                                                     Q
                                                                     i
                                                                  
                                                                  )
                                                               
                                                            
                                                            ]
                                                         
                                                         +
                                                         G
                                                         
                                                            (
                                                            K
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      s
                                                      
                                                         .
                                                         t
                                                      
                                                      .
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         ∑
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         I
                                                      
                                                      
                                                         
                                                            k
                                                            i
                                                         
                                                         
                                                            Q
                                                            i
                                                         
                                                         ≤
                                                         K
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         Q
                                                         i
                                                      
                                                      ≥
                                                      0
                                                      
                                                      ∀
                                                      i
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      K
                                                      ≥
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             (
                                             
                                                P
                                                1
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Since K is a decision variable and G(K) is assumed to be monotonically non-decreasing in K, the capacity constraint will be binding at the optimal solution:

                           
                              (2)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       I
                                    
                                    
                                       
                                          k
                                          i
                                       
                                       
                                          Q
                                          i
                                       
                                       =
                                       K
                                    
                                    .
                                 
                              
                           
                        
                     

This result allows us to absorb (2) into the objective function (Rosenblatt & Rothblum, 1990). Updating our optimization problem:

                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         min
                                                         
                                                         
                                                            ∑
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            I
                                                         
                                                         
                                                            [
                                                            
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        D
                                                                        i
                                                                     
                                                                     
                                                                        Q
                                                                        i
                                                                     
                                                                  
                                                                  )
                                                               
                                                               
                                                                  S
                                                                  i
                                                               
                                                               +
                                                               H
                                                               
                                                                  (
                                                                  
                                                                     Q
                                                                     i
                                                                  
                                                                  )
                                                               
                                                               +
                                                               P
                                                               
                                                                  (
                                                                  
                                                                     Q
                                                                     i
                                                                  
                                                                  )
                                                               
                                                            
                                                            ]
                                                         
                                                         +
                                                         G
                                                         
                                                            (
                                                            
                                                               ∑
                                                               
                                                                  i
                                                                  =
                                                                  1
                                                               
                                                               I
                                                            
                                                            
                                                               
                                                                  k
                                                                  i
                                                               
                                                               
                                                                  Q
                                                                  i
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      s
                                                      .
                                                      t
                                                      .
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         Q
                                                         i
                                                      
                                                      ≥
                                                      0
                                                      
                                                      ∀
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             (
                                             
                                                P
                                                2
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     

From here, we first analyze a simplified version of our problem with linear capacity cost and then extend to an approximation that can handle any functional form of G(K).

Define G(K) as the annual cost of maintaining a capacity level K. Following Hall (1988), let us assume that G(K) is a linear function of K. This simplified setup assumes that there is no initial capacity K
                        0
                        . Let b represent the marginal cost of maintaining one additional unit of capacity per year. Updating our optimization problem, we have:

                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         min
                                                         
                                                         
                                                            Z
                                                            ′
                                                         
                                                         =
                                                         
                                                            ∑
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            I
                                                         
                                                         
                                                            [
                                                            
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        D
                                                                        i
                                                                     
                                                                     
                                                                        Q
                                                                        i
                                                                     
                                                                  
                                                                  )
                                                               
                                                               
                                                                  S
                                                                  i
                                                               
                                                               +
                                                               H
                                                               
                                                                  (
                                                                  
                                                                     Q
                                                                     i
                                                                  
                                                                  )
                                                               
                                                               +
                                                               P
                                                               
                                                                  (
                                                                  
                                                                     Q
                                                                     i
                                                                  
                                                                  )
                                                               
                                                            
                                                            ]
                                                         
                                                         +
                                                         b
                                                         
                                                            ∑
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            I
                                                         
                                                         
                                                            
                                                               k
                                                               i
                                                            
                                                            
                                                               Q
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      s
                                                      
                                                         .
                                                         t
                                                      
                                                      .
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         Q
                                                         i
                                                      
                                                      ≥
                                                      0
                                                      
                                                      ∀
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             (
                                             
                                                P
                                                3
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Due to the discontinuous objective function for each item, we must consider each price level individually to determine the optimal order quantity for that price. Consider the first and second derivatives of our objective function (Z′) with respect to Qi
                         where qij
                         ≤ Qi
                         < qi
                        
                        (
                        
                           j
                        
                        +1):

                           
                              (3)
                              
                                 
                                    
                                       
                                          δ
                                          
                                             Z
                                             ′
                                          
                                       
                                       
                                          δ
                                          
                                             Q
                                             i
                                          
                                       
                                    
                                    =
                                    −
                                    
                                       
                                          
                                             D
                                             i
                                          
                                          
                                             S
                                             i
                                          
                                       
                                       
                                          Q
                                          i
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          h
                                          i
                                       
                                       2
                                    
                                    
                                       p
                                       
                                          i
                                          j
                                       
                                       A
                                    
                                    +
                                    b
                                    
                                       k
                                       i
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             δ
                                             2
                                          
                                          
                                             Z
                                             ′
                                          
                                       
                                       
                                          δ
                                          
                                             Q
                                             i
                                             2
                                          
                                       
                                    
                                    =
                                    
                                       
                                          2
                                          
                                             D
                                             i
                                          
                                          
                                             S
                                             i
                                          
                                       
                                       
                                          Q
                                          i
                                          3
                                       
                                    
                                    >
                                    0
                                    .
                                 
                              
                           
                        
                     

Note that the objective function is separable with respect to each item's order quantity. This allows us to optimize each item individually. As Z′ is convex (from (4)) the first-order conditions are sufficient to find the minimum point xij
                         for price level j and item i:

                           
                              (5)
                              
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          
                                             2
                                             
                                                D
                                                i
                                             
                                             
                                                S
                                                i
                                             
                                          
                                          
                                             
                                                h
                                                i
                                             
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                A
                                             
                                             +
                                             2
                                             b
                                             
                                                k
                                                i
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

However, xij
                         may not be “feasible,” i.e., xij
                         may not lie within price interval j. If xij
                         < qij
                        , then qij
                         is the best order quantity for that interval. If xij
                         ≥ qi
                        
                        (
                        
                           j+1
                        
                        ), then the global optimal order quantity will not lie within interval j. Adapting from Munson and Hu (2010), the optimal order quantity for item i is:

                           
                              (6)
                              
                                 
                                    
                                       Q
                                       i
                                       *
                                    
                                    =
                                    max
                                    
                                       (
                                       
                                          x
                                          
                                             i
                                             
                                                j
                                                *
                                             
                                          
                                       
                                       ,
                                       
                                          q
                                          
                                             i
                                             
                                                j
                                                *
                                             
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        where j* =Argmin
                           {j =
                        
                        0,1,…, 
                        
                           J} Zij
                        , and

                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             Z
                                             
                                                i
                                                j
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      D
                                                      i
                                                   
                                                   
                                                      max
                                                      (
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      ,
                                                      
                                                         q
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                
                                                )
                                             
                                             
                                                S
                                                i
                                             
                                             +
                                             
                                                (
                                                
                                                   
                                                      max
                                                      (
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      ,
                                                      
                                                         q
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   2
                                                
                                                )
                                             
                                             
                                                h
                                                i
                                             
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                A
                                             
                                             +
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                A
                                             
                                             
                                                D
                                                i
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             +
                                             
                                             b
                                             
                                                k
                                                i
                                             
                                             max
                                             
                                                (
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                ,
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                )
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        The value of Zij*
                           
                         represents the total cost of 
                           
                              
                                 Q
                                 i
                                 *
                              
                              .
                           
                        
                     

Upon the completion of this process for each item, we have the optimal capacity (K*
                        ):

                           
                              (8)
                              
                                 
                                    
                                       K
                                       *
                                    
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       I
                                    
                                    
                                       
                                          k
                                          i
                                       
                                       
                                          
                                             
                                                Q
                                                i
                                             
                                          
                                          *
                                       
                                       .
                                    
                                 
                              
                           
                        
                     

While managers could implement the solution to the simplified case directly into spreadsheets, practical applications of linear capacity costs are limited. We now move to a more general solution procedure that is applicable regardless of the functional form of capacity cost.

In the simplified case, we assumed that we had no initial capacity (e.g., building a new warehouse) and that G(K) was the annualized linear cost of maintaining a capacity level K. Now let us consider an initial capacity level K
                        0 and the potential to expand our capacity through an investment that is non-decreasing in the expansion size. We convert the investment to an annualized payment to continue to express our objective function as the annual total cost. For now we limit ourselves to capacity expansion opportunities (we extend this to incorporate capacity reduction in Section 4).

To eliminate restrictions on the functional form of the capacity cost, we introduce a piecewise-linear and monotonically non-decreasing approximation of G(K). The piecewise-linear function can be broken into M
                        +1 segments. Obviously, more segments lead to a more accurate, but more computationally cumbersome, solution. When analyzing the piecewise-linear function segment by segment, each segment of the objective function (1) becomes convex regardless of the original functional form of capacity cost (i.e., convex or concave), allowing us to find approximate analytical solutions. The best solution is the feasible segment solution with the lowest total cost. Consider a segment m that goes from capacity level ym
                         to ym+
                        
                        1 and has a marginal cost of bm
                         for each additional unit of capacity added. Let Vm
                         be the capacity cost of maintaining capacity level ym
                         (Chopra & Meindl, 2010). Define y
                        0 = 0, y
                        1 = K
                        0, yM
                        
                        +1 = ∞, and b
                        0 = 0 to provide one segment in case the final capacity is less than or equal to the initial capacity level. This results in V
                        0 = V
                        1 = 0. We then calculate Vm
                         for 2 ≤ m ≤ M as follows:

                           
                              (9)
                              
                                 
                                    
                                       V
                                       m
                                    
                                    =
                                    
                                       b
                                       1
                                    
                                    
                                       (
                                       
                                          y
                                          2
                                       
                                       −
                                       
                                          y
                                          1
                                       
                                       )
                                    
                                    +
                                    .
                                    .
                                    .
                                    +
                                    
                                       b
                                       
                                          m
                                          −
                                          1
                                       
                                    
                                    
                                       (
                                       
                                          y
                                          m
                                       
                                       −
                                       
                                          y
                                          
                                             m
                                             −
                                             1
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        
                     

Then:

                           
                              (10)
                              
                                 
                                    G
                                    
                                       (
                                       K
                                       )
                                    
                                    
                                    =
                                    
                                    
                                       {
                                       
                                          
                                             
                                                0
                                             
                                             
                                                
                                                   
                                                      if
                                                      
                                                   
                                                   K
                                                   <
                                                   
                                                      K
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      V
                                                      m
                                                   
                                                   +
                                                   
                                                      b
                                                      m
                                                   
                                                   
                                                      (
                                                      K
                                                      −
                                                      
                                                         y
                                                         m
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      if
                                                      
                                                   
                                                   
                                                      y
                                                      m
                                                   
                                                   ≤
                                                   K
                                                   <
                                                   
                                                      y
                                                      
                                                         m
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                   
                                                   
                                                   
                                                      for
                                                      
                                                   
                                                   m
                                                   =
                                                   1
                                                   ,
                                                   2
                                                   ,
                                                   …
                                                   ,
                                                   M
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Note that if there is no initial capacity level, one can simply eliminate segment m = 0. Additionally, capacity expansions could include a fixed upfront cost. Such a cost might incorporate a myriad of expenditures, e.g. a contractor's fixed fee or the cost of shutting the line down during production. Managers may also incorporate a theoretical fixed cost as a mechanism to prevent the algorithm from recommending insignificant changes in capacity. To include a fixed cost in (10), one can simply add a fixed cost F to G(K) when K ≥ K
                        0.

We update our objective function Z for each segment m, where m= 0, 1,…, M:

                           
                              (11)
                              
                                 
                                    
                                       Z
                                       m
                                    
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       I
                                    
                                    
                                       [
                                       
                                          
                                             (
                                             
                                                
                                                   D
                                                   i
                                                
                                                
                                                   Q
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             S
                                             i
                                          
                                          +
                                          H
                                          
                                             (
                                             
                                                Q
                                                i
                                             
                                             )
                                          
                                          +
                                          P
                                          
                                             (
                                             
                                                Q
                                                i
                                             
                                             )
                                          
                                       
                                       ]
                                    
                                    +
                                    
                                       [
                                       
                                          
                                             V
                                             m
                                          
                                          +
                                          
                                             b
                                             m
                                          
                                          
                                             (
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   I
                                                
                                                
                                                   
                                                      k
                                                      i
                                                   
                                                   
                                                      Q
                                                      i
                                                   
                                                
                                                −
                                                
                                                   y
                                                   m
                                                
                                             
                                             )
                                          
                                       
                                       ]
                                    
                                    .
                                 
                              
                           
                        
                     

Similar to the simplified case, the approximate analytical minimum point 
                           
                              (
                              
                                 x
                                 
                                    i
                                    j
                                 
                                 m
                              
                              )
                           
                         for item i in price level j in segment m is found using first-order conditions:

                           
                              (12)
                              
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                       m
                                    
                                    =
                                    
                                       
                                          
                                             2
                                             
                                                D
                                                i
                                             
                                             
                                                S
                                                i
                                             
                                          
                                          
                                             
                                                h
                                                i
                                             
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                A
                                             
                                             +
                                             2
                                             
                                                b
                                                m
                                             
                                             
                                                k
                                                i
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The order quantity for item i is:

                           
                              (13)
                              
                                 
                                    
                                       Q
                                       i
                                       m
                                    
                                    =
                                    max
                                    
                                       (
                                       
                                          x
                                          
                                             i
                                             
                                                j
                                                *
                                             
                                          
                                          m
                                       
                                       ,
                                       
                                          q
                                          
                                             i
                                             
                                                j
                                                *
                                             
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        where j* =Argmin
                           {j=
                        
                        0,1,…, 
                        
                           J}
                        
                        
                           
                              
                                 Z
                                 
                                    i
                                    j
                                 
                                 m
                              
                              ,
                           
                         and

                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             Z
                                             
                                                i
                                                j
                                             
                                             m
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      D
                                                      i
                                                   
                                                   
                                                      max
                                                      (
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                         
                                                         m
                                                      
                                                      ,
                                                      
                                                         q
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                
                                                )
                                             
                                             
                                                S
                                                i
                                             
                                             +
                                             
                                                (
                                                
                                                   
                                                      max
                                                      (
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                         
                                                         m
                                                      
                                                      ,
                                                      
                                                         q
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   2
                                                
                                                )
                                             
                                             
                                                h
                                                i
                                             
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                A
                                             
                                             +
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                A
                                             
                                             
                                                D
                                                i
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             +
                                             
                                             
                                                b
                                                m
                                             
                                             
                                                k
                                                i
                                             
                                             max
                                             
                                                (
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   m
                                                
                                                ,
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                )
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Note that Zm
                         becomes:

                           
                              (15)
                              
                                 
                                    
                                       Z
                                       m
                                    
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       I
                                    
                                    
                                       Z
                                       
                                          i
                                          
                                             j
                                             *
                                          
                                       
                                       m
                                    
                                    +
                                    
                                       V
                                       m
                                    
                                    −
                                    
                                       b
                                       m
                                    
                                    
                                       y
                                       m
                                    
                                    .
                                 
                              
                           
                        
                     

Next, we must check that the resulting capacity falls into the mth segment of the piecewise-linear approximation for the capacity cost. The adjustment to assure that the capacity level falls within the correct segment is difficult because the capacity level is dependent on I decision variables, namely, the order quantities for each item. Lemma 1 allows us to ignore certain segments based on a simple check of the segment solution's final capacity level.


                        
                           Lemma 1
                           
                              If the solution provided by (
                              
                                 13
                              
                              ) for a particular segment
                              
                                 
                                    m
                                    ˜
                                 
                               
                              results in a capacity level
                              
                                 
                                    
                                       K
                                       
                                          m
                                          ˜
                                       
                                    
                                    <
                                    
                                       y
                                       
                                          m
                                          ˜
                                       
                                    
                                    ,
                                 
                               
                              then the overall optimal capacity level K* will not uniquely lie in segment
                              
                                 
                                    
                                       m
                                       ˜
                                    
                                    .
                                 
                              
                           


                              Proof. Assume the condition from Lemma 1 is true. Identify the segment w such that 
                                 
                                    
                                       y
                                       w
                                    
                                    ≤
                                    
                                       K
                                       
                                          m
                                          ˜
                                       
                                    
                                    ≤
                                    
                                       y
                                       
                                          w
                                          +
                                          1
                                       
                                    
                                    ,
                                 
                               and let 
                                 
                                    
                                       Q
                                       i
                                       w
                                    
                                    =
                                    
                                       Q
                                       i
                                       
                                          m
                                          ˜
                                       
                                    
                                    ,
                                 
                               resulting in a feasible capacity level for segment w of 
                                 
                                    
                                       K
                                       w
                                    
                                    =
                                    
                                       K
                                       
                                          m
                                          ˜
                                       
                                    
                                    .
                                 
                               Since the capacity cost is non-decreasing in capacity level, there exists a feasible solution in segment w with identical inventory-related costs and with capacity costs that are less than or equal to the capacity costs for segment 
                                 
                                    m
                                    ˜
                                 
                              .□


                        Algorithm 1
                         allows us to adjust the original solution for segment m to fall within the appropriate capacity interval. While this solution procedure does not guarantee an optimal solution to the common resource capacity decision problem when facing all-units quantity discounts, it does provide an efficient solution that is solvable regardless of the functional form of the cost of capacity expansion. In Step 3, we utilize Lemma 1 to only consider capacity adjustments where the final capacity level requires reduction to achieve feasibility.

We now relax the assumption that capacity can only expand from the initial capacity level, allowing firms to lease out excess capacity as an additional source of revenue. The solution technique is similar to the procedure described in Section 3.4, with minor modifications to (9) and (10) to incorporate capacity reductions. Let r1, r2, …, rR be the segments of the piecewise-linear capacity cost approximation that result in capacity reduction, and let e1, e2, …, eE be the segments associated with capacity expansion. Additionally, let yK
                     
                     0 = ye
                     
                     1 = yr
                     
                     1 = K
                     0 (thus VK
                     
                     0 = Vr
                     
                     1 = Ve
                     
                     1 = 0), yr
                     
                     (
                     
                        R+
                     
                     1) = 0, ye
                     
                     (
                     
                        E+
                     
                     1) = ∞, and remove the conditions from Section 3 that V
                     0 = V
                     1 = 0 and b
                     0 = 0. Updating (9) and (10), we have:

                        
                           (16)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                V
                                                m
                                             
                                             =
                                             
                                             
                                             
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            
                                                               b
                                                               
                                                                  r
                                                                  1
                                                               
                                                            
                                                            
                                                               (
                                                               
                                                                  y
                                                                  
                                                                     r
                                                                     2
                                                                  
                                                               
                                                               −
                                                               
                                                                  y
                                                                  
                                                                     r
                                                                     1
                                                                  
                                                               
                                                               )
                                                            
                                                            +
                                                            
                                                               b
                                                               
                                                                  r
                                                                  2
                                                               
                                                            
                                                            
                                                               (
                                                               
                                                                  y
                                                                  
                                                                     r
                                                                     3
                                                                  
                                                               
                                                               −
                                                               
                                                                  y
                                                                  
                                                                     r
                                                                     2
                                                                  
                                                               
                                                               )
                                                            
                                                            +
                                                            ⋯
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                            +
                                                            
                                                            
                                                               b
                                                               
                                                                  m
                                                                  −
                                                                  1
                                                               
                                                            
                                                            
                                                               (
                                                               
                                                                  y
                                                                  m
                                                               
                                                               −
                                                               
                                                                  y
                                                                  
                                                                     m
                                                                     −
                                                                     1
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               for
                                                               
                                                            
                                                            
                                                            m
                                                            =
                                                            r
                                                            2
                                                            ,
                                                            r
                                                            3
                                                            ,
                                                            …
                                                            ,
                                                            r
                                                            R
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               for
                                                               
                                                            
                                                            
                                                            m
                                                            =
                                                            r
                                                            1
                                                            ,
                                                            e
                                                            1
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               b
                                                               
                                                                  e
                                                                  1
                                                               
                                                            
                                                            
                                                               (
                                                               
                                                                  y
                                                                  
                                                                     e
                                                                     2
                                                                  
                                                               
                                                               −
                                                               
                                                                  y
                                                                  
                                                                     e
                                                                     1
                                                                  
                                                               
                                                               )
                                                            
                                                            +
                                                            
                                                               b
                                                               
                                                                  e
                                                                  2
                                                               
                                                            
                                                            
                                                               (
                                                               
                                                                  y
                                                                  
                                                                     e
                                                                     3
                                                                  
                                                               
                                                               −
                                                               
                                                                  y
                                                                  
                                                                     e
                                                                     2
                                                                  
                                                               
                                                               )
                                                            
                                                            +
                                                            ⋯
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                            +
                                                            
                                                            
                                                               b
                                                               
                                                                  m
                                                                  −
                                                                  1
                                                               
                                                            
                                                            
                                                               (
                                                               
                                                                  y
                                                                  m
                                                               
                                                               −
                                                               
                                                                  y
                                                                  
                                                                     m
                                                                     −
                                                                     1
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               for
                                                               
                                                            
                                                            
                                                            m
                                                            =
                                                            e
                                                            2
                                                            ,
                                                            e
                                                            3
                                                            ,
                                                            …
                                                            ,
                                                            e
                                                            E
                                                            ,
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     and

                        
                           (17)
                           
                              
                                 
                                    
                                       
                                          
                                             G
                                             
                                                (
                                                K
                                                )
                                             
                                             =
                                             
                                             
                                             
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            
                                                               V
                                                               m
                                                            
                                                            +
                                                            
                                                               b
                                                               m
                                                            
                                                            
                                                               (
                                                               K
                                                               −
                                                               
                                                                  y
                                                                  m
                                                               
                                                               )
                                                            
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               V
                                                               m
                                                            
                                                            
                                                            +
                                                            
                                                            
                                                               b
                                                               m
                                                            
                                                            
                                                               (
                                                               K
                                                               
                                                               −
                                                               
                                                               
                                                                  y
                                                                  m
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      if
                                                      
                                                   
                                                   
                                                      y
                                                      
                                                         m
                                                         +
                                                         1
                                                      
                                                   
                                                   ≤
                                                   K
                                                   <
                                                   
                                                      y
                                                      m
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      if
                                                      
                                                   
                                                   K
                                                   =
                                                   
                                                      K
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      if
                                                      
                                                   
                                                   
                                                      y
                                                      m
                                                   
                                                   ≤
                                                   K
                                                   <
                                                   
                                                      y
                                                      
                                                         m
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   
                                                      for
                                                      
                                                   
                                                   
                                                   m
                                                   
                                                   =
                                                   
                                                   r
                                                   1
                                                   ,
                                                   r
                                                   2
                                                   ,
                                                   …
                                                   ,
                                                   r
                                                   R
                                                
                                             
                                          
                                          
                                             
                                          
                                          
                                             
                                                
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   
                                                      for
                                                      
                                                   
                                                   
                                                   m
                                                   
                                                   =
                                                   
                                                   e
                                                   1
                                                   ,
                                                   e
                                                   2
                                                   ,
                                                   …
                                                   ,
                                                   e
                                                   E
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     which are illustrated in Fig. 1
                     . We maintain non-negativity for all the slopes (bm
                     ) of the piecewise-linear approximation. To achieve the reduction in cost associated with a capacity reduction, the order of the segment endpoints is reversed for segments r1, r2, …, rR. Once the modifications are implemented, utilize Algorithm 1 to solve for the appropriate capacity level and order quantities.

In this section, we explore the necessary changes to implement and solve the capacitated common resource problem when facing incremental as opposed to all-units quantity discounts. There are two distinct differences between all-units and incremental quantity discounts. First, with all-units quantity discounts, the optimal order quantity often falls on a price-break quantity; therefore, we calculate the order quantities in Section 3.3 as 
                        
                           
                              Q
                              i
                              m
                           
                           =
                           max
                           
                              (
                              
                                 x
                                 
                                    i
                                    
                                       j
                                       *
                                    
                                 
                                 m
                              
                              ,
                              
                                 q
                                 
                                    i
                                    
                                       j
                                       *
                                    
                                 
                              
                              )
                           
                           .
                        
                      Alternatively, with incremental discounts the optimal order quantity never falls on a price-break quantity.

Second, incremental discounts only apply each specified discount to any units that fall within that discount's respective quantity interval, whereas all-units discounts apply to all units in the order. Following standard convention, let Rij
                      represent the total purchasing cost associated with qij
                      units when facing incremental discounts:

                        
                           (18)
                           
                              
                                 
                                    
                                       
                                          R
                                          
                                             i
                                             j
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             p
                                             
                                                i
                                                0
                                             
                                             I
                                          
                                          
                                             q
                                             
                                                i
                                                1
                                             
                                          
                                          +
                                          
                                             p
                                             
                                                i
                                                1
                                             
                                             I
                                          
                                          
                                             (
                                             
                                                q
                                                
                                                   i
                                                   2
                                                
                                             
                                             −
                                             
                                                q
                                                
                                                   i
                                                   1
                                                
                                             
                                             )
                                          
                                          +
                                          
                                             p
                                             
                                                i
                                                2
                                             
                                             I
                                          
                                          
                                             (
                                             
                                                q
                                                
                                                   i
                                                   3
                                                
                                             
                                             −
                                             
                                                q
                                                
                                                   i
                                                   2
                                                
                                             
                                             )
                                          
                                          +
                                          ⋯
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          
                                          
                                             p
                                             
                                                i
                                                (
                                                j
                                                −
                                                1
                                                )
                                             
                                             I
                                          
                                          
                                             (
                                             
                                                q
                                                
                                                   i
                                                   j
                                                
                                             
                                             −
                                             
                                                q
                                                
                                                   i
                                                   (
                                                   j
                                                   −
                                                   1
                                                   )
                                                
                                             
                                             )
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           p
                           
                              i
                              j
                           
                           I
                        
                      is the per-unit price for units (Qi
                      – qij
                     ) purchased when facing incremental quantity discounts and qij
                      ≤ Qi
                      < qi
                     
                     (
                     
                        j
                     
                     +1). Thus, the total purchasing cost associated with ordering Qi
                      units when facing incremental discounts and qij
                      ≤ Qi
                      < qi
                     
                     (
                     
                        j
                     
                     +1) is:

                        
                           (19)
                           
                              
                                 P
                                 
                                    (
                                    
                                       Q
                                       i
                                    
                                    )
                                 
                                 =
                                 
                                    p
                                    
                                       i
                                       j
                                    
                                    I
                                 
                                 
                                    (
                                    
                                       Q
                                       i
                                    
                                    −
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    )
                                 
                                 +
                                 
                                    R
                                    
                                       i
                                       j
                                    
                                 
                                 .
                              
                           
                        
                     
                  

Given the two differences between all-units and incremental quantity discounts, we require a modification to the solution algorithm. Similar to the all-units case, we calculate the minimum point 
                        
                           x
                           
                              i
                              j
                           
                           m
                        
                      for item i in price level j in segment m using first-order conditions:

                        
                           (20)
                           
                              
                                 
                                    x
                                    
                                       i
                                       j
                                    
                                    m
                                 
                                 =
                                 
                                    
                                       
                                          2
                                          
                                             D
                                             i
                                          
                                          
                                             (
                                             
                                                S
                                                i
                                             
                                             +
                                             
                                                R
                                                
                                                   i
                                                   j
                                                
                                             
                                             −
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                I
                                             
                                             
                                                q
                                                
                                                   i
                                                   j
                                                
                                             
                                             )
                                          
                                       
                                       
                                          
                                             h
                                             i
                                          
                                          
                                             p
                                             
                                                i
                                                j
                                             
                                             I
                                          
                                          +
                                          2
                                          
                                             b
                                             m
                                          
                                          
                                             k
                                             i
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     
                  

Adapting from Munson and Hu (2010), the optimal order quantity for item i among these candidate values 
                        
                           x
                           
                              i
                              j
                           
                           m
                        
                      is:

                        
                           (21)
                           
                              
                                 
                                    Q
                                    i
                                    m
                                 
                                 =
                                 
                                    x
                                    
                                       i
                                       
                                          j
                                          *
                                       
                                    
                                    m
                                 
                                 ,
                              
                           
                        
                     where j* =Argmin
                        {j=
                     
                     0,1,…, 
                     
                        J}
                     
                     
                        
                           
                              Z
                              
                                 i
                                 j
                              
                              m
                           
                           ,
                        
                      and

                        
                           (22)
                           
                              
                                 
                                    
                                       
                                          Z
                                          
                                             i
                                             j
                                          
                                          m
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   D
                                                   i
                                                
                                                
                                                   Q
                                                   i
                                                   m
                                                
                                             
                                             )
                                          
                                          
                                             (
                                             
                                                S
                                                i
                                             
                                             +
                                             
                                                R
                                                
                                                   i
                                                   j
                                                
                                             
                                             −
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                I
                                             
                                             
                                                q
                                                
                                                   i
                                                   j
                                                
                                             
                                             )
                                          
                                          +
                                          
                                             (
                                             
                                                
                                                   h
                                                   i
                                                
                                                2
                                             
                                             )
                                          
                                          
                                             [
                                             
                                                R
                                                
                                                   i
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                             +
                                             
                                             
                                                p
                                                
                                                   i
                                                   j
                                                
                                                I
                                             
                                             
                                                (
                                                
                                                   Q
                                                   i
                                                   m
                                                
                                                −
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                )
                                             
                                             ]
                                          
                                          +
                                          
                                             p
                                             
                                                i
                                                j
                                             
                                             I
                                          
                                          
                                             D
                                             i
                                          
                                          +
                                          
                                             b
                                             m
                                          
                                          
                                             k
                                             i
                                          
                                          
                                             Q
                                             i
                                             m
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     Again, Zm
                      follows (15).


                     Algorithm 2
                      incorporates the necessary modifications to Algorithm 1 to handle incremental quantity discounts. Note that, due to the similarities between Algorithms 1 and 2, it is straightforward to combine them for a scenario where a firm's suppliers offer a mix of all-units and incremental quantity discounts. This is possible because the order quantity calculations in Algorithms 3 and 4 are separable by item. Thus, as long as those algorithms are solved simultaneously using the same λ, items with both forms of quantity discounts can be combined.

The two key attributes that define the effectiveness and applicability of an algorithm are its accuracy and computational run-time. For our algorithms, the accuracy is difficult to measure for multiple reasons. First and foremost, when there are more than a handful of items, the true optimal solution becomes too computationally cumbersome to solve. Second, to the best of our knowledge, there are no other algorithms for comparison that allow for capacity expansions in the capacitated common resource problem when facing quantity discounts. The best alternative to test the accuracy of our algorithm is to “fix” capacity and compare our solutions to the fixed capacity problems from prior literature. Rubin and Benton (1993) and Moussourakis and Haksever (2008) solve the fixed capacity problem when facing all-units quantity discounts, and, similarly, Rubin and Benton (2003) and Haksever and Moussourakis (2008) solve the problem when facing incremental quantity discounts.

For the comparisons, we define an arbitrarily high capacity expansion cost to prevent our algorithms from considering capacity expansion. Rubin and Benton (1993) originally provided two examples with unique demands and cost structures. The first example, the “Benton Example,” has 10 items and 3 price levels, and it is incorporated into our Studies 1 and 2 with different fixed capacity levels. Study 1 uses a capacity of 2350 square feet, whereas Study 2 uses a capacity of 1350 square feet. The second example, the “Fortune 500 Example,” has 15 items and 4 price levels, and it is utilized for our Study 3 with a fixed capacity level of 35,000 square feet. All demand and cost information for the two examples is presented in Appendix B. In all six studies (three all-units and three incremental discounts), if an item has fewer than the maximum number of price levels, we introduce “dummy” price levels where the price does not change.
Table 2
                         illustrates the competitiveness of our algorithm compared to the prior studies of Rubin and Benton (1993) and Moussourakis and Haksever (2008). The algorithm penalty compares our total cost with the lowest cost found by the two prior algorithms. For example, in Study 2 our algorithm provides a total cost that is 0.005% higher than the best solution from prior literature. For each all-units quantity discount study, our algorithm performs comparably to the prior fixed capacity algorithms.


                        Rubin and Benton (2003) and Haksever and Moussourakis (2008) analyze similar examples to those in Rubin and Benton (1993), except that they use incremental discounts and a slightly different quantity discount schedule for the Benton Example. Studies 4 and 5 incorporate the Benton Example with the incremental quantity discount schedule and fixed capacity levels of 2350 square feet and 1350square feet, respectively. The incremental quantity discount schedule is presented in Appendix B. Study 6 utilizes the Fortune 500 Example with a fixed capacity level of 35,000 square feet. There is no adjustment in the quantity discount schedule for the Fortune 500 Example. Table 3
                         displays the competitiveness of our algorithm compared to Rubin and Benton (2003) and Haksever and Moussourakis (2008). Once again, our algorithm performs comparably with the prior algorithms.

We performed a computational run-time analysis to show that our algorithms have reasonable computational run-time requirements even for large problems and to understand the key drivers that increase the algorithms’ run time. Following Nahmias (2009) we utilized a capacity cost function with the following functional form:

                           
                              (23)
                              
                                 
                                    G
                                    
                                       (
                                       K
                                       )
                                    
                                    =
                                    r
                                    
                                       
                                          (
                                          K
                                          −
                                          
                                             K
                                             0
                                          
                                          )
                                       
                                       a
                                    
                                    ,
                                 
                              
                           
                        where r is a constant of proportionality and a is a measure of the ratio between the incremental and average cost of an additional unit of capacity. This functional form of capacity cost allows for the function to be strictly concave (a <1), linear (a = 1), or strictly convex (a >1). Table 4
                         shows the structural input values considered in our study that we expected to potentially influence run time. For each combination, ten trials were run with randomly generated data for the other system parameters (Table 5
                        ). There are a total of 1920 trials split evenly between the all-units and incremental quantity discounts. The solution procedure was implemented in Microsoft's Excel® using VBA® and all trials were run on a PC with an Intel® Core™ 2 Duo CPU @ 3.00Gigahertz. The computational times are reported in CPU time of this machine.

Traditionally, the primary driver of variability in computational run time for algorithms determining order quantities in a multi-item inventory system is the number of different items. Table 6
                         summarizes the run time as a function of the number of unique items for both all-units and incremental quantity discounts. Our algorithms are able to efficiently solve every trial in under two minutes with up to 5000 items, five price levels, and ten segments in the piecewise-linear approximation of capacity cost. The summary statistics include all 80 trials for each form of quantity discount and number of items combination.

After fixing the number of items, further analysis found that the number of segments M
                        +1 in the piecewise-linear approximation of capacity cost is another primary driver of variability in the computational run time. Table 7
                         illustrates the impact, where on average we found a 39% increase in run time associated with increasing the number of segments from 5 to 10. The impact of the increase in the number of segments seems to be enhanced by an increase in the number of items. An increase in the number of segments in the piecewise-linear function increases the accuracy of the capacity cost approximation, but it significantly increases run time.

The number of price levels in the quantity discount schedule, the functional form of capacity cost (concave vs. convex), and the initial capacity level did not show consistent results in terms of their impact on the variability of computational run time. Table 6 illustrates an interesting insight in that the form of quantity discount impacts the computational run time of the algorithms. It is apparent that all-units quantity discounts result in longer computational run times in comparison with incremental discounts. This result is counterintuitive in that traditional all-units quantity discount problems are typically easier to solve. We believe that this counterintuitive finding is a result of the reduced likelihood of an expansion with incremental discounts (see Section 6.2). Therefore the algorithm considers fewer segments in the cases where the capacity expansion costs outweigh the savings from the incremental quantity discounts.

To test the limitations of our algorithms with respect to the two primary factors causing an increase in run time, namely the number of items and the number of segments, we tested our algorithms’ computational capabilities with scenarios containing up to 15,000 items and 500 segments. For this sub-experiment, we used all-units quantity discounts, five price levels in the quantity discount schedule, a tight (low) initial capacity level, and a concave capacity cost function. Table 8
                         shows that our algorithm can manage large-scale problems, as all solution times in our studies, even for 15,000 items, were well below one hour in length. Most importantly, the capacity cost function can be closely approximated by several hundred small segments, as desired.

As discussed previously, multiple articles provide examples with solutions for the capacitated common resource problem when facing quantity discounts with a fixed capacity level. How much is the assumption of a fixed capacity level costing firms? Or in other words, what are the potential savings from allowing a variable capacity level? We analyze this question through the use of the Fortune 500 Example for both all-units and incremental quantity discounts. In the original examples, the fixed capacity level is 35,000square feet. This constraint is not very restrictive in that the unconstrained solution when facing all-units quantity discounts results in an optimal capacity level of less than 36,000square feet. To fully illustrate the potential for capacity expansion, we calculated the unconstrained optimal capacity level with no quantity discounts. An undiscounted system requires roughly 18,000square feet, so that represents a natural initial capacity level. Our example illustrates the decisions facing managers who have recently been offered quantity discounts and are trying to make the appropriate order quantity and capacity level decisions. The example also illustrates the potential cost savings of using our algorithms over those previously seen in the literature.

To begin this example, we consider the following linear capacity cost function with an initial capacity level K
                        0 when K ≥ K
                        0:

                           
                              (24)
                              
                                 
                                    G
                                    
                                       (
                                       K
                                       )
                                    
                                    =
                                    2
                                    
                                       (
                                       K
                                       −
                                       
                                          K
                                          0
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        
                     

This linear capacity cost function (also used by Hall (1988)) is our baseline model. Before beginning the analysis, we remove the overpowering effect of purchasing costs. Specifically, let us remove the non-discretionary costs, which are calculated as the minimum possible annual purchasing cost (i.e., a full year's demand at the minimum price per unit). For all-units quantity discounts, the yearly non-discretionary costs total $2,446,654. From this point forward we will only refer to the discretionary costs that proper decisions on order quantities and capacity level can influence.

Prior literature limits the functional form of capacity cost to a linear or convex function. However, as mentioned previously, with the existence of economies of scale it is possible that the capacity cost is a concave function with respect to the size of the expansion. We present (25) as an example of a concave function factoring in economies of scale and the presence of an initial capacity level K
                        0 when K ≥ K
                        0:

                           
                              (25)
                              
                                 
                                    G
                                    
                                       (
                                       K
                                       )
                                    
                                    =
                                    50
                                    
                                       
                                          (
                                          K
                                          −
                                          
                                             K
                                             0
                                          
                                          )
                                       
                                       
                                          0.6
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Note that (24) and (25) were constructed to be proportional to inventory costs and scaled to provide similar expansion costs despite the differences in functional form.

At this point we compare four solutions: (1) fixed capacity, (2) linear capacity using (24), (3) concave capacity using (25), and (4) unconstrained capacity. The inclusion of the unconstrained capacity solution provides a reference point for the analysis. For all subsequent analyses, we set M+1 = 10 and K
                        0 = 18,000 square feet. Table 9
                         compares the four solutions when facing all-units quantity discounts. It is clear that the ability of a firm to increase its capacity level when quantity discount opportunities exist may result in significant savings in its discretionary costs ($17,106 or 12.48% when using the linear capacity solution). The flexibility of our algorithm to handle concave capacity functions provides firms even more benefit through a better approximation of their expansion costs when economies of scale are present, resulting in an additional cost reduction of $5031 (4.19%).

For incremental quantity discounts, we used the same setup as in the all-units quantity discount example. The non-discretionary costs for the incremental discounts total $2,474,354. Table 10
                         provides the incremental quantity discount example results. Unlike the all-units quantity discount example, the incremental discounts had identical solutions for the linear and fixed capacities. Only the concave capacity cost function resulted in a capacity expansion of 3465 square feet. This capacity expansion led to a cost savings of $2931 (1.58%).

To better understand the difference in the expansion decision when facing all-units and incremental quantity discounts, consider the following “bang for the buck” analysis. Specifically, consider the cost savings per square foot between the unconstrained capacity solution and the fixed capacity solution when facing all-units and incremental quantity discounts. For all-units quantity discounts, we find an average cost savings of $1.99 per square foot. Meanwhile, for incremental quantity discounts, we find an average cost savings of $0.74 per square foot. This difference helps explain why a firm facing all-units quantity discounts is more likely to find an expansion worthwhile because it experiences a higher “bang for the buck.” The lower “bang for the buck” associated with incremental quantity discounts is a result of the smaller reductions in the average price per unit and the inability to experience a large total purchase price reduction at the price-break quantities.

In this section, we conduct sensitivity analysis to examine how the capacity expansion decision changes across various demand, cost, and quantity discount schedule characteristics to understand the key factors leading to, or preventing, capacity expansion. The results and insights come from a full-factorial experimental design resulting in 729 different runs (three levels of six characteristics, 36 = 729). Our analysis focuses on all-units quantity discounts based on the findings in Section 6.2 that there is more variability in the capacity expansion decision compared to incremental discounts. The baseline values come from the Fortune 500 Example with an initial capacity level of 18,000square feet and a concave capacity cost function:

                           
                              (26)
                              
                                 
                                    G
                                    
                                       (
                                       K
                                       )
                                    
                                    =
                                    100
                                    
                                       
                                          (
                                          K
                                          −
                                          
                                             K
                                             0
                                          
                                          )
                                       
                                       
                                          0.6
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Starting with the baseline model, we varied the annual demand, setup cost, holding cost percentage, square footage required per unit of each item, size of the discounts, and quantities required to achieve the discounts (price-break quantities). For each parameter, we considered a “high” value at 15% higher than the baseline value, as well as a “low” value at 15% lower than the baseline value.

The algorithm recommended capacity expansion for 421 (57.8%) of the 729 total runs. Table 11
                         provides a breakdown of the percentage of runs that led to a capacity expansion for each level (low, baseline, and high) of each characteristic. For example, of the 243 runs with low annual demand, the algorithm recommended capacity expansion in 49% of those runs. The most influential parameter was the discount size. None of the runs with a low or small discount size resulted in capacity expansion, whereas 99.6% of the runs with a high or large discount size resulted in capacity expansion. On the other extreme, variability in the setup cost, holding cost percentage, and price-break quantities had minimal to no effect on the likelihood of a capacity expansion. Although not as impactful as the discount size, the annual demand per item and the required capacity for each unit did play a role in the capacity expansion decision. Specifically, as those two characteristics increased, the likelihood that the algorithm recommended a capacity expansion rose.

To better understand the factors driving capacity expansion, let us define a “large” expansion as an expansion resulting in a final capacity level of at least 30,000square feet (a 67% increase). Of the 421 runs resulting in capacity expansion, 113 runs resulted in a large expansion. Examining only those 113 runs, it is interesting to note the changes in key characteristics that influenced the capacity expansion decision. Table 12
                         shows a breakdown of the percentage of the 113 runs resulting in a large expansion for each level of each characteristic. For example, 22% of the 113 runs resulting in a large expansion had low annual demand. The discount size continued to be a major factor in the capacity expansion decision, as a low discount size never resulted in a large expansion. Two new major factors emerged when considering a large expansion, namely the price-break quantities and the required capacity of each unit. Specifically, large expansions primarily occurred when the price-break quantities were high and the capacity per unit was high.

When facing all-units quantity discounts, it is well known that the order quantity often falls on a price-break quantity (Hadley & Whitin, 1963). Our sensitivity analysis found 6506 order quantities across the 729 runs that took advantage of quantity discounts. Of the 6506 order quantities greater than or equal to the first price-break quantity, 5788 (89%) fell on a price-break quantity in the discount schedule. And the 718 (11%) that did not fall on a price-break quantity fell exclusively inside of the first (lowest) discount level (instead of a higher discount level). This is an important insight for managers who face all-units quantity discounts with capacity limitations but may not wish to code and run the full algorithm. This insight suggests a simple heuristic rule for all-units discounts with capacity constraints that would significantly reduce the problem complexity: only consider order sizes at price-break quantities. Alternatively, such a heuristic would not work with incremental quantity discounts, as it remains suboptimal to order at a price-break quantity under that pricing scheme.

Our numerical studies provide some important managerial implications. First, our algorithms are capable of accurately solving fixed-capacity inventory problems as well as dynamic-capacity inventory problems with quantity discounts in an efficient manner. Problems with up to 15,000 items and 500 piecewise-linear segments can be solved in under an hour of CPU time. This allows for nearly all types of firms (e.g., manufacturers, retailers, and other service organizations) to efficiently solve their multi-product inventory problems regardless of their capacity restrictions or functional form of capacity cost.

Second, the ability to expand capacity can provide significant savings to the firm. Clearly, actual savings would depend on the specific situation. Savings will be particularly large when there is restrictive capacity to begin with, capacity expansion costs are relatively small, many products are purchased and stored, purchase discounts for large orders are high, and/or price-break quantities in purchase schedules are quite a bit higher than undiscounted EOQ levels for those products.

Third, unlike much of the previous literature, our models can accommodate any functional form of capacity expansion. Some capacity expansions are relatively inexpensive for small additions but more expensive for larger ones (convex costs), while other forms of expansion, such as construction of a new wing of a warehouse, may exhibit economies of scale (concave costs). Because our model can accommodate several hundred piecewise-linear segments, the modeler can essentially approximate the capacity cost expansion function arbitrarily closely. Moreover, as seen in our numerical studies, accurate representation of capacity costs can reduce annual costs above and beyond the savings seen from implementing a dynamic capacity level.

Fourth, when facing all-units quantity discounts, 89% of the order quantities in our study that eclipsed the initial price-break quantity equaled one of the price-break quantities in the discount schedule. Managers may use this knowledge to develop heuristics when facing all-units quantity discounts with capacity constraints. Furthermore, all-units quantity discounts appear to be more likely to generate capacity expansion than parallel incremental discounts would be due to the higher “bang for the buck” associated with expansion opportunities when applied to all-units purchase schedules.

Finally, our studies suggest that the primary characteristic that influences the capacity expansion decision is the size of the quantity discount offered, but variability in demand and capacity per unit influence the expansion decision as well. Therefore, our algorithms become even more valuable for firms with suppliers offering significant discounts. This is especially true in situations where quantity discounts were not offered previously. The Fortune 500 example of Section 6.2 illustrates this perfectly, as the introduction of quantity discounts resulted in roughly a 100% increase in desired capacity (in an unconstrained setting), leading to capacity expansion in nearly all scenarios with large discounts.

@&#CONCLUSIONS@&#

We provide an approximation technique to determine efficient solutions for a constrained, multi-product lot-sizing problem that incorporates all-units and/or incremental quantity discounts and considers resource capacity as a decision variable. To the best of our knowledge, this study represents the first to consider quantity discounts for multiple products while simultaneously allowing capacity to be a decision variable. This provides purchasing managers a more realistic algorithm, where they have multiple levers to manage their inventory at the lowest cost possible. A second key contribution of our study is the ability of our solution algorithm to incorporate any functional form of capacity cost. Previous models in the literature restrict the functional form of capacity cost (e.g., convex or linear), which in turn limits the model's applicability. Our algorithms allow for any form of capacity cost function (e.g., concave, convex–concave, concave–convex, etc.). Concave functions, in particular, can incorporate annualized economies-of-scale benefits often seen in larger expansions. A third contribution is the ability of our algorithms to incorporate a mix of all-units and incremental quantity discounts on the items being purchased. This is especially critical for firms that work with numerous suppliers. Inevitably, with a large supplier base the firm will see a mix of quantity discounts forms. Our algorithms allow for a mix of two of the most common forms of quantity discounts simultaneously all under a single common resource constraint.

Our algorithms can accommodate practical problems incorporating simultaneous lot-sizing decisions for thousands of items in real time. In addition, the capacity cost functions can be parsed into several hundred piecewise-linear segments without seriously impacting the run time for decision makers.

As with all models, there are limiting assumptions required to achieve analytical tractability. Future researchers can extend our work by removing some of the typical EOQ assumptions such as deterministic demand, infinite production rate, zero lead time, and no backorders. There are two other natural areas of extension to explore. First, “What if the form of quantity discount was changed to business volume discounts?” Second, “What if the order timing was changed to having all products on a fixed cycle length?” Prior literature considers these extensions in isolation, but not along with quantity discounts and a flexible common resource capacity.

Similar to the way in which the Japanese made just-in-time production economically viable by converting setup cost from a fixed parameter into a decision variable that could be reduced, this paper takes a previously fixed constraint (capacity level) and converts it into a decision. Future researchers and managers are encouraged to examine all operations problems through such a lens. Spending money to relax a fixed constraint may well open a floodgate of new opportunities to increase profits.


                     
                     
                  

For the Benton Example, Si
                      = $5, and hi
                      = 100%, ∀i. For the Fortune 500 Example, Si
                      = $125, and hi
                      = 36%, ∀i.


                     
                        Table B.1
                     
                     
                     , 
                     
                        Table B.2
                     
                     
                     , 
                     
                        Table B.3
                     
                     
                     , 
                     
                        Table B.4
                     
                     
                     , 
                     
                        Table B.5
                     
                     
                  

@&#REFERENCES@&#

