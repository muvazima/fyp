@&#MAIN-TITLE@&#A maturity model for the Spanish software industry based on ISO standards

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A Software Engineering Maturity Model was produced for Spanish software industry.


                        
                        
                           
                           The model is based on standards: ISO/IEC 12207, ISO/IEC 15504 and ISO/IEC 17021.


                        
                        
                           
                           It allows a certification of the organizational maturity for software enterprises.


                        
                        
                           
                           Helping to improve the software development quality in all types of enterprises.


                        
                        
                           
                           Currently there are 38 development enterprises certified by AENOR in this model.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Maturity model

Maturity levels

ISO/IEC 15504

ISO/IEC 12207

AENOR

Certification

@&#ABSTRACT@&#


               
               
                  Many organizations are implementing process improvement models, seeking to increase their organizational maturity for software development. However, implementing traditional maturity models involves a large investment (as regards money, time and resources) which is beyond the reach of vast majority of small organizations. This paper presents the use and adaptation of some ISO models in the creation of an organizational maturity model for the Spanish software industry. This model was used satisfactorily to (i) improve the software processes of several Spanish small firms, and (ii) obtain an organizational maturity certification for software development, granted by the Spanish Association for Standardization and Certification.
               
            

@&#INTRODUCTION@&#

The software industry is made up mainly of small and medium software companies [1] which favor the growth of national economies [2]. One important concern of software industry companies has been the development of software products with an optimum use of resources, time and costs [3]; in other words, the quest is to be efficient. In this respect, small companies need efficient Software Engineering practices that are suitable for their particular characteristics. These practices would support the development of products of high quality [2] which must evolve if they are to adapt to new demands and scenarios [4] as they seek to make these companies become more competitive. In recent years, a key research area in the software engineering community has been the evaluation of the maturity of software processes, given its impact on the efficiency of the software product development process [5]. According to [6], a maturity model “contains the essential elements of effective processes for one or more disciplines and describes an evolutionary improvement path from ad-hoc, immature processes to disciplined, mature processes with improved quality and effectiveness”. Having efficient processes by means of organizational maturity helps a firm understand its position in terms of process management and execution [5]. This in turn leads to an increase in software product quality since, according to [7], there is a close relationship between software process quality and the software product quality obtained using this process.

It is precisely because of the considerations outlined above that software development firms are putting greater and greater emphasis on building their software products to a level of quality that allows them to meet the needs of their clients satisfactorily, as they strive to compete adequately in the local and international markets. At the present time, the strategy of gaining certification in one quality model or another is used by software development companies. This is done to guarantee the quality of the enterprise's products; certification is an element that, amongst other things, marks a company out from its competitors and gives it a good sales image in the eyes of its customers. A number of software process capability/maturity models have been developed and these are being used for software process improvement/assessment by companies [8]. At the moment, the most popular and most widely-used certification in the world for cataloging the maturity of a software-development organization is CMMI-DEV [9]. For some considerable time now, however, this model has been the only option for a certification of this type. That has meant that it has had a monopoly, such that the costs (associated with consulting and more especially with certification) have put the service beyond the reach of most of the firms which form part of the software industry. On this very issue, the study carried out by [10] concludes that many firms do not adopt CMMI because of its high costs. The fact that it is inappropriate for small-scale organizations (which make up the greater part of the software industry) is another disadvantage. Moreover, this model takes a long time to implement.

Bearing in mind the above state of affairs, together with the present-day economic climate, we believed that it was important to offer another option for the certification of organizational maturity (focused on software development) to firms in the Spanish software industry (thinking especially of those small firms with fewer than 50 employees). That offer had to be both appropriate and accessible. To create this new scheme for the certification of organizational maturity for software development, we counted on the support of different actors in the country, such as the government and the industry itself, as well as the scientific-academic community in Spain. The input from this synergy brought into being a Software Engineering Maturity Model (also called Organizational Maturity Model in this paper) which allows us to assess and to certify the software enterprises by means of organizational maturity levels (in the same way as the CMMI model does). It is important to highlight that this model:
                        
                           •
                           was financed by the Spanish Ministry of Industry, Tourism and Trade.

involved researchers from universities and practitioners from organizations of the Software Engineering field, and used mainly the ISO/IEC 15504 part 2 [11] and 7 [12] standards, as well as ISO/IEC 12207 [13] for its creation.

has the backing of the Spanish Association for Standardization and Certification — AENOR (www.aenor.es), the body responsible for offering certification in this model.

has financial support (from the Spanish Ministry of Industry, Tourism and Trade), for those firms wishing to opt for this certification.

provides the certification that is required of any software development firm which wishes to bid for official tenders or contracts with the Spanish state.

This paper, then, seeks to present a Software Engineering Maturity Model that has been produced for the Spanish software industry. The model aims to be an effective tool in helping to improve the quality of software development in organizations that wish to tackle certification schemes related to organizational maturity in the context of software development. The goal is to strengthen their productivity and competitiveness in the national and international markets. The proposed certification scheme is based on: (i) a software lifecycle process model in accordance with the ISO/IEC 12207 Standard, (ii) a model for assessing the capability of these processes and the maturity of the organizations to develop software in accordance with parts 2 and 7 from ISO/IEC 15504 Standard respectively, and (iii) requirements of the audit according to ISO/IEC 17021 standard [14]. The paper also sets out the results of the use of this model in carrying out the audit of 16 firms which have obtained their corresponding AENOR Certificate for Level 2 in compliance with the Software Engineering Maturity Model created.

These introductory comments have set the scene; Section 2 goes on to present a more detailed background, in which the research methods and the project context are explained and the related work in this field is referred too. The Software Engineering Maturity Model developed is described in Section 3. Section 4 sets out the use of this model from the viewpoint of the auditors during the audit process in the enterprises aiming to achieve the certification. Finally, Section 5 discusses the work performed in relation to the development and application of the model and Section 6 presents our conclusions and future lines of work.

@&#BACKGROUND@&#

In [15] the existing methods and recommended practices for developing maturity models are analyzed. This study makes it clear that there are four stages which these methods consider for the development of a maturity model: (i) inception stage, in which the problem and participants in the development are identified, existing models are analyzed, and scope and goals are defined; (ii) elaboration stage, in which the design strategy and architecture of the model are established, that is, the levels of capability, maturity and dependencies are determined, and processes and best practices expected for each process are established; (iii) construction stage, in which instruments to measure the maturity (and capability) of the objects of interest of the model are built; and (v) deployment stage, in which the maturity model is deployed and evaluated (which may be by means of a pilot testing). The work carried out to develop the model was carried out in accordance with the activities described previously. Furthermore, some of these activities were implemented by following the variant called dual imperatives of the action-research method, as proposed in [16]. This approach describes how action-research involves a research cycle (development cycle) and a problem solving cycle (application cycle) in which knowledge is applied and discovered interactively. Taking these aspects into account, Fig. 1
                         shows a high-level view of the research strategy that we followed, in which elements such as cycles (and their outcomes), the researched object, researchers, critical reference group and stakeholders are related and integrated.

We began with a first research cycle in which the research manager planned and designed the execution of the project. The manager analyzed the goals and deliverables for the project, together with the experience, strengths and interests from the researchers and practitioners involved in the project development. Taking this analysis into account, the manager made a general plan and distributed the planned tasks to the different work groups of the project, aiming to fulfill the commitments acquired. Subsequent research cycles (related to inception, elaboration and construction stages) were carried out with the objective of developing the Software Engineering Maturity Model. This model was applied in organizations participating in the project by means of problem-solving cycles (related to the deployment stage).

At this point we will give a description of the Software Engineering Maturity Model in terms of the project context, related work, the building of the model and its application. The particular activities the method taken into account in developing a maturity model may nevertheless be clearly distinguished within the different sections making up this paper.

The Organizational Maturity Model for the Spanish Software Industry is the main outcome of a project which was subsidized by the Spanish Ministry of Industry, Tourism and Trade. The goal of this project was to create a model for the improvement of the quality of software development in Spanish companies (this focused especially on small enterprises in Spain). The model would conform to the maturity levels in the ISO/IEC 15504 norm and use the processes in the ISO/IEC 12207. In addition, a pilot project had to be conducted for the certification of a group of companies using the model produced. A group of researchers and practitioners was formed from the University of Castilla—La Mancha (www.uclm.es) and from the University of Rey Juan Carlos (www.urj.es), as well as from the standardization and certification body AENOR, the firm Kybele Consulting S.L. (www.kybeleconsulting.com) and the Prysma company (www.prysma.es). This project was conducted between January of 2009 and March 2010 and came about in response to the need to make a model available to Spanish firms that would be appropriate to their particular features. At the same time, that model was meant to be an alternative to the CMMI-DEV one [6], thus providing an open model. CMMI is, moreover, a de facto standard and although it is certainly in international use, it has no warranty from any international organization such as ISO, which at the end of 2008 published part 7 [12] of the ISO/IEC 15504 standard. This new part of the standard defines a framework for determining organizational maturity, which is seen as the extent to which an organization consistently implements processes within a defined scope that contributes to achievement of its business goals (current or projected). Furthermore, this part includes the possibility of assessing the organizations in ISO/IEC 15504 by organizational maturity levels (in the same way as the CMMI model does). That assessment allows us to rate the maturity of the organization, based on the capability of the processes established for each maturity level. Regarding the maturity levels, ISO/IEC 15504-7 suggests that each one must provide a set of processes that characterize different organizational behaviors. Thus, a maturity level consists of base and generic practices related to a predefined set of processes that improve the overall performance of the organization. For ISO/IEC 15504 the generic practices are described in the process attributes presented in Part 2 [11] (and extended in Part 5 [17]) of this standard, and the base practices are described in the processes presented in ISO/IEC 12207 [13] (or in ISO/IEC 15504-5 [17]).

@&#RELATED WORK@&#

The studies presented in [9] and [5] are two relevant pieces of work related to models that address the issue of organizational maturity. In the first study, an e-Government maturity model, called eGov-MM, is described. According to [9], “this model integrates the assessment of several technological, organizational, operational, and human capital capabilities that should be considered in relation to e-Government” and “is strongly supported by international best practices, and provides tuning mechanisms to enable its alignment with nation-wide directives on e-Government”. Meanwhile, the second study “presents an organizational maturity model of software product line engineering for evaluating the maturity of organizational dimension”, which “assumes that organizational theories, behavior and management play a critical role in the institutionalization of software product line engineering within an organization” [5]. Although both articles address the issue of organizational maturity models in specific areas of software engineering (software product lines and e-government), they do not focus explicitly on providing the small companies in the software industry with a certification scheme for maturity levels in the software development lifecycle.

For our part, in an effort to define the Organizational Maturity Model for the Spanish Software Industry, we carried out an initial comparative analysis between the maturity levels ISO/IEC 15504 and CMMI-DEV v1.2 [18], establishing differences and similarities between the maturity levels (and their processes) described in both models. The goal was to go into greater depth, obtaining a much broader vision on organizational maturity, taking as a starting point both of the most important models used in this field. Apart from CMMI-DEV [6], we considered other models related to the issue of establishing the organizational maturity of software development companies, such as: MPS-BR [19], Pathfinder (http://pathfinderalliance.ning.com), MoProSoft [20] and IT-MARK (www.esi.es). Table 1
                         shows a comparison of the proposals for the evaluation of organizational maturity, describing some of the characteristics of each of them.

After analyzing the proposals set out in the table above, the working group, under the leadership of AENOR, concluded that none of these could be applied in their present state in the case of the Spanish software industry, with its particular characteristics and needs. It was also observed that, with the exception of Pathfinder, process models of the related proposals are influenced by CMM/I. As regards this specific proposal, we did not use Pathfinder, because it employs a very old ISO 12207 standard, is really tiresome to implement and requires an excessive quantity of indicators and evidence to demonstrate that the model is being followed. Our intention was to create a norm based on the processes model for the software lifecycle proposed by the ISO/IEC 12207:2008 standard, applicable to the Spanish software industry, which is largely made up of small enterprises. That being so, we decided to develop a model using the latest versions of the ISO/IEC 15504, ISO/IEC 12207 and ISO/IEC 17021 standards, a model which would be specifically for the Spanish software industry. The model that has been created:
                           
                              •
                              Offers a new outline of organizational maturity, based on the ISO/IEC 15504 standard, parts 2 and 7, and complying with the process areas of the maturity levels of CMMI-DEV. The adjustment to fit in with CMMI-DEV was one of the objectives of the project, since this model is very well-known in Spain and our aim was to cause as little upheaval as possible in the firms.

Defines an updated, specific process model for software development based on ISO/IEC 12207:2008.

Allows there to be greater agility and adaptation of the ISO norms used, especially so these can be used by small development teams and small enterprises. At the present time, the majority of development firms are composed of small teams, a large number of which have agile methodologies. One of the goals of the project was to obtain a model that was easy to apply, over against its predecessors in ISO 15504.

Encourages process improvement based on the international standards used and also promotes an ISO certification that assesses firms at their maturity levels. Up until the present time, the few ISO 15504 certifications that existed were for capacity levels, while maturity levels are the first choice for companies in Spain.

Complies with present-day ISO standards related to information technology (such as ISO 9001, ISO 27001 and ISO 20000) and also conforms to future standards such as ISO/IEC 29110.

Meets the ISO/IEC 17021:2011 standard, in terms of auditing process; this makes it clear that the role of certifying body is carried out by AENOR.

Offers a more economical model for its implementation than that required for CMMI certifications. This is because, amongst other advantages, it needs less instruction in its use, fewer days for the audit and lower fees to pay to the certifying body.

The Software Engineering Maturity Model, created by the work group under the coordination and supervision of AENOR, is made up of three components:
                        
                           •
                           A model for assessing the capability of the processes and the maturity of software-developing organizations, based on parts 2 and 7 from ISO/IEC 15504 respectively.

A software lifecycle process model, based on ISO/IEC 12207.

An auditing process based on the ISO/IEC 17021 standard.

In the following lines each one of these components of the model produced is described.

Part 7 of the ISO/IEC 15504 sets out the basis for conducting assessments at organizational maturity levels. According to this standard, an organizational maturity level is “a point on the ordinal scale of organizational maturity that characterizes the maturity of the organization in the scope of the organizational maturity model used; each level builds on the maturity of the level below”. Furthermore, each organizational maturity level is determined by a set of processes, which allows process improvement over a predefined set of processes in which all outcomes related to base practices and management/generic practices (which give capability to the process) in the set are attained. Furthermore, according to ISO/IEC 15504-7, organizational maturity is derived from the capability assessment of each of the processes established on the maturity levels. In this respect, in this section the organizational maturity model is presented initially and after that the capability assessment model is described.

As regards the Software Engineering Maturity Model which is presented here, the outline of the grouping of processes (established for different levels of maturity) is structured as in Appendix A of the ISO/IEC 15504-7 standard. Having said that, for the creation of the maturity model we have: (i) used as our starting point the processes of the latest version of ISO/IEC 12207 (from 2008), and (ii) taken into account some studies (which members of the work group had produced previously) to define the set of processes which belong to each level of maturity, so that this model might also be suitable for very small software entities. Amongst these studies we should highlight:
                           
                              •
                              (E1) the key processes to start software process improvement in small companies presented in [21]. This paper discusses the selection and prioritization of a set of processes that are considered critical to the implementation of a process improvement project in small software enterprises. In this sense, the processes that are proposed as high-priority in the implementation of a software process improvement program are: PIM1 Process establishment, PIM2 Process assessment, PIM3 Process improvement, MAN3 Project management, MAN6 Measurement, SUP1 Quality assurance, SUP8 Configuration management, ENG1 Requirement elicitation, ENG2 System requirement analysis (all related to proposed maturity level 2) and ENG3 System architectural design, ENG4 Software requirement analysis, ENG5 Software design, ENG7 Software integration (all related to defined maturity level 3). These processes are described in terms of ISO/IEC 15504 [17] in which MAN refers to Management processes, PIM refers to Improvement processes, ENG refers to Engineering processes and SUP refers to Support processes.

(E2) the systematic review of the literature on software process improvement in small enterprises presented in [2]. This paper describes the processes which are most frequently improved for these organizations, amongst which are: PIM1 Process establishment, PIM3 Process improvement, MAN3 Project management, MAN6 Measurement, SUP8 Configuration management, ENG1 Requirement elicitation, ENG2 System requirement analysis, SUP1 Quality assurance (all related to proposed maturity level 2) and MAN5 Risk management, ENG4 Software requirement analysis, ENG3 System architectural design, ENG5 Software design, SUP2 Verification, SUP3 Validation (all related to defined maturity level 3).

(E3) the strategy for implementing a process reference model by small organizations based on their business goals proposed in [22] in the context of the COMPETISOFT project [23]. This strategy defines three process profiles (set of processes selected to carry an improvement cycle) to initiate an improvement program in small organizations in stages. The first profile includes processes: Software Development (SD) and Specific Project Administration (SPA). The second profile includes Process Management (PM), Project Management (PjM), Human Resources Management (HRM) and Knowledge Management (KM). The third profile includes processes: Goods, Services and Infrastructure Management (IM) and Business Management (BM). These profiles and their processes were considered to determine the different processes involved in the maturity levels proposed.

With all these previous considerations in mind, the first version of the model establishes 3 levels of maturity for classifying organizations, from 1 to 3, with 1 being the lowest level and 3 the highest. In Table 2
                         the set of processes defined for maturity levels 2 and 3 are displayed. In this table the relationship between each of these processes (of the maturity model) and the studies considered (Ei) that support them is shown. It is important to highlight that the harmonization of maturity levels from CMMI-DEV and ISO/IEC 15504 presented in [18] was also taken into account in establishing these maturity levels. This work offers information on how the maturity levels (and their processes) described in these two models are related. Although there is no one-to-one relationship as far as maturity levels (and their processes) are concerned, this study provided us with a framework to enable processes defined in the maturity model proposed to be aligned with CMMI maturity levels (and their process areas).

For an organization to have a maturity level, we should first determine the capacity level for each one of the processes corresponding to the maturity level. With the rating of the capacity level of each process, a level of organizational maturity will be derived that is compliant with some rules of derivation set out in Table 3
                        . (This is in accordance with part 7 of ISO/IEC 15504.)

As far as the process capacity evaluation model that we have proposed is concerned, this complies with the recommendations established in part of the standard ISO/IEC 15504. Fig. 2
                         shows a diagram of the different process elements established in the model, along with the relationship between them and the compulsory nature or not of their implementation.

To measure process capacity, a set of process attributes (PAs) is used, where each attribute defines a particular aspect of the process capacity, as may be observed in Table 4
                         (for the three capacity levels proposed by our model). Thus, the process attributes are found across all the processes and describe the characteristics that should be present in order for a process to be institutionalized. Furthermore, process attributes are applied to all processes and are made up of management/generic practices (principal indicators of process capability) and generic work products.

Similarly, the fulfilling of the process attributes will fix the process capacity level; hence the maturity level will be determined by the capacity levels of all the processes associated with the maturity level. To be specific, in order to establish the fulfillment of a process attribute, each one of them has a set of generic practices defined for it. These indicate what should be carried out to achieve the purpose of that particular process attribute. By way of example, the generic practices associated with the process “PA 2:1 Performance Management Attribute” are: 1) define the process objectives, 2) plan and control the process, 3) adapt the performance of the process, 4) assign responsibility and authority, 5) assign resources and information for the project and 6) manage the communication between the parties involved. In short, reaching a capability level of an organization's process involves the fulfillment of the corresponding process attributes, which are features of a process that can be evaluated on a scale of achievement, providing a measure of that capability to the process [24]. It must be highlighted that the process attributes are specified in part 2 of the ISO/IEC 15504 standard and the management/generic practices correspond to an adaptation of part 5 of ISO/IEC 15504.


                        Table 5
                         shows the equivalents between the capacity levels and the maturity levels corresponding to the adaptation proposal.

This model provides a structured collection of practices that describe the process characteristics that are useful for software development in the Spanish context. The software lifecycle process model sets out the description in terms of purpose and outcomes in each one of the processes, defined in Table 2. These form part of the maturity levels of the Software Engineering Maturity Model. These processes, apart from having parts in common (process attributes and management/generic practices) possess specific parts that are known as outcomes and activities (which are in turn related to the raison d'être of the process). An outcome, therefore, applies to a single process and describes the unique characteristics that should be implemented to satisfy that process. Outcomes are the process elements required for the process attribute “PA 1.1 Process Performance” and thus the implementation of the outcomes of the process is evidence of the achievement of that attribute. For the interpretation and implementation of the outcomes, each process provides a set of detailed descriptions, which are known as activities; Fig. 2 allows us to observe that activities are an informative component. As is the case with attributes and generic practices, outcomes are required components in the model. Lastly on this point, it should be highlighted that outcomes, as well as activities of each process, are defined in the process reference model; i.e., in the ISO/IEC 12207: 2008 standard.

The Software Engineering Maturity Model developed describes a process for carrying out the audit of firms wishing to be certified in this model (see Fig. 3
                        ). This process complies with the ISO/IEC 17021 standard.

The first phase: “Planning of the audit” is made up of the following activities: 1.1 Putting together and writing up the audit plan; 1.2 Gathering the data base of evidence and documentation: 1.3 Studying and analyzing the evidence; 1.4 Producing the report of this phase (phase 1); 1.5 Drawing up the corrective action plan (PAC); and 1.6 Preparing the work plan for the next audit (Phase 2). The activity of drawing up a corrective action plan should be carried out by the company being assessed—the remainder of the tasks will be performed by the audit team. The second phase: “Executing the audit” is composed of these activities: 2.1 Gathering the data/evidence; 2.2 Carrying out interviews, 2.3 Validating the objective data/evidence: 2.4 Verifying the resolution of the items established in the PAC; and 2.5 Assessing the processes. Finally, in the phase “Preparation and communication of results” the activities to be performed are: 2.6 Create reports on the audit's results; and 2.7 Deliver audit's results to company under analysis. Regarding the activities described previously: the activities 1.1, 2.1, 2.3, 2.5, 2.6 and 2.7 are in conformance with ISO/IEC 15504 parts 2 and 7, and activities 1.2, 1.3, 1.4, 1.5, 2.2, and 2.4 comply with the UNE-EN ISO/IEC 17021:2011 standard. The follow-up audits check that the established processes are being maintained and the audit in the third year is conducted to renew the previous certification or when a higher level is being sought.

As regards the audit, a series of requirements has also been established and these are to be met in the firms wishing to receive certification in the maturity model proposed. To define these requirements, the ISO/IEC 17021 was considered and these demands have been divided into two groups: elements and classification criteria.

The main element in audits is the evidence of implementation of the processes. We should thus underline that, according to parts 2 and 5 of the 15504 standard, if an organizational maturity level is to be reached, objective evidence should be presented. This must come for each of the process attributes of all the processes within the maturity level. In particular, for the model we propose, “objective evidence” must be given for each of the outcomes and each management attribute of all the processes associated with the maturity level.

Objective evidence should be made up of a document which testifies that the generic practice or outcome has been registered in the organization's processes, and there should also be a series of indicators which bear witness to the implementation of that process element. These indicators are known as implementation indicators. As occurs in other process models, (CMMI, for instance), the implementation indicators can be of three types:
                              
                                 •
                                 Direct artifacts, outcomes resulting from the direct implementation of an outcome or of a generic practice.

Indirect artifacts, which are a consequence of the implementation of an outcome or attribute practice but which are not ends in themselves.

Affirmations, which are interviews that confirm the implementation of an outcome or of an attribute practice.

So it is the case that objective evidence is made up of a document which describes the process; it is also composed of a direct artifact (evidence of the outcome of the application of the process in projects), as well as an indirect artifact (for example, the minutes of the meeting in which the project was brought up, a project plan in which the process was programmed, etc.) and an affirmation (oral corroboration on the part of members of the staff).

To carry out the audit, apart from the element related to the evidence of the implementation of the process, the “project sample” needs to be specified. The assessment will be carried out on this sample and an audit team should be set up. In the context of the project sample, the organization should select at least 4 projects that show the maturity level processes which are the object under assessment (as is laid out in part 7 of the ISO/IEC 15504 standard). With regard to the audit team, the main requirement is that it should be made up of at least 4 auditors: 1 chief auditor, 1 auditor and 2 internal auditors. Both chief auditor and auditor should be professionals (in the field of information technology), qualified and trained in the maturity model by AENOR; they should also be external to, and independent of, the organization. Internal auditors are to be members of the organization on which the audit is going to be carried out. The chief auditor is responsible for: (i) leading and coordinating the audit, (ii) ensuring compliance with ISO/IEC 15504, (iii) making sure that the audit team has the necessary knowledge, (iv) ensuring that this team has skills, guidelines and tools needed, and (v) handing over the audit results to the head of the company. The auditor is responsible for: (i) performing audit activities, and (ii) rating the process attributes. Internal auditors are responsible for: (i) supporting the audit work, and (ii) facilitating the understanding of the organization processes.

The second group of requirements for the audit are the assessment criteria of each one of the components of the assessment model. The qualification of the process attributes will depend on the qualification which the associated management practices and their outcomes have obtained in the case of the process attribute PA 1.1. (as is established in part 7 of the ISO/IEC 15504 standard). The scale for evaluating the management practices and outcome is as follows:
                              
                                 •
                                 Not Achieved (N): the degree of attainment of the components associated with the process attribute is between 0% and 15%.

Partially Achieved (P): the degree of attainment of the components associated with the process attribute is between 16% and 50%.

Largely Achieved (L): the degree of attainment of the components associated with the process attribute is between 51% and 85%.

Fully Achieved (F): the degree of attainment of the components associated with the process attribute is between 86% and 100%.

Once the process attributes have been qualified, the capacity level of each process is qualified. To be specific, in order to reach a capacity level, the process attributes of the lower levels should be qualified as Fully Achieved and the process attributes of the capacity level being assessed as Largely Achieved or Fully Achieved. For example, if a process under assessment is to reach capacity level 1, its PA 1.1 process attribute should have obtained the qualification of Largely Achieved or Fully Achieved. To reach capacity level 2, the PA 1.1 process attribute must have achieved the qualification of Fully Achieved; its process attributes PA 2.1 and PA 2.2 should has the qualification of Largely Achieved or Fully Achieved. Lastly, the maturity level will be qualified on the basis of the capacity levels obtained for the set of processes corresponding to that particular level. The derivation rules are set out in detail in Table 5.

Initially, the organizational maturity model for the Spanish software industry defined was applied in the enterprise group that took part in the pilot project for the certification conformance with this model. The certification process was led by AENOR and the first step of this association was to make up an auditors' pool and an advisers' pool of this model. In this respect, from the project work group, AENOR selected a set of people to train as auditors of the Software Engineering Maturity Model (the four authors of this paper are auditors of this model). These individuals were trained in each one of the model's components and they carried out certification audits of the enterprises by following the process developed for this purpose in the proposed model. Furthermore, the participants in this project from the Prysma enterprise were selected as advisers; they carried out the consultancy of the implantation of the organizational maturity model in the enterprises that were assessed with this model. It is important to highlight that in this pilot project the independence between advisers and auditors was guaranteed, in order to avoid conflict of interests, i.e. no auditor participated or was in contact with the audited companies or their advisers during the implantation of the model.

In the following lines, the application of the software engineering maturity model is presented from the perspective of the auditors, in terms of a description of the firms taking part in the pilot project, as well as of a general description of the phases of the process of auditing the certification of the companies.

There were sixteen Spanish enterprises that participated in the certification audit carried out by AENOR. Table 6
                         describes the properties of the firms taking part in the audits for analysis of the application of Software Engineering Maturity Model in a real context. From this table it is possible to observe that 75% are small enterprises (between 1 and 50 employees) and 25% are enterprises with more than 50 employees. Of the small companies: 12.5% have fewer than 10 employees, 56.25% have between 11 and 25 employees, and only 6.25% have between 26 and 50 employees. Regarding the years of experience of companies: 6.25% have been in existence for fewer than 6years, 68.75% have existed for between 6 and 10years; for 25% of the firms it is more than 10years since they were set up. In this respect, the profile of the companies audited is: a very small enterprise (having up to 25 people) with between 6 and 10years of experience in the development of software solutions. As regards other types of certifications obtained previously by companies, it is important to underline that (i) 31.25% have the ISO 9001 certification, (ii) 18.75% have certification in ISO 14001, (iii) 12.5% have certification in ISO 27001 and (iv) 12.5% have other types of certifications. However, these prior certifications are concentrated in just five companies (31.25%), as seen in Table 6. In this sense it is important to note that 68.75% of these companies did not have any type of certification.

The audit process presented in the previous section was performed for each one of these sixteen companies. This process allowed us to carry out the initial audit (phase I), as well as the final one (phase II) of the certification of each company as regards the requirements specified by the reference norm ISO/IEC 15504 in accordance with the software engineering maturity model developed. All of the firms chose to meet the requirements described in the model for reaching level 2 of maturity. These requirements have to do with the fulfilling of: (i) each one of the outcomes of the 10 processes established for level 2, which are described in the software lifecycle process model, and (ii) each one of the management/generic practices and process attributes PA 2.1 and PA 2.2 described in the model for assessing capability and organization maturity.

During phase I of the audit process the audit team was formed, made up of two auditors from AENOR, two members of the company to be audited and other participants from the company (such as the sponsor and the leader of the improvement project). Furthermore, the audit team visited each audited company in situ for 4 to 8h during this phase. Thus, each company:
                           
                              •
                              filled in the audit application form, which inquired about the improvement and certification goals.

presented the sample of its most representative software development projects (at least 4) and clarified the doubts arising within the auditing team.

made it possible to access the documentation about the processes of the organization and the representative projects.

filled in the application form of evidence on process implementation, in which the company established evidence of the fulfillment of the requirements specified by the software engineering maturity model.

The AENOR auditors studied, analyzed and evaluated all the documentation provided by the company regarding the definition of processes and methodologies for software development. They generated a report with the outcomes obtained in this phase. This points out strengths and deviations detected in the 10 processes under evaluation (indicating in each case whether it is a non-conformity or observation of the requirement/process related). This report was socialized in the enterprise by AENOR auditors, in order to show the company the non-conformities, clarifying these and determining the date of audit phase II. A non-conformity means a breach of model requirements and it must be addressed and solved by the enterprise before the next phase of the audit process. This is a compulsory requirement. Each enterprise prepared a corrective action plan that defined how the non-conformities detected would be eliminated. With respect to the audit process, the effort spent in this work was between 20 and 26h per AENOR auditor.

During phase II of the audit process, the audit team gathered the objective evidence of the execution of the processes by means of the evaluation of these, as well as the analysis of the direct and indirect artifacts presented in the documentation of the representative projects in the firms. Apart from this, the auditors carried out interviews with different employees involved in these processes/projects, the aim being to obtain sufficient information to be able to determine and validate the objective evidence. This evidence was studied and evaluated from the perspective of putting processes into operation that would demonstrate the fulfillment of the requirements established by the model to reach level 2 of maturity. The execution of the corrective action plan was analyzed, to establish if the events of non-conformity detected in the previous phase had been solved appropriately by the firm.

AENOR auditors generated the report corresponding to the outcomes obtained in this phase, which also highlights the new non-conformities detected, and, if applicable, those that have remained from phase I. This report was communicated to the firm and put into the corresponding audit report for the firm in AENOR. On the basis of this, AENOR granted, or did not grant, certification in the model. If the report highlighted any non-conformity on the part of the firm that was greater than any of those set out in the standard's conditions, then the certification was not given to that company. A non-conformity that is greater implies a lack of documentation about the quality system, or an inconsistency in its implementation. This causes problems with other operations in the organization, affects the software product quality and puts customer satisfaction at risk. It is important to highlight that all 16 firms taking part in the pilot project were given certification at level 2 in the maturity level of the model proposed.

@&#DISCUSSION@&#

The enterprises who took part in the pilot project for the certification conformance with the software engineering maturity model expressed the views that this model: (i) was an important and practical aid for reflecting on the base and management practices needed to increase the capability of their software development processes, and (ii) was useful in tackling improvement in these processes in the quest to reach a organizational maturity level. On the other hand, experiences obtained from the audits carried out by the audit teams highlight that: (i) the implementation complexity of this model can be adequately handled by small organizations (requirements/recommendations established by the model are easy to understand and are appropriate to the context of software companies); (ii) the cost of certification in the model can be assumed by small companies (AENOR does not have a fixed value for the certification audit but it fits the need/capacity of the organization); (iii) the effort (time and resources) required to implement a maturity level enables small organizations to have a rapid return on investment (companies spent between 6months and 1year in implementing and certifying the level 2 model, involving an advisor and a person from the company in these tasks); and (iv) some sponsors and improvement project leaders stated that the model is an appropriate response to the concerns of the organization as regards carrying out professional practice that is mature, responsible, innovative and committed both to its customers and the software industry. Furthermore, 11 companies (representing 68.75%) achieved certification without having any previous experience in certifications, but there are currently 38 companies certified in the model.

Based on the increase in the organizational maturity and the achievement of certification by small businesses, the effort of implementing the proposed model, and the benefits described by companies, we consider that the software engineering maturity model is suitable for assessing organizational maturity in this type of organizations. The results obtained from the pilot project in terms of effort, benefits and of reaching certification at maturity level 2, are an indicator that the proposed maturity model can be a practical and useful strategy when a small firm is looking for a certification in one particular software process quality model. In a nutshell, the creators, auditors and advisers of the model observed that this proposal shows itself to be suitable as a reference model for the improvement of the development process in small software firms that are looking for a certification in organizational maturity levels. From these experiences in real settings, it can be highlighted that the use of the software engineering maturity model was enriching, both for the auditors in charge of the certification and for the work group which created the model.

The work carried out in the audit has led us to some interesting findings about the audit in terms of: quality objectives pursued by the enterprises, the most common non-conformities, as well as the strong points in the certification. These findings are set out below.

The main reasons for companies to tackle the improvement/certification were that they wanted to be more competitive, establish a culture of quality and satisfy their customers. As regards these objectives, the following outcomes were obtained:
                        
                           •
                           62.5% — Competitive edge and unique selling point.

56.25% — Establishment of a culture of organizational quality.

50% — Increase in the degree of customer satisfaction.

37.5% — Improvement in productivity.

31.25% — Future growth is organized.

31.25% — Natural evolution and continual improvement.

25% — Reduction in the number of adverse events.

12.5% — Fulfillment of legal requirements for public tenders/contracts.

The distribution of the main non-conformities detected in the audit of the 16 firms taking part in the certification with the Software Engineering Maturity Model is set out in Fig. 4
                     . As can be seen from the graph, software measurement is one of the most critical aspects for firms, especially in the case of the smallest enterprises. Although research work has tackled this issue — for example [25], we believe that it is vital to carry on with research in this field. It is equally important to look into how to carry over into the industry the knowledge of research proposals in a way that is appropriate. Another non-conformity which showed up in the initial audits was the lack of institutionalization of the processes. Institutionalization implies that the process has taken root and that work is being carried out in this set way. It also means that there is a commitment and coherence in performing that work (i.e. in its execution) [6]. The idea is that a process is institutionalized when it takes root as a way of working, such that it is followed even in times of crisis. The topic of process institutionalization should still be a focus of research so that companies can tackle the process and fulfill it properly, since it is a really important basis for reaching organizational maturity.


                     Fig. 5
                      presents the percentage of the non-conformities, with respect to the standard, found most often in organizations. Within this set of non-conformities it should be noted that, out of the whole group of the enterprises involved, not one of them had their estimation method formalized. In many of the firms it is a case of “someone” doing the estimations of the project to be developed “somehow”. The estimation technique is not established, however; this is something that, if done, would help the task to be carried out by another individual. In other words, it is dependent on who does the estimation and it is not defined in the process. Another interesting aspect is the insufficient follow-up and the control of the processes specified. This non-conformity is linked to those particular management/generic practices established in the process attribute 2.1 Performance management, which have not been put into place properly in the first place. The non-implementation of the management practices of the process attributes (of a maturity level) affected the process capacity and thus the institutionalization of this process and its consequent organizational maturity.

It should be underlined that there were strong points in the firms, as detected in the audits, which we consider to have been success factors in the enterprises achieving certification in the model. Amongst those factors contributing to success in the improvement of the firms' processes, as well as obtaining of certification, we ought to highlight:
                        
                           •
                           56.25% of enterprises showed a high level of engagement and commitment towards the improvement and certification process on the part of the whole organization.

50% of the enterprises had an appropriate tool infrastructure which supported different software development processes.

31% demonstrated suitable documentation in the development processes.

18.75% showed appropriate risk management at the level of projects undertaken by the enterprises.

At the end of the project, a study of the relationship between the Software Engineering Maturity Model proposed and CMMI-DEV v1.3 [6] was conducted. With this new organizational maturity model created for the Spanish software industry, it was important to have information on how the maturity levels described by both this model and CMMI-DEV are related. For that reason, we compare these two models from the viewpoint of the relationship of the sets of processes described in the maturity levels of the model created and CMMI-DEV v1.3. The objective is to determine the degree of coverage of the maturity levels of CMMI-DEV, using the maturity levels proposed in the organization maturity model for the Spanish software industry. The study undertaken followed the method of comparison proposed in [18]. The purpose of this method is to provide a guideline for performing a step-by-step comparison of different models, aiming to guarantee the reliability of results obtained. Fig. 6
                      presents the process areas of CMMI which have some type of support from the processes described in the maturity model set out in this paper. The degree of coverage of the process areas of CMMI-DEV is described on a discrete scale of values of S, L, P and W. These values are associated with a range of percentage values in the following way: (S)trongly related (86% to 100%), (L)argely related (51% to 85%), (P)artially related (16% to 50%) and (W)eakly related (1% to 15%). This percentage is only an indicator of the extent to which a process area of CMMI-DEV is addressed by means of the processes described by the AENOR maturity model.

In the following lines some characteristics of models for certifying organizational maturity (presented in Table 1) are presented, in order to provide relevant information of these:
                        
                           •
                           Little information is currently available in the literature on the costs associated with conducting a process assessment in small companies [26]; consequently, there is also very little to be found as regards certifications of organizational maturity using the models presented in such a table. Nevertheless, the study on certifications of software industry quality presented in [27] describes that a level 2 formal assessment in CMMI-DEV has a cost of 35000€ and that the certification in our proposed model has an estimated cost of 5000€. In this sense, according to the Mexican organization of normalization and certification NYCE S.C. [28], the cost of the verification of the MoProSoft model level 2 is around 3000€.

With regards to the group responsible for certification: (i) CMMI-DEV establishes that an assessment team of at least 4 people led by a SCAMPI leader appraiser should be formed, (ii) MoProSoft proposes that at least 1 person be responsible for certification, (iii) MPS-BR's evaluation guide describes that the minimum composition of the evaluation team is 3 members coordinated by a lead evaluator, and (v) Pathfinder and our model propose an audit team made up of 4 members and led by the chief auditor.

With respect to the composition of the maturity levels: (i) CMMI-DEV establishes 22 process areas, distributed as follows: 7 at level 2, 11 at level 3, 2 at level 4 and 2 at level 5; (ii) MoProSoft proposes 9 processes which are in all maturity levels (from 1 to 5), (iii) MPS-BR describes 21 processes spread over 7 maturity levels, as follows: 2 at level G, 5 at level F, 5 at level E, 5 at level D, 3 at level C, 1 at level B and none at level A, (iv) IT-Mark considers the same 18 process areas of levels 2 and 3 of CMMI but these are distributed in three maturity levels: basic, elite and premium, (v) Pathfinder describes 40 processes and 5 maturity levels: level 1 composed of 12 processes, level 2 of 14 processes, level 3 of 12 processes, level 4 of 1 process and level 5 of 1 process and (vi) our proposed model considers 21 processes: 10 at level 2 and 11 at level 3.

The organizational maturity (and achievement of maturity levels) depends on increasing the capability of processes included in these levels. In this respect, both IT-Mark and CMMI-DEV are needed to verify the achievement of generic goals (defined in this latter model) in determining the process capability. MoProSoft, MPS-BR, Pathfinder and Software Engineering Maturity Model are, for their part, in conformance with the process attributes (described by part 2 of ISO/IEC 15504 standard) for measuring the process capability.

Finally, in relation to the number of certification/evaluations in these models throughout software companies it can be said that: (i) in Brazil there are 424 evaluations in the MPS-BR model from the year 2004, of which 215 are in force [29], and (ii) in Mexico the NYCE S.C. has issued 254 verification on the MoProSoft model from 2006 [28]. In the Spanish context it is important to highlight that there are: (i) 254 assessments in the CMMI-SCAMPI class A (the number of assessments is not the same as the number of companies assessed) from 2006 [30], (ii) 19 IT-Mark certified organizations from 2005, but at present only 7 companies maintain their certification [31], and (iii) 38 enterprises with certification in force issued by AENOR in the Software Engineering Maturity Model from the year 2010 [32]. Most companies certified in the IT-Mark model and in our model are small development firms, while in the CMMI model most are medium or large companies.

@&#CONCLUSIONS@&#

The fact that there was no international ISO certification available for process improvement at the level of organizational maturity led to the creation of a model for the evaluation of software processes by maturity levels, presented in this paper. The model proposed, based on ISO standards, is for small enterprises in the Spanish software industry. Its main objective is to minimize the problems presently experienced by small software development firms when implementing models of process improvement which are geared more towards large organizations, as is the case with CMMI-DEV, for example. This model, moreover, is directed at, and adapted for, software processes. As such, its complexity and implementation costs are not as great as in the case of the CMMI-DEV model; the assessment is not so complex and costly, either.

To build this model, known as the Software Engineering Maturity Model, AENOR formed a working group, comprised of researchers and practitioners in the field of Software Engineering, who brought together their research and professional experience to produce and apply the model, which specifies three components: (i) a capability and maturity assessment model, (ii) a software lifecycle process model, and (iii) audit process, which have been based on the following ISO standards: ISO/IEC 15504, ISO/IEC 12207:2008 and ISO/IEC 17021. Within the project developed to build the model, its initial application was to gain the certification of the 16 Spanish firms on the part of AENOR. At this moment in time, however, there are already 38 enterprises which have level 2 and 3 certifications of this model and there are various new firms which are currently putting the model into operation, with their sights set on completing the process of certification of organizational maturity next year. We must emphasize that, in an effort to centralize the model and support knowledge about it becoming more widespread, the portal www.iso15504.es has been created; with respect to the ISO/IEC 15504 standard, this portal has become a reference point in Spanish.

@&#ACKNOWLEDGMENTS@&#

We acknowledge the assistance of the Spanish Ministry of Industry, Tourism and Trade, as well as of the projects GEODAS (TIN2012-39493-C03-01, MEC of Spain) and Agreement Unicauca-UCLM (4982-4901273). Francisco J. Pino acknowledges the contribution of the University of Cauca, where he works as a full professor.

@&#REFERENCES@&#

