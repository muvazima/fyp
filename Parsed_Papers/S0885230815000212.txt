@&#MAIN-TITLE@&#Improving translation quality stability using Bayesian predictive adaptation

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           Bayesian predictive adaptation (BPA) is presented for model adaptation in SMT.


                        
                        
                           
                           Results are presented for a standard adaptation task (JHU SummerWorkshop 2012).


                        
                        
                           
                           Comparison between different sampling strategies.


                        
                        
                           
                           In-depth analysis of stability of most common optimisation algorithms in SMT.


                        
                        
                           
                           Computational cost comparison among the methods presented.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Bayesian methods

Adaptation

Natural language processing

Machine translation

@&#ABSTRACT@&#


               
               
                  We introduce a Bayesian approach for the adaptation of the log-linear weights present in state-of-the-art statistical machine translation systems. Typically, these weights are estimated by optimising a given translation quality criterion, taking only into account a certain set of development data (e.g., the adaptation data). In this article, we show that the Bayesian framework provides appropriate estimates of such weights in conditions where adaptation data is scarce. The theoretical framework is presented, alongside with a thorough experimentation and comparison with other weight estimation methods. We provide a comparison of different sampling strategies, including an effective heuristic strategy and a theoretically sound Markov chain Monte-Carlo algorithm. Experimental results show that Bayesian predictive adaptation (BPA) outperforms the re-estimation from scratch in conditions where adaptation data is scarce. Further analysis reveals that the improvements obtained are due to the greater stability of the estimation procedure. In addition, the proposed BPA framework has a much lower computational cost than raw re-estimation.
               
            

@&#INTRODUCTION@&#

Adaptation has become a very popular issue in natural language processing (Kuhn and De Mori, 1990; Huo et al., 1995; Koehn and Schroeder, 2007), and more specifically in statistical machine translation (SMT) (Koehn, 2010). Typically, the adaptation problem arises when two very different sets of training data are available, yielding two different sets of model parameters. The first set of data, the training data 
                        T
                      (e.g., obtained from the European Parliament or the United Nations) is often very large and rather generic in domain. The second set of data, the adaptation data 
                        A
                     , belongs to the specific task of interest, such as printer manuals or medical diagnoses, and is usually overwhelmingly smaller than 
                        T
                     . Then, the challenge is to modify the SMT system appropriately by taking into consideration both 
                        T
                      and 
                        A
                     : on the one hand, 
                        T
                      is should provide robustness in the estimation of the model parameters 
                        θ
                     , and on the other hand 
                        A
                      should introduce a certain bias towards the specific task.

This definition of adaptation is specially appropriate for the Bayesian learning paradigm, where the model parameters 
                        θ
                      are treated as (hidden) random variables governed by some kind of a priori distribution p(
                        θ
                     ). This distribution represents our prior knowledge about what values for 
                        θ
                      should be good estimates. Estimating p(
                        θ
                     ) by using a sufficiently large collection of data 
                        T
                      allows us to obtain a canonical model with parameters 
                        
                           
                              
                                 θ
                              
                           
                           T
                        
                     , and it can be assumed that such estimation is a robust estimation. As further evidence arrives in form of adaptation data 
                        A
                     , that such estimations are revised so that they reflect the newly arrived data. Considering 
                        A
                      within the Bayesian predictive distribution leads precisely to a scenario in which the decision regarding the output sentence includes a bias towards 
                        A
                     , but is still guided by 
                        p
                        (
                        
                           
                              
                                 θ
                              
                           
                           T
                        
                        )
                      (i.e., the prior distribution given 
                        T
                     ). Hence, under the Bayesian predictive adaptation (BPA) framework, the final translation is not computed by considering only the topic-specific data (i.e., 
                        A
                     ), which could lead to over-trained estimations of 
                        θ
                     : if the amount of data available is small, the parameter prior p(
                        θ
                     ) will compensate this, providing robustness (Duda et al., 2001). However, the effect of this prior knowledge fades when incorporating further evidence, until a point in which the contribution of the parameter prior towards the complete model distribution is negligible. In addition, the Bayesian learning paradigm does not attempt to obtain a single best point estimate of 
                        θ
                     , but rather relies on considering all possible parameter values, allowing uncertainty regarding what the best estimations of such parameters might be. In this paper, we focus on the Bayesian adaptation of the weights of the log-linear combination of features present in state-of-the-art SMT systems. Even though these weights are not very numerous (generally in the range of 10 or 20), providing the system with appropriate estimates for these weights is critical (Clark et al., 2011).

The rest of this paper is structured as follows: the related literature is reviewed in Section 2. The formal derivation of Bayesian predictive adaptation for SMT is presented in Section 3. Since the equation obtained is very costly to apply in practise, different sampling strategies are presented in Section 4. The experiments performed are detailed together with their results and the related analysis in Section 5. Finally, conclusions are presented in Section 6.

@&#RELATED WORK@&#

Adaptation in SMT is a research field that has been receiving increasing attention. Following the ideas in Kuhn and De Mori (1990), one of the first works was performed in Nepveu et al. (2004), where the authors added cache language and translation models to an interactive machine translation system. In Koehn and Schroeder (2007), different ways to combine the available data belonging to two different sources were studied. The work in Civera and Juan (2007) explores alignment model mixtures as a way of performing topic adaptation. Other authors (Zhao et al., 2004; Sanchis-Trilles et al., 2009), have proposed the use of information retrieval and clustering techniques in order to extract the sub-domains of a large corpus, and Gascó et al. (2010) and Axelrod et al. (2011) proposed to select as training data only those sentences which can be considered topic-specific. Corpus weighting strategies were analysed in Matsoukas et al. (2009), and instance weighting techniques were applied in Foster et al. (2010) in order to weight out-of-domain phrase pairs. Recently, sequential Bayesian methods were applied with the purpose of adapting the word alignments present in most state-of-the-art SMT systems (Duh et al., 2011). In such work, the authors confront the problem of adapting the probabilities of the single-word models that are used for phrase extraction. In contrast, in this work we attempt to adapt the final translation model directly. Note that none of these works confront the problem of adapting the log-linear weights 
                        λ
                      of the SMT system, but rather attempt to adapt either the underlying word alignments or the final translation model features h, and comparison with such strategies is not suitable. Hence, re-estimating 
                        λ
                      from scratch is, to the best of our knowledge, the most common approach when adapting 
                        λ
                     . This work intends to fill this gap, and can be seen as complementary to the adaptation approaches cited above.

Although only recently applied to SMT, Bayesian adaptation has been successfully applied in other natural language processing areas, such as speech recognition (Huo et al., 1995). In fact, work done in this direction is very broad, covering both batch (Yu and Gales, 2005) and online adaptation (Yu and Gales, 2006). Variational Bayes approaches have also been studied (Valente and Wellekens, 2005), which attempt to find a lower bound to approximate the intractable marginal likelihood, yielding point estimates of the model parameters. Alternatively, BPA attempts to approximate the marginal likelihood directly by sampling from the posterior distribution, and usually leads to more robust estimates (Yu and Gales, 2005).

With respect to BPA in SMT, to our knowledge the only work published as of yet in this direction is Sanchis-Trilles and Casacuberta (2010). In that article, only the idea was introduced, together with preliminary experiments. Here, such preliminary work is widely extended both in depth and in range:
                        
                           •
                           Bayesian predictive adaptation is presented as an appropriate formal framework for model adaptation in SMT.

Positive results concerning the adaptation of scaling factors are presented, for a standard adaptation task (Carpuat et al., 2012) with four different domains.

Comparison with different 
                                 λ
                               re-estimation strategies, such as Minimum Error Rate Training (MERT) (Och, 2003), batch Margin Infused Relaxed Algorithm (MIRA) (Cherry and Foster, 2012) and Pairwise Ranking Optimisation (PRO) (Hopkins and May, 2011).

Different sampling strategies are compared within BPA.

Computational cost comparison among the methods presented.

As a derived contribution, we also perform an in-depth analysis of the stability of the most common optimisation algorithms used in SMT, as a function of development set size. To the best of our knowledge, no such study has been published as of yet.

We first introduce the typical formulation of SMT (Koehn, 2010). In state-of-the-art SMT systems, it is quite common to have a log-linear combination of features h, weighted by scaling factors 
                        λ
                     . Then, the probability of the output sentence e given the input sentence f is computed as
                        2
                     
                     
                        2
                        For readability purposes, we directly instantiate the model parameters 
                              θ
                            to the parameters we intend to adapt, i.e., 
                              λ
                           .
                     
                  


                     
                        
                           (1)
                           
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              )
                              =
                              
                                 
                                    exp
                                    
                                       ∑
                                       m
                                    
                                    
                                       λ
                                       m
                                    
                                    
                                       h
                                       m
                                    
                                    (
                                    
                                       
                                          f
                                       
                                    
                                    ,
                                    
                                       
                                          e
                                       
                                    
                                    )
                                 
                                 
                                    
                                       ∑
                                       
                                          
                                             
                                                
                                                   e
                                                
                                             
                                             ′
                                          
                                       
                                    
                                    exp
                                    
                                       ∑
                                       m
                                    
                                    
                                       λ
                                       m
                                    
                                    
                                       h
                                       m
                                    
                                    (
                                    
                                       
                                          f
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             e
                                          
                                       
                                       ′
                                    
                                    )
                                 
                              
                              ,
                           
                        
                     and the decision rule is given by the expression
                        
                           (2)
                           
                              
                                 
                                    
                                       e
                                    
                                 
                                 ˆ
                              
                              =
                              
                                 argmax
                                 
                                    
                                       e
                                    
                                 
                              
                              
                                 ∑
                                 m
                              
                              
                                 λ
                                 m
                              
                              
                                 h
                                 m
                              
                              (
                              
                                 
                                    f
                                 
                              
                              ,
                              
                                 
                                    e
                                 
                              
                              )
                              .
                           
                        
                     
                  

Typically, the weights 
                        λ
                      of the log-linear combination are estimated on a development set by means of error-driven algorithms such as MERT (Och, 2003) or MIRA (Cherry and Foster, 2012), which have proven to provide good estimates if the amount of data available is sufficient and the characteristics of the data to be translated match approximately those of the development set. However, if either of these two premises are not fulfilled, over-fitting to the specific characteristics of the development set occurs and such algorithms fail to provide appropriate estimates (Gascó et al., 2010; Clark et al., 2011).

In this article, we propose to reformulate the decision rule whenever the following conditions are met:
                        
                           •
                           A development set for a given “old” domain is available, or a canonical estimation of 
                                 λ
                               is readily available.

The text to be translated belongs to a different “new” domain.

A small set of development data is available for the new domain, but such set is insufficient for a proper estimation of 
                                 λ
                              .

Under the circumstances described above, we consider adapting 
                     
                        λ
                     , instead of performing a full re-estimation. For this purpose, we propose the use of the Bayesian paradigm (Bishop, 2006), in which parameters are viewed as random variables with some kind of underlying distribution. Considering 
                        T
                      as the training data, and 
                        A
                      as an additional adaptation set, Eq. (1) is rewritten by means of the predictive distribution as


                     
                        
                           (3)
                           
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ;
                              T
                              ,
                              A
                              )
                              =
                              ∫
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ,
                              
                                 
                                    λ
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ;
                              T
                              ,
                              A
                              )
                              d
                              
                                 
                                    λ
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              ≈
                              ∫
                              p
                              (
                              
                                 
                                    λ
                                 
                              
                              ∣
                              T
                              ,
                              A
                              )
                              
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ,
                              
                                 
                                    λ
                                 
                              
                              )
                              d
                              
                                 
                                    λ
                                 
                              
                              .
                           
                        
                     
                  

In Eqs. (3) and (4) it has been assumed that the probability of the output sentence e does not depend on 
                        A
                      and 
                        T
                     , whenever the model parameters 
                        λ
                      are known. It has also been assumed that 
                        λ
                      is independent from the actual input sentence f. Such simplifications lead to a decomposition of the integral in two parts: the first one, 
                        p
                        (
                        
                           
                              λ
                           
                        
                        ∣
                        T
                        ,
                        A
                        )
                     , will assess how good the model parameters are, and the second one, p(e
                     ∣
                     f, 
                        λ
                     ), will account for the quality of the translation e given 
                        λ
                     . The integral will force the model to take into account all possible parameter values, although the parameter prior will bias the final distribution towards our prior knowledge.

Operating with the probability of 
                        λ
                     , we obtain:
                        
                           (5)
                           
                              p
                              (
                              
                                 
                                    λ
                                 
                              
                              ∣
                              T
                              ,
                              A
                              )
                              =
                              
                                 
                                    p
                                    (
                                    A
                                    ∣
                                    
                                       
                                          λ
                                       
                                    
                                    ;
                                    T
                                    )
                                    
                                    p
                                    (
                                    
                                       
                                          λ
                                       
                                    
                                    ∣
                                    T
                                    )
                                 
                                 
                                    ∫
                                    p
                                    (
                                    A
                                    ∣
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       ′
                                    
                                    ;
                                    T
                                    )
                                    
                                    p
                                    (
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       ′
                                    
                                    ∣
                                    T
                                    )
                                    
                                    d
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       ′
                                    
                                 
                              
                              .
                           
                        
                     
                  

In order to simplify Eq. (5), and focusing on the probability of the adaptation data 
                        A
                     , of a given size 
                        |
                        A
                        |
                     , we obtain:
                        
                           (6)
                           
                              p
                              (
                              A
                              ∣
                              
                                 
                                    λ
                                 
                              
                              ;
                              T
                              )
                              ≈
                              p
                              (
                              A
                              ∣
                              
                                 
                                    λ
                                 
                              
                              )
                              =
                              
                                 ∏
                                 
                                    a
                                    =
                                    1
                                 
                                 
                                    |
                                    A
                                    |
                                 
                              
                              p
                              (
                              
                                 
                                    
                                       f
                                    
                                 
                                 a
                              
                              ∣
                              
                                 
                                    λ
                                 
                              
                              )
                              
                              p
                              (
                              
                                 
                                    
                                       e
                                    
                                 
                                 a
                              
                              ∣
                              
                                 
                                    
                                       f
                                    
                                 
                                 a
                              
                              ,
                              
                                 
                                    λ
                                 
                              
                              )
                              ,
                           
                        
                     where the probability of 
                        A
                      has been assumed to be independent of 
                        T
                     , given that 
                        λ
                      is known, and has been modelled as the probability of each bilingual sample 
                        (
                        
                           
                              
                                 f
                              
                           
                           a
                        
                        ,
                        
                           
                              
                                 e
                              
                           
                           a
                        
                        )
                        ∈
                        A
                      being generated independently by a given translation model.

For modelling the prior over the model parameters, i.e., 
                        p
                        (
                        
                           
                              λ
                           
                        
                        ∣
                        T
                        )
                     , we will assume that 
                        λ
                      follows a normal distribution centred on 
                        
                           
                              
                                 λ
                              
                           
                           T
                        
                     , i.e., the parameter values estimated on the training data (
                        T
                     ), and with a diagonal covariance matrix 
                        I
                        ·
                        
                           σ
                           T
                        
                      with variance σ
                     
                        T
                      bounded for all parameters, yielding


                     
                        
                           (7)
                           
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ;
                              T
                              ,
                              A
                              )
                              ≈
                              Z
                              ∫
                              p
                              (
                              A
                              ∣
                              
                                 
                                    λ
                                 
                              
                              ;
                              T
                              )
                              
                              p
                              (
                              
                                 
                                    λ
                                 
                              
                              ∣
                              T
                              )
                              
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ,
                              
                                 
                                    λ
                                 
                              
                              )
                              
                              d
                              
                                 
                                    λ
                                 
                              
                              ≈
                              Z
                              
                              ∫
                              
                              
                                 ∏
                                 
                                    a
                                    =
                                    1
                                 
                                 
                                    |
                                    A
                                    |
                                 
                              
                              
                              p
                              (
                              
                                 
                                    
                                       e
                                    
                                 
                                 a
                              
                              ∣
                              
                                 
                                    
                                       f
                                    
                                 
                                 a
                              
                              ,
                              
                                 
                                    λ
                                 
                              
                              )
                              N
                              (
                              
                                 
                                    λ
                                 
                              
                              ;
                              
                                 
                                    
                                       λ
                                    
                                 
                                 T
                              
                              ,
                              I
                              ·
                              
                                 σ
                                 T
                              
                              )
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ,
                              
                                 
                                    λ
                                 
                              
                              )
                              
                              d
                              
                                 
                                    λ
                                 
                              
                              .
                           
                        
                     
                     
                        Z
                      is the normalisation constant ensuring that 
                        p
                        (
                        
                           
                              e
                           
                        
                        ∣
                        
                           
                              f
                           
                        
                        ;
                        T
                        ,
                        A
                        )
                      defines a probability distribution. The term p(f
                     
                        a
                     
                     ∣
                     
                        λ
                     ) present in Eq. (6) can be simplified if 
                        p
                        (
                        A
                        ∣
                        
                           
                              λ
                           
                        
                        ;
                        T
                        )
                      is plugged into Eq. (5) and if f
                     
                        a
                      can be assumed independent of 
                        λ
                     .

Plugging in the log-linear model described in Eq. (1):


                     
                        
                           (8)
                           
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ;
                              T
                              ,
                              A
                              )
                              ∝
                              Z
                              ∫
                              
                                 ∏
                                 
                                    a
                                    =
                                    1
                                 
                                 
                                    |
                                    A
                                    |
                                 
                              
                              
                              
                                 
                                    exp
                                    
                                       ∑
                                       m
                                    
                                    
                                       λ
                                       m
                                    
                                    
                                       h
                                       m
                                    
                                    (
                                    
                                       
                                          
                                             f
                                          
                                       
                                       a
                                    
                                    ,
                                    
                                       
                                          
                                             e
                                          
                                       
                                       a
                                    
                                    )
                                 
                                 
                                    
                                       ∑
                                       
                                          
                                             
                                                
                                                   e
                                                
                                             
                                             ′
                                          
                                       
                                    
                                    exp
                                    
                                       ∑
                                       m
                                    
                                    
                                       λ
                                       m
                                    
                                    
                                       h
                                       m
                                    
                                    (
                                    
                                       
                                          
                                             f
                                          
                                       
                                       a
                                    
                                    ,
                                    
                                       
                                          
                                             e
                                          
                                       
                                       ′
                                    
                                    )
                                 
                              
                              exp
                              
                                 
                                    
                                       −
                                       
                                          
                                             |
                                             |
                                             
                                                
                                                   λ
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                T
                                             
                                             |
                                             
                                                |
                                                2
                                             
                                          
                                          
                                             2
                                             
                                                σ
                                                T
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    exp
                                    
                                       ∑
                                       m
                                    
                                    
                                       λ
                                       m
                                    
                                    
                                       h
                                       m
                                    
                                    (
                                    
                                       
                                          f
                                       
                                    
                                    ,
                                    
                                       
                                          e
                                       
                                    
                                    )
                                 
                                 
                                    
                                       ∑
                                       
                                          
                                             
                                                
                                                   e
                                                
                                             
                                             ′
                                          
                                       
                                    
                                    exp
                                    
                                       ∑
                                       m
                                    
                                    
                                       λ
                                       m
                                    
                                    
                                       h
                                       m
                                    
                                    (
                                    
                                       
                                          f
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             e
                                          
                                       
                                       ′
                                    
                                    )
                                 
                              
                              
                              d
                              
                                 
                                    λ
                                 
                              
                              ,
                           
                        
                     and, finally, the decision rule will be given by the maximisation of the previous equation, i.e.,
                        
                           (9)
                           
                              
                                 
                                    
                                       e
                                    
                                 
                                 ˆ
                              
                              =
                              
                                 argmax
                                 
                                    
                                       e
                                    
                                 
                              
                              p
                              (
                              
                                 
                                    e
                                 
                              
                              ∣
                              
                                 
                                    f
                                 
                              
                              ;
                              T
                              ,
                              A
                              )
                              .
                           
                        
                     Note that, in this case, the denominators in Eq. (8) cannot be easily neglected, as was the case in Eq. (2), since they are affected by the integral.

In the next section, different strategies for approximating the integral in Eq. (8) are presented. However, before carrying on with the presentation of these strategies, there are several approximations that need to be performed so that the predictive distribution can be computed. Firstly, 
                        p
                        (
                        A
                        
                        |
                        
                        
                           
                              λ
                           
                        
                        ;
                        T
                        )
                      and p(e|f, 
                        λ
                     ) contain in their denominator sums over all possible sentences of the target language, which is not computable. For this reason, 
                        
                           ∑
                           
                              
                                 
                                    
                                       e
                                    
                                 
                                 ′
                              
                           
                        
                      is approximated as the sum over all the hypotheses within the n-best list generated during the regular decoding process. Coherently, instead of performing a full search of the best possible translation we will only consider eligible the ones present in such n-best list, leading to


                     
                        
                           (10)
                           
                              
                                 
                                    
                                       p
                                       (
                                       
                                          
                                             e
                                          
                                       
                                       ∣
                                       
                                          
                                             f
                                          
                                       
                                       ;
                                       T
                                       ,
                                       A
                                       )
                                    
                                    
                                       ∝
                                    
                                    
                                       Z
                                       ∫
                                       
                                          ∏
                                          
                                             a
                                             =
                                             1
                                          
                                          
                                             |
                                             A
                                             |
                                          
                                       
                                       
                                       
                                          
                                             exp
                                             
                                                ∑
                                                m
                                             
                                             
                                                λ
                                                m
                                             
                                             
                                                h
                                                m
                                             
                                             (
                                             
                                                
                                                   
                                                      f
                                                   
                                                
                                                a
                                             
                                             ,
                                             
                                                
                                                   
                                                      e
                                                   
                                                
                                                a
                                             
                                             )
                                          
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            e
                                                         
                                                      
                                                      ′
                                                   
                                                   ∈
                                                   
                                                      Γ
                                                      n
                                                   
                                                   (
                                                   
                                                      
                                                         
                                                            f
                                                         
                                                      
                                                      a
                                                   
                                                   )
                                                
                                             
                                             exp
                                             
                                                ∑
                                                m
                                             
                                             
                                                λ
                                                m
                                             
                                             
                                                h
                                                m
                                             
                                             (
                                             
                                                
                                                   
                                                      f
                                                   
                                                
                                                a
                                             
                                             ,
                                             
                                                
                                                   
                                                      e
                                                   
                                                
                                                ′
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       exp
                                       
                                          
                                             
                                                −
                                                
                                                   
                                                      |
                                                      |
                                                      
                                                         
                                                            λ
                                                         
                                                      
                                                      −
                                                      
                                                         
                                                            
                                                               λ
                                                            
                                                         
                                                         T
                                                      
                                                      |
                                                      
                                                         |
                                                         2
                                                      
                                                   
                                                   
                                                      2
                                                      
                                                         σ
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                             exp
                                             
                                                ∑
                                                m
                                             
                                             
                                                λ
                                                m
                                             
                                             
                                                h
                                                m
                                             
                                             (
                                             
                                                
                                                   f
                                                
                                             
                                             ,
                                             
                                                
                                                   e
                                                
                                             
                                             )
                                          
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            e
                                                         
                                                      
                                                      ′
                                                   
                                                   ∈
                                                   
                                                      Γ
                                                      n
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                   
                                                   )
                                                
                                             
                                             exp
                                             
                                                ∑
                                                m
                                             
                                             
                                                λ
                                                m
                                             
                                             
                                                h
                                                m
                                             
                                             (
                                             
                                                
                                                   f
                                                
                                             
                                             ,
                                             
                                                
                                                   
                                                      e
                                                   
                                                
                                                ′
                                             
                                             )
                                          
                                       
                                       
                                       d
                                       
                                          
                                             λ
                                          
                                       
                                       ,
                                    
                                 
                              
                           
                        
                     where Γ
                        n
                     (f) represents the set of n best translation hypotheses that can be generated for sentence f.

In addition, typical state-of-the-art SMT systems do not guarantee complete coverage of all possible sentence pairs due to the great number of heuristic decisions involved, and out-of-vocabulary words may imply that the SMT model is unable to explain a certain bilingual sentence completely. Hence, instead of using the true reference present in 
                        A
                     , we will use the best possible translation e
                     * generated during the decoding process, i.e., the best translation within Γ
                        n
                     (f
                     
                        a
                     ). e
                     * is often referred to as oracle derivation in related work (Cherry and Foster, 2012).

The formulation presented would also allow considering as model parameters the feature functions h(·, ·). However, in the present article we will only consider the adaptation of 
                        λ
                     , since adapting h is much more costly and is left as future work.

Computing the integral over the complete parametric space, as described in Eq. (8), is often computationally unfeasible. Moreover, the function to be integrated might not even be integrable. Hence, it is often approximated by a discrete sum over a sampling of such parameters. For simplicity 
                        S
                        (
                        
                           
                              
                                 λ
                              
                           
                           T
                        
                        )
                      will denote a specific sampling of 
                        λ
                     , starting from 
                        
                           
                              
                                 λ
                              
                           
                           T
                        
                     .

As a first approach, the close neighbourhood of 
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                         was explored. For doing this, each one of the components of 
                           λ
                         was perturbed by a random amount, successively:


                        
                           
                              
                                 
                                 
                                    
                                       Input 
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                T
                                             
                                          , the parameter mean vector of size Q
                                       
                                    
                                    
                                       Output 
                                             S
                                             (
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                T
                                             
                                             )
                                          , a (pseudo-)random sampling of 
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                T
                                             
                                          
                                       
                                    
                                    
                                       Initialise 
                                             
                                                S
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   T
                                                
                                                )
                                             
                                             =
                                             {
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                T
                                             
                                             }
                                          
                                       
                                    
                                    
                                       For s in {1, …, N
                                          
                                             S
                                          } do
                                    
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                s
                                             
                                             =
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                T
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          k
                                          =
                                          s
                                          mod
                                          Q
                                       
                                    
                                    
                                       
                                          
                                          λ
                                          
                                             s,k
                                          
                                          =
                                          λ
                                          
                                             s,k
                                          
                                          +rand(−0.5, 0.5)
                                    
                                    
                                       
                                          
                                          
                                             λ
                                          
                                          
                                             s
                                          
                                          =
                                          
                                             λ
                                          
                                          
                                             s
                                          /∑
                                             k
                                          |λ
                                          
                                             s,k
                                          |
                                    
                                    
                                       
                                          
                                          
                                             
                                                S
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   T
                                                
                                                )
                                             
                                             =
                                             
                                                S
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   T
                                                
                                                )
                                             
                                             ∪
                                             {
                                             
                                                
                                                   
                                                      λ
                                                   
                                                
                                                s
                                             
                                             }
                                          
                                       
                                    
                                 
                              
                           
                         where N
                        
                           S
                         is the amount of sampled 
                           λ
                         desired, 
                           λ
                        
                        
                           s
                        
                        =[λ
                        
                           s,1, …, λ
                        
                           s,M
                        ]
                           T
                         is a single one of those samples, |c| denotes the absolute value of c, and rand(a, b) is a random value obtained from a uniform distribution in the interval [a, b]. Bear in mind that, although each λ
                        
                           k
                         may not be on the same scale, typical state-of-the-art systems such as Moses (Koehn et al., 2007) use normalised weights (i.e., ∑
                           k
                        |
                           λ
                        
                        
                           k
                        |=1). Such normalisation was found to be an important step during the experimental phase, since it implies that the range [−0.5, 0.5] is large enough so as to provide variability to the samples obtained.

Although this algorithm involves a series of heuristic decisions, it has one main advantage: the sample 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         produced is not a function of 
                           A
                        . This means that most terms in Eq. (7) can be precomputed, except for p(e
                        ∣
                        f, 
                           λ
                        ), and 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         does not need to be recomputed for every 
                           A
                        , which would be far too costly when applying BPA in an online scenario. In next section, we present a sampling strategy more theoretically sound, but which does need to recompute 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         for each 
                           A
                        .

However, the approximation provided by this heuristic algorithm is sensible to normalisation. This can be seen e.g., in Eq. (8): dropping the normalisation constant 
                           Z
                         leads to a product of probabilities, which implies that larger amounts of adaptation data will lead to smaller numeric values, and the relative importance of 
                           p
                           (
                           A
                           ∣
                           
                              
                                 λ
                              
                           
                           ;
                           T
                           )
                         will fade when more evidence arrives. To compensate this fact, after replacing the integral by a finite summation, Eq. (7) is complemented with a leveraging factor δ, such that
                           
                              (11)
                              
                                 p
                                 (
                                 
                                    
                                       e
                                    
                                 
                                 ∣
                                 
                                    
                                       f
                                    
                                 
                                 ;
                                 T
                                 ,
                                 A
                                 )
                                 ≈
                                 
                                    ∑
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       ∈
                                       
                                          S
                                          (
                                          
                                             
                                                
                                                   λ
                                                
                                             
                                             T
                                          
                                          )
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             p
                                             (
                                             A
                                             ∣
                                             
                                                
                                                   λ
                                                
                                             
                                             ;
                                             T
                                             )
                                             p
                                             (
                                             
                                                
                                                   e
                                                
                                             
                                             ∣
                                             
                                                
                                                   f
                                                
                                             
                                             ,
                                             
                                                
                                                   λ
                                                
                                             
                                             )
                                          
                                       
                                    
                                    
                                       
                                          1
                                          δ
                                       
                                    
                                 
                                 
                                 p
                                 (
                                 
                                    
                                       λ
                                    
                                 
                                 ∣
                                 T
                                 )
                                 .
                              
                           
                        
                     


                        Markov chain Monte Carlo (MCMC) methods (Bishop, 2006) obtain samples 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         of a variable (in this case 
                           λ
                        ) assumed to follow a certain distribution, i.e., 
                           p
                           (
                           
                              
                                 λ
                              
                           
                           ∣
                           T
                           ,
                           A
                           )
                        . MCMC methods are specially suited for sampling distributions where the normalisation constant cannot be evaluated (Bishop, 2006). For doing this, a (first order) Markov chain is established, where each new sample 
                           λ
                        
                        * depends on the previous sample 
                           λ
                        ′. Specifically, in this article we will be using the Metropolis–Hastings (MH) algorithm (Hastings, 1970), which consists in drawing a sample 
                           λ
                        * from a given proposal distribution q(
                           λ
                        
                        ∣
                        
                           λ
                        ′). Then, 
                           λ
                        
                        * is accepted with probability


                        
                           
                              (12)
                              
                                 A
                                 (
                                 
                                    
                                       
                                          λ
                                       
                                    
                                    *
                                 
                                 ,
                                 
                                    
                                       
                                          λ
                                       
                                    
                                    ′
                                 
                                 )
                                 =
                                 min
                                 
                                    
                                       
                                          1
                                          ,
                                          
                                             
                                                
                                                   
                                                      p
                                                      ˜
                                                   
                                                
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   *
                                                
                                                )
                                                q
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   ′
                                                
                                                ∣
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   *
                                                
                                                )
                                             
                                             
                                                
                                                   
                                                      p
                                                      ˜
                                                   
                                                
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   ′
                                                
                                                )
                                                q
                                                (
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   *
                                                
                                                ∣
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                   
                                                   ′
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        with 
                           p
                           (
                           
                              
                                 λ
                              
                           
                           )
                           =
                           
                              
                                 p
                                 ˜
                              
                           
                           (
                           
                              
                                 λ
                              
                           
                           )
                           /
                           
                              Z
                              p
                           
                         being the distribution from which we intend to sample, and 
                           
                              Z
                              p
                           
                         being the normalisation term for p(
                           λ
                        ). In Eq. (12), 
                           
                              
                                 p
                                 ˜
                              
                           
                           (
                           
                              
                                 λ
                              
                           
                           )
                         can be safely used instead of p(
                           λ
                        ), since 
                           
                              Z
                              p
                           
                         would be simplified. If the proposal distribution is symmetric, terms q(·∣·) can also be simplified.

The proposal distribution is often set as a normal distribution 
                           N
                           (
                           
                              
                                 λ
                              
                           
                           ;
                           
                              
                                 
                                    λ
                                 
                              
                              ′
                           
                           ,
                           I
                           ·
                           
                              σ
                              o
                           
                           )
                        , with mean vector 
                           λ
                        ′ and covariance matrix a diagonal matrix with main diagonal σ
                        
                           o
                        . Establishing σ
                        
                           o
                         is critical, since too small values will lead to a high rejection rate and the sampling chain will most likely get stuck at a local maximum, while too big values will lead to a chaotic chain which will not sample the density function appropriately.

Another aspect that needs to be taken into account when building a MCMC chain is the burn-in phase (Bishop, 2006), which is the number of samples that need to be drawn in order to assume independence from the initial state of the Markov chain.

Once 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         has been obtained from 
                           p
                           (
                           
                              
                                 λ
                              
                           
                           ∣
                           T
                           ,
                           A
                           )
                         (or, dropping the normalisation constant in Eq. (5), from 
                           p
                           (
                           A
                           ∣
                           
                              
                                 λ
                              
                           
                           ;
                           T
                           )
                           p
                           (
                           
                              
                                 λ
                              
                           
                           ∣
                           T
                           )
                        ), Eq. (7) is approximated, again according to the Strong Law of Large Numbers (Bishop, 2006), as
                           
                              (13)
                              
                                 p
                                 (
                                 
                                    
                                       e
                                    
                                 
                                 ∣
                                 
                                    
                                       f
                                    
                                 
                                 ;
                                 T
                                 ,
                                 A
                                 )
                                 ≈
                                 
                                    Z
                                    ′
                                 
                                 
                                    ∑
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       ∈
                                       
                                          S
                                          (
                                          
                                             
                                                
                                                   λ
                                                
                                             
                                             T
                                          
                                          )
                                       
                                    
                                 
                                 p
                                 (
                                 
                                    
                                       e
                                    
                                 
                                 ∣
                                 
                                    
                                       f
                                    
                                 
                                 ,
                                 
                                    
                                       λ
                                    
                                 
                                 )
                                 ,
                              
                           
                        where δ is not required either. Although the right hand of Eq. (13) seems independent from 
                           T
                         and 
                           A
                        , this is only a notation issue, since such dependency is hidden within 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                        , and 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         must be recomputed for every adaptation set 
                           A
                        .

@&#EXPERIMENTS@&#

Experiments were performed by means of the open-source MT toolkit Moses (Koehn et al., 2007)
                        3
                     
                     
                        3
                        Available from http://www.statmt.org/moses/.
                      (version 0.91) in its default non-monotonic configuration, which includes 5 translation models (direct- and inverse-translation and lexicalised models and the phrase-penalty), 7 re-ordering models (an exponential model and the six models included within the msd-reordering-fe model (Koehn et al., 2005)), the word-penalty and a word-based language model, i.e., |
                        λ
                     |=14. The language model used was a 5-gram with modified Kneser-Ney smoothing (Kneser and Ney, 1995), built with the SRILM toolkit (Stolcke, 2002).

Translation quality will be assessed mainly by means of single-reference TER (Snover et al., 2006). TER (Translation Error Rate) is an error metric (i.e., the lower the better) that computes the minimum number of edits required to modify the system hypotheses so that they match the reference. Possible edits include insertion, deletion and substitution of single words, as well as shifts of word sequences. Some results will also be presented in terms of BLEU (Papineni et al., 2001), with the purpose of assessing whether the improvements in TER also correspond to improvements in BLEU. BLEU (BiLingual Evaluation Understudy) is a precision metric (i.e., the higher the better) that measures n-gram (n
                     ≤4) coverage of the system hypotheses with respect to the reference, with a penalty for sentences that are too short. For computing the best possible hypothesis e
                     * as described in Section 3, TER will be used, since BLEU is not always well defined at the sentence level, given that it implements a geometrical average which is zero whenever there is no common 4-gram between hypothesis and reference, e.g., a 3-word sentence. Selecting e
                     * with smoothed versions of BLEU is planned as future work.

The points in the plots presented in this section display the average of 10 experiments, in which 
                        A
                      was re-drawn each time with replacement. Unless stated otherwise, the x-axis will always be in logarithmic scale and display 
                        |
                        
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                        
                        |
                     . The scale of the y-axis will be linear whenever the plot displays translation quality, and logarithmic in the case of the confidence interval sizes (in TER points unless stated otherwise). These confidence intervals present the 95% confidence level and were computed as 2σ, where σ is the empirical standard deviation observed in the 10 repetitions. Note that the full confidence interval would be 4σ, i.e., ±2σ. Confidence intervals are displayed in different plots, instead of using error bars, because otherwise the translation quality plots would present vertical lines across the complete plot, rendering it unreadable. For analysing the effect of the different meta-parameters in BPA, we performed experiments on all the available domains (explained in next section). We only present here the clearest plot, for readability purposes. For simplicity purposes, the size n of the n-best lists in Eq. (10) was the same for both Γ
                        n
                     (f) and Γ
                        n
                     (f
                     
                        a
                     ) in all experiments, and was set to 500 in all experiments, unless stated otherwise.

In the following subsections, we will first present the corpora used (Section 5.1). Then, we will analyse the effect of the different meta-parameters involved in the BPA samplings (Section 5.3 for the heuristic sampling, Section 5.4 for the MCMC sampling). This being done, we compare both sampling approaches in terms of final translation quality (Section 5.5). Next, in Section 5.6, we compare the best performing BPA approach, namely MCMC, with other re-estimation approaches present in the literature, and a final analysis of the results is performed in Section 5.7.

The experiments conducted in this paper were carried out on five different corpora, belonging to different domains, all of them stemming from the domain adaptation Summer workshop carried out at the John Hopkins University in 2012 (Carpuat et al., 2012). In this workshop, the task was to adapt French→English translation models. The out-of-domain corpus provided originated in the parliamentary domain (Canadian Hansards), and the in-domain corpora included the medical domain (henceforth referred to as EMEA), the general news domain (henceforth referred to as NEWS), the press domain (NRC), and the subtitle domain (SUBS). Statistics of the out-of-domain corpus are provided in Table 1
                        , and statistics of the in-domain corpora are provided in Table 2
                        . Even though it might seem odd that the SUBS in-domain training data is larger than the Hansards out-of-domain training data, this is how the task was designed. Note that this task was intended for an adaptation problem involving many more parameters, i.e., feature function adaptation, which requires much more data than the problem of scaling factor adaptation. We will only make use of much less data, since it is common knowledge that scaling factors are already well estimated with about 2000 sentences. However, the amount of data available allows us to perform several random extractions of the adaptation set 
                           A
                        .

The standard features h were estimated on the training partition of the Hansards corpus 
                           T
                        , whereas a canonical 
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                         was estimated on the development subset 
                           D
                         (i.e., a held-out subset of 
                           T
                         used to estimate h) by means of the default MERT implementation within Moses. Translation quality will be estimated on the different in-domain test subsets.

Whenever reporting translation quality of a BPA experiment, the (full) experimental setup involves:
                           
                              1.
                              Obtain n-best lists from the corresponding test set, with 
                                    
                                       
                                          
                                             h
                                          
                                       
                                       T
                                    
                                  estimated on the training partition of the Hansards corpus and the 
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       D
                                    
                                  estimated on the development subset of the Hansards corpus.

Obtain n-best lists from the adaptation data, similarly as done for the test.

Compute sentence-level TER scores for each one of the n-best hypotheses for both test and adaptation.

Rerank the n-best lists obtained according to Eq. (11) or Eq. (13), accordingly.

Whenever reporting translation quality of a re-estimation experiment, the (full) experimental setup involves:
                           
                              1.
                              Initialize the 
                                    λ
                                  estimation procedure with the 
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       D
                                    
                                  estimated on the development subset of the Hansards corpus, 
                                    
                                       
                                          
                                             h
                                          
                                       
                                       T
                                    
                                  estimated on 
                                    T
                                 .

Run the corresponding 
                                    λ
                                  estimation algorithm on the adaptation data, obtaining 
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       A
                                    
                                 .

Decode the final test set using 
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       A
                                    
                                 .

In both cases, these will also be the steps considered when reporting adaptation times (Section 5.7), without including the time taken by the initial 
                           
                              
                                 
                                    h
                                 
                              
                              T
                           
                         and 
                           
                              
                                 
                                    λ
                                 
                              
                              D
                           
                         estimation procedures, since these are common steps.

Results for this kind of sampling are shown in Fig. 1
                        , for different values of the δ leveraging factor and different values for the prior distribution variance 
                           
                              σ
                              T
                           
                         in Eq. (8). As shown, the BPA approach is able to improve over the unadapted system from the very beginning. The results show that smaller values of δ lead to a slight degradation in translation quality when the size of 
                           A
                         becomes larger. The reason for this can be explained by looking at Eq. (11). Since 
                           p
                           (
                           A
                           ∣
                           
                              
                                 λ
                              
                           
                           ;
                           T
                           )
                         is implemented as a product of probabilities, the more adaptation samples the smaller becomes 
                           p
                           (
                           A
                           ∣
                           
                              
                                 λ
                              
                           
                           ;
                           T
                           )
                        , and a higher value of δ is needed to compensate this fact. The differences between different δ values were, although small, found to be coherent in all the other experiments conducted.

As for the effect of the prior distribution variance 
                           
                              σ
                              T
                           
                        , it was observed to have a very similar effect than δ. On the one hand, smaller values of 
                           
                              σ
                              T
                           
                         entail that the adaptation procedure is practically de-activated for a small amount of adaptation samples. Since 
                           N
                           (
                           
                              
                                 λ
                              
                           
                           ;
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           ,
                           I
                           ·
                           
                              σ
                              T
                           
                           )
                         is the more “peaky” the smaller 
                           
                              σ
                              T
                           
                         is, less variability for the different 
                           
                              
                                 λ
                              
                           
                           ∈
                           
                              S
                              (
                              
                                 
                                    
                                       λ
                                    
                                 
                                 T
                              
                              )
                           
                         is allowed for small values of 
                           
                              σ
                              T
                           
                        . However, this implies that a certain σ will be “assigned” by the prior a numerically much smaller probability even if it is not very far away from 
                           
                              σ
                              T
                           
                        . This explains the fact that smaller values of 
                           
                              σ
                              T
                           
                         behave better when the amount of adaptation data increases, since, as seen for the leveraging factor δ, 
                           p
                           (
                           A
                           ∣
                           
                              
                                 λ
                              
                           
                           ;
                           T
                           )
                         also has a numerically smaller value in those cases.

Although not shown here for space reasons, increasing the number of sampled parameters 
                           |
                           
                              S
                              (
                              
                                 
                                    
                                       λ
                                    
                                 
                                 T
                              
                              )
                           
                           |
                        , did not have any effect on the average translation quality, as expected. However, it did provide further robustness to the results, and confidence intervals tended to be smaller for larger values of 
                           |
                           
                              S
                              (
                              
                                 
                                    
                                       λ
                                    
                                 
                                 T
                              
                              )
                           
                           |
                        , specially when the size of 
                           A
                         was small. When increasing 
                           |
                           
                              S
                              (
                              
                                 
                                    
                                       λ
                                    
                                 
                                 T
                              
                              )
                           
                           |
                         from 1000 to 2000, the improvements in stability were already very scarce, and were probably not worth the computational overhead.

First, appropriate values for the variance of the prior distribution 
                           
                              σ
                              T
                           
                         and of the proposal distribution σ
                        
                           o
                         were analysed (Fig. 2
                         left). Note that σ
                        
                           o
                         is tightly related to 
                           
                              σ
                              T
                           
                        , since they both control how much variation is introduced into the predictive distribution of BPA. The best values for σ
                        
                           o
                         seemed to appear when setting 
                           
                              σ
                              o
                           
                           ≈
                           0.1
                           ·
                           
                              σ
                              T
                           
                        , and considering 
                           
                              σ
                              o
                           
                           >
                           
                              σ
                              T
                           
                         seemed to lead to non-adaptive systems. In the rest this Section, 
                           
                              σ
                              T
                           
                           =
                           0.1
                         and σ
                        
                           o
                        
                        =0.01 were adopted.

Different 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         sizes, i.e., different MCMC chain lengths, had an important effect on the confidence intervals, and also to some extent on average translation quality (Fig. 2 right). As shown, the improvements achieved when moving from 
                           |
                           
                              S
                              (
                              
                                 
                                    
                                       λ
                                    
                                 
                                 T
                              
                              )
                           
                           |
                           =
                           1000
                         to 
                           |
                           
                              S
                              (
                              
                                 
                                    
                                       λ
                                    
                                 
                                 T
                              
                              )
                           
                           |
                           =
                           5000
                         might not be worth the computational overhead (let alone values larger than 5000). Although not reported here in order to avoid including too many plots, the duration of the burn-in phase was not found to be specially critical. A slight gain in stability was observed for small 
                           S
                           (
                           
                              
                                 
                                    λ
                                 
                              
                              T
                           
                           )
                         sizes, although no real conclusion could be drawn. Nevertheless, burn-in length was set to 500 in the rest of the experiments involving MCMC.

Once the effect of the different meta-parameters of the two different sampling approaches have been analysed, we now pursue to compare these two approaches among each other. In addition, with the purpose of analysing the effect of considering the integral (or finite sum in practise) over the complete parametric space (or parameter sampling in practise), instead of just a point estimate of the parameters, we performed a series of experiments by replacing the integral by an argmax operation. This means that, instead of computing the probability of a given output sentence as the complete integral, we only consider that specific 
                           
                              
                                 
                                    λ
                                 
                              
                              ˆ
                           
                         that yields the highest probability according to 
                           p
                           (
                           A
                           ∣
                           
                              
                                 λ
                              
                           
                           ;
                           T
                           )
                           p
                           (
                           
                              
                                 λ
                              
                           
                           ∣
                           T
                           )
                           p
                           (
                           
                              
                                 e
                              
                           
                           ∣
                           
                              
                                 f
                              
                           
                           ,
                           
                              
                                 λ
                              
                           
                           )
                        , following a Viterbi-like approach. The results are shown in Fig. 3
                        . As shown, the MCMC sampling seems to perform better for the EMEA corpus, but worse for the SUBS corpus. Because the way in which the samples are extracted, heur relies much more on the parameter prior than MCMC, and it must be concluded that the test set chosen presents a different composition than the adaptation data. MCMC also presented a better behaviour for the NRC and NEWS corpora (not shown here for space reasons). On the other hand, the heur-vit setup proved to be extremely stable for 
                           |
                           A
                           |
                           >
                           100
                         for the SUBS, NRC and NEWS corpora. In addition, when looking at the translation quality of the SUBS corpus, it stands out that both vit curves behave specially poorly for small amounts of adaptation data. This elucidates precisely the effect of the integral: as already discussed above, the test set of the SUBS corpus seems to be quite different from the adaptation data, which means that, when 
                           |
                           A
                           |
                         is small, over-training towards the adaptation data is more prone to occur. However, considering the integral over the complete parametric space tends to compensate this, providing robustness in case that adaptation and test data do not match. Hence, it can be said that, although heur-vit is more stable in some situations, its behaviour is less predictable. Lastly the mcmc-vit setting is not really noteworthy, since it simply performs worse than the mcmc setting, as could be expected.

To synthesise the different strategies, the different SMT systems compared in this section when adapting 
                           λ
                         are:
                           
                              •
                              Baseline system: Phrase-pairs extracted from the Hansards training corpus, i.e., h estimated on 
                                    T
                                 . Scaling factors 
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       T
                                    
                                  estimated on 
                                    D
                                  by means of MERT.

MCMC: Initial setup identical to the baseline system. Adaptation samples 
                                    A
                                  were randomly extracted from the training partitions of the in-domain corpora (i.e., EMEA, NEWS, NRC or SUBS). 
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       T
                                    
                                  within 
                                    p
                                    (
                                    
                                       
                                          λ
                                       
                                    
                                    ∣
                                    T
                                    )
                                  estimated on 
                                    D
                                  with MERT. The sampling strategy used within BPA was MCMC.

MERT: Initial setup identical to the baseline system. The adaptation samples 
                                    A
                                  described above were used for estimating a new set of scaling factors using MERT.

MIRA: As MERT, but scaling factors are estimated by means of MIRA. Note that MIRA is an incremental estimation strategy, and 
                                    
                                       
                                          
                                             λ
                                          
                                       
                                       T
                                    
                                  were provided for the MIRA starting point. Hence, MIRA could also be considered a sort of adaptation strategy (i.e., not full re-estimation).

PRO: As MERT, but scaling factors are estimated by means of pairwise optimisation.

MERT+: Initial setup identical to the baseline system. Then, 
                                    λ
                                  was re-estimated on 
                                    A
                                  and 
                                    D
                                 , concatenated.

In addition, we also conducted experiments by concatenating 
                           A
                         and 
                           D
                        , and using the result for estimating 
                           λ
                         by means of MERT. However, such strategy performed consistently worse in terms of TER than the other re-estimation strategies analysed here. For this reason, this setup was removed from the final comparison in order to avoid clogging the plots with too many curves.

It must be emphasised, however, that the re-estimation strategies are not really a fair comparison, since they are all by far much more costly than BPA (computational cost is analysed in Section 5.7). In addition, they involve several translation steps, each of which re-computes the n-best list, and have better chances to obtain better hypotheses, whereas the BPA strategies implemented rely on a pre-computed n-best list of fixed size (in this Section, n-best size was set to 500).

Results of such comparison can be seen in Fig. 4
                        . There are several things that should be noted:
                           
                              •
                              For small amounts of adaptation data, BPA is the strategy that performs the best in all cases except for the NRC corpus.

MERT and PRO display a very unstable behaviour for small 
                                    |
                                    
                                       S
                                       (
                                       
                                          
                                             
                                                λ
                                             
                                          
                                          T
                                       
                                       )
                                    
                                    |
                                  sizes, and MIRA seems to exhibit better performance. This is not surprising, since MIRA can also be seen as an adaptation strategy, as discussed above.

The SUBS corpus appears to be a specially difficult corpus. In the first place, TER scores are specially high. In addition, neither the MERT and MIRA strategies are able to improve over the unadapted baseline.

For small amounts of adaptation data, the confidence intervals of PRO, MIRA and MERT may be as big as 10–20 TER points. When taking into account a baseline of about 65 TER points, 10 points may well imply the difference between the output being useful or being completely useless. In contrast, BPA seldom yields confidence intervals of more than 2 TER points.

MERT+ yields estimations which are as stable as BPA, but yields worse performance in most settings (i.e., except for the SUBS corpus). We consider this point important, since the stability achieved by BPA reveals precisely that BPA is an appropriate adaptation strategy for this problem: the size of the confidence intervals can be seen as a measure of how prone is a given algorithm to over-training, and BPA proves to be able to provide quite stable estimations even for very small amounts of data.

From these observations, it can be concluded that BPA is an effective adaptation strategy. An adaptation strategy only is useful when the amount of adaptation data is small, and BPA proves to perform well under such circumstances. If the amount of adaptation data is larger (>100), BPA still yields an acceptable behaviour, although the pure re-estimation strategies do yield better estimates of 
                           λ
                        .

Since BLEU is a more standard evaluation metric than TER among the SMT community, we also report some BLEU results in Fig. 5
                        . The overall analysis varies little with respect to the one done with TER. However, two things are noteworthy: firstly, BPA tends to perform slightly worse in terms of BLEU. This is actually expected, since the best possible hypothesis e
                        * is selected according to TER, and BLEU includes a brevity penalty witch TER does not take into account. Second, the size of the confidence intervals obtained is nearly the same as in the case of TER, and BPA tends to achieve smaller confidence intervals, specially in the case of small amounts of adaptation data. It is also interesting to see that the re-estimation approaches need more than 100 adaptation samples in order to achieve the performance that the heuristic version of BPA achieves with only 10 samples. As in the case of the experiments involving TER, the results for NEWS and NRC were similar to those obtained with the EMEA corpus, and SUBS seems to be specially difficult.

@&#ANALYSIS@&#

Given that adapting 
                           λ
                         is a rather coarse-grained adaptation strategy, it is important to analyse where the improvements come from, and whether such improvements may be due only to a re-adjustment in sentence length. For this reason, we analysed the n-gram precision and the brevity penalty implemented within BLEU. For a certain n, n-gram precision is computed as the proportion of n-grams that match between the candidate hypotheses and the references. The brevity penalty is defined as min(1, r), being r the ratio between hypothesis and reference lengths. In Table 3
                        , average n-gram precision for all 10 repetitions is shown for two of the corpora analysed. Since we are interested in analysing the behaviour in conditions where there is a very small amount of data available, and when there is more data available, we studied n-gram precision with 10 and with 100 adaptation samples. Interestingly, it is observed that, as a matter of fact, sentence length is actually penalising rather heavily the BPA approach: for the EMEA corpus, BPA is the only strategy to be penalised by the brevity penalty, meaning that it is the one that performs worst when only taking into account sentence length. This is actually expected, since BPA selects the best hypothesis according to TER. However, in terms of n-gram precision, it clearly outperforms the other approaches for 10 adaptation samples, and also for 100 adaptation samples in the lower order n-grams. In the higher order n-grams, BPA seems to perform a bit worse. When considering the SUBS corpus, two facts stand out: on the first place, that MCMC and MIRA yield the best n-gram precision for 
                           |
                           A
                           |
                           =
                           10
                        , but also suffer a very heavy penalisation in terms of sentence length. When considering 
                           |
                           A
                           |
                           =
                           100
                        , all four methods are very heavily penalised by the brevity penalty. This points towards a big mismatch between the SUBS adaptation data and the SUBS test data, which explains as well the fact that all methods studied yield pretty poor results. Such mismatch can already be observed when looking at the average sentence length of the sentences, shown in Table 2, where the SUBS corpus is the one that presents the most mismatch between 
                           A
                         and test. All in all, n-gram precision seems to signal that improvements obtained by BPA are due to a better lexical choice of the phrases involved, and not to a side-effect of adjusting the output sentence length.

Regarding computational time, Fig. 6
                         reports the time consumed by each one of the approaches reported in Fig. 4. Note that, in this case, both axes are plotted in logarithmic scale. Computational time was measured in single-threaded runs of the algorithms presented on 64 bit machines with Intel Xeon CPUs at 2.50GHz with 6MB cache. In the case of BPA, the number of sampled weights was 1000, and the time reported also includes the time required for generating the n-best lists of 
                           A
                         and the sentence-level TER counts. In fact, the time taken only by BPA ranges from 10 to 20min. As shown, the heuristic BPA approach is the fastest one, and both BPA approaches are about one order of magnitude faster than MERT, MIRA and PRO. Although somewhat hidden by the logarithmic scale, it must be noted that MIRA and PRO present very steep curves for 
                           |
                           A
                           |
                           =
                           1000
                         and 
                           |
                           A
                           |
                           =
                           2000
                        , and the difference in computational cost between these two and MERT is noteworthy.

Lastly we also analysed the effect of varying the size of the n-best list considered (Fig. 7
                        ). Again, BPA is able to cope well with additional input information, and additional hypotheses in the n-best list imply that BPA is able to select better hypothesis without incurring into over-trained solutions.

@&#CONCLUSIONS AND FUTURE WORK@&#

In this paper, Bayesian predictive adaptation has been thoroughly analysed for its application to log-linear weight adaptation in statistical machine translation. On the one hand, the theoretical framework for adapting the scaling factors present in most state-of-the-art SMT systems has been developed. On the other hand, experimental results analysing the effectiveness of such adaptation procedures have been reported.

Results show that BPA is able to provide consistent improvements in translation quality over the baseline systems, as measured by TER, with as few as 10 adaptation samples, and up to an amount of adaptation data that allows a complete re-estimation of the model parameters. In addition, BPA proves to be more stable than most re-estimation strategies, which rely heavily on the amount of adaptation data. It should be emphasised that an adaptation technique, by nature, is only useful whenever the amount of adaptation data is low, and BPA proves to behave well in such context. Whenever the amount of adaptation data is high, the best thing that one can do is to re-estimate the model parameters from scratch, although such re-estimation is often very costly. From a computational point of view, the Bayesian adaptation technique presented does not imply a significant computational overhead, and most terms can be precomputed in the case of heuristic sampling. Hence, we consider that it could be easily implemented within the decoder itself without a significant increase in computational complexity. Nevertheless, it must be taken into account that the search space explored by a given n-best list is much more restrained than the one that the decoder will take into account. This means that, if BPA is to be implemented within the decoder (instead of by re-scoring n-best lists), the number of n-best considered by BPA in the term 
                        p
                        (
                        A
                        ∣
                        
                           
                              λ
                           
                        
                        ;
                        T
                        )
                      must be sufficiently large. We plan to explore this in future work. Different parameter sampling strategies have been studied when applying BPA to the adaptation of the scaling factors, such as the theoretically sound Markov chain Monte Carlo and an ad-hoc heuristic sampling strategy and the Viterbi approach. It emerges that the heuristic sampling strategy performs slightly worse than MCMC, but is computationally less expensive and most terms can be precomputed. In addition, MCMC yields slightly larger confidence intervals.

As future work, we plan to analyse the possibility of adapting the log-linear features of the translation model, and to extend the current BPA implementation so that it is able to deal with more feature-rich SMT models.

@&#ACKNOWLEDGEMENTS@&#

The research leading to these results has received funding from the European Union Seventh Framework Programme (FP7/2007-2013) under grant agreement Nr. 287576 (CasMaCat). Also funded by the Generalitat Valenciana under grant Prometeo/2009/014.

@&#REFERENCES@&#

