@&#MAIN-TITLE@&#Enhancing texture descriptors by a neighborhood approach to the non-additive entropy

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Local non-additive entropy is used to enhance descriptors of texture images.


                        
                        
                           
                           The entropy enriches the descriptors by measuring the local information.


                        
                        
                           
                           The proposal improved the performance of all of the analyzed methods.


                        
                        
                           
                           The gain was more significant for the neighborhood-based descriptors.


                        
                        
                           
                           The proposal can be applied to other descriptors in real-world problems.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Non-additive entropy

Texture analysis

Pattern recognition

Image features

@&#ABSTRACT@&#


               
               
                  This work proposes to enhance well-known descriptors of texture images by extracting such descriptors both directly from pixel intensities as well as from the local non-additive entropy of the image. The method can be divided into four steps. 1) The descriptors are computed for the original image according to what is described in the literature. 2) The image is transformed by computing the non-additive entropy at each pixel, considering its neighborhood. 3) Similarly to step 1, the descriptors are computed from the transformed image. 4) Descriptors from the original and transformed images are combined by means of a Karhunen–Loève transform. Four texture descriptors widely used in the literature were considered: Gabor wavelets, Gray-Level Co-occurrence Matrix, Local Binary Patterns and Bouligand–Minkowski fractal descriptors. The proposal is assessed by comparing the performance of the descriptors alone and after combined with the non-additive entropy. The results demonstrate that the combination achieved the best results both in image retrieval and classification tasks. The entropy is still more efficient in local-based methods: Local Binary Patterns and Gray-Level Co-occurrence Matrix.
               
            

@&#INTRODUCTION@&#

Texture analysis is one of the most important tasks in pattern recognition and computer vision. Despite the usefulness and importance of textures in image representation, it has no formal and consensual definition in the literature. Here, we have adopted the definition presented in [1]. It is stated that the textures are complex visual structures composed of sub-patterns, which show the characteristic properties such as roughness, granularity and uniformity among others. Texture analysis employs pattern recognition methods to identify the objects based on their visual patterns. In this way, this kind of analysis is capable of capturing meaningful information even in the most complex images, when other approaches like contour or color analysis may fail.

Despite its importance, texture analysis still is a great challenge, mainly when it is applied to real-world problems where a reliable extraction of information from the analyzed objects depends on the complex relationships amongst patterns in the image representation. Faced with these difficulties, the literature provides a number of approaches in an attempt to represent the richness enclosed in a texture image in the most faithful manner.

Among the authors of the first works on texture analysis, Haralick is best known for his co-occurrence matrix [2]. By exploring the statistical relationship among pixel neighborhoods, such approach has become the standard method for texture analysis in the 1970's. A contemporary approach that also gathered attention in the literature is the Random Markov Fields [3], which was used mainly for segmentation purposes. At the end of the same decade Laws [4] proposed to compute the energy of the image after the application of several filters. During the 1980's, fractal geometry emerged as a powerful theory to obtain the texture features. This approach was first presented by Mandelbrot [5], which was later rigorously tested by Pentland [6]. More recently, important advances were made on the basis on this approach, by proposals like multifractals [7] and fractal descriptors [8]. Moreover, a recent contribution was made by Local Binary Patterns [9], which describes the pixel neighborhood in a quite simple but powerful way based on the position-dependent weights for the pixel intensities.

Nevertheless, most of the proposed methods obtain the features from the image in a direct manner, without considering the complementary information that cannot be expressed by the intensities of pixels, but only through particular operations over those pixels. In an attempt to fill this gap, some authors have proposed the extraction of features from other domains, like wavelets [10], discrete cosine transform [11], Hough transform [12], and others. On the other hand, other works have been proposed to extract the complementary information from the set of descriptors by means of transforms, which try to emphasize some particular characteristics of those features [13–15]. Even though such methods are efficient to reduce the redundancy in the original data, most of them do not provide any truly different viewpoint other than the pixel intensities.

In this context, this work proposes a method to increase the performance of well-known texture descriptors by using information from the non-additive entropy [16] in each local neighborhood of the image. In addition to measure the level of disorder in the local pixel distribution, the non-additive property of this entropy ensures a more suitable processing of complex non-linear structures commonly found in real-world images.

The non-additive entropy is computed for each pixel considering its 8-neighborhood. The descriptors from the original image and from the entropy values are combined by a concatenation followed by a Karhunen–Loève transform to identify the most meaningful features. The combined descriptors are compared to the conventional approaches, using different values for the q parameter in the non-additive entropy.

Many types of entropy were created after the studies developed by Boltzmann–Gibbs–Shannon. One of them to be highlighted is the non-additive entropy [16]. Based on the idea that different systems require different tools of analysis, which are appropriate to the particularities contained in each system, Tsallis devises its own informational tool named as the non-additive entropy of Tsallis or just q-entropy. The non-additive entropy is the generalization of the standard entropy (Shannon entropy). It is created to extend the scope of applications of classical statistical physics, which is defined by:
                        
                           (1)
                           
                              
                                 
                                    S
                                 
                                 
                                    q
                                 
                              
                              =
                              ∑
                              p
                              (
                              x
                              )
                              
                                 
                                    ln
                                 
                                 
                                    q
                                 
                              
                              ⁡
                              (
                              1
                              /
                              p
                              (
                              x
                              )
                              )
                              ,
                           
                        
                      where 
                        
                           
                              ln
                           
                           
                              q
                           
                        
                      is the q-logarithmic function given by: 
                        
                           
                              ln
                           
                           
                              q
                           
                        
                        ⁡
                        (
                        x
                        )
                        =
                        (
                        
                           
                              x
                           
                           
                              q
                              −
                              1
                           
                        
                        −
                        1
                        )
                        /
                        (
                        q
                        −
                        1
                        )
                     . The entropic index q is real, can be freely chosen and characterizes the generalization. When 
                        q
                        →
                        1
                      we have the standard logarithm function and consequently the standard entropy is retrieved.

The generalized non-additive entropy maintains the character of irreversibility, formulated by Boltzmann's H theorem. However, unlike the standard entropy, this entropy is non-additive. Since
                        
                           (2)
                           
                              
                                 
                                    ln
                                 
                                 
                                    q
                                 
                              
                              ⁡
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              
                                 
                                    ln
                                 
                                 
                                    q
                                 
                              
                              ⁡
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              )
                              +
                              
                                 
                                    ln
                                 
                                 
                                    q
                                 
                              
                              ⁡
                              (
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                              +
                              (
                              1
                              −
                              q
                              )
                              
                                 
                                    ln
                                 
                                 
                                    q
                                 
                              
                              ⁡
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              )
                              
                                 
                                    ln
                                 
                                 
                                    q
                                 
                              
                              ⁡
                              (
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                              ,
                           
                        
                      then:
                        
                           (3)
                           
                              
                                 
                                    S
                                 
                                 
                                    q
                                 
                              
                              (
                              A
                              +
                              B
                              )
                              =
                              
                                 
                                    S
                                 
                                 
                                    q
                                 
                              
                              (
                              A
                              )
                              +
                              
                                 
                                    S
                                 
                                 
                                    q
                                 
                              
                              (
                              B
                              )
                              +
                              (
                              1
                              −
                              q
                              )
                              
                                 
                                    S
                                 
                                 
                                    q
                                 
                              
                              (
                              A
                              )
                              
                                 
                                    S
                                 
                                 
                                    q
                                 
                              
                              (
                              B
                              )
                              .
                           
                        
                     
                  

The parameter 
                        (
                        1
                        −
                        q
                        )
                      of equation gives a measure of the non-additivity, if 
                        q
                        <
                        1
                      the system is called super-additive and when 
                        q
                        >
                        1
                      then the system is sub-additive. This entropy is a good candidate to describe the systems long-range interactions, long-term memory and phase spaces with the fractal structure.

Particularly, in this analysis of signals and images, the (Shannon) entropy plays an important role in describing how predictable is a sequence of measures acquired from the real world. The non-additive entropy adds an important parameter to the entropy with a goal of quantifying the non-additive function of the system. Such a property is of great importance in natural textures where multifractal structures can be found quite easily [17–19].

Textures are images characterized by the presence of spatial or statistical patterns. These patterns are not necessarily periodic. As these are complex images, the textures present great challenges to techniques of pattern recognition and image analysis. Examples of textures include zebra's fur, a pile of rocks, wood, tissues of clothes, details on walls, a chessboard, marble, and others. Literature presents a large number of methods to analyze these kinds of texture images [1]. These methods can be classified in four types as a) structural, b) statistical, c) spectral and d) based on models.
                        
                           a)
                           
                              Structural methods: These methods treat textures as hierarchical arranges of well defined elements, providing a symbolic description of the image. Morphological operations like opening and closing and detectors of points of interest are applied with the aim of finding and describing the arrangement of elements.


                              Statistical methods: Here, textures are described by statistical properties of their gray-levels. The first methods of this category proposed calculations based on the histogram of the images. Since these are very simple approaches, they were replaced by more efficient statistical methods such as Gray-Level Co-occurrence Matrix [2] or Local Binary Patterns [9].


                              Spectral methods: The purpose of these methods is to represent the texture images using their spectral information. In order to do this it is necessary to estimate the spectral frequency of pixel intensity and correlate finer textures with high frequencies and rough textures with low frequencies. Hence in order to describe textures, methods in this category are based on filters like Gabor and decomposition in sub-bands like wavelets [20].


                              Methods based on models: These methods based on models use a built model and feature extraction based on the model to represent textures. The models are usually fractal based or stochastic. Besides this, fractal usage presents good results when one uses local fractal dimension and multiscale fractal dimension [8,13,21].

Once texture patterns are not necessarily periodic, the application of structural methods use to be restrict, because this kind of method assumes that all textures have well defined elements, and this is not always true. On the other hand, the other three methods are able to deal with this challenge of non-periodic patterns. From this point, four of the most relevant methods (two Statistical, one Spectral and the last one based on models) are showed in details on this paper.

The statistical methods that we chose were Gray-Level Co-occurrence Matrix and Local Binary Patterns, because both approaches are much more effective compared to traditional methods of this category (simple calculations based on the histogram of the images). From Spectral methods we decide to work with Gabor wavelets since this filter/sub-band decomposition has the most common usage on the literature [20].

The last method was given in “based on models” category: named as the multiscale fractal approach Bouligand–Minkowski. The reason to use this method is the success that previous studies obtained using this tool [8,13,21].

The following sections give us a brief introduction to these four widespread texture descriptors. These are also the methods chosen to be enhanced in our proposed approach.

Although, this is a simple and consolidated method, it is capable of providing remarkable results in many texture analysis problems. It is based on the famous experiments conducted on the human visual perception carried out by Julesz in the seventies [22]. Such experiments showed that “no texture pair can be discriminated if they agree in their second-order statistics”. Despite counterexamples found subsequently for this statement, this result demonstrated the importance of the second-order statistics for texture characterization.

Haralick defined a second order histogram of the image named co-occurrence matrix, which depends on a distance d between two pixels and a direction (angle) θ. Given an image 
                           f
                           (
                           x
                           ,
                           y
                           )
                        , its co-occurrence matrix 
                           
                              
                                 h
                              
                              
                                 d
                                 ,
                                 θ
                              
                           
                           (
                           i
                           ,
                           j
                           )
                         is defined by the number of pairs of pixels with coordinates 
                           (
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 1
                              
                           
                           )
                         and 
                           (
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 2
                              
                           
                           )
                         satisfying at the same time the following constraints:
                           
                              (4)
                              
                                 
                                    {
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   y
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                             =
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   y
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             +
                                             (
                                             d
                                             cos
                                             ⁡
                                             θ
                                             ,
                                             d
                                             sin
                                             ⁡
                                             θ
                                             )
                                             ,
                                          
                                       
                                       
                                          
                                             f
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   y
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             =
                                             i
                                             ,
                                          
                                       
                                       
                                          
                                             f
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   y
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                             =
                                             j
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

For each d and θ, 
                           
                              
                                 h
                              
                              
                                 d
                                 ,
                                 θ
                              
                           
                         is a square matrix whose dimensions are the number of gray-levels in the image. The ideal number of angles and maximum distance depend on the textures being analyzed. Generally speaking, if a local neighborhood within the texture gives us enough information to describe it, distances greater than 5 pixels and more than four directions are not necessary. Very large distances use to result in very similar values in the matrix making the descriptors useless. An excessive number of angles also produce redundant information. In practice, as the computation of this matrix may have a high computational cost, most studies use only distances 
                           d
                           =
                           1
                         and 
                           d
                           =
                           2
                         pixels and angles 
                           θ
                           =
                           
                              
                                 0
                              
                              
                                 ∘
                              
                           
                        , 
                           
                              
                                 45
                              
                              
                                 ∘
                              
                           
                        , 
                           
                              
                                 90
                              
                              
                                 ∘
                              
                           
                         and 
                           
                              
                                 135
                              
                              
                                 ∘
                              
                           
                        . There are still two types of co-occurrence matrices: symmetric, for which both pairs of pixels at distance d and −d in the direction θ are considered and asymmetric, where only pairs at distance d are counted. The joint probability distribution of pixel pairs 
                           
                              
                                 p
                              
                              
                                 d
                                 ,
                                 θ
                              
                           
                           (
                           i
                           ,
                           j
                           )
                         is obtained by dividing the co-occurrence matrix 
                           
                              
                                 h
                              
                              
                                 d
                                 ,
                                 θ
                              
                           
                           (
                           i
                           ,
                           j
                           )
                         by the total number of neighbor pixels 
                           R
                           (
                           d
                           ,
                           θ
                           )
                        .

To obtain useful texture features from the co-occurrence matrix, Haralick has proposed 14 features to be extracted from p. From those ones we selected three of the most commonly used in the literature, to know, Angular Second Moment, Correlation and Entropy. They are defined in the following, assuming that 
                           
                              
                                 μ
                              
                              
                                 x
                              
                           
                           ,
                           
                              
                                 μ
                              
                              
                                 y
                              
                           
                         and 
                           
                              
                                 σ
                              
                              
                                 x
                              
                           
                           ,
                           
                              
                                 σ
                              
                              
                                 y
                              
                           
                         are, respectively, the mean and standard deviation on x and y columns in p.

Angular Second Moment: 
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 0
                              
                              
                                 G
                                 −
                                 1
                              
                           
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 0
                              
                              
                                 G
                                 −
                                 1
                              
                           
                           
                              
                                 [
                                 p
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ]
                              
                              
                                 2
                              
                           
                        ;

Correlation: 
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 0
                              
                              
                                 G
                                 −
                                 1
                              
                           
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 0
                              
                              
                                 G
                                 −
                                 1
                              
                           
                           
                              
                                 i
                                 j
                                 p
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 −
                                 
                                    
                                       μ
                                    
                                    
                                       x
                                    
                                 
                                 
                                    
                                       y
                                    
                                    
                                       y
                                    
                                 
                              
                              
                                 
                                    
                                       σ
                                    
                                    
                                       x
                                    
                                 
                                 
                                    
                                       σ
                                    
                                    
                                       y
                                    
                                 
                              
                           
                        ;

Entropy: 
                           −
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 0
                              
                              
                                 G
                                 −
                                 1
                              
                           
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 0
                              
                              
                                 G
                                 −
                                 1
                              
                           
                           p
                           (
                           i
                           ,
                           j
                           )
                           
                              
                                 log
                              
                              
                                 2
                              
                           
                           ⁡
                           [
                           p
                           (
                           i
                           ,
                           j
                           )
                           ]
                        .

Other features extracted from the co-occurrence can be found in the literature [2].

This is another local approach to texture analysis that has demonstrated to be a powerful descriptor of images, achieving remarkable results in tasks such as image discrimination, segmentation, retrieval, etc. This method starts from the definition of a local binary pattern at each pixel of the image. To compute such patterns, we have to consider a 
                           3
                           ×
                           3
                         neighborhood around the pixel and one “walks” through this neighborhood assigning one if the neighbor is greater than the reference (central) pixel and zero otherwise. Thus each pixel is associated to a binary number with eight digits and such binary value can be easily translated to a decimal representation providing therefore a single value for each pixel. Larger neighborhood sizes and more complex procedures involving interpolation can be used in this method. However, here we employed the simplest version described in [29], as our main goal is to verify the impact of the non-additive entropy instead of checking any possible fine-tuning over the original descriptor.

In this way, the described procedure ends up with a matrix having the same dimension of the image. The texture descriptor is provided by the values of a histogram of such matrix. More details regarding the basic procedures and the other enhancements to deal with rotation invariance and multiscale characteristics can be seen in [9].

Gabor wavelets [20] are based on the spectral analysis of the image. Roughly speaking, the features are obtained by processing the analyzed image by Gabor wavelets two-dimensional filters and compute the energies of the transformed images.

Two-dimensional Gabor filter 
                           g
                           (
                           x
                           ,
                           y
                           )
                         is defined by:
                           
                              (5)
                              
                                 G
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    (
                                    
                                       1
                                       
                                          2
                                          π
                                          
                                             
                                                σ
                                             
                                             
                                                x
                                             
                                          
                                          
                                             
                                                σ
                                             
                                             
                                                y
                                             
                                          
                                       
                                    
                                    )
                                 
                                 
                                    
                                       e
                                    
                                    
                                       −
                                       0.5
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                       /
                                       
                                          
                                             σ
                                          
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             y
                                          
                                          
                                             2
                                          
                                       
                                       /
                                       
                                          
                                             σ
                                          
                                          
                                             y
                                          
                                          
                                             2
                                          
                                       
                                       )
                                       +
                                       2
                                       π
                                       j
                                       W
                                       x
                                    
                                 
                              
                           
                        
                     

Gabor wavelets filters have been proposed to include spatial localization information in the Gabor filters. Such new family of filters has two extra parameters, the scale m and the rotation θ, and is denoted by 
                           
                              
                                 g
                              
                              
                                 m
                                 n
                              
                           
                        :
                           
                              (6)
                              
                                 
                                    
                                       g
                                    
                                    
                                       m
                                       n
                                    
                                 
                                 =
                                 
                                    
                                       a
                                    
                                    
                                       −
                                       m
                                    
                                 
                                 G
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 ,
                              
                           
                         where 
                           
                              
                                 x
                              
                              
                                 ′
                              
                           
                           =
                           
                              
                                 a
                              
                              
                                 −
                                 m
                              
                           
                           (
                           x
                           cos
                           ⁡
                           (
                           θ
                           )
                           +
                           y
                           sin
                           ⁡
                           (
                           θ
                           )
                           )
                        , 
                           
                              
                                 y
                              
                              
                                 ′
                              
                           
                           =
                           
                              
                                 a
                              
                              
                                 −
                                 m
                              
                           
                           (
                           −
                           x
                           cos
                           ⁡
                           (
                           θ
                           )
                           +
                           y
                           sin
                           ⁡
                           (
                           θ
                           )
                           )
                        , 
                           θ
                           =
                           n
                           π
                           /
                           K
                        , K is the total number of rotations and S the number of scales.

To obtain the texture descriptors, the image 
                           f
                           (
                           x
                           ,
                           y
                           )
                         is convoluted with filters 
                           
                              
                                 g
                              
                              
                                 m
                                 n
                              
                           
                        , providing the transform 
                           
                              
                                 r
                              
                              
                                 m
                                 n
                              
                           
                        :
                           
                              (7)
                              
                                 
                                    
                                       r
                                    
                                    
                                       m
                                       n
                                    
                                 
                                 =
                                 f
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ⁎
                                 
                                    
                                       g
                                    
                                    
                                       m
                                       n
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 .
                              
                           
                         Thus for each combination of 
                           (
                           m
                           ,
                           n
                           )
                        , the energies 
                           
                              
                                 E
                              
                              
                                 m
                                 n
                              
                           
                         are computed:
                           
                              (8)
                              
                                 
                                    
                                       E
                                    
                                    
                                       m
                                       n
                                    
                                 
                                 =
                                 
                                    1
                                    
                                       p
                                       q
                                    
                                 
                                 
                                    ∑
                                    
                                       u
                                       ,
                                       v
                                    
                                 
                                 
                                    
                                       ‖
                                       
                                          
                                             R
                                          
                                          
                                             m
                                             n
                                          
                                       
                                       (
                                       u
                                       ,
                                       v
                                       )
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                         where p and q are the dimensions of the image and 
                           
                              
                                 R
                              
                              
                                 m
                                 n
                              
                           
                           (
                           u
                           ,
                           v
                           )
                         is the Fourier transform of 
                           
                              
                                 r
                              
                              
                                 m
                                 n
                              
                           
                           (
                           x
                           ,
                           y
                           )
                        .

Finally, the values of energy are concatenated to compose the feature vector of the image.

Bouligand–Minkowski descriptors [8,13,21] are obtained from the Bouligand–Minkowski fractal dimension. This method of estimation of dimension maps the texture represented in a digital image I onto a three-dimensional surface S, where each pixel with coordinates 
                           (
                           x
                           ,
                           y
                           )
                         is mapped onto a point with coordinates 
                           (
                           x
                           ,
                           y
                           ,
                           I
                           (
                           x
                           ,
                           y
                           )
                           )
                         in the surface, where 
                           I
                           (
                           x
                           ,
                           y
                           )
                         is the gray-level of the pixel.

In the following, each point in the surface is dilated by a sphere and the volume of the union of spheres should be computed. To make such computation possible, the set 
                           
                              
                                 g
                              
                              
                                 r
                              
                           
                           (
                           S
                           )
                         of points at a distance r from S is defined by:
                           
                              (9)
                              
                                 
                                    
                                       g
                                    
                                    
                                       r
                                    
                                 
                                 (
                                 S
                                 )
                                 =
                                 
                                    {
                                    (
                                    x
                                    ,
                                    y
                                    ,
                                    z
                                    )
                                    |
                                    [
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             
                                                S
                                             
                                             
                                                x
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          (
                                          y
                                          −
                                          
                                             
                                                S
                                             
                                             
                                                y
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    
                                       
                                          +
                                          
                                             
                                                (
                                                z
                                                −
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      z
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                          ]
                                       
                                       
                                          1
                                          /
                                          2
                                       
                                    
                                    =
                                    E
                                    (
                                    r
                                    )
                                    }
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 S
                              
                              
                                 x
                              
                           
                        , 
                           
                              
                                 S
                              
                              
                                 y
                              
                           
                        , 
                           
                              
                                 S
                              
                              
                                 z
                              
                           
                         are the coordinates of points in the surface.

Thus the dilation volume 
                           V
                           (
                           r
                           )
                         is obtained by:
                           
                              (10)
                              
                                 V
                                 (
                                 r
                                 )
                                 =
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    r
                                 
                                 Q
                                 (
                                 i
                                 )
                                 ,
                              
                           
                         where 
                           Q
                           (
                           i
                           )
                         is given by:
                           
                              (11)
                              
                                 Q
                                 (
                                 i
                                 )
                                 =
                                 
                                    ∑
                                    
                                       (
                                       x
                                       ,
                                       y
                                       ,
                                       z
                                       )
                                       ∈
                                       U
                                    
                                 
                                 
                                    
                                       χ
                                    
                                    
                                       
                                          
                                             g
                                          
                                          
                                             r
                                          
                                       
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                                 ,
                              
                           
                         where χ is the indicator function.


                        
                           V
                           (
                           r
                           )
                         and r are related by a power-law. The descriptors u are obtained from the values of dilation volumes:
                           
                              (12)
                              
                                 u
                                 :
                                 log
                                 ⁡
                                 (
                                 r
                                 )
                                 →
                                 log
                                 ⁡
                                 (
                                 V
                                 (
                                 r
                                 )
                                 )
                                 .
                              
                           
                        
                     

@&#PROPOSED METHOD@&#

This work proposes to enhance the discrimination performance of some well-known texture descriptors by applying a local transform to the image using the non-additive entropy.

The non-additive entropy is computed over a window 
                        
                           
                              W
                           
                           
                              d
                           
                        
                        (
                        x
                        ,
                        y
                        )
                      of size 
                        d
                        ×
                        d
                      around each pixel in the gray-level image 
                        I
                        :
                        [
                        M
                        ×
                        N
                        ]
                        →
                        ℜ
                      with coordinates 
                        (
                        x
                        ,
                        y
                        )
                     , such that each window is composed by points (pixels) satisfying the following inequality:
                        
                           (13)
                           
                              
                                 
                                    W
                                 
                                 
                                    d
                                 
                              
                              (
                              x
                              ,
                              y
                              )
                              =
                              {
                              (
                              i
                              ,
                              j
                              )
                              ,
                              0
                              <
                              i
                              ≤
                              M
                              ,
                              0
                              <
                              j
                              ≤
                              N
                              |
                              i
                              >
                              x
                              −
                              d
                              ,
                              i
                              <
                              x
                              +
                              d
                              ,
                              
                              
                              j
                              >
                              y
                              −
                              d
                              ,
                              j
                              <
                              y
                              +
                              d
                              }
                              .
                           
                        
                      Thus a probability distribution p is defined over each window, corresponding to the normalized histogram of pixel intensities within W. Let ω be the set of possible values for the gray-levels of pixels in W:
                        
                           (14)
                           
                              
                                 
                                    p
                                 
                                 
                                    k
                                    ,
                                    d
                                 
                              
                              =
                              |
                              {
                              (
                              i
                              ,
                              j
                              )
                              |
                              
                                 
                                    W
                                 
                                 
                                    d
                                 
                              
                              (
                              i
                              ,
                              j
                              )
                              =
                              k
                              }
                              |
                              /
                              (
                              
                                 
                                    d
                                 
                                 
                                    2
                                 
                              
                              )
                              ,
                              k
                              ∈
                              ω
                              ,
                           
                        
                      where || is the conventional notation for the cardinality of a set.

The non-additive q-entropy 
                        
                           
                              T
                           
                           
                              d
                           
                           
                              q
                           
                        
                        :
                        [
                        M
                        ×
                        N
                        ]
                        →
                        ℜ
                      of the image is estimated at each point with coordinates 
                        (
                        x
                        ,
                        y
                        )
                      by:
                        
                           (15)
                           
                              T
                              (
                              x
                              ,
                              y
                              )
                              =
                              
                                 1
                                 
                                    q
                                    −
                                    1
                                 
                              
                              
                                 (
                                 1
                                 −
                                 
                                    ∑
                                    k
                                 
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                    
                                       q
                                    
                                 
                                 )
                              
                               if
                              
                              q
                              ≠
                              1
                              
                              and
                           
                        
                     
                     
                        
                           (16)
                           
                              T
                              (
                              x
                              ,
                              y
                              )
                              =
                              −
                              
                                 ∑
                                 k
                              
                              
                                 
                                    p
                                 
                                 
                                    k
                                 
                              
                              ln
                              ⁡
                              
                                 
                                    p
                                 
                                 
                                    k
                                 
                              
                               if
                              
                              q
                              =
                              1
                              .
                           
                        
                     
                  

The proposed features are obtained by combining the descriptors of I and T named, respectively, 
                        
                           
                              D
                           
                           
                              I
                           
                        
                      and 
                        
                           
                              D
                           
                           
                              T
                           
                        
                     . Such combination is performed by concatenating 
                        
                           
                              D
                           
                           
                              I
                           
                        
                      and 
                        
                           
                              D
                           
                           
                              T
                           
                        
                      followed by a Karhunen–Loève transform to reduce the dimensionality of the concatenated features.

Thus supposing that 
                        
                           
                              D
                           
                           
                              I
                           
                        
                      is a vector of features 
                        {
                        
                           
                              x
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              x
                           
                           
                              2
                           
                        
                        ,
                        
                           
                              x
                           
                           
                              3
                           
                        
                        ,
                        …
                        ,
                        
                           
                              x
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                           
                        
                        }
                      and 
                        
                           
                              D
                           
                           
                              T
                           
                        
                      a vector 
                        {
                        
                           
                              y
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              2
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              3
                           
                        
                        ,
                        …
                        ,
                        
                           
                              y
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                           
                        
                        }
                     . The concatenated descriptors are given by the vector 
                        
                           
                              D
                           
                           
                              C
                           
                        
                        =
                        {
                        
                           
                              x
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              x
                           
                           
                              2
                           
                        
                        ,
                        
                           
                              x
                           
                           
                              3
                           
                        
                        ,
                        …
                        
                           
                              x
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              2
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              3
                           
                        
                        ,
                        …
                        ,
                        
                           
                              y
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                           
                        
                        }
                     . For a database of images, a matrix called feature matrix 
                        
                           
                              M
                           
                           
                              C
                           
                        
                      is composed having the 
                        
                           
                              D
                           
                           
                              C
                           
                        
                      descriptors of each sample in each row. In the following, such matrix is transformed according to:
                        
                           (17)
                           
                              
                                 
                                    D
                                 
                                 
                                    C
                                 
                              
                              =
                              
                                 
                                    U
                                 
                                 
                                    T
                                 
                              
                              
                                 
                                    M
                                 
                                 
                                    C
                                 
                              
                              ,
                           
                        
                      where U is a matrix composed by the eigenvectors of the co-variance matrix of 
                        
                           
                              M
                           
                           
                              C
                           
                        
                     . Particularly, here, such transform is applied to separated sets of training and testing images. More details about Karhunen–Loève transform can be easily found in the literature [23].

Finally, the proposed features for each sample is the corresponding row in the matrix 
                        
                           
                              D
                           
                           
                              C
                           
                        
                     . The flowchart in Fig. 1
                      and Fig. 2
                      illustrate the involved steps.

The proposed features describe the texture image under two complementary perspectives: the distribution of pixels (original image) and the local level of disorder of such image or how predictable is a sequence of pixels within a neighborhood (transformed image). After applying each analysis method discussed here to these perspectives, the final descriptors can provide a more complete viewpoint of how the micro and macro-structures of the image are related and, as a consequence, yielding to a powerful method to describe and discriminate real-world objects.

@&#EXPERIMENTS@&#

We had to assess the performance of each texture descriptor after the non-additive entropy addition and the gain obtained compared with their original proposals. Hence, all the descriptors are used in the classification of two well-known databases of texture images named as Brodatz [24] and Vistex [25].

Brodatz is a set of gray-scale photographs scanned from a book of architecture and widely used as a benchmark for methods of texture analysis. Here, we used a version in which a hundred and eleven original images from Brodatz book were scanned with a resolution of 
                        512
                        ×
                        512
                      and each image (class) was divided into sixteen non-overlapping sub-images (samples) with resolution of 
                        128
                        ×
                        128
                     . This resulted in a database with hundred and eleven classes with sixteen samples in each class.

Vistex is a database composed of color images of real-world scenarios. Each image is subjected to different conditions of illumination, viewpoints, and others. Since our focus is on gray-level images, each of the samples from Vistex is transformed into a gray-level representation. The version employed here is named Contrib TC 00006 [25] and it is composed of fifty-four images with resolution of 
                        512
                        ×
                        512
                     . Each original image (class) is divided into sixteen non-overlapping sub-images (samples) with a resolution of 
                        128
                        ×
                        128
                     .

Each set of features was computed from every sample, both following the classical approach and the proposed non-additive entropy strategy. These features were classified by Linear Discriminant Analysis classifier (LDA) [23]. LDA was chosen here due to the canonical analysis involved in such classifier. This operation removes redundancies in the descriptors by taking into account the respective classes in the training set. Even though Karhunen–Loève (KL) also plays this role, LDA can discard those components that, despite not being correlated enough to be removed by KL, come from different classes and hence they end up impairing the classification process. This is a particularly important procedure when the same object (image) is analyzed under different perspectives as observed in our case. The classification is carried out under a 10-fold scheme. Here, the database is split into ten subsets and in each classification round we use nine subsets as training and one subset for testing. The results are compared in terms of correctness rates, which is the ratio (percentage) of images whose classes are correctly predicted by the classifier.

@&#RESULTS@&#

The first important test to obtain the most significant gain in using the non-additive entropy is to verify the best parameters for the proposed method. To make this test feasible at a reasonable computational time, a subset of Brodatz and other of Vistex data set comprising thirty classes with five samples in each one are considered. In most cases, the images in these databases contain only a few different local textural patterns, and hence thirty classes are enough to represent the variability among samples in the entire database. Consequently, this subset can also provide reliable parameters for the entropy, what is confirmed by the good results, as attested by the classification performance when the full database is assessed. The parameter r (size of window) ranges between one and five; as larger window lengths reduce the variability of the local entropy within the image and makes this measure less useful to identify textural patterns. On the other hand, the parameter q (non-additive exponent) ranges between −1 and 3, being such interval a result of the symmetry of non-additive entropy around the point 
                           q
                           =
                           1
                         and considering the vanishing of 
                           
                              
                                 S
                              
                              
                                 q
                              
                           
                         for 
                           q
                           <
                           −
                           1
                         or 
                           q
                           >
                           3
                         
                        [16]. Within such ranges, we searched for the combination that yields the highest success rate in the classification of the database. Figs. 3 and 4
                        
                         show the success rates for each texture descriptor after including the non-additive entropy information. Tables 1 and 3
                        
                         exhibit the highest success rates when r is varied.


                        Tables 2 and 4
                        
                         show the best q and r parameters obtained for each descriptor.

The behavior concerning the relationship between the parameter combination and the analysis capability is specific in each case. As expected, the neighborhood-based methods, GLCM and LBP, provided the best results when using small windows, which interfere to a lesser extent with the local patterns. On the other hand, q exponent has no clear relationship with the classification result and should be empirically tested for each application.

After choosing the most suitable parameters, the image analysis is accomplished in two types of tasks, image retrieval and image classification.

The first one consists of given an input image as a query and trying to find another similar sample (from the same class) from the database. The performance of methods in this type of analysis is assessed by a precision/recall curve. In that curve, the precision is the ratio between the number of correct samples returned and the number of attempts, while the recall is the ratio between the number of hits and the number of images in the group of the query image in the database. Fig. 5
                         shows the curves comparing the descriptors in their original formats and after including the entropy information.

A summarizing important measure in image retrieval is the area of the precision/recall curve, the greatest the area, the most efficient is the method. Fig. 6
                         shows the values for Brodatz data set. The chart shows that there is a real gain in the performance of all the assessed descriptors, although the advantage of using the non-additive entropy is more significant for neighborhood methods, which are GLCM and LBP. Such behavior is a consequence of the local information carried by non-additive entropy, which adds the meaningful features up to the original descriptors.


                        Fig. 7
                         shows the precision/recall curves for Vistex textures. The behavior of the curves in Fig. 5 is repeated here, although the values of precision before and after the addition of the non-additive entropy are more similar, most in the fractal approaches. This is a consequence of the higher precision in this database. All the retrieval outcomes are closer to the ideal result and the differences between using or not the non-addition is less significant.


                        Fig. 8
                         exhibits the areas under the precision/recall curves in Vistex data set. As in Brodatz, the proposed combination with the non-additive entropy enhanced the performance of all the descriptors in image retrieval. Generally, the areas are greater than in Brodatz, as expected given that Vistex textures are easier to analyze, as they comprise of fewer classes.

The great performance achieved by combining the non-additive entropy with the classical descriptors in both databases confirms that the non-additive entropy locally computed over the texture provides relevant information that can be efficiently added to the classical descriptors. The proposed combination works particularly fine in local-based methods, such as LBP and GLCM. In fact, those methods provide the meaningful features from the relation among the neighbor pixels. The entropy gives rise to complementary and likewise relevant information, which is given by the relation among the organization of the neighborhood.

A second and important task in image analysis is the image classification. Fig. 9
                         illustrates how the success rates (ratio of images correctly classified) varies according to the number of descriptors employed in Brodatz database, both in the original texture descriptors as well as after adding the non-additive information. Although when using few descriptors the original method may achieve a good result, after a reasonable number, the combination with the non-additivity information yields to more efficient results.


                        Fig. 10
                         shows the same classification benchmark for Vistex data set. The charts properly describe the advantage of applying the proposed approach to local-based descriptors, in the same way as it happens in image retrieval.

The bar charts in Fig. 11
                         exhibit the global result for the classification using pure descriptors as well as enhanced by the non-additive entropy. Confirming the previous measures, the neighborhood descriptors achieved the most evident enhancing in the classification precision. It is noticeable for instance that the LBP descriptors outperformed fractal descriptors after taking into consideration the entropy information, whereas the former approach is not as much efficient when applied individually. Such remarkable inversion in the expected performance demonstrates how the proposed combination may be successfully applied in pattern recognition tasks.

Finally, Table 5
                         presents the best results achieved by the combination with non-additive entropy and other state-of-the-art methods for classification of textures in the literature, namely, Fuzzy-LBP [28], Soft-LBP [27] and textons [26]. For Fuzzy-LBP we employed 4-neighborhood and fuzziness 5. For Soft-LBP we used 8-neighborhood and threshold 3. For textons, we followed the implementation described in [26], using a filter bank from Root Filter Set, 10 centroids in k-means clustering and all the pre- and post-processing classically employed in texton representation [26]. The classifier was LDA with the same settings previously used and the performance was better when using the recommended chi-squared distance. Although in general the correctness rates for all the methods were similar, the proposed combination outperformed the other approaches in the benchmark databases. Fuzzy and Soft-LBP are particularly focused on providing descriptors more tolerant to noise. Even though noise is not explicitly addressed by the method proposed here, by measuring the local distribution of information, the entropy is also useful in the detection of noise patterns. It is also worth mentioning that while the Fuzzy-LBP and Soft-LBP are related to classical LBP, textons are more related to the idea of bag of words and clustering, therefore being more adequate for large images representing complex scenes instead of well-characterized textures. Despite this, the result is competitive and a comparison with classical descriptors is reasonable, even because in most applications both approaches can be applied.

Even though it is derived from the same image, the local non-additive entropy encloses a different information, more exactly, the organization of pixels in that neighborhood. Such information is complementary to the pixel intensity and also adds the meaningful information to the classification process. The fine-tuning of parameters also makes it possible to find out the most suitable entropy for each situation. Using a training data, this procedure can output rich and robust descriptors.

The physical meaning of non-additive entropy is similar to that of Shannon entropy, that is, both quantify the organization of the system (or the amount of information in other perspective). For instance, if two events are associated to probabilities 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                        , the maximum entropy is obtained when 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           =
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           =
                           0.5
                         and the minimum when 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           =
                           0
                           ,
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           =
                           1
                         or vice-versa. In the first case, there is absolute uncertainty and all the information of the system is described by the outcome. In the second, the event 2 will certainly occur and therefore the outcome does not provide any information. In the neighborhood of a pixel, the entropy quantifies the local homogeneity of the image. If all the pixels have the same intensity (maximum homogeneity) the entropy is minimum and vice-versa. The parameter q in non-additive entropy controls the growing rate of the entropy when the probabilities become more and more dissimilar from one another. As illustrated in Fig. 12
                        , larger values of q makes the entropy to decrease more slowly for extreme values of 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                        . Such parameter makes possible the association of different weights to the variation of homogeneity/heterogeneity across the image. The usefulness of the information carried by the entropy is especially relevant when local homogeneity is an important feature to characterize the image. On the contrary, if images from the same class present different behaviors in local neighborhoods, the non-additive entropy may not only not enhance the performance of the classifier but also impair the correctness rate over that database.

@&#CONCLUSIONS@&#

This work proposed a new approach to texture analysis based on combining classical texture descriptors directly applied to the image with the same descriptors applied over the values of the local non-additive entropy on the image.

The proposed combination was tested in tasks of image retrieval and classification, followed by a comparison between the results achieved by the original descriptors and the combination with non-additive entropy. Such comparison demonstrated that this combination enhanced the results of the classical methods, yielding higher rates of images correctly retrieved and discriminated. Actually, the non-additive entropy measures the organization of the pixels within its neighborhood. This is a relevant information that complements the information enclosed in the pixel intensities. Combining the texture descriptors under these two perspectives results in more robust and meaningful features capable of achieving great results in image analysis. Particularly, in the classification of Brodatz and Vistex data sets, higher relative gains were achieved when using local-based methods, like LBP and GLCM. Similar fact is observed in the image retrieval of Brodatz. The best performance in this case is justified by the nature of those methods, which consider the local information in a direct fashion. As here the non-additive entropy is also a local measure, its contribution only complements the original descriptors.

In short, the proposal presented here has great potential to be used in a number of problems involving image analysis. The related parameters can be adjusted to each situation. For example, considering a training data, and the obtained features can provide reliable outcomes even in difficult cases where the classical approaches use to fail.

@&#ACKNOWLEDGEMENTS@&#

O.M. Bruno gratefully acknowledges the financial support of CNPq (National Council for Scientific and Technological Development, Brazil) (Grant #307797/2014-7 and Grant #484312/2013-8) and FAPESP (The State of São Paulo Research Foundation) (Grant #11/01523-1). J.B. Florindo gratefully acknowledges the financial support of FAPESP Proc. 2013/22205-3 and 2012/19143-3. L. Assirati thanks the CNPq for the financial support.

@&#REFERENCES@&#

