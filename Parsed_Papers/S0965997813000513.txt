@&#MAIN-TITLE@&#Hybrid fuzzy-genetic system for optimising cabled-truss structures

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Hybrid system for sizing and topology optimisation of cable–truss structures.


                        
                        
                           
                           Nonlinear finite element analysis of cable elements.


                        
                        
                           
                           Hybridisation of fuzzy logic and genetic algorithm.


                        
                        
                           
                           Optimisation of prestressed structures.


                        
                        
                           
                           Computational cost reduction through fuzzy filtering.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Hybrid system

Structural optimisation

Cabled-truss

Fuzzy logic

Genetic algorithm

Nonlinear finite element analysis

@&#ABSTRACT@&#


               
               
                  This paper demonstrates an application of a hybrid fuzzy-genetic system in the optimisation of lightweight cabled-truss structures. These structures are described as a system of cables and triangular bar formations jointed at their ends by hinged connections to form a rigid framework. The optimised lightweight structure is determined through a stochastic discrete topology and sizing optimisation procedure that uses ground structure approach, nonlinear finite element analysis, genetic algorithm, and fuzzy logic. The latter is used to include expertise into the evolutionary search with the aim of filtering individuals with low survival possibility, thereby decreasing the total number of evaluations. This is desired because cables, which are inherently nonlinear elements, demand the use of iterative procedures for computing the structural response. Such procedures are computationally costly since the stiffness matrix is evaluated in each iteration until the structure is in equilibrium. Initially, the proposed system is applied to truss benchmarks. Next, the use of cables is investigated and the system’s performance is compared against genetic algorithms. The results indicate that the hybrid system considerably decreased the number of evaluations over genetic algorithms. Also, cabled-trusses showed a significant improvement in structural mass minimisation when compared with trusses.
               
            

@&#INTRODUCTION@&#

Weight optimisation of structures is a crucial step towards achieving higher structural performance in several engineering fields. Either directly or indirectly, every structural system is designed to meet an optimality criterion, such as the lowest possible weight or cost, minimal maintenance, and maximum reliability.

In robotics and machinery, the design trade-offs inherently include a compromise between fast, accurate, and precise motions. The use of rigid but massive structural parts enhances the precision and accuracy of mechanical systems. Lighter designs, conversely, allows for performing fast large motions and using high speeds and accelerations. In civil engineering, weight optimisation plays an important role in the designing of offshore structures, where it is essential that only a minimum share of the load capacity is engaged by the structure itself. Structural optimisation is also essential in aerospace, naval, and automotive industries, where light structures help reduce fuel consumption.

Lightweight structures research is based not only on material science but also on structural mechanics, processing, and design. The combination of different structural elements and materials is critical to improve the trade-offs between rigidity and weight as it can be noticed in most of modern lightweight structures. These include, for instance, frame supported, air supported, air inflated, cable net, cable-and-strut, geodesic domes, grid shells, and tensile/tension structures [1].

One of the most traditional types of lightweight structures are the so called trusses. These structures have attracted tremendous interest since their members are arranged to transfer external loads through axial forces rather than bending. If buckling does not occur, the cross sectional area of each truss member is equally stressed, therefore the material is used efficiently and lightweight designs are obtained. Trusses present additional features such as low weight, cost, construction time, and low structural density. They also present increased portability, redundancy, deployability, and efficiency in load and mass distribution. Consequently, trusses are among the most commonly lightweight structures used in practice.

With the fast development of tension structures, tensile elements, such as cables and membranes, have been combined with truss structures to form efficient hybrid structures [2,3]. Among tensile members, cables are the most used because the tensile stresses are distributed uniformly over the cross-sectional areas of members and the material is thereby utilised in the most efficient manner. Due to their flexibility, cables have negligible bending stiffness and can develop tension only. Thus, under external loads, a cable will develop the shape that is necessary to support the load by tensile forces alone.

The combination of trusses and cables is often performed in such a manner that cables are extrinsically positioned and form sharp angles with the truss structure. Common applications of this approach are found in civil engineering, e.g., cable-stayed towers, cable-stayed truss bridges, and roofs. In these applications, the use of extrinsically positioned cables allows changing the directions of the main loads and reinforcing the truss structure.

Despite of its advantages the extrinsic approach has limited applications in engineering fields where the structure must attend rigorous space requirement, e.g., automotive, robotics, aerospace, naval, etc. Usually, in these applications, the structure must be designed within a bounded design space, which is usually fulfilled by the truss structure; consequently, there is not enough space for staying cables. In this light, the concept of cabled-trusses is introduced, i.e., hybrid structures that are formed by the combination of truss members and intrinsically positioned pre-stressed cables.

Cables serve as essential members of cabled-truss structures [4]. Although they are only able to withstand tension forces, they maintain the stability and strength of the structural system, redistribute stresses along the structure, and decrease structural weight in comparison to trusses. The latter can be achieved by replacing truss members with cables, which have lower weight density once that they can be easily built using carbon-nanotube fibres or different materials with high tensile strength.

Planar cabled-truss structures having simple configurations and few members can be solved analytically. However, numerical procedures are required for solving complex cabled-trusses. The use of iterative procedures, e.g., Newton–Raphson method, comprises the evaluation of the stiffness matrix in each iteration until the structure is in an equilibrium state.

The optimisation of discrete structures, such as trusses, cabled-trusses, frames, and grid shells, is of great importance in several engineering branches. Similarly to trusses, lightweight cabled-trusses design aims to obtain optimal mass reduction with minimal losses in stiffness; therefore structural optimisation is essential. Nonetheless, it presents a novel optimisation problem because different structural elements can be combined to achieve optimised solutions. Furthermore, additional design variables are included in the optimisation problem since cables are pre-stressed depending on the initial strain and/or in the cross-section of elements.

Usually, the optimisation of discrete structures can be divided into size, shape, and topology optimisation, where the latter yields more material saving and greater complexity [5]. The optimal design of truss structures has been actively investigated in the last decades, and significant progress has been made in both optimality criteria and solution techniques [6–16].

Size and shape optimisation are mature areas of research that have received considerable attention [17]. Topology optimisation, on the other hand, still faces several challenges [5,15]. This is because topology variables are discrete; therefore, the direct application of the traditional gradient-based optimisation techniques is not possible [15]. The presence of discrete variables in the topology optimisation of discrete structures led to the use of stochastic search methods [18,19], such as simulated annealing [20], evolution strategies [21], particle swarm optimiser [22], ant colony optimisation [23], harmony search method [24], quantum evolutionary inspired algorithms [25], and simple genetic algorithm [26].

The performance comparisons of the most popular stochastic algorithms applied to trusses and frame optimisation are available in [27,28], respectively. The presented results show that the selection of the optimisation technique is sensitive to a large set of issues that depend on decisions and assumptions made when an optimisation model is established for a problem. Notice that new search algorithms emerge and former ones are improved year after year, comprehensive reviews of stochastic search algorithms are available in [29,30]. Whereas recent reviews are available in [31,32].

GAs have been widely employed in the optimisation of truss structures [5,13,16,33]. Hence, GAs were adopted as the basis for the proposed hybrid system. Besides vastly applied in the optimisation of discrete structures, the use of such well established algorithms allows calibrating algorithm’s parameters, such as population size, number of generations, and probability of mutation. The parameters adopted in this work were adjusted based on the results from previous researchers, in particular [5,12–15].

Notice, however, that when performing truss topology optimisation, stochastic algorithms tend to have poor computational performance in terms of CPU time [34]. In addition, when compared to trusses, cabled-trusses present a larger number of design variables, thus increasing the computational cost. Furthermore, cables cannot resist compression, leading to a sharp increase in the number of kinematically instable structures during the stochastic search. Also, the solution of the nonlinear equilibrium equations requires the evaluation of the stiffness matrix in each iteration, which also yields high computational cost.

Recent researches have been focusing on improving the cost and efficiency of GAs in discrete topology optimisation by reducing the number of unnecessary calculations [15]. In this sense, two different approaches have been used for decreasing computational time. The first consists in avoiding duplicate calculations [34], whereas the second consists in avoiding the calculation of unstable solutions [12,14,33].

The computational cost of the optimisation process can also be reduced when non-suitable (but not necessarily unstable) individuals are not evaluated. This way, the inclusion of expertise-based rules to identify suitable individuals during the stochastic search represents an attractive strategy to avoid the evaluation of all individuals. Expertise rules can be included in a system by means of fuzzy logic, which simulates a natural way of thinking where linguistic expressed rules are dealt as numerical variables.

In this light, the present work proposes a hybrid system for discrete sizing and topology optimisation of cabled-trusses. The developed system is based on ground structure approach, nonlinear finite element analysis, genetic algorithm, and fuzzy logic. The latter is used to classify and filter the population generated by the GA. The classification identifies the individuals with low survival possibility before the evaluation is performed. These individuals are not evaluated, and the objective function assumes a dynamic penalty value; therefore the number of evaluations is decreased. In addition, since the optimal design of cabled-trusses depends on the structural topology and the corresponding distribution of the element cross-sectional areas and pre-stress, sizing optimisation is also performed by the hybrid system. The proposed system is applied to traditional truss benchmarks that include ground structures with 10 and 15 elements. The results from these analyses are compared against standard GA to evaluate the convergency and efficiency of the proposed hybrid fuzzy-genetic system.

Cabled-truss are formed of cables and triangular bar formations jointed at their ends by hinged connections to form a rigid framework as illustrated in Fig. 1
                     . Although trusses and cabled-trusses are actually three-dimensional structures, most of them can be reduced to planar cases. Such approximation is adopted in this work since it reduces the computational cost and brings a deeper insight of the structure dependences.

Similarly to trusses, the planar cabled-trusses idealization is subject to five main assumptions: (i) all external forces are applied at joints, (ii) joints are considered frictionless hinges without imperfections such as eccentricities, (iii) each element is only subjected to axial stress, which is constant along its length, (iv) the materials under consideration are linear elastic, and (v) the masses of the joints are neglected.

The evaluation of the structural static response of planar cabled-truss structures with simple configurations can be calculated analytically. Nonetheless, numerical procedures are likely needed when the configuration of the cabled-trusses becomes complex. In this case, the structural static response is usually computed by nonlinear finite element iterative procedures in which the numerical model is based on the characteristics of the structural members, which can be modelled as bar or cable elements, for further information refer to [4].

In the sizing optimisation of cabled-trusses, the cross-sectional areas of the members and the pre-stress levels in the cables are considered as design variables. To reduce the number of design variables, the pre-stress is applied as an initial strain on cable elements. If the initial strain is equal for all cable elements, the pretension forces vary accordingly to the cross-sectional area of the cable elements. Moreover, to obtain solutions that are applicable in practice, cross-sectional areas are restricted to take only certain pre-specified discrete values [14,15].

The topology optimisation of cabled-trusses determines the connectivity of the structural members. In particular, interconnections can be performed by either cable or bar element. Notice that the classical optimisation methods are not adequate for topology optimisation of trusses [5,14,15]. The main reason for such inadequacy is the lack of efficient ways to represent the connectivity of members in discrete topology optimisation.

It is important to observe that pre-stressed elements can redistribute stresses along the structure, and they are dependent on initial strain (sizing), length, and orientation of the element (topology). Therefore, an efficient way to achieve optimal design of cabled-trusses has to combine both sizing and topology optimisation methods.

The hybrid system proposed in this work intends to perform structural weight minimisation of cabled-trusses through sizing and topology optimisation. The system combines the following procedures: (i) ground structure approach, (ii) NFEM analysis, (iii) genetic algorithm, and (iv) fuzzy logic. The general framework of the proposed system, which was written and implemented in MATLAB, is illustrated in Fig. 2
                      and described in the following sections.

Structural weight minimisation was selected as the optimisation problem since it is one of the most commonly studied objective functions in truss topology and sizing optimisation. The optimisation problem can be explicitly formulated as
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             minimise
                                          
                                       
                                       
                                          
                                             
                                             f
                                             (
                                             A
                                             )
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      
                                                         
                                                            m
                                                         
                                                         
                                                            e
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   ρ
                                                
                                                
                                                   j
                                                
                                             
                                             ·
                                             
                                                
                                                   l
                                                
                                                
                                                   j
                                                
                                             
                                             ·
                                             
                                                
                                                   A
                                                
                                                
                                                   j
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                          
                                             subject
                                             
                                             to
                                          
                                       
                                       
                                          
                                             
                                             
                                                
                                                   R
                                                
                                                
                                                   0
                                                
                                             
                                             ≡
                                             Structure is suitable,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                                
                                                   R
                                                
                                                
                                                   1
                                                
                                             
                                             ≡
                                             Structure is valid,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                                
                                                   R
                                                
                                                
                                                   2
                                                
                                             
                                             ≡
                                             Structure is kinematically stable,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                                
                                                   R
                                                
                                                
                                                   3
                                                
                                             
                                             ≡
                                             
                                                
                                                   S
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   σ
                                                
                                                
                                                   j
                                                
                                             
                                             (
                                             A
                                             ,
                                             ξ
                                             )
                                             ⩾
                                             0
                                             ,
                                             
                                             j
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             
                                                
                                                   m
                                                
                                                
                                                   e
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                                
                                                   R
                                                
                                                
                                                   4
                                                
                                             
                                             ≡
                                             
                                                
                                                   δ
                                                
                                                
                                                   w
                                                
                                                
                                                   max
                                                
                                             
                                             -
                                             
                                                
                                                   δ
                                                
                                                
                                                   w
                                                
                                             
                                             (
                                             A
                                             ,
                                             ξ
                                             )
                                             ⩾
                                             0
                                             ,
                                             
                                             w
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                                
                                                   R
                                                
                                                
                                                   5
                                                
                                             
                                             ≡
                                             
                                                
                                                   A
                                                
                                                
                                                   i
                                                
                                                
                                                   min
                                                
                                             
                                             ⩽
                                             
                                                
                                                   A
                                                
                                                
                                                   i
                                                
                                             
                                             ⩽
                                             
                                                
                                                   A
                                                
                                                
                                                   i
                                                
                                                
                                                   max
                                                
                                             
                                             ,
                                             
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             
                                                
                                                   m
                                                
                                                
                                                   a
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where f(A) is the objective function that indicates the weight of the cabled-truss. The design variables are the cross-sectional areas of the members present in a cabled-truss (namely A) and the coordinates of all non-basic nodes (namely ξ). ρ
                        
                           j
                        , l
                        
                           j
                        , and A
                        
                           j
                         are the material density, length, and cross-sectional area, respectively, of the jth member. The A
                        
                           j
                         values are within the pre-defined interval 
                           
                              
                                 
                                    
                                       
                                          
                                             A
                                          
                                          
                                             i
                                          
                                          
                                             min
                                          
                                       
                                       ,
                                       
                                          
                                             A
                                          
                                          
                                             i
                                          
                                          
                                             max
                                          
                                       
                                    
                                 
                              
                           
                        . m
                        
                           a
                         indicates the number of possible discrete areas, m
                        
                           e
                         the number of elements, and n the number of nodes. S
                        
                           j
                         and σ
                        
                           j
                        (A,
                        ξ) are the allowable stress limit and the current stress, respectively, in the jth element. 
                           
                              
                                 
                                    δ
                                 
                                 
                                    w
                                 
                                 
                                    max
                                 
                              
                           
                         and δ
                        
                           w
                        (A,
                        ξ) are the maximum allowed displacement and the current displacement, respectively, of the wth node.

In the constraint R
                        0 from Eq. (1), the suitability of the structure is evaluated based on the survival possibility index s
                        
                           p
                        . Such index is computed by the fuzzy system depending on expertise-based rules; the details about these rules and the fuzzy system are discussed in Section 4.5. In case 
                           
                              
                                 
                                    s
                                 
                                 
                                    p
                                 
                              
                              <
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                           
                         corresponds to a threshold value set at 50%, the suitability constraint R
                        0 is violated and a large penalty is assigned to the solution, see Eq. (3); consequently, no further calculation of the objective function or the constraints is done.

In the constraint R
                        1 from Eq. (1), the validity of the structure is checked. The user specifies the location and the number of the nodes for supports and loads. In case any one of these is absent on the cabled-truss, a large constant penalty is assigned to the solution.

In the constraint R
                        2 from Eq. (1), kinematically instable cabled-trusses are filtered using the Grubler’s criterion that is presented in [5,14,15] with a small modification. The standard Grubler’s criterion takes into account the total number of active elements (m
                        
                           t
                        ) in the analysed structure. In this work, however, the number of elements (m
                        
                           e
                        ) that are used to compute the degrees of freedom (DOF, see Eq. (2)) is calculated by m
                        
                           e
                        
                        =
                        m
                        
                           t
                        
                        −
                        m
                        
                           c
                        , where m
                        
                           c
                         is the number of cables. Taking into account that this work aims to design cabled-trusses that are able to withstand changes in load direction, the use of the standard Grubler’s criterion, i.e., m
                        
                           t
                        
                        =
                        m
                        
                           e
                         would allow cable-stayed structures with 0 degrees of freedom (see Fig. 3
                        ) to become part of the solution space. This is not desired because changes in load direction could lead to the collapse of such structures.
                           
                              (2)
                              
                                 DOF
                                 =
                                 d
                                 ·
                                 n
                                 -
                                 
                                    
                                       m
                                    
                                    
                                       e
                                    
                                 
                                 -
                                 
                                    
                                       n
                                    
                                    
                                       s
                                    
                                 
                                 ,
                              
                           
                        where d is the dimension and n
                        
                           s
                         the number of degrees of freedom constrained by the supports.

If the number of degrees of freedom is greater than 0, then a penalisation (see Eq. (3)) is applied to the fitness function. The penalisation is proportional to the DOF that was obtained from Eq. (2).

The stress constraint R
                        3 from Eq. (1) penalises the structures with stresses that surpass the allowable strength of the material for all loading cases. The penalisation is proportional to the percentage of stress that exceeded the limits.

The displacement constraint R
                        4 from Eq. (1) penalises structures in which any of the nodes deflects more than the allowable limits when loading is applied. In this case, the penalisation is proportional to the constraint violation.

In the last constraint from Eq. (1), the areas of the elements are bounded based on pre-defined limits. This constraint is automatically satisfied because the sizing design variables only assume user-defined values.

Similarly to [14], the fitness of a solution is computed by
                           
                              (3)
                              
                                 F
                                 (
                                 A
                                 ,
                                 ξ
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         10
                                                      
                                                      
                                                         6
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         p
                                                      
                                                      
                                                         -
                                                         1
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   if
                                                   
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                   is violated,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         10
                                                      
                                                      
                                                         8
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   if
                                                   
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                   is violated,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         10
                                                      
                                                      
                                                         7
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         DOF
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   if
                                                   
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                   is violated,
                                                
                                             
                                             
                                                
                                                   f
                                                   (
                                                   A
                                                   ,
                                                   ξ
                                                   )
                                                   +
                                                   
                                                      
                                                         10
                                                      
                                                      
                                                         6
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            j
                                                            =
                                                            1
                                                         
                                                         
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  e
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   |
                                                   〈
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                   〉
                                                   |
                                                   +
                                                   
                                                      
                                                         10
                                                      
                                                      
                                                         6
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            j
                                                            =
                                                            1
                                                         
                                                         
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  e
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   |
                                                   〈
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                   〉
                                                   |
                                                   ,
                                                
                                                
                                                   otherwise,
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        wherein the operator 〈〉 is the bracket-operator of the penalty term.

The ground structure approach takes into account a full structure with all possible member connections among nodes as illustrated in Fig. 6 
                        [14]. The proposed hybrid system uses the ground structure approach because this is the most common in literature and allows the comparison of results to benchmark problems. As for trusses, in cabled-trusses design the user specifies the nodes that must exist in the feasible design. These nodes are known as the set of basic nodes and carry loads or support the structure. The other nodes that are part of the structure are known as non-basic nodes. They are defined as such because they can be eliminated during the optimisation process. It is important to observe that the optimisation of cabled-trusses aims to find the best interconnectivity between nodes and the elements (bar or cable) that should be used in each interconnection. Therefore, increasing the number of nodes in the ground structure sharply increases the number of feasible solutions since more structural elements are used to build the cabled-truss system.

The ground structure is used as an input for the proposed system. To generate the input ground structure, the user must specify the total number of nodes n, the number of nodes in x and y directions (n
                        
                           x
                        ,n
                        
                           y
                        ), the support nodes, the loading, the material properties, and the cross-sections. The discretisation level of the optimised structure depends on the number of nodes and the number of elements in the ground structure. In addition, the user must specify the length of the structure and its slenderness ratio, which corresponds to the ratio l
                        
                           x
                        /l
                        
                           y
                         of the structure (Fig. 4
                        ). The proposed hybrid system uses a fixed length vector to represent the design variables, see Fig. 5
                        
                        . The first set of numbers stores the topology variables. These are encoded into integer numbers 0 (absent connection), 1 (connection performed by bar element), and 2 (connection performed by cable element). The second set of numbers stores the size variables. These are also encoded into integer numbers that varies from 1 to m
                        
                           sz
                        , where m
                        
                           sz
                         is the total number of possible discrete areas that the elements can assume.

The stiffness of a bar element is given by E
                        
                           b
                        
                        ·
                        A
                        
                           b
                        /L
                        
                           b
                        , where E
                        
                           b
                         is the modulus of elasticity, A
                        
                           b
                         is the cross-sectional area, and L
                        
                           b
                         is the element length. This stiffness is projected into two-dimensional space, composing a 4×4 element matrix. Considering that the material is linearly elastic and loads are applied at nodes, the elastic stiffness matrix [k
                        
                           b
                        ]
                           e
                         for one node of the bar element can be written as
                           
                              (4)
                              
                                 
                                    
                                       [
                                       
                                          
                                             k
                                          
                                          
                                             b
                                          
                                       
                                       ]
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             E
                                          
                                          
                                             b
                                          
                                       
                                       ·
                                       
                                          
                                             A
                                          
                                          
                                             b
                                          
                                       
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             b
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         l
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   lm
                                                
                                             
                                             
                                                
                                                   lm
                                                
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where l and m are direction cosine values of the angles between local axis 
                           
                              
                                 
                                    x
                                 
                                 
                                    ̃
                                 
                              
                           
                         and global axes X and Y as depicted in Fig. 7
                        a. This way, there is no need for coordinates transformation.

Cables cannot resist shear, axial pressure forces, or bending moments [35,36]. In addition, when loaded, cable elements present small strains but large displacements as a reason of their high flexibility. Therefore, structural analysis of systems having cable elements is relatively complex since linear analysis, where elastic deformations and displacements are assumed to be small, is not often applicable and calculations divergence occurs rather frequently [36].

If the material is a linearly elastic and forces are applied at nodes only, the stiffness matrix of cable elements [k
                        
                           c
                        ]
                           e
                         can be written as the sum of the cable’s elastic and geometrical stiffness matrices [k
                        
                           E
                        ]
                           e
                         and [k
                        
                           G
                        ]
                           e
                         respectively. To avoid coordinate transformations, the stiffness matrix of the planar cable element for one node can also be expressed in terms of direction cosines between local and global axes as
                           
                              (5)
                              
                                 
                                    
                                       [
                                       
                                          
                                             k
                                          
                                          
                                             c
                                          
                                       
                                       ]
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             k
                                          
                                          
                                             E
                                          
                                       
                                       ]
                                    
                                    
                                       e
                                    
                                 
                                 +
                                 
                                    
                                       [
                                       
                                          
                                             k
                                          
                                          
                                             G
                                          
                                       
                                       ]
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             E
                                          
                                          
                                             c
                                          
                                       
                                       
                                          
                                             A
                                          
                                          
                                             c
                                          
                                       
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             c
                                             0
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         l
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   lm
                                                
                                             
                                             
                                                
                                                   lm
                                                
                                                
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             e
                                          
                                       
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             c
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            -
                                                            
                                                               
                                                                  l
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   -
                                                   lm
                                                
                                             
                                             
                                                
                                                   -
                                                   lm
                                                
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            -
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where E
                        
                           C
                         is the cable elasticity modulus, A
                        
                           c
                         is the cable cross-sectional area, L
                        
                           c0 is the initial length of the element, L
                        
                           c
                         is the current length of the cable element, and N
                        
                           e
                         is the axial force on the element. Notice that, at the first iteration, the axial forces in each cable assume the value of the applied tightening force, which depends on initial internal strains. Such forces are usually applied to the system to increase the cable’s rigidity. The sag effect in cables is taken into account by considering null tension on the element as soon as it is submitted to compression [36].

The global stiffness matrix [K
                        
                           g
                        ] of the cabled-truss structure is then assembled by combining cable and bar elements for a determined topology, i.e.,
                           
                              (6)
                              
                                 [
                                 
                                    
                                       K
                                    
                                    
                                       g
                                    
                                 
                                 ]
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                 
                                 
                                    
                                       [
                                       
                                          
                                             k
                                          
                                          
                                             i
                                          
                                       
                                       ]
                                    
                                    
                                       e
                                    
                                 
                                 ,
                              
                           
                        where [k
                        
                           i
                        ]
                           e
                         is the stiffness matrix of bar or cable element illustrated in Fig. 7b and N is total number of elements. After assembling the global stiffness matrix and including support conditions, the global set of equilibrium equations is formulated as
                           
                              (7)
                              
                                 [
                                 
                                    
                                       K
                                    
                                    
                                       g
                                    
                                 
                                 ]
                                 ·
                                 {
                                 q
                                 }
                                 =
                                 {
                                 
                                    
                                       F
                                    
                                    
                                       e
                                    
                                 
                                 }
                                 +
                                 {
                                 
                                    
                                       F
                                    
                                    
                                       T
                                    
                                 
                                 }
                                 =
                                 {
                                 F
                                 }
                                 ,
                              
                           
                        where {q} is the displacement vector, {F
                        
                           e
                        } is the external imposed loads, and {F
                        
                           T
                        } is the vector of initial nodal forces computed based on the tightening forces applied to cable elements. The vector of initial nodal forces is design-dependent through the change of the length, position, and initial strain of the element [37].

The solution of nonlinear equations is not trivial since the stiffness of cable elements can be affected by their displacement. Therefore, specific algorithms are needed to compute static structural response of the cabled-truss structure. The most commonly used method is the so called Newton–Raphson method (N–R). This corresponds to an iterative procedure that uses the estimation of the structural response from previous steps, requiring several iterations before the system attains equilibrium [37].

The procedure for implementing N–R iterative method with force control is outlined as follows and illustrated in Fig. 8
                        . Initially, the global stiffness matrix [K
                        
                           g
                        ] is assembled using Eq. (6). Then, the initial displacements {q
                        
                           l
                        } are computed using the equilibrium equations (Eq. (7)). Subsequently, the nodal displacements {q
                        
                           z
                        } are updated. Notice that, at the first iteration (z
                        =1), the nodal displacements are assumed to be equal to the displacements obtained from the linear analysis, i.e., {q}
                           z
                        
                        ={q}
                           l
                        . Next, the updated global stiffness matrix 
                           
                              
                                 
                                    
                                       
                                          
                                             K
                                          
                                          
                                             g
                                          
                                          
                                             z
                                          
                                       
                                    
                                 
                              
                           
                         is obtained using Eq. (4) for bar element and Eq. (5) for cable element and then assembled using Eq. (6). In particular, z
                        ∗
                        =
                        z for standard N–R method. Depending on the obtained results, the length of each element L
                        
                           e
                         is updated by
                           
                              (8)
                              
                                 
                                    
                                       L
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         k
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         k
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    x
                                 
                                 
                                    k
                                 
                                 
                                    ′
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              ,
                              
                                 
                                    y
                                 
                                 
                                    k
                                 
                                 
                                    ′
                                 
                              
                              ,and
                              
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                           
                         are the new nodal positions of nodes i and k of each element. The length increment 
                           
                              Δ
                              
                                 
                                    L
                                 
                                 
                                    e
                                 
                              
                           
                         of each element is updated through
                           
                              (9)
                              
                                 Δ
                                 
                                    
                                       L
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         k
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         k
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 -
                                 
                                    
                                       L
                                    
                                    
                                       e
                                    
                                    
                                       0
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    L
                                 
                                 
                                    e
                                 
                                 
                                    0
                                 
                              
                           
                         is the initial length of the element.

For each element, the axial force increment 
                           
                              Δ
                              N
                              
                                 
                                    
                                 
                                 
                                    e
                                 
                                 
                                    z
                                 
                              
                           
                         is computed by
                           
                              (10)
                              
                                 Δ
                                 
                                    
                                       N
                                    
                                    
                                       e
                                    
                                    
                                       z
                                    
                                 
                                 =
                                 
                                    
                                       E
                                    
                                    
                                       e
                                    
                                 
                                 ·
                                 
                                    
                                       A
                                    
                                    
                                       e
                                    
                                 
                                 
                                    
                                       Δ
                                       
                                          
                                             L
                                          
                                          
                                             e
                                          
                                       
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             e
                                          
                                          
                                             0
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        Next, 
                           
                              
                                 
                                    N
                                 
                                 
                                    e
                                 
                                 
                                    z
                                 
                              
                           
                         is updated in each element through
                           
                              (11)
                              
                                 
                                    
                                       N
                                    
                                    
                                       e
                                    
                                    
                                       z
                                    
                                 
                                 =
                                 
                                    
                                       N
                                    
                                    
                                       e
                                    
                                    
                                       z
                                       -
                                       1
                                    
                                 
                                 +
                                 Δ
                                 
                                    
                                       N
                                    
                                    
                                       e
                                    
                                    
                                       z
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    N
                                 
                                 
                                    e
                                 
                                 
                                    z
                                    -
                                    1
                                 
                              
                              =
                              0
                           
                         at the first iteration. The resultant axial force Q
                        
                           z
                         is then computed by
                           
                              (12)
                              
                                 
                                    
                                       Q
                                    
                                    
                                       z
                                    
                                 
                                 =
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                 
                                 
                                    
                                       N
                                    
                                    
                                       e
                                    
                                    
                                       z
                                    
                                 
                                 
                                    
                                       c
                                    
                                    
                                       e
                                    
                                    
                                       z
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    c
                                 
                                 
                                    e
                                 
                                 
                                    z
                                 
                              
                           
                         is the directional cosines matrix, which expresses the rotation between local and global coordinate systems. Further, the out-of-balance forces ΔQ
                        
                           z
                         are computed as
                           
                              (13)
                              
                                 {
                                 Δ
                                 
                                    
                                       Q
                                    
                                    
                                       z
                                    
                                 
                                 }
                                 =
                                 {
                                 
                                    
                                       F
                                    
                                    
                                       e
                                    
                                 
                                 }
                                 +
                                 {
                                 
                                    
                                       F
                                    
                                    
                                       T
                                    
                                 
                                 }
                                 -
                                 {
                                 
                                    
                                       Q
                                    
                                    
                                       z
                                    
                                 
                                 }
                                 .
                              
                           
                        The displacement increments {dq}
                           z
                         are computed based on the new set of equilibrium equations that follows:
                           
                              (14)
                              
                                 
                                    
                                       {
                                       dq
                                       }
                                    
                                    
                                       z
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   K
                                                
                                                
                                                   g
                                                
                                                
                                                   z
                                                
                                             
                                          
                                       
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 ·
                                 
                                    
                                       
                                          Δ
                                          
                                             
                                                Q
                                             
                                             
                                                e
                                             
                                             
                                                z
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        Next, the axial forces {q}
                           z
                         are updated through
                           
                              (15)
                              
                                 
                                    
                                       {
                                       q
                                       }
                                    
                                    
                                       z
                                    
                                 
                                 =
                                 
                                    
                                       {
                                       q
                                       }
                                    
                                    
                                       z
                                       -
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       {
                                       dq
                                       }
                                    
                                    
                                       z
                                    
                                 
                                 .
                              
                           
                        Notice that when evaluating the static structural response of cabled-trusses, the designer must take into account that the initial equilibrium position {q
                        0} of the cabled-truss is reached after the pre-stress forces are applied. Next, the external loads are applied and the structure reaches the equilibrium position {q
                        1}. Finally, the difference between both positions Δ{q
                        1
                        −
                        q
                        0} is assumed to be the total displacement of the structure. The above steps are repeated until the ratio of magnitude of the out-of-balance force increment vector to the previous out-of-balance force is met. This corresponds to the convergence criterion, in particular, this is 
                           
                              Δ
                              
                                 
                                    Q
                                 
                                 
                                    e
                                 
                                 
                                    z
                                 
                              
                              <
                              
                                 
                                    10
                                 
                                 
                                    -
                                    5
                                 
                              
                           
                        . For further details of the N–R procedure with force control applied to cable structures refer to [37].

Notice that the standard N–R method evaluates the updated stiffness matrix at each iteration, yielding to high computational cost. Nevertheless, different approaches such as the Modified Newton–Raphson (MN–R) can be used. In the MN–R procedure, the stiffness matrix is evaluated after a certain number of iterations. Although having lower computational cost than the standard N–R method, the MN–R method presents slower convergence, which can be severely affected if multiple cables of a cabled-truss undergo to the slack state. Hence, the algorithm implemented in this work uses the Standard N–R method for calculations.

GAs are stochastic adaptive methods that can be used for searching and optimisation problems. Compared to traditional optimisation methods, such as calculus-based and enumerative strategies, GAs are robust, global, and may be applied generally without recourse to domain-specific heuristics. Although performance is affected by these heuristics, GAs operate on a population of potential solutions, applying the principle of survival of the fittest to produce successively better approximations to a solution [25,38].

Individuals in a population compete for resources and mates. The most successful individuals in each competition, i.e., structures with lower mass, will produce more offspring than those that performed poorly. Genes from fittest individuals propagate throughout the population so that two good parents will sometimes produce offspring that are better than either parent. As a consequence, each successive generation will become more suited to their environment. To sum up, it can be said that GAs aim to use selective breeding of the solutions to produce offspring that are better than their parents by combining information from the chromosomes [38]. GAs use highly customizable genetic operators (selection, cross over, and mutation) to perform optimal solution searching.

The GA that was used as basis for the proposed hybrid system (HS) was introduced, in [39]. The use of this, which is a well established algorithm, allows for clarifying the effects of modifications to the algorithm. As described in [39], the GAs starts with a set of initial inputs such as the number and length of the chromosomes, the crossover and mutation rates, the number of generations, and, in this case, the binary representation scheme. Subsequently, an initial uniformly distributed random binary population is generated. The objective function, see Eq. (1), is then evaluated using the NFEM procedure described in the previous section to produce the vector of objective values.

After the initialisation is completed, the GA enters the generational loop. First, a fitness vector is determined using the ranking scheme presented in [40]. Next, the individuals from the population are selected using the stochastic universal sampling algorithm with a generation gap (GGAP
                        =0.8). The selected individuals are then recombined using single-point crossover applied with probability of 0.80. Further, the mutation operator with probability of 0.0175 is applied to the offspring, and the objective function values for the new individuals are calculated. Finally, the new individuals are re-inserted in the population and the generation counter is incremented. The GA terminates after the maximum number of iterations around the generational loop is reached.

Fuzzy theory, first introduced by Zadeh [41], corresponds to a natural way of thinking where verbally expressed rules are applied to deal with vagueness present in human reasoning. This represents an interesting solution since it allows for dealing with verbally expressed phenomena to obtain a numerical solution [42]. The use of fuzzy logic is a relatively new approach for solving problems where it is necessary to input opinion from experts into simulation or controlling system. Within fuzzy logic applications, highlights are given to Mamdani [43], who was the first to demonstrate that fuzzy logic could be used in a profitable manner in controlling systems. After that, several applications followed, e.g., static and dynamic structural analysis [44,45] and optimisation of structures [46–49].

Fuzzy logic is represented by fuzzy expressions that consist of mapping functions from [0,1]
                           n
                        
                        →[0,1], where n relates to the number of relations from the fuzzy sets. The fuzzy expressions are represented by if–then rules, e.g., “if x is a, then y is b”. These rules are linguistic variables that are composed of an antecedent, i.e., the if part “x is a”, and a consequent, i.e., the then part “y is b”.

The interpretation of the rules in fuzzy systems involves three steps: (i) fuzzification, (ii) inference engine, and (iii) defuzzification. First, the fuzzification process maps the input data to compute the degree of membership 
                           
                              
                                 
                                    μ
                                 
                                 
                                    
                                       
                                          A
                                       
                                       
                                          ∼
                                       
                                    
                                 
                              
                              (
                              x
                              )
                           
                         of an input x in each of the nth rules of the system. Next, the inference engine takes place to infer an output for a corresponding input by operating the n rules of the system. The output from the inference engine depends on the method that is used to deal with the input variables. Among several methods, highlights are given to Mandani, Larsen, Tsukamoto, and Sugeno methods [42,50]. Finally, the defuzzification converts an output fuzzy value 
                           
                              
                                 
                                    
                                       
                                          N
                                       
                                       
                                          ∼
                                       
                                    
                                 
                                 
                                    x
                                 
                              
                           
                         into a crisp value x that will correspond to the output of the system. For a comprehensive review about inference engine and defuzzification methods refer to [42,50,51].

The combination of the aforementioned steps provides a decision-making framework of representing human expert rules to infer human decision. The key factors to achieve an acceptable performance in a fuzzy system are connected to the number of fuzzy sets, and consequently the size of the rule base of the system.

The fuzzy system proposed in this work aims to support the GA by filtering the individuals, i.e., cabled-trusses, from the population depending on their survival possibility s
                        
                           p
                         during the evolutionary process. The survival possibility classification is computed based on the rules from the fuzzy system. Such rules depends on the following parameters: (i) β: ratio between the number of bars (m
                        
                           e
                        ) of the individual and the total number of elements of the ground structure (m
                        
                           gs
                        ), (ii) ε: ratio between the number of cables 
                           
                              (
                              
                                 
                                    m
                                 
                                 
                                    c
                                 
                              
                              )
                           
                         of the individual and the total number of elements of the ground structure (m
                        
                           gs
                        ), (iii) γ: ratio between the number of cables (m
                        
                           c
                        ) of the individual and the number of bars m
                        
                           e
                         of the individual.

Each parameter of the system was equally divided into five triangular membership functions, see Fig. 9
                        . The input membership functions are combined to define the survival possibility (s
                        
                           p
                        ), which is the system’s output. The combination depends on the rule base that follows:
                           
                              (16)
                              
                                 
                                    
                                       R
                                    
                                    
                                       n
                                    
                                 
                                 :
                                 If
                                 
                                 
                                    
                                       β
                                    
                                    
                                       n
                                    
                                 
                                 
                                 is
                                 
                                 
                                    
                                       
                                          
                                             β
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       n
                                    
                                 
                                 
                                 and
                                 
                                 
                                    
                                       ε
                                    
                                    
                                       n
                                    
                                 
                                 
                                 is
                                 
                                 
                                    
                                       
                                          
                                             ε
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       n
                                    
                                 
                                 
                                 and
                                 
                                 
                                    
                                       γ
                                    
                                    
                                       n
                                    
                                 
                                 
                                 is
                                 
                                 
                                    
                                       
                                          
                                             γ
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       n
                                    
                                 
                                 ,
                                 
                                 then
                                 
                                 
                                    
                                       (
                                       
                                          
                                             s
                                          
                                          
                                             p
                                          
                                       
                                       )
                                    
                                    
                                       n
                                    
                                 
                                 
                                 is
                                 
                                 
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             p
                                          
                                       
                                       )
                                    
                                    
                                       N
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          p
                                       
                                    
                                    )
                                 
                                 
                                    N
                                 
                              
                           
                         is the survival possibility score defined by the user in the system’s rule base.

The survival possibility scale is depicted in Fig. 10
                        . Based on this scale, the output sets of the system were designed. In particular, it was decided to use singleton values, which correspond to the limits of each zone in the survival possibility scale. The output sets of the system are illustrated in Fig. 10. The classification scale varies from 0 to 1. The former represents structures with low survival possibility 
                           
                              (
                              
                                 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          p
                                       
                                    
                                    )
                                 
                                 
                                    1
                                 
                              
                              
                              =
                              
                              0.0
                              %
                              )
                           
                        , whereas the latter represents those with high survival possibility 
                           
                              (
                              
                                 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          p
                                       
                                    
                                    )
                                 
                                 
                                    5
                                 
                              
                              
                              =
                              
                              100
                              %
                              )
                           
                        .

The rule base of the proposed system is open for adjustments so as to allow the user to fine tune it depending on the complexity of the chosen ground structure. Initially, the user has to estimate a appropriate number of cables 
                           
                              (
                              
                                 
                                    m
                                 
                                 
                                    c
                                 
                              
                              )
                           
                         and bars 
                           
                              (
                              
                                 
                                    m
                                 
                                 
                                    c
                                 
                              
                              )
                           
                         that may be present in the optimised structure. The estimated values are then used to compute the parameters β
                        ∗, ε
                        ∗, and γ
                        ∗. Consequently, the region of the rule base matrix, see Eq. (16), that comprises structures with higher survival possibility is identified and a high score (i.e., 
                           
                              
                                 
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          p
                                       
                                    
                                    )
                                 
                                 
                                    n
                                 
                              
                           
                        
                        =0.5–1.0) is assigned to it. The farther the parameters β, ε, and γ are from the estimated ones the lower the survival possibility; therefore, a low survival possibility (i.e., 
                           
                              
                                 
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          p
                                       
                                    
                                    )
                                 
                                 
                                    n
                                 
                              
                           
                        
                        =0.1–0.5) is attributed.

The inference engine is based on the standard Sugeno method. However, singletons were used instead of pre-defined equations commonly considered by the Sugeno inference engine, see [42]. The firing strength assigned to each rule is computed by
                           
                              (17)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       n
                                    
                                 
                                 (
                                 β
                                 ,
                                 ε
                                 ,
                                 γ
                                 )
                                 =
                                 
                                    
                                       μ
                                    
                                    
                                       
                                          
                                             β
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                 
                                 (
                                 β
                                 )
                                 ∧
                                 
                                    
                                       μ
                                    
                                    
                                       
                                          
                                             ε
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                 
                                 (
                                 ε
                                 )
                                 ∧
                                 
                                    
                                       μ
                                    
                                    
                                       
                                          
                                             γ
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                 
                                 (
                                 γ
                                 )
                                 ,
                              
                           
                        and the final output of the system is calculated by
                           
                              (18)
                              
                                 
                                    
                                       s
                                    
                                    
                                       p
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             μ
                                          
                                          
                                             n
                                          
                                       
                                       (
                                       β
                                       ,
                                       ε
                                       ,
                                       γ
                                       )
                                       ·
                                       
                                          
                                             (
                                             
                                                
                                                   s
                                                
                                                
                                                   p
                                                
                                             
                                             )
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             μ
                                          
                                          
                                             n
                                          
                                       
                                       (
                                       β
                                       ,
                                       ε
                                       ,
                                       γ
                                       )
                                    
                                 
                                 .
                              
                           
                        
                     

The proposed hybrid system, namely HS, was used as a single-objective method for the optimisation of cabled-truss structures. The presented examples comprise ground structures with 10 and 15 elements. The geometric and material parameters adopted in the analyses are listed in Table 1
                     . Notice that, as suggested in [14], the population size in a simulation should be dependent on the discretisation level of the ground structure. This consideration has to be taken into account; otherwise, the optimisation problem could become multi-modal, i.e., there may exist many different topologies with almost equal overall weight as the discretisation level increases.

The following methodology was taken into account to evaluate the efficiency of the HS. To begin with, truss and cabled-truss structures were optimised. The results from the former were used to check the convergency of the GA part of the HS. This check is based on the comparison of the results from the present analysis with those published in [12,14,15]. The results from the latter, on the other hand, were used to investigate the potential mass reduction that derives from the use of cables in the structure. Next, the average number of evaluations that the FE model performed during the optimisation process was investigated in both versions of the optimisation algorithm, i.e., HS without fuzzy filtering (namely GA) and HS with fuzzy filtering. Further, the best weights found by the GA and HS for each generation were compared. This analysis aims to verify whether both algorithms converged to a common solution. Finally, the static structural response of cabled-trusses was compared with the results from commercial finite element software ANSYS, and the numerical error E
                     
                        CT
                      between solutions was evaluated. Notice that the cabled-trusses were modelled in ANSYS using Link 10 and Link 1 elements for cables and bars, respectively.

In the first example, the 10 elements ground structure (GS10) that is shown in Fig. 11
                         was optimised. Sizing and topology optimisation were performed concurrently to achieve the optimal structural mass. In total, 15 individual runs were performed. The population size was set at 300 and the maximum number of generations at 500. The input parameters β
                        ∗, ε
                        ∗, and γ
                        ∗, which are necessary to determine the rule base of the system, see Eq. (16), were set at 0.40, 0.25, and 0.30, respectively. These values were selected based on the user’s expertise and the premises from Section 4.5. The final configuration of the rule base used for the analysis is the depicted in Fig. 12
                        .

The optimal truss and cabled-truss topologies are depicted in Figs. 13 and 14
                        
                        , respectively. The optimised results are presented in Table 2
                         together with the results published in [12,14,15]. The structural parameters for the obtained cabled-truss were found to be β
                        
                           GS10
                        =0.5, γ
                        
                           GS10
                        =0.1, and ε
                        
                           GS10
                        =0.2.

The stresses and displacements from the optimised solutions using GS10 are presented in Tables 3 and 4
                        
                        , respectively. These tables also show the numerical error E
                        
                           CT
                         between the results (stresses and displacements) obtained by the proposed HS and ANSYS. The best weight values for each generation of both GA and HS are shown in Fig. 15
                        .

In this section, a 15 elements ground structure (GS15) is optimised. The boundary conditions and ground structure of the present analysis are depicted in Fig. 16
                        . As for GS10, sizing and topology optimisation were performed concurrently to achieve structural mass optimisation. In total, 15 individual runs were performed. The population size was set at 420 and the maximum number of generations at 500. The input parameters necessary to determine the rule base of the system are equal to those from the previous example (GS10).

The optimal truss and cabled-truss topologies are depicted in Figs. 17 and 18
                        
                        , respectively. The optimised results are presented in Table 5
                         together with the results published by Deb and Gulati [14].

The stresses and displacements obtained for the optimised solutions using GS15 are presented in Tables 6 and 7
                        
                        , respectively. The numerical error E
                        
                           CT
                         between the results (stresses and displacements) obtained by the proposed HS and ANSYS is also listed in these tables.

The best weight values for each generation of each of the evaluated algorithms (GA and HS) are shown in Fig. 19
                        . The optimised cabled-truss possesses β
                        
                           GS15
                        =0.30, γ
                        
                           GS15
                        =0.06 and ε
                        
                           GS15
                        =0.20.

@&#RESULTS AND DISCUSSION@&#

From Tables 2 and 5, it can be observed that the optimised trusses found by the GA are similar to those found in previous researches. This indicates that the GA is capable of obtaining reliable results. In addition, further mass reduction was reached when cable and bar elements were combined. The results also indicate that in both examples (GS10 and GS15) the GA and the HS found common solutions; therefore, the fuzzy filter neither affected the search space nor caused premature convergence.

The comparison of the indexes β
                     
                        GS(10/15), γ
                     
                        GS(10/15), and ε
                     
                        GS(10/15) from the optimised structures with the initial estimations (β
                     ∗,
                     γ
                     ∗ and ε
                     ∗) show that the HS is capable of obtaining optimised solutions even when rough estimations are used to build the rule base of the system. It is likely that the closer the estimation is from the optimal indexes the lower the total number of evaluation.

The curves from Fig. 20
                      indicate that, for the same population size and generations, the number of evaluations performed during the truss optimisation was lower than those from the cabled-truss optimisation. This difference occurs because the optimisation of cabled-trusses requires the use of NFEM procedure, which comprises several evaluations of the same individual before structural equilibrium is reached.

The numerical error shown in Tables 3, 4, 6 and 7 is lower than 0.80%, validating the results from the HS. In addition, the results from Tables 3 and 6 indicate that the use of cables significantly changed the stress path along the structures.

Moreover, from Tables 2 and 5, it can be observed that cabled-trusses reached significant weight reduction over trusses. The results from these tables also point out that the proposed HS allows for obtaining the same solutions from the GA with the advantage computing a reduced number of evaluations.

@&#CONCLUSIONS@&#

In this work, a hybrid fuzzy-genetic system for discrete topology and sizing optimisation of cabled-trusses was presented. The proposed system was based on ground structure approach, nonlinear finite element analysis, genetic algorithm, and fuzzy logic. Depending on the obtained results, the following conclusion can be drawn.

When performing cabled-trusses optimisation, the increase of the ground structure discretisation led to a sharp increase of the search space. In addition, an increase in the number of evaluations of the FE model was also observed. This is because iterative procedures become part of the optimisation problem when cable elements are used. For this reason, the effectiveness of the GA can be compromised since a relatively high number of evaluations may lead to a prohibitive computational cost.

The hybridisation of fuzzy logic and GA allowed for introducing expertise into the optimisation framework of cabled-trusses, decreasing the total number of evaluations and thus reducing the computational cost.

Moreover, the comparison between optimised trusses and cabled-truss structures shows that the optimised cabled-trusses had a significant improvement in the structural mass minimisation when compared with optimised trusses.

@&#ACKNOWLEDGEMENT@&#

The authors wish to express their appreciation to the support of the Grant Agency of the Czech Technical University in Prague (Grant Nos. MSMT-SGS10/249/OHK2 and SGS13/039/OHK1/1T/11).

@&#REFERENCES@&#

