@&#MAIN-TITLE@&#Multi-period planning for electric car charging station locations: A case of Korean Expressways

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose three methods for multi-period planning to locate electric charging stations.


                        
                        
                           
                           We compare the three methods with the Korean Expressway data.


                        
                        
                           
                           Excluding short/low-demand paths make problems tractable without losing coverage.


                        
                        
                           
                           Multi-period location decisions can be significantly different from single-period decisions.


                        
                        
                           
                           We consider five types of demand profile for additional insights.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Flow-refueling location

Electric vehicles

Multi-period planning

Korean Expressways

@&#ABSTRACT@&#


               
               
                  One of the most critical barriers to widespread adoption of electric cars is the lack of charging station infrastructure. Although it is expected that a sufficient number of charging stations will be constructed eventually, due to various practical reasons they may have to be introduced gradually over time. In this paper, we formulate a multi-period optimization model based on a flow-refueling location model for strategic charging station location planning. We also propose two myopic methods and develop a case study based on the real traffic flow data of the Korean Expressway network in 2011. We discuss the performance of the three proposed methods.
               
            

@&#INTRODUCTION@&#

The use of electric passenger cars has gained considerable attention over the last decade as an environmentally friendly alternative to conventional cars that consume fossil fuels and emit greenhouse gases. There are, however, several barriers for electric cars to become more popular. The first and foremost barrier is the limited range that electric cars can be driven without recharging (Capar and Kuby, 2012; Lim and Kuby, 2010; Romm, 2006; Wang and Wang, 2010). Most electric cars available in 2014 have ranges, from a fully charged battery, of about 60 kilometers to 160 kilometers depending on various factors such as weather conditions, traffic congestion, and road types. Such driving ranges may be insufficient for electric cars to be used as a primary transportation mode. Another critical barrier is the lack of charging station infrastructure (Kuby and Lim, 2007; Melaina and Bremson, 2008; Ogden, 1999; Shukla et al., 2011; Wang, 2011). Since it would be difficult to increase the driving range of electric cars dramatically within the next few years, it is particularly important to have a well-planned charging station infrastructure. The goal of this paper is to help establish a multi-period strategic plan to build charging stations to maximize the total traffic flows covered.

There are a sizable number of papers in the literature that study and address the limited infrastructure issue and optimal locations for refueling or charging stations. Kuby and Lim (2005) suggest a flow-refueling location model (FRLM) to help find optimal refueling station locations for alternative-fuel vehicles (AFVs) that are powered by hydrogen, biofuels, or natural gas. The FRLM is based on the flow-intercepting model, proposed by Hodgson (1990) and Berman et al. (1992), that maximizes the total traffic flow passing a given number of facilities such as service stations. The FRLM extends the flow-intercepting model and incorporates the requirement that AFVs need multiple refueling stations, rather than a single refueling station, for long trips. Lim and Kuby (2010) propose several heuristic methods to solve the FRLM. Wang and Lin (2009),Capar and Kuby (2012), and Capar et al. (2013) provide alternative formulations that are numerically more efficient. MirHassani and Ebrazi (2013) propose a network expansion method to improve the computability of the FRLM, which is the base of our proposed model.

While the FRLM is suggested for refueling station location problems for AFVs that usually require short refueling time, it can also be applied to electric vehicle charging station location problems under mild assumptions (Capar et al., 2013). Since the FRLM assumes drivers will stop at charging stations on the way to the final destination to gain additional driving range, it is apparent that Level 1 or 2 charging technologies, for which drivers need to wait 2–8 hours to fully charge their vehicles, are inappropriate. Therefore, we assume in our model that Level 3 fast charging or battery swapping technologies are used with about 20-minute long waiting time and that charging stations are uncapacitated, under which the FRLM and its variants would provide meaningful results.

Unlike other studies, our paper focuses on a multi-period optimal construction plan, since it may not be practical to build a sufficient number of stations within a short period of time due to, for example, the limited budget. Indeed, the authority responsible for building such infrastructure will not invest until there are enough electric cars to use the infrastructure. On the other hand, the potential consumers will be less inclined to buy electric cars unless there is sufficient charging station infrastructure (Bento, 2008); a so-called chicken-and-egg problem arises (Kuby and Lim, 2005; Leiby and Rubin, 2004; Melaina, 2007; Wang and Wang, 2010). We note that a market-driven approach may not resolve such an issue; thus, a strategic infrastructure plan controlled by a central authority is needed. In that vein, strategic multi-period planning is required to find a first stage construction plan, followed by next stage construction plans, and thereby to provide an overall plan over the planning horizon. In this paper, we propose three methods: a multi-period optimization method, a forward-myopic method, and a backward-myopic method. In our case study employing the real data of the Korean Expressway network, we show and discuss the results of the three proposed methods.

In traditional facility location problems that consider optimal initial, intertemporal, or terminal (re)locations of facilities, a multi-period scheme has been studied extensively since the seminal work of Wesolowsky (1973). Among others, it is worth mentioning Drezner (1995) for a dynamic p-median problem, Contreras et al. (2011) for a multi-period uncapacitated hub problem, and Albareda-Sambola et al. (2009) for a multi-period service facility location problem. However, to the best of our knowledge, our paper is the first to consider a multi-period refueling/recharging station location problem for alternative-fuel vehicles including electric vehicles. Miralinaghi (2012) considers multi-period travel demands, but not multi-period locational decisions.

In our case study, we apply the proposed methods to the Korean Expressway, which is mainly operated by Korea Expressway Corporation (KEC). KEC is a government-owned company, which determines locations of rest areas, facility types and sizes. When KEC would plan for charging stations, it would cooperate with Korea Electric Power Corporation (KEPCO) that is also government-owned. This makes a market-based approach for the Korean Expressway network much more unrealistic in addition to the fact that it is unsuitable for a charging station infrastructure problem in general due to the chicken-and-egg problem mentioned above. This paper considers methods for central planning.

Our contributions are summarized as follows: (1) we propose three methods to help construct a multi-period plan for charging station infrastructure; (2) we perform an extensive numerical case study with the real Korean Expressway data to compare the three proposed methods; (3) to further investigate the differences among the three proposed methods, we perform another numerical study using five different demand profiles; (4) we show that multi-period location decisions from the three methods can be significantly different; and (5) we show in our case study that excluding short-distance and low-demand paths makes the problem solvable with a standard optimization solver within a reasonable time without losing coverage.

The remainder of this paper is organized as follows. In Section 2, we discuss the formulation of the single-period FRLM. In Section 3, we introduce the three methods for multi-period planning. We describe the Korean Expressway network in Section 4, and explain how we collected, organized, summarized, and manipulated the network topology traffic volume raw data. We also provide descriptive statistics that are helpful to understand the Korean Expressway traffic pattern. In Section 5, we report extensive computational results under a variety of scenarios and describe insights gained. We conclude this paper in Section 6 with some remarks on future research directions.

In this section, we review the network expansion technique proposed by MirHassani and Ebrazi (2013) for formulating the FRLM, which is the base for the three methods proposed in Section 3 of this paper. First, we assume that there exists a unique shortest path for each origin–destination (O–D) pair, and also assume that drivers always use the shortest path. Associated with each shortest path are the travel demand, flow, and an O–D pair. A path is an ordered set of arcs from O to D; demand is the number of vehicles that want to travel from O to D; and flow is the movement of demand loaded on a path or an arc. When charging stations located on a path enable electric vehicles to travel on the path, we say that the path is covered by those charging stations; when the number of vehicles traveling on such a covered path is in discussion, we say that the flow is covered.

To introduce the network expansion technique proposed by MirHassani and Ebrazi (2013), we first consider a road network that consists of a single path q, denoted by 
                        
                           G
                           (
                           
                              
                                 N
                              
                              q
                           
                           ,
                           
                              
                                 A
                              
                              q
                           
                           )
                        
                      where 
                        
                           
                              N
                           
                           q
                        
                      is the set of nodes on path q and 
                        
                           
                              A
                           
                           q
                        
                      is the set of arcs on path q. The distance between any two nodes i and j on path q is denoted by dq
                     (i, j) and the ordering index of node i on path q is denoted by ord
                        q
                     (i). For example, if i is the fourth node from the initial node on path q, then ord
                        q
                     (i) = 4. We denote the driving range of an electric car by R.

We make two additional assumptions. If, for some two consecutive nodes i and j on path q, dq
                     (i, j) > R, then j is unreachable from i. Therefore, we assume that dq
                     (i, j) ≤ R for any two consecutive nodes i and j on any path q in the road network G. If there exists an arc with a length greater than the range R, then it is suggested to add node(s) on the arc—see Kuby and Lim (2007) for methods to generate candidate node locations. We also assume, following Kuby and Lim (2005), that cars are at least half charged at the origin and destination nodes. This implies that there must be at least one charging station within the distance of R/2 from the origin and the destination, respectively. If there is no charging station at the destination, a driver must have traveled some distance (up to R/2) from the last charging station to reach the destination at which the battery must remain at least half charged to visit the charging station for the next trip. The same logic applies to the origin node. Note that this assumption does not exclude the case where charging stations are located at the origin and/or the destination.

We construct an expanded network for each path q by adding the source and sink nodes and pseudo arcs to the existing network. We denote the expanded network for path q by 
                        
                           G
                           (
                           
                              
                                 N
                                 ^
                              
                              q
                           
                           ,
                           
                              
                                 A
                                 ^
                              
                              q
                           
                           )
                        
                      where 
                        
                           
                              N
                              ^
                           
                           q
                        
                      is the set of nodes and 
                        
                           
                              A
                              ^
                           
                           q
                        
                      is the set of arcs in the expanded network, respectively. The steps to construct the expanded network are illustrated as follows.

                        
                           
                              Step 1.
                           
                           Add a source node s before the origin node O and connect the two nodes by adding a pseudo arc (s, O). Also, add a sink node k after the destination node D and connect the two nodes by adding a pseudo arc (D, k). That is,

                                 
                                    
                                       
                                          
                                             
                                                N
                                                ^
                                             
                                             q
                                          
                                          =
                                          
                                             
                                                N
                                             
                                             q
                                          
                                          ∪
                                          
                                             {
                                             s
                                             ,
                                             k
                                             }
                                          
                                          ,
                                          
                                          
                                             
                                                A
                                                ^
                                             
                                             q
                                          
                                          =
                                          
                                             
                                                A
                                             
                                             q
                                          
                                          ∪
                                          
                                             {
                                             
                                                (
                                                s
                                                ,
                                                O
                                                )
                                             
                                             ,
                                             
                                                (
                                                D
                                                ,
                                                k
                                                )
                                             
                                             }
                                          
                                       
                                    
                                 
                              
                           

Connect the source node s to any other node, say i, in path q by adding a pseudo arc (s, i) if node i can be reached from the origin node O with a half charged battery. That is,

                                 
                                    
                                       
                                          
                                             (
                                             s
                                             ,
                                             i
                                             )
                                          
                                          ∈
                                          
                                             
                                                A
                                                ^
                                             
                                             q
                                          
                                          
                                          if
                                          
                                          
                                             d
                                             q
                                          
                                          
                                             (
                                             O
                                             ,
                                             i
                                             )
                                          
                                          ≤
                                          
                                             R
                                             2
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             
                                                N
                                             
                                             q
                                          
                                       
                                    
                                 
                              
                           

Connect the sink node k to any other node, say j, in path q by adding a pseudo arc (j, k) if the destination node D can be reached from node j with a half charged battery. That is,

                                 
                                    
                                       
                                          
                                             (
                                             j
                                             ,
                                             k
                                             )
                                          
                                          ∈
                                          
                                             
                                                A
                                                ^
                                             
                                             q
                                          
                                          
                                          if
                                          
                                          
                                             d
                                             q
                                          
                                          
                                             (
                                             j
                                             ,
                                             D
                                             )
                                          
                                          ≤
                                          
                                             R
                                             2
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          
                                             
                                                N
                                             
                                             q
                                          
                                       
                                    
                                 
                              
                           

Connect any two nodes, say i and j, in path q if the ordering index of node i is less than that of node j, and node j can be reached from node i with a fully charged battery. That is,

                                 
                                    
                                       
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          
                                             
                                                A
                                                ^
                                             
                                             q
                                          
                                          
                                          if
                                          
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         
                                                            d
                                                            q
                                                         
                                                         
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                         
                                                         ≤
                                                         R
                                                      
                                                   
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ord
                                                            
                                                            q
                                                         
                                                         
                                                            (
                                                            i
                                                            )
                                                         
                                                         <
                                                         
                                                            
                                                               ord
                                                            
                                                            q
                                                         
                                                         
                                                            (
                                                            j
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          
                                             
                                                N
                                             
                                             q
                                          
                                       
                                    
                                 
                              
                           

Once the expanded network is constructed for a path, we repeat the same procedure for all available paths to construct an expanded network 
                        
                           G
                           (
                           
                              N
                              ^
                           
                           ,
                           
                              A
                              ^
                           
                           )
                        
                      with

                        
                           
                              
                                 
                                    N
                                    ^
                                 
                                 =
                                 
                                    ⋃
                                    
                                       q
                                       ∈
                                       Q
                                    
                                 
                                 
                                    
                                       
                                          N
                                       
                                       q
                                    
                                    ^
                                 
                                 
                                 and
                                 
                                 
                                    A
                                    ^
                                 
                                 =
                                 
                                    ⋃
                                    
                                       q
                                       ∈
                                       Q
                                    
                                 
                                 
                                    
                                       
                                          A
                                       
                                       q
                                    
                                    ^
                                 
                              
                           
                        
                     where 
                        Q
                      is the set of paths. Binary variables yi
                      ∈ {0, 1} are introduced, and yi
                      = 1 if a charging station is to be located at node i; otherwise yi
                      = 0. The flow on an arc 
                        
                           
                              (
                              i
                              ,
                              j
                              )
                           
                           ∈
                           
                              
                                 A
                                 ^
                              
                              q
                           
                        
                      of path p is denoted by 
                        
                           x
                           
                              i
                              j
                           
                           q
                        
                     . The notation is summarized in Table 1
                     .

To formulate the FRLM that optimally locates a given number of charging stations to maximize the total flow covered, we add extra pseudo arcs to the network following MirHassani and Ebrazi (2013). For each path q, we introduce the pseudo arc (s, k) that directly connects the source s and the sink k. We also introduce a new arc set 
                        
                           A
                           ¯
                        
                      such that 
                        
                           
                              A
                              ¯
                           
                           =
                           
                              {
                              
                                 (
                                 s
                                 ,
                                 k
                                 )
                              
                              }
                           
                           ∪
                           
                              A
                              ^
                           
                        
                     . If 
                        
                           
                              x
                              
                                 s
                                 k
                              
                              q
                           
                           ,
                        
                      an arc flow variable on the pseudo arc (s, k), is 0 on path q, then path q is covered. If 
                        
                           
                              x
                              
                                 s
                                 k
                              
                              q
                           
                           =
                           1
                           ,
                        
                      then path q is not covered. In addition, we add the following constraint:

                        
                           (1)
                           
                              
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       N
                                    
                                 
                                 
                                    y
                                    i
                                 
                                 =
                                 m
                              
                           
                        
                     where m is the number of charging stations to be located. Then, the FRLM is formulated as follows:

                        
                           (2)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          FRLM
                                          
                                             (
                                             m
                                             ;
                                             
                                                y
                                                L
                                             
                                             ,
                                             
                                                y
                                                U
                                             
                                             )
                                          
                                          :
                                          
                                          max
                                          Z
                                          =
                                          
                                             ∑
                                             
                                                q
                                                ∈
                                                Q
                                             
                                          
                                          
                                             f
                                             q
                                          
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                
                                                   s
                                                   k
                                                
                                                q
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          s.t.
                                          
                                             ∑
                                             
                                                {
                                                j
                                                |
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                ∈
                                                
                                                   
                                                      A
                                                      ¯
                                                   
                                                   q
                                                
                                                }
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             q
                                          
                                          −
                                          
                                             ∑
                                             
                                                {
                                                j
                                                |
                                                
                                                   (
                                                   j
                                                   ,
                                                   i
                                                   )
                                                
                                                ∈
                                                
                                                   
                                                      A
                                                      ¯
                                                   
                                                   q
                                                
                                                }
                                             
                                          
                                          
                                             x
                                             
                                                j
                                                i
                                             
                                             q
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         i
                                                         =
                                                         
                                                            s
                                                            q
                                                         
                                                         ,
                                                      
                                                   
                                                   
                                                
                                                
                                                   
                                                      
                                                         −
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         i
                                                         =
                                                         
                                                            k
                                                            q
                                                         
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         ∀
                                                         q
                                                         ∈
                                                         Q
                                                         ,
                                                         ∀
                                                         i
                                                         ∈
                                                         
                                                            
                                                               N
                                                               ^
                                                            
                                                            q
                                                         
                                                         ,
                                                      
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      
                                                         i
                                                         ≠
                                                         
                                                            s
                                                            q
                                                         
                                                         ,
                                                         
                                                            k
                                                            q
                                                         
                                                         ,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                {
                                                j
                                                |
                                                
                                                   (
                                                   j
                                                   ,
                                                   i
                                                   )
                                                
                                                ∈
                                                
                                                   
                                                      A
                                                      ¯
                                                   
                                                   q
                                                
                                                }
                                             
                                          
                                          
                                             x
                                             
                                                j
                                                i
                                             
                                             q
                                          
                                          ≤
                                          
                                             y
                                             i
                                          
                                          
                                          ∀
                                          q
                                          ∈
                                          
                                             Q
                                             i
                                          
                                          ,
                                          i
                                          ∈
                                          
                                             
                                                N
                                             
                                             q
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                N
                                             
                                          
                                          
                                             y
                                             i
                                          
                                          =
                                          m
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             q
                                          
                                          ≥
                                          0
                                          
                                          ∀
                                          q
                                          ∈
                                          Q
                                          ,
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          
                                             
                                                A
                                                ¯
                                             
                                             q
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             y
                                             i
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             y
                                             i
                                             L
                                          
                                          ≤
                                          
                                             y
                                             i
                                          
                                          ≤
                                          
                                             y
                                             i
                                             U
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          N
                                       
                                    
                                 
                              
                           
                        
                     where fq
                      represents the path flow on path q. We let 
                        
                           
                              y
                              i
                              L
                           
                           =
                           
                              y
                              i
                              U
                           
                           =
                           1
                        
                      for location i of any existing charging station, and we let 
                        
                           
                              y
                              i
                              L
                           
                           =
                           
                              y
                              i
                              U
                           
                           =
                           0
                        
                      for location i that we cannot choose. For any other location i, we let 
                        
                           
                              y
                              i
                              L
                           
                           =
                           0
                        
                      and 
                        
                           
                              y
                              i
                              U
                           
                           =
                           1
                        
                     . The objective function (2) quantifies the total flow covered.

Our particular interest is to establish a dynamic multi-period plan, with a given number of charging stations that will be constructed over time, so as to maximize the total flow covered throughout the planning horizon. We propose three methods for multi-period planning of flow-refueling locations: (i) multi-period optimization (M-opt) method, (ii) forward-myopic (F-myopic) method, and (iii) backward-myopic (B-myopic) method. We formulate the multi-period flow refueling location model (M-FRLM) for the M-opt method by extending the FRLM. The latter two myopic methods solve a single-period optimization problem based on the FRLM for each period successively.

The M-opt method is based on the M-FRLM. To formulate the M-FRLM, we first introduce the time index 
                           
                              t
                              ∈
                              T
                           
                         where 
                           
                              T
                              =
                              {
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              T
                              }
                           
                         is the set of planning periods and T represents the final period. We introduce the vector n = (n
                        1, n
                        2, …, nT
                        )T to represent the total number of charging stations to be built by each period, where T in the superscript means the transpose. For example, n
                        1 is the given number of charging stations to be located in the first planning period, n
                        2 represents the total number of charging stations to be located by the second planning period, and so on. That is, we locate n
                        2 − n
                        1 number of new charging stations in the second period, n
                        3 − n
                        2 in the third, and so on. We also introduce new binary variables 
                           
                              y
                              i
                              t
                           
                         in place for yi
                         and the following new constraints:

                           
                              (9)
                              
                                 
                                    
                                       y
                                       i
                                       τ
                                    
                                    ≥
                                    
                                       y
                                       i
                                       t
                                    
                                    
                                    τ
                                    =
                                    t
                                    +
                                    1
                                    ,
                                    ⋯
                                    ,
                                    T
                                    ,
                                    
                                    ∀
                                    t
                                    ∈
                                    T
                                 
                              
                           
                        The above constraints imply that if a charging station is built at some location i in some period t, it must remain operational until the final period. The constraint (1) needs to be updated accordingly:

                           
                              (10)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          N
                                       
                                    
                                    
                                       y
                                       i
                                       t
                                    
                                    =
                                    
                                       n
                                       t
                                    
                                    
                                    t
                                    ∈
                                    T
                                 
                              
                           
                        In addition, we introduce a time-dependent traffic volume parameter 
                           
                              f
                              q
                              t
                           
                         and modify the objective function as follows:

                           
                              
                                 
                                    Z
                                    =
                                    
                                       ∑
                                       
                                          t
                                          ∈
                                          T
                                       
                                    
                                    
                                       ∑
                                       
                                          q
                                          ∈
                                          Q
                                       
                                    
                                    
                                       f
                                       q
                                       t
                                    
                                    
                                       (
                                       1
                                       −
                                       
                                          x
                                          
                                             s
                                             k
                                          
                                          
                                             q
                                             t
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        The multi-period model (M-FRLM) can then be expressed as follows:

                           
                              (11)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             M
                                             -
                                             FRLM
                                             
                                                (
                                                n
                                                )
                                             
                                             :
                                             
                                             max
                                             Z
                                             =
                                             
                                                ∑
                                                
                                                   t
                                                   ∈
                                                   T
                                                
                                             
                                             
                                                ∑
                                                
                                                   q
                                                   ∈
                                                   Q
                                                
                                             
                                             
                                                f
                                                q
                                                t
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      s
                                                      k
                                                   
                                                   
                                                      q
                                                      t
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             s.t.
                                             
                                             
                                                ∑
                                                
                                                   {
                                                   j
                                                   |
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                   ∈
                                                   
                                                      
                                                         A
                                                         ¯
                                                      
                                                      q
                                                   
                                                   }
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                
                                                   q
                                                   t
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   {
                                                   j
                                                   |
                                                   
                                                      (
                                                      j
                                                      ,
                                                      i
                                                      )
                                                   
                                                   ∈
                                                   
                                                      
                                                         A
                                                         ¯
                                                      
                                                      q
                                                   
                                                   }
                                                
                                             
                                             
                                                x
                                                
                                                   j
                                                   i
                                                
                                                
                                                   q
                                                   t
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         
                                                            i
                                                            =
                                                            
                                                               s
                                                               q
                                                            
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            −
                                                            1
                                                         
                                                      
                                                      
                                                         
                                                            i
                                                            =
                                                            
                                                               k
                                                               q
                                                            
                                                            ,
                                                            
                                                            ∀
                                                            t
                                                            ∈
                                                            T
                                                            ,
                                                            q
                                                            ∈
                                                            Q
                                                            ,
                                                            i
                                                            ∈
                                                            
                                                               
                                                                  N
                                                                  ^
                                                               
                                                               q
                                                            
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         
                                                            i
                                                            ≠
                                                            
                                                               s
                                                               q
                                                            
                                                            ,
                                                            
                                                               k
                                                               q
                                                            
                                                            ,
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   {
                                                   j
                                                   |
                                                   
                                                      (
                                                      j
                                                      ,
                                                      i
                                                      )
                                                   
                                                   ∈
                                                   
                                                      
                                                         A
                                                         ¯
                                                      
                                                      q
                                                   
                                                   }
                                                
                                             
                                             
                                                x
                                                
                                                   j
                                                   i
                                                
                                                
                                                   q
                                                   t
                                                
                                             
                                             ≤
                                             
                                                y
                                                i
                                                t
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             
                                                
                                                   N
                                                
                                                q
                                             
                                             ,
                                             t
                                             ∈
                                             T
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                x
                                                
                                                   j
                                                   i
                                                
                                                
                                                   q
                                                   t
                                                
                                             
                                             ≥
                                             0
                                             
                                             ∀
                                             t
                                             ∈
                                             T
                                             ,
                                             q
                                             ∈
                                             Q
                                             ,
                                             ∀
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             ∈
                                             
                                                
                                                   A
                                                   ¯
                                                
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                y
                                                i
                                                t
                                             
                                             =
                                             
                                                n
                                                t
                                             
                                             
                                             ∀
                                             t
                                             ∈
                                             T
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                y
                                                i
                                                τ
                                             
                                             ≥
                                             
                                                y
                                                i
                                                t
                                             
                                             
                                             τ
                                             =
                                             t
                                             +
                                             1
                                             ,
                                             ⋯
                                             ,
                                             T
                                             ,
                                             t
                                             ∈
                                             T
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                y
                                                i
                                                t
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             N
                                             ,
                                             t
                                             ∈
                                             T
                                          
                                       
                                    
                                 
                              
                           
                        The objective is to maximize the total flow covered over the planning horizon. The constraints (13) guarantee that electric cars can pass a node in time t, only if a charging station is available at that node in time t. The constraints (16) ensure that once a charging station is built, it must remain operational for the remaining planning periods. All other constraints are extensions of the FRLM. We use yt
                         to denote the vector 
                           
                              
                                 y
                                 t
                              
                              =
                              
                                 (
                                 
                                    y
                                    i
                                    t
                                 
                                 :
                                 i
                                 ∈
                                 N
                                 )
                              
                           
                        . The M-opt method is to solve the M-FRLM using branch-and-bound or an optimization solver like CPLEX.

Instead of solving the M-FRLM, we may consider a myopic method to solve the multi-period planning problem. In time period 1, we solve 
                           
                              FRLM
                              (
                              
                                 n
                                 1
                              
                              ;
                              
                                 0
                              
                              ,
                              
                                 1
                              
                              )
                           
                         to obtain a solution y
                        1, where 0 is the vector of zeros and 1 is the vector of ones. Then in time period 2, we solve 
                           
                              FRLM
                              (
                              
                                 n
                                 2
                              
                              ;
                              
                                 y
                                 1
                              
                              ,
                              
                                 1
                              
                              )
                           
                         to obtain a solution y
                        2, given that the locations for n
                        1 charging stations found in the first period are fixed, and repeat the same procedure until time period T. In time period t, 
                           
                              FRLM
                              (
                              
                                 n
                                 t
                              
                              ;
                              
                                 y
                                 
                                    t
                                    −
                                    1
                                 
                              
                              ,
                              
                                 1
                              
                              )
                           
                         chooses nt
                         − n
                        
                           t − 1 number of new stations in addition to n
                        
                           t − 1 number of existing stations.

Another myopic method we propose is backward. We start with the final time period T and the number of total charging stations that will be installed by T, which is denoted by nT
                        . We first solve 
                           
                              FRLM
                              (
                              
                                 n
                                 T
                              
                              ;
                              
                                 0
                              
                              ,
                              
                                 1
                              
                              )
                           
                         to obtain a solution yT
                         for time period T. Then we proceed to time period T − 1 in which we solve 
                           
                              FRLM
                              (
                              
                                 n
                                 
                                    T
                                    −
                                    1
                                 
                              
                              ;
                              
                                 0
                              
                              ,
                              
                                 y
                                 T
                              
                              )
                           
                         to choose n
                        
                           T − 1 number of locations among the nT
                         number of locations already chosen in time period T. We repeat the same procedure until time period 1.

The Korean Expressway network as of November 2012 consists of 10 south-north expressways, 8 east-west expressways, and 16 branch or loop expressways (Korea Expressway Corporation, 2012). Most of them are operated and maintained by Korea Expressway Corporation (KEC), a government-owned company. There are a small number of expressways invested and operated by private entities as well. These two types of expressways share several common salient features: (1) all expressways (KEC and private expressways) are connected. That is, a driver may depart from any tollgate and arrive at any other tollgate in the expressway network, (2) all drivers must pay tolls at the destination tollgates based on the distance traveled. (There is no free of charge expressway in Korea.) A paper ticket or a radio-frequency identification (RFID) machine installed on a car is being used to record the information of the origin tollgate to calculate the distance, and (3) Korea Expressway Corporation manages all traffic information such as the origin–destination (O–D) pairs and traffic volumes for its own expressways as well as private expressways. Since all expressways are connected, it is possible for KEC to track all traffic volumes between any pair of origin and destination tollgates.

We construct a network based on the traffic volume information made available by Korea Expressway Corporation (2012) for the year of 2011. For some locations, there are multiple gates with the same name; there are separate entering gates and exiting gates; or there are separate upward direction gates and downward direction gates. We concatenate such gates into a single gate for the sake of simplicity and calculate the associated traffic volume accordingly. As a result, we obtain a network with 324 nodes and 440 undirected arcs (880 directed arcs) as illustrated in Fig. 1
                     . Each node represents a tollgate for all driving directions and both entering and exiting flows. For the junctions of expressways, we introduce additional arcs that enable us to consider all possible driving directions. An example is provided in Fig. 2
                     , in which we add four additional arcs, without adding a node for the physical location of the interchange.

We analyze the KEC traffic data (Korea Expressway Corporation, 2012) as follows. For any O–D pair, there exist paths and associated traffic volumes. We combine the flows from all paths between the same O–D pair and assume drivers always choose the minimum distance path. The total number of paths is then calculated to be 104,652 as in 324 × 323 with one path for each O–D pair. Table 2
                      summarizes the traffic data by showing the distribution, minimum, maximum, mean, and median values of the traffic volume. Note that most of the paths are used by a small number of drivers (small demand). In particular, the proportion of paths whose demand is less than or equal to 20,000 is 95.38 percent (99,814 divided by the total number of paths 104,652). In this paper, we consider the O–D pairs and the corresponding minimum distance paths whose traffic volume is greater than or equal to a threshold. For example, if we consider a 30,000 threshold (implying that all paths with a demand < 30,000 are excluded), then the number of such paths is 3900. While such paths are only 3.72 percent of all the paths, the total traffic volume of the 3900 paths constitutes 85.70 percent of the traffic volume from all paths. Table 3
                      provides the number of paths and associated total traffic volumes with respect to some different demand ranges.

A histogram based on path length is provided in Fig. 3
                     a for all paths. The mean path length is 209.50 kilometers, and the length of the longest path is 549.91 kilometers. The path distance distribution is skewed to the right, and if we only consider the paths whose demand is greater than or equals to, e.g., 30,000, the distribution becomes significantly skewed to the right as in Fig. 3b, with the mean value of 65.62 kilometers. Fig. 4
                      plots the path distance and travel demand for each O–D pair and shows that more frequently used paths have shorter lengths.

Although it would be possible for drivers to access charging stations located outside the network, it makes more sense for drivers to recharge their batteries within the expressway network because the Korean Expressway is entirely toll-based, implying that drivers need to pay whenever they leave the network. Within the expressway network, there are abundant rest areas available with commercial units including restaurants, convenience stores, bookstores, fashion outlets, and most importantly, gas stations. Therefore, it will be convenient for charging stations to be located in such rest areas. In our proposed model, however, charging stations are to be located at the nodes (tollgates), while in reality the rest areas are at some points in arcs. However, we find that there are sufficiently many rest areas available within the network; there are 206 rest areas listed in the KEC website (Korea Expressway Corporation, 2012), most of which are in close proximity of tollgates. Therefore, locating charging stations at nodes may be interpreted as locating those at nearby rest areas. If a rest area is not available to a certain node that is determined by a model to be an optimal location for a charging station, then we suggest construction of a charging station at that node. Alternatively, if we want to restrict the location of charging stations only to current rest areas available, we can introduce additional nodes for those locations and revise the model accordingly.

Of interest is to consider the case in which some drivers may be willing to detour to recharge their cars at charging stations on a different path. In that case, charging stations need not be on the shortest path for each origin–destination pair to cover a path. While it may be a less-realistic assumption in the “closed” road network such as the Korean Expressway having toll gates in all exits, the detouring assumption makes a good sense and may be more realistic in many urban road networks. We refer readers to Kim and Kuby (2012) for such a problem.

We provide computational results from the Korean Expressway network case under a variety of scenarios in Section 5.1. In addition, to gain additional insights about the differences among the three proposed methods, we consider five different travel demand profiles and provide the results in Section 5.2. We used the off-the-shelf software, MATLAB 2014a with CPLEX 12.6 solver, in Windows 8 Professional 64-bit with 2.13 gigahertz Intel Core i7 CPU and 8 gigabytes memory environment to solve the problems. The computation time reported in this paper excludes the time required for pre-processing the data (e.g., augmenting the network by adding nodes and arcs) and represents the time to solve mathematical optimization models. In all cases, pre-processing finished within a few seconds.

In this case study, we consider six time periods with n = (3, 6, 9, 12, 15, 18)T, which means that in Period 1 we locate 3 charging stations, and in each subsequent period, we locate three additional stations. With respect to the electric car traffic volume of each path q, denoted by fq
                        , we assume that it is proportional to the traffic volume of conventional cars in 2011 data. That is, if the 2011 traffic volume is hq
                         for path q, we assume the traffic volume of electric cars is given by fq
                         = rhq
                         for all q where r is a positive fractional constant. We also assume a homogeneous adoption rate across all geographical regions, which makes the results independent from the choice of r. For a method considering heterogeneous adoption rates, see Kuby et al. (2009).

According to Lee (2011), the Korean electric car market is expected to grow by about 30 percent every year. We assume that the traffic volume of electric car will homogeneously increase by 30 percent in each time period for all paths. That is, we use 
                           
                              
                                 f
                                 q
                                 
                                    t
                                    +
                                    1
                                 
                              
                              =
                              1.30
                              
                                 f
                                 q
                                 t
                              
                           
                         for all q and t. By assuming 30 percent increase in traffic volume in each time periods, we allow the M-opt method to emphasize the flow coverage in the later time periods. If combined with more sophisticated demand forecast methods, the M-opt method is readily capable of effectively capturing heterogeneous adoption rates of electric cars over time. At the same time, the M-opt method puts more emphasis on earlier locations and associated flow coverages. Consequently, the M-opt method tries to select charging station locations to cover most frequently used paths in earlier time periods while considering the increase of traffic volume in the later time periods.

The locations selected by the M-opt, F-myopic, and B-myopic solutions are different in most cases. Table 4
                         counts the number of different solutions between the M-opt and F-myopic solutions and between the M-opt and B-myopic solutions, and Fig. 5
                         displays a case with demand ≥ 20,000 and range = 120 kilometers. We note that B-myopic solutions tend to be more similar to M-opt solutions than F-myopic solutions, with one exception with demand ≥ 20,000 and range = 160 kilometers where 11 locations are different in the final time period.

In Table 5
                        , we compare the model coverage of the three solutions. We define the model coverage as the proportion of paths (and associated flows or vehicle kilometers traveled (VKT)) covered by solutions among all the paths included in the model after demand thresholds are applied. Recall that, for the sake of computability, we omit in the model all the paths whose demand is less than a pre-specified threshold. As expected, the flow coverage of the M-opt method is the greatest in all cases. In addition, the VKT coverage of the M-opt method is the greatest in most cases, with one exception when we consider demand ≥ 20,000 and range = 160 kilometers. In Table 5, we observe that the three solutions differ in terms of not only their geographical locations but also their flow and VKT coverages. However, we note that the coverage differences are only about 1.5 percent at most.

Similarly, Table 6
                         compares the actual coverage in which we consider all the paths including those omitted in the model. While the F-myopic and B-myopic solutions are no better than the M-opt solutions in terms of the model coverage, it is possible that their actual coverage is better than the actual coverage of the M-opt solution, which is the case for some scenarios in our case study, because of the paths not included in the model. However, we again observe that the differences are small.

In the Korean Expressway case, as most travel demands are associated with short paths, the result also emphasizes covering short paths. In Fig. 6
                        , we compare the percentage of flow modeled (flow associated with the paths included in the model) and flow covered (flow associated with the paths covered by solutions) in the final time period, t = 6, by the M-opt solution for each interval of path length with n = (3, 6, 9, 12, 15, 18)T, range = 160 kilometers, and demand ≥ 20,000. We note that no path whose length is greater than 400 kilometers is included in the model due to the demand threshold. However, 35.56 percent and 9.72 percent of the flow are covered for path length intervals [400 kilometers, 500 kilometers] and [500 kilometers, 600 kilometers], respectively, due to the accumulation of charging stations. That is, some long paths omitted in the model are actually covered by charging stations intended to cover the paths included in the model that have shorter lengths.


                        Table 7
                         shows the model and actual coverage of the M-opt, F-myopic, and B-myopic solutions in each time period for the case of demand ≥ 20,000 and range = 120 kilometers. In this case, the M-opt and B-myopic solutions are identical. The F-myopic solution emphasizes coverage in earlier time periods and leads to inferior coverage in the final time period. However, as shown in Table 7, the differences among the results are small. We investigate more cases using five different demand profiles to suggest meaningful conclusions in Section 5.2.

While the coverage of the three solutions are similar, the B-myopic method is the most efficient approach in terms of the total computational time, as presented in Table 8
                        . The B-myopic method requires the most computational time in its first run (solving the FRLM for t = 6), and requires significantly less time in later runs (solving the FRLM for t = 5, 4, …, 1). The F-myopic method requires relatively uniform computational times throughout the runs. Since the number of decision variables in the M-FRLM increases quickly as the number of time periods increases, CPLEX takes significantly longer computational time when the M-opt method is used to find a solution. In our case study, as the planning horizon has six time periods, the F-myopic and B-myopic methods need to solve six instances of the FRLM to find a solution, while the M-opt method needs to solve the M-FRLM only once.

While the M-opt method produces optimal solutions in the case study as expected, the differences among the three methods were small. To investigate the cases that can lead to significantly different results and gain further insights about the performances of the three methods, we perform additional experiments based on five different types of the demand profile. In more detail, we apply five demand profiles shown in Fig. 7
                         to 100 randomly selected O–D pairs from the Korean Expressway network. Profile 1 is similar to the original demand profile shown in Fig. 4. Profile 2 assigns higher travel demands to longer paths, Profile 3 assigns higher travel demands to the paths in the middle, and Profile 4 assigns travel demands uniformly. While both profiles assume an increasing demand pattern, Profile 5 differs from Profile 2 by assigning meaningful travel demands for short paths.

In these additional experiments, we use n = (3, 6, 9)T with the driving range of 120 kilometers. All parameters and assumptions remain identical as in the Korean Expressway case and Table 9
                         shows the result. In Profile 1, the flow coverage differences among the three methods are small as in the Korean Expressway case. On the other hand, with Profile 2, the F-myopic solution exhibits more coverage in the first time period, but significantly less coverage in later periods, compared to the two other solutions. With only three charging stations given in the first time period, the F-myopic method cannot cover long paths with high travel demands and, thus, focuses on short paths with small demands. To cover a long path with high travel demand, the M-opt and B-myopic methods can strategically locate charging stations in each time period to maximize the overall coverage. However, the F-myopic method abandons an attempt to cover such a long path in period 1 and leads to a suboptimal solution eventually. In the case of the Korean Expressway network, most travel demand corresponds to short paths, as we have seen the demand profile in Fig. 4, which is the main reason that the differences among the M-opt, F-myopic, and B-myopic results are small.

With Profiles 3 and 4, the M-opt solutions are between the F-myopic and B-myopic solutions in the sense that the coverage of the M-opt solutions is similar to the F-myopic solutions—which is better than B-myopic solutions—in period 1 and is similar to the B-myopic solutions—which is better than F-myopic solutions—in the final time period. Note that the M-opt solution is still the best in terms of the overall coverage. Note also that the F-myopic solution in period 3 is lower than the M-opt and B-myopic solutions with Profile 4.

Profile 5 exhibits a case when the B-myopic solution is least preferred. Although the B-myopic solution provides the greatest coverage in the final time period, its overall coverage is less than two other solutions: 11.54 percent for the B-myopic solution and 12.68 percent for the M-opt and F-myopic solutions. Note in particular that the B-opt solution shows very small coverage of 0.79 percent in the first time period, compared to 6.14 percent of the M-opt and F-myopic solutions; hence, it would be less helpful to resolve the chicken-and-egg issue. In the case with Profile 5, the B-myopic method focuses to cover high-demand, long paths in the final period (because it first solves the FRLM for the final period, then for the earlier periods), not being able to cover paths with small yet considerable demands in the first and second time periods. On the other hand, the M-opt and F-myopic methods are able to cover such short paths with considerable demands in periods 1 and 2, and provide an overall better solutions than the B-myopic solution. In Profile 5, the difference of demand between short and long paths is much less outstanding than in Profile 2, although both of them are increasing profiles. Hence, with Profile 5, covering many short paths having less demands is indeed better than covering a few long paths having high demands, especially when it comes to resolving the chicken-and-egg problem.

We have studied the multi-period optimal charging station location problem for electric cars based on a real dataset of the Korean Expressway network. The problem is computationally very challenging due to its large scale. To effectively relieve the computational burden to make it solvable while maintaining the validity, we proposed a method that excludes all the paths shorter than a half of the electric car’s driving range, while considering major origin-destination pairs with a demand greater than or equal to certain thresholds. Modeling only around 3 percent of the total paths, we were able to model 82.97 percent of the total traffic volume. When the M-opt method was used, 56.46 percent flow coverage on the modeled paths corresponded to 81.64 percent flow coverage on all the paths on average.

Our focus was to provide strategic multi-period methods for electric-car charging station locations. We proposed a multi-period optimization model and compared it with the forward-myopic and backward-myopic methods that solve single-period optimization problems sequentially. We found that the differences among the results of the three methods are small in our Korean Expressway case study. To gain further insights, we tested the three proposed methods with five different demand profiles, and found that the F-myopic and B-myopic methods may produce significantly worse results in some demand profiles.

Although the M-opt method produces the best results in all cases—when the performance measured on the modeled paths only—it should be noted that it requires the most computational resource. As the planning horizon increase, the size of the multi-period optimization model increases quickly, while the size of F-myopic and B-myopic problems increase relatively slowly. Therefore, for problems that consider a large network with a long planning horizon, care must be taken if the M-opt method is used. Since the B-myopic method provides as good solutions as the M-opt method in most cases, it is recommended to employ the B-myopic method, especially for large problems. However, a careful investigation into the distribution of travel demand is strongly recommended when the B-opt method is used to avoid coverage losses in earlier time periods.

This paper provides an ample potential for further study. In particular, our immediate interest is to include the capacity context (Upchurch et al., 2009) in multi-period planning, which will provide a better insight into the real world problem. In this paper, we restricted our focus on location problems to highlight the aspects of the multi-period construction plan and computational excellence of our proposed method. The consideration of capacity in candidate locations will be particularly important for high-volume paths. We also propose to consider factors such as stochastic charging time, charging demand at each station, and waiting time at each station in the future research.

As an extension, we may consider the driving range that increases over time. As technology advances, the driving range of electric vehicles will increase. Of interest is to formulate a multi-period optimization model with increasing driving range and to investigate its implications on the location decisions.

Another direction for future research is to compare different reformulations of the flow-refueling location model. While we used the method of MirHassani and Ebrazi (2013) in this paper, there is another efficient reformulation recently proposed by Capar et al. (2013). It will be useful to compare the performance and flexibility of the two alternatives in various settings that consider single- vs. multi-periods planning, charging capacity, stochasticity of demand, and robustness.

@&#ACKNOWLEDGMENT@&#

The authors are sincerely thankful to the three anonymous reviewers for their invaluable comments and detailed suggestions that improved the quality of this paper significantly.

@&#REFERENCES@&#

