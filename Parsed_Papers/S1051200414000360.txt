@&#MAIN-TITLE@&#Hybrid weighted bit flipping low density parity check decoding

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Multiple erroneous bits corrected per iteration.


                        
                        
                           
                           Lower decoding complexity compared to existing parallel algorithms.


                        
                        
                           
                           Percent reduction in decoding iterations ≈45%.


                        
                        
                           
                           Percent reduction in decoding time ≈40%.


                        
                        
                           
                           No degradation in error correcting performance.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Bit flipping (BF)

Error correction codes

Low density parity check codes (LDPC)

Parallel bit flipping

@&#ABSTRACT@&#


               Graphical abstract
               
                  
               
               
                  
               
            

@&#INTRODUCTION@&#

Belief propagation (BP) decoding algorithms like sum-product (SP), min-sum, and normalized min-sum (NMS), allows low density parity check (LDPC) codes to exhibit performance close to the Shannon limit [1–6]. Despite their excellent performance BP based LDPC decoders are often criticized for their large memory requirements. The standard bit flipping algorithm is simpler in computation, but may lead to significant performance loss in terms of bit error rate (BER). To reduce the computation complexity without significant loss of error correcting performance, weighted bit flipping (WBF) and improved modified-WBF (IWBF) LDPC decoding schemes were proposed [7,8]. Reliability ratio based-WBF (RRWBF) decoding method was proposed to further improve the BER performance [9]. Implementation efficient RRWBF (IRRWBF) decoding was proposed to reduce the number of computation in RRWBF decoding without affecting its decoding performance [10]. However, due to their serial nature these bit flipping decoding methods converge slowly. Parallel bit flipping method were introduced for reducing the decoding latency [11–17]. These parallel decoding methods often rely on using a pre-defined threshold of number of bits to be flipped in each of their iterations. These thresholds are often dependent on signal-to-noise ratio and must be changed based on the signal transmission conditions. This signal condition adaptive response requires additional computation and resources.

In this paper, Hybrid Weighted Bit Flipping (HWBF) LDPC decoding scheme is proposed. Initially the proposed scheme acts as parallel bit flipping algorithm. As the decoding progresses the number of erroneous bits is reduced and the proposed de3coding method starts behaving like serial bit flipping decoding. Therefore, the proposed decoding method is termed “Hybrid”. The method of finding the most un-reliable bit positions is similar to the IRRWBF decoding. This is done to reduce the number of initial computations to a minimum. The number of bits flipped in parallel is then computed based on the row and column weight of the parity check matrix. The relation between the error terms is used to find the number of erroneous bits that can be corrected in parallel. Based on this relation, the proposed scheme can detect and correct a maximum of 3 erreneous hard decision bits in an iteration. When the amount of error is reduced, the number of bits flipped in parallel is also reduced to avoid flipping the non-erroneous bits. It is shown that the number of bits flipped in parallel is adaptive with respect to SNR.

It is shown that, as compared to IRRWBF decoding, the number of iterations required for successful decoding is reduced by more than 50% with the use of proposed HWBF decoding. The proposed decoding algorithm was simulated using LDPC code specified in 802.11n wireless communication standard [18]. The simulation result shows that the error correcting performance of the proposed codes is superior to that of original IRRWBF decoding for the same number of decoding iterations. With the same decoding performance, the number of iterations is reduced and hence, the total decoding time of the proposed HWBF LDPC decoder is smaller as compared to IRRWBF. The key features like smaller decoding time, high throughput and acceptable BER performance, increases the importance of the proposed design for implementing LDPC decoders in energy conservative mobile environments.

In this manuscript, following convention are used to denote the variables, matrices and constants. Variables: Lowercase, italic text with lowercase subscripts, e.g., 
                        
                           
                              i
                           
                           
                              m
                              x
                           
                        
                     . Matrices: Uppercase and bold text, e.g., H is the parity-check matrix. Constants: Uppercase and italic text with italic text subscripts, e.g., 
                        
                           
                              W
                           
                           
                              c
                           
                        
                      denotes column weight (number of non-zero entries per column). The symbols used in IRRWBF decoding algorithm are summarized in Table 1
                     .

In LDPC codes, K bit information vector is encoded to generate N bit codeword. After mapping the codeword using suitable modulation techniques like BPSK, the codeword is transmitted. The received vector, r, is noise added version of codeword. The received vector is converted to binary equivalent hard decision vector, 
                           
                              
                                 z
                              
                              
                                 n
                              
                           
                        , by threshold comparison operation. In standard LDPC BF decoding, received vectors participate in a check process, where the syndrome is calculated (Appendix A). All the un-satisfied check sends the “flip” signal to the hard-decision vector or the variable node they are associated with. The bit flipping algorithm then modifies 
                           
                              
                                 z
                              
                              
                                 n
                              
                           
                        ; flipping one bit at a time using some pre-defined criterion; until all the syndromes of the modified 
                           
                              
                                 z
                              
                              
                                 n
                              
                           
                         becomes zero. The error correcting performance of standard bit flipping method is much inferior to its message passing counterpart and hence, it is not suitable for practical applications.

During the initialization step, the standard weighted bit flipping (WBF) algorithm, finds the most unreliable message node associated with each check node computation. The probability of hard decision bit, 
                           
                              
                                 z
                              
                              
                                 n
                              
                           
                        , being valid, is determined by the absolute value of its soft value. In each check node computation, the message node with smallest absolute value is considered most unreliable. The decoding processes commonly employ variable node analysis where the syndrome vector is combined with some form of weight vector to generate an error vector [6,7]. This information is then used to compute the error contributed from each check node to the variable node. The hard decision bit associated with largest value in the error vector is flipped. This procedure is repeated till a valid codeword is found or the number of iterations has reached a maximum value. In the improved weighted bit flipping algorithm (I-WBF), modifications are made to calculate the error term when different message nodes have same probability of being flipped [8]. In such condition, the message node with lower value of absolute magnitude, 
                           |
                           
                              
                                 r
                              
                              
                                 n
                              
                           
                           |
                         is flipped (Appendix B). This is achieved by an additional term in error correction based on a weighting factor, α, which has to be optimized for each value of SNR. The value of α is not computed mathematically and hence, requires assumption and approximations based on a particular environment. This can severely degrade the decoding performance.

The dependence on weighting factor was removed in reliability ratio based weighted bit flipping (RRWBF), by introducing a reliability ratio, normalized by factor β, while computing the error term 
                           
                              
                                 E
                              
                              
                                 n
                              
                           
                         
                        [9] (Appendix C). Rest of the decoding algorithm is same as the standard weighted bit flipping algorithm. To reduce the computation steps and the decoding time, the computation of β was replaced by computing the initialization vector 
                           
                              
                                 T
                              
                              
                                 m
                              
                           
                         
                        [9], in implementation efficient RRWBF (IRRWBF) [10] (Appendix D). The operations performed at each stage in ith iteration are shown in Table 2
                        . The initialization step is performed only once and hence, it is independent of iteration number. In every iteration, only one bit is flipped in decision step, therefore the convergence is slower due to the serial nature of IRRWBF.

The standard bit flipping algorithm and its variant flip one bit in each of its iteration and therefore, converge slowly. In real time systems, fast convergence is essential for small decoding time and high throughput. In [11] and [12] multiple bits were flipped in parallel for reducing the decoding latency. In the first approach, the number of “flip” signals associated with each variable node is counted and all the variable nodes with total “flip” signals above a threshold are flipped. In this case, the threshold has to be re-calibrated with change in signal-to-noise ratio. In the second approach, the geometry of the parity check matrix was used to determine the number of variable nodes that are flipped in parallel. The number of bits flipped in parallel is given by total number of un-satisfied checks divided by column weight, 
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                        , of the parity check matrix. In [13], an improved parallel bit flipping algorithm (IPWBF) was proposed based on bootstrapping and delay-handling procedure to delay flipping of high reliability bits. In all the above mentioned methods, a set of check nodes associated with un-satisfied check are flipped in parallel. In the parallel bit flipping methods discussed above, the faster convergence is obtained with higher computation complexity and in some cases, with degradation in error correction performance.

In IRRWBF bit flipping algorithm, the error vector computed in the variable node step of IRRWBF decoding can be arranged in ascending–descending order to find a set of most un-reliable variable nodes. Amongst this set of most un-reliable nodes, pre-defined number variable nodes can be chosen and the associated hard decision bits can be flipped. As the signal-to-noise (SNR) increases, the number of unreliable bits decreases and hence, the number of hard decision bits that must be flipped should be reduced. Assuming that p bits are flipped in parallel, the actual number of erroneous bits will be less than p for high SNR value. Hence, the number of bits flipped in parallel bit flipping algorithm must be adaptive to SNR. In a real time system, estimation of SNR can lead to additional latency, lowering the overall throughput. Instead, the row and column characteristics of parity check matrices can be employed to determine the exact number of bits that can be flipped in parallel.

The number of operations required for finding the largest value in the error vector, in a set of N error terms, is given by 
                           N
                           −
                           1
                        . One operation is required to find the hard decision bit associated with largest value in the error vector. Hence, N operations are required in decision step of IRRWBF decoding as shown in Table 2. Using additional p operations, a set of sorted maximum error terms with p elements can be constructed. Let this set of maximum error terms be given as 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        :
                           
                              (1)
                              
                                 
                                    
                                       E
                                    
                                    
                                       n
                                       ,
                                       
                                          max
                                       
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       E
                                    
                                    
                                       n
                                       ,
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       E
                                    
                                    
                                       n
                                       ,
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       E
                                    
                                    
                                       n
                                       ,
                                       3
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       E
                                    
                                    
                                       n
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 ,
                                 …
                                 
                                    
                                       E
                                    
                                    
                                       n
                                       ,
                                       p
                                    
                                 
                                 }
                              
                           
                         where, 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 j
                              
                           
                         denotes that the nth error term in the variable node vector, 
                           
                              
                                 E
                              
                              
                                 n
                              
                              
                                 i
                              
                           
                        , and is the jth largest error term.


                        
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 1
                              
                           
                         is the largest error term in the error vector and 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 1
                              
                           
                           >
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 2
                              
                           
                           >
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 3
                              
                           
                        , 
                           …
                           >
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           …
                           >
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 p
                              
                           
                        ; 
                           1
                           ⩽
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                           ⩽
                           p
                        .

Similarly, let the set of hard decision bits associated with each of the elements of set of maximum error terms, 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , be given as 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        :
                           
                              (2)
                              
                                 
                                    
                                       z
                                    
                                    
                                       n
                                       ,
                                       
                                          max
                                       
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       z
                                    
                                    
                                       n
                                       ,
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       n
                                       ,
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       n
                                       ,
                                       3
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       n
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 ,
                                 …
                                 
                                    
                                       z
                                    
                                    
                                       n
                                       ,
                                       p
                                    
                                 
                                 }
                              
                           
                         where, 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                         denotes that the hard decision bit associated with 
                           (
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                           )
                        th error term, 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , in set of maximum error terms, 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        .

In the decision step of standard IRRWBF decoding, 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 1
                              
                           
                         associated with 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 1
                              
                           
                         is flipped. If the flipping of 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 1
                              
                           
                         does not affect the other values of set 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                         the next largest error term will be 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 2
                              
                           
                        . Similarly, if flipping of 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 2
                              
                           
                         does not affect the other values of set 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                         the next largest error term will be 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 3
                              
                           
                        . In effect, the values of 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 1
                              
                           
                         and 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 2
                              
                           
                         can be flipped in parallel. In a similar fashion, it can be assumed that if all the elements of set of maximum error terms, 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , are independent of each other, then all the p elements of 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , can be flipped in parallel. In case the elements of set 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , are related, flipping of some of the elements in set 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , will affect the other elements of the set. Hence, such element must be excluded from parallel flipping. Therefore, in a generalized case, the relation between the elements of set 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , must be established to determine which elements in set 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , can be flipped in parallel.

The nth error term is associated with nth hard decision bit. The column weight of the parity check matrix, H, can be used to determine the number of check nodes or the syndrome elements connected with a given error term or the hard decision bit. Hence, nth error term is associated with 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 n
                              
                           
                         number of syndrome 
                           
                              
                                 s
                              
                              
                                 m
                              
                           
                        , elements. To understand the co-relation between the elements of set of maximum error terms, 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , the relation between different error terms under different erroneous hard decision bit condition, must be considered. The relation can be developed by using the geometric properties of the parity check matrix, like row and column weight related with specific error conditions.

Let eth, 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th hard decision bits be erroneous in 
                           
                              
                                 z
                              
                              
                                 n
                              
                           
                        . Each erroneous hard decision bit will produce some non-zero syndrome values in the check node step of IRRWBF. For the ith iteration, the set of check node with non-zero syndrome values connected with one or more erroneous hard decision bit amongst eth, 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th hard decision bit, be given as 
                           C
                           (
                           e
                           )
                        , 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                         and 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        , respectively. Similarly, let the set of check nodes connected only to eth, 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th hard decision bits be given as 
                           
                              
                                 C
                              
                              
                                 ′
                              
                           
                           (
                           e
                           )
                        , 
                           
                              
                                 C
                              
                              
                                 ′
                              
                           
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                         and 
                           
                              
                                 C
                              
                              
                                 ′
                              
                           
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        .

In the variable node step of IRRWBF decoding, the non-zero syndrome values combined with initialization vectors will produce positive values in some of the elements of error vector 
                           
                              
                                 E
                              
                              
                                 n
                              
                           
                        . The error terms associated with eth, 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th erroneous hard decision bits can be given as 
                           (
                           
                              
                                 E
                              
                              
                                 e
                              
                           
                           )
                        th, 
                           (
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           )
                        th elements of error vector 
                           
                              
                                 E
                              
                              
                                 n
                              
                           
                        . For simplicity, it can be assumed that 
                           (
                           
                              
                                 E
                              
                              
                                 e
                              
                           
                           )
                           
                              th
                           
                           >
                           (
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           )
                           
                              th
                           
                           >
                           (
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           )
                           
                              th
                           
                        . Hence, 
                           (
                           
                              
                                 E
                              
                              
                                 e
                              
                           
                           )
                        th, 
                           (
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           )
                        th are same as 
                           
                              
                                 E
                              
                              
                                 e
                                 ,
                                 1
                              
                           
                        , 
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 2
                              
                           
                         and 
                           
                              
                                 E
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                                 ,
                                 3
                              
                           
                         in the set 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        .

For the ith iteration, let eth, 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th erroneous hard decision bits be associated with 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                         and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         non-zero syndrome values in, 
                           
                              
                                 s
                              
                              
                                 m
                              
                              
                                 i
                              
                           
                        . Let number of check nodes connected to all three erroneous hard decision bit, eth, 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th hard decision bit be given as 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        . Let number of check nodes connected only to eth and 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and not to 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th, be given as 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        . Similarly, the nodes connected only to 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                           
                              th
                           
                           /
                           e
                           
                              th
                           
                         and 
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        th, will be given as 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           /
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        . Let the number of check nodes connected only to a single erroneous node be given as 
                           
                              
                                 W
                              
                              
                                 
                                    
                                       c
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 e
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 
                                    
                                       c
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                         and 
                           
                              
                                 W
                              
                              
                                 
                                    
                                       c
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        .

The check node computations are modulo-2 sum or XOR operation between the input elements. For a correct code word, the check nodes always evaluates to zero after XOR operation. In XOR operation even number of non-zero inputs evaluates to zero output. Hence, if the even numbers of inputs for any check node computations are erroneous, the final check node output will remain zero which is same as original. In other words, the check nodes connected to even numbers of erroneous bits will remain zero, while those connected to odd numbers of erroneous bits will be non-zero. Check nodes corresponding to 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        , also corresponds to check nodes connected to even numbers of erroneous bits and hence, will remain zero. On the other hand, check nodes corresponding to 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         also corresponds to check nodes connected to odd numbers of erroneous bits and hence, will become non-zero. The check nodes connected only to a single erroneous node will also be non-zero. Let 
                           
                              
                                 ϕ
                              
                              
                                 x
                              
                           
                         be the number of check nodes connected only to x number of erroneous bits. Hence, the number of check nodes connected only to 1 erroneous bit is given as
                           
                              (3)
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       W
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       e
                                    
                                 
                                 +
                                 
                                    
                                       W
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       W
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                              
                           
                         where,
                           
                              (4.a)
                              
                                 
                                    
                                       W
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       e
                                    
                                 
                                 =
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4.b)
                              
                                 
                                    
                                       W
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                       ∩
                                       e
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4.c)
                              
                                 
                                    
                                       W
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                       ∩
                                       e
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                              
                           
                        
                     

However, since 
                           C
                           (
                           e
                           )
                           ∩
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                           =
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                           ∩
                           C
                           (
                           e
                           )
                        , 
                           C
                           (
                           e
                           )
                           ∩
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                           =
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                           ∩
                           C
                           (
                           e
                           )
                         and 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                           ∩
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                           =
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                           ∩
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        , we have 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           =
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 e
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           =
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                                 ∩
                                 e
                              
                           
                         and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           =
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        . Hence, (3), can be re-written as:

number of check nodes connected to a single erroneous node only, 
                           
                              
                                 φ
                              
                              
                                 1
                              
                           
                        , is given as
                           
                              (5)
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    −
                                    2
                                    ×
                                    (
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    )
                                    −
                                    3
                                    ×
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    )
                                 
                              
                           
                        
                     

number of check nodes connected to all three erroneous nodes, 
                           
                              
                                 ϕ
                              
                              
                                 3
                              
                           
                        , is given as
                           
                              (6)
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       3
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                                 )
                              
                           
                        
                     

Based on the parity check matrix geometry, let 
                           
                              
                                 U
                              
                              
                                 y
                              
                           
                         be an estimate of the number of unsatisfied check nodes or the non-zero syndrome bits because of the y number of erroneous hard decision bits. Hence, estimated number of un-satisfied check nodes (3 erroneous hard decision bits), 
                           
                              
                                 U
                              
                              
                                 3
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       U
                                    
                                    
                                       3
                                    
                                 
                                 =
                                 
                                    
                                       ϕ
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       ϕ
                                    
                                    
                                       3
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    −
                                    2
                                    ×
                                    (
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                          ,
                                          e
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ′
                                             
                                          
                                          ∩
                                          
                                             
                                                e
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                    )
                                    )
                                 
                              
                           
                        
                     

LDPC codes are commonly defined by the Tanner graph, where the girth is defined as the length of smallest cycle in the graph. The relation between the decoding error performance and the girth of parity check matrix has been well established in the existing literature [1–7,19–22]. In [1–7,19–22], it was shown that for good decoding performance, the LDPC parity check matrices must be free from cycles of length 4. In other words, any two given columns cannot have more than one common non-zero element. Hence, if either of 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         or 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         is non-zero, 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         will become zero. Similarly, if 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         is non-zero, 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         will become zero. It can also be seen that the maximum value of 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         is 1.

Let only two hard decision bits, eth and 
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        th be erroneous. Hence, 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                         can be assumed as empty set and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        , and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                         will become zero. Therefore, it can be shown that the estimated number of un-satisfied check nodes for two erroneous hard decision bits can be given as
                           
                              (8)
                              
                                 
                                    
                                       U
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                    
                                 
                                 +
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 −
                                 2
                                 ×
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                       ∩
                                       
                                          
                                             e
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 )
                              
                           
                        
                     

Similarly, the estimated number of un-satisfied check node for single erroneous hard decision bit, eth, can be given as
                           
                              (9)
                              
                                 
                                    
                                       U
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       W
                                    
                                    
                                       c
                                       ,
                                       e
                                    
                                 
                              
                           
                        
                     

In Section 3.1, it was concluded that if all the elements of set of largest error terms, 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , are independent of each other, then all the p elements of 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                        , can be flipped in parallel. In other words, it can be concluded that a set of p un-related erroneous hard decision bits can be flipped in parallel. Further, in previous section, the relation between the number of unsatisfied check nodes and the number of erroneous bits was established using (7), (8) and (9). Conversely, this relation can be used to determine the number of erroneous hard decision bits which can be flipped in parallel.

Based on the received vector, r, let the actual number of unsatisfied check nodes (the number of non-zero check nodes) be given by 
                           
                              
                                 W
                              
                              
                                 u
                              
                           
                        . If the actual number of unsatisfied check nodes, 
                           
                              
                                 W
                              
                              
                                 u
                              
                           
                         is equal to the estimated number of unsatisfied check nodes, 
                           
                              
                                 U
                              
                              
                                 1
                              
                           
                        , using (9) it can be conclude that, there is only one erroneous bit or 
                           p
                           =
                           1
                        . Hence, with only one erroneous hard decision bit, flipping only the first element in set 
                           
                              
                                 z
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                         will reduce the syndrome to all zero vector and produce the corrected codeword. In this case, the decision step is identical to the original IRRWBF decoding method.

If 
                           
                              
                                 W
                              
                              
                                 u
                              
                           
                           ≠
                           
                              
                                 U
                              
                              
                                 1
                              
                           
                        , using (7) and (8), it can assumed that there are more than one erroneous hard decision bits. If 
                           
                              
                                 W
                              
                              
                                 u
                              
                           
                         (actual value)
                           =
                           
                              
                                 U
                              
                              
                                 2
                              
                           
                         (estimated value), using (8), it can be concluded that 
                           p
                           =
                           2
                        . Similarly, if 
                           
                              
                                 W
                              
                              
                                 u
                              
                           
                         (actual value)
                           =
                           
                              
                                 U
                              
                              
                                 3
                              
                           
                         (estimated value), using (7), it can be concluded that 
                           p
                           =
                           3
                        . If 
                           
                              
                                 W
                              
                              
                                 u
                              
                           
                         (actual value)
                           ≠
                           
                              
                                 U
                              
                              
                                 1
                              
                           
                         or 
                           
                              
                                 U
                              
                              
                                 2
                              
                           
                         or 
                           
                              
                                 U
                              
                              
                                 3
                              
                           
                         (estimated value), it can be assumed that there are more than three erroneous bits, and in this case, it can be assumed that 
                           p
                           =
                           3
                        . The hard decision bits associated with the p largest error terms can be flipped in parallel, which will reduce the syndrome to a vector with all zero elements, and produce the corrected codeword.

From the above discussion, it can be concluded that for small SNR values the number of erroneous bits will be large and the proposed decoding method will flip more number of bits in parallel similar to existing parallel bit flipping decoding methods. Due to improvement in SNR, the number of erroneous bits will decrease and the proposed decoding method will flip smaller number of bits eventually flipping just one bit per iteration similar to existing serial IRRWBF decoding method. Hence, in a way the proposed decoding method is a “Hybrid” of parallel and serial bit flipping decoding. Fig. 1
                         shows the steps performed in the proposed HWBF bit flipping algorithm. Based on the relations developed between the number of erroneous hard-decision bits and the unsatisfied check nodes (actual and estimated), the proposed scheme can detect and correct a maximum of 3 erreneous hard decision bits in an iteration. Actual number of bits flipped and correct in parallel is determined by the relation between the estimated and actual number of unsatisfied check nodes.

The proposed HWBF decoding comprises of initialization, check node, variable node and decision step. The initialization step is performed once and requires 
                           M
                           
                              
                                 W
                              
                              
                                 r
                              
                           
                         computations. The check node step is performed every iteration and requires 
                           M
                           
                              
                                 W
                              
                              
                                 r
                              
                           
                         computations in first iteration and requires 
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                         operations in each iteration thereafter. The variable node is also performed every iteration and requires 
                           N
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                         computations in first iteration and requires 
                           
                              
                                 W
                              
                              
                                 r
                              
                           
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                         operations in each iteration thereafter. The proposed HWBF decoding computes the largest error term in the decision step.

Therefore, in proposed HWBF decoding, the total number of operations required till decision step when only one largest error term is calculated, is given as
                           
                              
                                 
                                    
                                       O
                                    
                                    
                                       p
                                    
                                 
                                 =
                                 
                                    [
                                    2
                                    M
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    +
                                    N
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    N
                                    i
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    (
                                    i
                                    −
                                    1
                                    )
                                    (
                                    1
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    )
                                    ]
                                 
                              
                           
                        
                     

Since, 
                           M
                           
                              
                                 W
                              
                              
                                 r
                              
                           
                           =
                           N
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                        ; and in general 
                           i
                           ≫
                           1
                        ; and 
                           
                              
                                 W
                              
                              
                                 r
                              
                           
                           ≫
                           1
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       O
                                    
                                    
                                       p
                                    
                                 
                                 =
                                 
                                    [
                                    3
                                    N
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    i
                                    (
                                    N
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    )
                                    ]
                                 
                              
                           
                        
                     

Using the most significant digit (MSD) sorting-based methods, the next two largest error terms can be determined with a maximum of N operations. Hence, the construction of 
                           
                              
                                 E
                              
                              
                                 n
                                 ,
                                 
                                    max
                                 
                              
                           
                         with three elements will require additional N computations. The computation of 
                           
                              
                                 U
                              
                              
                                 1
                              
                           
                        , 
                           
                              
                                 U
                              
                              
                                 2
                              
                           
                        , and 
                           
                              
                                 U
                              
                              
                                 3
                              
                           
                         requires the computation of 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        , 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                                 ∩
                                 e
                              
                           
                        , 
                           C
                           (
                           e
                           ∩
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        , 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           ∩
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        , and 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           ∩
                           e
                           )
                        . For analytical purposes, it can be assumed that on an average the column weight is 
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                         and 
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 e
                              
                           
                           =
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           =
                           
                              
                                 W
                              
                              
                                 c
                                 ,
                                 
                                    
                                       e
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           ≈
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                        . 
                           C
                           (
                           e
                           ∩
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                         is computed by comparing two sets of 
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                         elements and, hence, will require 
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                         comparison operations. Therefore, the computation of 
                           C
                           (
                           e
                           ∩
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           )
                        , 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ′
                              
                           
                           ∩
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           )
                        , and 
                           C
                           (
                           
                              
                                 e
                              
                              
                                 ″
                              
                           
                           ∩
                           e
                           )
                         requires a total of 
                           3
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                         comparison operations. The computation of 
                           
                              
                                 U
                              
                              
                                 1
                              
                           
                        , 
                           
                              
                                 U
                              
                              
                                 2
                              
                           
                        , and 
                           
                              
                                 U
                              
                              
                                 3
                              
                           
                         requires six addition and two subtraction operations. Therefore, the total number of operations required in the proposed algorithm, 
                           
                              
                                 O
                              
                              
                                 p
                              
                           
                        , is given by
                           
                              (11)
                              
                                 
                                    
                                       
                                          O
                                       
                                       
                                          p
                                       
                                    
                                    =
                                    
                                       [
                                       3
                                       N
                                       
                                          
                                             W
                                          
                                          
                                             c
                                          
                                       
                                       +
                                       i
                                       (
                                       N
                                       +
                                       
                                          
                                             W
                                          
                                          
                                             c
                                          
                                       
                                       
                                          
                                             W
                                          
                                          
                                             r
                                          
                                       
                                       )
                                       ]
                                    
                                    +
                                    (
                                    N
                                    +
                                    3
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    8
                                    )
                                    (
                                    i
                                    )
                                 
                              
                              
                                 
                                    
                                       
                                          O
                                       
                                       
                                          p
                                       
                                    
                                    =
                                    
                                       [
                                       3
                                       N
                                       
                                          
                                             W
                                          
                                          
                                             c
                                          
                                       
                                       +
                                       i
                                       (
                                       2
                                       N
                                       +
                                       
                                          
                                             W
                                          
                                          
                                             c
                                          
                                       
                                       
                                          
                                             W
                                          
                                          
                                             r
                                          
                                       
                                       +
                                       3
                                       
                                          
                                             W
                                          
                                          
                                             c
                                          
                                       
                                       +
                                       8
                                       )
                                       ]
                                    
                                 
                              
                           
                        
                     

The number of bits flipped in each iteration dictates the number of iterations taken for convergence and the actual decoding complexity. Therefore, the total number of computations is equalized with respect to the number of bits flipped in each iteration. For the proposed decoding scheme, three bits are flipped per iteration in the best case scenario, and one bit is flipped per iteration in the worst case scenario. Hence, for correcting i erroneous bits, 
                           i
                           /
                           3
                         and i decoding iterations are required in the best and worst case scenario respectively. On an average, 
                           2
                           ×
                           i
                           /
                           3
                         decoding iterations are required for correcting i erroneous bits. Let the number of operations required for correcting μ number of erroneous bits in proposed HWBF decoding be given by 
                           
                              
                                 O
                              
                              
                                 p
                              
                           
                           (
                           μ
                           )
                         respectively. Therefore, from (11)
                        
                           
                              (12)
                              
                                 
                                    
                                       O
                                    
                                    
                                       p
                                    
                                 
                                 (
                                 μ
                                 )
                                 =
                                 
                                    [
                                    3
                                    N
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    (
                                    2
                                    i
                                    /
                                    3
                                    )
                                    (
                                    2
                                    N
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    +
                                    3
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    8
                                    )
                                    ]
                                 
                              
                           
                        
                     

For i iterations, the total number of computations, 
                           
                              
                                 O
                              
                              
                                 c
                              
                           
                        , in IRRWBF decoding is given by [23,24]
                        
                           
                              
                                 
                                    
                                       O
                                    
                                    
                                       c
                                    
                                 
                                 =
                                 
                                    [
                                    2
                                    M
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    +
                                    N
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    N
                                    i
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    (
                                    i
                                    −
                                    1
                                    )
                                    (
                                    1
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    )
                                    ]
                                 
                              
                           
                        
                     

In general, 
                           i
                           ≫
                           1
                         and 
                           
                              
                                 W
                              
                              
                                 r
                              
                           
                           ≫
                           1
                        ; therefore [22,23],
                           
                              (13)
                              
                                 
                                    
                                       O
                                    
                                    
                                       c
                                    
                                 
                                 =
                                 
                                    [
                                    3
                                    N
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    i
                                    (
                                    N
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    )
                                    ]
                                 
                              
                           
                        
                     

In the IRRWBF decoding algorithm, i decoding iterations will be required to correct i erroneous bits. Let the number of operations required for correcting μ number of erroneous bits in IRRWBF be given by 
                           
                              
                                 O
                              
                              
                                 c
                              
                           
                           (
                           μ
                           )
                        . Therefore, from (13)
                        
                           
                              (14)
                              
                                 
                                    
                                       O
                                    
                                    
                                       c
                                    
                                 
                                 (
                                 μ
                                 )
                                 =
                                 
                                    
                                       O
                                    
                                    
                                       c
                                    
                                 
                                 =
                                 
                                    [
                                    3
                                    N
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    i
                                    (
                                    N
                                    +
                                    
                                       
                                          W
                                       
                                       
                                          c
                                       
                                    
                                    
                                       
                                          W
                                       
                                       
                                          r
                                       
                                    
                                    )
                                    ]
                                 
                              
                           
                        
                     

Using (12) and (14), it is evident that when compared with the IRRWBF decoding method, the proposed HWBF decoding requires 
                           1
                           /
                           3
                           ×
                           [
                           N
                           +
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                           (
                           
                              
                                 W
                              
                              
                                 r
                              
                           
                           +
                           1
                           )
                           +
                           16
                           ]
                         more operations per iteration. However, the small increase in computation complexity as compared to serial IRRWBF, significantly reduces the number of decoding iterations and the total decoding time in proposed HWBF decoding.

The decision step in the parallel BF decoding methods consists of finding the error terms above a pre-defined threshold. To find the number of bits flipped both the modified improved weighed bit-flipping algorithm, MIWBF [12] and IPWBF [13] require M additions and one real division (to calculate p), and [
                           (
                           p
                           −
                           1
                           )
                           N
                           −
                           p
                           (
                           p
                           +
                           1
                           )
                           /
                           2
                           +
                           1
                        ] more real comparisons for each iteration when compared with the standard BF algorithm. Here, M is the number of rows in H and 
                           M
                           =
                           N
                           −
                           K
                        ; K is the number of message bits; and p is the number of bits flipped in parallel. To flip three bits in parallel, i.e. 
                           p
                           =
                           3
                        , MIWBF and IPWBF requires [
                           3
                           N
                           −
                           K
                           −
                           4
                        ] additional computations. However, as shown earlier, the HWBF decoding requires only [
                           N
                           +
                           3
                           
                              
                                 W
                              
                              
                                 c
                              
                           
                           +
                           8
                        ] additional computations as compared to IRRWBF decoding. In [6] the relation between Min–Sum (MS) decoding and serial and parallel BF decoding is presented. In [7], it is shown that the parallel BF decoding has smaller computation complexity as compared to MS decoding. Fast Weighted Bit Flipping Algorithm (FWBF) [17] uses the same decoding procedure as MIWBF and uses additional operations to achieve multiple bit flipping for reducing the number of iterations. Since, the number of computations is proposed HWBF decoding is less than MIWBF, it can be concluded that proposed HWBF decoding requires lesser number of computations as compared to FWBF decoding. Hence, for the same number of decoding iterations, the number of operations required in the HWBF decoding is less than any parallel decoding method.

@&#RESULTS@&#

Software decoders for IRRWBF and proposed HWBF were programmed and 10 000 samples were used for result analysis. In this paper, we define LDPC codes by (
                        N
                        ,
                        
                           
                              c
                           
                           
                              r
                           
                        
                     ) specified in IEEE 802.11n standard [18]. Table 3
                      shows the specification of parity check matrices that were used for result analysis. The results presented in this sections are for 
                        N
                        =
                        1944
                     , 
                        
                           
                              c
                           
                           
                              r
                           
                        
                        =
                        1
                        /
                        2
                      and 
                        
                           
                              W
                           
                           
                              c
                           
                        
                        =
                        6
                     . This has been done to avoid redundancy in result, as similar results were obtained by using other values of code length, code rate and weight for LDPC codes specified in IEEE 802.16e standard.


                        Fig. 2
                         shows comparison of number of iterations required in proposed and original IRRWBF decoding algorithm, as the signal-to-noise ratio, SNR, is varied for different values of maximum decoding iteration, 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        . For low SNR value, the proposed as well as original algorithms fail to converge and as a result same number of iterations is required. For intermediate SNR value, the proposed algorithm requires less number of decoding iterations to converge. For high SNR value, the number of bits flipped in parallel is reduced to avoid flipping the non-erroneous hard decision bits. Eventually, as the number of erroneous bits reduces to one, the proposed HWBF, as well as the IRRWBF decoding algorithm requires same number of decoding iterations.


                        Fig. 3
                         shows the percent reduction in number of decoding iterations required for convergence in IRRWBF and proposed HWBF decoding, as the SNR is varied for different values of 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        .

For low SNR values, both the decoding algorithms fail to converge. As the SNR increases, based on maximum decoder iteration the percent reduction decoding iteration increases. This shows that the proposed HWBF decoding converges in lesser number of decoding iterations as compared to IRRWBF. At high values of SNR, the number of decoding iterations required in both the algorithms becomes almost constant. In this case, if the codeword has up to three error bits, the proposed HWBF decoding will require single decoding iteration while the IRRWBF decoding may require up to three decoding iterations.


                        Fig. 4
                         shows the number of bits corrected in IRRWBF and HWBF, as the SNR is varied for different values of 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        . For the same value of 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        , the proposed HWBF decoding method corrected more number of bits than the IRRWBF decoding.

For any given erroneous codeword, the number of bits that must be flipped is constant. In IRRWBF decoding, only one bit is flipped every single iteration, whereas, in proposed HWBF algorithm the number of bits flipped varies according to the relation between the erroneous bits. To compare the two algorithms, the number of bits flipped must be normalized based on number of decoding iteration. Fig. 5
                         shows the number of bits corrected per iteration in IRRWBF and proposed HWBF decoding.

When the proposed HWBF decoding is used, more than two bits are corrected in every iteration for all the SNR values. Fig. 6
                         shows the percent increase in number of bits flipped in parallel when proposed HWBF decoding is used. As the SNR value increases, the number of erroneous bits decreases and the number of iterations required for convergence in both the algorithms become equal. Hence, the percent increase in number of bits corrected decreases and saturates at high value of SNR.

As a measure of decoding complexity, the decoding time for convergence in IRRWBF and proposed HWBF is computed for various values of 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        . Fig. 7
                         shows decoding time required for convergence in proposed HWBF decoding and IRRWBF decoding.


                        Fig. 8
                         shows the percent reduction in decoding time when the proposed HWBF decoding is compared to IRRWBF decoding.

For low SNR value, the proposed as well as original algorithms require same number of iterations. Hence, the decoding time is same for both the algorithms. For intermediate SNR value, the proposed algorithm requires less number of decoding iterations to converge, thereby, requiring smaller decoding time. Hence, the percent reduction increases with increase in SNR value. For high SNR value, the proposed HWBF as well as the IRRWBF decoding algorithm requires same number of decoding iterations and decoding time. However, for all the SNR values, the decoding time for the proposed HWBF decoding is smaller than the IRRWBF decoding. Hence, it can be concluded that for the same number of iterations, the number of computation in proposed HWBF decoding is smaller as compared to IRRWBF decoding. The percent reduction in decoding time saturates at about 40 percent. However, for most of the SNR values the percent reduction in decoding time is more than 50 percent.


                        Fig. 9
                         shows the decoding performance of the proposed HWBF and some of the existing serial/parallel bit flipping decoding methods. For the same 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        , the BER performance of the proposed HWBF decoding is better than the IRRWBF decoding. The proposed HWBF decoding achieves same BER performance as the IRRWBF in approximately 1/3rd iterations. Fig. 9 also shows that the proposed HWBF decoding has nearly the same BER performance as Parallel Weighted Bit-Flipping decoding (PWBF) and the Improved Parallel Weighted Bit-Flipping decoding (IPWBF) methods [11,13]. PWBF decoding required the prior knowledge of SNR for adjusting the number of bits flipped in different iterations. Hence, PWBF will require more computations than the proposed HWBF decoding. Similarly, the IPWBF is more complex and computation extensive than the proposed HWBF decoding. Hence, the proposed HWBF decoding can achieve similar BER performance than existing systems with lesser decoding complexity [11–16]. In comparison to FWBF [17], the proposed scheme can achieve the same decoding performance with lesser number of computations per iteration.


                        Fig. 10
                         shows the number of iterations required for convergence in proposed HWBF decoding, and some of the existing serial/parallel bit flipping decoding methods like IRRWBF, PWBF and IPWBF.

For the same 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        , it can be seen that the proposed HWBF decoding requires almost same number of iterations as the IPWBF and requires less number of iterations as compared to PWBF. Hence, the proposed HWBF decoding converge in almost same number of decoding iteration as existing parallel bit flipping algorithms with lesser decoding complexity.


                        Fig. 11
                         and Fig. 12
                         show the BER performance of proposed HWBF, IRRWBF and normalized min-sum (NMS) decoding method for Finite geometry (FG)-LDPC (4095, 3367) code and FG-LDPC (1023, 781) code respectively. For the same 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        , the BER performance of the proposed HWBF decoding is better than the IRRWBF decoding. In comparison to NMS decoding, the BER performance of proposed HWBF is degraded by less than 0.5 dB with higher value of 
                           
                              
                                 i
                              
                              
                                 m
                                 x
                              
                           
                        .


                        Fig. 13
                         shows the number of iterations required for convergence in proposed HWBF, IRRWBF and NMS decoding method for FG-LDPC codes. For small value of SNR the proposed HWBF, IRRWBF and NMS fail to converge and hence, requires large number of decoding iterations. As the SNR increases, the number of decoding iterations required for convergence reduces significantly in proposed HWBF decoding. Finally, for high SNR values, proposed HWBF decoding requires slightly higher number of decoding iterations for convergence than NMS decoding and requires smaller number of decoding iterations for convergence as compared to IRRWBF decoding.

It is shown in [14] that different parallel bit flipping algorithms require twice the number of iterations as compared to NMS decoding. In [14] a rough estimate of number of additions required in various decoding algorithms is also presented. Considering that NMS required half the number of average decoding iterations it can still be shown that the number of computations required in NMS are far more than those required for various parallel and serial bit flipping algorithms. Hence, even with smaller number of decoding iteration, NMS decoding requires larger time for convergence as compared to parallel and serial bit flipping algorithms due to higher computation complexity. If some form of parallel architecture is designed to reduce decoding time in NMS decoding, the design complexity and resource utilization increases significantly as compared to parallel and serial bit flipping algorithms.


                        Fig. 14
                         shows decoding time required for convergence in proposed HWBF, IRRWBF and NMS decoding method for FG-LDPC codes. Although the proposed HWBF decoding requires more than twice the number of decoding iterations for convergence than NMS decoding, the total decoding time in proposed HWBF decoding is much smaller as compared to both IRRWBF and NMS decoding methods.

Based on the aforementioned simulation results for BER performance, decoding iteration and total decoding time required for convergence it can be concluded that the proposed HWBF decoding can achieve reasonable error correcting performance with reduced decoding complexity and smaller decoding time as compared to various existing decoding methods.

@&#CONCLUSION@&#

In this paper, Hybrid Weighted Bit Flipping decoding method for LDPC codes is presented. It is shown that based on the relation between largest error terms, at least three erroneous bits can be flipped in parallel. The actual number of bits flipped depends on the signal-to-noise ratio of incoming data which dictates the relation between the error terms. It is shown that as compared to existing serial bit flipping methods, the proposed algorithm required less number of decoding iterations for convergence. Simulations show that the proposed hybrid weighted bit flipping algorithm can achieve same decoding performance as existing parallel bit flipping decoding schemes with less decoding complexity. The reduction in number of iterations and reduced decoding times, makes the proposed HWBF decoding an important choice for implementation in energy sensitive mobile platforms.

@&#ACKNOWLEDGEMENT@&#

This work is supported by the R&D program of School of Information and Communication Engineering, Sungkyunkwan University, Suwon, 440-746, South Korea.

The steps involved in standard weighted bit flipping (WBF) [7], are as follows:

Step 1: Calculate the syndrom vector, 
                        
                           
                              s
                           
                           
                              m
                           
                        
                     , using the hard decision vector, z. If 
                        
                           
                              s
                           
                           
                              m
                           
                        
                        =
                        0
                     , z is a valid codeword, otherwise proceed to step 2.
                        
                           (A.1)
                           
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                              
                              =
                              
                                 ∑
                                 
                                    n
                                    =
                                    1
                                 
                                 N
                              
                              
                                 
                                    z
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    H
                                 
                                 
                                    m
                                    n
                                 
                              
                           
                        
                     
                  

Step 2: Compute the most unreliable bit associated with each check node by
                        
                           (A.2)
                           
                              
                                 
                                    y
                                 
                                 
                                    m
                                 
                                 
                                    min
                                 
                              
                              =
                              
                                 min
                                 
                                    {
                                    n
                                    :
                                    n
                                    ∈
                                    N
                                    (
                                    m
                                    )
                                    }
                                 
                              
                              |
                              
                                 
                                    y
                                 
                                 
                                    n
                                 
                              
                              |
                           
                        
                     
                  

Step 3: Variable node: Compute error term for each message.
                        
                           (A.3)
                           
                              
                                 
                                    E
                                 
                                 
                                    n
                                 
                              
                              =
                              
                                 ∑
                                 
                                    m
                                    ∈
                                    M
                                    (
                                    n
                                    )
                                 
                              
                              (
                              2
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                              
                              −
                              1
                              )
                              
                                 
                                    y
                                 
                                 
                                    m
                                 
                                 
                                    min
                                 
                              
                           
                        
                     
                  

Step 4: Decision: Flip the hard decision bit associated with the highest 
                        
                           
                              E
                           
                           
                              n
                           
                        
                      value.

Flip the bit 
                        
                           
                              z
                           
                           
                              nf
                           
                        
                     ; 
                        n
                        f
                        =
                        
                           arg
                        
                        
                           
                              max
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    ′
                                 
                              
                           
                        
                        
                        
                           
                              E
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    ′
                                 
                              
                           
                        
                     .

Step 5: Compute the syndrome and repeat steps 1 to 4 till a valid code word is found or the number of iterations reach a maximum value.

The steps involved in improved weighted bit flipping (IWBF) [8], are as follows:

Steps 1 and 2 of improved weighted bit flipping (IWBF) algorithm is same as those in WBF algorithm.

Step 3: Using the weighting factor α, to include message node information while calculating error. The message bits with higher absolute values must lead to smaller error terms.
                        
                           (B.1)
                           
                              
                                 
                                    E
                                 
                                 
                                    n
                                 
                              
                              =
                              
                                 ∑
                                 
                                    m
                                    ∈
                                    M
                                    (
                                    n
                                    )
                                 
                              
                              (
                              2
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                              
                              −
                              1
                              )
                              
                                 
                                    y
                                 
                                 
                                    m
                                 
                                 
                                    min
                                 
                              
                              −
                              α
                              ⋅
                              |
                              
                                 
                                    y
                                 
                                 
                                    n
                                 
                              
                              |
                           
                        
                     
                  

The error term, 
                        
                           
                              E
                           
                           
                              n
                           
                        
                     , calculated using (B.1) will reduce the flipping probability of message bit with higher absolute value; hence, a more accurate bit flipping decision can be made.

Step 4 and Step 5 are same as those in WBF.

The steps involved in reliability ratio based weighted bit flipping (RRWBF) [9], are as follows:

Step 1: Same as step 1 in WBF, calculate the syndrome vector, 
                        
                           
                              s
                           
                           
                              m
                           
                        
                     .

Step 2: Calculate reliability ratio, 
                        
                           
                              R
                           
                           
                              m
                              n
                           
                        
                     ,
                        
                           (C.1)
                           
                              
                                 
                                    R
                                 
                                 
                                    m
                                    n
                                 
                              
                              =
                              β
                              
                                 
                                    |
                                    
                                       
                                          y
                                       
                                       
                                          n
                                       
                                    
                                    |
                                 
                                 
                                    |
                                    
                                       
                                          y
                                       
                                       
                                          m
                                       
                                       
                                          max
                                       
                                    
                                    |
                                 
                              
                              ;
                              
                              
                                 
                                    y
                                 
                                 
                                    m
                                 
                                 
                                    max
                                 
                              
                              =
                              
                                 max
                                 
                                    n
                                    ∈
                                    N
                                    (
                                    m
                                    )
                                 
                              
                              |
                              
                                 
                                    y
                                 
                                 
                                    n
                                 
                              
                              |
                           
                        
                      
                     β is the normalization factor to keep
                        
                           (C.2)
                           
                              
                                 ∑
                                 
                                    n
                                    ∈
                                    V
                                    (
                                    m
                                    )
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    m
                                    n
                                 
                              
                              =
                              1
                           
                        
                     
                  

Step 3: Variable node: Compute error term for each message
                        
                           (C.3)
                           
                              
                                 
                                    E
                                 
                                 
                                    n
                                 
                              
                              =
                              
                                 ∑
                                 
                                    m
                                    ∈
                                    M
                                    (
                                    n
                                    )
                                 
                              
                              
                                 (
                                 (
                                 2
                                 
                                    
                                       s
                                    
                                    
                                       m
                                    
                                 
                                 −
                                 1
                                 )
                                 /
                                 
                                    
                                       R
                                    
                                    
                                       m
                                       n
                                    
                                 
                                 )
                              
                           
                        
                     
                  

Step 4: Decision: Flip the hard decision bit associated with the highest 
                        
                           
                              E
                           
                           
                              n
                           
                        
                      value.

Flip the bit 
                        
                           
                              z
                           
                           
                              nf
                           
                        
                     ; 
                        n
                        f
                        =
                        
                           arg
                        
                        
                           
                              max
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    ′
                                 
                              
                           
                        
                        
                        
                           
                              E
                           
                           
                              
                                 
                                    n
                                 
                                 
                                    ′
                                 
                              
                           
                        
                     
                  

Step 5: Compute the syndrome and repeat steps 1 to 4 till a valid code word is found or the number of iterations reach a maximum value.

The IRRWBF algorithm [10] separates the decoding process into four steps: initialization, check node, variable node, and decision steps [10]. The operations performed at each stage in ith iteration are shown in Table D-1
                     . The initialization step is performed only once and, hence, it is independent of iteration number.

In variable node step, the error term for each received message element is computed. The received vector consists of N elements and the set of their corresponding error terms is called as error vector.

@&#REFERENCES@&#

