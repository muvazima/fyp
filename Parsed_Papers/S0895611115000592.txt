@&#MAIN-TITLE@&#Texture analysis and classification in coherent anti-Stokes Raman scattering (CARS) microscopy images for automated detection of skin cancer

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           We perform automated classification of healthy and tumor areas in CARS images of BCC skin samples.


                        
                        
                           
                           The classification is based on texture features and uses the perceptron algorithm.


                        
                        
                           
                           The approach results in accurate classification with high specificity and sensitivity.


                        
                        
                           
                           We believe this is an important step towards automated tumor detection in CARS images.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

CARS

Image analysis

Texture analysis

Perceptron algorithm

@&#ABSTRACT@&#


               
               
                  Coherent anti-Stokes Raman scattering (CARS) microscopy is a powerful tool for fast label-free tissue imaging, which is promising for early medical diagnostics. To facilitate the diagnostic process, automatic image analysis algorithms, which are capable of extracting relevant features from the image content, are needed. In this contribution we perform an automated classification of healthy and tumor areas in CARS images of basal cell carcinoma (BCC) skin samples. The classification is based on extraction of texture features from image regions and subsequent classification of these regions into healthy and cancerous with a perceptron algorithm. The developed approach is capable of an accurate classification of texture types with high sensitivity and specificity, which is an important step towards an automated tumor detection procedure.
               
            

@&#INTRODUCTION@&#

Basal cell carcinoma (BCC) – which originate from basal cells – is the most frequent cancer in humans [1]. The diagnostics of this tumor can be highly complicated because of its diverse morphological manifestation [2]. Currently, the skin cancer is diagnosed – additionally to visual inspection – by a punch biopsy with subsequent histopathological analysis of H&E stained tissue sections [3,4]. This procedure is invasive, time-consuming and associated with high costs. However, early tumor detection is crucial for successful medical treatment and increase of survival rates [5].

Raman micro-spectroscopy [6–9] allows to visualize the molecular composition of tissue without the need for any external staining, which enables non-invasive high-resolution in vivo imaging. The use of a non-linear variant of Raman – e.g. coherent anti-Stokes Raman scattering (CARS) microscopy – allows to circumvent the problem of long acquisition time intrinsic to spontaneous Raman scattering [6] and hence enables real-time in-vivo tissue visualization [10,11]. Along with CARS, other nonlinear techniques such as two-photon-excited fluorescence (TPEF) [12] and second harmonic generation (SHG) [13–15] are reported in biomedical imaging. Moreover, the combination of these techniques – referred to as multimodal imaging – is also a powerful tool for label-free tissue investigation [16–18]. Different NLO microscopy techniques and their combination have been successfully applied for visualization of BCC [19–21], which is significant for the decrease of costs and facilitation of diagnostics of this skin cancer.

Manual analysis of the microscopy data is, however, time-consuming and often subjective, especially for the cases, when quantitative assessment of the sample is required (e.g. estimation of tumor size). Computerized evaluation and classification of tissue images can facilitate the disease diagnostics and is indispensable for screening [22]. A number of approaches has been developed towards automated tissue classification based on magnetic resonance [23–25], computed tomography [26,27] and ultrasound images [28]. Moreover, automatic algorithms have been proposed to analyze skin lesions in photographic images [29,30], and for breast cancer detection in histopathological images [31]. Automated image analysis in nonlinear optical microscopy is still in its infancy, because this technique is relatively new. E.g., several approaches have been recently published concerning automated analysis of CARS images. In particular, procedures for separation of CARS signal from non-resonant background have been developed [32,33]. Moreover, several methods for the extraction of cell nuclei from the CARS images have been proposed [34–36] along with an approach for the discrimination of lung carcinoma types based on the analysis of nuclei properties [37]. Automated detection of BCC lesions in histopathological images had been performed so far only based on Raman microscopy [38,39]. However, for automatized real-time label-free screening, a BCC recognition approach based on nonlinear optical microscopy techniques is needed.

In this contribution, we – for the first time – performed an automated classification of healthy and cancerous tissue patterns in CARS images of BCC, which is an initial step towards a computerized procedure for detection of BCC lesions in nonlinear optical microscopy images. This classification was based on the analysis of image texture in normal skin and tumor regions. In order to optimize the classification outcome, the first comprehensive test of various texture descriptors for CARS image classification was performed here. Moreover, an automatic feature selection framework was implemented to select the features that are optimal for a particular classification problem. The details of the image analysis and classification are discussed in Sections 2.2 and 2.3 after a brief description of the image acquisition procedure (Section 2.1). Then, the results of the texture classification are presented and discussed (Section 3).

@&#METHODOLOGY@&#

The texture analysis and classification were performed on CARS images of human basal cell carcinoma samples. The samples were provided by the Charité – Universitätsmedizin Berlin, Department of Dermatology, Venerology and Allergology and were used with the permission of the ethics committee. Diagnostics, pathological typing and grading of H&E stained parallel sections of the specimens was performed according to the current World Health Organization (WHO) Classification [41]. Frozen tissue sections were cut with a cryotome and dried on glass slides for further investigation with CARS microscopy.

CARS visualizes the spatial distribution of Raman-active molecular vibrations in a sample [42,43]. To obtain the CARS signal, the sample is simultaneously illuminated with two laser beams (pump and Stokes), the frequency difference of which should be equal to the frequency of the particular molecular vibration to be imaged. This leads to the selective excitation of this molecular vibration, which is probed by the pump beam, producing the anti-Stokes signal.

The setup used for the acquisition of CARS images used in this work was described in detail in [44]. The pump and Stokes beams’ wavelengths were tuned to match the symmetric CH2 stretch vibration at 2850cm−1, which corresponds to imaging the lipid distribution in the samples [45–48]. Single images and large area mosaics composed of individual images 450μm×450μm (i.e. 1024×1024pixel) were recorded with an imaging speed of 1.6μs/pixel and by averaging four times. The acquisition time accumulated to 15.7s per one single image. The diagnosis of the tissue samples along with a discussion on several acquisition parameters such as average power, peak irradiance and photodamage thresholds can be found in [49]. Five mosaics composed of 150–156 single images (15×10 and 13×12) were used in this work to analyze the texture and to recognize tumor areas.

Five texture classes were visually identified in the mosaic images (Fig. 1
                        ): (1) tumor region (Fig. 1D), (2) epidermis (stratum granulosum) (Fig. 1B), (3) dermis (Fig. 1A), (4) adipose tissue (Fig. 1E) and (5) background region (Fig. 1C) [40]. A comparison can be made with an H&E stained image of the tissue sample that clearly delineates the tumor area (see Fig. A.1). For each of the classes, 35 images of size 105×105pixels were cropped out, which have formed a dataset of 175 images. The dataset was split into training and testing sets which were used in a cross validation scheme (Section 2.3.3).

Texture is a regular repetition of a pattern or an element that describes the structure of an image [50]. In this work, we investigate the use of three different types of texture features for the classification of CARS images of BCC: grey-level co-occurrence matrices (GLCM), laws texture features and local binary patterns (LBP). In the following, the basic theory of these descriptors derivation is introduced together with the particular settings utilized in this work.

The grey level co-occurrence matrix (GLCM) [51] describes how often different combinations of grey levels occur in an image. Each entry of the GLCM P
                           
                              i,j
                            corresponds to the number of times a neighbor pixel with the grey value j occurs at the distance d and in direction θ from a reference pixel with the grey value i. The parameters d and θ can be selected arbitrarily. Thus, possible values for the direction parameter θ are illustrated in Fig. 2
                           . Usually, the GLCMs of opposing directions are summed up to obtain a symmetric matrix after which the matrix can be normalized so that the entries will be probabilities instead of counts. The distance d refers to the distance between the neighbor and reference pixel. In Fig. 2 this distance equals to one, however, larger distances can be chosen to describe textures of greater size.

The following three groups of measures can be extracted from GLCM: (I) contrast, (II) orderliness and (III) statistic measures.

(I) Contrast measures describe the degree of contrast between neighboring pixels. When an image is homogeneous, high probabilities are located along the diagonal of the GLCM, because there is no difference in grey values of the pixels along the diagonal. When the image contrast is high, the probabilities are concentrated far from the diagonal. The following measures describe image contrast:
                              
                                 (1)
                                 Contrast (CON):
                                       
                                          (1)
                                          
                                             CON
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             
                                                
                                                   (
                                                   i
                                                   −
                                                   j
                                                   )
                                                
                                                2
                                             
                                          
                                       
                                    
                                 

Dissimilarity (DIS):
                                       
                                          (2)
                                          
                                             DIS
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             |
                                             i
                                             −
                                             j
                                             |
                                          
                                       
                                    
                                 

Homogeneity (HOM):
                                       
                                          (3)
                                          
                                             HOM
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      P
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                   
                                                
                                                
                                                   1
                                                   +
                                                   
                                                      
                                                         (
                                                         i
                                                         −
                                                         j
                                                         )
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

(II) Orderliness measures how regularly the grey values are distributed:

Angular second moment (ASM):
                                       
                                          (4)
                                          
                                             ASM
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                                2
                                             
                                          
                                       
                                    
                                 

Energy:
                                       
                                          (5)
                                          
                                             Energy
                                             =
                                             
                                                ASM
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ,
                                                         j
                                                         =
                                                         0
                                                      
                                                      
                                                         N
                                                         −
                                                         1
                                                      
                                                   
                                                   
                                                      P
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Maximum probability (MAX): detects the largest P
                                    
                                       i,j
                                     value within the window.

Entropy (ENT):
                                       
                                          (6)
                                          
                                             ENT
                                             =
                                             −
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ln
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 

(III) Statistics group represents statistical measures derived from GLCM:

Mean:
                                       
                                          (7)
                                          
                                             
                                                
                                                   μ
                                                   i
                                                
                                             
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             i
                                             (
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             )
                                             ,
                                             
                                             
                                                
                                                   μ
                                                   j
                                                
                                             
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             j
                                             (
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             )
                                          
                                       
                                    
                                 

Variance:
                                       
                                          (8)
                                          
                                             
                                                
                                                   σ
                                                   i
                                                   2
                                                
                                             
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             
                                                
                                                   (
                                                   i
                                                   −
                                                   
                                                      μ
                                                      i
                                                   
                                                   )
                                                
                                                2
                                             
                                             ,
                                             
                                             
                                                
                                                   σ
                                                   j
                                                   2
                                                
                                             
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             
                                                
                                                   (
                                                   j
                                                   −
                                                   
                                                      μ
                                                      j
                                                   
                                                   )
                                                
                                                2
                                             
                                          
                                       
                                    
                                 

Standard deviation:
                                       
                                          (9)
                                          
                                             
                                                σ
                                                i
                                             
                                             =
                                             
                                                
                                                   
                                                      σ
                                                      i
                                                      2
                                                   
                                                
                                             
                                             ,
                                             
                                             
                                                σ
                                                j
                                             
                                             =
                                             
                                                
                                                   
                                                      σ
                                                      j
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Correlation (CORR):
                                       
                                          (10)
                                          
                                             CORR
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             
                                                P
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ·
                                             
                                                
                                                   (
                                                   i
                                                   −
                                                   
                                                      μ
                                                      i
                                                   
                                                   )
                                                   (
                                                   j
                                                   −
                                                   
                                                      μ
                                                      j
                                                   
                                                   )
                                                
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            σ
                                                            i
                                                            2
                                                         
                                                         )
                                                         (
                                                         
                                                            σ
                                                            j
                                                            2
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Three different distances (d
                           =1, d
                           =2 and d
                           =3 pixels) and three directions (horizontal, vertical and one of the diagonals) were used to compute GLCM in this study. For each combination of these parameters 11 texture measures were calculated. Hence, the number of texture descriptors derived from GLCM amounted to 3(distances)×3(directions)×11(measures)=99. The color depth of the images used for GLCM computation was reduced from 8 bit to 3 bit, which corresponds to 8 distinct grey levels and hence 8×8 GLCM. Such simplification decreases the computational costs, while retaining enough information to describe the relations between intensities of neighboring pixels.

Laws texture features [52] describe such texture properties as uniformity, density, regularity, roughness etc., and can be derived using kernels created from the following 1×3 vectors: L3=[1, 2, 1] for one dimensional averaging, E3=[−1, 0, 1] for edges and S3=[−1, 2, −1] for spots. Convolving these vectors with each other gives five 1×5 vectors:


                           
                              
                                 (11)
                                 
                                    
                                       
                                          
                                              Level
                                          
                                          
                                             L
                                             5
                                             =
                                          
                                          
                                             L
                                             3
                                             *
                                             L
                                             3
                                             =
                                          
                                          
                                          
                                             [
                                             1
                                             ,
                                             4
                                             ,
                                             6
                                             ,
                                             4
                                             ,
                                             1
                                             ]
                                          
                                       
                                       
                                          
                                              Edge
                                          
                                          
                                             E
                                             5
                                             =
                                          
                                          
                                             L
                                             3
                                             *
                                             E
                                             3
                                             =
                                          
                                          
                                          
                                             [
                                             −
                                             1
                                             ,
                                             −
                                             2
                                             ,
                                             0
                                             ,
                                             2
                                             ,
                                             1
                                             ]
                                          
                                       
                                       
                                          
                                              Spots
                                          
                                          
                                             S
                                             5
                                             =
                                          
                                          
                                             −
                                             E
                                             3
                                             *
                                             E
                                             3
                                             =
                                          
                                          
                                             L
                                             3
                                             *
                                             S
                                             3
                                             =
                                          
                                          
                                             [
                                             −
                                             1
                                             ,
                                             0
                                             ,
                                             2
                                             ,
                                             0
                                             ,
                                             −
                                             1
                                             ]
                                          
                                       
                                       
                                          
                                              Waves
                                          
                                          
                                             W
                                             5
                                             =
                                          
                                          
                                             −
                                             E
                                             3
                                             *
                                             S
                                             3
                                             =
                                          
                                          
                                          
                                             [
                                             −
                                             1
                                             ,
                                             2
                                             ,
                                             0
                                             ,
                                             −
                                             2
                                             ,
                                             1
                                             ]
                                          
                                       
                                       
                                          
                                              Ripples
                                          
                                          
                                             R
                                             5
                                             =
                                          
                                          
                                             S
                                             3
                                             *
                                             S
                                             3
                                             =
                                          
                                          
                                          
                                             [
                                             1
                                             ,
                                             −
                                             4
                                             ,
                                             6
                                             ,
                                             −
                                             4
                                             ,
                                             1
                                             ]
                                          
                                       
                                       
                                          
                                          
                                          
                                          
                                          
                                       
                                    
                                 
                              
                           
                        

From these 1×5 vectors, 25 5×5 Laws masks can be obtained by convolving each vertical vector with a horizontal one. The Laws masks are then convolved with the texture image resulting in texture energy metrics. Some of the descriptors can be combined giving rotational invariant texture energy measures, which reduces the number of descriptors from 25 to 14.

For each of the Laws texture energy measures, the following five statistics can be computed:
                              
                                 (1)
                                 Mean (μ):
                                       
                                          (12)
                                          
                                             μ
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      N
                                                   
                                                   
                                                      y
                                                      i
                                                   
                                                
                                                N
                                             
                                          
                                       
                                    
                                 

Standard deviation (s):
                                       
                                          (13)
                                          
                                             s
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      N
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               (
                                                               
                                                                  y
                                                                  i
                                                               
                                                               −
                                                               μ
                                                               )
                                                            
                                                            2
                                                         
                                                      
                                                      N
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Absolute mean (AM):
                                       
                                          (14)
                                          
                                             AM
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      N
                                                   
                                                   |
                                                   
                                                      y
                                                      i
                                                   
                                                   |
                                                
                                                N
                                             
                                          
                                       
                                    
                                 

Skewness (Sk):
                                       
                                          (15)
                                          
                                             Sk
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      N
                                                   
                                                   
                                                      
                                                         (
                                                         
                                                            y
                                                            i
                                                         
                                                         −
                                                         μ
                                                         )
                                                      
                                                      3
                                                   
                                                
                                                
                                                   (
                                                   N
                                                   −
                                                   1
                                                   )
                                                   
                                                      s
                                                      4
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Kurtosis (k):
                                       
                                          (16)
                                          
                                             k
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      N
                                                   
                                                   
                                                      
                                                         (
                                                         
                                                            y
                                                            i
                                                         
                                                         −
                                                         μ
                                                         )
                                                      
                                                      4
                                                   
                                                
                                                
                                                   (
                                                   N
                                                   −
                                                   1
                                                   )
                                                   
                                                      s
                                                      4
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Combining 14 energy measures with 5 statistics results in a total of 70 Laws texture features, which were used in this work. The classification results obtained by applying the Laws texture features are presented in Section 3.

Local binary patterns (LBP) [53,54] describe textures as a statistical placement of texture primitives or textons. Binary codes are assigned to each pixel in a texture image by thresholding neighborhood pixels based on the value of the center pixel (Fig. 3
                           ). Then, a weighting scheme is used to convert the binary codes to decimal values. The numbers of occurrences of each decimal value in the image constitute the feature vector (histogram), which is used as a texture descriptor.

Several modifications can be used to obtain more robust LBP [53]. First, a rotation invariant LBP can be obtained by rotating the original binary code until the minimum value is achieved (Fig. 4
                           ). Another modification is the use of uniform patterns – LBPs with no more than two binary level changes. The number of all possible non-uniform patterns is much greater than the number of uniform ones. Moreover, the non-uniform patterns are much less frequent than uniform patterns and hence they can be counted together.

To construct a feature vector describing LBP, the image was partitioned into 9 equal subsections. The histograms computed for each of these subsections were concatenated with the histogram of the whole image (10 histograms in total). Each histogram included 9 entries for the numbers of occurrences of each of the possible uniform patterns, and one entry for the total number of occurrences of all non-uniform patterns. This constituted a total of 10(histograms)×10(entries)=100 descriptors for a single image.

Classification is a problem of identifying the category or class to which an input object belongs. In this research, the classification of images was carried out using the perceptron algorithm, which is introduced in the following section. After that, the selection of texture features optimal for a particular classification problem and estimation of the classification performance are discussed.

The perceptron [55] is a simple type of a supervised classifier, which applies a set of weights to an input feature vector to identify the class to which it belongs. The weights are adjusted in the learning phase in such a way that they produce correct outputs when applied to the training set. In this study, the multi-class perceptron was used to discriminate between several tissue types.

The use of all extracted texture features for classification is impractical in terms of computational time and efficiency. Thus, a feature selection procedure is required, which selects a set of features that most completely embodies the texture information needed for a particular classification problem. The feature selection algorithm proposed by He et al. [56] was implemented here for this purpose. The aim of the algorithm is to select – among M available features – the L(L
                           ≤
                           M) ones that produce the optimal classification result. To select the optimal features, the criteria of optimality are needed as well as a framework for the search of the optimal feature set. The optimality of classification can be achieved either by minimization of the classification errors, or by maximization of the interclass distance. These two criteria were combined to quantify the quality of classification in this study.

To search for the optimal feature set, a suboptimal stepwise forward feature selection method was implemented (Fig. 5
                           ) [56]:
                              
                                 1
                                 Each available single feature is tested and the best one is retained.

The selected feature is combined with each of the remaining features iteratively and the best two-feature combination is retained if it yields a better result than the single feature. Additional features are added similarly.

Before selecting a new feature, the algorithm examines one by one all the previously chosen features and tries to optimize the classification by eliminating one of them.

The algorithm stops when classification cannot be further optimized either by adding a feature, or by elimination of a previously added one.

To evaluate the classification accuracy for different texture descriptors, a 5-round cross validation procedure was implemented [57]. In each round, the image dataset was partitioned into training and testing (validation) sets. Sensitivity and specificity of classification for each partition were computed according to Eqs. (17) and (18) and were averaged over all rounds. 
                              
                                 
                                    (17)
                                    
                                       sensitivity
                                       =
                                       
                                          Nci
                                          Nct
                                       
                                    
                                 
                                 
                                    (18)
                                    
                                       specificity
                                       =
                                       
                                          Nhi
                                          Nht
                                       
                                    
                                 
                              
                            Here Nci is the number of cancerous tissues identified by the classification algorithm, Nct is the total actual number of cancerous tissues present in the set, Nhi is the number of healthy tissues identified and Nht is the total number of healthy tissue in the dataset. Though the multiclass classification was performed, the sensitivity and specificity were evaluated only for discrimination of cancerous tissue from any other tissue type or background, because the detection of tumor areas presents the most interest for diagnostics.

@&#RESULTS AND DISCUSSION@&#

This section presents the results of classification experiments carried out on the dataset described in Section 2.1. The performance of different texture descriptors was evaluated by computing the mean and standard deviation of sensitivity and specificity in five rounds of cross-validation.


                     Tables 1–4
                      show the classification results for GLCM texture descriptors. The effect of distance and direction parameters was investigated performing corresponding tests. Thus, to see the influence of the direction θ, three tests were performed. Each test included only one of the directions (horizontal, vertical or diagonal) and hence utilized 1(direction)×3(distances)×11(measures)=33 texture descriptors (Table 1). The sensitivity and specificity of classification decreased from horizontal to vertical and to diagonal direction, which can be explained by the rotation dependence of the GLCM features. Similarly, to investigate the effect of the GLCM distance, three tests with one of the distances (d
                     =1, d
                     =2 or d
                     =3) at a time were carried out (Table 2
                     ). Each test utilized 1(distance)×3(directions)×11(measures)=33 texture descriptors. The performance of the classifier improved as the distance grew from d
                     =1 to d
                     =3. This can be explained by the use of high resolution images: the intensity difference between pixels becomes significant only when the distance between them reaches a certain value. Finally, the optimal set of GLCM features selected among all 99 descriptors was applied for classification (Table 3
                     ). Table 4
                      displays the result in terms of a confusion matrix. The results in this case were better than for the independent GLCM tests with 88% sensitivity and 89% specificity.

The classification results for the Laws texture descriptors are summarized in Tables 5 and 6
                     
                     . First, independent tests were performed using only one of the five statistics (mean, standard deviation, absolute mean, skewness, kurtosis) and all 14 texture energy measures. Then, the optimal feature set was selected among all 70 descriptors. In independent tests, the best result was achieved for the absolute mean parameter both in terms of sensitivity and sensitivity, while the use of all optimal descriptors resulted in the highest sensitivity and specificity (83% and 88%, respectively).


                     Table 7 and 8
                     
                      show the classification results for the optimal set of LBP texture features. This test performed more accurately than the corresponding GLCM and LBP tests with 88% sensitivity and 91% specificity. Part of these improvements can be explained by the fact that LBP include more descriptors, but mostly this is due to the invariance of LBP to rotation, scale and illumination patterns.

Although, a direct comparison with the same tissue samples has not been made, the results obtained here for classification of CARS images of BCC are more accurate than those in the recent approach [37] for lung cancer discrimination in CARS (88% sensitivity and 91% specificity versus 72% and 65%, respectively). Moreover, the approach presented here is the first independent use of texture features for CARS image classification – in contrast to [37], where the texture analysis was combined with nuclei characterization.

The current study has shown, that the investigated texture descriptors can be employed for automated discrimination of tumor regions in CARS images. The next step should be the detection of tumor borders and automated delineation of the tumor area. Moreover, further investigation of various texture descriptors should be performed, and the optimal texture features should be selected for each particular classification problem. Other nonlinear optical (NLO) modalities – as SHG and TPEF – can also be employed for the texture analysis and classification. For instance, in SHG images, the arrangement of collagen can be analyzed, which tends to align around the tumor region [58]. Additionally, TPEF and CARS visualize distribution of proteins and lipids, which provides the basis for discrimination of different functional units of skin. Thus, combining the complementary information acquired with different NLO modalities enables the development of a computerized non-invasive tumor detection technique, which should significantly facilitate the objective diagnostics. For instance, the use of such a multimodal approach to detect and discriminate Non-Melanoma Skin Cancer (NMSC) has been reported [49].

@&#CONCLUSION@&#

Automated classification of normal and cancerous regions in CARS images of basal cell carcinoma based on the texture analysis has been performed here for the first time. Three classes of texture descriptor – the Grey level co-occurrence matrix (GLCM), the Laws features, and the Local Binary Patterns (LBP) – were implemented and tested, and the perceptron algorithm was then used for classifying images based on these features. To deal with the large number of feature descriptors, a feature selection algorithm was implemented, which select the optimal feature set. Among all classes of descriptor, LBP texture features have shown the best sensitivity and specificity of classification (88 and 91% respectively), which is higher than in a previously reported approach for CARS image classification. The results suggest that the investigated texture features can be employed for the development of an automated tumor delineation procedure in the CARS images of basal cell carcinoma, which can significantly aid the diagnostics of this tumor type.

@&#ACKNOWLEDGEMENTS@&#

This work was financially supported by the European Union via ‘Europäischer Fonds für Regionale Entwicklung (EFRE)’, the ‘Thüringer Ministerium für Bildung, Wissenschaft und Kultur’ (TMBWK, projects: B578-06001, 14.90 HWP and B714-07037), the European Network of Excellence p4l (photonics4life), the German Federal Ministry for Science and Education (BMBF) MediCARS (FKZ: 13N10774) and Fiber Health Probe (FKZ: 13N12525) and the Abbe School of Photonics Scholarship, granted in cooperation with partners from the German Optics & Photonics industry, the Federal Ministry of Education and Research and the County of Thuringia. The authors are also grateful to the partners who provided the samples for the image analysis: Franziska Kluschke, Hans-Joachim Röwert-Huber and Jürgen Lademann (Charité - Universitätsmedizin Berlin, Department of Dermatology, Venerology and Allergology).


                     
                  

@&#REFERENCES@&#

