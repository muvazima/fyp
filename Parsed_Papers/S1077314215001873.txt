@&#MAIN-TITLE@&#Separation of reflection components by sparse non-negative matrix factorization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel method for separating reflection components in a single image is presented.


                        
                        
                           
                           The method is based on a modified version of sparse non-negative matrix factorization.


                        
                        
                           
                           It does not use a spatial prior such as smoothness of colors on the object surface.


                        
                        
                           
                           Such priors are commonly used in recent state-of-the-art methods.


                        
                        
                           
                           Experimental results show that our method is more accurate and robust than them.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Reflection components separation

Specular reflection

Diffuse reflection

Dichromatic reflection model

Non-negative matrix factorization

NMF

@&#ABSTRACT@&#


               
               
                  This paper presents a novel method for separating reflection components in a single image based on the dichromatic reflection model. Our method is based on a modified version of sparse non-negative matrix factorization (NMF). It simultaneously performs the estimation of diffuse colors and the separation of reflection components through optimization. Our method does not use a spatial prior such as smoothness of colors on the object surface, which is in contrast with recent methods attempting to use such priors to improve separation accuracy. Experimental results show that as compared with these recent methods that use priors, our method is more accurate and robust. For example, it can better deal with difficult cases such as the case where a diffuse color is close to the illumination color.
               
            

@&#INTRODUCTION@&#

This paper considers the problem of separating reflection components (i.e., specular and diffuse reflections) in a single image. It is useful for several purposes. One is the use with photometric methods, such as shape-from-shading [1,2] and photometric stereo [3]. As these methods often assume the surfaces of objects to be perfectly diffuse, it is necessary to eliminate specular component before applying them to real objects having specular reflectance. The separation of reflection components is also useful for the visual recognition of materials of objects; the highlights extracted from images are used as features for the recognition.

A large number of studies have been conducted to develop a method for accurately and robustly separating reflection components in a single image [4–13]. Most of them assume the dichromatic reflection model, which states that the light reflected on an object surface is given by a linear sum of a specular component and a diffuse component [4]. Specifically, the 3-vector i
                     
                        p
                      containing the RGB values of a pixel p is given by

                        
                           (1)
                           
                              
                                 
                                    i
                                    p
                                 
                                 =
                                 
                                    α
                                    p
                                 
                                 
                                    i
                                    s
                                 
                                 +
                                 
                                    β
                                    p
                                 
                                 
                                    i
                                    d
                                 
                                 ,
                              
                           
                        
                     where i
                     
                        s
                      is the color of the only illumination existing in the scene and i
                     
                        d
                      is the diffuse color (i.e., the color caused by diffuse reflection) of the object surface.

If multiple pixels p share the same illumination color i
                     
                        s
                      and the same diffuse color i
                     
                        d
                     , then Eq. (1) gives constraints on the variables on the right hand side. This is the principle on which color-based methods for separating components in a single image rely. More specifically, they commonly consider the following setting:

                        
                           •
                           The object surface consists of multiple regions with different diffuse colors, each of which consists of a number of pixels with a single color i
                              
                                 d
                              .

The illumination color i
                              
                                 s
                               is known. The diffuse color i
                              
                                 d
                               of each region and also which region each pixel belongs to are unknown. The coefficients αp
                               and βp
                               are different for each pixel p, both of which are also unknown.

Early studies [7,8,14] attempt to solve the problem within this setting. More recent studies [9–13,15] attempt to utilize spatial information to improve separation accuracy. To do so, they incorporate spatial priors such as the smoothness of the diffuse colors and/or the specular reflections on the object surface.

Our method separates reflection components based on sparse non-negative matrix factorization. It simultaneously performs the estimation of diffuse colors and the separation of reflection components through optimization. It is notable that our method does not use an additional prior or assumption as those used in the recent studies. In this respect, our study runs counter to the recent trend of research, which is also the argument we make in this paper. That is, the above setting with the dichromatic model (1) alone might be more sufficient than expected for accurate separation of reflection components. In fact, as shown in the experimental results, our method is more accurate and robust than the state-of-the-art that uses additional priors. As an additional prior is not necessary, our method is free from tuning a number of hyper parameters.

@&#RELATED WORK@&#

The early approach to the problem is to determine diffuse colors by analyzing the color space. A number of studies [7,8,14] are fallen in this category, and they solve the problem in two steps: (i) they determine the diffuse colors first by analyzing the color space onto which all the image pixels are projected, and (ii) then determine the other unknowns using the results. The method of Klinker et al. [7] performs clustering of all the pixels in the RGB color space to determine diffuse colors. Bajcsy et al. [8] used the Hue-Saturation-Lightness color space instead of the RGB space. The method of Tan and Ikeuchi [14] projects pixel colors along the direction of the illumination color to a point of the lowest observed intensity to determine the diffuse color. However, all these methods tend to be vulnerable to the clutters in the color space, such as image noises and color blending along the border of diffuse colors.

To cope with this difficulty, more recent methods attempt to utilize spatial information in the image [9–13,15]. Instead of determining diffuse colors first, most of these methods search for all the parameter values simultaneously through optimization. Some of them use a specular-free image (or its extension), an image free from specular components but with distorted diffuse components. It is created from the input image usually by a simple, pixel-wise operation.

Tan and Ikeuchi [9] first proposed a method of this category. They showed a method of creating the specular-free image by setting the maximum chromaticity of each pixel to an arbitrary value. Based on this, they presented a method that iteratively separates the reflection components by using a relation of two neighboring pixels. In their method, diffuse colors are estimated gradually in such a way that information propagates from outside highlight regions to inside them. This propagation often fails on the boundary of diffuse colors. It also cannot correctly deal with diffuse colors having the same hue but different saturation. To solve these problems, Tan et al. [10] proposed a method for recovering diffuse components by using the texture information around highlights, but it requires the positions of highlights to be known.

There are a few studies [12,15] extending the method of Tan and Ikeuchi, which incorporate an explicit prior that the diffuse colors should be mostly smooth on the object surface, except for occasional region boundaries. Under this assumption, these studies propose methods that apply smoothing to the image of an only color channel that contains the specular component, smoothing it out and then separating the two components. The key issue, then, is how to prevent smoothing to be applied across different regions of different diffuse colors. Yang et al. [12] employ bilateral filtering whose range filter is determined by approximate diffuse color and apply it to the image of maximum chromaticity. Mallick et al. [15] choose anisotropic erosion whose structuring set is determined by surface texture and apply it to the S channel of the SUV color space.

There are more studies that follow a similar approach. Shen and Cai [11] proposed another specular-free image that is obtained by subtracting the minimum of the RGB values from them for each pixel. They proposed a simple separation method based on it and also on an incorporated prior that the diffuse color changes smoothly around highlights. Although it is simple and fast, their method is less accurate than the above methods, as it simplifies the problem too much, resulting in that Eq. (1) will no longer be satisfied. Kim et al. [13] have recently proposed an optimization-based approach that uses three different priors (i.e., the spatial smoothness of specular reflections and diffuse colors, and the number of diffuse colors being as small as possible). They also propose to apply the dark channel prior [16] to obtaining another specular-free image, although it is exactly the same as the one of Shen and Cai [11]. Their method alternately performs the following steps in an iterative manner: (i) cluster image pixels based on the latest estimate of their chromaticity and (ii) apply an edge-preserving filter to the result, followed by reassignment of labels. However, it remains unclear how accurate their method is, since their experiments compare mostly with the method of Tan and Ikeuchi [9] alone and not with that of Yang et al. [12], which is more close to their method in that the smoothness of diffuse colors is assumed and an edge-preserving filter is used. Moreover, their method requires a number of hyperparameters (and it is unclear how to choose them) and also the assumed three priors are too much and could narrow the range of applicability.

Our method is based on sparse non-negative matrix factorization (sparse NMF). Before describing our method, this section briefly summarizes sparse NMF and its numerical algorithm.

NMF is a general-purpose method for multi-variate analysis. For data consisting of non-negative values such as images and speech signals, it factorizes the data into additive components. To be specific, a M × N matrix V containing only non-negative elements is factored into a product of a M × R matrix W and a R × N matrix H, both of which similarly contain only non-negative elements:

                           
                              (2)
                              
                                 
                                    V
                                    ≃
                                    W
                                    H
                                    ,
                                 
                              
                           
                        or the jth column vector v
                        
                           j
                         of V is represented by a linear combination of the column vectors w
                        
                           k
                        ’s of W weighted by the (k, j) element H
                        
                           k, j
                         of H as

                           
                              (3)
                              
                                 
                                    
                                       v
                                       j
                                    
                                    ≃
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       R
                                    
                                    
                                       w
                                       k
                                    
                                    
                                       H
                                       
                                          k
                                          ,
                                          j
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The factorization is obtained by minimizing some cost D(W, H) measuring the difference between V and its reproduction WH. For D(W, H), L
                        2 norm

                           
                              (4)
                              
                                 
                                    D
                                    
                                       (
                                       W
                                       ,
                                       H
                                       )
                                    
                                    =
                                    
                                       
                                          ∥
                                          V
                                          −
                                          W
                                          H
                                          ∥
                                       
                                       2
                                       2
                                    
                                 
                              
                           
                        is widely used for general purposes, so is in our method. The generalized KL divergence [17] and Itakura–Saito divergence [18] are sometimes used depending on problems.

Since an efficient iterative algorithm was developed by Lee and Seung [17], NMF has been applied to all sorts of problems, and various extensions have been made to the cost function depending on problems [18–24].

An important extension is the sparse NMF that incorporates the sparse regularization into the minimization [19]. It minimizes the following cost for the purpose of obtaining H having as small a number of non-negative elements as possible.

                           
                              (5)
                              
                                 
                                    F
                                    
                                       (
                                       W
                                       ,
                                       H
                                       )
                                    
                                    =
                                    
                                       1
                                       2
                                    
                                    
                                       
                                          ∥
                                          V
                                          −
                                          W
                                          H
                                          ∥
                                       
                                       2
                                       2
                                    
                                    +
                                    λ
                                    
                                       ∑
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    
                                       H
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    .
                                 
                              
                           
                        The second term on the right hand side follows the same relaxation as sparse coding [25] that L
                        0 norm is replaced by L
                        1 norm. The minimization of this cost results in that each data vector v
                        
                           j
                         is represented by a linear combination of as small a number of bases (i.e., the column vector of W) as possible, as in sparse coding. Its difference from sparse coding is that the resulting quantities are all non-negative.

A numerical algorithm for this sparse NMF, i.e., minimizing this cost under the constraints that W and H both have only non-negative entries is as follows. Starting from initial values W and H that are usually initialized in a random manner, it alternately iterates the following two updating rules until convergence:

                           
                              (6a)
                              
                                 
                                    H
                                    ←
                                    H
                                    ⊙
                                    
                                       
                                          
                                             
                                                W
                                                ¯
                                             
                                             ⊤
                                          
                                          V
                                       
                                       
                                          
                                             
                                                W
                                                ¯
                                             
                                             ⊤
                                          
                                          
                                             W
                                             ¯
                                          
                                          H
                                          +
                                          λ
                                       
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (6b)
                              
                                 
                                    W
                                    ←
                                    W
                                    ⊙
                                    
                                       
                                          V
                                          
                                             H
                                             ⊤
                                          
                                          +
                                          
                                             W
                                             ¯
                                          
                                          ⊙
                                          A
                                          
                                             W
                                             ¯
                                          
                                          H
                                          
                                             H
                                             ⊤
                                          
                                       
                                       
                                          
                                             W
                                             ¯
                                          
                                          H
                                          
                                             H
                                             ⊤
                                          
                                          +
                                          
                                             W
                                             ¯
                                          
                                          ⊙
                                          A
                                          V
                                          
                                             H
                                             ⊤
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              W
                              ¯
                           
                         represents a matrix obtained by normalizing each column vector of W; A is the M × M matrix whose entries are all 1; ⊙ indicates the Hadamard product (entry-wise product) and the division is similarly performed in the entry-wise manner. It is shown [19] that this iteration always reaches a local minimum in a finite count of iterations.

In this section, we present our formulation of the problem of separating reflection components in a given image. Letting 
                           
                              R
                              −
                              1
                           
                         be the number of diffuse colors in the image (or equivalently, R be the diffuse colors plus one illumination color), we denote the diffuse colors by i
                        
                           k
                         for 
                           
                              k
                              =
                              1
                              ,
                              …
                              ,
                              R
                              −
                              1
                           
                        . We assume that there is only a single illumination color and denote it by a normalized vector i
                        
                           s
                         (i.e., 
                           
                              
                                 ∥
                              
                              
                                 i
                                 s
                              
                              
                                 
                                    ∥
                                 
                                 2
                              
                              =
                              1
                           
                        ). Following the dichromatic model (1), the color i
                        
                           p
                         of a pixel p can be represented as

                           
                              (7)
                              
                                 
                                    
                                       i
                                       p
                                    
                                    =
                                    
                                       α
                                       p
                                    
                                    
                                       i
                                       s
                                    
                                    +
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          R
                                          −
                                          1
                                       
                                    
                                    
                                       β
                                       
                                          k
                                          ,
                                          p
                                       
                                    
                                    
                                       i
                                       k
                                    
                                    ,
                                 
                              
                           
                        where β
                        
                           k, p
                         has a nonzero value only for a unique k in 
                           
                              [
                              1
                              ,
                              …
                              ,
                              R
                              −
                              1
                              ]
                           
                         and is zero for all other k’s, as the pixel color should be a linear sum of one diffuse color and the illumination color. Using L
                        0 (counting) norm, this can be represented as

                           
                              (8)
                              
                                 
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          R
                                          −
                                          1
                                       
                                    
                                    
                                       
                                          ∥
                                          
                                             β
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          ∥
                                       
                                       0
                                    
                                    =
                                    1
                                    ,
                                 
                              
                           
                        for any p. Note that the entries of i
                        
                           p
                        , i
                        
                           s
                        , and i
                        
                           k
                         as well as αp
                         and β
                        
                           k, p
                         have non-negative values.

For the moment, we assume that the number of diffuse colors to be known, or equivalently, that R is known. Then, the separation problem is to estimate all the variables but i
                        
                           s
                         on the right hand side of Eq. (7), under the constraint of Eq. (8) along with the non-negativeness of these variables, given i
                        
                           p
                         for a number of pixels 
                           
                              p
                              =
                              1
                              ,
                              …
                              
                           
                        .

This problem can be expressed compactly in a matrix form as the following constrained non-negative matrix factorization:

                           
                              (9a)
                              
                                 
                                    
                                       
                                       
                                          
                                             V
                                             =
                                             W
                                             H
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9b)
                              
                                 
                                    
                                       
                                       
                                          
                                             s.t.
                                             
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   2
                                                
                                                R
                                             
                                             
                                                
                                                   ∥
                                                   
                                                      H
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                   
                                                   ∥
                                                
                                                0
                                             
                                             =
                                             1
                                             
                                             
                                                (
                                                j
                                                =
                                                1
                                                ,
                                                …
                                                ,
                                                N
                                                )
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where V a 3 × N matrix (N is the number of image pixels) whose columns store the pixel colors i
                        
                           p
                        ’s for 
                           
                              p
                              =
                              1
                              ,
                              …
                              ,
                              N
                           
                        ; W is a 3 × R matrix defined to be

                           
                              (10)
                              
                                 
                                    W
                                    =
                                    [
                                    
                                       i
                                       s
                                    
                                    ,
                                    
                                       i
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       i
                                       
                                          R
                                          −
                                          1
                                       
                                    
                                    ]
                                    ;
                                 
                              
                           
                        
                        H is a R × N matrix storing αp
                         and β
                        
                           k, p
                        ’s in its columns as

                           
                              (11)
                              
                                 
                                    H
                                    =
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   α
                                                   1
                                                
                                             
                                             
                                                
                                                   α
                                                   2
                                                
                                             
                                             
                                                ⋯
                                             
                                             
                                                
                                                   α
                                                   N
                                                
                                             
                                          
                                          
                                             
                                                
                                                   β
                                                   
                                                      1
                                                      ,
                                                      1
                                                   
                                                
                                             
                                             
                                                
                                                   β
                                                   
                                                      1
                                                      ,
                                                      2
                                                   
                                                
                                             
                                             
                                                ⋯
                                             
                                             
                                                
                                                   β
                                                   
                                                      1
                                                      ,
                                                      N
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ⋮
                                             
                                             
                                                ⋮
                                             
                                             
                                                ⋱
                                             
                                             
                                                ⋮
                                             
                                          
                                          
                                             
                                                
                                                   β
                                                   
                                                      R
                                                      −
                                                      1
                                                      ,
                                                      1
                                                   
                                                
                                             
                                             
                                                
                                                   β
                                                   
                                                      R
                                                      −
                                                      1
                                                      ,
                                                      2
                                                   
                                                
                                             
                                             
                                                ⋯
                                             
                                             
                                                
                                                   β
                                                   
                                                      R
                                                      −
                                                      1
                                                      ,
                                                      N
                                                   
                                                
                                             
                                          
                                       
                                       ]
                                    
                                    ,
                                 
                              
                           
                        where the order of the columns (i.e., the pixels) is the same as V; H
                        
                           i, j
                         is the (i, j) entry of H. Note that the second equation is merely a rewritten version of Eq. (8). Note also that the constraints of non-negative values are naturally implemented in the inherent requirement of NMF. However, there is also a difference from usual NMF, which is that not all the entries of W are unknown; when separating W into the diffuse and illumination colors and denoting it by

                           
                              (12)
                              
                                 
                                    W
                                    =
                                    [
                                    
                                       i
                                       s
                                    
                                    ,
                                    
                                       W
                                       d
                                    
                                    ]
                                    ,
                                 
                              
                           
                        we are to determine only the submatrix W
                        
                           d
                        .

In the presence of noises, it is natural to minimize

                           
                              (13)
                              
                                 
                                    F
                                    
                                       (
                                       
                                          W
                                          d
                                       
                                       ,
                                       H
                                       )
                                    
                                    ≡
                                    
                                       
                                          ∥
                                          V
                                          −
                                          W
                                          H
                                          ∥
                                       
                                       2
                                       2
                                    
                                 
                              
                           
                        under the constraint of (9b). The choice of L
                        2 norm is rationalized if we assume i.i.d. additive Gaussian noises with zero mean for each RGB value of each pixel. Then, the problem turns to finding a solution to this constrained NMF.

The presence of the constraint with L
                        0 norm makes it hard to directly solve the constrained minimization. Instead, we consider

                           
                              (14)
                              
                                 
                                    F
                                    
                                       (
                                       
                                          W
                                          d
                                       
                                       ,
                                       H
                                       )
                                    
                                    =
                                    
                                       1
                                       2
                                    
                                    
                                       
                                          ∥
                                          V
                                          −
                                          W
                                          H
                                          ∥
                                       
                                       2
                                       2
                                    
                                    +
                                    λ
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          2
                                       
                                       R
                                    
                                    
                                       
                                          ∥
                                          
                                             H
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                          ∥
                                       
                                       0
                                    
                                    .
                                 
                              
                           
                        If there were no noise, the minimizer to this clearly gives the correct solution (i.e., the minimizer (W, H) yields the exact 
                           
                              V
                              (
                              =
                              W
                              H
                              )
                           
                         and H satisfies the constraint (9b)), as long as we choose a small λ. (We exclude here the case where there are two or more possible factorizations for the given V.) The same argument basically remains true in the presence of noises unless they are very large. However, one problem emerges in that case, which originates from the fact that the illumination color can be used ‘for free’. For example, the illumination color could be wrongly used to explain noises. Even worse, it could also be used to explain pure diffuse colors, particularly for pixels having dark colors. If a pixel’s color is dark (i.e., it is close to the origin in the RGB space), then which color to choose tends not to change the L
                        2 error much.

This necessitates imposing a certain penalty on choosing the illumination color. For this purpose, we employ the same regularization for the illumination color and rewrite the cost into

                           
                              (15)
                              
                                 
                                    F
                                    
                                       (
                                       
                                          W
                                          d
                                       
                                       ,
                                       H
                                       )
                                    
                                    =
                                    
                                       1
                                       2
                                    
                                    
                                       
                                          ∥
                                          V
                                          −
                                          W
                                          H
                                          ∥
                                       
                                       2
                                       2
                                    
                                    +
                                    
                                       λ
                                       s
                                    
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       ∥
                                    
                                    
                                       H
                                       
                                          1
                                          ,
                                          j
                                       
                                    
                                    
                                       
                                          ∥
                                       
                                       0
                                    
                                    +
                                    
                                       λ
                                       d
                                    
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          2
                                       
                                       R
                                    
                                    
                                       
                                          ∥
                                          
                                             H
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                          ∥
                                       
                                       0
                                    
                                    .
                                 
                              
                           
                        The newly added term requires as small a number of pixels as possible to have specular components. Although the regularization parameters λs
                         and λd
                         can be arbitrarily chosen, they have the same nature that they should be determined based on the comparison against the strength of the noises. Thus, we set

                           
                              (16)
                              
                                 
                                    λ
                                    =
                                    
                                       λ
                                       s
                                    
                                    =
                                    
                                       λ
                                       d
                                    
                                    .
                                 
                              
                           
                        
                     


                        Eq. (15) is still difficult to directly minimize, because of the existence of L
                        0 norm. Following the popular relaxation strategy of replacing L
                        0 norm with L
                        1 norm, we consider the minimization of

                           
                              (17)
                              
                                 
                                    F
                                    
                                       (
                                       
                                          W
                                          d
                                       
                                       ,
                                       H
                                       )
                                    
                                    =
                                    
                                       1
                                       2
                                    
                                    
                                       
                                          ∥
                                          V
                                          −
                                          W
                                          H
                                          ∥
                                       
                                       2
                                       2
                                    
                                    +
                                    λ
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       R
                                    
                                    
                                       
                                          ∥
                                          
                                             H
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                          ∥
                                       
                                       1
                                    
                                    .
                                 
                              
                           
                        Then, this is mostly the same as the cost for sparse NMF (Eq. (5)), although there is a difference that not all entries of W are unknown in the above cost.

To deal with the difference of our problem from sparse NMF, we modify the algorithm so that only the unknown submatrix W
                        
                           d
                         in W will be updated. To be specific, we revise Eq. (6b) as

                           
                              (18)
                              
                                 
                                    
                                       W
                                       d
                                    
                                    ←
                                    
                                       W
                                       d
                                    
                                    ⊙
                                    
                                       
                                          
                                             V
                                             ′
                                          
                                          
                                             H
                                             d
                                             ⊤
                                          
                                          +
                                          
                                             
                                                W
                                                ¯
                                             
                                             d
                                          
                                          ⊙
                                          A
                                          
                                             
                                                W
                                                ¯
                                             
                                             d
                                          
                                          
                                             H
                                             d
                                          
                                          
                                             H
                                             d
                                             ⊤
                                          
                                       
                                       
                                          
                                             
                                                W
                                                ¯
                                             
                                             d
                                          
                                          
                                             H
                                             d
                                          
                                          
                                             H
                                             d
                                             ⊤
                                          
                                          +
                                          
                                             
                                                W
                                                ¯
                                             
                                             d
                                          
                                          ⊙
                                          A
                                          
                                             V
                                             ′
                                          
                                          
                                             H
                                             d
                                             ⊤
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where

                           
                              (19a)
                              
                                 
                                    
                                       V
                                       ′
                                    
                                    =
                                    V
                                    −
                                    
                                       i
                                       s
                                    
                                    
                                       h
                                       s
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (19b)
                              
                                 
                                    
                                       h
                                       s
                                    
                                    =
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   α
                                                   1
                                                
                                             
                                             
                                                ⋯
                                             
                                             
                                                
                                                   α
                                                   N
                                                
                                             
                                          
                                       
                                       ]
                                    
                                    ,
                                 
                              
                           
                        and

                           
                              (20)
                              
                                 
                                    
                                       H
                                       d
                                    
                                    =
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   β
                                                   
                                                      1
                                                      ,
                                                      1
                                                   
                                                
                                             
                                             
                                                ⋯
                                             
                                             
                                                
                                                   β
                                                   
                                                      1
                                                      ,
                                                      N
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ⋮
                                             
                                             
                                                ⋱
                                             
                                             
                                                ⋮
                                             
                                          
                                          
                                             
                                                
                                                   β
                                                   
                                                      R
                                                      −
                                                      1
                                                      ,
                                                      1
                                                   
                                                
                                             
                                             
                                                ⋯
                                             
                                             
                                                
                                                   β
                                                   
                                                      R
                                                      −
                                                      1
                                                      ,
                                                      N
                                                   
                                                
                                             
                                          
                                       
                                       ]
                                    
                                    .
                                 
                              
                           
                        Here, A is the M × M matrix of all 1’s. This revised updating rule does not change i
                        
                           s
                        , for which we set the known illumination color.

We have assumed R (i.e., the number of diffuse colors plus one) to be known so far. It is unknown in reality, and thus needs to be determined.

Our problem is originally to factorize a matrix containing the image into a product of non-negative matrices under the constraint (8); the constraint is such that a pixel color should be given by a linear combination of the illumination color and a single diffuse color chosen from multiple candidates. This is relaxed to the minimization of (17), which we expect to give a good solution. If it indeed gives a good solution, the solution will satisfy the constraint (8) at least approximately.

Thus, we incorporate a measure of how well a solution satisfies this constraint and search for R in an exhaustive manner using the measure. Specifically, computing a number of solutions for multiple different R’s, we choose the solution with the highest measure. For this measure, we define

                           
                              (21)
                              
                                 
                                    score
                                    
                                       (
                                       H
                                       )
                                    
                                    =
                                    
                                       1
                                       N
                                    
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       
                                          
                                             max
                                             
                                                i
                                                ∈
                                                [
                                                2
                                                ,
                                                R
                                                ]
                                             
                                          
                                          
                                             H
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                2
                                             
                                             R
                                          
                                          
                                             H
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where the number of rows of H gives R on the right hand side. This score is in the range [0,1] and returns 1 if the above constraint is fully satisfied. For a dark pixel without specular component, however, its diffuse component could be zero, making the score of the pixel also zero. Therefore, we choose the solution returning the highest score.

It seems difficult to determine the number of diffuse colors for real images, because a certain amount of ambiguity has to be involved in the determination. Fortunately, our method tends not to be sensitive to the choice of R. As shown in Fig. 1, it yields almost the same separation result for a certain range of R.

@&#EXPERIMENTAL RESULTS@&#

We conducted several experiments to examine the effectiveness of the proposed method and compare its performance with existing methods. For them, we choose Tan–Ikeuchi [9] and Yang et al. [12]; we used the authors’ code
                        1
                     
                     
                        1
                        
                           http://www.staff.science.uu.nl/~tan00109/code.html.
                     
                     ,
                     
                        2
                     
                     
                        2
                        
                           http://www.cs.cityu.edu.hk/~qiyang/publications.html.
                      in the experiments. We exclude Kim et al. [13], since its repeatability is limited due to lack of information. The method has a lot of tunable parameters, and the paper does not show how to choose them. (For example, the threshold of chromaticity distance between regions to be merged, after k-means clustering, in Section 6.1 of [13]; it is unclear what edge-preserving filter is used for computing λ in Section 6.2; the convergence threshold κ is not shown, and so on.) Note also that no authors’ implementation is available.

We set the weight of the sparse regularization 
                           
                              λ
                              =
                              3
                           
                         throughout the experiments. For each image, we iterated the modified sparse NMF until it converges. The convergence is judged by

                           
                              (22)
                              
                                 
                                    
                                       |
                                    
                                    
                                       F
                                       t
                                    
                                    −
                                    
                                       F
                                       
                                          t
                                          −
                                          1
                                       
                                    
                                    
                                       |
                                       <
                                       ϵ
                                       |
                                    
                                    
                                       F
                                       t
                                    
                                    
                                       |
                                       ,
                                    
                                 
                              
                           
                        where Ft
                         and 
                           
                              F
                              
                                 t
                                 −
                                 1
                              
                           
                         are the values of the cost (17) at iteration count t and 
                           
                              t
                              −
                              1
                              ,
                           
                         respectively; we set ϵ to be 
                           
                              exp
                              (
                              −
                              18
                              )
                           
                        .

The initial values of H and W
                        
                           d
                         are generated by uniform random numbers over [1, 255], and each column vector of W
                        
                           d
                         is normalized to have length 1. Following the previous studies mentioned in Section 2, We set the illumination color i
                        
                           s
                         to be 
                           
                              
                                 1
                                 
                                    3
                                 
                              
                              
                                 
                                    [
                                    1
                                    ,
                                    1
                                    ,
                                    1
                                    ]
                                 
                                 ⊤
                              
                           
                         in all the experiments. If the illumination color is not white but is known, we may either set the color to i
                        
                           s
                         or convert color map of the input image so that the illumination color will virtually be white and set i
                        
                           s
                         as above. If the illumination color is unknown, it could still be possible to estimate it based on color constancy from the input image.

As
                        
                        
                        
                        
                         is described in Section 4.4, we choose the solution yielding the best score (21) among those obtained for different R in the range [3,12]. The (modified) sparse NMF is not guaranteed to find the global optimum. In fact, we confirmed in our experiments that it could be trapped in apparent local minima. Fortunately, however, the frequency is empirically very small; we encounter a local minimum with probability PL
                         < 0.1, i.e., less than once in every 10 trials. Thus, we run it three times with different initial values. Then, the success rate, i.e., the probability that the algorithm will not be trapped in a local minimum at least one of the three trials, is estimated as 
                           
                              1
                              −
                              
                                 P
                                 L
                                 3
                              
                              >
                              0.999
                           
                        . We conduct the three trials for each value of R, and choose the solution yielding the best score among all the solutions thus obtained. Specifically, letting H
                        (R, l) be the lth 
                           
                              (
                              l
                              =
                              1
                              ,
                              2
                              ,
                              3
                              )
                           
                         solution for 
                           
                              R
                              (
                              =
                              3
                              ,
                              …
                              ,
                              12
                              )
                           
                         and 
                           
                              S
                              H
                           
                         be the set of all H
                        (R, l)’s, we choose

                           
                              (23)
                              
                                 
                                    
                                       argmax
                                       
                                          H
                                          ∈
                                          
                                             S
                                             H
                                          
                                       
                                    
                                    score
                                    
                                       (
                                       H
                                       )
                                    
                                 
                              
                           
                        as the final solution.

From W
                        
                           d
                         and H thus obtained, the specular and diffuse components are reconstructed by

                           
                              (24)
                              
                                 
                                    
                                       I
                                       s
                                    
                                    =
                                    
                                       i
                                       s
                                    
                                    
                                       h
                                       s
                                    
                                    ,
                                 
                              
                           
                        and

                           
                              (25)
                              
                                 
                                    
                                       I
                                       d
                                    
                                    =
                                    
                                       W
                                       d
                                    
                                    
                                       H
                                       d
                                    
                                    ,
                                 
                              
                           
                        respectively.

We first applied the three methods to a synthetic image shown in Fig. 2 and its results also are shown in there. The parenthesis below each image shows the error (RMSE) of the separated specular components. From the separation results, our method is the best in terms of accuracy; Tan–Ikeuchi is clearly erroneous, and Yang et al. is better than Tan–Ikeuchi but has an erroneous horizontal line between the two regions on the left. These are also confirmed by the error values in the parentheses.

When a diffuse color is close to the illumination color, the separation will be difficult. We compare the behaviors of the three methods in such situations. We created the images of a sphere with a single diffuse color 
                           
                              [
                              R
                              ,
                              G
                              ,
                              B
                              ]
                              =
                              [
                              1
                              ,
                              1
                              ,
                              x
                              ]
                           
                         by varying 
                           
                              x
                              =
                              0.1
                              ,
                           
                         0.3, and 0.9. As the illumination color is [1, 1, 1], the separation is more difficult as x goes to 1. Fig. 3 shows the results for these images. Tan–Ikeuchi could not separate the components at all, as they assume R ≠ G ≠ B for every pixel. The results of Yang et al. tend to be worse with increasing x; the separated specular components appear to be smaller than their true values. Our method yields clearly better separation results.

We then show results for real images. We first show the results for the dataset of [9] that is available from the author’s site
                           3
                        
                        
                           3
                           
                              http://www.staff.science.uu.nl/~tan00109/code.html.
                         and is widely used in previous studies.

We first tested robustness to image noises. We added zero-mean Gaussian noise with 
                           
                              σ
                              =
                              0.5
                              ,
                           
                         1.0, and 5.0 to each pixel (ranging in [0,255]) of each channel of an input image. Fig. 4 shows the results for different levels of the noise. Table 1 shows quantitative comparison of dependency on image noises among three methods. It is seen from these that our method and Yang et al. are mostly equally robust to noises, and Tan et al. is slightly less robust.

Many existing methods assume a linear mapping between the image irradiance and the corresponding pixel value. Calibrating the response function of the camera will make the assumption true, but the calibration will include a certain amount of errors. We may simulate such errors by transforming each pixel value x into x
                        1/γ
                        . To examine the performance of the methods in the presence of such calibration errors, we generated a number of images in this way and applied the three methods to the images.

The results are shown in Fig. 5. We may consider a separation result for each γ value to be more accurate if it is closer to that for 
                           
                              γ
                              =
                              1.0
                           
                         (the original image). Table 2 shows the errors in this accuracy measure. It is seen that our method is significantly better than Tan–Ikeuchi and is slightly better than Yang et al. A possible explanation for the better performance of our method is as follows. The other two methods assume spatial smoothness in diffuse component. The ideal case for them is that the variation in diffuse component within a region of the same color is only limited to changes in shading and chromaticity does not change at all within the region. The above transformation of the input image with γ makes the input image deviate from this ideal case. Our method does not rely on such a prior, which may contribute to its robustness.

To demonstrate the difference of our method from others in this respect, we intentionally destroyed the spatial relationship of pixels and applied the three methods to the resulting images. To be specific, we transform an image by dividing it into patches of w × w pixels in a grid manner and then randomly shuffle these patches to generate an image. Fig. 6 shows the results. Note that the displayed images have been transformed back by the inverse of the above transformation (except for the input images). The three rows correspond to 
                           
                              w
                              =
                              ∞
                           
                         (no shuffle), 5 × 5, and 1 × 1 (pixelwise), respectively. Tan–Ikeuchi is somewhat robust to this geometric transformation, as it uses only the relationship between the neighboring pixels, whereas Yang et al. is less robust; it completely fails separation at 
                           
                              w
                              =
                              1
                           
                        .

Finally, we show the results for other real images in Fig. 7. Although there is no ground truth and thus it is difficult to evaluate separation accuracy, it is observed that Tan–Ikeuchi clearly yields excessive amount of specular components; the results of Yang et al. are slightly better, but its tendency is the same; our method provides much better results than the others. It should be noted that in the results from third to fifth rows, some of the pixels have zero diffuse components, which are caused by saturation of the brightness. It violates the assumed model, and it is no wonder that the correct results are not obtained. We nevertheless show the result to demonstrate how the methods can handle the real-world images having saturated pixels.

This paper has shown a method for separating reflection components based on sparse NMF. The method is characterized by that it simultaneously performs the estimation of diffuse colors and the separation of reflection components through the NMF-based optimization. The experimental results show that the method yields more accurate separation results than the state-of-the-art that incorporates spatial priors such as the smoothness of diffuse colors. This shows that the basic problem setting with the dichromatic model alone might be more sufficient than expected for accurate separation of reflection components. Our sparse NMF-based method can successfully find an accurate solution through optimization, owing to the good numerical property of NMF.

The main contribution of this study is not necessarily the proposed method itself but rather the finding that the problem can be solved more simply than thought. Earlier studies use spatial priors, whereas our method does not use spatial information at all, and nevertheless yields reasonably better results. We suspect that our NMF formulation can better utilize the constraints given by the dichromatic model along with the implicit surface color model (i.e., surfaces consist of multiple uni-colored regions). This will be further investigated in our future study.

@&#ACKNOWLEDGMENTS@&#

This work was partly supported by JSPS KAKENHI, Grant Numbers 25135701 and 15H05919.

@&#REFERENCES@&#

