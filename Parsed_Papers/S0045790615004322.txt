@&#MAIN-TITLE@&#A steganographic method using Bernoulli’s chaotic maps

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A steganographic method for hiding information is proposed using four Bernoulli’s chaotic maps.


                        
                        
                           
                           It is applied a two-step scheme: Pixel selection and masking of sensitive information.


                        
                        
                           
                           A module function is applied to the chaotic maps considering an iterated process.


                        
                        
                           
                           There is no evidence of periodicity in the sequences produced by the modified Bernoulli’s maps.


                        
                        
                           
                           It is assumed that each map uses two 64-bits variables, and the key space has been estimated in 2508.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Steganographic method

Bernoulli map

Pixel substitution

Statistical analysis

@&#ABSTRACT@&#


               
               
                  This paper proposes an alternative for building a data hiding algorithm into digital images. The method is based on chaos theory and the least significant bit technique for embedding a secret message in a image. Specifically the Bernoulli’s chaotic maps are used, to perform the following processes: (i) encrypt the bits of the message before embedding them into the cover image, (ii) a random selection of the image’s compositions (R,G or B) must be performed and the insertion of the secret message in a random way to (iii) rows and (iv) columns of the image. Several experimental results are shown under different evaluation criteria, such as entropy, autocorrelation, homogeneity, contrast, energy, peak signal-to-noise ratio, mean squared error and maximum absolute squared deviation. Experimental results show a good improvement in the peak-signal-to-noise-ratio and Image Fidelity value of the proposed algorithm in comparison to the results obtained from similar algorithms.
               
            

@&#INTRODUCTION@&#

The internet has caused a substantial increment in data transmission; such data can be important information for social security or bank account numbers, as well as other sensitive information that can be used by swindlers. Many cryptographic [1] and steganographic techniques [2] have been developed to reduce the data vulnerability, these techniques may add the following attributes to the information.

                        
                           •
                           
                              Confidentiality, which refers to the addition of a restriction attribute in the sensitive information that is used to limit the information access only to authorized users.


                              Integrity, which is the added attribute that allows identifying when sensitive information has been modified.


                              Non-repudiation is the attribute in the sensitive information that allows verifying when an information sender or receiver denies the information that is communicated.


                              Authentication allows confirming the identities of the information sender and receiver in the communication proces s.

The modern steganographic techniques are used to provide secrecy in communication by building subliminal channels to hide information into a cover digital media. These techniques are used to satisfy the insecure scenarios defined by the prisoners’ dilemma established by Simmons in 1983 [3]. On other hand, the cryptographic communication arouses suspicion that there is something important in the communications channel, meanwhile the steganographic communication goes unnoticed. The most important feature that a steganographic scheme should possess is statistical undetectability. In other words, the observer of the communication process should not be able to distinguish between a cover and its respective steganogram. The formal description of this requirement in information-theoretic terms was developed by Cachin in 1998 [4]. The use of steganographic techniques was reconsidered in protection systems in 1996, when the low bit coding, phase coding and spread spectrum techniques were studied by Bender [5] to hide data into digital media with minimal degradation. There is a large variety of techniques to hide secret information in images; some of them are more complex than the others, and all of them have strong and weak aspects. There are several approaches to classify the steganographic techniques [6]. For example, the type of cover used for a subliminal communication can be used, but the cover modifications applied in the embedding process are another possibility. In this work, the last criterion has been used, and then the classification of steganography techniques based on the cover modifications applied by some embedding process can be as follows:

                        
                           (a)
                           
                              Least significant bit method (
                              
                                 LSB
                              
                              ). This approach is simple because the least significant bits of some bytes inside an image are replaced with bits of the message to be hidden. In some cases LSB of pixels visited in random areas of image. Some examples of this approach can be reviewed in [7,8]. These techniques are realized in the image spatial domain.


                              Transform domain techniques. This approach embeds secret information in a transformed space of the signal (e. g. in the frequency domain). The significant areas of the cover image are used to hide messages. These techniques are more robust to attacks such as compression, cropping and some image processing compared to LSB techniques. A novel technique named DeRand (Data embedding in Random domain) has been used to embed information increment or decrement the value of the pixels randomly selected; DeRand techniques define redundancy in any digital signal by applying the universal parser such that the high entropy random signal can be used for data embedding [9,10].


                              Spread spectrum techniques. This approach adopts ideas and concepts from spread spectrum communication systems [11,12].


                              Statistical methods. This approach embeds information by changing several statistical properties of a cover and use hypothesis testing in the extraction process [13].


                              Distortion techniques. This approach embeds information by distorting a signal and measuring the deviation from the original cover in the extraction step [14,15].


                              Cover generation methods. This approach embeds information in the way a cover for secret communication is created. Some examples of this approach can be reviewed in [16].

The implementation of steganography techniques can include different mathematic concepts and tools. In particular, steganography techniques that use Chaos Theory are emerging [17,18]. Chaotic systems are attractive in security information because they are nonlinear systems characterized by high sensitivity to initial conditions and control, unpredictability, ergodicity and mixing properties, and then they can produce deterministic signals with random appearance suitable in the design of steganographic algorithms. Specifically, this work is focused on the techniques that use one-dimensional chaotic maps [19,20]. In this work, the steganographic method proposed is based on Bernoulli chaotic maps. This chaotic map is simpler than the TD-ERCS, and NCA chaotic maps used by Anees et al. [20] and the obtained results are similar to the results produced by Anees’s algorithm. Additionally, Bernoulli’s chaotic map is a piece-wise-linear (PWL) chaotic map that has no stability islands inside its chaotic region as it occurs with the logistic map; therefore, its control parameter can be modified into a specific interval in (0,1) of the real numbers. This map can generate pseudorandom sequences with statistical distributions very close to uniform distribution. The proposed algorithm uses the LSB technique for data hiding, which is a simple and straightforward technique that also has the advantage of embedding more information than the transform techniques keeping the texture of digital image almost unaffected. The problem with spatial techniques is the low robustness against statistical analysis and differential attacks. In this paper, three Bernoulli chaotic maps are used to propose a chaotic steganography algorithm in the spatial domain that exhibits good statistical features, and it has security conditions against different attacks. Furthermore, the proposed algorithm has a previous stage of chaotic encryption to modify the statistical characteristics of the message that is intended to hide. Also, in this previous stage a Bernoulli’s chaotic map is used.

This paper is organized as follow: The mathematical model Bernoulli’s chaotic map is given in Section 2, the structure of the proposed method is presented in Section 3, simulations results analysis are provided in Section 4, a comparison with similar algorithms are provided in Section 5 and finally in Section 6 the conclusions are presented.

The Bernoulli map, also known as dyadic transformation, can be defined as an iterated map of the PWL function according to Eq. (1).

                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          f
                                          
                                             (
                                             x
                                             )
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         2
                                                         μ
                                                         x
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                         ≤
                                                         x
                                                         <
                                                         0.5
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         2
                                                         μ
                                                         x
                                                         −
                                                         1
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         0.5
                                                         ≤
                                                         x
                                                         <
                                                         1
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                     where x ∈ (0, 1) and μ ∈ (0, 1).

The definition domain of Bernoulli’s map is the interval (0, 1); and for calculations, a floating point number representation is used. But when the map is used to process binary files, the Bernoulli’s map defined by Eq. (1) should be modified to use a fixed-point representation for each number considering only natural numbers. In this way, the modified Bernoulli’s map has its definition domain in the interval (0, limit), considering that limit is an arbitrary but known value and it is in (1, MaxRep) with MaxRep is the largest number that can be represented in a computer.

                        
                           (2)
                           
                              
                                 
                                    
                                       
                                          g
                                          
                                             (
                                             x
                                             )
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         f
                                                         l
                                                         o
                                                         o
                                                         r
                                                         (
                                                         2
                                                         μ
                                                         x
                                                         )
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                         ≤
                                                         x
                                                         <
                                                         
                                                            
                                                               l
                                                               i
                                                               m
                                                               i
                                                               t
                                                            
                                                            2
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                         l
                                                         o
                                                         o
                                                         r
                                                         (
                                                         2
                                                         μ
                                                         x
                                                         −
                                                         l
                                                         i
                                                         m
                                                         i
                                                         t
                                                         )
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               l
                                                               i
                                                               m
                                                               i
                                                               t
                                                            
                                                            2
                                                         
                                                         ≤
                                                         x
                                                         <
                                                         l
                                                         i
                                                         m
                                                         i
                                                         t
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                     now x ∈ (0, limit), μ ∈ (0, 1) and floor(x) is a function that truncates a number x to lower whole.

Notice that Eq. (2) includes a scaling and discretization process over chaotic map defined in the real numbers. But it now represents a new chaotic map in the natural numbers, and then each natural number produced by this new map must be translated to a number in fixed-point representation. In this way, the universe of natural numbers has a cardinality of 2
                        N
                     , where N represents the number of bits in the binary representation of each natural number. Some authors have reported a degradation problem in the chaotic behavior of the map when a fixed-point representation [21,22] is used in the calculations for the iterated process; such degradation can be solved or at least minimized using a larger quantity of bits [10] in the number representation. Fig. 1
                      shows various sequences to determine how the value of limit and a specific value of x
                     0 affects the chaotic behavior of the map; the presented sequences were obtained iterating Eq. (2), 
                        
                           
                              x
                              
                                 n
                                 +
                                 1
                              
                           
                           =
                           g
                           
                              (
                              
                                 x
                                 n
                              
                              )
                           
                           ,
                        
                      and using small numbers for the variable limit and a specific value of x
                     0. For the four sequences, μ is 0.9; moreover, the value of limit was 3, 5 and 10, respectively. The top sequence has only numbers ‘1’; for the middle sequence, the map has a brief transient behavior but after a few iterations, it produces a sequence of only numbers ‘0’. Finally, the bottom sequence shows an oscillating behavior; in consequence, to prevent disorder in the behavior of the iterated function is given by Eq. (2), high value for limit will be used.

Besides of using high values of the variable limit, the degradation problem in the behavior of the iterated map remains, ergo a technique to overcome it is needed. Additionally, the module function is applied considering a iterated process defined by 
                        
                           
                              x
                              
                                 n
                                 +
                                 1
                              
                           
                           =
                           m
                           o
                           d
                           
                              (
                              g
                              
                                 (
                                 
                                    x
                                    n
                                 
                                 )
                              
                              ,
                              k
                              )
                           
                        
                     . This map is defined in the natural numbers. The consequence of this strategy could be the evidence of periodicity in the produced pseudorandom sequences. In Fig. 2
                     , two bifurcation diagrams are presented; the left one is the bifurcation diagram for the original sequence produced by Eq. (2) using a limit = 1000. Notice that the mentioned periodicity evidence do not exists. That is, any value of control parameter, μ, at (0.5, 1.0) can be considered and no evidence of periodicity is produced. The right one is the bifurcation diagram using the module function, to determine it using limit = 1000.

Another observation taken from Fig. 2 is that the bifurcation diagram for the original sequence produced by Eq. (2) is not completely dense. To reduce, even more, the degradation in the behavior of the map, other map is proposed, which includes an increasing factor named factor, see Eq. (3). Notice that its definition domain is the interval (0, limit*factor) and the mathematical description of the map as,

                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          h
                                          
                                             (
                                             x
                                             )
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         f
                                                         l
                                                         o
                                                         o
                                                         r
                                                         (
                                                         2
                                                         μ
                                                         x
                                                         )
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                         ≤
                                                         x
                                                         <
                                                         
                                                            
                                                               l
                                                               i
                                                               m
                                                               i
                                                               t
                                                            
                                                            2
                                                         
                                                         *
                                                         f
                                                         a
                                                         c
                                                         t
                                                         o
                                                         r
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                         l
                                                         o
                                                         o
                                                         r
                                                         (
                                                         2
                                                         μ
                                                         x
                                                         −
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               l
                                                               i
                                                               m
                                                               i
                                                               t
                                                            
                                                            2
                                                         
                                                         *
                                                         f
                                                         a
                                                         c
                                                         t
                                                         o
                                                         r
                                                         ≤
                                                         x
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         (
                                                         l
                                                         i
                                                         m
                                                         i
                                                         t
                                                         *
                                                         f
                                                         a
                                                         c
                                                         t
                                                         o
                                                         r
                                                         )
                                                         )
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         <
                                                         l
                                                         i
                                                         m
                                                         i
                                                         t
                                                         *
                                                         f
                                                         a
                                                         c
                                                         t
                                                         o
                                                         r
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                     where xn
                      ∈ (0, limit*factor) and μ ∈ (0, 1).

According to Fig. 2 where limit remains steady at 1000 for both diagrams; if factor is increased from factor = 100 (right bifurcation diagram) to factor = 1000 (left bifurcation diagram), the bifurcation diagram in Fig. 3
                      becomes denser than the Fig. 2 diagram. In similar way, the module function is applied considering a iterated process defined by 
                        
                           
                              x
                              
                                 n
                                 +
                                 1
                              
                           
                           =
                           m
                           o
                           d
                           
                              (
                              h
                              
                                 (
                                 
                                    x
                                    n
                                 
                                 )
                              
                              ,
                              k
                              )
                           
                        
                     .

For a sequence produced by a pseudorandom number generator that will be used in cryptographic or steganographic applications, having satisfactory statistical properties is one of the necessary conditions in order to achieve the security of the system, while it is not sufficient by itself. In this sense, one major issue when chaotic maps are used in cryptographic or steganographic systems is the numerical implementation. Notice that the computers can represent real or natural numbers up to certain precision only. In this way, when the Bernoulli’s chaotic maps are used in a computer, there are problems related with the chaos annulling trap (CAT) that must be considered, because they produce periodicity evidence in the generated sequences [23]. That is, there is at least one initial condition for which chaos is not only sustained but also collapsed, and it can be noticed, that at the value of the parameter for which this occurs. This condition can be achieved as a result of the rounding off done by the computer. Then, the orbits computed can be different, in general, from the theoretical ones; due to it, it is recommended calculations in double precision. As it can be seen in the bifurcation diagram at Fig. 3, the mentioned problem can be overcome in the proposed algorithm if used limit = 1000 and k = 100; regardless of that the chaotic maps have been scaled and quantized. On the other hand, there are other values of initial condition, x
                     0, that produce periodicity evidence, which is called chaos fixed trap (CFT). This condition can be defined calculating the stable fixed points produced by the chaotic maps. The fixed points for the Bernoulli’s chaotic map are x
                     
                        f1 = 0 and x
                     
                        f2 = 
                        
                           1
                           /
                           (
                           2
                           μ
                           −
                           1
                           )
                        
                      with μ ≠ 1/2. These points are attractor (stable) points if 
                        
                           
                              f
                              ′
                           
                           
                              (
                              x
                              )
                           
                           =
                           2
                           μ
                           <
                        
                      1/2.

In the proposed algorithm is considered a secure structure of chaotic steganography applied to images that includes two steps: three one-dimensional chaotic maps employed to select the coordinates of pixels to insert sensitive information in the cover image, and another one-dimensional chaotic map is utilized to mask each word of sensitive information before be included in the cover image. In the proposed steganographic scheme, the LSB embedding process adopts a pseudorandom scan, which is preferred over another scan kind to increase the level of complexity faced by the intruders. This scheme employs a chaotic order for embedding the critical data. Thus, all the pixels of the cover image are not used to conceal the secret data, which in turn affects the payload and the good imperceptibility. The pseudorandom scan is based on three modified Bernoulli chaotic map are used with different definition domain and control parameter. These chaotic maps are used to select pseudorandomly the hiding pixels in the cover image considering that their definition domain corresponds to m, n and 3, respectively in a RGB m × n cover image. Additionally, a chaotic map is used to modify the statistical behavior of the message before hiding it. This last chaotic map provides a cryptic effect for the confidential message before embedding, which leads to the first layer of security. The pseudorandom scan approach increases the security of the critical data embedding in the cover image because only the authorized users have the key to the correct scanning technique employed to select the pixels to embed the critical data. The key is defined by the initial condition and the control parameter used in each chaotic map. When loaded with an initial condition x
                     0 and a control parameter μ. Eq. (3) generates a sequence of words xn
                      for n = 0, 1,.... The 2-tuple (x
                     0, μ) serves as the secret key, k. The key space of Eq. (3) is determined by the number of all possible values for (x
                     0, μ) considering the value of μ for which Eq. (3) exhibits chaotic behavior. Thus, the size of the key space is large, and hence, any exhaustive search through all possible keys depends on the precision representation of the 2-tuple (x
                     0, μ).

The proposed steganographic scheme encrypts the critical data using a basic stream cipher using a chaotic map and pseudo-randomizes the pixel selection employing three chaotic maps for embedding the encrypted critical data.

In this way, the proposed scheme is defined using the following steps:

                        
                           (i)
                           
                              Reception of digital objects: A message and a color image (cover image) are received. The message will be hidden in the color image.


                              Message encryption: The message is encrypted using a sequence obtained from a modified Bernoulli map to diffuse its statistics and smooth its insertion inside the cover image. The encryption algorithm is very simple because it uses a simple XOR function to combine each 8-bits ASCII code message and each 8-bits word in a sequence noise generated from Eq. (3) using limit = 28 and factor = 1000. The encrypted message word has a length equal to 8 bits, and it is divided in two; forming two 4-bits words. The division smooths even more the insertion process because it reduces possible image statistical affectations. The flow chart in Fig. 4
                               describes the modified Bernoulli’s map. The map requires to define the feedback factor μ, the initial value xn
                              [0] for the 
                                 n
                              th sequence; in this application four sequences are generated, and each sequence requires its independent initial value. The parameter stop determines how long the sequence is; this parameter strongly depends on message or load length; finally, limit and factor were previously described.


                              Embedding process: Each encrypted message word is embedded in the least four significant bits of the selected pixel in the cover image; the selection of a pixel considers that the cover image has three dimensions: length, width and depth (RGB). For example, in a 256 × 256 cover image, length = 256, width = 256 and depth = 3.

Notice that Eq. (3) can be used to select the position of a pixel in a color plane, but not to select that plane, because there are only three color planes. 3 is a very small integer, and then Eq. (3) will produce undesirable sequences. To have a pseudo-random selection of the color plane in the cover image, the map considers that limit = 300 and factor = 1000. And the color plane is selected according to next conditions: if xn
                      ∈ [0, limit × factor/3) then the R plane is selected, if xn
                      ∈ [limit × factor/3, 2 × limit × factor/3) then the G plane is selected, and finally, if xn
                      ∈ [2 × limit × factor/3, limit × factor] is the B plane that is selected. The process is depicted in Fig. 5
                     (b), the process requires the sequence generation process to obtain x
                     3; after that, the process requires a parameter that delimits the loop (stop), and it depends on sequence length. The process also requires of limits and factor to generate each limit; after defining each parameter, the flow diagram uses decisions to elaborate a condition previously described, and to generate x
                     3
                     r, which is delimited (0,3) with only integers. The sequences used for length and width selection only require the module operation for their adaptation; therefore the corresponding flow chart is not described.

Once the three dimensions of the cover image were pseudorandomly selected, the lower nibble on each selected pixel is interchanged with one 4-bits word obtained from the sequence derived from the encrypted message. The process is repeated while there are 4-bits words in the encrypted message. The process depicted in Fig 5(a) corresponds to the ciphering process; the process has embedded the sequence generation (x
                     0). Afterward, the sequence is equally divided in two, generating x
                     0
                     h and x
                     0
                     l, the same division is made for the message (msg) generating msgh and msgl. Finally, msgh and x
                     0
                     h are bit-wisely XORed as well as msgl and x
                     0
                     l. With the ciphered message (codh codl) and the selecting sequences correctly adapted (x
                     1
                     r, x
                     2
                     r, x
                     3
                     r), the process catches the cover image (img). The process selects a pixel and deletes the four least significant bits using x
                     1
                     r, x
                     2
                     r and x
                     3
                     r. After the deletion and in a toggling form, the upper or the lower part of the ciphered message is added. The last step is repeated until the message is ciphered completely. The flow chart for the complete process is depicted in Fig. 6
                     .

@&#RESULTS@&#

The method was firstly proved using the ‘baboon.bmp’ as the 256 × 256 cover image. Two different messages were used to test the method m
                     1
                     =“Steganographic Method for Hiding Information” and m
                     2
                     =“Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibu”.

In Fig. 7
                      presents the ‘baboon.bmp’ image (a), its statistical footprint (b), as well as the statistical footprint of the steganograms using m
                     1 (c) and using m
                     2 (d). In each footprint, the upper probability distribution corresponds to the R plane, the middle one corresponds to the G plane and the lower one corresponds to the B plane. The probability distribution of each plane, no matter the steganogram, is similar as it was expected and proposed.

The most important requirements for steganographic systems are stego quality, undetectability and resistance against active attacks. In this way, to evaluate the effectiveness of the proposed stego process has been calculated ten metrics for each digital cover image. In this way, each produced steganogram has been tested, calculating their Entropy (H), Autocorrelation coefficient (Rxx
                     ), Contrast (C), Homogeneity (Hom), Energy (E), Mean Square Error (MSE), Peak Signal to Noise Ratio (PSNR), Maximum Absolute Squared Deviation (MAXERR), Ratio of the squared norm (L2RAT) and Cross-Correlation coefficient (Rxy
                     ). This metrics group has been divided into two subgroups. Namely, the metrics: H, R, C, Hom and E are related to the statistical behavior of the cover images and their respective produced steganograms. The metrics: MSE, PSNR, MAXERR and L2RAT are used to quantify the deviation suffers from the original image after the method with the messages of different length. These measures are defined below.


                        
                           
                              (a)
                              
                                 Entropy (
                                 
                                    H
                                 
                                 ): It is a statistical measure of randomness of some digital image that can be used to characterize the texture of the input image. It is defined by:

                                    
                                       (4)
                                       
                                          
                                             
                                                
                                                   
                                                      H
                                                      =
                                                      
                                                         ∑
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         n
                                                      
                                                      p
                                                      
                                                         (
                                                         
                                                            x
                                                            i
                                                         
                                                         )
                                                      
                                                      l
                                                      o
                                                      
                                                         g
                                                         2
                                                      
                                                      p
                                                      
                                                         (
                                                         
                                                            x
                                                            i
                                                         
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where p(xi
                                 ) is the probability of xi
                                 .


                                 Autocorrelation coefficient (
                                 Rxy
                                 
                                 ): It is the measure of the correlation level between a pixel and its neighbor pixels, considering all the pixels of a cover image. The values of this coefficient can be 1 or 
                                    −
                                 1 for a perfectly positively or negatively correlated image. Its mathematical description is defined by,

                                    
                                       (5)
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         R
                                                         
                                                            x
                                                            y
                                                         
                                                      
                                                      =
                                                      
                                                         ∑
                                                         
                                                            i
                                                            ,
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               (
                                                               i
                                                               −
                                                               
                                                                  ν
                                                                  i
                                                               
                                                               )
                                                            
                                                            
                                                               (
                                                               j
                                                               −
                                                               
                                                                  ν
                                                                  j
                                                               
                                                               )
                                                            
                                                            q
                                                            
                                                               (
                                                               i
                                                               ,
                                                               j
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               σ
                                                               i
                                                            
                                                            σ
                                                            j
                                                         
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where i, j correspond to row and column of selected pixel in the cover image; q(i, j) is the decimal value of the selected pixel; ν is image variance and σ is its standard deviation.


                                 Contrast (
                                 
                                    C
                                 
                                 ): It is a measure of the intensity contrast between a pixel and its neighbor over all pixels in an image. When the value of pixels in an image is the same, the contrast is 0. The mathematical description of the contrast is defined by,

                                    
                                       (6)
                                       
                                          
                                             
                                                
                                                   
                                                      C
                                                      =
                                                      
                                                         ∑
                                                         
                                                            i
                                                            ,
                                                            j
                                                         
                                                      
                                                      ∣
                                                      i
                                                      −
                                                      j
                                                      
                                                         ∣
                                                         2
                                                      
                                                      q
                                                      
                                                         (
                                                         i
                                                         ,
                                                         j
                                                         )
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              


                                 Homogeneity (
                                 
                                    Hom
                                 
                                 ): It is a measure of the closeness of the distribution of elements in the gray level concurrence matrix (GLCM) to the GLCM diagonal. The homogeneity can be defined by,

                                    
                                       (7)
                                       
                                          
                                             
                                                
                                                   
                                                      H
                                                      o
                                                      m
                                                      =
                                                      
                                                         ∑
                                                         
                                                            i
                                                            ,
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            q
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                         
                                                         
                                                            1
                                                            +
                                                            ∣
                                                            i
                                                            −
                                                            j
                                                            ∣
                                                         
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              


                                 Energy (
                                 
                                    E
                                 
                                 ): It is the sum of squared elements in the GLCM, and it will be ‘1’ if the value of each pixel in the image is constant.

                                    
                                       (8)
                                       
                                          
                                             
                                                
                                                   
                                                      E
                                                      =
                                                      
                                                         ∑
                                                         
                                                            i
                                                            ,
                                                            j
                                                         
                                                      
                                                      q
                                                      
                                                         
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                         
                                                         2
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

Distortion between two different images (cover image and steganogram) is measured by basically considering MSE and PSNR. But in this work, other metrics are considered: MAXERR, L2RAT, and Rxy
                        . According to previous tables, when the message is short, the steganograms and the original image are statistically equal. Nonetheless, if the hidden message is getting longer, the statistical behavior of the produced steganogram (modified image) starts to get away from statistical behavior of the original image. The next testes quantify the deviation suffered from the original image after the method is applied to the two messages with different lengths.

                           
                              (f)
                              
                                 Mean squared error (
                                 
                                    MSE
                                 
                                 ): It is used to measure the difference between two digital images divided by the number of elements. It can be defined by,

                                    
                                       (9)
                                       
                                          
                                             
                                                
                                                   
                                                      M
                                                      S
                                                      E
                                                      =
                                                      
                                                         1
                                                         n
                                                      
                                                      
                                                         ∑
                                                         i
                                                      
                                                      
                                                         ∑
                                                         j
                                                      
                                                      
                                                         
                                                            (
                                                            
                                                               x
                                                               
                                                                  i
                                                                  ,
                                                                  j
                                                               
                                                            
                                                            −
                                                            
                                                               y
                                                               
                                                                  i
                                                                  ,
                                                                  j
                                                               
                                                            
                                                            )
                                                         
                                                         2
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where x
                                 
                                    i, j
                                  is the pixel value of the steganogram (modified image) in row i and the column j and y
                                 
                                    i, j
                                  is the pixel value of the original image.


                                 Peak signal-to-noise ratio (
                                 
                                    PSNR
                                 
                                 ): It tests the difference between the cover image and its respective steganogram. PSNR is an objective criterion to evaluate the quality of an image, it is widely used to measure the quality of stegoimage, and it is defined in decibels (dB). Its mathematical description is defined by,

                                    
                                       (10)
                                       
                                          
                                             
                                                
                                                   
                                                      P
                                                      N
                                                      S
                                                      R
                                                      =
                                                      10
                                                      l
                                                      o
                                                      
                                                         g
                                                         10
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  2
                                                                  B
                                                               
                                                               −
                                                               1
                                                            
                                                            
                                                               
                                                                  M
                                                                  S
                                                                  E
                                                               
                                                            
                                                         
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where B represents the bits per pixel.


                                 Maximum absolute squared deviation (
                                 
                                    MAXERR
                                 
                                 ): It is the maximum absolute squared deviation of the original image respect to the steganogram (modified image). It compares each pixel of the original image with the median pixel of the steganogram, and it stores the absolute difference powered by 2. Finally, the greatest stored difference is the result.

                                    
                                       (11)
                                       
                                          
                                             
                                                
                                                   
                                                      M
                                                      a
                                                      x
                                                      e
                                                      r
                                                      r
                                                      =
                                                      m
                                                      a
                                                      x
                                                      (
                                                      ∣
                                                      
                                                         x
                                                         
                                                            i
                                                            ,
                                                            j
                                                         
                                                      
                                                      −
                                                      m
                                                      
                                                         (
                                                         Y
                                                         )
                                                      
                                                      
                                                         ∣
                                                         2
                                                      
                                                      )
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where x
                                 
                                    i, j
                                  is the pixel value of modified image and m(Y) is the median of original image.


                                 Ratio of the squared norm (
                                 
                                    L2RAT
                                 
                                 ): It is the ratio of the squared norm of a modified image (steganogram) respect to the original image.

                                    
                                       (12)
                                       
                                          
                                             
                                                
                                                   
                                                      L
                                                      2
                                                      r
                                                      a
                                                      t
                                                      =
                                                      
                                                         
                                                            
                                                               
                                                                  ∑
                                                                  i
                                                               
                                                               ∑
                                                               j
                                                               
                                                                  (
                                                                  
                                                                     x
                                                                     
                                                                        i
                                                                        ,
                                                                        j
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  ∑
                                                                  i
                                                               
                                                               ∑
                                                               j
                                                               
                                                                  (
                                                                  
                                                                     y
                                                                     
                                                                        i
                                                                        ,
                                                                        j
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where x
                                 
                                    i, j
                                  is the pixel value of modified image in i and j and y
                                 
                                    i, j
                                  is for original image.


                                 Correlation coefficient (
                                 Rxy
                                 
                                 ): It is obtained by dividing the covariance of the two images, X and Y, by the product of their standard deviations. Its description is defined by,

                                    
                                       (13)
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         R
                                                         
                                                            x
                                                            y
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            
                                                               ∑
                                                               i
                                                            
                                                            
                                                               ∑
                                                               j
                                                            
                                                            
                                                               (
                                                               
                                                                  x
                                                                  
                                                                     i
                                                                     ,
                                                                     j
                                                                  
                                                               
                                                               −
                                                               
                                                                  x
                                                                  ¯
                                                               
                                                               )
                                                            
                                                            
                                                               (
                                                               
                                                                  y
                                                                  
                                                                     i
                                                                     ,
                                                                     j
                                                                  
                                                               
                                                               −
                                                               
                                                                  y
                                                                  ¯
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  (
                                                                  
                                                                     ∑
                                                                     i
                                                                  
                                                                  
                                                                     ∑
                                                                     j
                                                                  
                                                                  
                                                                     
                                                                        (
                                                                        
                                                                           x
                                                                           
                                                                              i
                                                                              ,
                                                                              j
                                                                           
                                                                        
                                                                        −
                                                                        
                                                                           x
                                                                           ¯
                                                                        
                                                                        )
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                               
                                                                  (
                                                                  
                                                                     ∑
                                                                     i
                                                                  
                                                                  
                                                                     ∑
                                                                     j
                                                                  
                                                                  
                                                                     
                                                                        (
                                                                        
                                                                           y
                                                                           
                                                                              i
                                                                              ,
                                                                              j
                                                                           
                                                                        
                                                                        −
                                                                        
                                                                           y
                                                                           ¯
                                                                        
                                                                        )
                                                                     
                                                                     2
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

where 
                                    
                                       x
                                       ¯
                                    
                                  is the mean of the modified image (steganogram), x
                                 
                                    i, j
                                  is the value of the pixel in i, j; 
                                    
                                       y
                                       ¯
                                    
                                  is the mean of the original image.

The results for MSE, PSNR, MAXERR, L2RAT and the correlation coefficient are shown in Tables 4
                         and 5
                         for each color plane in the produced steganograms.

In Table 4, the MSE values are small, while the PSNR values are high; these conditions reflect that both compared images are similar. Meantime, the same measurements shown in Table 5 are quite distant. The MSE is almost three orders of magnitude greater, and PNSR is almost two orders lower. Other metrics are the correlation and ratio of the squared norm; for the m
                        1 case, these metrics are ‘1’ then both images are too similar; though, in the m
                        2 case, there are different values, appointing a difference between the images.

The previous tables gave a statistical outlook for the proposed method; however, a more sensitive measure is how long can be the messages that are hidden by it. Table 6
                         was elaborated using messages of different lengths, and then comparing them to the recovered ones. Table 6 shows three metrics; the first one is the number of errors in recovered message from original one. The second metric is the error percentage in comparison with the whole message. The third metric is the insertion ratio, obtained from the message length and the image dimensions. Some authors also refer this metric as ‘Capacity’ and its units are BITs/pixel.

The method is successful hiding less than one hundred characters but longer messages present errors, this negative effect is caused because the digital degradation of the sequences produced by the Bernoulli map. One of the parameters for noise generation is the size of the image, as ‘baboon.bmp’ image is 256 × 256 then a good way to fix degradation is using a bigger image like a ‘barbara.bmp’ image, which has 720 × 576 pixels.

The used ‘barbara.bmp’ image is presented in Fig. 8
                        (a), and its corresponding statistical footprint in Fig. 8(b). The image was used to carry m
                        1, generating an image that statistical appears in Fig. 8(c); also, the image also hides m
                        2, and its statistical is Fig. 8(d).

The same tests were applied to the new image; their results are shown in Tables 7
                        
                        
                        
                        
                        –12
                        . The Tables 7–9 show that original image and the steganogram with message m
                        1 are statistically identical. Despite the length of m
                        20, its steganogram presents statistically similar results; this fact is produced after image dimensions. The bigger the images are, the less affected they are when longer messages are used. The previous statement can be confirmed comparing these results with the obtained ones in Tables 1–3. When ‘barbara.bmp’ is loaded with m
                        2, the entropy for the red layer is increased in 0.0002, very similar to ‘baboon.bmp’ where the entropy for the same layer is increased in 0.0001. Otherwise, the other parameters for ‘barbara.bmp’ with m
                        2 practically do not vary and for ‘baboon.bmp’ do.

The results in Tables 10 and 11 confirm that the bigger the cover image is, the less important affectation. The difference between of MSE is only one order, and also PNSR is smaller in Table 11 than in Table 10. Both Tables have correlations of ‘1’ for every color plane; on the other hand, the ratio of the squared norm for the steganogram with m
                        1 is ‘1’ and with m
                        2 is 1.0001. The relationship between image dimensions and message length is confirmed by the comparing the obtained results in Tables 4 and 5.

Finally, the error verification; Table 12 shows the errors that the method has; the error is estimated by using different length messages. The results are better than those shown in Table 6; however, using Tables 6 and 12, results can define a real limit for the message’s length to be hidden by the proposed method. For a free-errors steganographic procedure, the message must be at most 100 characters or 800 bits.

According with Kerckhoffs’ principle, the security of the proposed algorithm will depend only on the secrecy of the key used in the cryptographic/steganographic process realized to hide the sensitive information, and not on the secrecy of the algorithm. As in other cases, in the proposed steganographic/cryptographic algorithm, the key space is 2
                           n
                         considering that n is the key length in bits. In this case, n = 512, because four pseudorandom number generators are used and it is assumed that each chaotic map uses two variables with a 64-bits length. These variables are a control parameter, μ, defined in the real numbers at (0, 1), and an initial condition, x
                        0, defined in the natural numbers. Notice that in the four chaotic maps μ can only take values in top half of the definition interval, then only half of the possible values of μ can be considered. If each value of μ can be represented by 64 bits, only 263 possibilities will be considered in the process. Also, notice that x
                        0 is defined in the natural numbers and it can be represented using 64 bits. With these clarifications, it may be noted that it is sufficient to prove n = 4 × 63 + 4 × 64 = 508 possibilities, since μ can only take values in the top half of the interval. A brute force attack systematically tries every possible key and it can violate to the system over time as CPU speeds increase [24].

The proposed steganographic method has been compared to the four similar works based on chaotic maps, to observe its quality. Table 13
                      shows the results of this comparison. Bandyopadhyay et al. [17] propose to hide an image of 64 × 64 pixels; the image is correctly embedded and recovered by the author, presenting its corresponding statistical results. In the second work, Arun & George used diverse images to demonstrate their method value; however, their results do not specify particular information about the cover image or the embedded information. The third article is proposed by Anees et al., this particular work was the starting point for our method. It shows a baboon.jpg’ image and its statistical separated by layers, but they do not mention message length. Finally, Saeed et al. use particular images; and for message length, they hide a different size’ message. In general, authors do not specify message characters or any other information for the statistical results; producing a gap to compare them with new methods.

Maximum embedded load in the proposed method was determined in 100 characters; however, it is the responsibility of the user how much wants to affect carry image and it was presented the affectation tendency respect to the length of embedded load. The proposed method can be used to hide an image; however, prior to the insertions process, the sensitive image (image to be hiding) must be translated to a character sequence as in a text file.

@&#CONCLUSIONS@&#

For increasing chaotic behavior, a strategy that uses the module function was implemented; the behavior of generated sequences was evaluated and ratified using bifurcation diagrams. The proposed steganographic method encrypts the sensitive data using a basic stream cipher using a chaotic map and pseudo-randomizes the pixel selection employing other two chaotic maps for embedding the encrypted sensitive data. The proposed method was used in ‘baboon.bmp’ image using two messages with different length; the three different images (original and two steganograms) were statistically evaluated. The evaluation methods can be separated in two; the first block of tests individually evaluates each image (original image and produced steganograms) and the second block of tests compares the original images with their respective steganograms. In the tests applied to images, the obtained results are similar for the original image and two steganograms although, steganogram using the message m
                     2 shows results slightly different, regarding the original images. On the other hand, the results obtained from MSE, PNSR and MAXERR are significantly different. That is, the embedded message m
                     2 affects the cover image more than the embedded message m
                     1, and the affectation degree depends on the image dimensions. If the results for the proposed work are compared with other works’ results; the proposed stegano-method hiding m
                     1 has PSNR values among the highest ones with respect to the cited work. Additionally, the PSNR values for the stegano-method hiding m
                     2 they are maintained in acceptable levels. Additionally, the work presents how load length degrades statistically to the steganogram; no other reviewed works report such degradation. Unfortunately, not all works use the same test subject, consequently certain parameters were selected to made comparison. The statistical criteria were MSE and PSNR parameters; concluding that our work is statistically similar to reviewed ones but easier to generate.

@&#ACKNOWLEDGMENTS@&#

Technical support from G. Delgado-Gutiérrez and J. L Pichardo-Méndez (IPN) is gratefully acknowledged. L. Palacios-Luengas (CVU-372164) thanks for the scholarship provided by CONACYT–México. R. Vázquez-Medina thanks financial support of Secretaría de Investigación y Posgrado at Instituto Politécnico Nacional (IPN-México) through the project number SIP IPN 20150316.


                     
                        
                     
                     
                        
                     
                  

@&#REFERENCES@&#

