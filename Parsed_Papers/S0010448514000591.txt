@&#MAIN-TITLE@&#Simplification of feature-based 3D CAD assembly data of ship and offshore equipment using quantitative evaluation metrics

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Shipyards need simplified equipment 3D CAD assembly data for system-level design.


                        
                        
                           
                           Three simplification operations applicable for 3D CAD assembly data are developed.


                        
                        
                           
                           Evaluation metrics considering multiple simplification criteria are proposed.


                        
                        
                           
                           The evaluation metrics allow discriminatory priority of specific criteria.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

3D CAD assembly data

Simplification

LOD

Equipment catalog

Evaluation metrics

Ship and offshore plants

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

In the shipbuilding industry, three-dimensional (3D) CAD systems have been introduced and are widely used in the process of design, production, and delivery  [1]. Using these systems, it becomes possible to check and modify design results in real time. For example, connections and interference among different pieces of equipment can be checked in advance before installing them. Moreover, building a system database allows many designers to share information and receive feedback from each other, thus reducing the number of errors and improving the productivity of the entire process  [2]. This has led to a reduced production time, and has significantly increased sales.

In general, equipment suppliers create 3D CAD data with a high level of detail (LOD) to manufacture equipment. Shipyards, on the other hand, focus mainly on installing the equipment that is provided by equipment suppliers. From the view point of system-level design by shipyards, detail shape of equipment is not important but exact port and principle dimension data should be provided. Due to this reason, shipyards need 3D CAD data that has been relatively simplified compared to the original data, and add additional non-geometric information such as ports, principal dimensions, and detailed specifications to the simplified 3D CAD data. Besides, the LOD in simplified 3D CAD data differs depending on the purpose of its use. Fig. 1
                     , for example, shows the same engine model with different LODs. Moreover, since a ship or an offshore plant is a huge system consisting of millions of parts  [3,4], storing simplified 3D CAD data in a shipbuilding 3D CAD system has benefits in data storage and computing speed.

To create such simplified 3D CAD data, shipyards mostly subcontract the modeling work to a small company, whose modelers then create the simplified data manually based on a limited number of 2D drawings. These modelers need to follow the modeling requirements given by the shipyard, such as preserving the ports and the principal dimensions of the equipment. This practice involves extra time and expense for shipyards, and the resulting data can differ from modeler to modeler. These problems could be solved if there were a standard method, to be implemented in a computer program, for simplifying the 3D CAD data that is created by equipment suppliers to the LOD that shipyards require. Equipment suppliers usually create feature-based 3D CAD assembly data. Thus, a method of simplification has to consider not only such data types, but also the modeling requirements of the shipyard. Ultimately, there is a need for a standard, computerized method for adjusting the LOD of 3D CAD data to save time and efforts. The resulting model should then be exported to various formats without a modeling history, because equipment suppliers hesitate to give shipyards their detailed 3D CAD data for fear of the loss of intellectual property.

To simplify 3D CAD data, a simplification operation and evaluation metrics for the geometric elements of the 3D CAD data are necessary. The simplification operation removes selected model elements including vertices, faces, or features. Evaluation metrics measure the priority of the model elements, and select low priority model elements to be removed. Therefore, it is important to establish the appropriate evaluation criteria and metrics that can be used to evaluate the relative importance of model elements  [5]. In previous studies  [6–8], geometric information was widely used as simplification criteria. Only a few studies have been carried out that consider non-geometric information, such as the modeling requirements as related to a specific industry, or the characteristics of an assembly model.

In this research, we review related studies in Section  2. In Section  3, we analyze the requirements for the simplification of 3D CAD assembly data, and propose a new set of evaluation metrics. The detailed procedure for the proposed simplification method is described in Section  4. The experimental results that were obtained with test cases in which the method was applied are described in Section  5. Finally, we present our conclusion in Section  6.

Many methods to simplify and reduce 3D CAD data have been proposed in earlier studies, and these can be divided into the following three approaches according to the data type: polygon-based  [9–12], b-rep-based  [13–15], and feature-based approaches  [1,6–8], as shown in Fig. 2
                     . The polygon-based approach focuses mainly on reducing the number of triangles in a mesh that does not entail much shape deformation. The b-rep-based approach simplifies shapes by using their topological information, and can be classified into two methods. In dimensional reduction methods, thin solids are transformed to faces, or long solids like a cylinder, and are transformed to edges. In feature suppression methods, shapes are simplified by suppressing specific local features that do not greatly affect engineering analysis (such as a round, a fillet, or a hole). In the feature-based approach, shapes are simplified by incrementally suppressing the low importance features of 3D CAD data. While the feature suppression of b-rep based simplification can be applied to only limited features, the feature suppression of feature-based simplification can be applied to any features.

In the field of computer-aided engineering (CAE), the feature-based approach offers advantages over other approaches, because a feature is a more important modeling unit than dots, lines, and faces, so that it can provide more meaningful results. The present study can be considered a feature-based approach, because equipment suppliers create feature-based 3D CAD assembly data using mechanical CAD systems.

Unlike polygon- and b-rep-based data, feature-based data has a modeling history, such as a model tree, modeling order, and feature information. Therefore, previous studies have utilized and manipulated the modeling history to simplify the target model. Lee et al.  [6] proposed a feature rearrangement method that considers the effective volume of features to provide multi-resolution modeling of the CAD part model. This method is based on the mathematical premise that the union and subtraction of Boolean operations are not commutative. This method guarantees that the original model and the rearranged model have the same shape, thus allowing features to be rearranged arbitrarily. Kang et al.  [1] suggested evaluation metrics for the simplification of 3D CAD part data for ship outfitting and offshore plant equipment. They considered not only geometric information such as volume, but also non-geometric information such as the modeling requirements of shipyards, e.g., port identification and the preservation of outer boundaries. However, they did not address the simplification of 3D CAD assembly data.

In the simplification of 3D CAD assembly data, internal features those are not visible from outside are the first to be removed. Kanai et al.  [16] detected invisible features by prerendering the models from multiple view directions and reading the rendered results from the frame buffer. Yu et al.  [17] pre-rendered the assembly model from multiple view directions to detect and remove the invisible features of current-assembled-state assembly model. In the present study, a method to project rays from multiple directions to detect internal features was adopted. The way ray-casting is used in this study is basically similar to the other studies  [16,17] on detecting internal features.

SolidWorks (Defeature command)  [18] of Dassault systemes, spGate  [19] of Armonicos, CADdoctor  [20] of Elysium are commercial systems providing simplification functions of 3D CAD model. Besides, ACIS  [21], which is a commercial 3D modeling kernel provides simplification functions for the removal of rounds, chamfers, and holes. These systems can be classified according to simplification methods. SolidWorks uses a feature-based method which removes features in a feature tree, whereas spGate and CAD Doctor use a b-rep-based method which detects local features including round, chamfer, and boss from the b-rep model and removes them.

The commercial systems do provide simplification operations but not evaluation metrics. Due to this limitation, following problems arise. First, users have to find and determine features to be removed because the systems do not calculate the importance of features quantitatively. Therefore, users have to interact frequently with the simplification systems. Furthermore, objects that are selected to be removed are different depending on users. Second, the importance of a feature should be measured by considering all simplification criteria. However, the simplification systems do not support it; they only find features satisfying one criterion at a time. Due to this reason, users need to decide relative importance among features on their own. For example, if evaluation metrics does not exist, users have to compare a feature with high volume which is not located at the outer boundary to another feature with low volume which is located at the outer boundary. Third, the commercial systems do not support the evaluation metrics which is geared for a specific application area, although the importance of a feature differs depending on its application area. Fourth, it is hard to create a simplified 3D CAD model with a required LOD value with the commercial systems. For this, users have to check the LOD of a 3D CAD model continuously by interacting with the system. The proposed system in this study, on the other hand, can automatically create a simplified 3D CAD model with the desired LOD value. Table 1
                      compares the present study with the commercial tools.

The requirements for the simplification of 3D CAD data for ship and offshore plant equipment were defined by conducting interviews with shipyard employees. The purpose of the interviews was to investigate current practices of equipment 3D CAD data simplification in the shipbuilding industry, and to derive user requirements for automatic simplification of the process. The interviewees were department heads in charge of constructing equipment catalogs, and information system executives at the “D” Shipbuilding Company in Korea.

First of all, the required LOD of equipment 3D CAD data differs with respect to the type of vessel. Offshore plants have very confined space compared to conventional ships. Therefore, equipment transport, installation, and operation should be designed accurately. For this, equipment CAD data with a higher LOD is required. In this study, a 3D CAD model of the equipment was adjusted, resulting in a high LOD for an offshore plant and a low LOD for ordinary ships.

Second, from the perspective of design and construction of ships and offshore plants, the interconnection relationships among equipment are of greater priority than the detailed shapes of the equipment. Interconnection relationships are represented by ports including nozzles and connectors. Therefore, it is necessary to consider ports as an important simplification factor.

Third, in the shipbuilding process, shipyards do not manufacture equipment; rather, they determine how to transport, place, and install equipments delivered from suppliers. To implement this design, manufacturability and proper assembly should be ensured by checking interference and collision between equipments and materials in order to reduce design errors and design modifications. For an accurate collision check, the outer shape of equipments should remain unchanged as the 3D CAD data simplification process proceeds.

Fourth, equipment manufacturers use 3D mechanical CAD systems. These systems support geometric modeling but do not have capabilities for engineering data management. They use a product data management (PDM) system for this task. On the other hand, the equipment catalog of a 3D shipbuilding CAD system contains port and specification data as well as simplified 3D CAD data. Therefore, merging 3D CAD data and nongeometric data is required, in addition to the simplification of 3D CAD equipment data, in order to construct an equipment catalog.

Fifth, the purpose of 3D CAD data simplification is to reduce the size of 3D CAD data. Ships and offshore plants consist of a tremendous amount of equipments. However, computing power is limited. Therefore, the size of CAD data needs to be as small as possible.

Finally, equipment suppliers deliver their design results with 3D CAD part data for materials or 3D CAD assembly data for equipment. Therefore, simplification of the 3D CAD assembly data is needed as well as the simplification of the 3D CAD part data.

An important point discovered in this process is that nongeometric factors such as ports and outer boundaries should be considered, as well as geometric factors, during the simplification of equipment 3D CAD data. Based on the interviews, we propose quantitative evaluation metrics that consist of six different criteria: feature volume, ports, outer boundaries, assembly constraints, internal features, and adjacent features. Detailed information regarding these six criteria is presented in Section  3.2. Then, based on these criteria, the quantitative evaluation metrics are defined in Section  3.3.

A feature-based model consists of many features. Additive features such as pads and shafts add a certain volume to a model, while subtractive features such as pockets and holes remove a certain volume. Every feature has its own volume that has been widely used as a simplification factor in previous studies; this is particularly the case for subtractive features. This method can ensure the simplicity of the simplification algorithm because the volume is obvious and represents a fixed value. In general, a model is created by creating the large additive features first, and then adding or removing the small features afterwards. Therefore, it is desirable for features to be removed starting from the smallest volume and proceeding to the largest volume to preserve the outer shape of the original model as long as possible. To do this, we determine the rankings of all the features in the assembly model by calculating and prioritizing all of the features’ volumes and use it as one of the simplification criteria.

Ships and offshore plants contain a large number of pipes and much hydraulic equipment. A port, such as a nozzle, makes a connection between pieces of equipment by permitting fluid to flow through it, as shown in Fig. 3
                           (a). Ports have a higher priority than other parts because they are related to connections. In this regard, ports need to be identified and maintained when creating simplified 3D CAD data, even though they represent a relatively small volume as compared to other parts. Therefore, we consider ports as one of the simplification criteria. Meanwhile, equipment suppliers can identify and save the port information in their specifications or 3D CAD data. Thus, we assumed that port information is extracted from equipment specification data.

In the production phase, shipyards install a lot of equipment that has been manufactured by suppliers in the designated locations. Therefore, it is necessary for designers to ensure that pieces of equipment do not interfere or collide with one another prior to installation. To avoid such collisions in advance, during the creation of 3D CAD data, designers need to consider the components located at the outer boundaries of equipment as an important modeling factor. Fig. 3(b) illustrates the concept of components located at the outer boundaries. As we can see, then, the outer boundaries represent a fundamental dimension of a piece of equipment, and they therefore need to be kept during the simplification process. Therefore, the outer boundaries are also regarded as a simplification factor in this study.

Assembly modeling is widely used in a variety of manufacturing fields, including offshore equipment, and most mechanical CAD systems adopt assembly modeling. To create an assembly model, assembly constraints are necessary to build up many parts that have already been created by part modeling. By considering assembly constraints, we can connect two parts by restricting the location, direction, and movement of one part with respect to the other part. There are many types of assembly constraints; Table 2
                            shows the most general types of assembly constraints.

In general, constraints are applied to two features within two different parts, so they are important in terms of connectivity within an assembly. Therefore, the features referred to as constraints should be maintained during the simplification process, which is why we also consider constraints as simplification criteria. In this study, only contact and coincidence constraints are used because they are sufficient to build up an assembly model. Fig. 4
                            illustrates the principles of contact and coincidence constraints.

When several parts are assembled together, some parts can be hidden from view by other parts, from every perspective. In this study, the term “internal features” refers to such hidden parts or subordinate features. As mentioned earlier, ports and outer boundaries are critical information when modeling a 3D equipment model, while other parts of lesser importance are simplified or removed. Typically, internal features are removed because they have nothing to do with connections or possible collisions between equipments. Fig. 5
                            shows the two types of internal features defined in this study.

We can see, then, that an algorithm that can detect and remove the internal features of an assembly is needed. Many hidden surface removal (HSR) techniques have been developed in the field of computer graphics  [22–24]. In the present study, we applied ray casting  [25] to detect internal features; this method will be described in detail in Section  4.2.5.

Ports, outer boundaries, and constraints are important criteria from the view point of simplification. They are represented by features in feature-based 3D CAD data and have to be maintained longer than other features during the simplification process. Adjacent features are the features that are adjacent to features related to ports, outer boundaries, and constraints. Therefore, features adjacent to ports, outer boundaries, and constraints must be considered more important than those that are not adjacent to these important features. This enables a model’s connectivity to last longer in the simplification process. Only additive features are considered as adjacent features, because additive features actually have an impact on the model’s connectivity, unlike subtractive features. As shown in Fig. 6
                           , the first adjacent features are directly connected to the constraint features, and the second adjacent features are connected to the first adjacent features. We do not consider features beyond the second adjacent features.

The LOD in simplified 3D CAD data differs depending on the purpose of its use. Therefore, it is important that users easily simplify equipment 3D CAD data to the LOD that users require. For this, controlling the LOD of 3D CAD data progressively is necessary. Existing systems in Table 1 do not support progressive LOD control. For the progressive LOD control in the feature-based simplification method, evaluation metrics that correspond to the quadratic error metrics in the polygon-based simplification method should be developed.

Based upon the above six criteria, we now propose the following quantitative evaluation metrics (1). The detailed notations for all terms are described in Table 3
                        . The evaluation metrics calculates the importance of features of 3D CAD model considering multiple simplification criteria. For this, we adopted the multi criteria decision making method  [26] based on weighting factors. In addition, the metrics can reflect the discriminatory priority or exclusion of features based on specific criteria. 
                           
                              (1)
                              
                                 
                                    
                                       F
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             i
                                          
                                       
                                       ⋅
                                       
                                          (
                                          
                                             
                                                P
                                             
                                             
                                                i
                                             
                                          
                                          +
                                          
                                             
                                                C
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 (2)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          P
                                       
                                       
                                          a
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          P
                                       
                                       
                                          b
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          P
                                       
                                       
                                          c
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                 
                              
                              
                                 (3)
                                 
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          w
                                       
                                       
                                          a
                                       
                                    
                                    ⋅
                                    
                                       
                                          C
                                       
                                       
                                          a
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          b
                                       
                                    
                                    ⋅
                                    
                                       
                                          C
                                       
                                       
                                          b
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          c
                                       
                                    
                                    ⋅
                                    
                                       
                                          C
                                       
                                       
                                          c
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          d
                                       
                                    
                                    ⋅
                                    
                                       
                                          C
                                       
                                       
                                          d
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                 
                              
                              
                                 (4)
                                 
                                    
                                       
                                          w
                                       
                                       
                                          a
                                       
                                    
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          b
                                       
                                    
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          c
                                       
                                    
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          d
                                       
                                    
                                    =
                                    1
                                    ,
                                 
                              
                           
                        
                     

We can calculate the importance value of every feature and then prioritize it according to those values by using these metrics. If it is determined that a feature is an internal feature, 
                           
                              
                                 N
                              
                              
                                 i
                              
                           
                         will be 
                           −
                           1
                        , making 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           <
                           0
                        . 
                           
                              
                                 P
                              
                              
                                 i
                              
                           
                         of the port, outer boundary, and constraint will be 3, 2, and 1, respectively, making 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           >
                           1
                        ; otherwise 
                           
                              
                                 P
                              
                              
                                 i
                              
                           
                         is 0. 
                           
                              
                                 C
                              
                              
                                 i
                              
                           
                         will be above 0 and below 1 because the sum of 
                           
                              
                                 w
                              
                              
                                 a
                              
                           
                           ,
                           
                              
                                 w
                              
                              
                                 b
                              
                           
                           ,
                           
                              
                                 w
                              
                              
                                 c
                              
                           
                           ,
                           
                              
                                 w
                              
                              
                                 d
                              
                           
                         is 1.


                        Fig. 7
                         shows an example of values calculated using these metrics. It is possible to separate features into three sections in terms of their values, 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           <
                           0
                        , 
                           0
                           <
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           <
                           1
                        , 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           >
                           1
                        . By assigning discriminative values to features, these metrics can guarantee that the smaller value a feature receives, the shorter that feature will last in the simplification process. In this way, this approach can ensure that a reasonable model at intermediate LOD will be obtained. For example, after the removal of all the internal features, the intermediate model will be almost similar to the original model in terms of its outer shape.

Contrary to existing studies, the evaluation metrics proposed in this study make it possible to simplify 3D CAD assembly data progressively to meet the LOD value that users require by considering multiple simplification criteria (feature volume, ports, outer boundaries, assembly constraints, internal features, and adjacent features). The evaluation metrics could assign exclusive and discriminatory value to model elements of 3D CAD assembly data. For example, a feature representing an internal feature would be removed at a high LOD regardless of the values calculated by other criteria since it falls into a negative area, whereas a feature representing a port would remain at a low LOD regardless of the values calculated by other criteria.

Equipment suppliers hand over 2D drawings or B-rep model of their equipment deliverables to shipyards. However, they do not want to provide feature-based model which contains a lot of design knowledge. Therefore, it is practically impossible for shipyards to simplify the feature-based model of equipment suppliers.

For this reason, this study assumes the following application scenario, as shown in Fig. 8
                        . Shipyards, firstly, provide the simplification system proposed in this study. Equipment suppliers, then, simplify equipment 3D CAD assembly data to meet the LOD value shipyards require by utilizing the simplification system. Finally, equipment suppliers hand over the simplified 3D CAD data after merging with nongeometric information (port, specification) and saving it as a neutral catalog format. This scenario will be beneficial for both of them because equipment suppliers do not have to reveal their feature-based 3D CAD assembly data which includes their design knowledge, and shipyards do not have to create simplified 3D CAD data manually by subcontracting the remodeling work. In this application scenario, equipment suppliers are responsible for simplifying 3D CAD data. However, it is not a considerable burden on them because they can do it automatically with the simplification system.

The whole process for the simplification of 3D CAD data is shown in Fig. 9
                        . The steps where users have to be involved are marked in gray. Users import neutral 3D CAD assembly data and nongeometric data first, and input weighting factors for each simplification criteria and the desired LOD value. Then, the simplification system automatically calculates the importance of all features based on the evaluation metrics and removes less important features until it reaches the desired LOD value. A detailed description of this process is given in Sections  4.2.1–4.2.7.

This method has advantages in time for the simplification comparing with other commercial systems where users need to search features to be removed. Moreover, our method can ensure the same simplification result regardless of users’ skill since simplification system automatically determines features to be removed with its evaluation metrics.

Equipment suppliers use many types of mechanical CAD systems, such as CATIA and SolidWorks, and these CAD systems use different data formats. It is difficult to support various types of file formats because each format requires an interface that connects it to the system. Therefore, we used a neutral format to lessen the burden of developing the system. A neutral format offers a number of advantages when it comes to data exchange among multiple 3D CAD systems  [27].

Assembly data consists of geometric information such as model trees, constraints, and geometry data, as shown in Fig. 10
                           . Model trees and constraint data are defined in eXtensible Markup Language (XML) format  [28], because it is a standardized document format that offers flexibility in defining structure. We used the ISO 10303 STEP AP 203 format  [29] (.stp) for geometry data, since it is an international standard that is widely used. Model tree data consists of components, positions, and subordinate features. Constraint data consists of names, types, and target part and feature information. Geometry data is linked to the model tree data.

There are three types of non-geometric information–port data, outer boundary data, and specification data–that are also defined in XML format, as shown in Fig. 11
                           . Port data consists of names, types, positions, and target part and feature information. Outer boundary data consists of target part and feature information. Specification data consists of basic information, categories, and properties.

In the case of ports, it is assumed that port data is extracted from different systems, and stored in the format defined in this study. Equipment suppliers not only use mechanical 3D CAD systems for shape design, but also use PDM system for managing all the information on equipment design. Therefore, it is possible to extract port data from the database of PDM system automatically. Port data could also be found in the 2D drawings, which are handed over from equipment suppliers to shipyards. However, it is more complicated to obtain port data from 2D drawings.

The volume of each feature is calculated after the geometry data has been imported. To calculate the volumes, we use the specific API function, API_MASS_PROP, which is provided by the modeling kernel, ACIS. After calculating the volumes, all features are sorted in descending order and ranked in that order. To obtain 
                              
                                 
                                    C
                                 
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                           , the ranking of each feature is divided by the total number of features.

It is assumed that features corresponding to outer boundaries are either extracted from different systems or automatically detected. Outer boundary data is stored in the format defined in this study. In order to find features those are located at, or are in contact with the outer boundary automatically, bounding box 1 that is partially in contact with the external surfaces of equipment 3D CAD assembly data is created. The bounding box of 3D CAD assembly data was evaluated by using the API_TIGHT_BOX function of ACIS. Bounding box 1 is then slightly expanded to form bounding box 2. Boolean subtraction of bounding box 1 from bounding box 2 creates bounding box 3 with a shell-like thickness. Then, a clash test is performed on bounding box 3 with each feature.

It is necessary to determine the features that are adjacent to ports, outer boundaries, and constraints. To do so, first, we define the information regarding ports, outer boundaries, and constraints in XML format. After the non-geometric information has been imported, the features representing ports are designated as ports in the system; it is at this point that 
                              
                                 
                                    P
                                 
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                           , 
                              
                                 
                                    P
                                 
                                 
                                    b
                                 
                                 
                                    i
                                 
                              
                           , 
                              
                                 
                                    P
                                 
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                            are determined. Next, a feature clash test should be performed twice to find out which feature clashes with ports first, which clashes second, and so on. To perform clash testing, we used the specific API function, API_CLASH_BODIES, in ACIS. From the feature clash testing, lists of the first and second adjacent features are determined with respect to ports, etc., and 
                              
                                 
                                    C
                                 
                                 
                                    b
                                 
                                 
                                    i
                                 
                              
                           , 
                              
                                 
                                    C
                                 
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                           , 
                              
                                 
                                    C
                                 
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                            are then determined as being 2/3, 1/3, or 0. Fig. 12
                            shows the sequence of the feature clash testing.

To detect the internal features, we applied ray casting as one of the HSR techniques. Ray casting is a method that fires a ray from a certain point in a certain direction for a pixel to discover the nearest object. If the ray hits the nearest object, then the pixel shows that object. Fig. 13
                           (a) illustrates the concept of the ray casting. To perform ray casting, we used the specific API function, API_RAY_TEST_ENTS, which is provided by ACIS. One disadvantage of ray casting is that it is a view-dependent method. Because we defined internal features as parts that are hidden by other parts from every viewpoint, we projected rays from 14 directions (Fig. 13(b)) for this approach to be view-independent when used with a stationary object. We designed two ways of doing this: one is to fire rays at the object from the outside, and the other is to fire rays from the object to the outside. These two approaches are shown in  Fig. 13(c) and (d), respectively.

In the first approach, one bounding box that encloses the entire assembly is created. Next, 
                              n
                              ×
                              n
                              ×
                              14
                              
                              
                                 (directions)
                              
                            rays are fired from the bounding box to the assembly. 
                              n
                            is the number of rays fired from one side, and in this case, the initial 
                              n
                            was set at 100. The internal features are not supposed to be hit first by the rays. Therefore, we can obtain the internal features of the assembly by excluding the parts hit by rays from every part.

In the second approach, several bounding boxes that enclose every part comprising the assembly are created. Then, 
                              n
                              ×
                              n
                              ×
                              14
                              ×
                              m
                              
                              
                                 (parts)
                              
                            rays are fired from every part, with the initial 
                              n
                            set at 10 in this case, such that all the rays fired from the internal features strike the objects that are hiding them. Therefore, if every ray fired from a given part strikes something, that part can be considered an internal feature.

Ray casting at the part level is done first, and ray casting at the feature level is done afterwards. If a part is found to be internal, then subordinate features of the part become internal features automatically. The value of 
                              
                                 
                                    N
                                 
                                 
                                    i
                                 
                              
                            will be −1 for every internal feature. The time required to detect internal features is proportional to the number of rays fired. If an assembly has 30 parts, the number of rays fired in the two approaches will be 140000 and 42000, respectively. We used both approaches interchangeably.

It is practically impossible to project rays from every possible direction although the accuracy of detection is normally proportional to the number of rays. Therefore, rays are projected from the inside as well as the outside to improve the accuracy of detecting internal features. As a result, every internal feature was perfectly found in the four test cases used in this study. If a feature is not detected as an internal feature and has high 
                              
                                 
                                    P
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    C
                                 
                                 
                                    i
                                 
                              
                            of Eq. (1) at the same time, the feature will remain at low LODs. It would cause an increase in data size from containing unnecessary features.

To simplify an assembly model, it is necessary to prioritize and rearrange all its features using 
                              
                                 
                                    F
                                 
                                 
                                    i
                                 
                              
                           , which can be obtained by following the above procedures. Fig. 14
                            shows the details of the procedure of prioritizing, rearranging, and simplifying features. Examples of model trees before and after simplification are shown in  Fig. 14(a) and (b). First, all the features are prioritized according to their values, as shown in Fig. 14(c). Second, they are rearranged according to their values, as shown in Fig. 14(d). Finally, starting from the bottom, a number of features are simplified to the LOD set by the user. As shown in Fig. 14(e), the bottom three features are eliminated while the top two features survive, because the LOD is set at 40%. The reason we target every feature in an assembly, and not in a part, is that we want the importance of a feature to be considered from the perspective of the entire assembly.

Rearranging features can ensure that a high scoring feature will survive longer in the simplification process. However, the shape of the rearranged model may be different from that of the original model because Boolean operations such as union and subtraction are not commutative operations. Therefore, we used a rearranging algorithm, considering the effective volume of features, which was proposed in the previous research  [6].

The simplified geometric data is merged with non-geometric data such as specifications, and is exported from the simplification system. The geometric data is definitely exported as polygon- or b-rep-based single data, without any modeling history to protect the intellectual property of equipment suppliers. Shipyards can store the merged data in the equipment catalog database afterwards.

@&#IMPLEMENTATION@&#

A prototype system has been developed in the following environment. 
                           
                              -
                              OS: Windows 7 64-bit

Programming language: C++, MFC

XML parser: MSXML 4.0

Geometric modeling kernel: ACIS R23

CAD adaptor: 3D InterOp R23

Visualization engine: HOOPS 1919

The system structure was designed as shown in Fig. 15
                        . The application function layer consists of the most important modules as regards the simplification, management, and manipulation of geometric and non-geometric information. The system can import and export the data in the data layer. Geometric data are processed and visualized in the geometry-processing layer.

Four test cases including a control valve and a butterfly valve were used to verify the efficacy of the proposed method. These test cases were provided by the “D” shipbuilding company in Korea. These test cases are from general equipment. Most of equipment installed in a ship has similar complexity with these test cases.


                        Table 4
                         shows the original shapes and the number of parts (features), and the constraints and ports of the control valve and butterfly valve. The red-colored features represent ports.


                        Tables 5 and 6
                        
                         show the results of simplification in the test cases. We set the initial weighting factors of volume, port, outer boundary, and constraint to 0.4:0.2:0.2:0.2, respectively, at a ratio of 2:1:1:1. The model’s connectivity is maintained until these factors reach a critical LOD, which was 23% and 31% in the cases, after which separation of the model takes place. The removed feature that causes the model to separate is not considered as a constraint because the number of constraints is the same. The features that represent ports, outer boundaries, and constraints are also maintained. On the other hand, the features that represent internal features are removed at a significantly early stage of simplification. The term “external features” means adjacent features or neutral features that were gradually eliminated with a decrease in the LOD. The elapsed time required for importing, simplifying, and exporting data was less than 2 min in both cases.

The main purpose of simplifying 3D CAD assembly data is to reduce data size and simplify shapes. As shown in Fig. 16
                        , the data size (.sat) decreased as the LOD decreased. The data size at the critical LOD was 25% and 22% of the original data size for the control valve and butterfly valve, respectively, while the models maintained the main characteristics of the original models even at the critical LOD.

The difference between the simplified models depending on the simplification criteria used, is shown in Fig. 17
                         for both test cases. Fig. 17(a) shows the results when feature volume alone is considered as the simplification criterion, and Fig. 17(b) shows the results obtained using the proposed method. Fig. 17(c) shows the models as they were manually simplified by a professional modeler. As can be seen in Fig. 17(a), the model separated in both cases, and the outer boundary of the model was not preserved, especially in the case of the control valve. On the contrary, the models in Fig. 17(b) display a high degree of similarity to those in Fig. 17(c), as compared to the models in Fig. 17(a).

Additional experiments were performed with other test cases: air compressor 3D CAD assembly data and engine blower 3D CAD assembly data. Simplification results of the test cases are shown in Fig. 18
                        . These experimental results also show that the change in the principle dimensions is minimized and ports are preserved as long as possible as the 3D CAD assembly data simplification proceeds.

It is true that the cost for data storage keeps decreasing. Nevertheless, shipyards consider data storage as one of the most significant considerations because a ship or plant consists of millions of components. Moreover, if the data size of 3D CAD data decreases, the number of components which can be processed on a memory increases from the view point of computing power. Data size that a computer can process depends on the capacity of CPU (GPU). The more we can decrease data size of 3D CAD data, the more equipment 3D CAD data can be processed.


                        Table 7
                         shows the results of comparing original and simplified 3D CAD data with respect to CPU memory occupation. The ratio of CPU memory occupation is almost similar to that of data size. In conclusion, the amount of data CPU can process increased quadruple in maximum case when simplified 3D CAD data in this study is used.

Persons concerned with equipment catalogs at the “D” Shipbuilding Company in Korea were generally satisfied with our simplified results. However, comments regarding improvements were made and are summarized as future research issues in the Conclusion section.

Simplification technology developed in this study aims at facilitating the use of equipment 3D CAD assembly data in plant 3D CAD systems. For this, the evaluation metrics in Eq. (1) is defined to consider the characteristics of 3D CAD assembly data and plant 3D CAD systems. Feature volume, assembly constraint, and adjacent feature are criteria reflecting the characteristics of 3D CAD assembly data. Port, outer boundary, and internal features are criteria reflecting the requirement of equipment 3D CAD data for the system-level design in plant 3D CAD systems. Therefore, the simplification technology can be applied to other industries such as chemical, nuclear, power generation, oil and gas industries where equipment 3D CAD data are created by mechanical 3D CAD systems and system-level design is performed by plant 3D CAD systems using equipment 3D CAD data.

@&#CONCLUSION@&#

In this study, we first discussed the difference between shipyards and equipment suppliers with regard to the complexity of 3D CAD data. In the process of building an equipment catalog database, shipyards need to make simplified 3D CAD data to reduce the amount of data to be stored and manipulated in large 3D CAD models of the total ship including all systems installed, which leads to a significant waste of time and money.

Previous studies on the simplification of 3D CAD data were reviewed, and the evaluation metrics were proposed considering geometric and non-geometric information such as feature volume, the modeling requirements of shipyards (ports and outer boundaries), and the characteristics of assembly data (constraints and internal features). We also proposed the operations that are needed to proceed with simplification, which include ray casting and feature rearrangement. A simplification system was implemented and used to conduct four different test cases. The results showed that the data to be stored could be reduced to at least 25% of the original 3D CAD assembly data while ports, outer boundaries, and connectivity between CAD parts could be maintained. On the other hand, other features including internal features were simplified more quickly.

This study has following generalities with respect to the simplification operation and evaluation metrics required for the simplification of 3D CAD data. First, we proposed an evaluation metrics which can calculate the importance of features of 3D CAD model considering multiple simplification criteria. Second, we applied a general feature rearrangement method proposed by Lee  [6] for the simplification operation of feature-based 3D CAD data. Third, the essential technologies that we developed to detect adjacent features, internal features, and outer boundary features are universally applicable for the simplification of 3D CAD data.

Novelty of this study is to propose the evaluation metrics applicable for the feature-based simplification method. The evaluation metrics that corresponds to the quadratic error metrics in the polygon-based simplification method is essential for the progressive LOD control in the feature-based simplification method. To the best of our knowledge, very few studies have been reported on the evaluation metrics considering multiple simplification criteria and allowing discriminatory priority of specific criteria for the feature-based simplification of 3D CAD assembly data.

A method that can consider more general connectivity is still needed, and is a subject for future study. At present, it is difficult to measure the quality of simplified data. The simplified results are usually evaluated in terms of similarity of shape, data size, and the number of features. In this study, the similarity of shape could be only measured by the human eye. It would help in determining the weighting factors if there were a method for calculating the similarity of shape in the original model and the simplified model. Therefore, a comprehensive method of measurement is needed so that the results of simplification can be objectively evaluated and compared.

@&#ACKNOWLEDGMENTS@&#

This research was supported by the Industrial Strategic Technology Program (Project ID 10040162) and the Technology Innovation Program (Project ID 2011T100200145) funded by the Ministry of Knowledge Economy of the Korean government. The authors gratefully acknowledge these supports.

@&#REFERENCES@&#

